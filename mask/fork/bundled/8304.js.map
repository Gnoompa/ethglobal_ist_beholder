{"version":3,"file":"bundled/8304.js","mappings":"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AACD;AACA;AACA;AACA,iBAAiB,8BAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAE8G;AAC9G;;;;;;;ACpHA;AAC+E;AAChD;AAC0C;AACQ;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,wCAAwC,cAAc;AACtD,eAAe,YAAY;AAC3B;AACA;AACA,GAAG;AACH,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE,eAAe;AACjB;AACA;AACA,mCAAmC,kBAAkB,GAAG;AACxD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,mBAAmB,CAAC,+CAAmB,EAAE,QAAQ;AACvE;AACA,GAAG,uBAAuB,mBAAmB,CAAC,0CAAmB;AACjE;AACA,GAAG;AACH;;AAEsC;AACtC;;;;;;;;;;;;;ACjDA;AAC+B;;AAE/B,wCAAwC,gDAAmB;AAC3D,6BAA6B,6CAAgB;AAC7C;;AAE+C;AAC/C;;;;;;;;;;ACR0C;AACnC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,eAAe;AACjF,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzBsC;AACA;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAG;AAClB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAQ;AACtC;AACA;AACA;AACA,CAAC;AACD;AACO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA,8CAA8C,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA,8CAA8C,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB;;;;;;;;;;;;;;;;AC7La;AACG;AACzC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,4DAAQ,2CAA2C,mBAAmB;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,4DAAQ,2CAA2C,mBAAmB;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAI;AACnB;AACA;AACA,6BAA6B,4DAAQ;AACrC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,4DAAQ,iBAAiB,mBAAmB;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAQ;AACpC;AACA;AACA;AACA,CAAC;AACD;AACO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA,8CAA8C,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA,8CAA8C,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qBAAqB;AAC5D,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB","sources":["webpack://mask-network/./packages/encryption/src/encryption/DecryptionTypes.ts","webpack://mask-network/./packages/injected-script/sdk/index.ts","webpack://mask-network/./packages/mask/shared-ui/hooks/createHook.ts","webpack://mask-network/./packages/mask/shared-ui/hooks/useAppearance.ts","webpack://mask-network/./packages/mask/shared-ui/hooks/useLanguage.ts","webpack://mask-network/./packages/mask/shared-ui/hooks/useUserContext.ts","webpack://mask-network/./packages/mask/shared-ui/initialization/index.ts","webpack://mask-network/./packages/mask/shared-ui/service.ts","webpack://mask-network/./packages/mask/shared-ui/utils/createNormalReactRoot.tsx","webpack://mask-network/./packages/shared-base/src/types/Observable.ts","webpack://mask-network/./node_modules/.pnpm/@tanstack+query-sync-storage-persister@4.35.0/node_modules/@tanstack/query-sync-storage-persister/build/lib/index.mjs","webpack://mask-network/./packages/shared/src/UI/contexts/localStoragePersist.ts","webpack://mask-network/./packages/theme/src/Components/TextOverflowTooltip/index.tsx","webpack://mask-network/./packages/theme/src/ShadowRoot/ShadowRootSetup.tsx","webpack://mask-network/./packages/theme/src/UIHelper/useUserPrefersColorScheme.ts","webpack://mask-network/./packages/web3-shared/evm/src/helpers/isReadonlyMethodType.ts","webpack://mask-network/./node_modules/.pnpm/@mui+styled-engine@5.10.8_@emotion+react@11.11.1_@emotion+styled@11.11.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js","webpack://mask-network/./node_modules/.pnpm/clsx@1.2.1/node_modules/clsx/dist/clsx.m.js","webpack://mask-network/./node_modules/.pnpm/react@0.0.0-experimental-0a360642d-20230711/node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://mask-network/./node_modules/.pnpm/react@0.0.0-experimental-0a360642d-20230711/node_modules/react/jsx-runtime.js","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query-persist-client@4.35.0_@tanstack+react-query@4.29.25/node_modules/@tanstack/react-query-persist-client/build/lib/_virtual/_rollupPluginBabelHelpers.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+query-persist-client-core@4.35.0/node_modules/@tanstack/query-persist-client-core/build/lib/persist.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query-persist-client@4.35.0_@tanstack+react-query@4.29.25/node_modules/@tanstack/react-query-persist-client/build/lib/PersistQueryClientProvider.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/isRestoring.mjs","webpack://mask-network/./node_modules/.pnpm/@masknet+kit@0.1.2/node_modules/@masknet/kit/esm/web/document.readyState.js","webpack://mask-network/./node_modules/.pnpm/ts-results-es@4.0.0/node_modules/ts-results-es/dist/esm/option.js","webpack://mask-network/./node_modules/.pnpm/ts-results-es@4.0.0/node_modules/ts-results-es/dist/esm/result.js"],"sourcesContent":["import type { TypedMessage } from '@masknet/typed-message'\nimport type { ProfileIdentifier, AESCryptoKey, EC_Public_CryptoKey } from '@masknet/base'\nimport type { PayloadParseResult, SupportedPayloadVersions } from '../payload/index.js'\n\nexport interface DecryptOptions {\n    message: PayloadParseResult.Payload\n    onDecrypted?(message: TypedMessage): void\n    signal?: AbortSignal\n}\nexport interface DecryptIO {\n    /** Return the cached post key for this payload. */\n    getPostKeyCache(): Promise<AESCryptoKey | null>\n    /**\n     * Store the post key into the cache so next time it will be much faster.\n     * @param key Post AES key\n     */\n    setPostKeyCache(key: AESCryptoKey): Promise<void>\n    /**\n     * Checkout if the host has the local key of the given ProfileIdentifier.\n     * @param author Author of this payload\n     */\n    hasLocalKeyOf(author: ProfileIdentifier): Promise<boolean>\n    /**\n     * Try to decrypt message by someone's localKey.\n     *\n     * Host must try authorHint's localKey if they have access to.\n     *\n     * Host may try other localKeys they owned even not listed in the authorHint.\n     *\n     * @param authorHint A hint for searching the localKey.\n     * @param data Encrypted data\n     * @param iv\n     * @returns The decrypted data\n     */\n    decryptByLocalKey(\n        authorHint: ProfileIdentifier | null,\n        data: Uint8Array,\n        iv: Uint8Array,\n    ): Promise<Uint8Array | ArrayBuffer>\n    /**\n     * If the author is null, the host should use some heuristic approach (e.g. where they found the post).\n     * @param author ProfileIdentifier of the author. Might be empty.\n     */\n    queryAuthorPublicKey(author: ProfileIdentifier | null, signal?: AbortSignal): Promise<EC_Public_CryptoKey | null>\n    /**\n     * Query the key from the gun.\n     *\n     * Error from this function will become a fatal error.\n     */\n    queryPostKey_version40(iv: Uint8Array): Promise<DecryptStaticECDH_PostKey | null>\n    /**\n     * Query the key from the gun.\n     *\n     * This should be an infinite async iterator that listen to the gun network until the AbortSignal is triggered.\n     *\n     * Error from this function will become a fatal error.\n     */\n    queryPostKey_version39(iv: Uint8Array, signal?: AbortSignal): AsyncIterableIterator<DecryptStaticECDH_PostKey>\n    /**\n     * Query the key from the gun.\n     *\n     * This should be an infinite async iterator that listen to the gun network until the AbortSignal is triggered.\n     *\n     * Error from this function will become a fatal error.\n     */\n    queryPostKey_version38(iv: Uint8Array, signal?: AbortSignal): AsyncIterableIterator<DecryptStaticECDH_PostKey>\n    /**\n     * Query the key from the gun.\n     *\n     * This should be an infinite async iterator that listen to the gun network until the AbortSignal is triggered.\n     *\n     * Error from this function will become a fatal error.\n     */\n    queryPostKey_version37(iv: Uint8Array, signal?: AbortSignal): AsyncIterableIterator<DecryptEphemeralECDH_PostKey>\n    /**\n     * Derive a group of AES key by ECDH(selfPriv, targetPub).\n     *\n     * Host should derive a new AES-GCM key for each private key they have access to.\n     *\n     * If the provided key cannot derive AES with any key (e.g. The given key is ED25519 but there is only P-256 private keys)\n     * please return an empty array.\n     *\n     * Error from this function will become a fatal error.\n     * @param publicKey The public key used in ECDH\n     */\n    deriveAESKey(publicKey: EC_Public_CryptoKey): Promise<AESCryptoKey[]>\n}\nexport interface DecryptStaticECDH_PostKey {\n    encryptedPostKey: Uint8Array\n    postKeyIV: Uint8Array\n}\nexport interface DecryptEphemeralECDH_PostKey {\n    encryptedPostKey: Uint8Array\n    /** For the first time encryption, it might be included in the post payload. */\n    ephemeralPublicKey?: EC_Public_CryptoKey\n    ephemeralPublicKeySignature?: Uint8Array\n}\nexport enum DecryptProgressKind {\n    Success = 'success',\n    Error = 'error',\n    Info = 'info',\n    Progress = 'progress',\n}\nexport interface DecryptIntermediateProgress {\n    type: DecryptProgressKind.Progress\n    event: DecryptIntermediateProgressKind\n}\nexport type DecryptProgress = DecryptSuccess | DecryptError | DecryptIntermediateProgress | DecryptReportedInfo\nexport interface DecryptReportedInfo {\n    type: DecryptProgressKind.Info\n    iv?: Uint8Array\n    claimedAuthor?: ProfileIdentifier\n    publicShared?: boolean\n    version?: SupportedPayloadVersions\n    isAuthorOfPost?: boolean\n}\nexport interface DecryptIntermediateProgress {\n    type: DecryptProgressKind.Progress\n    event: DecryptIntermediateProgressKind\n}\nexport enum DecryptIntermediateProgressKind {\n    TryDecryptByE2E = 'E2E',\n}\nexport interface DecryptSuccess {\n    type: DecryptProgressKind.Success\n    content: TypedMessage\n}\n// TODO: rename as DecryptErrorReasons\nexport enum DecryptErrorReasons {\n    PayloadBroken = '[@masknet/encryption] Payload is broken.',\n    PayloadDecryptedButTypedMessageBroken = \"[@masknet/encryption] Payload decrypted, but it's inner TypedMessage is broken.\",\n    CannotDecryptAsAuthor = '[@masknet/encryption] Failed decrypt as the author of this payload.',\n    DecryptFailed = '[@masknet/encryption] Post key found, but decryption failed.',\n    AuthorPublicKeyNotFound = \"[@masknet/encryption] Cannot found author's public key\",\n    PrivateKeyNotFound = '[@masknet/encryption] Cannot continue to decrypt because there is no private key found.',\n    NotShareTarget = '[@masknet/encryption] No valid key is found. Likely this post is not shared with you',\n    // Not used in this library.\n    UnrecognizedAuthor = '[@masknet/encryption] No author is recognized which is required for the image steganography decoding.',\n    CurrentProfileDoesNotConnectedToPersona = '[@masknet/encryption] Cannot decrypt by E2E because no persona is linked with the current profile.',\n    NoPayloadFound = '[@masknet/encryption] No payload found in this material.',\n}\nexport class DecryptError extends Error {\n    static Reasons = DecryptErrorReasons\n    readonly type = DecryptProgressKind.Error\n    constructor(\n        public override message: DecryptErrorReasons,\n        cause: any,\n        public recoverable = false,\n    ) {\n        super(message, { cause })\n    }\n}\n","import { BrowserProvider } from './Browser.js'\nimport { Coin98Provider, Coin98ProviderType } from './Coin98.js'\nimport { CoinbaseProvider } from './Coinbase.js'\nimport { OKXProvider } from './OKX.js'\nimport { PhantomProvider } from './Phantom.js'\nimport { SolflareProvider } from './Solflare.js'\nimport { OperaProvider } from './Opera.js'\nimport { CloverProvider } from './Clover.js'\nimport { MetaMaskProvider } from './MetaMask.js'\nimport { sendEvent, rejectPromise, resolvePromise } from './utils.js'\nimport { CustomEventId, decodeEvent } from '../shared/index.js'\n\nexport type { EthereumProvider, InternalEvents } from '../shared/index.js'\nexport { BaseProvider } from './Base.js'\nexport { BaseInjectedProvider as InjectedProvider } from './BaseInjected.js'\n\nexport const injectedCoin98EVMProvider = new Coin98Provider(Coin98ProviderType.EVM)\nexport const injectedCoin98SolanaProvider = new Coin98Provider(Coin98ProviderType.Solana)\nexport const injectedPhantomProvider = new PhantomProvider()\nexport const injectedSolflareProvider = new SolflareProvider()\nexport const injectedBrowserProvider = new BrowserProvider()\nexport const injectedMetaMaskProvider = new MetaMaskProvider()\nexport const injectedCoinbaseProvider = new CoinbaseProvider()\nexport const injectedOKXProvider = new OKXProvider()\nexport const injectedOperaProvider = new OperaProvider()\nexport const injectedCloverProvider = new CloverProvider()\n\n// Please keep this list update to date\nconst Providers = [\n    injectedCoinbaseProvider,\n    injectedOKXProvider,\n    injectedOperaProvider,\n    injectedCloverProvider,\n    injectedBrowserProvider,\n    injectedCoin98EVMProvider,\n    injectedCoin98SolanaProvider,\n    injectedPhantomProvider,\n]\n\nexport function pasteText(text: string) {\n    sendEvent('paste', text)\n}\nexport function pasteImage(image: Uint8Array) {\n    sendEvent('pasteImage', Array.from(image))\n}\nexport function pasteInstagram(image: Uint8Array) {\n    sendEvent('instagramUpload', Array.from(image))\n}\nexport function inputText(text: string) {\n    sendEvent('input', text)\n}\nexport function hookInputUploadOnce(\n    format: string,\n    fileName: string,\n    image: Uint8Array,\n    triggerOnActiveElementNow = false,\n) {\n    sendEvent('hookInputUploadOnce', format, fileName, Array.from(image), triggerOnActiveElementNow)\n}\n\nif (typeof location === 'object' && location.protocol.includes('extension')) {\n    console.warn(\n        'This package is not expected to be imported in background script or the extension script. Please check your code.',\n    )\n}\n\nglobalThis.document?.addEventListener?.(CustomEventId, (e) => {\n    const r = decodeEvent((e as CustomEvent).detail)\n    if (r[1].length < 1) return\n\n    switch (r[0]) {\n        case 'resolvePromise':\n            return resolvePromise(...r[1])\n        case 'rejectPromise':\n            return rejectPromise(...r[1])\n\n        // web3\n        case 'web3BridgeEmitEvent': {\n            const [pathname, eventName, data] = r[1]\n            Providers.filter((x) => x.pathname === pathname).forEach((x) => x?.emit(eventName, data))\n            break\n        }\n        case 'web3BridgeBindEvent':\n        case 'web3BridgeSendRequest':\n        case 'web3BridgeExecute':\n        case 'web3UntilBridgeOnline':\n        case 'web3BridgePrimitiveAccess':\n            break\n\n        // misc\n        case 'input':\n        case 'paste':\n        case 'pasteImage':\n        case 'instagramUpload':\n        case 'hookInputUploadOnce':\n            break\n        default:\n            const neverEvent: never = r[0]\n            console.log('[@masknet/injected-script]', neverEvent, 'not handled')\n    }\n})\n","/// <reference types=\"react/canary\" />\nimport { use, cache } from 'react'\nimport { ValueRef } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\n\n// Do not move or export this function.\n// This function should not be encouraged to use everywhere\n/**\n * @internal\n * @deprecated\n */\nexport function createHook<T>(f: () => Promise<T>, subscribe: (callback: () => void) => void) {\n    const Request = cache((_cacheKey: number) => f())\n    const cacheKey = new ValueRef(0)\n    subscribe(() => (cacheKey.value += 1))\n\n    return function useData() {\n        return use(Request(useValueRef(cacheKey)))\n    }\n}\n","import { MaskMessages } from '@masknet/shared-base'\nimport Services from '#services'\nimport { createHook } from './createHook.js'\n\nexport const useAppearance = createHook(Services.Settings.getTheme, MaskMessages.events.appearanceSettings.on)\n","import { MaskMessages } from '@masknet/shared-base'\nimport Services from '#services'\nimport { createHook } from './createHook.js'\n\nexport const useLanguage = createHook(Services.Settings.getLanguage, MaskMessages.events.languageSettings.on)\n","import { PersistentStorages, type BackupConfig } from '@masknet/shared-base'\nimport { useCallback, useMemo } from 'react'\nimport { createContainer } from 'unstated-next'\nimport { useSubscription } from 'use-subscription'\n\nfunction useUserContext() {\n    const user = useSubscription(PersistentStorages.Settings.storage.backupConfig.subscription)\n\n    const updateUser = useCallback(\n        async (obj: Partial<BackupConfig>) => {\n            await PersistentStorages.Settings.storage.backupConfig.setValue({\n                ...user,\n                ...obj,\n                backupPassword: obj.backupPassword ? btoa(obj.backupPassword) : user.backupPassword,\n            })\n        },\n        [user],\n    )\n\n    const result = useMemo(() => {\n        try {\n            const backupPassword = user.backupPassword && atob(user.backupPassword)\n            return {\n                ...user,\n                backupPassword,\n            }\n        } catch {\n            // Maybe `backupPassword` is not base64-encoded.\n            return user\n        }\n    }, [user, updateUser])\n\n    return {\n        user: result,\n        updateUser,\n    }\n}\n\nexport const UserContext = createContainer(useUserContext)\n","import './fetch.js'\nimport './debugger.js'\nimport './async-setup.js'\n\nawait import(/* webpackMode: 'eager' */ './post-async-setup.js')\n","// Notice, this module itself is not HMR ready.\n// If you change this file to add a new service, you need to reload.\n// This file should not rely on any other in-project files unless it is HMR ready.\nimport {\n    AsyncCall,\n    AsyncGeneratorCall,\n    type AsyncCallOptions,\n    type CallbackBasedChannel,\n    type EventBasedChannel,\n    type AsyncVersionOf,\n    type AsyncGeneratorVersionOf,\n} from 'async-call-rpc/full'\nimport { WebExtensionMessage, assertNotEnvironment, Environment } from '@dimensiondev/holoflows-kit'\nimport { serializer } from '../../shared-base/src/serializer/index.js'\nimport type {\n    BackupService,\n    CryptoService,\n    GeneratorServices as GeneratorServicesType,\n    HelperService,\n    IdentityService,\n    SettingsService,\n    SiteAdaptorService,\n    Services as ServicesType,\n    WalletService,\n} from '../background/services/types.js'\nimport { setDebugObject } from '@masknet/shared-base'\nassertNotEnvironment(Environment.ManifestBackground)\n\nconst message = new WebExtensionMessage<Record<string, any>>({ domain: '$' })\nconst log: AsyncCallOptions['log'] = {\n    type: 'pretty',\n    requestReplay: process.env.NODE_ENV === 'development',\n    sendLocalStack: process.env.NODE_ENV === 'development',\n}\n\nexport const Services: ServicesType = {\n    Crypto: add<CryptoService>('Crypto'),\n    Identity: add<IdentityService>('Identity'),\n    Backup: add<BackupService>('Backup'),\n    Helper: add<HelperService>('Helper'),\n    SiteAdaptor: add<SiteAdaptorService>('SiteAdaptor'),\n    Settings: add<SettingsService>('Settings'),\n    Wallet: add<WalletService>('Wallet'),\n}\nsetDebugObject('Services', Services)\nexport default Services\nexport const GeneratorServices: AsyncGeneratorVersionOf<GeneratorServicesType> = add('GeneratorServices', true) as any\n\n/**\n * Helper to add a new service to Services.* / GeneratorServices.* namespace.\n * @param key Name of the service. Used for better debugging.\n * @param generator Is the service is a generator?\n */\nfunction add<T extends object>(key: string, generator = false): AsyncVersionOf<T> {\n    const channel: EventBasedChannel | CallbackBasedChannel = message.events[key].bind(Environment.ManifestBackground)\n\n    const RPC = (generator ? AsyncGeneratorCall : AsyncCall) as any as typeof AsyncCall\n    const service = RPC<T>(null, {\n        key,\n        serializer,\n        log,\n        channel,\n        strict: true,\n        thenable: false,\n    })\n    return service\n}\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { DisableShadowRootContext } from '@masknet/theme'\n\nfunction cleanup() {\n    if (process.env.NODE_ENV === 'development') {\n        // Make the document cleaner\n        setTimeout(() => [...document.querySelectorAll('script')].forEach((x) => x.remove()), 200)\n    }\n}\nfunction getContainer(container?: HTMLElement) {\n    if (!container) container = document.getElementById('root') ?? void 0\n    if (!container) {\n        container = document.createElement('div')\n        document.body.appendChild(container)\n    }\n    return container\n}\nfunction Root(jsx: JSX.Element) {\n    return (\n        <StrictMode>\n            <DisableShadowRootContext.Provider value>{jsx}</DisableShadowRootContext.Provider>\n        </StrictMode>\n    )\n}\nexport function createNormalReactRoot(jsx: JSX.Element, dom?: HTMLElement) {\n    cleanup()\n    const container = getContainer(dom)\n    return createRoot(container).render(Root(jsx))\n}\n","import { Emitter, ALL_EVENTS } from '@servie/events'\nimport { EMPTY_LIST } from '../constants.js'\n\nfunction tick(callback: () => void) {\n    Promise.resolve().then(callback)\n}\n\nexport class ObservableWeakMap<K extends object, V> extends WeakMap<K, V> {\n    readonly ALL_EVENTS: typeof ALL_EVENTS = ALL_EVENTS\n\n    declare __brand: 'Map'\n\n    event = new Emitter<{ delete: [K]; set: [K, V]; [ALL_EVENTS]: [] }>()\n    override delete(key: K) {\n        const _ = super.delete(key)\n        tick(() => this.event.emit('delete', key))\n        return _\n    }\n    override set(key: K, value: V) {\n        const _ = super.set(key, value)\n        tick(() => this.event.emit('set', key, value))\n        return _\n    }\n}\nexport class ObservableMap<K, V> extends Map<K, V> {\n    readonly ALL_EVENTS: typeof ALL_EVENTS = ALL_EVENTS\n\n    declare __brand: 'Map'\n\n    event = new Emitter<{ delete: [K]; set: [K, V]; clear: []; [ALL_EVENTS]: [] }>()\n    private _asValues: V[] | undefined\n    get asValues() {\n        return (this._asValues ??= this.size ? [...this.values()] : EMPTY_LIST)\n    }\n    override clear() {\n        super.clear()\n        this._asValues = undefined\n        tick(() => this.event.emit('clear'))\n    }\n    override delete(key: K) {\n        const _ = super.delete(key)\n        this._asValues = undefined\n        tick(() => this.event.emit('delete', key))\n        return _\n    }\n    override set(key: K, value: V) {\n        const _ = super.set(key, value)\n        this._asValues = undefined\n        tick(() => this.event.emit('set', key, value))\n        this.event.emit('set', key, value)\n        return _\n    }\n}\nexport class ObservableSet<T> extends Set<T> {\n    readonly ALL_EVENTS: typeof ALL_EVENTS = ALL_EVENTS\n    declare __brand: 'ObservableSet'\n\n    event = new Emitter<{ delete: [T]; add: [T[]]; clear: []; [ALL_EVENTS]: [] }>()\n    private _asValues: T[] | undefined\n    get asValues() {\n        return (this._asValues ??= this.size ? [...this.values()] : EMPTY_LIST)\n    }\n    override clear() {\n        super.clear()\n        this._asValues = undefined\n        tick(() => this.event.emit('clear'))\n    }\n    override delete(key: T) {\n        const _ = super.delete(key)\n        this._asValues = undefined\n        tick(() => this.event.emit('delete', key))\n        return _\n    }\n    override add(...value: T[]) {\n        value.forEach((x) => super.add(x))\n        this._asValues = undefined\n        this.event.emit('add', value)\n        tick(() => this.event.emit('add', value))\n        return this\n    }\n}\n","function createSyncStoragePersister({\n  storage,\n  key = \"REACT_QUERY_OFFLINE_CACHE\",\n  throttleTime = 1000,\n  serialize = JSON.stringify,\n  deserialize = JSON.parse,\n  retry\n}) {\n  if (storage) {\n    const trySave = persistedClient => {\n      try {\n        storage.setItem(key, serialize(persistedClient));\n        return;\n      } catch (error) {\n        return error;\n      }\n    };\n\n    return {\n      persistClient: throttle(persistedClient => {\n        let client = persistedClient;\n        let error = trySave(client);\n        let errorCount = 0;\n\n        while (error && client) {\n          errorCount++;\n          client = retry == null ? void 0 : retry({\n            persistedClient: client,\n            error,\n            errorCount\n          });\n\n          if (client) {\n            error = trySave(client);\n          }\n        }\n      }, throttleTime),\n      restoreClient: () => {\n        const cacheString = storage.getItem(key);\n\n        if (!cacheString) {\n          return;\n        }\n\n        return deserialize(cacheString);\n      },\n      removeClient: () => {\n        storage.removeItem(key);\n      }\n    };\n  }\n\n  return {\n    persistClient: noop,\n    restoreClient: () => undefined,\n    removeClient: noop\n  };\n}\n\nfunction throttle(func, wait = 100) {\n  let timer = null;\n  let params;\n  return function (...args) {\n    params = args;\n\n    if (timer === null) {\n      timer = setTimeout(() => {\n        func(...params);\n        timer = null;\n      }, wait);\n    }\n  };\n} // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\nfunction noop() {}\n\nexport { createSyncStoragePersister };\n//# sourceMappingURL=index.mjs.map\n","import { createSyncStoragePersister } from '@tanstack/query-sync-storage-persister'\nimport type { PersistQueryClientOptions } from '@tanstack/react-query-persist-client'\n\nconst persister = createSyncStoragePersister({\n    storage: window.localStorage,\n})\n// We don't persist all queries but only those have the first key starts with '@@'\nexport const persistOptions: Omit<PersistQueryClientOptions, 'queryClient'> = {\n    persister,\n    dehydrateOptions: {\n        shouldDehydrateQuery: ({ queryKey }) => {\n            if (typeof queryKey[0] !== 'string') return false\n            return queryKey[0].startsWith('@@')\n        },\n    },\n}\n","import { Tooltip as MuiTooltip, type TooltipProps } from '@mui/material'\nimport { cloneElement, memo, type ReactElement } from 'react'\nimport type { ShadowRootTooltip } from '../index.js'\nimport { useDetectOverflow } from '../../hooks/index.js'\n\ninterface TextOverflowTooltipProps extends TooltipProps {\n    as?: typeof MuiTooltip | typeof ShadowRootTooltip\n    // cloneElement is used.\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    children: ReactElement\n}\n\nexport const TextOverflowTooltip = memo(({ children, as, ...rest }: TextOverflowTooltipProps) => {\n    const [overflow, ref] = useDetectOverflow()\n\n    const Tooltip = as ?? MuiTooltip\n    return (\n        <Tooltip {...rest} title={overflow ? rest.title : ''}>\n            {cloneElement(children, { ...children.props, ref })}\n        </Tooltip>\n    )\n})\n\nTextOverflowTooltip.displayName = 'TextOverflowTooltip'\n","import { ObservableMap } from '@masknet/shared-base'\nimport { StrictMode, useEffect, useState } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { PreventShadowRootEventPropagationListContext } from './Contexts.js'\n\n/**\n * This container is used to attach the single React root.\n * It does not contain direct DOM decedents.\n * All decedents are mounted via <Portal>.\n */\nlet globalContainer: HTMLElement\n/**\n * This container is prepared for all the Modals.\n */\nlet portalContainer: ShadowRoot\nexport type WrapJSX = ((jsx: React.ReactNode) => JSX.Element) | undefined\n/** @internal */\nexport const shadowEnvironmentMountingRoots = new ObservableMap<any, JSX.Element>()\n\nexport function setupReactShadowRootEnvironment(\n    init: ShadowRootInit,\n    preventEventPropagationList: Array<keyof HTMLElementEventMap>,\n    wrapJSX?: WrapJSX,\n) {\n    if (portalContainer) return portalContainer\n    // TODO: make sure globalContainer is the last DOM in the body?\n    globalContainer = document.body.appendChild(document.createElement('div'))\n    portalContainer = globalContainer.attachShadow(init)\n\n    // Note: This React Root does not expect to have any direct DOM children.\n    createRoot(globalContainer).render(\n        <StrictMode>\n            <MountingPoint wrapJSX={wrapJSX} preventPropagationList={preventEventPropagationList} />\n        </StrictMode>,\n    )\n    return portalContainer\n}\nfunction MountingPoint(props: { wrapJSX: WrapJSX; preventPropagationList: Array<keyof HTMLElementEventMap> }) {\n    const [children, setChildren] = useState<JSX.Element[]>([])\n    useEffect(() => {\n        shadowEnvironmentMountingRoots.event.on(shadowEnvironmentMountingRoots.ALL_EVENTS, () => {\n            setChildren(Array.from(shadowEnvironmentMountingRoots.values()))\n        })\n    }, [])\n    return (\n        <PreventShadowRootEventPropagationListContext.Provider value={props.preventPropagationList}>\n            {props.wrapJSX ? props.wrapJSX(children) : children}\n        </PreventShadowRootEventPropagationListContext.Provider>\n    )\n}\n\n/** @internal */\nexport const ref = {\n    get portalContainer(): Element | ShadowRoot {\n        let dom: Element | ShadowRoot\n        if (location.protocol.includes('extension')) dom = document.body\n        else if (globalThis.location.hostname === 'localhost') return document.body\n        else if (!portalContainer) throw new TypeError('Please call setupPortalShadowRoot first')\n        else dom = portalContainer\n\n        Object.defineProperty(ref, 'mountingPoint', { value: dom })\n        return dom\n    },\n}\n","import { type PaletteMode, useMediaQuery } from '@mui/material'\n\nexport function useSystemPreferencePalette(): PaletteMode {\n    return useMediaQuery('(prefers-color-scheme: dark)') ? 'dark' : 'light'\n}\n","import { EthereumMethodType } from '../types/index.js'\n\nexport const readonlyMethodType = [\n    EthereumMethodType.ETH_GET_CODE,\n    EthereumMethodType.ETH_GAS_PRICE,\n    EthereumMethodType.ETH_BLOCK_NUMBER,\n    EthereumMethodType.ETH_GET_BALANCE,\n    EthereumMethodType.ETH_GET_BLOCK_BY_NUMBER,\n    EthereumMethodType.ETH_GET_BLOCK_BY_HASH,\n    EthereumMethodType.ETH_GET_TRANSACTION_BY_HASH,\n    EthereumMethodType.ETH_GET_TRANSACTION_RECEIPT,\n    EthereumMethodType.ETH_GET_TRANSACTION_COUNT,\n    EthereumMethodType.ETH_GET_FILTER_CHANGES,\n    EthereumMethodType.ETH_NEW_PENDING_TRANSACTION_FILTER,\n    EthereumMethodType.ETH_ESTIMATE_GAS,\n    EthereumMethodType.ETH_CALL,\n    EthereumMethodType.ETH_GET_LOGS,\n] as const\nObject.freeze(readonlyMethodType)\nexport function isReadonlyMethodType(type: EthereumMethodType) {\n    return (readonlyMethodType as readonly EthereumMethodType[]).includes(type)\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache'; // prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst cache = createCache({\n  key: 'css',\n  prepend: true\n});\nexport default function StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    children\n  } = props;\n  return injectFirst ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nexport { _extends as extends };\n//# sourceMappingURL=_rollupPluginBabelHelpers.mjs.map\n","import { hydrate, dehydrate } from '@tanstack/query-core';\n\n/**\n * Checks if emitted event is about cache change and not about observers.\n * Useful for persist, where we only want to trigger save when cache is changed.\n */\nconst cacheableEventTypes = ['added', 'removed', 'updated'];\n\nfunction isCacheableEventType(eventType) {\n  return cacheableEventTypes.includes(eventType);\n}\n/**\n * Restores persisted data to the QueryCache\n *  - data obtained from persister.restoreClient\n *  - data is hydrated using hydrateOptions\n * If data is expired, busted, empty, or throws, it runs persister.removeClient\n */\n\n\nasync function persistQueryClientRestore({\n  queryClient,\n  persister,\n  maxAge = 1000 * 60 * 60 * 24,\n  buster = '',\n  hydrateOptions\n}) {\n  try {\n    const persistedClient = await persister.restoreClient();\n\n    if (persistedClient) {\n      if (persistedClient.timestamp) {\n        const expired = Date.now() - persistedClient.timestamp > maxAge;\n        const busted = persistedClient.buster !== buster;\n\n        if (expired || busted) {\n          persister.removeClient();\n        } else {\n          hydrate(queryClient, persistedClient.clientState, hydrateOptions);\n        }\n      } else {\n        persister.removeClient();\n      }\n    }\n  } catch (err) {\n    if (process.env.NODE_ENV !== 'production') {\n      queryClient.getLogger().error(err);\n      queryClient.getLogger().warn('Encountered an error attempting to restore client cache from persisted location. As a precaution, the persisted cache will be discarded.');\n    }\n\n    persister.removeClient();\n  }\n}\n/**\n * Persists data from the QueryCache\n *  - data dehydrated using dehydrateOptions\n *  - data is persisted using persister.persistClient\n */\n\nasync function persistQueryClientSave({\n  queryClient,\n  persister,\n  buster = '',\n  dehydrateOptions\n}) {\n  const persistClient = {\n    buster,\n    timestamp: Date.now(),\n    clientState: dehydrate(queryClient, dehydrateOptions)\n  };\n  await persister.persistClient(persistClient);\n}\n/**\n * Subscribe to QueryCache and MutationCache updates (for persisting)\n * @returns an unsubscribe function (to discontinue monitoring)\n */\n\nfunction persistQueryClientSubscribe(props) {\n  const unsubscribeQueryCache = props.queryClient.getQueryCache().subscribe(event => {\n    if (isCacheableEventType(event.type)) {\n      persistQueryClientSave(props);\n    }\n  });\n  const unusbscribeMutationCache = props.queryClient.getMutationCache().subscribe(event => {\n    if (isCacheableEventType(event.type)) {\n      persistQueryClientSave(props);\n    }\n  });\n  return () => {\n    unsubscribeQueryCache();\n    unusbscribeMutationCache();\n  };\n}\n/**\n * Restores persisted data to QueryCache and persists further changes.\n */\n\nfunction persistQueryClient(props) {\n  let hasUnsubscribed = false;\n  let persistQueryClientUnsubscribe;\n\n  const unsubscribe = () => {\n    hasUnsubscribed = true;\n    persistQueryClientUnsubscribe == null ? void 0 : persistQueryClientUnsubscribe();\n  }; // Attempt restore\n\n\n  const restorePromise = persistQueryClientRestore(props).then(() => {\n    if (!hasUnsubscribed) {\n      // Subscribe to changes in the query cache to trigger the save\n      persistQueryClientUnsubscribe = persistQueryClientSubscribe(props);\n    }\n  });\n  return [unsubscribe, restorePromise];\n}\n\nexport { persistQueryClient, persistQueryClientRestore, persistQueryClientSave, persistQueryClientSubscribe };\n//# sourceMappingURL=persist.mjs.map\n","'use client';\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport * as React from 'react';\nimport { persistQueryClient } from '@tanstack/query-persist-client-core';\nimport { QueryClientProvider, IsRestoringProvider } from '@tanstack/react-query';\n\nconst PersistQueryClientProvider = ({\n  client,\n  children,\n  persistOptions,\n  onSuccess,\n  ...props\n}) => {\n  const [isRestoring, setIsRestoring] = React.useState(true);\n  const refs = React.useRef({\n    persistOptions,\n    onSuccess\n  });\n  React.useEffect(() => {\n    refs.current = {\n      persistOptions,\n      onSuccess\n    };\n  });\n  React.useEffect(() => {\n    let isStale = false;\n    setIsRestoring(true);\n    const [unsubscribe, promise] = persistQueryClient({ ...refs.current.persistOptions,\n      queryClient: client\n    });\n    promise.then(() => {\n      if (!isStale) {\n        refs.current.onSuccess == null ? void 0 : refs.current.onSuccess();\n        setIsRestoring(false);\n      }\n    });\n    return () => {\n      isStale = true;\n      unsubscribe();\n    };\n  }, [client]);\n  return /*#__PURE__*/React.createElement(QueryClientProvider, _extends({\n    client: client\n  }, props), /*#__PURE__*/React.createElement(IsRestoringProvider, {\n    value: isRestoring\n  }, children));\n};\n\nexport { PersistQueryClientProvider };\n//# sourceMappingURL=PersistQueryClientProvider.mjs.map\n","'use client';\nimport * as React from 'react';\n\nconst IsRestoringContext = /*#__PURE__*/React.createContext(false);\nconst useIsRestoring = () => React.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\nexport { IsRestoringProvider, useIsRestoring };\n//# sourceMappingURL=isRestoring.mjs.map\n","import { unreachable } from '../index.js';\nexport function waitDocumentReadyState(target) {\n    if (ok(target))\n        return Promise.resolve();\n    return new Promise((resolve) => {\n        const callback = () => {\n            if (ok(target)) {\n                resolve();\n                document.removeEventListener('readystatechange', callback);\n            }\n        };\n        document.addEventListener('readystatechange', callback, { passive: true });\n    });\n}\nfunction ok(target, current = document.readyState) {\n    return score(target) <= score(current);\n}\nfunction score(x) {\n    if (x === 'loading')\n        return 0;\n    if (x === 'interactive')\n        return 1;\n    if (x === 'complete')\n        return 2;\n    unreachable(x);\n}\n","import { toString } from './utils.js';\nimport { Ok, Err } from './result.js';\n/**\n * Contains the None value\n */\nvar NoneImpl = /** @class */ (function () {\n    function NoneImpl() {\n    }\n    NoneImpl.prototype.isSome = function () {\n        return false;\n    };\n    NoneImpl.prototype.isNone = function () {\n        return true;\n    };\n    NoneImpl.prototype[Symbol.iterator] = function () {\n        return {\n            next: function () {\n                return { done: true, value: undefined };\n            },\n        };\n    };\n    NoneImpl.prototype.unwrapOr = function (val) {\n        return val;\n    };\n    NoneImpl.prototype.expect = function (msg) {\n        throw new Error(\"\".concat(msg));\n    };\n    NoneImpl.prototype.unwrap = function () {\n        throw new Error(\"Tried to unwrap None\");\n    };\n    NoneImpl.prototype.map = function (_mapper) {\n        return this;\n    };\n    NoneImpl.prototype.mapOr = function (default_, _mapper) {\n        return default_;\n    };\n    NoneImpl.prototype.mapOrElse = function (default_, _mapper) {\n        return default_();\n    };\n    NoneImpl.prototype.or = function (other) {\n        return other;\n    };\n    NoneImpl.prototype.orElse = function (other) {\n        return other();\n    };\n    NoneImpl.prototype.andThen = function (op) {\n        return this;\n    };\n    NoneImpl.prototype.toResult = function (error) {\n        return Err(error);\n    };\n    NoneImpl.prototype.toString = function () {\n        return 'None';\n    };\n    return NoneImpl;\n}());\n// Export None as a singleton, then freeze it so it can't be modified\nexport var None = new NoneImpl();\nObject.freeze(None);\n/**\n * Contains the success value\n */\nvar SomeImpl = /** @class */ (function () {\n    function SomeImpl(val) {\n        if (!(this instanceof SomeImpl)) {\n            return new SomeImpl(val);\n        }\n        this.value = val;\n    }\n    SomeImpl.prototype.isSome = function () {\n        return true;\n    };\n    SomeImpl.prototype.isNone = function () {\n        return false;\n    };\n    /**\n     * Helper function if you know you have an Some<T> and T is iterable\n     */\n    SomeImpl.prototype[Symbol.iterator] = function () {\n        var obj = Object(this.value);\n        return Symbol.iterator in obj\n            ? obj[Symbol.iterator]()\n            : {\n                next: function () {\n                    return { done: true, value: undefined };\n                },\n            };\n    };\n    SomeImpl.prototype.unwrapOr = function (_val) {\n        return this.value;\n    };\n    SomeImpl.prototype.expect = function (_msg) {\n        return this.value;\n    };\n    SomeImpl.prototype.unwrap = function () {\n        return this.value;\n    };\n    SomeImpl.prototype.map = function (mapper) {\n        return Some(mapper(this.value));\n    };\n    SomeImpl.prototype.mapOr = function (_default_, mapper) {\n        return mapper(this.value);\n    };\n    SomeImpl.prototype.mapOrElse = function (_default_, mapper) {\n        return mapper(this.value);\n    };\n    SomeImpl.prototype.or = function (_other) {\n        return this;\n    };\n    SomeImpl.prototype.orElse = function (_other) {\n        return this;\n    };\n    SomeImpl.prototype.andThen = function (mapper) {\n        return mapper(this.value);\n    };\n    SomeImpl.prototype.toResult = function (error) {\n        return Ok(this.value);\n    };\n    /**\n     * Returns the contained `Some` value, but never throws.\n     * Unlike `unwrap()`, this method doesn't throw and is only callable on an Some<T>\n     *\n     * Therefore, it can be used instead of `unwrap()` as a maintainability safeguard\n     * that will fail to compile if the type of the Option is later changed to a None that can actually occur.\n     *\n     * (this is the `into_Some()` in rust)\n     */\n    SomeImpl.prototype.safeUnwrap = function () {\n        return this.value;\n    };\n    SomeImpl.prototype.toString = function () {\n        return \"Some(\".concat(toString(this.value), \")\");\n    };\n    SomeImpl.EMPTY = new SomeImpl(undefined);\n    return SomeImpl;\n}());\n// This allows Some to be callable - possible because of the es5 compilation target\nexport var Some = SomeImpl;\nexport var Option;\n(function (Option) {\n    /**\n     * Parse a set of `Option`s, returning an array of all `Some` values.\n     * Short circuits with the first `None` found, if any\n     */\n    function all() {\n        var options = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            options[_i] = arguments[_i];\n        }\n        var someOption = [];\n        for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {\n            var option = options_1[_a];\n            if (option.isSome()) {\n                someOption.push(option.value);\n            }\n            else {\n                return option;\n            }\n        }\n        return Some(someOption);\n    }\n    Option.all = all;\n    /**\n     * Parse a set of `Option`s, short-circuits when an input value is `Some`.\n     * If no `Some` is found, returns `None`.\n     */\n    function any() {\n        var options = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            options[_i] = arguments[_i];\n        }\n        // short-circuits\n        for (var _a = 0, options_2 = options; _a < options_2.length; _a++) {\n            var option = options_2[_a];\n            if (option.isSome()) {\n                return option;\n            }\n            else {\n                return option;\n            }\n        }\n        // it must be None\n        return None;\n    }\n    Option.any = any;\n    function isOption(value) {\n        return value instanceof Some || value === None;\n    }\n    Option.isOption = isOption;\n})(Option || (Option = {}));\n","import { toString } from './utils.js';\nimport { None, Some } from './option.js';\n/**\n * Contains the error value\n */\nexport var ErrImpl = /** @class */ (function () {\n    function ErrImpl(val) {\n        if (!(this instanceof ErrImpl)) {\n            return new ErrImpl(val);\n        }\n        this.error = val;\n        var stackLines = new Error().stack.split('\\n').slice(2);\n        if (stackLines && stackLines.length > 0 && stackLines[0].includes('ErrImpl')) {\n            stackLines.shift();\n        }\n        this._stack = stackLines.join('\\n');\n    }\n    ErrImpl.prototype.isOk = function () {\n        return false;\n    };\n    ErrImpl.prototype.isErr = function () {\n        return true;\n    };\n    ErrImpl.prototype[Symbol.iterator] = function () {\n        return {\n            next: function () {\n                return { done: true, value: undefined };\n            },\n        };\n    };\n    /**\n     * @deprecated in favor of unwrapOr\n     * @see unwrapOr\n     */\n    ErrImpl.prototype.else = function (val) {\n        return val;\n    };\n    ErrImpl.prototype.unwrapOr = function (val) {\n        return val;\n    };\n    ErrImpl.prototype.expect = function (msg) {\n        // The cause casting required because of the current TS definition being overly restrictive\n        // (the definition says it has to be an Error while it can be anything).\n        // See https://github.com/microsoft/TypeScript/issues/45167\n        throw new Error(\"\".concat(msg, \" - Error: \").concat(toString(this.error), \"\\n\").concat(this._stack), { cause: this.error });\n    };\n    ErrImpl.prototype.expectErr = function (_msg) {\n        return this.error;\n    };\n    ErrImpl.prototype.unwrap = function () {\n        // The cause casting required because of the current TS definition being overly restrictive\n        // (the definition says it has to be an Error while it can be anything).\n        // See https://github.com/microsoft/TypeScript/issues/45167\n        throw new Error(\"Tried to unwrap Error: \".concat(toString(this.error), \"\\n\").concat(this._stack), { cause: this.error });\n    };\n    ErrImpl.prototype.unwrapErr = function () {\n        return this.error;\n    };\n    ErrImpl.prototype.map = function (_mapper) {\n        return this;\n    };\n    ErrImpl.prototype.andThen = function (op) {\n        return this;\n    };\n    ErrImpl.prototype.mapErr = function (mapper) {\n        return new Err(mapper(this.error));\n    };\n    ErrImpl.prototype.mapOr = function (default_, _mapper) {\n        return default_;\n    };\n    ErrImpl.prototype.mapOrElse = function (default_, _mapper) {\n        return default_(this.error);\n    };\n    ErrImpl.prototype.or = function (other) {\n        return other;\n    };\n    ErrImpl.prototype.orElse = function (other) {\n        return other(this.error);\n    };\n    ErrImpl.prototype.toOption = function () {\n        return None;\n    };\n    ErrImpl.prototype.toString = function () {\n        return \"Err(\".concat(toString(this.error), \")\");\n    };\n    Object.defineProperty(ErrImpl.prototype, \"stack\", {\n        get: function () {\n            return \"\".concat(this, \"\\n\").concat(this._stack);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** An empty Err */\n    ErrImpl.EMPTY = new ErrImpl(undefined);\n    return ErrImpl;\n}());\n// This allows Err to be callable - possible because of the es5 compilation target\nexport var Err = ErrImpl;\n/**\n * Contains the success value\n */\nexport var OkImpl = /** @class */ (function () {\n    function OkImpl(val) {\n        if (!(this instanceof OkImpl)) {\n            return new OkImpl(val);\n        }\n        this.value = val;\n    }\n    OkImpl.prototype.isOk = function () {\n        return true;\n    };\n    OkImpl.prototype.isErr = function () {\n        return false;\n    };\n    /**\n     * Helper function if you know you have an Ok<T> and T is iterable\n     */\n    OkImpl.prototype[Symbol.iterator] = function () {\n        var obj = Object(this.value);\n        return Symbol.iterator in obj\n            ? obj[Symbol.iterator]()\n            : {\n                next: function () {\n                    return { done: true, value: undefined };\n                },\n            };\n    };\n    /**\n     * @see unwrapOr\n     * @deprecated in favor of unwrapOr\n     */\n    OkImpl.prototype.else = function (_val) {\n        return this.value;\n    };\n    OkImpl.prototype.unwrapOr = function (_val) {\n        return this.value;\n    };\n    OkImpl.prototype.expect = function (_msg) {\n        return this.value;\n    };\n    OkImpl.prototype.expectErr = function (msg) {\n        throw new Error(msg);\n    };\n    OkImpl.prototype.unwrap = function () {\n        return this.value;\n    };\n    OkImpl.prototype.unwrapErr = function () {\n        // The cause casting required because of the current TS definition being overly restrictive\n        // (the definition says it has to be an Error while it can be anything).\n        // See https://github.com/microsoft/TypeScript/issues/45167\n        throw new Error(\"Tried to unwrap Ok: \".concat(toString(this.value)), { cause: this.value });\n    };\n    OkImpl.prototype.map = function (mapper) {\n        return new Ok(mapper(this.value));\n    };\n    OkImpl.prototype.andThen = function (mapper) {\n        return mapper(this.value);\n    };\n    OkImpl.prototype.mapErr = function (_mapper) {\n        return this;\n    };\n    OkImpl.prototype.mapOr = function (_default_, mapper) {\n        return mapper(this.value);\n    };\n    OkImpl.prototype.mapOrElse = function (_default_, mapper) {\n        return mapper(this.value);\n    };\n    OkImpl.prototype.or = function (_other) {\n        return this;\n    };\n    OkImpl.prototype.orElse = function (_other) {\n        return this;\n    };\n    OkImpl.prototype.toOption = function () {\n        return Some(this.value);\n    };\n    /**\n     * Returns the contained `Ok` value, but never throws.\n     * Unlike `unwrap()`, this method doesn't throw and is only callable on an Ok<T>\n     *\n     * Therefore, it can be used instead of `unwrap()` as a maintainability safeguard\n     * that will fail to compile if the error type of the Result is later changed to an error that can actually occur.\n     *\n     * (this is the `into_ok()` in rust)\n     */\n    OkImpl.prototype.safeUnwrap = function () {\n        return this.value;\n    };\n    OkImpl.prototype.toString = function () {\n        return \"Ok(\".concat(toString(this.value), \")\");\n    };\n    OkImpl.EMPTY = new OkImpl(undefined);\n    return OkImpl;\n}());\n// This allows Ok to be callable - possible because of the es5 compilation target\nexport var Ok = OkImpl;\nexport var Result;\n(function (Result) {\n    /**\n     * Parse a set of `Result`s, returning an array of all `Ok` values.\n     * Short circuits with the first `Err` found, if any\n     */\n    function all() {\n        var results = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            results[_i] = arguments[_i];\n        }\n        var okResult = [];\n        for (var _a = 0, results_1 = results; _a < results_1.length; _a++) {\n            var result = results_1[_a];\n            if (result.isOk()) {\n                okResult.push(result.value);\n            }\n            else {\n                return result;\n            }\n        }\n        return new Ok(okResult);\n    }\n    Result.all = all;\n    /**\n     * Parse a set of `Result`s, short-circuits when an input value is `Ok`.\n     * If no `Ok` is found, returns an `Err` containing the collected error values\n     */\n    function any() {\n        var results = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            results[_i] = arguments[_i];\n        }\n        var errResult = [];\n        // short-circuits\n        for (var _a = 0, results_2 = results; _a < results_2.length; _a++) {\n            var result = results_2[_a];\n            if (result.isOk()) {\n                return result;\n            }\n            else {\n                errResult.push(result.error);\n            }\n        }\n        // it must be a Err\n        return new Err(errResult);\n    }\n    Result.any = any;\n    /**\n     * Wrap an operation that may throw an Error (`try-catch` style) into checked exception style\n     * @param op The operation function\n     */\n    function wrap(op) {\n        try {\n            return new Ok(op());\n        }\n        catch (e) {\n            return new Err(e);\n        }\n    }\n    Result.wrap = wrap;\n    /**\n     * Wrap an async operation that may throw an Error (`try-catch` style) into checked exception style\n     * @param op The operation function\n     */\n    function wrapAsync(op) {\n        try {\n            return op()\n                .then(function (val) { return new Ok(val); })\n                .catch(function (e) { return new Err(e); });\n        }\n        catch (e) {\n            return Promise.resolve(new Err(e));\n        }\n    }\n    Result.wrapAsync = wrapAsync;\n    function isResult(val) {\n        return val instanceof Err || val instanceof Ok;\n    }\n    Result.isResult = isResult;\n})(Result || (Result = {}));\n"],"names":["DecryptProgressKind","Success","Error","Info","Progress","DecryptIntermediateProgressKind","TryDecryptByE2E","DecryptErrorReasons","PayloadBroken","PayloadDecryptedButTypedMessageBroken","CannotDecryptAsAuthor","DecryptFailed","AuthorPublicKeyNotFound","PrivateKeyNotFound","NotShareTarget","UnrecognizedAuthor","CurrentProfileDoesNotConnectedToPersona","NoPayloadFound","DecryptError","message","recoverable","Reasons","type","constructor","cause","BrowserProvider","Coin98Provider","Coin98ProviderType","CoinbaseProvider","OKXProvider","PhantomProvider","SolflareProvider","OperaProvider","CloverProvider","MetaMaskProvider","sendEvent","rejectPromise","resolvePromise","CustomEventId","decodeEvent","BaseProvider","BaseInjectedProvider","InjectedProvider","injectedCoin98EVMProvider","EVM","injectedCoin98SolanaProvider","Solana","injectedPhantomProvider","injectedSolflareProvider","injectedBrowserProvider","injectedMetaMaskProvider","injectedCoinbaseProvider","injectedOKXProvider","injectedOperaProvider","injectedCloverProvider","Providers","pasteText","text","pasteImage","image","Array","from","pasteInstagram","inputText","hookInputUploadOnce","format","fileName","triggerOnActiveElementNow","location","protocol","includes","console","warn","globalThis","document","addEventListener","e","r","detail","length","pathname","eventName","data","filter","x","forEach","emit","neverEvent","log","use","cache","ValueRef","useValueRef","createHook","f","subscribe","Request","_cacheKey","cacheKey","value","useData","MaskMessages","Services","useAppearance","Settings","getTheme","events","appearanceSettings","on","useLanguage","getLanguage","languageSettings","PersistentStorages","useCallback","useMemo","createContainer","useSubscription","useUserContext","user","storage","backupConfig","subscription","updateUser","obj","setValue","backupPassword","btoa","result","atob","UserContext","AsyncCall","AsyncGeneratorCall","WebExtensionMessage","assertNotEnvironment","Environment","serializer","setDebugObject","ManifestBackground","domain","requestReplay","process","env","NODE_ENV","sendLocalStack","Crypto","add","Identity","Backup","Helper","SiteAdaptor","Wallet","GeneratorServices","key","generator","channel","bind","RPC","service","strict","thenable","StrictMode","createRoot","DisableShadowRootContext","cleanup","setTimeout","querySelectorAll","remove","getContainer","container","getElementById","createElement","body","appendChild","Root","jsx","Provider","createNormalReactRoot","dom","render","Emitter","ALL_EVENTS","EMPTY_LIST","tick","callback","Promise","resolve","then","ObservableWeakMap","WeakMap","event","delete","_","set","ObservableMap","Map","_asValues","asValues","size","values","clear","undefined","ObservableSet","Set","createSyncStoragePersister","persister","window","localStorage","persistOptions","dehydrateOptions","shouldDehydrateQuery","queryKey","startsWith","Tooltip","MuiTooltip","cloneElement","memo","useDetectOverflow","TextOverflowTooltip","children","as","rest","overflow","ref","title","props","displayName","useEffect","useState","PreventShadowRootEventPropagationListContext","globalContainer","portalContainer","shadowEnvironmentMountingRoots","setupReactShadowRootEnvironment","init","preventEventPropagationList","wrapJSX","attachShadow","MountingPoint","preventPropagationList","setChildren","hostname","TypeError","Object","defineProperty","useMediaQuery","useSystemPreferencePalette","EthereumMethodType","readonlyMethodType","ETH_GET_CODE","ETH_GAS_PRICE","ETH_BLOCK_NUMBER","ETH_GET_BALANCE","ETH_GET_BLOCK_BY_NUMBER","ETH_GET_BLOCK_BY_HASH","ETH_GET_TRANSACTION_BY_HASH","ETH_GET_TRANSACTION_RECEIPT","ETH_GET_TRANSACTION_COUNT","ETH_GET_FILTER_CHANGES","ETH_NEW_PENDING_TRANSACTION_FILTER","ETH_ESTIMATE_GAS","ETH_CALL","ETH_GET_LOGS","freeze","isReadonlyMethodType"],"sourceRoot":"","x_google_ignoreList":[10,16,17,18,19,20,21,22,23,25,26]}