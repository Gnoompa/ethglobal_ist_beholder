{"version":3,"file":"bundled/8757.js","mappings":"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,CAiCvC,CAAC;AACF,wDAAe,QAAQ;;;;;;;ACrGV;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;;AAGA;AACA,IAAI,IAA6B;AACjC;AACA;;;;;;;;ACpKY;;AAEZ;AACA;AACA;;AAEA,sBAAsB,cAAc;AACpC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtD+C,sBAAsB,4BAA4B,MAAM,yBAAC,MAAM,0DAA0D,CAAC,WAAC,eAAe,kBAAkB,kBAAkB,mFAAmF,gBAAgB,GAAG,2BAA2B,iBAAiB,6BAA6B,WAAC,MAAM,SAAS,gBAAgB,MAAM,yBAAC,aAAa,yBAAC,2BAA2B,EAAE,aAAa,GAAG,UAA+D;AAC7iB;;;ACD6H,oBAAoB,aAAa,SAAS,EAAE,mDAAmD,+BAA+B,iCAAiC,MAAM,+BAA+B,WAAW,kBAAkB,wDAAwD,oCAAoC,iBAAiB,EAAE,KAAK,gCAAgC,KAAK,kCAAC,6CAA6C,UAAU,SAAS,mBAAmB,wBAAwB,kBAAkB,IAAI,qCAAqC,IAAI,qFAAqF,oCAAoC,WAAC,GAAG,KAAK,SAAS,mBAAmB,EAAE,SAAS,YAAY,oCAAoC,eAAe,eAAe,sBAAsB,WAAW,SAAS,QAAQ,CAAC,sEAAsE,QAAQ,GAAG,SAAS,4BAAqD;AAC3lC;;;;;;;;;;;;;;;;;;;;ACDA;AAC+B;AACuC;AACJ;AACP;AACR;AACwB;AACyC;AACxB;;AAE5F;AACA;AACA;AACA,CAAC;AACD,sBAAsB,kFAAc;AACpC;AACA,GAAG;AACH,sBAAsB,yEAAc;AACpC,6BAA6B,iGAA0B;AACvD,2BAA2B,0CAAa;AACxC,uEAAuE;;AAEvE;AACA;AACA,GAAG;AACH;AACA,IAAI,wEAAe;AACnB,IAAI,kGAA+B;AACnC,GAAG;AACH,EAAE,6FAA0B;AAC5B,qBAAqB,2CAAc,WAAW,0EAAe;AAC7D;AACA,EAAE,wFAAoB,CAAC,8CAAiB,qEAAqE,wEAAa;AAC1H,EAAE,4CAAe;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,2EAA2E,sEAAa;AACxF;AACA;AACA;;AAEA;AACA,UAAU,sEAAa;AACvB,eAAe,wEAAe;AAC9B,QAAQ,SAAS,kEAAS;AAC1B,aAAa,wEAAe;AAC5B;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,8EAAW;AACtB;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEsB;AACtB","sources":["webpack://mask-network/./packages/encryption/src/network-encoding/index.ts","webpack://mask-network/./packages/encryption/src/network-encoding/shared.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useAllPersonas.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useLastRecognizedIdentity.ts","webpack://mask-network/./packages/shared-base-ui/src/hooks/useSingletonModal.ts","webpack://mask-network/./packages/shared-base/src/helpers/personas.ts","webpack://mask-network/./packages/shared/src/UI/components/AssetPreviewer/index.tsx","webpack://mask-network/./packages/theme/src/Components/CheckBoxIndicator/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/AssetsManagement/CollectibleCard.tsx","webpack://mask-network/./packages/shared/src/UI/components/AssetsManagement/CollectibleItem.tsx","webpack://mask-network/./packages/shared/src/UI/components/ChainIcon/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/EmptyStatus/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/I18NextProviderHMR.tsx","webpack://mask-network/./packages/shared/src/UI/components/Image/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/LoadingStatus/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/NetworkIcon/index.tsx","webpack://mask-network/./packages/shared/src/hooks/useConnectedPersonas.ts","webpack://mask-network/./packages/shared/src/hooks/useCurrentPersona.ts","webpack://mask-network/./packages/shared/src/hooks/useNextIDVerify.ts","webpack://mask-network/./packages/shared/src/UI/components/PersonaSelectPanel/PersonaItemUI.tsx","webpack://mask-network/./packages/shared/src/UI/components/PersonaSelectPanel/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/QRCode/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/ReloadStatus/index.tsx","webpack://mask-network/./packages/shared/src/UI/contexts/SharedContextProvider.tsx","webpack://mask-network/./packages/shared/src/UI/components/AddCollectibles/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/AddCollectiblesModal/AddCollectiblesDialog.tsx","webpack://mask-network/./packages/shared/src/UI/modals/AddCollectiblesModal/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/ApplicationBoardModal/ApplicationRecommendArea.tsx","webpack://mask-network/./packages/shared/src/UI/modals/ApplicationBoardModal/ApplicationBoard.tsx","webpack://mask-network/./packages/shared/src/UI/modals/ApplicationBoardModal/ApplicationBoardDialog.tsx","webpack://mask-network/./packages/shared/src/UI/modals/ApplicationBoardModal/ApplicationSettingPluginList.tsx","webpack://mask-network/./packages/shared/src/UI/modals/ApplicationBoardModal/ApplicationSettingPluginSwitch.tsx","webpack://mask-network/./packages/shared/src/UI/modals/ApplicationBoardModal/ApplicationSettingsDialog.tsx","webpack://mask-network/./packages/shared/src/UI/modals/ApplicationBoardModal/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/ConfirmDialog/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/ConfirmModal/Dialog.tsx","webpack://mask-network/./packages/shared/src/UI/modals/ConfirmModal/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/GasSettingModal/GasSetting1559.tsx","webpack://mask-network/./packages/shared/src/UI/modals/GasSettingModal/Prior1559GasSetting.tsx","webpack://mask-network/./packages/shared/src/UI/modals/GasSettingModal/GasSettingSupported.tsx","webpack://mask-network/./packages/shared/src/UI/modals/GasSettingModal/GasSettingModal.tsx","webpack://mask-network/./packages/shared/src/UI/modals/GasSettingModal/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/LeavePageConfirmModal/LeavePageConfirm.tsx","webpack://mask-network/./packages/shared/src/UI/modals/LeavePageConfirmModal/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/PersonaSelectPanelModal/PersonaSelectPanelDialog.tsx","webpack://mask-network/./packages/shared/src/UI/modals/PersonaSelectPanelModal/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/SelectNonFungibleContractModal/ContractItem.tsx","webpack://mask-network/./packages/shared/src/UI/modals/SelectNonFungibleContractModal/SelectNonFungibleContractDialog.tsx","webpack://mask-network/./packages/shared/src/UI/modals/SelectNonFungibleContractModal/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/ShareSelectNetwork/ShareModal.tsx","webpack://mask-network/./packages/shared/src/UI/modals/ShareSelectNetwork/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/TokenTransactionConfirmModal/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/TokenTransactionConfirmModal/TokenTransactionConfirm.tsx","webpack://mask-network/./packages/shared/src/UI/modals/TokenTransactionConfirmModal/index.tsx","webpack://mask-network/./packages/theme/src/Components/Snackbar/PopupSnackbar.tsx","webpack://mask-network/./packages/shared/src/UI/modals/TransactionSnackbar/TransactionSnackbar.tsx","webpack://mask-network/./packages/shared/src/UI/modals/TransactionSnackbar/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/WalletConnectQRCodeModal/QRCodeModal.tsx","webpack://mask-network/./packages/shared/src/UI/modals/WalletConnectQRCodeModal/QRCodeDialog.tsx","webpack://mask-network/./packages/shared/src/UI/modals/WalletConnectQRCodeModal/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/WalletStatusModal/WalletStatusDialog.tsx","webpack://mask-network/./packages/shared/src/UI/modals/WalletStatusModal/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/index.tsx","webpack://mask-network/./packages/shared/src/UI/wallet/FormattedAddress.tsx","webpack://mask-network/./packages/shared/src/hooks/useCurrentPersonaConnectStatus.ts","webpack://mask-network/./packages/shared/src/hooks/usePersonaContext.ts","webpack://mask-network/./packages/shared/src/hooks/usePersonaProofs.ts","webpack://mask-network/./packages/theme/src/Components/Boundary/index.tsx","webpack://mask-network/./packages/theme/src/Components/RadioIndicator/index.tsx","webpack://mask-network/./packages/theme/src/Components/TextField/index.tsx","webpack://mask-network/./packages/theme/src/Components/WrappedComponents/ShadowRootTooltip.ts","webpack://mask-network/./packages/theme/src/hooks/useBoundedPopperProps.ts","webpack://mask-network/./packages/theme/src/hooks/useDetectOverflow.ts","webpack://mask-network/./packages/theme/src/hooks/useTabs.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useBalance.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleTokenPrice.ts","webpack://mask-network/./packages/web3-hooks/base/src/useGasOptions.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNativeToken.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNativeTokenAddress.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNonFungibleAsset.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNonFungibleCollections.ts","webpack://mask-network/./packages/web3-hooks/base/src/useReverseAddress.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWallet.ts","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/TabPanel/tabPanelClasses.js","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/TabPanel/TabPanel.js","webpack://mask-network/./node_modules/.pnpm/dijkstrajs@1.0.2/node_modules/dijkstrajs/dijkstra.js","webpack://mask-network/./node_modules/.pnpm/encode-utf8@1.0.3/node_modules/encode-utf8/index.js","webpack://mask-network/./node_modules/.pnpm/@hookform+resolvers@3.1.1_react-hook-form@7.45.2/node_modules/@hookform/resolvers/dist/resolvers.mjs","webpack://mask-network/./node_modules/.pnpm/@hookform+resolvers@3.1.1_react-hook-form@7.45.2/node_modules/@hookform/resolvers/zod/dist/zod.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/useQueries.mjs"],"sourcesContent":["import { EncryptPayloadNetwork } from '../payload/types.js'\nimport { sharedDecoder, sharedEncoder } from './shared.js'\nimport { TwitterDecoder, __TwitterEncoder } from './twitter.js'\n\nexport function decodeByNetwork(network: EncryptPayloadNetwork, content: string): Array<string | Uint8Array> {\n    if (network === EncryptPayloadNetwork.Twitter) {\n        return TwitterDecoder(content)\n            .map((x) => [x])\n            .unwrapOr([])\n    }\n    const possiblePayload = content.match(/(\\u{1F3BC}[\\w+/=|]+:\\|\\|)/giu) || []\n\n    const result: Array<string | Uint8Array> = []\n    for (const payload of possiblePayload) {\n        const decoded = sharedDecoder(payload)\n        if (decoded.isSome()) result.push(decoded.value)\n        else result.push(payload)\n    }\n    return result\n}\nexport function encodeByNetwork(network: EncryptPayloadNetwork, content: string | Uint8Array): string {\n    // v38\n    if (typeof content === 'string') {\n        if (network === EncryptPayloadNetwork.Twitter) return __TwitterEncoder(content)\n        return content\n    }\n\n    // v37\n    if (network === EncryptPayloadNetwork.Twitter) return __TwitterEncoder(content)\n    return sharedEncoder(content)\n}\n\nexport * from './twitter.js'\n","import { decodeArrayBuffer, encodeArrayBuffer } from '@masknet/kit'\nimport { None, type Option, Some } from 'ts-results-es'\n/** @internal */\nexport function sharedEncoder(input: Uint8Array): string {\n    return `\\u{1F3BC}6/8|${encodeArrayBuffer(input)}:||`\n}\n\n/** @internal */\nexport function sharedDecoder(input: string): Option<Uint8Array> {\n    const [[, payload] = []] = input.matchAll(/\\u{1F3BC}6\\/8\\|([\\w+/=]+):\\|\\|/giu)\n    if (!payload) return None\n    try {\n        return Some(new Uint8Array(decodeArrayBuffer(payload)))\n    } catch {\n        return None\n    }\n}\n","import { useSubscription } from 'use-subscription'\nimport { allPersonas } from '../dom/context.js'\n\nexport function useAllPersonas() {\n    return useSubscription(allPersonas)\n}\n","import { useSubscription } from 'use-subscription'\nimport { UNDEFINED } from '@masknet/shared-base'\nimport { lastRecognizedProfile } from './context.js'\n\nexport function useLastRecognizedIdentity() {\n    return useSubscription(lastRecognizedProfile ?? UNDEFINED)\n}\n","import { useCallback, useImperativeHandle, useRef, useState } from 'react'\nimport type { SingletonModalRefCreator } from '@masknet/shared-base'\n\nexport function useSingletonModal<OpenProps, CloseProps>(\n    ref: React.ForwardedRef<SingletonModalRefCreator<OpenProps, CloseProps>>,\n    options?: {\n        onOpen?: (props: OpenProps) => void\n        onClose?: (props: CloseProps) => void\n        onAbort?: (error: Error) => void\n    },\n) {\n    type T = SingletonModalRefCreator<OpenProps, CloseProps>\n\n    const [open, setOpen] = useState(false)\n    const dispatchRef = useRef<ReturnType<T>>()\n    const optionsRef = useRef<typeof options>()\n    const openRef = useRef(open)\n    optionsRef.current = options\n    openRef.current = open\n\n    const creator: T = useCallback((dispatchOpen, dispatchClose, dispatchAbort) => {\n        dispatchRef.current = {\n            peek() {\n                return openRef.current\n            },\n            open(props) {\n                optionsRef.current?.onOpen?.(props)\n                dispatchOpen(props)\n                setOpen(true)\n            },\n            close(props) {\n                optionsRef.current?.onClose?.(props)\n                dispatchClose(props)\n                setOpen(false)\n            },\n            abort(error) {\n                optionsRef.current?.onAbort?.(error)\n                dispatchAbort(error)\n                setOpen(false)\n            },\n        }\n        return dispatchRef.current\n    }, [])\n\n    useImperativeHandle(ref, () => creator, [creator])\n\n    return [open, dispatchRef.current] as const\n}\n","import {\n    type ProfileIdentifier,\n    type PersonaIdentifier,\n    type PersonaInformation,\n    type ProfileInformation,\n    Identifier,\n} from '../index.js'\n\nexport function formatPersonaFingerprint(fingerprint: string, size?: number) {\n    if (!size) {\n        if (fingerprint.length <= 26) return fingerprint\n        return `${fingerprint.slice(0, 12)}...${fingerprint.slice(-9)}`\n    }\n\n    if (size <= 0) return fingerprint\n    return `${fingerprint.slice(0, Math.max(0, 2 + size))}...${fingerprint.slice(-size)}`\n}\n\nexport const MAX_PERSONA_LIMIT = 10\n\nexport const MAX_PERSONA_NAME_LENGTH = 12\n\nexport const formatPersonaName = (nickname?: string) => {\n    if (!nickname) return ''\n    if (nickname.length < MAX_PERSONA_NAME_LENGTH) return nickname\n\n    return `${nickname.slice(0, 12)}...`\n}\n\nfunction isSameIdentity<T extends Identifier>(identities: Array<T | { identifier: T } | undefined>) {\n    return identities.reduce((previousValue, T2, key) => {\n        if (key === 0) return true\n        const T1 = identities[key - 1]\n        if (!T2 || !T1) return false\n\n        const i1IdentifierText = (T1 instanceof Identifier ? T1 : T1.identifier).toText()\n        const i2IdentifierText = (T2 instanceof Identifier ? T2 : T2.identifier).toText()\n\n        return previousValue && i1IdentifierText.toLowerCase() === i2IdentifierText.toLowerCase()\n    }, false)\n}\n\nexport function isSamePersona(...personas: Array<PersonaIdentifier | PersonaInformation | undefined>) {\n    return isSameIdentity(personas)\n}\n\nexport function isSameProfile(...profiles: Array<ProfileIdentifier | ProfileInformation | undefined>) {\n    return isSameIdentity(profiles)\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Image } from '../Image/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        position: 'relative',\n    },\n    fallbackImage: {\n        height: 64,\n        width: 64,\n    },\n    icon: {\n        position: 'absolute',\n        top: theme.spacing(0.5),\n        left: theme.spacing(0.5),\n    },\n}))\n\nexport interface AssetPreviewerProps extends withClasses<'root' | 'fallbackImage' | 'container'> {\n    url?: string\n    fallbackImage?: JSX.Element | string\n    icon?: React.ReactNode\n}\n\nexport function AssetPreviewer(props: AssetPreviewerProps) {\n    const { fallbackImage, url, icon } = props\n\n    const { classes } = useStyles(undefined, { props })\n\n    return (\n        <div className={classes.root}>\n            <Image\n                classes={{\n                    fallbackImage: classes.fallbackImage,\n                    container: classes.container,\n                }}\n                width=\"100%\"\n                height=\"100%\"\n                style={{ objectFit: 'cover' }}\n                src={url}\n                fallback={fallbackImage}\n            />\n            {icon ? <div className={classes.icon}>{icon}</div> : null}\n        </div>\n    )\n}\n","import { memo } from 'react'\nimport { Icons, type GeneratedIconProps } from '@masknet/icons'\n\ninterface Props extends GeneratedIconProps {\n    checked?: boolean\n    unCheckedButtonColor?: string\n    checkedButtonColor?: string\n}\n\nexport const CheckBoxIndicator = memo<Props>(function CheckBoxIndicator({\n    checked,\n    unCheckedButtonColor,\n    checkedButtonColor,\n    ...rest\n}) {\n    return checked ? (\n        <Icons.Checkbox {...rest} color={checkedButtonColor} />\n    ) : (\n        <Icons.CheckboxBlank {...rest} color={unCheckedButtonColor} />\n    )\n})\n","import { memo, type HTMLProps } from 'react'\nimport { Card, useTheme } from '@mui/material'\nimport { CheckBoxIndicator, RadioIndicator, makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { type NetworkPluginID } from '@masknet/shared-base'\nimport { AssetPreviewer, NetworkIcon } from '@masknet/shared'\nimport { resolveImageURL } from '@masknet/web3-shared-evm'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        position: 'relative',\n        display: 'block',\n        cursor: 'pointer',\n    },\n    card: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8,\n        position: 'absolute',\n        zIndex: 1,\n        backgroundColor: theme.palette.mode === 'light' ? '#F7F9FA' : '#2F3336',\n        width: '100%',\n        height: '100%',\n    },\n    fallbackImage: {\n        minHeight: '0 !important',\n        maxWidth: 'none',\n        width: 30,\n        height: 30,\n    },\n    fallbackLensImage: {\n        minHeight: '0 !important',\n        maxWidth: 'none',\n        width: '100%',\n        height: '100%',\n    },\n    blocker: {\n        position: 'absolute',\n        zIndex: 2,\n        width: '100%',\n        height: '100%',\n    },\n    indicator: {\n        padding: 0,\n        position: 'absolute',\n        top: 5,\n        right: 5,\n        zIndex: 1,\n    },\n}))\n\nexport interface CollectibleCardProps extends HTMLProps<HTMLDivElement> {\n    pluginID?: NetworkPluginID\n    asset: Web3Helper.NonFungibleAssetAll\n    disableNetworkIcon?: boolean\n    /** disable inspect NFT details */\n    disableInspect?: boolean\n    isSelected?: boolean\n    useRadio?: boolean\n    showUnCheckedIndicator?: boolean\n}\n\nexport const CollectibleCard = memo(\n    ({\n        className,\n        pluginID,\n        asset,\n        disableNetworkIcon,\n        disableInspect,\n        isSelected,\n        useRadio,\n        showUnCheckedIndicator,\n        ...rest\n    }: CollectibleCardProps) => {\n        const { classes, cx } = useStyles()\n        const theme = useTheme()\n\n        const icon =\n            pluginID && !disableNetworkIcon ? <NetworkIcon pluginID={pluginID} chainId={asset.chainId} /> : null\n        const { metadata } = asset\n        const url = metadata?.previewImageURL || metadata?.imageURL || metadata?.mediaURL\n        const fallbackImage = resolveImageURL(\n            undefined,\n            asset.metadata?.name,\n            asset.collection?.name,\n            asset.contract?.address,\n        )\n\n        const Indicator = useRadio ? RadioIndicator : CheckBoxIndicator\n\n        return (\n            <div className={cx(classes.root, className)} {...rest}>\n                <div className={classes.blocker} />\n                <Card className={classes.card}>\n                    <AssetPreviewer\n                        classes={{\n                            fallbackImage: fallbackImage ? classes.fallbackLensImage : classes.fallbackImage,\n                        }}\n                        url={url}\n                        icon={icon}\n                        fallbackImage={fallbackImage}\n                    />\n                </Card>\n                {isSelected || showUnCheckedIndicator ? (\n                    <Indicator\n                        size={20}\n                        checked={isSelected}\n                        className={classes.indicator}\n                        checkedButtonColor={theme.palette.maskColor.primary}\n                        unCheckedButtonColor={theme.palette.maskColor.secondaryLine}\n                    />\n                ) : null}\n            </div>\n        )\n    },\n)\n\nCollectibleCard.displayName = 'CollectibleCard'\n","import { ShadowRootTooltip, makeStyles, useBoundedPopperProps, useDetectOverflow } from '@masknet/theme'\nimport {\n    isENSContractAddress,\n    isENSNameWrapperContractAddress,\n    isLens,\n    isLensCollect,\n    isLensFollower,\n    isXnsContractAddress,\n} from '@masknet/web3-shared-evm'\nimport { Button, Skeleton, Typography } from '@mui/material'\nimport { forwardRef, memo, useCallback, useMemo, type HTMLProps } from 'react'\nimport { CollectibleCard, type CollectibleCardProps } from './CollectibleCard.js'\nimport { Icons } from '@masknet/icons'\nimport { useSharedTrans } from '../../../index.js'\nimport { EMPTY_LIST } from '@masknet/shared-base'\n\nconst useStyles = makeStyles<void, 'action' | 'collectibleCard' | 'info'>()((theme, _, refs) => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        position: 'relative',\n        background: theme.palette.maskColor.bg,\n        borderRadius: 8,\n        overflow: 'visible',\n        zIndex: 0,\n        willChange: 'opacity',\n    },\n    withAction: {\n        '&:hover': {\n            transform: 'translateY(19px)',\n            transitionDuration: '150ms',\n            [`.${refs.action}`]: {\n                marginTop: 8,\n                opacity: 1,\n            },\n            [`.${refs.collectibleCard}`]: {\n                transform: 'translateY(-38px)',\n            },\n            [`.${refs.info}`]: {\n                transform: 'translateY(-38px)',\n            },\n        },\n    },\n    ease: {\n        transition: 'all 300ms ease',\n    },\n    fadeIn: {\n        '@keyframes fade-in': {\n            '0%': { opacity: 0 },\n        },\n        animation: 'fade-in 500ms ease-in-out',\n        '@media (prefers-reduced-motion: reduce)': {\n            animation: 'none',\n        },\n    },\n    collectibleCard: {\n        width: '100%',\n        aspectRatio: '1/1',\n    },\n    info: {\n        padding: 6,\n        overflow: 'auto',\n        boxSizing: 'border-box',\n        width: '100%',\n    },\n    nameRow: {\n        display: 'flex',\n        alignItems: 'center',\n        overflow: 'auto',\n    },\n    name: {\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        lineHeight: theme.spacing(2),\n        minHeight: theme.spacing(2),\n        color: theme.palette.maskColor.second,\n    },\n    identity: {\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        lineHeight: theme.spacing(2),\n        minHeight: theme.spacing(2),\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n    },\n    action: {\n        width: '100%',\n        padding: theme.spacing(0, 1),\n        boxSizing: 'border-box',\n        textAlign: 'center',\n        opacity: 0,\n        overflow: 'hidden',\n        position: 'absolute',\n        bottom: 6,\n    },\n    actionButton: {\n        borderRadius: 28,\n        backgroundColor: theme.palette.maskColor.primary,\n        color: '#fff',\n        '&:hover': {\n            backgroundColor: theme.palette.maskColor.primary,\n        },\n    },\n}))\n\nexport interface CollectibleItemProps extends HTMLProps<HTMLDivElement>, CollectibleCardProps {\n    disableName?: boolean\n    /** @default true */\n    disableAction?: boolean\n    actionLabel?: string\n    verifiedBy?: string[]\n    onActionClick?(asset: CollectibleCardProps['asset']): void\n    onItemClick?(asset: CollectibleCardProps['asset']): void\n}\n\nexport const CollectibleItem = memo(\n    forwardRef<HTMLDivElement, CollectibleItemProps>((props, ref) => {\n        const {\n            className,\n            asset,\n            pluginID,\n            disableNetworkIcon,\n            disableName,\n            disableAction = true,\n            actionLabel,\n            verifiedBy = EMPTY_LIST,\n            onActionClick,\n            onItemClick,\n            isSelected,\n            showUnCheckedIndicator,\n            ...rest\n        } = props\n        const t = useSharedTrans()\n        const { classes, cx } = useStyles()\n        const name = asset.collection?.name ?? ''\n        const popperProps = useBoundedPopperProps()\n        const handleClick = useCallback(() => {\n            onItemClick?.(asset)\n        }, [onItemClick, asset])\n\n        const assetName = useMemo(() => {\n            if (!asset.collection) return\n            if (isLensCollect(asset.collection.name)) return asset.metadata?.name\n            if (isLensFollower(asset.collection.name)) return asset.collection.name\n            if (isLens(asset.metadata?.name)) return asset.metadata?.name\n            if (isXnsContractAddress(asset.address)) return asset.metadata?.name\n            if (isENSContractAddress(asset.address) || isENSNameWrapperContractAddress(asset.address))\n                return asset.metadata?.name\n            if (disableName && asset.tokenId) return `#${asset.tokenId}`\n            return asset.metadata?.name || (asset.tokenId ? `#${asset.tokenId}` : '') || asset.collection.name\n        }, [asset, disableName])\n\n        const [nameOverflow, nameRef] = useDetectOverflow()\n        const [identityOverflow, identityRef] = useDetectOverflow()\n        const tooltip =\n            nameOverflow || identityOverflow ? (\n                <Typography component=\"div\">\n                    {disableName ? null : <div>{name}</div>}\n                    {assetName}\n                </Typography>\n            ) : undefined\n\n        return (\n            <ShadowRootTooltip PopperProps={popperProps} title={tooltip} placement=\"top\" disableInteractive arrow>\n                <div\n                    className={cx(classes.card, classes.fadeIn, className, disableAction ? null : classes.withAction)}\n                    {...rest}\n                    ref={ref}>\n                    <CollectibleCard\n                        className={cx(classes.collectibleCard, classes.ease)}\n                        pluginID={pluginID}\n                        asset={asset}\n                        disableNetworkIcon={disableNetworkIcon}\n                        onClick={handleClick}\n                        isSelected={isSelected}\n                        showUnCheckedIndicator={showUnCheckedIndicator}\n                    />\n                    <div className={cx(classes.info, classes.ease)}>\n                        {disableName ? null : (\n                            <div className={classes.nameRow}>\n                                <Typography ref={nameRef} className={classes.name} variant=\"body2\">\n                                    {name || assetName}\n                                </Typography>\n\n                                {verifiedBy.length ? (\n                                    <ShadowRootTooltip title={t.verified_by({ marketplace: verifiedBy.join(', ') })}>\n                                        <Icons.Verification size={16} />\n                                    </ShadowRootTooltip>\n                                ) : null}\n                            </div>\n                        )}\n                        <Typography ref={identityRef} className={classes.identity} variant=\"body2\" component=\"div\">\n                            {assetName}\n                        </Typography>\n                    </div>\n                    {disableAction ? null : (\n                        <div className={cx(classes.action, classes.ease)}>\n                            <Button\n                                fullWidth\n                                variant=\"text\"\n                                className={classes.actionButton}\n                                size=\"small\"\n                                onClick={() => onActionClick?.(asset)}>\n                                {actionLabel}\n                            </Button>\n                        </div>\n                    )}\n                </div>\n            </ShadowRootTooltip>\n        )\n    }),\n)\n\nCollectibleItem.displayName = 'collectibleItem'\n\ninterface CollectibleItemSkeletonProps extends HTMLProps<HTMLDivElement> {\n    omitInfo?: boolean\n    omitName?: boolean\n}\n\nexport const CollectibleItemSkeleton = memo(\n    forwardRef<HTMLDivElement, CollectibleItemSkeletonProps>(function CollectibleItemSkeleton(\n        { className, omitInfo, omitName, ...rest },\n        ref,\n    ) {\n        const { classes, cx } = useStyles()\n        return (\n            <div className={cx(classes.card, className)} {...rest} ref={ref}>\n                <div className={classes.collectibleCard}>\n                    <Skeleton animation=\"wave\" variant=\"rectangular\" sx={{ borderRadius: '8px' }} height=\"100%\" />\n                </div>\n                {omitInfo ? null : (\n                    <div className={classes.info}>\n                        {omitName ? null : (\n                            <Typography className={classes.name} variant=\"body2\">\n                                <Skeleton animation=\"wave\" variant=\"text\" width=\"80%\" />\n                            </Typography>\n                        )}\n                        <Typography className={classes.identity} variant=\"body2\" component=\"div\">\n                            <Skeleton animation=\"wave\" variant=\"text\" width={'40%'} />\n                        </Typography>\n                    </div>\n                )}\n            </div>\n        )\n    }),\n)\n","import { memo } from 'react'\nimport { Icon, type IconProps } from '../Icon/index.js'\n\nexport interface ChainIconProps extends IconProps {}\nexport const ChainIcon = memo<ChainIconProps>(function ChainIcon({ ...rest }) {\n    return <Icon {...rest} sx={{ fontSize: 12, fontWeight: 'bold', ...rest.sx }} size={rest.size ?? 12.5} />\n})\n","import { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Typography, type BoxProps } from '@mui/material'\nimport { memo } from 'react'\n\nconst useStyles = makeStyles()((theme) => ({\n    statusBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    text: {\n        color: theme.palette.maskColor.second,\n        fontSize: '14px',\n        fontWeight: 400,\n        marginTop: theme.spacing(1.5),\n    },\n}))\n\ninterface Props extends BoxProps {\n    iconSize?: number\n}\n\nexport const EmptyStatus = memo(function EmptyStatus({ className, children, iconSize = 32, ...rest }: Props) {\n    const { classes, cx } = useStyles()\n    return (\n        <Box className={cx(classes.statusBox, className)} p={2} {...rest}>\n            <Icons.EmptySimple size={iconSize} />\n            <Typography className={classes.text} component=\"div\">\n                {children}\n            </Typography>\n        </Box>\n    )\n})\n","import React, { useEffect, useState } from 'react'\nimport { I18nextProvider, initReactI18next, type I18nextProviderProps } from 'react-i18next'\nimport { i18NextInstance } from '@masknet/shared-base'\n\ninitReactI18next.init(i18NextInstance)\nexport const I18NextProviderHMR = process.env.NODE_ENV === 'development' ? I18NextProvider_dev : I18nextProvider\n\nfunction I18NextProvider_dev({\n    i18n,\n    defaultNS,\n    children,\n}: React.PropsWithChildren<I18nextProviderProps>): JSX.Element {\n    const [ns, setNS] = useState(defaultNS)\n\n    useEffect(() => {\n        const f = () => setNS('HMR')\n        globalThis.addEventListener('MASK_I18N_HMR', f)\n        return () => globalThis.removeEventListener('MASK_I18N_HMR', f)\n    }, [])\n    // Force trigger a re-render to apply HMR\n    if (ns === 'HMR') defaultNS = Math.random() + ''\n\n    useEffect(() => {\n        if (ns === 'HMR') setNS('')\n    }, [ns])\n    return (\n        <I18nextProvider i18n={i18n} defaultNS={defaultNS}>\n            {children}\n        </I18nextProvider>\n    )\n}\n","import { type HTMLProps, type ImgHTMLAttributes, useState } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { useTheme } from '@mui/material'\n\nconst useStyles = makeStyles<Pick<ImageProps, 'size' | 'rounded'>, 'center'>()((theme, { size, rounded }, refs) => ({\n    optimistic: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    container: {\n        width: size ?? '100%',\n        height: size ?? '100%',\n        position: 'relative',\n        borderRadius: rounded ? '50%' : undefined,\n        overflow: rounded ? 'hidden' : undefined,\n    },\n    image: {\n        display: 'block',\n    },\n    failImage: {\n        width: 30,\n        height: 30,\n    },\n    center: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    failed: {\n        [`&.${refs.center}`]: {\n            background:\n                theme.palette.mode === 'light'\n                    ? 'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.9) 100%), linear-gradient(90deg, rgba(98, 152, 234, 0.2) 1.03%, rgba(98, 152, 234, 0.2) 1.04%, rgba(98, 126, 234, 0.2) 100%)'\n                    : 'linear-gradient(180deg, #202020 0%, #181818 100%)',\n        },\n    },\n}))\n\nconst MASK_DARK_FALLBACK = new URL('./mask-dark.png', import.meta.url).href\nconst MASK_LIGHT_FALLBACK = new URL('./mask-light.png', import.meta.url).href\n\nexport interface ImageProps\n    extends ImgHTMLAttributes<HTMLImageElement>,\n        withClasses<'container' | 'fallbackImage' | 'imageLoading' | 'failed'> {\n    size?: number | string\n    rounded?: boolean\n    fallback?: string | JSX.Element | null\n    disableSpinner?: boolean\n    containerProps?: HTMLProps<HTMLDivElement>\n}\n\nexport function Image({\n    fallback,\n    size,\n    rounded,\n    disableSpinner,\n    classes: extraClasses,\n    onClick,\n    containerProps,\n    ...rest\n}: ImageProps) {\n    const { classes, cx } = useStyles({ size, rounded }, { props: { classes: extraClasses } })\n    const theme = useTheme()\n    const [failed, setFailed] = useState(false)\n\n    if (rest.src && !failed) {\n        return (\n            <div {...containerProps} className={cx(classes.container, classes.optimistic, containerProps?.className)}>\n                <img\n                    className={classes.image}\n                    width={size}\n                    height={size}\n                    {...rest}\n                    src={rest.src}\n                    onError={() => setFailed(true)}\n                />\n            </div>\n        )\n    }\n\n    if (fallback && !(fallback instanceof URL) && typeof fallback !== 'string') {\n        return (\n            <div\n                {...containerProps}\n                className={cx(classes.container, classes.failed, classes.center, containerProps?.className)}>\n                {fallback}\n            </div>\n        )\n    }\n\n    return (\n        <div\n            {...containerProps}\n            className={cx(classes.container, classes.failed, classes.center, containerProps?.className)}>\n            <img\n                loading=\"lazy\"\n                decoding=\"async\"\n                width={size}\n                height={size}\n                {...rest}\n                src={fallback?.toString() ?? (theme.palette.mode === 'dark' ? MASK_DARK_FALLBACK : MASK_LIGHT_FALLBACK)}\n                className={cx(classes.image, classes.failImage, classes.fallbackImage)}\n            />\n        </div>\n    )\n}\n","import { LoadingBase, makeStyles } from '@masknet/theme'\nimport { Box, Typography, type BoxProps } from '@mui/material'\nimport { memo } from 'react'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    statusBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    text: {\n        color: theme.palette.maskColor.second,\n        fontSize: '14px',\n        fontWeight: 400,\n        marginTop: theme.spacing(1.5),\n    },\n}))\n\ninterface Props extends BoxProps {\n    omitText?: boolean\n    iconSize?: number\n}\n\nexport const LoadingStatus = memo(function LoadingStatus({\n    omitText,\n    className,\n    iconSize = 32,\n    children,\n    ...rest\n}: Props) {\n    const { classes, cx } = useStyles()\n    const t = useSharedTrans()\n    return (\n        <Box className={cx(classes.statusBox, className)} p={2} {...rest}>\n            <LoadingBase size={iconSize} />\n            {omitText ? null : <Typography className={classes.text}>{children ?? t.loading()}</Typography>}\n        </Box>\n    )\n})\n","import type { Web3Helper } from '@masknet/web3-helpers'\nimport { useNetwork } from '@masknet/web3-hooks-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { ImageIcon, type ImageIconProps } from '../ImageIcon/index.js'\nimport { ChainIcon } from '../index.js'\nimport { memo } from 'react'\nimport type { ReasonableNetwork } from '@masknet/web3-shared-base'\n\nexport interface NetworkIconProps extends ImageIconProps {\n    pluginID: NetworkPluginID\n    chainId: Web3Helper.ChainIdAll\n    /**\n     * It's allow to add custom network with duplicate chainIds. Network could\n     * be specified with this prop.\n     */\n    network?: ReasonableNetwork<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll, Web3Helper.NetworkTypeAll>\n}\n\nexport const NetworkIcon = memo(function NetworkIcon(props: NetworkIconProps) {\n    const { pluginID, chainId, icon, network: expectedNetwork, ...rest } = props\n    const fallbackNetwork = useNetwork(pluginID, chainId)\n    const network = expectedNetwork || fallbackNetwork\n    const iconUrl = network?.iconUrl || icon\n\n    if (iconUrl && !network?.isCustomized) return <ImageIcon size={20} {...rest} icon={iconUrl} />\n    return (\n        <ChainIcon\n            size={rest.size || 20}\n            name={network?.name}\n            color={rest.color || network?.color}\n            className={rest.className}\n        />\n    )\n})\n","import { useEffect } from 'react'\nimport {\n    EMPTY_LIST,\n    MaskMessages,\n    NextIDPlatform,\n    type BindingProof,\n    type PersonaInformation,\n} from '@masknet/shared-base'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { useAllPersonas } from '@masknet/plugin-infra/content-script'\nimport { queryPersonaAvatar } from '@masknet/plugin-infra/dom/context'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useConnectedPersonas() {\n    const personasInDB = useAllPersonas()\n    const result = useQuery<\n        Array<{ persona: PersonaInformation; proof: BindingProof[]; avatar: string | undefined }>,\n        Error\n    >({\n        queryKey: ['connected-persona', personasInDB],\n        queryFn: async () => {\n            const allPersonaPublicKeys = personasInDB.map((x) => x.identifier.publicKeyAsHex)\n            const allPersonaIdentifiers = personasInDB.map((x) => x.identifier)\n\n            const avatars = await queryPersonaAvatar?.(allPersonaIdentifiers)\n            const allNextIDBindings = await NextIDProof.queryAllExistedBindingsByPlatform(\n                NextIDPlatform.NextID,\n                allPersonaPublicKeys.join(','),\n                undefined,\n            )\n\n            return personasInDB.map((x) => {\n                return {\n                    persona: x,\n                    proof:\n                        allNextIDBindings\n                            .find((p) => p.persona.toLowerCase() === x.identifier.publicKeyAsHex.toLowerCase())\n                            ?.proofs.filter((x) => x.is_valid) ?? EMPTY_LIST,\n                    avatar: avatars?.get(x.identifier),\n                }\n            })\n        },\n    })\n\n    useEffect(() => MaskMessages.events.ownProofChanged.on(() => result.refetch()), [result.refetch])\n\n    return result\n}\n","import { currentPersona } from '@masknet/plugin-infra/dom/context'\nimport { useSubscription } from 'use-subscription'\n\nexport function useCurrentPersona() {\n    return useSubscription(currentPersona)\n}\n","import { useRef } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport {\n    fromHex,\n    NextIDAction,\n    type PersonaInformation,\n    SignType,\n    toBase64,\n    languageSettings,\n    MaskMessages,\n} from '@masknet/shared-base'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport {\n    currentNextIDPlatform,\n    getPostIdFromNewPostToast,\n    postMessage,\n} from '@masknet/plugin-infra/content-script/context'\nimport { signWithPersona } from '@masknet/plugin-infra/dom/context'\n\nexport function useNextIDVerify() {\n    const verifyPostCollectTimer = useRef<ReturnType<typeof setTimeout> | null>(null)\n\n    return useAsyncFn(\n        async (persona?: PersonaInformation, username?: string, verifiedCallback?: () => void | Promise<void>) => {\n            if (!currentNextIDPlatform || !persona || !username) return\n\n            const payload = await NextIDProof.createPersonaPayload(\n                persona.identifier.publicKeyAsHex,\n                NextIDAction.Create,\n                username,\n                currentNextIDPlatform,\n                languageSettings.value ?? 'default',\n            )\n            if (!payload) throw new Error('Failed to create persona payload.')\n\n            const signature = await signWithPersona?.(SignType.Message, payload.signPayload, persona.identifier, true)\n            if (!signature) throw new Error('Failed to sign by persona.')\n\n            const postContent = payload.postContent.replace('%SIG_BASE64%', toBase64(fromHex(signature)))\n            postMessage?.(postContent, { recover: false, reason: 'verify' })\n            await new Promise<void>((resolve, reject) => {\n                verifyPostCollectTimer.current = setInterval(async () => {\n                    const postId = getPostIdFromNewPostToast?.()\n                    if (postId && persona.identifier.publicKeyAsHex) {\n                        clearInterval(verifyPostCollectTimer.current!)\n                        await NextIDProof.bindProof(\n                            payload.uuid,\n                            persona.identifier.publicKeyAsHex,\n                            NextIDAction.Create,\n                            currentNextIDPlatform!,\n                            username,\n                            payload.createdAt,\n                            {\n                                signature,\n                                proofLocation: postId,\n                            },\n                        )\n                        resolve()\n                    }\n                }, 1000)\n\n                setTimeout(() => {\n                    clearInterval(verifyPostCollectTimer.current!)\n                    reject()\n                }, 1000 * 20)\n            })\n\n            const isBound = await NextIDProof.queryIsBound(\n                persona.identifier.publicKeyAsHex,\n                currentNextIDPlatform,\n                username,\n            )\n            if (!isBound) throw new Error('Failed to verify.')\n\n            MaskMessages.events.ownProofChanged.sendToAll(undefined)\n            await verifiedCallback?.()\n        },\n        [],\n    )\n}\n","import { useMemo } from 'react'\nimport { Avatar, Box, Stack, Typography } from '@mui/material'\nimport {\n    type BindingProof,\n    resolveNextIDIdentityToProfile,\n    type ECKeyIdentifier,\n    formatPersonaFingerprint,\n    isSamePersona,\n    isSameProfile,\n    type PersonaInformation,\n} from '@masknet/shared-base'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport type { IdentityResolved } from '@masknet/plugin-infra'\nimport { CopyButton } from '../CopyButton/index.js'\n\n/* cspell:disable-next-line */\n// TODO: Migrate to SocialIdentity by @Lanttcat\nexport interface PersonaNextIDMixture {\n    persona: PersonaInformation\n    proof: BindingProof[]\n    avatar?: string\n}\n\ninterface PersonaItemProps extends withClasses<'checked' | 'unchecked'> {\n    data: PersonaNextIDMixture\n    onClick: () => void\n    currentPersona?: PersonaNextIDMixture\n    currentPersonaIdentifier?: ECKeyIdentifier\n    currentProfileIdentify?: IdentityResolved\n}\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        nickname: {\n            fontSize: 16,\n            lineHeight: '20px',\n            color: theme.palette.maskColor.main,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n        },\n        fingerprint: {\n            fontSize: 12,\n            lineHeight: '16px',\n            color: theme.palette.maskColor.second,\n        },\n        indicator: {\n            display: 'inline-block',\n            background: '#2DDF00',\n            borderRadius: '50%',\n            width: 7,\n            height: 7,\n            position: 'absolute',\n            left: '77.62%',\n            right: '5.84%',\n            top: '5.84%',\n            bottom: '77.62%',\n            border: `1px solid ${theme.palette.maskColor.bottom}`,\n        },\n    }\n})\n\nexport function PersonaItemUI(props: PersonaItemProps) {\n    const { data, onClick, currentPersona, currentPersonaIdentifier, currentProfileIdentify } = props\n    const { classes } = useStyles(undefined, { props })\n\n    const isVerified = useMemo(() => {\n        return data.proof.some(\n            (p) =>\n                isSameProfile(\n                    resolveNextIDIdentityToProfile(p.identity, p.platform),\n                    currentProfileIdentify?.identifier,\n                ) && p.is_valid,\n        )\n    }, [data.proof])\n\n    return (\n        <Stack direction=\"row\" alignItems=\"center\" gap={1} onClick={onClick}>\n            <Box flexGrow={0} position=\"relative\">\n                {data.avatar ? (\n                    <Avatar\n                        src={data.avatar}\n                        sx={{\n                            width: 30,\n                            height: 30,\n                            display: 'inline-block',\n                            borderRadius: '50%',\n                        }}\n                    />\n                ) : null}\n                {!data.avatar && <Icons.MenuPersonasActive size={30} />}\n                {isSamePersona(currentPersonaIdentifier, data.persona) && <Box className={classes.indicator} />}\n            </Box>\n            <Stack flexGrow={1}>\n                <Typography className={classes.nickname}>\n                    <Stack component=\"span\" display=\"inline-flex\" direction=\"row\" alignItems=\"center\" gap={0.25}>\n                        {data.persona.nickname}\n                        {isVerified ? <Icons.NextIDMini width={32} height={18} /> : null}\n                    </Stack>\n                </Typography>\n                <Typography className={classes.fingerprint}>\n                    <Stack component=\"span\" display=\"inline-flex\" direction=\"row\" alignItems=\"center\" gap={0.25}>\n                        {formatPersonaFingerprint(data.persona.identifier.rawPublicKey, 4)}\n                        <CopyButton size={14} text={data.persona.identifier.rawPublicKey} />\n                    </Stack>\n                </Typography>\n            </Stack>\n            <Stack flexGrow={0}>\n                {isSamePersona(currentPersona?.persona, data.persona) ? (\n                    <Icons.CheckCircle size={20} className={classes.checked} />\n                ) : (\n                    <Icons.RadioNo size={20} className={classes.unchecked} />\n                )}\n            </Stack>\n        </Stack>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { delay } from '@masknet/kit'\nimport { useLastRecognizedIdentity } from '@masknet/plugin-infra/content-script'\nimport { attachProfile, openDashboard, setCurrentPersonaIdentifier } from '@masknet/plugin-infra/dom/context'\nimport {\n    CrossIsolationMessages,\n    DashboardRoutes,\n    EMPTY_LIST,\n    isSamePersona,\n    isSameProfile,\n    resolveNextIDIdentityToProfile,\n    type PersonaIdentifier,\n    type ProfileIdentifier,\n} from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventID, EventType } from '@masknet/web3-telemetry/types'\nimport { Button, Stack, Typography } from '@mui/material'\nimport { memo, useEffect, useLayoutEffect, useMemo, useState } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { useConnectedPersonas } from '../../../hooks/useConnectedPersonas.js'\nimport { useCurrentPersona } from '../../../hooks/useCurrentPersona.js'\nimport { useNextIDVerify } from '../../../hooks/useNextIDVerify.js'\nimport { ReloadStatus } from '../ReloadStatus/index.js'\nimport { LoadingStatus } from '../LoadingStatus/index.js'\nimport type { PersonaNextIDMixture } from './PersonaItemUI.js'\nimport { PersonaItemUI } from './PersonaItemUI.js'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { ApplicationBoardModal, LeavePageConfirmModal } from '../../modals/index.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        items: {\n            overflow: 'auto',\n            maxHeight: 225,\n            scrollbarWidth: 'none',\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        reloadStatus: {\n            padding: theme.spacing(1, 2, 2, 2),\n            minHeight: 148,\n            scrollbarWidth: 'none',\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        button: {\n            display: 'inline-flex',\n            gap: theme.spacing(1),\n            borderRadius: 20,\n            width: '100%',\n        },\n    }\n})\n\nexport type PositionOption = 'center' | 'top-right'\n\ninterface PersonaSelectPanelProps extends withClasses<'checked' | 'unchecked' | 'button'> {\n    finishTarget?: string\n    enableVerify?: boolean\n    onClose?: () => void\n}\n\nexport const PersonaSelectPanel = memo<PersonaSelectPanelProps>((props) => {\n    const { finishTarget, enableVerify = true, onClose } = props\n\n    const t = useSharedTrans()\n\n    const currentPersonaIdentifier = useCurrentPersona()\n\n    const { classes } = useStyles(undefined, { props })\n\n    const [selectedPersona, setSelectedPersona] = useState<PersonaNextIDMixture>()\n\n    const [, handleVerifyNextID] = useNextIDVerify()\n    const currentProfileIdentify = useLastRecognizedIdentity()\n    const { data: personas = EMPTY_LIST, isLoading, error, refetch } = useConnectedPersonas()\n\n    useEffect(() => {\n        if (!currentPersonaIdentifier) {\n            setSelectedPersona(personas[0])\n            return\n        }\n\n        const persona = personas.find((x) => isSamePersona(x.persona, currentPersonaIdentifier))\n        setSelectedPersona(persona ?? personas[0])\n    }, [currentPersonaIdentifier?.toText(), personas.length])\n\n    const [, connect] = useAsyncFn(\n        async (profileIdentifier?: ProfileIdentifier, personaIdentifier?: PersonaIdentifier) => {\n            if (!profileIdentifier || !personaIdentifier) return\n            await attachProfile?.(profileIdentifier, personaIdentifier, {\n                connectionConfirmState: 'confirmed',\n            })\n            await setCurrentPersonaIdentifier?.(personaIdentifier)\n        },\n        [],\n    )\n\n    useLayoutEffect(() => {\n        if (personas.length || isLoading || error) return\n\n        onClose?.()\n        LeavePageConfirmModal.open({\n            openDashboard,\n            info: {\n                target: 'dashboard',\n                url: DashboardRoutes.SignUpPersona,\n                text: t.applications_create_persona_hint(),\n                title: t.applications_create_persona_title(),\n                actionHint: t.applications_create_persona_action(),\n            },\n        })\n    }, [!personas.length, isLoading, !error])\n\n    const actionButton = useMemo(() => {\n        let isConnected = true\n        let isVerified = true\n\n        if (!currentProfileIdentify || !selectedPersona) return null\n\n        // Selected persona does not link the current site\n        if (!selectedPersona.persona.linkedProfiles.find((x) => isSameProfile(x, currentProfileIdentify.identifier))) {\n            isConnected = false\n        }\n\n        if (!isSamePersona(selectedPersona.persona, currentPersonaIdentifier)) isConnected = false\n\n        const verifiedAtSite = selectedPersona.proof.find(\n            (x) =>\n                isSameProfile(\n                    resolveNextIDIdentityToProfile(x.identity, x.platform),\n                    currentProfileIdentify.identifier,\n                ) && x.is_valid,\n        )\n        if (!verifiedAtSite) {\n            isVerified = false\n        }\n\n        const handleClick = async () => {\n            if (!isConnected) {\n                await connect?.(currentProfileIdentify.identifier, selectedPersona.persona.identifier)\n                if (!finishTarget) Telemetry.captureEvent(EventType.Access, EventID.EntryProfileConnectTwitter)\n                else Telemetry.captureEvent(EventType.Access, EventID.EntryMaskComposeConnectTwitter)\n            }\n            if (!isVerified && enableVerify) {\n                onClose?.()\n                ApplicationBoardModal.close()\n                await handleVerifyNextID(selectedPersona.persona, currentProfileIdentify.identifier?.userId)\n                if (!finishTarget) Telemetry.captureEvent(EventType.Access, EventID.EntryProfileConnectVerify)\n                else Telemetry.captureEvent(EventType.Access, EventID.EntryMaskComposeVerifyTwitter)\n            }\n\n            if (isVerified) CrossIsolationMessages.events.personaBindFinished.sendToAll({ pluginID: finishTarget })\n\n            if (finishTarget) {\n                CrossIsolationMessages.events.applicationDialogEvent.sendToLocal({\n                    open: true,\n                    pluginID: finishTarget,\n                    selectedPersona: selectedPersona.persona,\n                })\n            }\n\n            await delay(100)\n            onClose?.()\n        }\n\n        const actionProps = {\n            ...(() => {\n                const { persona } = selectedPersona\n                if (!isConnected && !isVerified && enableVerify)\n                    return {\n                        buttonText: t.applications_persona_verify_connect({\n                            nickname: persona.nickname ?? '',\n                        }),\n                        hint: t.applications_persona_verify_connect_hint({\n                            nickname: persona.nickname ?? '',\n                        }),\n                    }\n                if (!isConnected)\n                    return {\n                        buttonText: t.applications_persona_connect({\n                            nickname: persona.nickname ?? '',\n                        }),\n                        hint: t.applications_persona_connect_hint({\n                            nickname: persona.nickname ?? '',\n                        }),\n                    }\n                if (!isVerified)\n                    return {\n                        buttonText: t.applications_persona_verify({\n                            nickname: persona.nickname ?? '',\n                        }),\n                        hint: t.applications_persona_verify_hint(),\n                    }\n                return {\n                    buttonText: t.applications_persona_connect({\n                        nickname: persona.nickname ?? '',\n                    }),\n                }\n            })(),\n            onClick: handleClick,\n        }\n\n        return <ActionContent {...actionProps} classes={{ button: props.classes?.button }} />\n    }, [\n        currentPersonaIdentifier,\n        currentProfileIdentify,\n        enableVerify,\n        finishTarget,\n        selectedPersona?.persona,\n        selectedPersona?.proof,\n        selectedPersona?.persona.linkedProfiles,\n    ])\n\n    if (isLoading) return <LoadingStatus iconSize={24} />\n\n    if (error) return <ReloadStatus className={classes.reloadStatus} onRetry={refetch} />\n\n    if (!personas.length) return <Stack height=\"100%\" justifyContent=\"space-between\" />\n\n    return (\n        <Stack height=\"100%\" justifyContent=\"space-between\">\n            <Stack gap={1.5} className={classes.items}>\n                {personas.map((x) => {\n                    return (\n                        <PersonaItemUI\n                            key={x.persona.identifier.toText()}\n                            data={x}\n                            onClick={() => setSelectedPersona(x)}\n                            currentPersona={selectedPersona}\n                            currentPersonaIdentifier={currentPersonaIdentifier}\n                            currentProfileIdentify={currentProfileIdentify}\n                            classes={{ unchecked: props.classes?.unchecked }}\n                        />\n                    )\n                })}\n            </Stack>\n            <Stack>{actionButton}</Stack>\n        </Stack>\n    )\n})\n\ninterface ActionContentProps extends withClasses<'button'> {\n    buttonText?: string\n    hint?: string\n    onClick(): Promise<void>\n}\n\nfunction ActionContent(props: ActionContentProps) {\n    const { buttonText, hint, onClick } = props\n    const { classes } = useStyles(undefined, { props })\n    if (!buttonText) return null\n    return (\n        <Stack gap={1.5} mt={1.5}>\n            {hint ? (\n                <Typography color={(t) => t.palette.maskColor.main} fontSize={14} lineHeight=\"18px\" height={36}>\n                    {hint}\n                </Typography>\n            ) : null}\n            <Stack direction=\"row\" justifyContent=\"center\">\n                <Button color=\"primary\" className={classes.button} onClick={onClick}>\n                    <Icons.Identity size={18} />\n                    {buttonText}\n                </Button>\n            </Stack>\n        </Stack>\n    )\n}\n","import { makeStyles } from '@masknet/theme'\nimport qr from 'qrcode'\nimport { useEffect, useRef, useState } from 'react'\nimport { Typography } from '@mui/material'\nimport { Trans } from 'react-i18next'\nimport { blue } from '@mui/material/colors'\n\ninterface QRProps {\n    text: string\n    options?: qr.QRCodeRenderersOptions\n    canvasProps?: React.DetailedHTMLProps<\n        React.CanvasHTMLAttributes<HTMLCanvasElement & HTMLImageElement>,\n        HTMLCanvasElement & HTMLImageElement\n    >\n}\n\nconst CACHE_SCOPE = 'qrcode'\nconst useStyles = makeStyles()((theme) => ({\n    text: {\n        paddingTop: 50,\n    },\n    info: {\n        color: theme.palette.mode === 'dark' ? blue[500] : blue[800],\n        extDecoration: 'underline',\n        cursor: 'pointer',\n    },\n}))\n\nexport function QRCode({ text, options = {}, canvasProps }: QRProps) {\n    const ref = useRef<HTMLCanvasElement | null>(null)\n    const [error, setError] = useState(false)\n    const image = cache.get(CACHE_SCOPE, text)\n    const { classes } = useStyles()\n    useEffect(() => {\n        if (!ref.current || error) return\n\n        qr.toCanvas(ref.current, text, options, (err) => {\n            if (err) {\n                setError(true)\n                cache.remove(CACHE_SCOPE, text)\n                throw err\n            }\n            const dataURL = ref.current?.toDataURL()\n            if (dataURL) {\n                cache.set(CACHE_SCOPE, text, dataURL)\n            }\n        })\n    }, [options, text, error])\n\n    return error ? (\n        <>\n            <Typography color=\"textPrimary\" variant=\"body1\" className={classes.text}>\n                <Trans\n                    i18nKey=\"backup_qrcode_error\"\n                    components={{\n                        again: (\n                            <span\n                                onClick={() => {\n                                    setError(false)\n                                }}\n                                className={classes.info}\n                            />\n                        ),\n                    }}\n                />\n            </Typography>\n        </>\n    ) : image ? (\n        <img src={image} {...canvasProps} />\n    ) : (\n        <canvas {...canvasProps} ref={ref} />\n    )\n}\n\nconst cache = {\n    get(scope: string, key: string) {\n        return sessionStorage.getItem(`${scope}:${key}`)\n    },\n    set(scope: string, key: string, value: string) {\n        return sessionStorage.setItem(`${scope}:${key}`, value)\n    },\n    remove(scope: string, key: string) {\n        return sessionStorage.removeItem(`${scope}:${key}`)\n    },\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Box, Typography, type BoxProps, Button } from '@mui/material'\nimport { memo } from 'react'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    statusBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    text: {\n        color: theme.palette.maskColor.second,\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight: '36px',\n    },\n    button: {\n        marginTop: theme.spacing(1.5),\n        fontSize: '12px',\n        fontWeight: 700,\n        minWidth: theme.spacing(11),\n        height: theme.spacing(4),\n    },\n}))\n\ninterface Props extends BoxProps {\n    message?: string\n    actionLabel?: string\n    onRetry?(): void\n}\n\nexport const ReloadStatus = memo(function ReloadStatus({\n    className,\n    children,\n    message,\n    actionLabel,\n    onRetry,\n    ...rest\n}: Props) {\n    const { classes, cx } = useStyles()\n    const t = useSharedTrans()\n    return (\n        <Box className={cx(classes.statusBox, className)} p={2} {...rest}>\n            <Typography className={classes.text}>{message ?? t.load_failed()}</Typography>\n            <Button className={classes.button} onClick={() => onRetry?.()} variant=\"roundedContained\" size=\"medium\">\n                {actionLabel ?? t.load_retry()}\n            </Button>\n        </Box>\n    )\n})\n","import type { PropsWithChildren } from 'react'\nimport { BaseSharedUIProvider } from './base/index.js'\n\nexport function SharedContextProvider({ children }: PropsWithChildren<{}>) {\n    return <BaseSharedUIProvider>{children}</BaseSharedUIProvider>\n}\n","import { Icons } from '@masknet/icons'\nimport { EMPTY_LIST, type NetworkPluginID } from '@masknet/shared-base'\nimport { ActionButton, MaskTextField, makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport {\n    useAccount,\n    useAddressType,\n    useChainContext,\n    useWeb3Connection,\n    useWeb3Hub,\n    useWeb3Others,\n} from '@masknet/web3-hooks-base'\nimport { isSameAddress, type NonFungibleTokenContract } from '@masknet/web3-shared-base'\nimport { AddressType, formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { Stack, Typography, useTheme } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { useQueries, useQuery } from '@tanstack/react-query'\nimport { compact, uniq } from 'lodash-es'\nimport { memo, useCallback, useMemo, useState, type FormEvent } from 'react'\nimport { Controller, useForm } from 'react-hook-form'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { CollectibleItem, CollectibleItemSkeleton } from '../AssetsManagement/CollectibleItem.js'\nimport { EmptyStatus } from '../EmptyStatus/index.js'\nimport { LoadingStatus } from '../LoadingStatus/index.js'\nimport { ReloadStatus } from '../ReloadStatus/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    form: {\n        height: 564,\n        boxSizing: 'border-box',\n        display: 'flex',\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.maskColor.bottom,\n        flexDirection: 'column',\n        overflow: 'auto',\n        msOverflowStyle: 'none',\n        scrollbarWidth: 'none',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    main: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        // Space for toolbar\n        paddingBottom: theme.spacing(9),\n        boxSizing: 'border-box',\n    },\n    grid: {\n        width: '100%',\n        display: 'grid',\n        overflow: 'auto',\n        gridGap: theme.spacing(2),\n        padding: theme.spacing(2, 0),\n        paddingRight: theme.spacing(1),\n        boxSizing: 'border-box',\n        marginBottom: 'auto',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    notMine: {\n        opacity: 0.5,\n        cursor: 'not-allowed',\n        '*': {\n            cursor: 'not-allowed',\n        },\n    },\n    error: {\n        backgroundColor: theme.palette.maskColor.bottom,\n        fontSize: 14,\n        color: theme.palette.maskColor.danger,\n    },\n    toolbar: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        height: theme.spacing(9),\n        padding: theme.spacing(0, 2),\n        cursor: 'pointer',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.05)',\n        backdropFilter: 'blur(16px)',\n        borderRadius: theme.spacing(0, 0, 1.5, 1.5),\n    },\n    input: {\n        fontSize: 12,\n    },\n}))\n\ntype AddingNFTs<T extends NetworkPluginID = NetworkPluginID> = [\n    contract: NonFungibleTokenContract<Web3Helper.Definition[T]['ChainId'], Web3Helper.Definition[T]['SchemaType']>,\n    tokenIds: string[],\n]\n\nexport interface AddCollectiblesProps<T extends NetworkPluginID = NetworkPluginID>\n    extends withClasses<'grid' | 'form' | 'main'> {\n    pluginID?: T\n    chainId?: Web3Helper.Definition[T]['ChainId']\n    /**\n     * Specified account.\n     * For example, in PFP, we can add collectibles from verified wallets if no wallet connected.\n     */\n    account?: string\n    onAdd(result?: AddingNFTs<T>): void\n    disabled?: boolean\n}\n\nfunction isValidTokenIds(rawIds: string) {\n    const containsInvalidId = rawIds.split(',').some((v) => {\n        const trimmed = v.trim()\n        if (!trimmed) return false\n        const id = Number.parseInt(trimmed, 10)\n        return Number.isNaN(id) || id <= 0\n    })\n    return !containsInvalidId\n}\n\nexport const AddCollectibles = memo(function AddCollectibles(props: AddCollectiblesProps) {\n    const { pluginID, chainId: defaultChainId, account: defaultAccount, onAdd } = props\n    const { chainId } = useChainContext({ chainId: defaultChainId })\n    const t = useSharedTrans()\n    const theme = useTheme()\n    const walletAccount = useAccount()\n    const account = defaultAccount || walletAccount\n    const { classes } = useStyles(undefined, { props })\n    const Others = useWeb3Others(pluginID)\n\n    const {\n        control,\n        watch,\n        handleSubmit,\n        resetField,\n        formState: { errors, isValidating },\n    } = useForm({\n        mode: 'all',\n        defaultValues: { address: '', tokenIds: '' },\n    })\n    const watchedTokenIds = watch('tokenIds')\n    const tokenIds = useMemo(() => uniq(compact(watchedTokenIds.split(',').map((id) => id.trim()))), [watchedTokenIds])\n    const address = watch('address')\n    const hub = useWeb3Hub(pluginID, { chainId })\n    const connection = useWeb3Connection(pluginID, { chainId })\n\n    const { value: addressType, loading: loadingAddressType } = useAddressType(\n        pluginID,\n        Others.isValidAddress(address) ? address : '',\n        {\n            chainId,\n        },\n    )\n\n    const validationMsgForAddress = useMemo(() => {\n        if (!address) return ''\n        if (!Others.isValidAddress?.(address ?? '') || (addressType !== AddressType.Contract && !loadingAddressType))\n            return t.collectible_contract_invalid()\n        return ''\n    }, [address, addressType, loadingAddressType])\n\n    const {\n        data: contract,\n        isLoading: isLoadingContract,\n        isError,\n        refetch,\n    } = useQuery({\n        queryKey: ['nft-contract', pluginID, chainId, address],\n        queryFn: () => connection.getNonFungibleTokenContract(address, undefined, { chainId }),\n    })\n\n    const isValid = useMemo(() => {\n        return Boolean(isValidTokenIds(watchedTokenIds) && !validationMsgForAddress && address && tokenIds.length > 0)\n    }, [watchedTokenIds, validationMsgForAddress])\n\n    const Web3 = useWeb3Connection(pluginID, {\n        chainId,\n    })\n    const assetsQueries = useQueries({\n        queries: tokenIds.map((tokenId) => ({\n            enabled: isValid,\n            queryKey: ['nft-asset', account, pluginID, chainId, address, tokenId],\n            queryFn: async () => {\n                try {\n                    return await hub.getNonFungibleAsset(address, tokenId, { chainId, account })\n                } catch (err) {\n                    const token = await Web3.getNonFungibleToken(address, tokenId)\n                    return { ...token, owner: { address: token.ownerId } }\n                }\n            },\n        })),\n    })\n    const loadingAssets = assetsQueries.every((x) => x.isLoading)\n    const allFailed = assetsQueries.every((x) => x.failureReason)\n    const noResults = assetsQueries.every((x) => !x.isLoading && !x.data) || !isValid || allFailed\n    const someNotMine = assetsQueries.some((x) => (x.data ? !isSameAddress(x.data.owner?.address, account) : false))\n\n    const handleFormSubmit = useCallback(\n        (event: FormEvent<HTMLFormElement>) => {\n            handleSubmit(() => {})(event)\n        },\n        [handleSubmit],\n    )\n    const [selectedTokenIdsMap, setSelectedTokenIdsMap] = useState<Record<string, string[]>>({})\n    const selectedTokenIds = selectedTokenIdsMap[formatEthereumAddress(address)] || EMPTY_LIST\n\n    const toggleSelect = useCallback(\n        (asset: Web3Helper.NonFungibleAssetAll) => {\n            setSelectedTokenIdsMap((idsMap) => {\n                const ids = idsMap[formatEthereumAddress(address)] ?? []\n                const newIds = ids.includes(asset.tokenId)\n                    ? ids.filter((x) => x !== asset.tokenId)\n                    : [...ids, asset.tokenId]\n                return {\n                    ...idsMap,\n                    [formatEthereumAddress(address)]: newIds,\n                }\n            })\n        },\n        [address],\n    )\n\n    const handleAdd = useCallback(() => {\n        if (!contract) return\n        onAdd([contract, selectedTokenIds])\n    }, [contract, selectedTokenIds, onAdd])\n\n    const disabled = !selectedTokenIds.length || isLoadingContract || isValidating || props.disabled\n\n    return (\n        <form className={classes.form} onSubmit={handleFormSubmit}>\n            <Controller\n                control={control}\n                name=\"address\"\n                render={({ field }) => {\n                    return (\n                        <>\n                            <MaskTextField\n                                {...field}\n                                autoFocus\n                                placeholder={t.add_collectibles_address_placeholder()}\n                                error={!!(errors.address || validationMsgForAddress)}\n                                InputProps={{\n                                    spellCheck: false,\n                                    endAdornment: field.value ? (\n                                        <Icons.Close\n                                            size={18}\n                                            onClick={() => resetField('address')}\n                                            color={validationMsgForAddress ? theme.palette.maskColor.danger : undefined}\n                                        />\n                                    ) : null,\n                                    classes: { input: classes.input },\n                                }}\n                            />\n                            {validationMsgForAddress ? (\n                                <Typography className={classes.error} mt={0.5}>\n                                    {validationMsgForAddress}\n                                </Typography>\n                            ) : null}\n                        </>\n                    )\n                }}\n            />\n            <Box mt={2}>\n                <Controller\n                    control={control}\n                    name=\"tokenIds\"\n                    render={({ field }) => (\n                        <>\n                            <MaskTextField\n                                {...field}\n                                placeholder={t.add_collectibles_token_id_placeholder()}\n                                error={!!errors.tokenIds}\n                                InputProps={{\n                                    spellCheck: false,\n                                    endAdornment: field.value ? (\n                                        <Icons.Close\n                                            size={18}\n                                            onClick={() => resetField('tokenIds')}\n                                            color={errors.tokenIds ? theme.palette.maskColor.danger : undefined}\n                                        />\n                                    ) : null,\n                                    classes: { input: classes.input },\n                                }}\n                            />\n\n                            {errors.tokenIds ? (\n                                <Typography className={classes.error} mt={0.5}>\n                                    {errors.tokenIds?.message}\n                                </Typography>\n                            ) : null}\n                        </>\n                    )}\n                />\n            </Box>\n            {someNotMine ? (\n                <Typography className={classes.error} mt={1}>\n                    {t.collection_not_belong_to_you()}\n                </Typography>\n            ) : null}\n            <div className={classes.main}>\n                {!address || tokenIds.length === 0 ? null : (isLoadingContract || loadingAssets) &&\n                  isValid &&\n                  !allFailed ? (\n                    <LoadingStatus flexGrow={1} />\n                ) : isError ? (\n                    <ReloadStatus flexGrow={1} onRetry={refetch} />\n                ) : noResults ? (\n                    <EmptyStatus height=\"100%\">{t.no_results()}</EmptyStatus>\n                ) : (\n                    <Box className={classes.grid}>\n                        {assetsQueries\n                            .filter((x) => x.data)\n                            .map(({ data: asset, isLoading }, i) => {\n                                if (isLoading) return <CollectibleItemSkeleton key={i} />\n                                if (!asset) return null\n                                const isMine = isSameAddress(account, asset.owner?.address)\n                                return (\n                                    <CollectibleItem\n                                        key={`${asset.chainId}.${asset.address}.${asset.tokenId}`}\n                                        className={isMine ? undefined : classes.notMine}\n                                        asset={asset}\n                                        pluginID={pluginID}\n                                        disableName\n                                        actionLabel={t.send()}\n                                        disableAction\n                                        onItemClick={isMine ? toggleSelect : undefined}\n                                        isSelected={selectedTokenIds.includes(asset.tokenId)}\n                                        showUnCheckedIndicator\n                                    />\n                                )\n                            })}\n                    </Box>\n                )}\n            </div>\n            <Stack className={classes.toolbar} direction=\"row\" justifyContent=\"center\">\n                <ActionButton fullWidth startIcon={<Icons.Avatar size={18} />} disabled={disabled} onClick={handleAdd}>\n                    {t.add_collectibles()}\n                </ActionButton>\n            </Stack>\n        </form>\n    )\n})\n","import { type NetworkPluginID } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { DialogContent } from '@mui/material'\nimport { memo } from 'react'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { InjectedDialog } from '../../contexts/components/index.js'\nimport { AddCollectibles, type AddCollectiblesProps } from '../../components/index.js'\n\nconst useStyles = makeStyles()(() => ({\n    content: {\n        padding: 0,\n    },\n    grid: {\n        gridTemplateColumns: 'repeat(auto-fill, minmax(20%, 1fr))',\n    },\n}))\n\ninterface AddCollectiblesDialogProps<T extends NetworkPluginID = NetworkPluginID> extends AddCollectiblesProps<T> {\n    open: boolean\n}\n\nexport const AddCollectiblesDialog = memo(function AddCollectiblesDialog({\n    open,\n    pluginID,\n    chainId,\n    account,\n    onAdd,\n}: AddCollectiblesDialogProps) {\n    const t = useSharedTrans()\n    const { classes } = useStyles()\n\n    return (\n        <InjectedDialog titleBarIconStyle={'back'} open={open} onClose={() => onAdd()} title={t.add_collectibles()}>\n            <DialogContent classes={{ root: classes.content }}>\n                <AddCollectibles\n                    pluginID={pluginID}\n                    chainId={chainId}\n                    account={account}\n                    onAdd={onAdd}\n                    classes={{ grid: classes.grid }}\n                />\n            </DialogContent>\n        </InjectedDialog>\n    )\n})\n","import { forwardRef, useState } from 'react'\nimport { NetworkPluginID, type SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { NonFungibleTokenContract } from '@masknet/web3-shared-base'\nimport { AddCollectiblesDialog } from './AddCollectiblesDialog.js'\n\nexport interface AddCollectiblesModalOpenProps {\n    pluginID?: NetworkPluginID\n    chainId?: Web3Helper.ChainIdAll\n    /**\n     * Specified account.\n     * For example, in PFP, we can add collectibles from verified wallets if no wallet connected.\n     */\n    account?: string\n}\n\nexport type AddCollectiblesModalCloseProps =\n    | [contract: NonFungibleTokenContract<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>, tokenIds: string[]]\n    | undefined\n\nexport const AddCollectiblesModal = forwardRef<\n    SingletonModalRefCreator<AddCollectiblesModalOpenProps, AddCollectiblesModalCloseProps>\n>((props, ref) => {\n    const [pluginID, setPluginID] = useState<NetworkPluginID>(NetworkPluginID.PLUGIN_EVM)\n    const [chainId, setChainId] = useState<Web3Helper.ChainIdAll>()\n    const [account, setAccount] = useState<string>()\n\n    const [open, dispatch] = useSingletonModal(ref, {\n        onOpen(props) {\n            setPluginID(props.pluginID ?? NetworkPluginID.PLUGIN_EVM)\n            setChainId(props.chainId)\n            setAccount(props.account)\n        },\n    })\n\n    if (!open) return null\n    return (\n        <AddCollectiblesDialog\n            open\n            onAdd={(results) => dispatch?.close(results)}\n            pluginID={pluginID}\n            account={account}\n            chainId={chainId}\n        />\n    )\n})\n","import { Box } from '@mui/material'\nimport { useState } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport type { Application } from './ApplicationSettingPluginList.js'\nimport { CarouselProvider, Slider, Slide } from 'pure-react-carousel'\n\nconst useStyles = makeStyles()(() => {\n    return {\n        recommendFeatureAppListWrapper: {\n            display: 'flex',\n            scrollbarColor: 'transparent transparent',\n            overflowX: 'scroll',\n            margin: '0 2px 8px',\n            padding: '8px 16px',\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        carousel: {\n            position: 'relative',\n            height: 138,\n            zIndex: 100,\n            overflowX: 'scroll',\n            scrollbarColor: 'transparent transparent',\n            overscrollBehavior: 'contain',\n            '& .carousel__slider': {\n                padding: '8px 2px 0',\n                width: 562,\n                overscrollBehavior: 'contain',\n                overflowX: 'scroll',\n                '&::-webkit-scrollbar': {\n                    display: 'none',\n                },\n            },\n            '& .carousel__slide:focus-visible': {\n                outline: 'none',\n                display: 'none',\n            },\n            overflow: 'hidden',\n            '& .carousel__slide-focus-ring': {\n                display: 'none',\n            },\n        },\n        isHoveringCarousel: {\n            height: 270,\n            '& .carousel__slider': {\n                height: 270,\n            },\n        },\n    }\n})\n\ninterface Props extends withClasses<'recommendFeatureAppListWrapper'> {\n    recommendFeatureAppList: Application[]\n    RenderEntryComponent: (props: { application: Application }) => JSX.Element\n    isCarouselReady?: () => boolean | null\n    setIsHoveringCarousel: (hover: boolean) => void\n    isHoveringCarousel: boolean\n}\n\nexport function ApplicationRecommendArea(props: Props) {\n    const {\n        recommendFeatureAppList,\n        RenderEntryComponent,\n        isCarouselReady,\n        isHoveringCarousel,\n        setIsHoveringCarousel,\n    } = props\n    const { classes, cx } = useStyles(undefined, { props })\n    const [isPlaying, setIsPlaying] = useState(true)\n\n    return (\n        <>\n            <link rel=\"stylesheet\" href={new URL('./assets/react-carousel.es.css', import.meta.url).toString()} />\n            {recommendFeatureAppList.length > 2 && isCarouselReady?.() ? (\n                <CarouselProvider\n                    naturalSlideWidth={220}\n                    naturalSlideHeight={117}\n                    totalSlides={recommendFeatureAppList.length}\n                    visibleSlides={2.242}\n                    infinite={false}\n                    interval={2500}\n                    className={cx(classes.carousel, isHoveringCarousel ? classes.isHoveringCarousel : '')}\n                    isPlaying={isPlaying}>\n                    <Slider onScroll={(e) => setIsPlaying((e.target as HTMLDivElement).scrollLeft === 0)}>\n                        {recommendFeatureAppList.map((application, i) => (\n                            <Slide\n                                index={i}\n                                key={application.entry.ApplicationEntryID}\n                                onMouseEnter={() => {\n                                    setIsHoveringCarousel(true)\n                                    setIsPlaying(false)\n                                }}\n                                onMouseLeave={() => {\n                                    setIsHoveringCarousel(false)\n                                    setIsPlaying(true)\n                                }}>\n                                <RenderEntryComponent application={application} />\n                            </Slide>\n                        ))}\n                    </Slider>\n                </CarouselProvider>\n            ) : (\n                <Box className={classes.recommendFeatureAppListWrapper}>\n                    {recommendFeatureAppList.map((application) => (\n                        <RenderEntryComponent key={application.entry.ApplicationEntryID} application={application} />\n                    ))}\n                </Box>\n            )}\n        </>\n    )\n}\n","import { createContext, useContext, useMemo, useState, type PropsWithChildren } from 'react'\nimport { useTimeout } from 'react-use'\nimport { Typography } from '@mui/material'\nimport { useActivatedPluginsSiteAdaptor, type IdentityResolved } from '@masknet/plugin-infra/content-script'\nimport {\n    useCurrentPersonaConnectStatus,\n    SelectProviderModal,\n    useSharedTrans,\n    PersonaContext,\n    type PersonaPerSiteConnectStatus,\n} from '@masknet/shared'\nimport { Boundary, getMaskColor, makeStyles } from '@masknet/theme'\nimport {\n    currentPersonaIdentifier,\n    EnhanceableSite,\n    EMPTY_LIST,\n    type DashboardRoutes,\n    type NetworkPluginID,\n    type PersonaInformation,\n} from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { useChainContext, useNetworkContext } from '@masknet/web3-hooks-base'\nimport { ApplicationRecommendArea } from './ApplicationRecommendArea.js'\nimport { useUnlistedEntries, type Application } from './ApplicationSettingPluginList.js'\n\nconst useStyles = makeStyles<{\n    shouldScroll: boolean\n    isCarouselReady: boolean\n}>()((theme, props) => {\n    const smallQuery = `@media (max-width: ${theme.breakpoints.values.sm}px)`\n    return {\n        applicationWrapper: {\n            padding: theme.spacing(0, navigator.userAgent.includes('Firefox') ? 1.5 : 0.25, 1, 3),\n            transform: props.isCarouselReady ? 'translateX(-8px)' : 'translateX(-8px)',\n            display: 'grid',\n            gridTemplateColumns: 'repeat(4, 1fr)',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            gridTemplateRows: '100px',\n            gridGap: 10,\n            justifyContent: 'space-between',\n            maxHeight: 386,\n            width: props.shouldScroll && !navigator.userAgent.includes('Firefox') ? 583 : 570,\n            scrollbarColor: `${theme.palette.maskColor.secondaryLine} ${theme.palette.maskColor.secondaryLine}`,\n            scrollbarWidth: 'thin',\n            '::-webkit-scrollbar': {\n                backgroundColor: 'transparent',\n                width: 20,\n            },\n            '::-webkit-scrollbar-thumb': {\n                borderRadius: '20px',\n                width: 5,\n                border: '7px solid rgba(0, 0, 0, 0)',\n                backgroundColor: theme.palette.maskColor.secondaryLine,\n                backgroundClip: 'padding-box',\n            },\n            [smallQuery]: {\n                overflow: 'auto',\n                overscrollBehavior: 'contain',\n                gridTemplateColumns: 'repeat(3, 1fr)',\n                gridGap: theme.spacing(1),\n            },\n        },\n        applicationWrapperWithCarousel: {\n            position: 'relative',\n            zIndex: 50,\n            top: '-132px',\n        },\n        placeholderWrapper: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            paddingRight: 24,\n            height: 324,\n        },\n        placeholder: {\n            color: getMaskColor(theme).textLight,\n        },\n    }\n})\n\ninterface ApplicationBoardContentProps extends withClasses<'applicationWrapper' | 'recommendFeatureAppListWrapper'> {\n    openDashboard?: (route?: DashboardRoutes, search?: string) => void\n    queryOwnedPersonaInformation?: (initializedOnly: boolean) => Promise<PersonaInformation[]>\n    currentSite?: EnhanceableSite\n    lastRecognized?: IdentityResolved\n    allPersonas: PersonaInformation[]\n    applicationCurrentStatus?: PersonaPerSiteConnectStatus\n    personaPerSiteConnectStatusLoading: boolean\n}\n\nexport function ApplicationBoardContent({\n    openDashboard,\n    queryOwnedPersonaInformation,\n    currentSite,\n    lastRecognized,\n    allPersonas,\n    applicationCurrentStatus,\n    personaPerSiteConnectStatusLoading,\n    classes,\n}: ApplicationBoardContentProps) {\n    return (\n        <PersonaContext.Provider initialState={{ queryOwnedPersonaInformation }}>\n            <ApplicationEntryStatusProvider\n                openDashboard={openDashboard}\n                lastRecognized={lastRecognized}\n                allPersonas={allPersonas}\n                applicationCurrentStatus={applicationCurrentStatus}\n                personaPerSiteConnectStatusLoading={personaPerSiteConnectStatusLoading}>\n                <ApplicationBoardPluginsList\n                    currentSite={currentSite}\n                    classes={{\n                        applicationWrapper: classes?.applicationWrapper,\n                        recommendFeatureAppListWrapper: classes?.recommendFeatureAppListWrapper,\n                    }}\n                />\n            </ApplicationEntryStatusProvider>\n        </PersonaContext.Provider>\n    )\n}\n\ninterface ApplicationBoardPluginsListProps\n    extends withClasses<'applicationWrapper' | 'recommendFeatureAppListWrapper'> {\n    currentSite?: EnhanceableSite\n}\n\nfunction ApplicationBoardPluginsList(props: ApplicationBoardPluginsListProps) {\n    const { currentSite = EnhanceableSite.Twitter } = props\n    const t = useSharedTrans()\n    const plugins = useActivatedPluginsSiteAdaptor('any')\n    const { pluginID: currentWeb3Network } = useNetworkContext()\n    const { account, chainId } = useChainContext()\n    const applicationList = useMemo(\n        () =>\n            plugins\n                .flatMap(({ ID, ApplicationEntries, enableRequirement }) => {\n                    if (!ApplicationEntries) return EMPTY_LIST\n                    const currentWeb3NetworkSupportedChainIds = enableRequirement.web3?.[currentWeb3Network]\n                    const isWalletConnectedRequired = currentWeb3NetworkSupportedChainIds !== undefined\n                    const currentSiteIsSupportedNetwork = enableRequirement.supports.sites[currentSite]\n                    const isEnabledOnTheCurrentSite =\n                        currentSiteIsSupportedNetwork === undefined || currentSiteIsSupportedNetwork\n                    return ApplicationEntries.map((entry) => ({\n                        entry,\n                        enabled: isEnabledOnTheCurrentSite,\n                        pluginID: ID,\n                        isWalletConnectedRequired:\n                            !account && isWalletConnectedRequired && !entry.entryWalletConnectedNotRequired,\n                    }))\n                })\n                .sort((a, b) => {\n                    return (a.entry.appBoardSortingDefaultPriority ?? 0) - (b.entry.appBoardSortingDefaultPriority ?? 0)\n                })\n                .filter((x) => !!x.entry.RenderEntryComponent),\n        [plugins, currentWeb3Network, chainId, account],\n    )\n    const recommendFeatureAppList = applicationList\n        .filter((x) => x.entry.recommendFeature)\n        .sort((a, b) => (a.entry.appBoardSortingDefaultPriority ?? 0) - (b.entry.appBoardSortingDefaultPriority ?? 0))\n\n    const unlistedEntries = useUnlistedEntries()\n    const listedAppList = applicationList.filter(\n        (x) => !x.entry.recommendFeature && !unlistedEntries.includes(x.entry.ApplicationEntryID),\n    )\n    // #region handle carousel ui\n    const [isCarouselReady] = useTimeout(300)\n    const [isHoveringCarousel, setIsHoveringCarousel] = useState(false)\n    // #endregion\n    const { classes, cx } = useStyles(\n        {\n            shouldScroll: listedAppList.length > 12,\n            isCarouselReady: !!isCarouselReady(),\n        },\n        { props },\n    )\n\n    return (\n        <>\n            <ApplicationRecommendArea\n                classes={{\n                    recommendFeatureAppListWrapper: classes?.recommendFeatureAppListWrapper,\n                }}\n                recommendFeatureAppList={recommendFeatureAppList}\n                isCarouselReady={isCarouselReady}\n                RenderEntryComponent={RenderEntryComponent}\n                isHoveringCarousel={isHoveringCarousel}\n                setIsHoveringCarousel={setIsHoveringCarousel}\n            />\n\n            {listedAppList.length > 0 ? (\n                <Boundary>\n                    <section\n                        className={cx(\n                            classes.applicationWrapper,\n                            recommendFeatureAppList.length > 2 && isCarouselReady() && isHoveringCarousel\n                                ? classes.applicationWrapperWithCarousel\n                                : '',\n                        )}>\n                        {listedAppList.map((application) => (\n                            <RenderEntryComponent\n                                key={application.entry.ApplicationEntryID}\n                                application={application}\n                            />\n                        ))}\n                    </section>\n                </Boundary>\n            ) : (\n                <div\n                    className={cx(\n                        classes.placeholderWrapper,\n                        recommendFeatureAppList.length > 2 && isCarouselReady() && isHoveringCarousel\n                            ? classes.applicationWrapperWithCarousel\n                            : '',\n                    )}>\n                    <Typography className={classes.placeholder}>\n                        {t.application_display_tab_plug_app_unlisted_placeholder()}\n                    </Typography>\n                </div>\n            )}\n        </>\n    )\n}\n\nfunction RenderEntryComponent({ application }: { application: Application }) {\n    const Entry = application.entry.RenderEntryComponent!\n    const t = useSharedTrans()\n\n    const ApplicationEntryStatus = useContext(ApplicationEntryStatusContext)\n\n    // #region entry disabled\n    const disabled = useMemo(() => {\n        if (!application.enabled) return true\n\n        return !!application.entry.nextIdRequired && ApplicationEntryStatus.isLoading\n    }, [application, ApplicationEntryStatus.isLoading])\n    // #endregion\n\n    const clickHandler = useMemo(() => {\n        if (application.isWalletConnectedRequired) {\n            return async (walletConnectedCallback?: () => void, requiredSupportPluginID?: NetworkPluginID) => {\n                const connected = await SelectProviderModal.openAndWaitForClose({ requiredSupportPluginID })\n                if (connected) walletConnectedCallback?.()\n            }\n        }\n        if (!application.entry.nextIdRequired) return\n        if (\n            ApplicationEntryStatus.isPersonaCreated === false ||\n            ApplicationEntryStatus.shouldVerifyNextId ||\n            !ApplicationEntryStatus.isPersonaConnected\n        )\n            return () =>\n                ApplicationEntryStatus.personaAction?.(\n                    ApplicationEntryStatus.isPersonaCreated ? application.pluginID : undefined,\n                )\n\n        return\n    }, [ApplicationEntryStatus, application])\n\n    // #endregion\n\n    // #region tooltip hint\n    const tooltipHint = (() => {\n        if (ApplicationEntryStatus.isLoading) return\n        if (application.isWalletConnectedRequired) return t.application_tooltip_hint_connect_wallet()\n        if (!application.entry.nextIdRequired) return\n        if (ApplicationEntryStatus.isPersonaCreated === false && !disabled)\n            return t.application_tooltip_hint_persona_accessing_dapp()\n        if (ApplicationEntryStatus.isPersonaConnected === false && !disabled)\n            return t.application_tooltip_hint_connect_persona()\n        if (ApplicationEntryStatus.shouldVerifyNextId && !disabled) return t.application_tooltip_hint_verify()\n        return\n    })()\n    // #endregion\n\n    return <Entry disabled={disabled} tooltipHint={tooltipHint} onClick={clickHandler} />\n}\n\ninterface ApplicationEntryStatusContextProps {\n    isPersonaConnected: boolean | undefined\n    isPersonaCreated: boolean | undefined\n    isNextIDVerify: boolean | undefined\n    isSiteConnectedToCurrentPersona: boolean | undefined\n    shouldDisplayTooltipHint: boolean | undefined\n    shouldVerifyNextId: boolean | undefined\n    currentPersonaPublicKey: string | undefined\n    currentSiteConnectedPersonaPublicKey: string | undefined\n    personaAction: ((target?: string | undefined, position?: 'center' | 'top-right' | undefined) => void) | undefined\n    isLoading: boolean\n}\n\nconst ApplicationEntryStatusContext = createContext<ApplicationEntryStatusContextProps>({\n    isPersonaConnected: undefined,\n    isPersonaCreated: undefined,\n    isNextIDVerify: undefined,\n    isSiteConnectedToCurrentPersona: undefined,\n    shouldDisplayTooltipHint: undefined,\n    shouldVerifyNextId: undefined,\n    currentPersonaPublicKey: undefined,\n    currentSiteConnectedPersonaPublicKey: undefined,\n    personaAction: undefined,\n    isLoading: false,\n})\nApplicationEntryStatusContext.displayName = 'ApplicationEntryStatusContext'\n\ninterface ApplicationEntryStatusProviderProps extends PropsWithChildren<{}> {\n    openDashboard?: (route?: DashboardRoutes, search?: string) => void\n    lastRecognized?: IdentityResolved\n    applicationCurrentStatus?: PersonaPerSiteConnectStatus\n    personaPerSiteConnectStatusLoading: boolean\n    allPersonas: PersonaInformation[]\n}\nfunction ApplicationEntryStatusProvider({\n    children,\n    openDashboard,\n    lastRecognized,\n    applicationCurrentStatus,\n    personaPerSiteConnectStatusLoading,\n    allPersonas,\n}: ApplicationEntryStatusProviderProps) {\n    const currentIdentifier = useValueRef(currentPersonaIdentifier)\n    const { value: personaConnectStatus, loading: personaStatusLoading } = useCurrentPersonaConnectStatus(\n        allPersonas,\n        currentIdentifier,\n        openDashboard,\n        lastRecognized,\n    )\n\n    const { isSiteConnectedToCurrentPersona, currentPersonaPublicKey, currentSiteConnectedPersonaPublicKey } =\n        applicationCurrentStatus ?? {}\n\n    const Context = useMemo(\n        (): ApplicationEntryStatusContextProps => ({\n            personaAction: personaConnectStatus.action,\n            isPersonaCreated: personaConnectStatus.hasPersona,\n            isPersonaConnected: personaConnectStatus.connected,\n            isNextIDVerify: personaConnectStatus.verified,\n            isSiteConnectedToCurrentPersona,\n            shouldDisplayTooltipHint:\n                applicationCurrentStatus?.isSiteConnectedToCurrentPersona === false && personaConnectStatus.connected,\n            shouldVerifyNextId: !!(!personaConnectStatus.verified && applicationCurrentStatus),\n            currentPersonaPublicKey,\n            currentSiteConnectedPersonaPublicKey,\n            isLoading: personaStatusLoading || personaPerSiteConnectStatusLoading,\n        }),\n        [\n            applicationCurrentStatus,\n            personaStatusLoading,\n            personaPerSiteConnectStatusLoading,\n            personaConnectStatus.action,\n            personaConnectStatus.hasPersona,\n            personaConnectStatus.connected,\n            personaConnectStatus.verified,\n        ],\n    )\n    return <ApplicationEntryStatusContext.Provider value={Context}>{children}</ApplicationEntryStatusContext.Provider>\n}\n","import { useState, useCallback, useEffect } from 'react'\nimport { DialogContent, IconButton, Tab } from '@mui/material'\nimport { TabContext, TabPanel } from '@mui/lab'\nimport { makeStyles, MaskTabList, useTabs } from '@masknet/theme'\nimport {\n    InjectedDialog,\n    LeavePageConfirmModal,\n    useSharedTrans,\n    type PersonaPerSiteConnectStatus,\n} from '@masknet/shared'\nimport { Icons } from '@masknet/icons'\nimport type { IdentityResolved } from '@masknet/plugin-infra'\nimport {\n    CrossIsolationMessages,\n    type EnhanceableSite,\n    type DashboardRoutes,\n    type PersonaInformation,\n    type PluginID,\n} from '@masknet/shared-base'\nimport { ApplicationBoardContent } from './ApplicationBoard.js'\nimport { ApplicationSettingPluginSwitch } from './ApplicationSettingPluginSwitch.js'\nimport { ApplicationSettingPluginList } from './ApplicationSettingPluginList.js'\n\nconst useStyles = makeStyles<{\n    openSettings: boolean\n}>()((theme, { openSettings }) => {\n    return {\n        content: {\n            padding: theme.spacing(1.5, openSettings ? 2 : 0, '6px'),\n            height: openSettings ? 'auto' : 546,\n            overflow: openSettings ? 'hidden scroll' : 'hidden',\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n    }\n})\n\nexport enum ApplicationSettingTabs {\n    pluginList = 'pluginList',\n    pluginSwitch = 'pluginSwitch',\n}\n\ninterface ApplicationBoardProps {\n    open: boolean\n    onClose: () => void\n\n    openDashboard?: (route?: DashboardRoutes, search?: string) => void\n    queryOwnedPersonaInformation?: (initializedOnly: boolean) => Promise<PersonaInformation[]>\n    currentSite?: EnhanceableSite\n    allPersonas: PersonaInformation[]\n    lastRecognized?: IdentityResolved\n    applicationCurrentStatus?: PersonaPerSiteConnectStatus\n    personaPerSiteConnectStatusLoading: boolean\n    setPluginMinimalModeEnabled?: (id: string, checked: boolean) => Promise<void>\n\n    focusPluginID?: PluginID\n    tab?: ApplicationSettingTabs\n    quickMode?: boolean\n}\n\nexport function ApplicationBoard({\n    open,\n    onClose,\n    openDashboard,\n    queryOwnedPersonaInformation,\n    currentSite,\n    allPersonas,\n    lastRecognized,\n    applicationCurrentStatus,\n    personaPerSiteConnectStatusLoading,\n    setPluginMinimalModeEnabled,\n    quickMode = false,\n    tab = ApplicationSettingTabs.pluginSwitch,\n    focusPluginID,\n}: ApplicationBoardProps) {\n    const [openSettings, setOpenSettings] = useState(false)\n    const { classes } = useStyles({ openSettings })\n    const t = useSharedTrans()\n    const [currentTab, onChange, tabs, setTab] = useTabs(\n        ApplicationSettingTabs.pluginList,\n        ApplicationSettingTabs.pluginSwitch,\n    )\n\n    useEffect(() => setTab(tab), [tab])\n\n    const reset = useCallback(() => {\n        setOpenSettings(false)\n        setTab(ApplicationSettingTabs.pluginList)\n    }, [])\n\n    const closeDialog = useCallback(() => {\n        if (openSettings && !quickMode) {\n            setOpenSettings(false)\n            return\n        }\n        onClose()\n        CrossIsolationMessages.events.compositionDialogEvent.sendToLocal({\n            reason: 'timeline',\n            open: false,\n        })\n        reset()\n    }, [openSettings, quickMode, reset])\n\n    return open ? (\n        <TabContext value={currentTab}>\n            <InjectedDialog\n                open={open}\n                maxWidth=\"sm\"\n                isOnBack={!!(openSettings && !quickMode)}\n                onClose={closeDialog}\n                titleTabs={\n                    openSettings ? (\n                        <MaskTabList variant=\"base\" onChange={onChange} aria-label=\"ApplicationBoard\">\n                            <Tab label={t.application_settings_tab_app_list()} value={tabs.pluginList} />\n                            <Tab label={t.application_settings_tab_plug_in_switch()} value={tabs.pluginSwitch} />\n                        </MaskTabList>\n                    ) : null\n                }\n                titleBarIconStyle={openSettings && !quickMode ? 'back' : 'close'}\n                independent={LeavePageConfirmModal.peek()}\n                title={openSettings ? t.application_settings() : t.applications()}\n                titleTail={\n                    openSettings ? null : (\n                        <IconButton size=\"small\" sx={{ margin: '-5px' }} onClick={() => setOpenSettings(true)}>\n                            <Icons.Gear size={24} />\n                        </IconButton>\n                    )\n                }>\n                <DialogContent className={classes.content}>\n                    {openSettings ? (\n                        <>\n                            <TabPanel value={tabs.pluginList} style={{ padding: 0 }}>\n                                <ApplicationSettingPluginList />\n                            </TabPanel>\n                            <TabPanel value={tabs.pluginSwitch} style={{ padding: 0 }}>\n                                <ApplicationSettingPluginSwitch\n                                    focusPluginID={focusPluginID}\n                                    setPluginMinimalModeEnabled={setPluginMinimalModeEnabled}\n                                />\n                            </TabPanel>\n                        </>\n                    ) : (\n                        <ApplicationBoardContent\n                            openDashboard={openDashboard}\n                            queryOwnedPersonaInformation={queryOwnedPersonaInformation}\n                            currentSite={currentSite}\n                            lastRecognized={lastRecognized}\n                            allPersonas={allPersonas}\n                            applicationCurrentStatus={applicationCurrentStatus}\n                            personaPerSiteConnectStatusLoading={personaPerSiteConnectStatusLoading}\n                        />\n                    )}\n                </DialogContent>\n            </InjectedDialog>\n        </TabContext>\n    ) : null\n}\n","import { memo, useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport {\n    PluginTransFieldRender,\n    useActivatedPluginsSiteAdaptor,\n    type Plugin,\n} from '@masknet/plugin-infra/content-script'\nimport { PersistentStorages, type PluginID } from '@masknet/shared-base'\nimport { Boundary, ShadowRootTooltip, getMaskColor, makeStyles, useBoundedPopperProps } from '@masknet/theme'\nimport { List, ListItemButton, Typography } from '@mui/material'\nimport { useSharedTrans } from '../../../index.js'\n\nexport interface Application {\n    entry: Plugin.SiteAdaptor.ApplicationEntry\n    pluginID: PluginID\n    enabled?: boolean\n    isWalletConnectedRequired?: boolean\n}\n\nexport function useUnlistedEntries() {\n    return useSubscription(PersistentStorages.ApplicationEntryUnListed.storage.data.subscription)\n}\n\nasync function toggleEntryListing(entryId: string, listing: boolean) {\n    const state = PersistentStorages.ApplicationEntryUnListed.storage.data\n    if (!state.initialized) await state.initializedPromise\n    if (listing) {\n        state.setValue(state.value.filter((id) => id !== entryId))\n    } else {\n        state.setValue([...state.value, entryId])\n    }\n}\n\nconst useStyles = makeStyles<{\n    iconFilterColor?: string\n}>()((theme, { iconFilterColor }) => ({\n    list: {\n        display: 'grid',\n        gap: theme.spacing(1.5),\n        gridTemplateColumns: 'repeat(6, 1fr)',\n        gridTemplateRows: 'repeat(3, 1fr)',\n        width: '100%',\n        padding: theme.spacing(2, 0),\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n        overflowY: 'scroll',\n        height: 210,\n    },\n    listItem: {\n        width: 84,\n        height: 56,\n        padding: 0,\n        background: theme.palette.maskColor.bottom,\n        boxShadow: `0px 0px 20px ${\n            theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.05)'\n        }`,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 8,\n        position: 'relative',\n    },\n    iconWrapper: {\n        '> *': {\n            width: 36,\n            height: 36,\n        },\n        ...(iconFilterColor\n            ? { filter: `drop-shadow(0px 6px 12px ${iconFilterColor})`, backdropFilter: 'blur(16px)' }\n            : {}),\n    },\n    unlisted: {\n        fontSize: 18,\n        fontWeight: 600,\n    },\n    placeholderWrapper: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: 238,\n    },\n    placeholder: {\n        color: getMaskColor(theme).textLight,\n    },\n}))\n\nexport function ApplicationSettingPluginList() {\n    const { classes } = useStyles({ iconFilterColor: undefined })\n    const t = useSharedTrans()\n\n    const plugins = useActivatedPluginsSiteAdaptor('any')\n    const applicationList = useMemo(() => {\n        return plugins\n            .flatMap(({ ID, ApplicationEntries: entries }) => {\n                if (!entries) return []\n                return entries\n                    .filter((entry) => entry.appBoardSortingDefaultPriority && !entry.recommendFeature)\n                    .map((entry) => ({ entry, pluginID: ID }))\n            })\n            .sort((a, b) => {\n                return (a.entry.appBoardSortingDefaultPriority ?? 0) - (b.entry.appBoardSortingDefaultPriority ?? 0)\n            })\n    }, [plugins])\n\n    const unlisted = useUnlistedEntries()\n    const listedEntries = useMemo(() => {\n        return applicationList.filter((x) => !unlisted.includes(x.entry.ApplicationEntryID))\n    }, [unlisted])\n    const unlistedEntries = useMemo(() => {\n        return applicationList.filter((x) => unlisted.includes(x.entry.ApplicationEntryID))\n    }, [unlisted])\n\n    return (\n        <div>\n            <Typography className={classes.unlisted}>{t.application_settings_tab_plug_app_list_listed()}</Typography>\n            <AppList appList={listedEntries} isListing />\n            <Typography className={classes.unlisted}>{t.application_settings_tab_plug_app_list_unlisted()}</Typography>\n            <AppList appList={unlistedEntries} isListing={false} />\n        </div>\n    )\n}\n\ninterface AppListProps {\n    appList: Application[]\n    isListing: boolean\n}\n\nfunction AppList({ appList, isListing }: AppListProps) {\n    const { classes } = useStyles({ iconFilterColor: undefined })\n    const t = useSharedTrans()\n\n    return appList.length > 0 ? (\n        <Boundary>\n            <List className={classes.list}>\n                {appList.map((application) => (\n                    <AppListItem\n                        key={application.entry.ApplicationEntryID}\n                        pluginID={application.pluginID}\n                        entry={application.entry}\n                        isListing={isListing}\n                    />\n                ))}\n            </List>\n        </Boundary>\n    ) : (\n        <div className={classes.placeholderWrapper}>\n            <Typography className={classes.placeholder}>\n                {isListing\n                    ? t.application_settings_tab_plug_app_unlisted_placeholder()\n                    : t.application_settings_tab_plug_app_listed_placeholder()}\n            </Typography>\n        </div>\n    )\n}\n\ninterface AppListItemProps {\n    pluginID: string\n    entry: Plugin.SiteAdaptor.ApplicationEntry\n    isListing: boolean\n}\n\nconst AppListItem = memo(function AppListItem({ pluginID, entry, isListing }: AppListItemProps) {\n    const { classes } = useStyles({ iconFilterColor: entry.iconFilterColor })\n    const popperProps = useBoundedPopperProps()\n\n    return (\n        <ShadowRootTooltip\n            PopperProps={popperProps}\n            disableInteractive\n            title={\n                <Typography>\n                    <PluginTransFieldRender field={entry.name} pluginID={pluginID} />\n                </Typography>\n            }\n            placement=\"bottom\"\n            arrow>\n            <ListItemButton\n                disableTouchRipple\n                className={classes.listItem}\n                onClick={() => toggleEntryListing(entry.ApplicationEntryID, !isListing)}>\n                <div className={classes.iconWrapper}>{entry.icon}</div>\n            </ListItemButton>\n        </ShadowRootTooltip>\n    )\n})\n","import { memo, useCallback, useEffect, useMemo, useRef } from 'react'\nimport { Icons } from '@masknet/icons'\nimport { PluginTransFieldRender, useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport { CrossIsolationMessages, PluginID } from '@masknet/shared-base'\nimport { openWindow } from '@masknet/shared-base-ui'\nimport { makeStyles, MaskColorVar } from '@masknet/theme'\nimport { Avatar, Box, List, ListItem, ListItemAvatar, Stack, Switch, Typography } from '@mui/material'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    listItem: {\n        padding: theme.spacing(1.5),\n        borderRadius: 12,\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 0px 20px rgba(255, 255, 255, 0.12)'\n                : '0px 0px 20px rgba(0, 0, 0, 0.05)',\n        '&:hover': {\n            boxShadow:\n                theme.palette.mode === 'dark'\n                    ? '0px 0px 20px rgba(255, 255, 255, 0.06)'\n                    : '0px 0px 20px rgba(0, 0, 0, 0.1)',\n        },\n        '&:hover .MuiAvatar-root': {\n            background: theme.palette.background.paper,\n        },\n        '&:not(:last-child)': {\n            marginBottom: theme.spacing(1.5),\n        },\n    },\n    listContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexGrow: 1,\n        alignItems: 'center',\n    },\n    headerWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    settings: {\n        alignSelf: 'flex-start',\n        paddingTop: theme.spacing(0.5),\n        marginLeft: theme.spacing(0.5),\n        cursor: 'pointer',\n        color: MaskColorVar.textSecondary,\n        opacity: theme.palette.mode === 'dark' ? 0.5 : 1,\n    },\n    avatar: {\n        background: theme.palette.background.default,\n        width: '44px',\n        height: '44px',\n        '> *': {\n            width: '26px !important',\n            height: '26px !important',\n        },\n    },\n    placeholder: {\n        minWidth: 56,\n    },\n    info: {\n        maxWidth: 420,\n    },\n    name: {\n        fontSize: 14,\n        fontWeight: 700,\n    },\n    desc: {\n        fontSize: 12,\n        fontWeight: 400,\n        color: theme.palette.mode === 'dark' ? theme.palette.text.secondary : theme.palette.text.primary,\n    },\n}))\n\nconst DSearch_KEY = 'decentralized_search'\n\ninterface Props {\n    focusPluginID?: PluginID | typeof DSearch_KEY\n    setPluginMinimalModeEnabled?: (id: string, checked: boolean) => Promise<void>\n}\n\nexport const ApplicationSettingPluginSwitch = memo(function ApplicationSettingPluginSwitch({\n    focusPluginID,\n    setPluginMinimalModeEnabled,\n}: Props) {\n    const { classes } = useStyles()\n    const plugins = useActivatedPluginsSiteAdaptor('any')\n    const pluginsInMinimalMode = useActivatedPluginsSiteAdaptor(true)\n    const availablePlugins = useMemo(() => {\n        return plugins\n            .flatMap(({ ID, ApplicationEntries: entries }) => (entries ?? []).map((entry) => ({ entry, pluginID: ID })))\n            .filter((x) => x.entry.category === 'dapp' && !x.entry.hiddenInList)\n            .sort((a, b) => (a.entry.marketListSortingPriority ?? 0) - (b.entry.marketListSortingPriority ?? 0))\n    }, [plugins])\n\n    const targetPluginRef = useRef<HTMLLIElement | null>()\n    const noAvailablePlugins = availablePlugins.length === 0\n\n    useEffect(() => {\n        if (!focusPluginID || noAvailablePlugins || !targetPluginRef.current) return\n        targetPluginRef.current.scrollIntoView()\n    }, [focusPluginID, noAvailablePlugins])\n\n    const onSwitch = useCallback(\n        async (id: string, checked: boolean) => {\n            if (id === PluginID.GoPlusSecurity && checked === false) {\n                CrossIsolationMessages.events.checkSecurityConfirmationDialogEvent.sendToAll({ open: true })\n            } else {\n                await setPluginMinimalModeEnabled?.(id, !checked)\n            }\n        },\n        [setPluginMinimalModeEnabled],\n    )\n\n    return (\n        <List>\n            <DSearchSettings\n                checked={!pluginsInMinimalMode.map((x) => x.ID).includes(PluginID.Handle)}\n                onSwitch={(event) => onSwitch(PluginID.Handle, event?.target.checked)}\n                setRef={(element: HTMLLIElement | null) => {\n                    if (DSearch_KEY === focusPluginID) {\n                        targetPluginRef.current = element\n                    }\n                }}\n            />\n            {availablePlugins.map((x) => (\n                <ListItem\n                    key={x.entry.ApplicationEntryID}\n                    ref={(ele) => {\n                        if (x.pluginID === focusPluginID) {\n                            targetPluginRef.current = ele\n                        }\n                    }}\n                    className={classes.listItem}>\n                    <Stack width=\"100%\">\n                        <Stack direction=\"row\" width=\"100%\">\n                            <section className={classes.listContent}>\n                                <ListItemAvatar>\n                                    <Avatar className={classes.avatar}>{x.entry.icon}</Avatar>\n                                </ListItemAvatar>\n                                <Stack className={classes.info} flex={1}>\n                                    <div className={classes.headerWrapper}>\n                                        <Typography className={classes.name}>\n                                            <PluginTransFieldRender field={x.entry.name} pluginID={x.pluginID} />\n                                        </Typography>\n                                        {x.entry.tutorialLink ? (\n                                            <Box className={classes.settings}>\n                                                <Icons.Tutorial\n                                                    size={22}\n                                                    onClick={() => openWindow(x.entry.tutorialLink)}\n                                                />\n                                            </Box>\n                                        ) : null}\n                                    </div>\n                                    <Typography className={classes.desc}>\n                                        <PluginTransFieldRender field={x.entry.description} pluginID={x.pluginID} />\n                                    </Typography>\n                                </Stack>\n                            </section>\n                            <Stack justifyContent=\"center\">\n                                <Switch\n                                    checked={!pluginsInMinimalMode.map((x) => x.ID).includes(x.pluginID)}\n                                    onChange={(event) => onSwitch(x.pluginID, event.target.checked)}\n                                />\n                            </Stack>\n                        </Stack>\n                        {x.entry.features?.length ? (\n                            <Stack direction=\"row\" mt={1.25}>\n                                <Box className={classes.placeholder} />\n                                <Stack spacing={1.25}>\n                                    {x.entry.features?.map((f, i) => (\n                                        <Stack key={i}>\n                                            <Typography className={classes.name} fontSize={14}>\n                                                <PluginTransFieldRender field={f.name} pluginID={x.pluginID} />\n                                            </Typography>\n                                            <Typography className={classes.desc}>\n                                                <PluginTransFieldRender field={f.description} pluginID={x.pluginID} />\n                                            </Typography>\n                                        </Stack>\n                                    ))}\n                                </Stack>\n                            </Stack>\n                        ) : null}\n                    </Stack>\n                </ListItem>\n            ))}\n        </List>\n    )\n})\n\ninterface DSearchSettingsProps {\n    checked: boolean\n    onSwitch: (event: React.ChangeEvent<HTMLInputElement>) => void\n    setRef(element: HTMLLIElement | null): void\n}\n\nfunction DSearchSettings({ checked, onSwitch, setRef }: DSearchSettingsProps) {\n    const t = useSharedTrans()\n    const { classes } = useStyles()\n\n    return (\n        <ListItem key={DSearch_KEY} ref={(ele) => setRef(ele)} className={classes.listItem}>\n            <Stack width=\"100%\">\n                <Stack direction=\"row\" width=\"100%\">\n                    <section className={classes.listContent}>\n                        <ListItemAvatar>\n                            <Avatar className={classes.avatar}>\n                                <Icons.DecentralizedSearch />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <Stack className={classes.info} flex={1}>\n                            <div className={classes.headerWrapper}>\n                                <Typography className={classes.name}>{t.decentralized_search_name()}</Typography>\n                            </div>\n                            <Typography className={classes.desc}>{t.decentralized_search_description()}</Typography>\n                        </Stack>\n                    </section>\n                    <Stack justifyContent=\"center\">\n                        <Switch checked={checked} onChange={onSwitch} />\n                    </Stack>\n                </Stack>\n                <Stack direction=\"row\" mt={1.25}>\n                    <Box className={classes.placeholder} />\n                    <Stack spacing={1.25}>\n                        <Stack>\n                            <Typography className={classes.name} fontSize={14}>\n                                {t.decentralized_search_feature_token_name()}\n                            </Typography>\n                            <Typography className={classes.desc}>\n                                {t.decentralized_search_feature_token_description()}\n                            </Typography>\n                        </Stack>\n                        <Stack>\n                            <Typography className={classes.name} fontSize={14}>\n                                {t.decentralized_search_feature_nft_name()}\n                            </Typography>\n                            <Typography className={classes.desc}>\n                                {t.decentralized_search_feature_nft_description()}\n                            </Typography>\n                        </Stack>\n                        <Stack>\n                            <Typography className={classes.name} fontSize={14}>\n                                {t.decentralized_search_feature_wallet_name()}\n                            </Typography>\n                            <Typography className={classes.desc}>\n                                {t.decentralized_search_feature_wallet_description()}\n                            </Typography>\n                        </Stack>\n                    </Stack>\n                </Stack>\n            </Stack>\n        </ListItem>\n    )\n}\n","import { memo, useEffect } from 'react'\nimport { TabContext, TabPanel } from '@mui/lab'\nimport { DialogContent, Tab } from '@mui/material'\nimport { MaskTabList, makeStyles, useTabs } from '@masknet/theme'\nimport type { PluginID } from '@masknet/shared-base'\nimport { ApplicationSettingPluginList } from './ApplicationSettingPluginList.js'\nimport { ApplicationSettingPluginSwitch } from './ApplicationSettingPluginSwitch.js'\nimport { ApplicationSettingTabs } from './ApplicationBoardDialog.js'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { InjectedDialog } from '../../../index.js'\n\ninterface ApplicationBoardSettingsProps {\n    open: boolean\n    onClose: () => void\n    focusPluginID?: PluginID\n    tab?: ApplicationSettingTabs\n    setPluginMinimalModeEnabled?: (id: string, checked: boolean) => Promise<void>\n}\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        content: {\n            padding: theme.spacing(1.5, 2, '6px'),\n            height: 'auto',\n            overflow: 'hidden scroll',\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n    }\n})\n\nexport const ApplicationBoardSettingsDialog = memo<ApplicationBoardSettingsProps>(\n    ({ focusPluginID, setPluginMinimalModeEnabled, open, onClose, tab = ApplicationSettingTabs.pluginSwitch }) => {\n        const t = useSharedTrans()\n        const { classes } = useStyles()\n        const [currentTab, onChange, tabs, setTab] = useTabs(\n            ApplicationSettingTabs.pluginList,\n            ApplicationSettingTabs.pluginSwitch,\n        )\n\n        useEffect(() => setTab(tab), [tab])\n        return (\n            <TabContext value={currentTab}>\n                <InjectedDialog\n                    open={open}\n                    maxWidth=\"sm\"\n                    onClose={onClose}\n                    titleTabs={\n                        <MaskTabList variant=\"base\" onChange={onChange} aria-label=\"ApplicationBoard\">\n                            <Tab label={t.application_settings_tab_app_list()} value={tabs.pluginList} />\n                            <Tab label={t.application_settings_tab_plug_in_switch()} value={tabs.pluginSwitch} />\n                        </MaskTabList>\n                    }\n                    title={t.application_settings()}>\n                    <DialogContent className={classes.content}>\n                        <TabPanel value={tabs.pluginList} style={{ padding: 0 }}>\n                            <ApplicationSettingPluginList />\n                        </TabPanel>\n                        <TabPanel value={tabs.pluginSwitch} style={{ padding: 0 }}>\n                            <ApplicationSettingPluginSwitch\n                                focusPluginID={focusPluginID}\n                                setPluginMinimalModeEnabled={setPluginMinimalModeEnabled}\n                            />\n                        </TabPanel>\n                    </DialogContent>\n                </InjectedDialog>\n            </TabContext>\n        )\n    },\n)\n","import { forwardRef, useState } from 'react'\nimport type {\n    DashboardRoutes,\n    EnhanceableSite,\n    PersonaInformation,\n    PluginID,\n    SingletonModalRefCreator,\n} from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport type { IdentityResolved } from '@masknet/plugin-infra'\nimport { ApplicationBoard, ApplicationSettingTabs } from './ApplicationBoardDialog.js'\nimport type { PersonaPerSiteConnectStatus } from '../../../types.js'\nimport { ApplicationBoardSettingsDialog } from './ApplicationSettingsDialog.js'\n\nexport interface ApplicationBoardModalOpenProps {\n    openDashboard: (route?: DashboardRoutes, search?: string) => void\n    queryOwnedPersonaInformation?: (initializedOnly: boolean) => Promise<PersonaInformation[]>\n    currentSite: EnhanceableSite\n    allPersonas: PersonaInformation[]\n    lastRecognized: IdentityResolved\n    applicationCurrentStatus?: PersonaPerSiteConnectStatus\n    personaPerSiteConnectStatusLoading: boolean\n    setPluginMinimalModeEnabled: (id: string, checked: boolean) => Promise<void>\n\n    quickMode?: boolean\n    tab?: ApplicationSettingTabs\n    focusPluginID?: PluginID\n}\n\nexport const ApplicationBoardModal = forwardRef<SingletonModalRefCreator<ApplicationBoardModalOpenProps>>(\n    (props, ref) => {\n        const [openDashboard, setOpenDashboard] = useState<(route?: DashboardRoutes, search?: string) => void>()\n        const [queryOwnedPersonaInformation, setQueryOwnedPersonaInformation] =\n            useState<(initializedOnly: boolean) => Promise<PersonaInformation[]>>()\n        const [currentSite, setCurrentSite] = useState<EnhanceableSite>()\n        const [allPersonas, setAllPersonas] = useState<PersonaInformation[]>()\n        const [lastRecognized, setLastRecognized] = useState<IdentityResolved>()\n        const [applicationCurrentStatus, setApplicationCurrentStatus] = useState<PersonaPerSiteConnectStatus>()\n        const [personaPerSiteConnectStatusLoading, setPersonaPerSiteConnectStatusLoading] = useState(false)\n        const [setPluginMinimalModeEnabled, setSetPluginMinimalModeEnabled] =\n            useState<(id: string, checked: boolean) => Promise<void>>()\n        const [quickMode, setQuickMode] = useState(false)\n        const [tab, setTab] = useState<ApplicationSettingTabs>()\n        const [focusPluginID, setFocusPluginID] = useState<PluginID>()\n\n        const [open, dispatch] = useSingletonModal(ref, {\n            onOpen(props) {\n                setOpenDashboard(() => props.openDashboard)\n                setQueryOwnedPersonaInformation(() => props.queryOwnedPersonaInformation)\n                setCurrentSite(props.currentSite)\n                setAllPersonas(props.allPersonas)\n                setLastRecognized(props.lastRecognized)\n                setApplicationCurrentStatus(props.applicationCurrentStatus)\n                setPersonaPerSiteConnectStatusLoading(props.personaPerSiteConnectStatusLoading)\n                setSetPluginMinimalModeEnabled(() => props.setPluginMinimalModeEnabled)\n                setQuickMode(props.quickMode ?? false)\n                setTab(props.tab ?? ApplicationSettingTabs.pluginSwitch)\n                setFocusPluginID(props.focusPluginID)\n            },\n        })\n\n        if (!open) return null\n        return (\n            <ApplicationBoard\n                open\n                allPersonas={allPersonas ?? []}\n                lastRecognized={lastRecognized}\n                currentSite={currentSite}\n                applicationCurrentStatus={applicationCurrentStatus}\n                queryOwnedPersonaInformation={queryOwnedPersonaInformation}\n                personaPerSiteConnectStatusLoading={personaPerSiteConnectStatusLoading}\n                openDashboard={openDashboard}\n                setPluginMinimalModeEnabled={setPluginMinimalModeEnabled}\n                onClose={() => dispatch?.close()}\n                quickMode={quickMode}\n                focusPluginID={focusPluginID}\n                tab={tab}\n            />\n        )\n    },\n)\n\nexport interface ApplicationBoardSettingsModalOpenProps {\n    focusPluginID?: PluginID\n    setPluginMinimalModeEnabled?: (id: string, checked: boolean) => Promise<void>\n    tab?: ApplicationSettingTabs\n}\n\nexport const ApplicationBoardSettingsModal = forwardRef<\n    SingletonModalRefCreator<ApplicationBoardSettingsModalOpenProps>\n>((props, ref) => {\n    const [setPluginMinimalModeEnabled, setSetPluginMinimalModeEnabled] =\n        useState<(id: string, checked: boolean) => Promise<void>>()\n    const [focusPluginID, setFocusPluginID] = useState<PluginID>()\n    const [tab, setTab] = useState<ApplicationSettingTabs | undefined>(ApplicationSettingTabs.pluginSwitch)\n    const [open, dispatch] = useSingletonModal(ref, {\n        onOpen(props) {\n            setSetPluginMinimalModeEnabled(() => props.setPluginMinimalModeEnabled)\n            setFocusPluginID(props.focusPluginID)\n            setTab(props.tab)\n        },\n    })\n\n    if (!open) return null\n    return (\n        <ApplicationBoardSettingsDialog\n            open\n            setPluginMinimalModeEnabled={setPluginMinimalModeEnabled}\n            onClose={() => dispatch?.close()}\n            focusPluginID={focusPluginID}\n            tab={tab}\n        />\n    )\n})\n","import { ActionButton, makeStyles } from '@masknet/theme'\nimport { Typography, type DialogProps, DialogContent, Box } from '@mui/material'\nimport { forwardRef, useState, type ReactNode, memo } from 'react'\nimport type { SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport { InjectedDialog } from '@masknet/shared'\n\nconst useStyles = makeStyles()((theme) => ({\n    paper: {\n        minWidth: 320,\n        width: 320,\n    },\n    title: {\n        fontSize: 16,\n        lineHeight: '20px',\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: 80,\n        padding: theme.spacing(3),\n        margin: theme.spacing(0),\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    message: {\n        marginTop: theme.spacing(3),\n        padding: theme.spacing(0, 2),\n        lineHeight: '20px',\n        fontSize: 14,\n        color: theme.palette.maskColor.second,\n        wordBreak: 'break-all',\n    },\n    desc: {\n        flexGrow: 1,\n        fontSize: 14,\n        textAlign: 'center',\n        color: theme.palette.maskColor.second,\n        marginBottom: theme.spacing(1),\n    },\n    buttonGroup: {\n        width: '100%',\n        display: 'flex',\n        gap: theme.spacing(2),\n        marginTop: theme.spacing(4),\n    },\n}))\n\ninterface ConfirmDialogProps extends Omit<DialogProps, 'title' | 'onSubmit' | 'onClose'> {\n    title?: string\n    message?: ReactNode | string\n    description?: ReactNode | string\n    confirmLabel?: string\n    cancelLabel?: string\n    /** Change color of confirm button */\n    confirmVariant?: 'error' | 'warning'\n    onConfirm(): void\n    onClose?(): void\n}\n\n// Yet, another Confirm Dialog\nconst Dialog = memo(function Dialog({\n    title,\n    message,\n    description,\n    confirmLabel = 'Confirm',\n    cancelLabel = 'Cancel',\n    confirmVariant = 'error',\n    onConfirm,\n    onClose,\n    ...rest\n}: ConfirmDialogProps) {\n    const { classes } = useStyles()\n\n    return (\n        <InjectedDialog classes={{ paper: classes.paper, ...rest.classes }} {...rest}>\n            <DialogContent className={classes.content}>\n                <Typography variant=\"h1\" className={classes.title} component=\"div\">\n                    {title}\n                </Typography>\n                <Typography className={classes.message} component=\"div\">\n                    {message}\n                </Typography>\n                <Typography className={classes.desc} component=\"div\">\n                    {description}\n                </Typography>\n                <Box className={classes.buttonGroup}>\n                    <ActionButton fullWidth variant=\"roundedOutlined\" onClick={() => onClose?.()}>\n                        {cancelLabel}\n                    </ActionButton>\n                    <ActionButton\n                        fullWidth\n                        variant=\"roundedContained\"\n                        color={confirmVariant}\n                        onClick={() => onConfirm()}>\n                        {confirmLabel}\n                    </ActionButton>\n                </Box>\n            </DialogContent>\n        </InjectedDialog>\n    )\n})\n\nexport type ConfirmDialogOpenProps = Omit<ConfirmDialogProps, 'open' | 'onConfirm'>\nexport const ConfirmDialogComponent = forwardRef<SingletonModalRefCreator<ConfirmDialogOpenProps, boolean>>(\n    function ConfirmDialog(_, ref) {\n        const [props, setProps] = useState<ConfirmDialogOpenProps>({\n            title: '',\n            message: '',\n        })\n\n        const [open, dispatch] = useSingletonModal(ref, {\n            onOpen(p) {\n                setProps(p)\n            },\n        })\n        return (\n            <Dialog\n                open={open}\n                {...props}\n                onClose={() => dispatch?.close(false)}\n                onConfirm={() => dispatch?.close(true)}\n            />\n        )\n    },\n)\n","import { makeStyles } from '@masknet/theme'\nimport { Button, DialogActions, DialogContent, dialogClasses } from '@mui/material'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { InjectedDialog, type InjectedDialogProps } from '../../contexts/index.js'\n\nconst useStyles = makeStyles<number | undefined>()((theme, maxWidth) => ({\n    dialog: {\n        [`.${dialogClasses.paper}`]: {\n            maxWidth,\n        },\n    },\n    content: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: 80,\n        margin: theme.spacing(0),\n        fontSize: 18,\n        fontWeight: 'bold',\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n}))\n\ninterface ConfirmProps extends Omit<InjectedDialogProps, 'title' | 'onSubmit' | 'content'> {\n    open: boolean\n    title?: string\n    confirmLabel?: React.ReactNode | string\n    content: React.ReactNode | string\n    maxWidthOfContent?: number\n    onSubmit(): void\n}\n\nexport function Confirm({ title, confirmLabel, content, onSubmit, maxWidthOfContent, ...rest }: ConfirmProps) {\n    const t = useSharedTrans()\n    const { classes } = useStyles(maxWidthOfContent)\n\n    return (\n        <InjectedDialog title={title ?? t.dialog_confirm()} className={classes.dialog} {...rest}>\n            <DialogContent className={classes.content}>{content}</DialogContent>\n            <DialogActions>\n                <Button fullWidth className={classes.button} onClick={() => onSubmit()}>\n                    {confirmLabel ?? t.dialog_confirm()}\n                </Button>\n            </DialogActions>\n        </InjectedDialog>\n    )\n}\n","import { forwardRef, useState } from 'react'\nimport type { SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport { Confirm } from './Dialog.js'\nimport type { InjectedDialogProps } from '../../contexts/index.js'\n\nexport interface ConfirmModalOpenProps extends Omit<InjectedDialogProps, 'title' | 'onSubmit' | 'content' | 'open'> {\n    title?: string\n    confirmLabel?: React.ReactNode | string\n    content: React.ReactNode | string\n    maxWidthOfContent?: number\n}\n\nexport type ConfirmModalCloseProps = boolean\n\nexport const ConfirmModal = forwardRef<SingletonModalRefCreator<ConfirmModalOpenProps, ConfirmModalCloseProps>>(\n    (props, ref) => {\n        const [props_, setProps_] = useState<ConfirmModalOpenProps>()\n        const [open, dispatch] = useSingletonModal(ref, {\n            onOpen(props) {\n                setProps_(props)\n            },\n        })\n\n        if (!open) return null\n        return (\n            <Confirm\n                open\n                onSubmit={() => dispatch?.close(true)}\n                onClose={() => dispatch?.close(false)}\n                {...props_}\n                content={props_?.content}\n            />\n        )\n    },\n)\n","import { memo, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useUpdateEffect } from 'react-use'\nimport { Trans } from 'react-i18next'\nimport { z as zod } from 'zod'\nimport { BigNumber } from 'bignumber.js'\nimport { isEmpty, noop } from 'lodash-es'\nimport { Controller, useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { ActionButton, makeStyles, MaskColorVar } from '@masknet/theme'\nimport { formatGweiToWei, formatWeiToEther, formatWeiToGwei, useTokenConstants } from '@masknet/web3-shared-evm'\nimport { Typography } from '@mui/material'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport type { GasSettingProps } from './types.js'\nimport {\n    formatCurrency,\n    GasOptionType,\n    isGreaterThanOrEqualTo,\n    isLessThanOrEqualTo,\n    isPositive,\n} from '@masknet/web3-shared-base'\nimport { useChainContext, useFungibleTokenPrice, useGasOptions } from '@masknet/web3-hooks-base'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    options: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3,1fr)',\n        gap: 10,\n        cursor: 'pointer',\n        width: '100%',\n        overflowX: 'scroll',\n        '& > *': {\n            backgroundColor: theme.palette.mode === 'dark' ? '#212442' : '#f7f9fa',\n            borderRadius: 8,\n            padding: 10,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n        },\n    },\n    optionsTitle: {\n        color: '#7B8192',\n        fontSize: 16,\n        lineHeight: '22px',\n    },\n    gasUSD: {\n        color: '#7B8192',\n        fontSize: 12,\n        lineHeight: '14px',\n        wordBreak: 'break-all',\n    },\n    label: {\n        color: theme.palette.primary.main,\n        fontSize: 12,\n        lineHeight: '16px',\n        margin: '10px 0',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    selected: {\n        backgroundColor: theme.palette.primary.main,\n        '& > *': {\n            color: theme.palette.primary.contrastText,\n        },\n    },\n    button: {\n        marginTop: 10,\n        padding: '9px 10px',\n        borderRadius: 20,\n    },\n    unit: {\n        color: '#7B8192',\n        fontSize: 12,\n        lineHeight: '16px',\n        flex: 1,\n        marginLeft: '0.5em',\n    },\n    price: {\n        fontSize: 12,\n        lineHeight: '16px',\n        color: MaskColorVar.normalText,\n    },\n}))\n\nexport const GasSetting1559 = memo(\n    ({ gasLimit, minGasLimit = 0, gasOptionType = GasOptionType.NORMAL, onConfirm = noop }: GasSettingProps) => {\n        const t = useSharedTrans()\n        const { classes } = useStyles()\n        const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n        const { NATIVE_TOKEN_ADDRESS } = useTokenConstants(chainId)\n\n        const [selectedGasOption, setGasOptionType] = useState<GasOptionType | undefined>(gasOptionType)\n        const { data: nativeTokenPrice = 0 } = useFungibleTokenPrice(NetworkPluginID.PLUGIN_EVM, NATIVE_TOKEN_ADDRESS, {\n            chainId,\n        })\n\n        const { data: gasOptions, isLoading: getGasOptionsLoading } = useGasOptions(NetworkPluginID.PLUGIN_EVM)\n\n        // #region Gas options\n        const options = useMemo(\n            () => [\n                {\n                    title: t.popups_wallet_gas_fee_settings_low(),\n                    gasOption: GasOptionType.SLOW,\n                    content: gasOptions?.[GasOptionType.SLOW],\n                },\n                {\n                    title: t.popups_wallet_gas_fee_settings_medium(),\n                    gasOption: GasOptionType.NORMAL,\n                    content: gasOptions?.[GasOptionType.NORMAL],\n                },\n                {\n                    title: t.popups_wallet_gas_fee_settings_high(),\n                    gasOption: GasOptionType.FAST,\n                    content: gasOptions?.[GasOptionType.FAST],\n                },\n            ],\n            [gasOptions],\n        )\n        // #endregion\n        const currentGasOption = options.find((opt) => opt.gasOption === selectedGasOption)\n\n        // #region Form field define schema\n        const schema = useMemo(() => {\n            return zod\n                .object({\n                    gasLimit: zod\n                        .string()\n                        .min(1, t.wallet_transfer_error_gas_limit_absence())\n                        .refine(\n                            (gasLimit) => isGreaterThanOrEqualTo(gasLimit, minGasLimit),\n                            t.popups_wallet_gas_fee_settings_min_gas_limit_tips({ limit: minGasLimit.toFixed() }),\n                        ),\n                    maxPriorityFeePerGas: zod\n                        .string()\n                        .min(1, t.wallet_transfer_error_max_priority_fee_absence())\n                        .refine(isPositive, t.wallet_transfer_error_max_priority_gas_fee_positive()),\n                    maxFeePerGas: zod.string().min(1, t.wallet_transfer_error_max_fee_absence()),\n                })\n                .refine((data) => isLessThanOrEqualTo(data.maxPriorityFeePerGas, data.maxFeePerGas), {\n                    message: t.wallet_transfer_error_max_priority_gas_fee_imbalance(),\n                    path: ['maxFeePerGas'],\n                })\n        }, [minGasLimit, gasOptions])\n        // #endregion\n\n        const {\n            control,\n            handleSubmit,\n            setValue,\n            clearErrors,\n            watch,\n            formState: { errors },\n        } = useForm<zod.infer<typeof schema>>({\n            mode: 'onChange',\n            resolver: zodResolver(schema),\n            defaultValues: {\n                gasLimit: new BigNumber(gasLimit ?? 0).toString(),\n                maxPriorityFeePerGas: '',\n                maxFeePerGas: '0',\n            },\n            context: {\n                minGasLimit,\n                gasOptions,\n            },\n        })\n\n        // #region Set gas on tx to form data\n        useUpdateEffect(() => {\n            if (gasLimit) setValue('gasLimit', new BigNumber(gasLimit).toString())\n        }, [gasLimit, setValue])\n        // #endregion\n\n        // #region If the selected changed, set the value on the option to the form data\n        useEffect(() => {\n            if (selectedGasOption === null) return\n            clearErrors(['maxPriorityFeePerGas', 'maxFeePerGas'])\n            setValue(\n                'maxPriorityFeePerGas',\n                new BigNumber(currentGasOption?.content?.suggestedMaxPriorityFeePerGas ?? 0).toString() ?? '',\n            )\n            setValue(\n                'maxFeePerGas',\n                new BigNumber(currentGasOption?.content?.suggestedMaxFeePerGas ?? 0).toString() ?? '',\n            )\n        }, [currentGasOption, setValue, options])\n        // #endregion\n\n        const handleConfirm = useCallback(\n            (data: zod.infer<typeof schema>) => {\n                onConfirm?.({\n                    gasLimit: data.gasLimit as any,\n                    maxFee: formatGweiToWei(data.maxFeePerGas).toFixed(0),\n                    priorityFee: formatGweiToWei(data.maxPriorityFeePerGas).toFixed(0),\n                    gasOption: selectedGasOption,\n                })\n            },\n            [onConfirm, selectedGasOption],\n        )\n\n        const onSubmit = handleSubmit(handleConfirm)\n\n        const [maxPriorityFeePerGas, maxFeePerGas, inputGasLimit] = watch([\n            'maxPriorityFeePerGas',\n            'maxFeePerGas',\n            'gasLimit',\n        ])\n\n        return (\n            <>\n                <div className={classes.options}>\n                    {options.map(({ title, content, gasOption }, index) => (\n                        <div\n                            key={index}\n                            onClick={() => setGasOptionType(gasOption)}\n                            className={selectedGasOption === gasOption ? classes.selected : undefined}>\n                            <Typography className={classes.optionsTitle}>{title}</Typography>\n                            <Typography component=\"div\">\n                                {formatWeiToGwei(content?.suggestedMaxFeePerGas ?? 0).toFixed(2)}\n                                <Typography variant=\"inherit\">Gwei</Typography>\n                            </Typography>\n                            <Typography className={classes.gasUSD}>\n                                <Trans\n                                    i18nKey=\"popups_wallet_gas_fee_settings_usd\"\n                                    values={{\n                                        usd: formatCurrency(\n                                            formatWeiToEther(content?.suggestedMaxFeePerGas ?? 0)\n                                                .times(nativeTokenPrice)\n                                                .times(gasLimit ?? 21000),\n                                            'USD',\n                                            { onlyRemainTwoOrZeroDecimal: true },\n                                        ),\n                                    }}\n                                    components={{ span: <span /> }}\n                                    shouldUnescape\n                                />\n                            </Typography>\n                        </div>\n                    ))}\n                </div>\n                <form onSubmit={onSubmit}>\n                    <Typography className={classes.label}>\n                        {t.popups_wallet_gas_fee_settings_gas_limit()}\n                        <Typography component=\"span\" className={classes.price}>\n                            {gasLimit?.toString()}\n                        </Typography>\n                    </Typography>\n                    <Controller control={control} render={({ field }) => <></>} name=\"gasLimit\" />\n                    <Typography className={classes.label}>\n                        {t.popups_wallet_gas_fee_settings_max_priority_fee()}\n                        <Typography component=\"span\" className={classes.unit}>\n                            ({t.wallet_transfer_gwei()})\n                        </Typography>\n                        <Typography component=\"span\" className={classes.price}>\n                            <Trans\n                                i18nKey=\"popups_wallet_gas_fee_settings_usd\"\n                                values={{\n                                    usd: formatWeiToEther(Number(maxPriorityFeePerGas))\n                                        .times(nativeTokenPrice)\n                                        .times(inputGasLimit || 1)\n                                        .toFixed(2),\n                                }}\n                                components={{ span: <span /> }}\n                                shouldUnescape\n                            />\n                        </Typography>\n                    </Typography>\n                    <Controller control={control} render={({ field }) => <></>} name=\"maxPriorityFeePerGas\" />\n                    <Typography className={classes.label}>\n                        {t.popups_wallet_gas_fee_settings_max_fee()}\n                        <Typography component=\"span\" className={classes.unit}>\n                            ({t.wallet_transfer_gwei()})\n                        </Typography>\n                        <Typography component=\"span\" className={classes.price}>\n                            <Trans\n                                i18nKey=\"popups_wallet_gas_fee_settings_usd\"\n                                values={{\n                                    usd: formatWeiToEther(Number(maxFeePerGas))\n                                        .times(nativeTokenPrice)\n                                        .times(inputGasLimit || 1)\n                                        .toFixed(2),\n                                }}\n                                components={{ span: <span /> }}\n                                shouldUnescape\n                            />\n                        </Typography>\n                    </Typography>\n                    <Controller control={control} render={({ field }) => <></>} name=\"maxFeePerGas\" />\n                </form>\n                <ActionButton\n                    loading={getGasOptionsLoading}\n                    fullWidth\n                    className={classes.button}\n                    disabled={!isEmpty(errors)}\n                    onClick={onSubmit}>\n                    {t.confirm()}\n                </ActionButton>\n            </>\n        )\n    },\n)\n","import { memo, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useUpdateEffect } from 'react-use'\nimport { Trans } from 'react-i18next'\nimport { Controller, useForm } from 'react-hook-form'\nimport { isEmpty, noop } from 'lodash-es'\nimport { toWei } from 'web3-utils'\nimport { z as zod } from 'zod'\nimport { BigNumber } from 'bignumber.js'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport {\n    formatWeiToGwei,\n    type ChainIdOptionalRecord,\n    ChainId,\n    formatGweiToEther,\n    formatWeiToEther,\n} from '@masknet/web3-shared-evm'\nimport { GasOptionType, pow10 } from '@masknet/web3-shared-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext, useGasOptions, useNativeTokenPrice } from '@masknet/web3-hooks-base'\nimport { ActionButton, makeStyles, MaskColorVar } from '@masknet/theme'\nimport { Typography } from '@mui/material'\nimport type { GasSettingProps } from './types.js'\nimport { useSharedTrans } from '../../../index.js'\n\nconst minGasPriceOfChain: ChainIdOptionalRecord<BigNumber.Value> = {\n    [ChainId.BSC]: pow10(9).multipliedBy(5),\n    [ChainId.Conflux]: pow10(9).multipliedBy(5),\n    [ChainId.Matic]: pow10(9).multipliedBy(30),\n    [ChainId.Astar]: pow10(9).multipliedBy(5), // 5 Gwei\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    options: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3,1fr)',\n        gap: 10,\n        cursor: 'pointer',\n        width: '100%',\n        overflowX: 'scroll',\n        '& > *': {\n            backgroundColor: theme.palette.mode === 'dark' ? '#212442' : '#f7f9fa',\n            borderRadius: 8,\n            padding: 10,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n        },\n    },\n    optionsTitle: {\n        color: '#7B8192',\n        fontSize: 16,\n        lineHeight: '22px',\n    },\n    gasUSD: {\n        color: '#7B8192',\n        fontSize: 12,\n        lineHeight: '14px',\n        wordBreak: 'break-all',\n    },\n    label: {\n        color: theme.palette.primary.main,\n        fontSize: 12,\n        lineHeight: '16px',\n        margin: '10px 0',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    selected: {\n        backgroundColor: theme.palette.primary.main,\n        '& > *': {\n            color: theme.palette.primary.contrastText,\n        },\n    },\n    button: {\n        marginTop: 10,\n        padding: '9px 10px',\n        borderRadius: 20,\n    },\n    price: {\n        fontSize: 12,\n        lineHeight: '16px',\n        color: MaskColorVar.normalText,\n    },\n}))\n\nexport const Prior1559GasSetting = memo(\n    ({ gasLimit, minGasLimit = 0, gasOptionType = GasOptionType.NORMAL, onConfirm = noop }: GasSettingProps) => {\n        const { classes } = useStyles()\n        const t = useSharedTrans()\n        const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n        const [selectedGasOption, setGasOptionType] = useState<GasOptionType>(gasOptionType)\n\n        const { data: nativeTokenPrice = 0 } = useNativeTokenPrice(NetworkPluginID.PLUGIN_EVM)\n\n        const { data: gasOptions, isLoading: getGasOptionsLoading } = useGasOptions(NetworkPluginID.PLUGIN_EVM, {\n            chainId,\n        })\n\n        const options = useMemo(\n            () =>\n                gasOptions\n                    ? [\n                          {\n                              title: t.popups_wallet_gas_fee_settings_low(),\n                              gasOption: GasOptionType.SLOW,\n                              gasPrice: gasOptions[GasOptionType.SLOW].suggestedMaxFeePerGas || '0',\n                          },\n                          {\n                              title: t.popups_wallet_gas_fee_settings_medium(),\n                              gasOption: GasOptionType.NORMAL,\n                              gasPrice: gasOptions[GasOptionType.NORMAL].suggestedMaxFeePerGas || '0',\n                          },\n                          {\n                              title: t.popups_wallet_gas_fee_settings_high(),\n                              gasOption: GasOptionType.FAST,\n                              gasPrice: gasOptions[GasOptionType.FAST].suggestedMaxFeePerGas || 0,\n                          },\n                      ]\n                    : null,\n            [gasOptions],\n        )\n        const currentGasOption = options ? options.find((opt) => opt.gasOption === selectedGasOption) : null\n\n        const schema = useMemo(() => {\n            return zod.object({\n                gasLimit: zod\n                    .string()\n                    .min(1, t.wallet_transfer_error_gas_limit_absence())\n                    .refine(\n                        (gasLimit) => new BigNumber(gasLimit).gte(minGasLimit),\n                        t.popups_wallet_gas_fee_settings_min_gas_limit_tips({ limit: minGasLimit.toFixed() }),\n                    ),\n                gasPrice: zod.string().min(1, t.wallet_transfer_error_gas_price_absence()),\n            })\n        }, [minGasLimit])\n\n        const {\n            control,\n            handleSubmit,\n            setValue,\n            watch,\n            formState: { errors },\n        } = useForm<zod.infer<typeof schema>>({\n            mode: 'onChange',\n            resolver: zodResolver(schema),\n            defaultValues: {\n                gasLimit: new BigNumber(gasLimit || 0).toString(),\n                gasPrice: '',\n            },\n            context: {\n                minGasLimit,\n            },\n        })\n\n        const [inputGasLimit, gasPrice] = watch(['gasLimit', 'gasPrice'])\n\n        useUpdateEffect(() => {\n            if (gasLimit) setValue('gasLimit', new BigNumber(gasLimit).toString())\n        }, [gasLimit, setValue])\n\n        useEffect(() => {\n            const minGasPrice = minGasPriceOfChain[chainId]\n            if (currentGasOption || minGasPrice) {\n                setValue('gasPrice', formatWeiToGwei(currentGasOption?.gasPrice || minGasPrice || 0).toString())\n            }\n        }, [currentGasOption, setValue, chainId])\n\n        const handleConfirm = useCallback(\n            (data: zod.infer<typeof schema>) => {\n                onConfirm({\n                    gasLimit: data.gasLimit as any,\n                    gasPrice: toWei(data.gasPrice, 'gwei'),\n                    gasOption: selectedGasOption,\n                })\n            },\n            [selectedGasOption],\n        )\n\n        const onSubmit = handleSubmit(handleConfirm)\n\n        return (\n            <>\n                {options ? (\n                    <div className={classes.options}>\n                        {options.map(({ title, gasPrice, gasOption }, index) => (\n                            <div\n                                key={gasOption}\n                                onClick={() => setGasOptionType(gasOption)}\n                                className={selectedGasOption === gasOption ? classes.selected : undefined}>\n                                <Typography className={classes.optionsTitle}>{title}</Typography>\n                                <Typography>{formatWeiToGwei(gasPrice || 0).toString()} Gwei</Typography>\n                                <Typography className={classes.gasUSD}>\n                                    <Trans\n                                        i18nKey=\"popups_wallet_gas_fee_settings_usd\"\n                                        values={{\n                                            usd: formatWeiToEther(gasPrice)\n                                                .times(nativeTokenPrice)\n                                                .times(inputGasLimit || '1')\n                                                .toPrecision(3),\n                                        }}\n                                        components={{ span: <span /> }}\n                                        shouldUnescape\n                                    />\n                                </Typography>\n                            </div>\n                        ))}\n                    </div>\n                ) : null}\n                <form onSubmit={onSubmit}>\n                    <Typography className={classes.label}>\n                        {t.popups_wallet_gas_fee_settings_gas_limit()}\n                        <Typography component=\"span\" className={classes.price}>\n                            {gasLimit?.toString()}\n                        </Typography>\n                    </Typography>\n                    <Controller control={control} render={({ field }) => <></>} name=\"gasLimit\" />\n                    <Typography className={classes.label}>\n                        {t.popups_wallet_gas_price()}\n                        <Typography component=\"span\" className={classes.price}>\n                            <Trans\n                                i18nKey=\"popups_wallet_gas_fee_settings_usd\"\n                                values={{\n                                    usd: formatGweiToEther(gasPrice || 0)\n                                        .times(nativeTokenPrice)\n                                        .times(inputGasLimit || 1)\n                                        .toFixed(2),\n                                }}\n                                components={{ span: <span /> }}\n                                shouldUnescape\n                            />\n                        </Typography>\n                    </Typography>\n                    <Controller control={control} render={({ field }) => <></>} name=\"gasPrice\" />\n                </form>\n                <ActionButton\n                    loading={getGasOptionsLoading}\n                    fullWidth\n                    className={classes.button}\n                    disabled={!isEmpty(errors)}\n                    onClick={onSubmit}>\n                    {t.confirm()}\n                </ActionButton>\n            </>\n        )\n    },\n)\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport { ChainResolver } from '@masknet/web3-providers'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { GasSetting1559 } from './GasSetting1559.js'\nimport { Prior1559GasSetting } from './Prior1559GasSetting.js'\nimport type { GasSettingProps } from './types.js'\n\nexport function GasSettingSupported(props: GasSettingProps) {\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    return ChainResolver.isFeatureSupported(chainId, 'EIP1559') ? (\n        <GasSetting1559 {...props} />\n    ) : (\n        <Prior1559GasSetting {...props} />\n    )\n}\n","import { DialogContent } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { GasOptionType } from '@masknet/web3-shared-base'\nimport { GasSettingModal, InjectedDialog, useSharedTrans } from '@masknet/shared'\nimport { GasSettingSupported } from './GasSettingSupported.js'\nimport type { BigNumber } from 'bignumber.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    content: {\n        color: theme.palette.text.primary,\n    },\n}))\n\ninterface GasSettingProps {\n    open: boolean\n    onClose: () => void\n    gasOption?: GasOptionType\n    gasLimit?: number\n    minGasLimit?: number\n    gasPrice?: BigNumber.Value\n    maxFee?: BigNumber.Value\n    priorityFee?: BigNumber.Value\n    setGasLimit: (minGasLimit: number) => void\n    setGasOptionType: (gasOptionType: GasOptionType) => void\n}\n\nexport function GasSetting(props: GasSettingProps) {\n    const t = useSharedTrans()\n    const { classes } = useStyles()\n    const {\n        open,\n        onClose,\n        gasOption = GasOptionType.NORMAL,\n        gasLimit = 0,\n        minGasLimit = 0,\n        setGasLimit,\n        setGasOptionType,\n    } = props\n\n    return (\n        <InjectedDialog title={t.popups_wallet_gas_fee_settings()} open={open} onClose={onClose}>\n            <DialogContent className={classes.content}>\n                <GasSettingSupported\n                    gasLimit={gasLimit}\n                    minGasLimit={minGasLimit}\n                    onGasLimitChange={setGasLimit}\n                    gasOptionType={gasOption}\n                    onGasOptionChange={setGasOptionType}\n                    onConfirm={({ gasPrice, gasLimit, maxFee, priorityFee, gasOption }) => {\n                        GasSettingModal.close({\n                            gasOption,\n                            gasPrice,\n                            gasLimit,\n                            priorityFee,\n                            maxFee,\n                        })\n                    }}\n                />\n            </DialogContent>\n        </InjectedDialog>\n    )\n}\n","import { forwardRef, useState } from 'react'\nimport { type BigNumber } from 'bignumber.js'\nimport { GasOptionType } from '@masknet/web3-shared-base'\nimport type { SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport { GasSetting } from './GasSettingModal.js'\n\nexport type GasSettingModalOpenOrCloseProps = {\n    gasOption?: GasOptionType\n    gasLimit?: number\n    minGasLimit?: number\n    gasPrice?: BigNumber.Value\n    maxFee?: BigNumber.Value\n    priorityFee?: BigNumber.Value\n} | void\n\nexport const GasSettingModal = forwardRef<\n    SingletonModalRefCreator<GasSettingModalOpenOrCloseProps, GasSettingModalOpenOrCloseProps>\n>((props, ref) => {\n    const [gasOptionType, setGasOptionType] = useState(GasOptionType.NORMAL)\n    const [gasLimit, setGasLimit] = useState(0)\n    const [minGasLimit, setMinGasLimit] = useState(0)\n    const [gasPrice, setGasPrice] = useState<BigNumber.Value>(0)\n    const [maxFee, setMaxFee] = useState<BigNumber.Value>(0)\n    const [priorityFee, setPriorityFee] = useState<BigNumber.Value>(0)\n\n    const [open, dispatch] = useSingletonModal(ref, {\n        onOpen(props) {\n            setGasOptionType(props?.gasOption ?? GasOptionType.NORMAL)\n            setGasLimit(props?.gasLimit ?? 0)\n            setMinGasLimit(props?.minGasLimit ?? 0)\n            setGasPrice(props?.gasPrice ?? 0)\n            setMaxFee(props?.maxFee ?? 0)\n            setPriorityFee(props?.priorityFee ?? 0)\n        },\n        onClose(props) {\n            setGasOptionType(props?.gasOption ?? GasOptionType.NORMAL)\n            setGasLimit(props?.gasLimit ?? 0)\n            setMinGasLimit(props?.minGasLimit ?? 0)\n            setGasPrice(props?.gasPrice ?? 0)\n            setMaxFee(props?.maxFee ?? 0)\n            setPriorityFee(props?.priorityFee ?? 0)\n        },\n    })\n\n    if (!open) return null\n    return (\n        <GasSetting\n            open\n            onClose={() => dispatch?.close()}\n            gasOption={gasOptionType}\n            setGasLimit={setGasLimit}\n            gasLimit={gasLimit}\n            minGasLimit={minGasLimit}\n            setGasOptionType={setGasOptionType}\n            gasPrice={gasPrice}\n            maxFee={maxFee}\n            priorityFee={priorityFee}\n        />\n    )\n})\n","import { useCallback } from 'react'\nimport { first } from 'lodash-es'\nimport { Button, DialogActions, DialogContent, Stack, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { InjectedDialog } from '@masknet/shared'\nimport { DashboardRoutes } from '@masknet/shared-base'\n\ntype PositionStyle = {\n    top?: number\n    right?: number\n    position?: 'absolute'\n}\n\nconst useStyles = makeStyles<{\n    positionStyle: PositionStyle\n}>()((theme, props) => {\n    return {\n        root: {\n            width: 384,\n            background: theme.palette.maskColor.bottom,\n            position: props.positionStyle.position,\n            top: props.positionStyle.top,\n            right: props.positionStyle.right,\n        },\n        content: {\n            padding: theme.spacing(1, 2, 2, 2),\n            minHeight: 148,\n            scrollbarWidth: 'none',\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        header: {\n            background: theme.palette.maskColor.bottom,\n        },\n        actions: {\n            padding: theme.spacing(1, 2, 2, 2),\n        },\n    }\n})\n\ntype PositionOption = 'center' | 'top-right'\n\nconst positionStyleMap: Record<PositionOption, PositionStyle> = {\n    center: {},\n    'top-right': {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n    },\n}\n\nexport interface OpenPageConfirm {\n    target: 'dashboard' | 'other'\n    url: string\n    title: string\n    text: string\n    actionHint: string\n    position?: 'center' | 'top-right'\n}\n\ninterface LeavePageConfirmProps {\n    open: boolean\n    onClose: () => void\n    openDashboard?: (route?: DashboardRoutes, search?: string) => void\n    info?: OpenPageConfirm\n}\n\nexport function LeavePageConfirm(props: LeavePageConfirmProps) {\n    const { open, onClose, info, openDashboard } = props\n    const { classes } = useStyles({ positionStyle: positionStyleMap[info?.position ?? 'center'] })\n\n    const onClick = useCallback(() => {\n        if (!info) return\n        if (info.target !== 'dashboard') return\n        const isRoute = !!first(\n            Object.entries(DashboardRoutes).filter(([_, value]) => value.toLowerCase() === info.url.toLowerCase()),\n        )\n        if (!isRoute) return\n        openDashboard?.(info.url as DashboardRoutes)\n        onClose()\n    }, [info, onClose, openDashboard])\n\n    return open ? (\n        <InjectedDialog\n            disableTitleBorder\n            open={open}\n            classes={{\n                paper: classes.root,\n                dialogTitle: classes.header,\n            }}\n            maxWidth=\"sm\"\n            onClose={onClose}\n            title={info?.title}\n            titleBarIconStyle=\"close\">\n            <DialogContent classes={{ root: classes.content }}>\n                <Stack>\n                    <Typography>{info?.text}</Typography>\n                </Stack>\n            </DialogContent>\n            <DialogActions classes={{ root: classes.actions }}>\n                <Stack width=\"100%\">\n                    <Button color=\"primary\" style={{ borderRadius: 20 }} onClick={onClick}>\n                        {info?.actionHint}\n                    </Button>\n                </Stack>\n            </DialogActions>\n        </InjectedDialog>\n    ) : null\n}\n","import { forwardRef, useState } from 'react'\nimport type { DashboardRoutes, SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport { LeavePageConfirm, type OpenPageConfirm } from './LeavePageConfirm.js'\n\nexport interface LeavePageConfirmModalOpenProps {\n    openDashboard?: (route?: DashboardRoutes, search?: string) => void\n    info?: OpenPageConfirm\n}\n\nexport const LeavePageConfirmModal = forwardRef<SingletonModalRefCreator<LeavePageConfirmModalOpenProps>>(\n    (props, ref) => {\n        const [openDashboard, setOpenDashboard] = useState<(route?: DashboardRoutes, search?: string) => void>()\n        const [info, setInfo] = useState<OpenPageConfirm>()\n\n        const [open, dispatch] = useSingletonModal(ref, {\n            onOpen(props) {\n                setOpenDashboard(() => props.openDashboard)\n                setInfo(props.info)\n            },\n        })\n\n        if (!open) return null\n        return <LeavePageConfirm info={info} openDashboard={openDashboard} open onClose={() => dispatch?.close()} />\n    },\n)\n","import { DialogContent } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { PersonaSelectPanel, type PositionOption } from '../../components/PersonaSelectPanel/index.js'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { InjectedDialog } from '../../contexts/components/InjectedDialog.js'\n\ntype PositionStyle = {\n    top?: number\n    right?: number\n    position?: 'absolute'\n}\n\nconst useStyles = makeStyles<{\n    positionStyle: PositionStyle\n}>()((theme, props) => {\n    return {\n        root: {\n            width: 384,\n            height: 386,\n            padding: theme.spacing(1),\n            background: theme.palette.maskColor.bottom,\n            position: props.positionStyle.position,\n            top: props.positionStyle.top,\n            right: props.positionStyle.right,\n        },\n        content: {\n            padding: theme.spacing(0, 2, 2, 2),\n            scrollbarWidth: 'none',\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        header: {\n            background: `${theme.palette.maskColor.bottom} !important`,\n        },\n    }\n})\n\nconst positionStyleMap: Record<PositionOption, PositionStyle> = {\n    center: {},\n    'top-right': {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n    },\n}\n\ninterface PersonaSelectPanelDialogProps {\n    finishTarget?: string\n    enableVerify?: boolean\n    position?: PositionOption\n    open: boolean\n    onClose: () => void\n}\nexport function PersonaSelectPanelDialog({\n    open,\n    enableVerify = true,\n    position = 'center',\n    finishTarget,\n    onClose,\n}: PersonaSelectPanelDialogProps) {\n    const t = useSharedTrans()\n\n    const { classes } = useStyles({ positionStyle: positionStyleMap[position] })\n\n    return open ? (\n        <InjectedDialog\n            disableTitleBorder\n            open={open}\n            classes={{\n                paper: classes.root,\n                dialogTitle: classes.header,\n            }}\n            maxWidth=\"sm\"\n            onClose={onClose}\n            title={t.applications_persona_title()}\n            titleBarIconStyle=\"close\">\n            <DialogContent classes={{ root: classes.content }}>\n                <PersonaSelectPanel enableVerify={enableVerify} finishTarget={finishTarget} onClose={onClose} />\n            </DialogContent>\n        </InjectedDialog>\n    ) : null\n}\n","import { forwardRef, useState } from 'react'\nimport type { SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport { PersonaSelectPanelDialog } from './PersonaSelectPanelDialog.js'\nimport type { PositionOption } from '../../components/PersonaSelectPanel/index.js'\n\nexport interface PersonaSelectPanelModalOpenProps {\n    finishTarget?: string\n    enableVerify?: boolean\n    position?: PositionOption\n}\n\nexport const PersonaSelectPanelModal = forwardRef<SingletonModalRefCreator<PersonaSelectPanelModalOpenProps>>(\n    (props, ref) => {\n        const [finishTarget, setFinishTarget] = useState<string>()\n        const [position, setPosition] = useState<PositionOption>()\n        const [enableVerify, setEnableVerify] = useState<boolean>()\n\n        const [open, dispatch] = useSingletonModal(ref, {\n            onOpen(props) {\n                setFinishTarget(props.finishTarget)\n                setPosition(props.position)\n                setEnableVerify(props.enableVerify)\n            },\n        })\n\n        if (!open) return null\n        return (\n            <PersonaSelectPanelDialog\n                open\n                onClose={() => dispatch?.close()}\n                finishTarget={finishTarget}\n                position={position}\n                enableVerify={enableVerify}\n            />\n        )\n    },\n)\n","import { Icons } from '@masknet/icons'\nimport { type NetworkPluginID } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useWeb3Others } from '@masknet/web3-hooks-base'\nimport { type NonFungibleCollection } from '@masknet/web3-shared-base'\nimport { Avatar, Link, ListItem, Typography, type ListItemProps } from '@mui/material'\nimport { memo } from 'react'\n\nconst useStyles = makeStyles()((theme) => ({\n    listItem: {\n        padding: '14px 12px',\n        borderRadius: theme.spacing(1),\n        backgroundColor: theme.palette.maskColor.bottom,\n        boxShadow:\n            theme.palette.mode === 'light'\n                ? '0px 0px 20px rgba(0, 0, 0, 0.05)'\n                : '0px 0px 20px rgba(255, 255, 255, 0.12)',\n        backdropFilter: 'blur(8px)',\n        '&:hover': {\n            backgroundColor: theme.palette.maskColor.bg,\n            cursor: 'pointer',\n        },\n    },\n    logo: {\n        borderRadius: '100%',\n        overflow: 'hidden',\n        flexShrink: 0,\n        width: 36,\n        height: 36,\n        marginRight: 8,\n        boxShadow: theme.palette.mode === 'light' ? '0 6px 12px rgba(0,0,0,0.2)' : undefined,\n    },\n    contractName: {\n        fontSize: 14,\n        lineHeight: '18px',\n        fontWeight: 400,\n        color: theme.palette.maskColor.second,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    linkIcon: {\n        marginLeft: theme.spacing(0.5),\n        color: 'inherit',\n    },\n    contractSymbol: {\n        fontSize: 16,\n        fontWeight: 700,\n        lineHeight: '20px',\n    },\n    balance: {\n        marginLeft: 'auto',\n    },\n}))\ninterface ContractItemProps extends Omit<ListItemProps, 'onSelect'> {\n    pluginID: NetworkPluginID\n    collection: NonFungibleCollection<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>\n    onSelect?(collection: NonFungibleCollection<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>): void\n}\n\nexport const ContractItem = memo(function ContractItem({\n    pluginID,\n    className,\n    collection,\n    onSelect,\n    ...rest\n}: ContractItemProps) {\n    const { classes, cx } = useStyles()\n    const Others = useWeb3Others(pluginID)\n\n    return (\n        <ListItem className={cx(classes.listItem, className)} onClick={() => onSelect?.(collection)} {...rest}>\n            <Avatar className={classes.logo} src={collection.iconURL || ''}>\n                <Icons.MaskAvatar size={36} />\n            </Avatar>\n            <div>\n                <Typography className={classes.contractSymbol}>{collection.symbol}</Typography>\n                <Typography className={classes.contractName}>\n                    {collection.name}\n                    <Link\n                        href={Others.explorerResolver.addressLink(collection.chainId, collection.address!)}\n                        className={classes.linkIcon}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        onClick={(e) => e.stopPropagation()}>\n                        <Icons.LinkOut size={16} />\n                    </Link>\n                </Typography>\n            </div>\n            {collection.balance ? <Typography className={classes.balance}>{collection.balance}</Typography> : null}\n        </ListItem>\n    )\n})\n","import { memo, useCallback, useMemo, useState } from 'react'\nimport { compact } from 'lodash-es'\nimport { useSubscription } from 'use-subscription'\nimport { DialogContent, List, Stack, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { Icons } from '@masknet/icons'\nimport { EMPTY_ENTRY, EMPTY_LIST, NetworkPluginID, Sniffings } from '@masknet/shared-base'\nimport { MaskTextField, makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useAccount, useNonFungibleCollections, useWeb3State } from '@masknet/web3-hooks-base'\nimport { FuseNonFungibleCollection } from '@masknet/web3-providers'\nimport { type NonFungibleCollection } from '@masknet/web3-shared-base'\nimport { SchemaType, isLensCollect, isLensFollower, isLensProfileAddress } from '@masknet/web3-shared-evm'\nimport { ContractItem } from './ContractItem.js'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { InjectedDialog } from '../../contexts/components/InjectedDialog.js'\nimport { ReloadStatus } from '../../components/ReloadStatus/index.js'\nimport { EmptyStatus, LoadingStatus } from '../../components/index.js'\nimport { AddCollectiblesModal } from '../modals.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    content: {\n        display: 'flex',\n        minHeight: 564,\n        boxSizing: 'border-box',\n        padding: theme.spacing(2, 0, 0),\n        backgroundColor: theme.palette.maskColor.bottom,\n        flexDirection: 'column',\n        overflow: 'auto',\n        msOverflowStyle: 'none',\n        scrollbarWidth: 'none',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    contractList: {\n        overflow: 'auto',\n        overscrollBehavior: 'contain',\n        padding: theme.spacing(2, 2, 7),\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    contractItem: {\n        marginBottom: theme.spacing(2),\n    },\n    toolbar: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        height: theme.spacing(7),\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.05)',\n        backdropFilter: 'blur(16px)',\n        borderRadius: theme.spacing(0, 0, 1.5, 1.5),\n    },\n}))\n\ninterface SelectNonFungibleContractDialogProps<T extends NetworkPluginID = NetworkPluginID> {\n    open: boolean\n    pluginID: T\n    chainId?: Web3Helper.Definition[T]['ChainId']\n    schemaType?: SchemaType\n    title?: string\n    onClose?(): void\n    onSubmit?(\n        collection: NonFungibleCollection<Web3Helper.Definition[T]['ChainId'], Web3Helper.Definition[T]['SchemaType']>,\n    ): void\n}\n\nexport const SelectNonFungibleContractDialog = memo(\n    ({ open, pluginID, chainId, onClose, onSubmit, schemaType }: SelectNonFungibleContractDialogProps) => {\n        const t = useSharedTrans()\n        const { classes } = useStyles()\n        const [keyword, setKeyword] = useState('')\n\n        const handleClear = () => {\n            setKeyword('')\n        }\n        const {\n            data: collections = EMPTY_LIST,\n            isLoading,\n            isError,\n            refetch,\n        } = useNonFungibleCollections(pluginID, {\n            chainId,\n            schemaType,\n        })\n\n        const { Token } = useWeb3State(pluginID)\n        const account = useAccount().toLowerCase()\n        const customizedCollectionMap = useSubscription(Token?.nonFungibleCollectionMap! ?? EMPTY_ENTRY)\n        // Convert StorageCollection to NonFungibleCollection\n        const customizedCollections = useMemo((): Array<\n            NonFungibleCollection<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>\n        > => {\n            const list = customizedCollectionMap[account]\n            if (!list) return EMPTY_LIST\n            const addresses = compact(collections.map((x) => x.address?.toLowerCase()))\n            return list\n                .filter((x) => !addresses.includes(x.contract.address))\n                .map(({ contract, tokenIds }) => ({\n                    chainId: contract.chainId,\n                    name: contract.name,\n                    address: contract.address,\n                    slug: '' as string,\n                    symbol: contract.symbol,\n                    iconURL: contract.iconURL,\n                    balance: tokenIds.length,\n                    source: contract.source,\n                }))\n        }, [customizedCollectionMap[account], collections])\n\n        const filteredCollections = useMemo(() => {\n            const allCollections = [...customizedCollections, ...collections]\n            return pluginID === NetworkPluginID.PLUGIN_EVM\n                ? allCollections.filter((x) => {\n                      return (\n                          x.address &&\n                          x.schema === SchemaType.ERC721 &&\n                          !isLensCollect(x.name) &&\n                          !isLensFollower(x.name) &&\n                          !isLensProfileAddress(x.address)\n                      )\n                  })\n                : allCollections\n        }, [customizedCollections, collections, pluginID])\n        const fuse = useMemo(() => {\n            return FuseNonFungibleCollection.create(filteredCollections)\n        }, [filteredCollections])\n        const searchResults = useMemo(() => {\n            if (!keyword) return filteredCollections\n            return fuse.search(keyword).map((x) => x.item)\n        }, [fuse, keyword, filteredCollections])\n\n        const handleAddCollectibles = useCallback(async () => {\n            const results = await AddCollectiblesModal.openAndWaitForClose({\n                pluginID,\n                chainId,\n            })\n            if (!results) return\n            const [contract, tokenIds] = results\n            await Token?.addNonFungibleTokens?.(account, contract, tokenIds)\n        }, [account, pluginID, chainId])\n\n        const handleSelectCollection = useCallback(\n            (collection: NonFungibleCollection<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>) => {\n                onSubmit?.(collection)\n                onClose?.()\n            },\n            [onClose],\n        )\n\n        return (\n            <InjectedDialog\n                titleBarIconStyle={Sniffings.is_dashboard_page ? 'close' : 'back'}\n                open={open}\n                onClose={onClose}\n                title={t.select_collectibles()}>\n                <DialogContent classes={{ root: classes.content }}>\n                    <Box px={2}>\n                        <MaskTextField\n                            value={keyword}\n                            onChange={(evt) => setKeyword(evt.target.value)}\n                            placeholder={t.collectible_search_placeholder()}\n                            autoFocus\n                            fullWidth\n                            InputProps={{\n                                style: { height: 40 },\n                                inputProps: { style: { paddingLeft: 4 } },\n                                startAdornment: <Icons.Search size={18} />,\n                                endAdornment: keyword ? <Icons.Close size={18} onClick={handleClear} /> : null,\n                            }}\n                        />\n                    </Box>\n                    {isError ? (\n                        <ReloadStatus height={500} onRetry={refetch} />\n                    ) : isLoading && !collections.length ? (\n                        <LoadingStatus height={500} />\n                    ) : !searchResults.length ? (\n                        <EmptyStatus height={500}>{t.no_results()}</EmptyStatus>\n                    ) : (\n                        <List className={classes.contractList}>\n                            {searchResults.map((collection) => (\n                                <ContractItem\n                                    key={collection.address}\n                                    className={classes.contractItem}\n                                    pluginID={pluginID}\n                                    collection={collection}\n                                    onSelect={handleSelectCollection}\n                                />\n                            ))}\n                        </List>\n                    )}\n\n                    <Stack\n                        className={classes.toolbar}\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        onClick={handleAddCollectibles}>\n                        <Icons.Avatar size={24} />\n                        <Typography ml={2} fontWeight={700}>\n                            {t.add_collectibles()}\n                        </Typography>\n                    </Stack>\n                </DialogContent>\n            </InjectedDialog>\n        )\n    },\n)\nSelectNonFungibleContractDialog.displayName = 'SelectNonFungibleContractDialog'\n","import { forwardRef, useState } from 'react'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { type SingletonModalRefCreator, NetworkPluginID } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport type { NonFungibleCollection } from '@masknet/web3-shared-base'\nimport type { SchemaType } from '@masknet/web3-shared-evm'\nimport { SelectNonFungibleContractDialog } from './SelectNonFungibleContractDialog.js'\n\nexport interface SelectNonFungibleContractModalOpenProps<T extends NetworkPluginID = NetworkPluginID> {\n    pluginID: T\n    chainId?: Web3Helper.Definition[T]['ChainId']\n    schemaType?: SchemaType\n    title?: string\n    onSubmit?(\n        collection: NonFungibleCollection<Web3Helper.Definition[T]['ChainId'], Web3Helper.Definition[T]['SchemaType']>,\n    ): void\n}\n\nexport const SelectNonFungibleContractModal = forwardRef<\n    SingletonModalRefCreator<SelectNonFungibleContractModalOpenProps>\n>((props, ref) => {\n    const [pluginID, setPluginID] = useState(NetworkPluginID.PLUGIN_EVM)\n    const [chainId, setChainId] = useState<Web3Helper.ChainIdAll>()\n    const [schemaType, setSchemaType] = useState<SchemaType>()\n    const [title, setTitle] = useState<string>()\n    const [onSubmit, setOnSubmit] =\n        useState<(collection: NonFungibleCollection<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>) => void>()\n    const [open, dispatch] = useSingletonModal(ref, {\n        onOpen(props) {\n            setPluginID(props.pluginID)\n            setChainId(props.chainId)\n            setSchemaType(props.schemaType)\n            setTitle(props.title)\n            setOnSubmit(() => props.onSubmit)\n        },\n    })\n\n    if (!open) return null\n    return (\n        <SelectNonFungibleContractDialog\n            open\n            onClose={() => dispatch?.close()}\n            title={title}\n            schemaType={schemaType}\n            chainId={chainId}\n            pluginID={pluginID}\n            onSubmit={onSubmit}\n        />\n    )\n})\n","import urlcat from 'urlcat'\nimport { memo, useMemo, useState } from 'react'\nimport { EncryptPayloadNetwork, encryptPayloadNetworkToDomain, encodeByNetwork } from '@masknet/encryption'\nimport { Icons } from '@masknet/icons'\nimport { CopyButton, InjectedDialog, useSharedTrans } from '@masknet/shared'\nimport { openWindow } from '@masknet/shared-base-ui'\nimport { makeStyles } from '@masknet/theme'\nimport { Button, DialogContent, FormControlLabel, Radio, RadioGroup, Typography, useTheme } from '@mui/material'\nimport { SOCIAL_MEDIA_NAME } from '@masknet/shared-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    content: {\n        display: 'flex',\n        padding: theme.spacing(2),\n        height: 400,\n        flexDirection: 'column',\n    },\n    textBorder: {\n        flex: 1,\n        border: `1px solid ${theme.palette.maskColor.borderSecondary}`,\n        borderRadius: 8,\n        padding: 8,\n    },\n    title: {\n        paddingTop: 16,\n        paddingBottom: 0,\n        fontWeight: 700,\n    },\n    network: {\n        display: 'flex',\n        flexDirection: 'row',\n        paddingTop: 8,\n        paddingBottom: 8,\n    },\n    actions: {\n        gap: 12,\n        display: 'flex',\n        paddingTop: 8,\n    },\n    button: {\n        flex: 1,\n    },\n}))\n\ninterface ShareSelectNetworkProps {\n    open: boolean\n    onClose: () => void\n    message: Uint8Array\n}\n\nconst SharedUrl: Record<EncryptPayloadNetwork, ((message: string) => URL) | undefined> = {\n    [EncryptPayloadNetwork.Unknown]: undefined,\n    [EncryptPayloadNetwork.Instagram]: undefined,\n    [EncryptPayloadNetwork.Minds]: undefined,\n    [EncryptPayloadNetwork.Twitter]: (message: string) => {\n        const url = urlcat('https://twitter.com/intent/tweet', { text: message })\n        return new URL(url)\n    },\n    [EncryptPayloadNetwork.Facebook]: (message: string) => {\n        const url = urlcat('https://www.facebook.com/sharer/sharer.php', {\n            quote: message,\n            u: 'mask.io',\n        })\n        return new URL(url)\n    },\n}\n\nexport const ShareSelectNetwork = memo<ShareSelectNetworkProps>(({ open, onClose, message }) => {\n    const { classes } = useStyles()\n    const theme = useTheme()\n    const t = useSharedTrans()\n    const [network, setNetwork] = useState<EncryptPayloadNetwork>(EncryptPayloadNetwork.Twitter)\n    const encodedText = useMemo(() => {\n        if (!message) return\n        const text = encodeByNetwork(network, message)\n        return text\n    }, [message, network])\n\n    return (\n        <InjectedDialog open={open} onClose={onClose}>\n            <DialogContent className={classes.content}>\n                <div>\n                    <CopyButton size={17.5} text={encodedText ?? ''} />\n                </div>\n                <div className={classes.textBorder}>\n                    <Typography sx={{ wordBreak: 'break-all' }}>{encodedText}</Typography>\n                </div>\n                <Typography className={classes.title}>{t.share_to_social_networks()}</Typography>\n                <RadioGroup\n                    className={classes.network}\n                    defaultValue={network}\n                    onChange={(e) => {\n                        const network = Number.parseInt(e.currentTarget.value, 10) as EncryptPayloadNetwork\n                        setNetwork(network)\n                    }}>\n                    {Object.entries(SharedUrl)\n                        .filter(([_, converter]) => converter)\n                        .map(([site]) => {\n                            return (\n                                <FormControlLabel\n                                    key={site}\n                                    label={SOCIAL_MEDIA_NAME[encryptPayloadNetworkToDomain(Number.parseInt(site, 10))]}\n                                    value={site}\n                                    control={\n                                        <Radio\n                                            color=\"primary\"\n                                            value={site}\n                                            icon={\n                                                <Icons.RadioButtonUnChecked\n                                                    color={theme.palette.maskColor.line}\n                                                    size={18}\n                                                />\n                                            }\n                                            checkedIcon={<Icons.RadioButtonChecked size={18} />}\n                                        />\n                                    }\n                                />\n                            )\n                        })}\n                </RadioGroup>\n                <div className={classes.actions}>\n                    <Button className={classes.button} variant=\"roundedOutlined\" onClick={onClose}>\n                        {t.cancel()}\n                    </Button>\n                    <Button\n                        className={classes.button}\n                        variant=\"roundedContained\"\n                        disabled={!encodedText}\n                        onClick={() => {\n                            if (!encodedText) return\n                            openWindow(SharedUrl[network]?.(encodedText))\n                            onClose()\n                        }}>\n                        {t.share()}\n                    </Button>\n                </div>\n            </DialogContent>\n        </InjectedDialog>\n    )\n})\n\nShareSelectNetwork.displayName = 'ShareSelectNetworkDialog'\n","import type { SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport { forwardRef, useState } from 'react'\nimport { ShareSelectNetwork } from './ShareModal.js'\n\nexport interface ShareSelectNetworkModalOpenProps {\n    message: Uint8Array\n}\n\nexport const ShareSelectNetworkModal = forwardRef<SingletonModalRefCreator<ShareSelectNetworkModalOpenProps>>(\n    (props, ref) => {\n        const [message, setMessage] = useState<null | Uint8Array>(null)\n\n        const [open, dispatch] = useSingletonModal(ref, {\n            onOpen(props) {\n                setMessage(props.message)\n            },\n        })\n\n        if (!open) return null\n        if (!message) return null\n        return <ShareSelectNetwork open onClose={() => dispatch?.close()} message={message} />\n    },\n)\n","import { Icons } from '@masknet/icons'\nimport { AssetPreviewer, InjectedDialog, type InjectedDialogProps, TokenIcon } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useNonFungibleAsset } from '@masknet/web3-hooks-base'\nimport { TokenType } from '@masknet/web3-shared-base'\nimport { Box, Button, DialogActions, DialogContent, Typography } from '@mui/material'\nimport type { PropsWithChildren } from 'react'\nimport { useSharedTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    confirmDialog: {\n        width: 420,\n        height: 420,\n        backgroundImage: 'none',\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        justifyItems: 'center',\n        padding: theme.spacing(3),\n        boxSizing: 'border-box',\n        color: theme.palette.text.primary,\n        textAlign: 'center',\n        fontSize: 18,\n    },\n\n    congratulation: {\n        fontWeight: 700,\n        fontSize: '20px',\n        lineHeight: '24px',\n        color: theme.palette.maskColor.success,\n    },\n    actions: {\n        padding: theme.spacing(0, 3, 3),\n    },\n    nftContainer: {\n        height: 126,\n        width: 126,\n    },\n    nftName: {\n        display: 'flex',\n        marginTop: 10,\n    },\n    nftMessage: {\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    messageText: {\n        fontSize: 16,\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        lineHeight: '20px',\n    },\n    nftMessageText: {\n        fontSize: 16,\n        color: theme.palette.maskColor.second,\n        fontWeight: 700,\n        lineHeight: '20px',\n    },\n    tokenIcon: {\n        margin: 'auto',\n        border: `1px ${theme.palette.maskColor.secondaryLine} solid`,\n    },\n}))\n\nexport interface TokenTransactionConfirmModalProps extends PropsWithChildren<InjectedDialogProps> {\n    amount: string | null\n    token?: Web3Helper.FungibleTokenAll | null\n    nonFungibleTokenId?: string | null\n    nonFungibleTokenAddress?: string\n    tokenType: TokenType\n    messageTextForNFT?: string\n    messageTextForFT?: string\n    confirmText?: string\n    onConfirm?(): void\n}\n\nexport function TokenTransactionConfirmModal({\n    className,\n    confirmText,\n    onConfirm,\n    children,\n    messageTextForNFT,\n    messageTextForFT,\n    amount,\n    tokenType,\n    token,\n    nonFungibleTokenAddress,\n    nonFungibleTokenId,\n    onClose,\n    ...rest\n}: TokenTransactionConfirmModalProps) {\n    const { classes } = useStyles()\n    const t = useSharedTrans()\n    confirmText = confirmText || 'Confirm'\n    const isToken = tokenType === TokenType.Fungible\n    const { data: nonFungibleToken } = useNonFungibleAsset(undefined, nonFungibleTokenAddress, nonFungibleTokenId ?? '')\n    return (\n        <InjectedDialog\n            classes={{\n                paper: classes.confirmDialog,\n            }}\n            BackdropProps={{\n                style: {\n                    opacity: 0,\n                },\n            }}\n            titleBarIconStyle=\"close\"\n            onClose={onClose}\n            {...rest}>\n            <DialogContent className={classes.content}>\n                {isToken ? (\n                    <Box>\n                        <TokenIcon\n                            className={classes.tokenIcon}\n                            address={token?.address || ''}\n                            logoURL={token?.logoURL}\n                            name={token?.symbol ?? token?.name}\n                            chainId={token?.chainId}\n                            sx={{ fontSize: '2.75em' }}\n                            size={90}\n                        />\n                        <Typography className={classes.congratulation} mt=\"19.5px\">\n                            {t.congratulations()}\n                        </Typography>\n                        <Typography className={classes.messageText} mt=\"41px\">\n                            {messageTextForFT}\n                        </Typography>\n                    </Box>\n                ) : (\n                    <div className={classes.nftMessage}>\n                        {nonFungibleToken ? (\n                            <>\n                                <div className={classes.nftContainer}>\n                                    <AssetPreviewer\n                                        url={nonFungibleToken.metadata?.mediaURL || nonFungibleToken.metadata?.imageURL}\n                                    />\n                                </div>\n                                <div className={classes.nftName}>\n                                    <Typography fontWeight={700} fontSize={20} lineHeight=\"24px\">\n                                        {nonFungibleToken?.metadata?.name}\n                                    </Typography>\n                                    {nonFungibleToken.collection?.verified ? <Icons.Verification size={21.43} /> : null}\n                                </div>\n                            </>\n                        ) : null}\n                        <Typography className={classes.congratulation} mt=\"24px\">\n                            {t.congratulations()}\n                        </Typography>\n                        <Typography className={classes.nftMessageText} mt=\"14px\">\n                            {messageTextForNFT}\n                        </Typography>\n                    </div>\n                )}\n            </DialogContent>\n            <DialogActions className={classes.actions}>\n                <Button fullWidth onClick={onConfirm}>\n                    {confirmText}\n                </Button>\n            </DialogActions>\n        </InjectedDialog>\n    )\n}\n","import { useCallback } from 'react'\nimport { TokenTransactionConfirmModal, useSharedTrans, type TokenTransactionConfirmModalProps } from '../../../index.js'\n\nexport interface TransactionConfirmProps extends TokenTransactionConfirmModalProps {\n    shareText: string\n    onSubmit?(): void\n    share?: (text: string) => void\n    title?: string\n    messageTextForNFT?: string\n    messageTextForFT?: string\n    open: boolean\n    onClose: () => void\n}\nexport function TransactionConfirm({ onSubmit, shareText, share, ...rest }: TransactionConfirmProps) {\n    const t = useSharedTrans()\n    const handleConfirm = useCallback(() => {\n        share?.(shareText)\n        onSubmit?.()\n    }, [shareText, onSubmit, share])\n    return (\n        <TokenTransactionConfirmModal\n            {...rest}\n            messageTextForNFT={rest.messageTextForNFT}\n            messageTextForFT={rest.messageTextForFT}\n            title={rest.title}\n            confirmText={share ? t.share() : t.ok()}\n            onConfirm={handleConfirm}\n        />\n    )\n}\n","import { forwardRef, useState } from 'react'\nimport type { SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { TokenType } from '@masknet/web3-shared-base'\nimport { TransactionConfirm, type TransactionConfirmProps } from './TokenTransactionConfirm.js'\n\nexport interface TransactionConfirmModalOpenProps extends Omit<TransactionConfirmProps, 'open' | 'onClose'> {}\n\nexport const TransactionConfirmModal = forwardRef<SingletonModalRefCreator<TransactionConfirmModalOpenProps>>(\n    (props, ref) => {\n        const [shareText, setShareText] = useState('')\n        const [onSubmit, setOnSubmit] = useState<() => void>()\n        const [share, setShare] = useState<(text: string) => void>()\n        const [amount, setAmount] = useState<string | null>(null)\n        const [token, setToken] = useState<Web3Helper.FungibleTokenAll | null>()\n        const [tokenType, setTokenType] = useState<TokenType>(TokenType.Fungible)\n        const [messageTextForNFT, setMessageTextForNFT] = useState<string>()\n        const [messageTextForFT, setMessageTextForFT] = useState<string>()\n        const [title, setTitle] = useState<string>()\n        const [nonFungibleTokenId, setNonFungibleTokenId] = useState<string>()\n        const [nonFungibleTokenAddress, setNonFungibleTokenAddress] = useState<string>()\n\n        const [open, dispatch] = useSingletonModal(ref, {\n            onOpen(props) {\n                setShareText(props.shareText)\n                setOnSubmit(() => props.onSubmit)\n                setShare(() => props.share)\n                setAmount(props.amount)\n                setToken(props.token)\n                setTokenType(props.tokenType)\n                setTitle(props.title)\n                setMessageTextForFT(props.messageTextForFT)\n                setMessageTextForNFT(props.messageTextForNFT)\n                setNonFungibleTokenId(props.nonFungibleTokenId ?? undefined)\n                setNonFungibleTokenAddress(props.nonFungibleTokenAddress ?? undefined)\n            },\n        })\n\n        if (!open) return null\n        return (\n            <TransactionConfirm\n                shareText={shareText}\n                open\n                onClose={() => dispatch?.close()}\n                amount={amount}\n                tokenType={tokenType}\n                nonFungibleTokenId={nonFungibleTokenId}\n                nonFungibleTokenAddress={nonFungibleTokenAddress}\n                token={token}\n                onSubmit={onSubmit}\n                share={share}\n                title={title}\n                messageTextForFT={messageTextForFT}\n                messageTextForNFT={messageTextForNFT}\n            />\n        )\n    },\n)\n","import { memo, useRef, forwardRef, useCallback } from 'react'\nimport { Typography, alpha, collapseClasses } from '@mui/material'\nimport {\n    SnackbarProvider,\n    type SnackbarProviderProps,\n    type SnackbarMessage,\n    SnackbarContent,\n    type VariantType,\n    type SnackbarKey,\n    useSnackbar,\n} from 'notistack'\nimport { makeStyles } from '../../UIHelper/index.js'\nimport type { ShowSnackbarOptions } from './index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        width: '100%!important',\n        maxWidth: '100%!important',\n        top: '0!important',\n        backdropFilter: 'blur(5px)',\n        [`& .${collapseClasses.wrapper}`]: {\n            padding: '0 !important',\n        },\n    },\n    content: {\n        width: '100vw',\n        padding: '8px',\n        boxSizing: 'border-box',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        lineHeight: '18px',\n    },\n    title: {\n        lineHeight: '18px',\n        padding: '0 8px',\n    },\n    message: {\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n    },\n    success: {\n        background: alpha(theme.palette.maskColor.success, 0.5),\n        color: theme.palette.maskColor.white,\n    },\n    error: {\n        background: alpha(theme.palette.maskColor.danger, 0.5),\n        color: theme.palette.maskColor.white,\n    },\n    warning: {\n        background: alpha(theme.palette.maskColor.warn, 0.5),\n        color: theme.palette.maskColor.white,\n    },\n    // eslint-disable-next-line tss-unused-classes/unused-classes\n    default: {},\n\n    info: {},\n}))\n\nexport const PopupSnackbarProvider = memo<SnackbarProviderProps>(function PopupSnackbarProvider(props) {\n    const ref = useRef<SnackbarProvider>(null)\n    const { classes } = useStyles()\n\n    return (\n        <SnackbarProvider\n            ref={ref}\n            maxSnack={1}\n            disableWindowBlurListener\n            autoHideDuration={2000}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            classes={{\n                containerRoot: classes.container,\n                variantSuccess: classes.success,\n                variantError: classes.error,\n                variantInfo: classes.info,\n                variantWarning: classes.warning,\n            }}\n            {...props}\n        />\n    )\n})\n\ninterface PopupSnackbarContentProps {\n    id: SnackbarKey\n    title: SnackbarMessage\n    message?: string | React.ReactNode\n    variant?: VariantType\n}\n\nconst PopupSnackbarContent = forwardRef<HTMLDivElement, PopupSnackbarContentProps>(\n    ({ id, title, message, variant }, ref) => {\n        const { classes, cx } = useStyles()\n\n        return (\n            <SnackbarContent key={id} className={cx(classes.content, classes[variant!])} ref={ref}>\n                <Typography className={classes.title} component=\"div\">\n                    {title}\n                </Typography>\n                {typeof message === 'string' ? <Typography className={classes.message}>{message}</Typography> : message}\n            </SnackbarContent>\n        )\n    },\n)\n\nexport function usePopupCustomSnackbar() {\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n    const showSnackbar = useCallback(\n        (\n            text: SnackbarMessage,\n            options: ShowSnackbarOptions = {\n                variant: 'success',\n                autoHideDuration: 2000,\n            },\n        ) => {\n            const { processing, message, variant, ...rest } = options\n            return enqueueSnackbar(text, {\n                variant: options.variant,\n                content: (key, title) => {\n                    return <PopupSnackbarContent id={key} title={title} message={message} variant={variant} />\n                },\n                autoHideDuration: 2000,\n                ...rest,\n            })\n        },\n        [enqueueSnackbar],\n    )\n\n    return { showSnackbar, closeSnackbar }\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { useAsync } from 'react-use'\nimport type { JsonRpcPayload } from 'web3-core-helpers'\nimport { Link } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport {\n    makeStyles,\n    type ShowSnackbarOptions,\n    type SnackbarKey,\n    type SnackbarMessage,\n    useCustomSnackbar,\n    usePopupCustomSnackbar,\n} from '@masknet/theme'\nimport { type NetworkPluginID, createLookupTableResolver, Sniffings } from '@masknet/shared-base'\nimport { TransactionStatusType, type RecognizableError } from '@masknet/web3-shared-base'\nimport { useWeb3State, useChainContext, useWeb3Others } from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()({\n    link: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n})\n\ninterface TransactionSnackbarProps<T extends NetworkPluginID> {\n    pluginID: T\n}\n\nexport function TransactionSnackbar<T extends NetworkPluginID>({ pluginID }: TransactionSnackbarProps<T>) {\n    const { classes } = useStyles()\n    const t = useSharedTrans()\n    const { showSnackbar, closeSnackbar } = useCustomSnackbar()\n    const { showSnackbar: showPopupSnackbar, closeSnackbar: closePopupSnackbar } = usePopupCustomSnackbar()\n    const snackbarKeyRef = useRef<SnackbarKey>()\n\n    const { chainId } = useChainContext()\n    const [errorInfo, setErrorInfo] = useState<\n        | {\n              error: RecognizableError\n              request: JsonRpcPayload\n          }\n        | undefined\n    >()\n    const [progress, setProgress] = useState<{\n        chainId: Web3Helper.Definition[T]['ChainId']\n        status: TransactionStatusType\n        txHash: string\n        transaction: Web3Helper.Definition[T]['Transaction']\n    }>()\n    const Others = useWeb3Others(pluginID)\n    const { TransactionFormatter, TransactionWatcher } = useWeb3State(pluginID)\n\n    useEffect(() => {\n        const off = TransactionWatcher?.emitter.on('error', (error, request) => {\n            setErrorInfo({ error, request })\n        })\n        return () => {\n            off?.()\n        }\n    }, [TransactionWatcher])\n\n    useEffect(() => {\n        const off = TransactionWatcher?.emitter.on('progress', (chainId, txHash, status, transaction) => {\n            if (!transaction || !pluginID) return\n            setProgress({\n                chainId,\n                status,\n                txHash,\n                transaction,\n            })\n        })\n\n        return () => {\n            off?.()\n        }\n    }, [TransactionWatcher, pluginID])\n\n    useEffect(() => {\n        setProgress(undefined)\n        setErrorInfo(undefined)\n    }, [chainId])\n\n    const resolveSnackbarConfig = createLookupTableResolver<\n        TransactionStatusType,\n        Pick<ShowSnackbarOptions, 'message' | 'processing' | 'variant'>\n    >(\n        {\n            [TransactionStatusType.NOT_DEPEND]: {\n                processing: true,\n                variant: 'default',\n                message: t.plugin_wallet_snackbar_wait_for_confirming(),\n            },\n            [TransactionStatusType.SUCCEED]: {\n                processing: false,\n                variant: 'success',\n                message: t.plugin_wallet_snackbar_confirmed(),\n            },\n            [TransactionStatusType.FAILED]: {\n                processing: false,\n                variant: 'error',\n                message: t.plugin_wallet_snackbar_failed(),\n            },\n        },\n        {},\n    )\n\n    const showSingletonSnackbar = useCallback(\n        (title: SnackbarMessage, options: ShowSnackbarOptions) => {\n            if (snackbarKeyRef.current !== undefined)\n                Sniffings.is_popup_page\n                    ? closePopupSnackbar(snackbarKeyRef.current)\n                    : closeSnackbar(snackbarKeyRef.current)\n            snackbarKeyRef.current = Sniffings.is_popup_page\n                ? showPopupSnackbar(title, options)\n                : showSnackbar(title, options)\n            return () => {\n                Sniffings.is_popup_page\n                    ? closePopupSnackbar(snackbarKeyRef.current)\n                    : closeSnackbar(snackbarKeyRef.current)\n            }\n        },\n        [showSnackbar, closeSnackbar, showPopupSnackbar, closePopupSnackbar],\n    )\n\n    useAsync(async () => {\n        if (!progress) return\n        const computed = await TransactionFormatter?.formatTransaction?.(\n            progress.chainId,\n            progress.transaction,\n            progress.txHash,\n        )\n        if (!computed || computed.title === 'followWithSig' || computed.title === 'burnWithSig') return\n\n        showSingletonSnackbar(\n            progress.status === TransactionStatusType.SUCCEED\n                ? computed.snackbar?.successfulTitle ?? computed.title\n                : computed.title,\n            {\n                ...resolveSnackbarConfig(progress.status),\n                ...{\n                    message: (\n                        <Link\n                            sx={{ wordBreak: 'break-word' }}\n                            className={classes.link}\n                            color=\"inherit\"\n                            href={Others.explorerResolver.transactionLink?.(progress.chainId, progress.txHash)}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\">\n                            {progress.status === TransactionStatusType.SUCCEED\n                                ? computed.snackbar?.successfulDescription ?? computed.description\n                                : computed.description}{' '}\n                            <Icons.LinkOut size={16} sx={{ ml: 0.5 }} />\n                        </Link>\n                    ),\n                },\n            },\n        )\n    }, [progress])\n\n    useAsync(async () => {\n        if (!errorInfo) return\n        const transaction = errorInfo?.request?.params?.[0] as Web3Helper.Definition[T]['Transaction'] | undefined\n        const computed = transaction ? await TransactionFormatter?.formatTransaction?.(chainId, transaction) : undefined\n        const title = computed?.snackbar?.failedTitle ?? computed?.title\n        const message = errorInfo?.error.isRecognized ? errorInfo?.error.message : computed?.snackbar?.failedDescription\n\n        if (!title) return\n\n        if (\n            title === 'Claim your Airdrop' &&\n            (errorInfo?.error.message.includes('Transaction was rejected') ||\n                errorInfo?.error.message.includes('Signature canceled') ||\n                errorInfo?.error.message.includes('User rejected the request') ||\n                errorInfo?.error.message.includes('User rejected transaction'))\n        )\n            return\n        const snackbarConfig = resolveSnackbarConfig(TransactionStatusType.FAILED)\n\n        showSingletonSnackbar(title, {\n            ...snackbarConfig,\n            message: message ?? snackbarConfig.message,\n        })\n        setErrorInfo(undefined)\n    }, [JSON.stringify(errorInfo), chainId])\n\n    return null\n}\n","import { forwardRef } from 'react'\nimport { type NetworkPluginID, type SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport { TransactionSnackbar } from './TransactionSnackbar.js'\n\ninterface TransactionSnackbarProps {\n    pluginID: NetworkPluginID\n}\n\nexport const TransactionSnackbarModal = forwardRef<SingletonModalRefCreator, TransactionSnackbarProps>((props, ref) => {\n    useSingletonModal(ref)\n\n    return <TransactionSnackbar pluginID={props.pluginID} />\n})\n","import { Grid, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { QRCode, useSharedTrans } from '@masknet/shared'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        filter: 'drop-shadow(0px 6px 12px rgba(0, 0, 0, 0.1))',\n        backdropFilter: 'blur(20px)',\n    },\n    tip: { fontSize: 12, marginTop: '10px' },\n}))\n\ninterface QRCodeModalProps {\n    uri: string\n}\n\nexport function QRCodeModal({ uri }: QRCodeModalProps) {\n    const t = useSharedTrans()\n    const { classes } = useStyles()\n\n    const style: React.CSSProperties = {\n        width: '80%',\n        maxWidth: 361,\n        display: 'block',\n        margin: 'auto',\n        borderRadius: 16,\n    }\n\n    return (\n        <Grid className={classes.container}>\n            <QRCode text={uri} canvasProps={{ style }} />\n            <Typography className={classes.tip} color=\"textSecondary\">\n                {t.wallet_connect_qr_code_dialog_content()}\n            </Typography>\n        </Grid>\n    )\n}\n","import { DialogContent } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { InjectedDialog, useSharedTrans } from '@masknet/shared'\nimport { QRCodeModal } from './QRCodeModal.js'\n\nconst useStyles = makeStyles()({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n})\ninterface QRCodeDialogProps {\n    uri: string\n    open: boolean\n    onClose(): void\n}\n\nexport function QRCodeDialog({ uri, open, onClose }: QRCodeDialogProps) {\n    const t = useSharedTrans()\n    const { classes } = useStyles()\n    return (\n        <InjectedDialog open={open} onClose={onClose} title={t.wallet_connect_qr_code_dialog_title()}>\n            <DialogContent className={classes.container}>{uri ? <QRCodeModal uri={uri} /> : null}</DialogContent>\n        </InjectedDialog>\n    )\n}\n","import { forwardRef, useState } from 'react'\nimport type { SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport { QRCodeDialog } from './QRCodeDialog.js'\n\nexport interface WalletConnectQRCodeOpenProps {\n    uri: string\n}\n\nexport const WalletConnectQRCodeModal = forwardRef<SingletonModalRefCreator<WalletConnectQRCodeOpenProps>>(\n    (props, ref) => {\n        const [uri, setURI] = useState('')\n        const [open, dispatch] = useSingletonModal(ref, {\n            onOpen(props) {\n                setURI(props.uri)\n            },\n        })\n\n        if (!open) return null\n        return <QRCodeDialog uri={uri} open onClose={() => dispatch?.close()} />\n    },\n)\n","import { useCallback } from 'react'\nimport { DialogContent, dialogClasses } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { InjectedDialog, WalletStatusBox, useSharedTrans } from '@masknet/shared'\nimport { CrossIsolationMessages } from '@masknet/shared-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    content: {\n        padding: theme.spacing(2),\n        overflowX: 'hidden',\n    },\n    inVisible: {\n        visibility: 'hidden',\n    },\n    dialog: {\n        [`.${dialogClasses.paper}`]: {\n            minHeight: 'unset !important',\n        },\n    },\n}))\n\ninterface WalletStatusDialogProps {\n    open: boolean\n    onClose: () => void\n    isHidden: boolean\n    setHidden: (isHidden: boolean) => void\n}\n\nexport function WalletStatusDialog({ open, onClose, isHidden = false, setHidden }: WalletStatusDialogProps) {\n    const t = useSharedTrans()\n    const { classes } = useStyles()\n\n    // #region remote controlled dialog logic\n    const closeDialog = useCallback(() => {\n        onClose()\n        CrossIsolationMessages.events.compositionDialogEvent.sendToLocal({\n            reason: 'timeline',\n            open: false,\n        })\n    }, [onClose])\n    // #endregion\n\n    return (\n        <InjectedDialog\n            title={t.plugin_wallet_dialog_title()}\n            open={open}\n            onClose={closeDialog}\n            maxWidth=\"sm\"\n            className={isHidden ? classes.inVisible : classes.dialog}>\n            <DialogContent className={classes.content}>\n                <WalletStatusBox\n                    showPendingTransaction\n                    closeDialog={() => {\n                        setHidden(true)\n                        onClose()\n                    }}\n                />\n            </DialogContent>\n        </InjectedDialog>\n    )\n}\n","import { forwardRef, useState } from 'react'\nimport type { SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport { WalletStatusDialog } from './WalletStatusDialog.js'\n\nexport const WalletStatusModal = forwardRef<SingletonModalRefCreator>((props, ref) => {\n    const [isHidden, setHidden] = useState(false)\n\n    const [open, dispatch] = useSingletonModal(ref, {\n        onOpen(props) {\n            setHidden(false)\n        },\n    })\n\n    if (!open) return null\n    return <WalletStatusDialog open setHidden={setHidden} onClose={() => dispatch?.close()} isHidden={isHidden} />\n})\n","import { memo } from 'react'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { RootWeb3ContextProvider } from '@masknet/web3-hooks-base'\nimport { WalletStatusModal } from './WalletStatusModal/index.js'\nimport { SelectProviderModal } from './SelectProviderModal/index.js'\nimport { WalletConnectQRCodeModal } from './WalletConnectQRCodeModal/index.js'\nimport { WalletRiskWarningModal } from './WalletRiskWarningModal/index.js'\nimport { ConnectWalletModal } from './ConnectWalletModal/index.js'\nimport { LeavePageConfirmModal } from './LeavePageConfirmModal/index.js'\nimport { ApplicationBoardModal, ApplicationBoardSettingsModal } from './ApplicationBoardModal/index.js'\nimport { GasSettingModal } from './GasSettingModal/index.js'\nimport { TransactionSnackbarModal } from './TransactionSnackbar/index.js'\nimport { ConfirmModal } from './ConfirmModal/index.js'\nimport { TransactionConfirmModal } from './TokenTransactionConfirmModal/index.js'\nimport { SelectNonFungibleContractModal } from './SelectNonFungibleContractModal/index.js'\nimport { SelectFungibleTokenModal } from './SelectFungibleTokenModal/index.js'\nimport { SelectGasSettingsModal } from './SelectAdvancedSettingsDialog/index.js'\nimport { AddCollectiblesModal } from './AddCollectiblesModal/index.js'\nimport { PersonaSelectPanelModal } from './PersonaSelectPanelModal/index.js'\nimport { ShareSelectNetworkModal } from './ShareSelectNetwork/index.js'\n\nimport { noop } from 'lodash-es'\nimport * as modals from './modals.js'\nimport { ConfirmDialogComponent } from './ConfirmDialog/index.js'\nexport * from './modals.js'\n\nexport interface ModalProps {\n    createWallet(): void\n}\nexport const Modals = memo(function Modals(props: ModalProps) {\n    return (\n        <RootWeb3ContextProvider>\n            <ConnectWalletModal ref={modals.ConnectWalletModal.register} />\n            <WalletConnectQRCodeModal ref={modals.WalletConnectQRCodeModal.register} />\n            <ConfirmDialogComponent ref={modals.ConfirmDialog.register} />\n            <SelectProviderModal createWallet={props.createWallet} ref={modals.SelectProviderModal.register} />\n            <WalletStatusModal ref={modals.WalletStatusModal.register} />\n            <WalletRiskWarningModal ref={modals.WalletRiskWarningModal.register} />\n            <LeavePageConfirmModal ref={modals.LeavePageConfirmModal.register} />\n            <ApplicationBoardModal ref={modals.ApplicationBoardModal.register} />\n            <GasSettingModal ref={modals.GasSettingModal.register} />\n            <TransactionSnackbarModal pluginID={NetworkPluginID.PLUGIN_EVM} ref={modals.TransactionSnackbar.register} />\n            <TransactionConfirmModal ref={modals.TransactionConfirmModal.register} />\n            <ConfirmModal ref={modals.ConfirmModal.register} />\n            <SelectNonFungibleContractModal ref={modals.SelectNonFungibleContractModal.register} />\n            <SelectFungibleTokenModal ref={modals.SelectFungibleTokenModal.register} />\n            <SelectGasSettingsModal ref={modals.SelectGasSettingsModal.register} />\n            <AddCollectiblesModal ref={modals.AddCollectiblesModal.register} />\n            <PersonaSelectPanelModal ref={modals.PersonaSelectPanelModal.register} />\n            <ApplicationBoardSettingsModal ref={modals.ApplicationBoardSettingsModal.register} />\n            <ShareSelectNetworkModal ref={modals.ShareSelectNetworkModal.register} />\n        </RootWeb3ContextProvider>\n    )\n})\n\nexport const SwapPageModals = memo(function SwapPageModals() {\n    return (\n        <>\n            <ConnectWalletModal ref={modals.ConnectWalletModal.register} />\n            <SelectProviderModal createWallet={noop} ref={modals.SelectProviderModal.register} />\n            <WalletRiskWarningModal ref={modals.WalletRiskWarningModal.register} />\n            <SelectFungibleTokenModal ref={modals.SelectFungibleTokenModal.register} />\n            <SelectGasSettingsModal ref={modals.SelectGasSettingsModal.register} />\n        </>\n    )\n})\n\n// Common modals\nexport { ConfirmDialogComponent } from './ConfirmDialog/index.js'\nexport { ConfirmDialog } from './modals.js'\n","import { Fragment } from 'react'\nimport { identity } from 'lodash-es'\n\nexport interface FormattedAddressProps {\n    address?: string\n    size?: number\n    formatter?: (address: string, size?: number) => string\n}\n\nexport function FormattedAddress({ address, size, formatter = identity }: FormattedAddressProps) {\n    if (!address) return null\n    return <Fragment>{formatter(address, size)}</Fragment>\n}\n","import { useCallback, useEffect } from 'react'\nimport { useAsyncRetry } from 'react-use'\nimport type { IdentityResolved } from '@masknet/plugin-infra/content-script'\nimport {\n    DashboardRoutes,\n    type PersonaInformation,\n    isSamePersona,\n    isSameProfile,\n    resolveNextIDIdentityToProfile,\n    MaskMessages,\n    type ECKeyIdentifier,\n} from '@masknet/shared-base'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { LeavePageConfirmModal, PersonaSelectPanelModal } from '../UI/modals/index.js'\nimport { useSharedTrans } from '../locales/index.js'\nimport type { PersonaConnectStatus } from '../types.js'\n\nconst DEFAULT_PERSONA_CONNECT_STATUS: PersonaConnectStatus = {\n    action: undefined,\n    currentPersona: undefined,\n    connected: false,\n    hasPersona: false,\n    verified: false,\n    proof: undefined,\n}\n\nexport function useCurrentPersonaConnectStatus(\n    personas: readonly PersonaInformation[],\n    currentPersonaIdentifier?: ECKeyIdentifier,\n    openDashboard?: (route?: DashboardRoutes, search?: string) => void,\n    identity?: IdentityResolved,\n) {\n    const t = useSharedTrans()\n\n    const create = useCallback((target?: string, position?: 'center' | 'top-right', _?: boolean, direct = false) => {\n        if (direct) {\n            openDashboard?.(DashboardRoutes.SignUpPersona)\n        } else {\n            LeavePageConfirmModal.open({\n                openDashboard,\n                info: {\n                    target: 'dashboard',\n                    url: target ?? DashboardRoutes.SignUpPersona,\n                    text: t.applications_create_persona_hint(),\n                    title: t.applications_create_persona_title(),\n                    actionHint: t.applications_create_persona_action(),\n                    position,\n                },\n            })\n        }\n    }, [])\n\n    const openPersonListDialog = useCallback(\n        (finishTarget?: string, position?: 'center' | 'top-right', enableVerify = true) => {\n            PersonaSelectPanelModal.open({\n                finishTarget,\n                position,\n                enableVerify,\n            })\n        },\n        [],\n    )\n\n    const {\n        value = DEFAULT_PERSONA_CONNECT_STATUS,\n        loading,\n        error,\n        retry,\n    } = useAsyncRetry<PersonaConnectStatus>(async () => {\n        const currentPersona = personas.find((x) => isSamePersona(x, currentPersonaIdentifier))\n        const currentProfile = currentPersona?.linkedProfiles.find((x) =>\n            isSameProfile(x.identifier, identity?.identifier),\n        )\n\n        // handle not have persona\n        if (!currentPersona || !personas.length) {\n            return {\n                action: create,\n                currentPersona: undefined,\n                connected: false,\n                hasPersona: false,\n            }\n        }\n\n        // handle had persona but not connect current site\n        if (!currentProfile) {\n            return {\n                action: openPersonListDialog,\n                currentPersona,\n                connected: false,\n                hasPersona: true,\n            }\n        }\n\n        // handle had persona and connected current site, then check the nextID\n        try {\n            const nextIDInfo = await NextIDProof.queryExistedBindingByPersona(currentPersona.identifier.publicKeyAsHex)\n            const verifiedProfile = nextIDInfo?.proofs.find(\n                (x) =>\n                    isSameProfile(resolveNextIDIdentityToProfile(x.identity, x.platform), currentProfile?.identifier) &&\n                    x.is_valid,\n            )\n\n            return {\n                action: verifiedProfile ? undefined : openPersonListDialog,\n                currentPersona,\n                connected: true,\n                hasPersona: true,\n                verified: !!verifiedProfile,\n                proof: nextIDInfo?.proofs,\n            }\n        } catch {\n            return {\n                action: openPersonListDialog,\n                currentPersona,\n                connected: true,\n                hasPersona: true,\n            }\n        }\n    }, [currentPersonaIdentifier, personas, identity?.identifier, create, openPersonListDialog])\n\n    useEffect(() => {\n        const cleanPersonaChangedListener = MaskMessages.events.ownPersonaChanged.on(retry)\n        const cleanProofsChangedListener = MaskMessages.events.ownProofChanged.on(retry)\n        return () => {\n            cleanPersonaChangedListener()\n            cleanProofsChangedListener()\n        }\n    }, [retry])\n\n    return { value, loading, retry, error }\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { useAsync } from 'react-use'\nimport { compareDesc, isBefore } from 'date-fns'\nimport { unionWith, uniqBy } from 'lodash-es'\nimport { createContainer } from 'unstated-next'\nimport {\n    type ECKeyIdentifier,\n    EMPTY_LIST,\n    isSameProfile,\n    type PersonaInformation,\n    ProfileIdentifier,\n    NEXT_ID_PLATFORM_SOCIAL_MEDIA_MAP,\n    MaskMessages,\n    currentPersonaIdentifier,\n    NextIDPlatform,\n    type ProfileAccount,\n} from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { usePersonaProofs } from './usePersonaProofs.js'\nimport { Web3Storage } from '@masknet/web3-providers'\nimport { PERSONA_AVATAR_DB_NAMESPACE } from '../constants.js'\nimport type { PersonaAvatarData } from '../types.js'\nimport { useQuery } from '@tanstack/react-query'\n\nfunction usePersonaInformation(\n    queryOwnedPersonaInformation?: (initializedOnly: boolean) => Promise<PersonaInformation[]>,\n) {\n    const { data: personas = EMPTY_LIST, refetch } = useQuery({\n        queryKey: ['my-own-persona-info'],\n        queryFn: () => queryOwnedPersonaInformation?.(false),\n    })\n    useEffect(() => MaskMessages.events.ownPersonaChanged.on(() => refetch()), [])\n\n    return { personas }\n}\n\nfunction usePersonaContext(initialState?: {\n    queryOwnedPersonaInformation?: (initializedOnly: boolean) => Promise<PersonaInformation[]>\n    queryPersonaAvatarLastUpdateTime?: (identifier?: ECKeyIdentifier) => Promise<Date | undefined>\n}) {\n    const [selectedAccount, setSelectedAccount] = useState<ProfileAccount>()\n    const [selectedPersona, setSelectedPersona] = useState<PersonaInformation>()\n    const currentIdentifier = useValueRef(currentPersonaIdentifier)\n\n    const { personas } = usePersonaInformation(initialState?.queryOwnedPersonaInformation)\n\n    const currentPersona = personas.find((x) => x.identifier === (currentIdentifier || personas[0]?.identifier))\n\n    const { value: avatar } = useAsync(async () => {\n        if (!currentPersona) return\n        if (!initialState?.queryPersonaAvatarLastUpdateTime) return currentPersona.avatar\n\n        const lastUpdateTime = await initialState.queryPersonaAvatarLastUpdateTime(currentPersona.identifier)\n        const storage = Web3Storage.createKVStorage(PERSONA_AVATAR_DB_NAMESPACE)\n        try {\n            const remote = await storage.get<PersonaAvatarData>(currentPersona.identifier.rawPublicKey)\n\n            if (remote && lastUpdateTime && isBefore(lastUpdateTime, remote.updateAt)) {\n                return remote.imageUrl\n            }\n            return currentPersona.avatar\n        } catch {\n            return currentPersona.avatar\n        }\n    }, [currentPersona, initialState?.queryPersonaAvatarLastUpdateTime])\n\n    const { data: proofs, isLoading: fetchProofsLoading } = usePersonaProofs(currentPersona?.identifier.publicKeyAsHex)\n\n    const accounts = useMemo(() => {\n        if (!currentPersona) return EMPTY_LIST\n\n        const localProfiles = currentPersona.linkedProfiles.map<ProfileAccount>((profile) => ({\n            ...profile,\n            identity: profile.identifier.userId,\n        }))\n\n        if (!proofs) return localProfiles\n\n        const remoteProfiles = proofs\n            .filter((x) => !!NEXT_ID_PLATFORM_SOCIAL_MEDIA_MAP[x.platform] && x.is_valid)\n            .map<ProfileAccount>((x) => {\n                const network = NEXT_ID_PLATFORM_SOCIAL_MEDIA_MAP[x.platform]\n                return {\n                    ...x,\n                    identifier: ProfileIdentifier.of(network, x.identity).expect(\n                        `${network} and ${x.identity} should compose a valid ProfileIdentifier`,\n                    ),\n                }\n            })\n\n        return unionWith(remoteProfiles, localProfiles, isSameProfile)\n            .map((x) => {\n                const localProfile = localProfiles.find((profile) => isSameProfile(profile, x))\n                if (!localProfile) return x\n\n                return {\n                    ...x,\n                    ...localProfile,\n                }\n            })\n            .sort((a, b) => {\n                const aTimeZone = a.createAt?.getTime()\n                const bTimeZone = b.createAt?.getTime()\n\n                if (a.is_valid) return -1\n                if (b.is_valid) return 1\n\n                if (a.last_checked_at && b.last_checked_at) {\n                    return isBefore(Number(a.last_checked_at), Number(b.last_checked_at)) ? -1 : 1\n                }\n\n                if (a.createAt && b.createAt && !!aTimeZone && !!bTimeZone) {\n                    return compareDesc(a.createAt, b.createAt)\n                }\n\n                if (a.identity && b.identity && a.identity !== b.identity) return a.identity < b.identity ? -1 : 1\n\n                return 0\n            })\n    }, [proofs, currentPersona])\n\n    const walletProofs = useMemo(() => {\n        if (!proofs?.length) return EMPTY_LIST\n        return uniqBy(\n            proofs.filter((proof) => proof.platform === NextIDPlatform.Ethereum),\n            (x) => x.identity,\n        )\n    }, [proofs])\n\n    return {\n        accounts,\n        selectedAccount,\n        setSelectedAccount,\n        avatar,\n        personas,\n        currentPersona,\n        selectedPersona,\n        setSelectedPersona,\n        proofs,\n        fetchProofsLoading,\n        walletProofs,\n    }\n}\n\nexport const PersonaContext = createContainer(usePersonaContext)\n","import { useEffect } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { EMPTY_LIST, type BindingProof, MaskMessages, Sniffings } from '@masknet/shared-base'\n\nexport function usePersonaProofs(publicKey?: string) {\n    const result = useQuery<BindingProof[], Error>({\n        queryKey: ['next-id', 'bindings-by-persona', publicKey],\n        queryFn: async () => {\n            if (Sniffings.is_popup_page) await NextIDProof.clearPersonaQueryCache(publicKey!)\n            const binding = await NextIDProof.queryExistedBindingByPersona(publicKey!)\n            return binding?.proofs ?? EMPTY_LIST\n        },\n    })\n    const { refetch } = result\n\n    useEffect(() => {\n        return MaskMessages.events.ownProofChanged.on(async () => {\n            // Clearing the query cache when the proof relation changes\n            if (publicKey) {\n                await NextIDProof.clearPersonaQueryCache(publicKey)\n            }\n            refetch()\n        })\n    }, [publicKey])\n\n    return result\n}\n","import {\n    cloneElement,\n    createContext,\n    memo,\n    type RefObject,\n    useContext,\n    useMemo,\n    useRef,\n    type ReactElement,\n} from 'react'\n\ninterface Options {\n    boundaryRef: RefObject<HTMLElement>\n}\n\nconst BoundaryContext = createContext<Options>({\n    boundaryRef: { current: null },\n})\n\ninterface BoundaryProps {\n    // cloneElement is used.\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    children: ReactElement\n}\n\nexport const Boundary = memo(({ children }: BoundaryProps) => {\n    const boundaryRef = useRef<HTMLElement>(null)\n    const contextValue = useMemo(() => ({ boundaryRef }), [boundaryRef.current])\n    return (\n        <BoundaryContext.Provider value={contextValue}>\n            {cloneElement(children, { ...children.props, ref: boundaryRef })}\n        </BoundaryContext.Provider>\n    )\n})\n\nBoundary.displayName = 'Boundary'\n\nexport function useBoundary() {\n    return useContext(BoundaryContext)\n}\n","import { memo } from 'react'\nimport { Icons, type GeneratedIconProps } from '@masknet/icons'\n\ninterface Props extends GeneratedIconProps {\n    checked?: boolean\n    unCheckedButtonColor?: string\n    checkedButtonColor?: string\n}\n\nexport const RadioIndicator = memo<Props>(function RadioIndicator({\n    checked,\n    unCheckedButtonColor,\n    checkedButtonColor,\n    ...rest\n}) {\n    return checked ? (\n        <Icons.RadioButtonChecked {...rest} color={checkedButtonColor} />\n    ) : (\n        <Icons.RadioButtonUnChecked {...rest} color={unCheckedButtonColor} />\n    )\n})\n","import { type ForwardedRef, forwardRef } from 'react'\nimport { omit } from 'lodash-es'\nimport type { BoxProps } from '@mui/system'\nimport {\n    Box,\n    formHelperTextClasses,\n    TextField,\n    type StandardTextFieldProps,\n    type InputProps,\n    Typography,\n    InputBase,\n    inputBaseClasses,\n    alpha,\n} from '@mui/material'\nimport { Sniffings } from '@masknet/shared-base'\nimport { makeStyles } from '../../UIHelper/makeStyles.js'\nimport { MaskColorVar, getMaskColor } from '../../CSSVariables/vars.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    label: {\n        fontSize: 12,\n        lineHeight: '16px',\n        fontWeight: 'bolder',\n    },\n    required: {\n        fontSize: 12,\n        lineHeight: '16px',\n        fontWeight: 'bolder',\n        color: getMaskColor(theme).redMain,\n        paddingLeft: theme.spacing(0.5),\n    },\n    field: {\n        width: '100%',\n        [`& > .${formHelperTextClasses.root}`]: {\n            paddingTop: theme.spacing(1),\n            borderRadius: '2px',\n            fontSize: 14,\n            lineHeight: '16px',\n        },\n        '& input[type=number]': {\n            MozAppearance: 'textfield',\n            WebkitAppearance: 'none',\n        },\n        '& input[type=number]::-webkit-outer-spin-button': {\n            WebkitAppearance: 'none',\n        },\n        '& input[type=number]::-webkit-inner-spin-button': {\n            WebkitAppearance: 'none',\n        },\n        '& input::-webkit-input-placeholder': {\n            color: theme.palette.maskColor.third,\n        },\n        [`&.${inputBaseClasses.focused}`]: {\n            background: 'transparent',\n        },\n    },\n    input: {\n        padding: theme.spacing(1),\n        background: theme.palette.maskColor.input,\n        fontSize: 13,\n        lineHeight: '16px',\n        borderRadius: 6,\n        border: '1px solid transparent',\n        [`&.${formHelperTextClasses.error}`]: {\n            boxShadow: `0 0 0 ${theme.spacing(0.5)} ${MaskColorVar.redMain.alpha(0.2)}`,\n            borderColor: MaskColorVar.redMain.alpha(0.8),\n        },\n        [`&.${formHelperTextClasses.focused}`]: {\n            borderColor: Sniffings.is_dashboard_page ? alpha(theme.palette.maskColor.primary, 0.5) : 'transparent',\n        },\n    },\n    inputDisabled: {\n        opacity: 0.5,\n        color: 'rgba(255, 255, 255, 0.4)',\n    },\n    inputFocused: {\n        background: 'transparent',\n        ...(Sniffings.is_dashboard_page\n            ? {\n                  outline: `2px solid ${alpha(theme.palette.maskColor.primary, 0.2)}`,\n                  borderColor: alpha(theme.palette.maskColor.primary, 0.5),\n              }\n            : { boxShadow: `0 0 0 2px ${theme.palette.mode === 'dark' ? '#4F5378' : 'rgba(28, 104, 243, 0.2)'}` }),\n    },\n}))\n\nexport interface MaskTextFieldProps extends Exclude<StandardTextFieldProps, 'variant'> {\n    wrapperProps?: BoxProps\n}\n\nexport const MaskTextField = forwardRef((props: MaskTextFieldProps, ref: ForwardedRef<any>) => {\n    const { label, sx, required = false, className, wrapperProps, helperText, ...rest } = props\n    const InputProps = (props.InputProps as InputProps) ?? {}\n    const { classes, cx } = useStyles()\n    return (\n        <Box sx={sx} {...wrapperProps}>\n            {label && typeof label === 'string' ? (\n                <Typography sx={{ mb: 1 }} variant=\"body2\" className={classes.label}>\n                    {label}\n                    {required ? (\n                        <Typography className={classes.required} component=\"span\">\n                            *\n                        </Typography>\n                    ) : null}\n                </Typography>\n            ) : null}\n            {label && typeof label !== 'string' ? label : null}\n            {Sniffings.is_dashboard_page ? (\n                <TextField\n                    ref={ref}\n                    {...rest}\n                    classes={{ root: classes.field }}\n                    variant=\"standard\"\n                    required={required}\n                    helperText={helperText}\n                    InputProps={{\n                        disableUnderline: true,\n                        classes: {\n                            disabled: classes.inputDisabled,\n                            focused: classes.inputFocused,\n                            ...InputProps.classes,\n                        },\n                        ...InputProps,\n                        className: cx(classes.input, InputProps?.className),\n                    }}\n                />\n            ) : (\n                <InputBase\n                    className={classes.field}\n                    {...omit(InputProps, 'disableUnderline')}\n                    {...omit(rest, 'margin', 'onKeyDown', 'onKeyUp', 'InputProps', 'inputProps', 'FormHelperTextProps')}\n                />\n            )}\n        </Box>\n    )\n})\n\nMaskTextField.displayName = 'MaskTextField'\n","import { Tooltip } from '@mui/material'\nimport { createShadowRootForwardedPopperComponent } from '../../ShadowRoot/index.js'\n\nexport const ShadowRootTooltip = createShadowRootForwardedPopperComponent(Tooltip)\nShadowRootTooltip.displayName = 'ShadowRootTooltip'\n","import type { PopperProps } from '@mui/material'\nimport { useBoundary } from '../Components/index.js'\n\nexport function useBoundedPopperProps() {\n    const { boundaryRef } = useBoundary()\n\n    const tooltipPopperProps: Partial<PopperProps> = {\n        disablePortal: !!boundaryRef.current,\n        placement: 'top',\n        modifiers: [\n            {\n                name: 'flip',\n                options: {\n                    rootBoundary: boundaryRef.current,\n                    boundary: boundaryRef.current,\n                },\n            },\n        ],\n    }\n\n    return tooltipPopperProps\n}\n","import { useState, useCallback } from 'react'\n\nexport function useDetectOverflow<T extends HTMLDivElement>(): [overflow: boolean, ref: (node: T | null) => void] {\n    const [overflow, setOverflow] = useState(false)\n    const ref = useCallback((node: T | null) => {\n        if (node) setOverflow(node.offsetWidth !== node.scrollWidth)\n    }, [])\n\n    return [overflow, ref]\n}\n","import { useCallback, useEffect, useState, useTransition } from 'react'\n\n/**\n * @example\n *  const [currentTab, onChange, tabs, setTab] = useTab('tab1', 'tab2', 'tab3')\n *  return (\n *      <TabContext value={currentTab}>\n *          <TabList onChange={onChange}>\n *              <Tab label=\"Item One\" value={tabs.tab1} />\n *              <Tab label=\"Item Two\" value={tabs.tab2} />\n *              <Tab label=\"Item Three\" value={tabs.tab3} />\n *          </TabList>\n *          <TabPanel value={tabs.tab1}>Item One</TabPanel>\n *          <TabPanel value={tabs.tab2}>Item Two</TabPanel>\n *          <TabPanel value={tabs.tab3}>Item Three</TabPanel>\n *      </TabContext>\n *  )\n */\nexport function useTabs<T extends string>(defaultTab: T, ...possibleTabs: T[]) {\n    const [currentTab, setTab] = useState(defaultTab)\n    const [, startTransition] = useTransition()\n    const tabRecords = { [defaultTab]: defaultTab } as Record<T, T>\n    possibleTabs.forEach((t) => (tabRecords[t] = t))\n\n    const isCurrentTabAvailable = [defaultTab, ...possibleTabs].includes(currentTab)\n    useEffect(() => {\n        if (!isCurrentTabAvailable) {\n            setTab(defaultTab)\n        }\n    }, [isCurrentTabAvailable, defaultTab])\n\n    const onChange = useCallback((event: unknown, value: any) => {\n        startTransition(() => setTab(value))\n    }, [])\n    return [currentTab, onChange, tabRecords, setTab] as const\n}\n","import { noop } from 'lodash-es'\nimport { useEffect } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useBalance<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n    /** Allow to control the request */\n    enabled = true,\n) {\n    const { account, chainId } = useChainContext({ account: options?.account, chainId: options?.chainId })\n    const Web3 = useWeb3Connection(pluginID, {\n        account,\n        chainId,\n        ...options,\n    })\n    const { BalanceNotifier } = useWeb3State(pluginID)\n\n    const result = useQuery({\n        enabled: !!account && !!Web3 && enabled,\n        queryKey: ['balance', pluginID, chainId, account, options],\n        queryFn: async () => {\n            if (!account) return 0\n            return Web3.getBalance(account, { ...options, chainId })\n        },\n    })\n\n    useEffect(() => {\n        return (\n            BalanceNotifier?.emitter.on('update', (ev) => {\n                if (isSameAddress(account, ev.account)) result.refetch()\n            }) ?? noop\n        )\n    }, [account, result.refetch, BalanceNotifier])\n\n    return result\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useFungibleTokenPrice<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID: T,\n    address?: string,\n    options?: HubOptions<T>,\n) {\n    const { chainId } = useChainContext({ chainId: options?.chainId })\n    const Hub = useWeb3Hub(pluginID, {\n        chainId,\n        ...options,\n    })\n\n    return useQuery({\n        enabled: !!chainId && !!address,\n        queryKey: ['fungible', 'token-price', pluginID, chainId, address, options],\n        queryFn: async () => {\n            return Hub.getFungibleTokenPrice(chainId, address!.toLowerCase())\n        },\n    })\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useQuery } from '@tanstack/react-query'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\nimport { useWeb3Others } from './useWeb3Others.js'\n\nexport function useGasOptions<T extends NetworkPluginID = NetworkPluginID>(pluginID?: T, options?: HubOptions<T>) {\n    const { chainId } = useChainContext<T>({ chainId: options?.chainId })\n    const Hub = useWeb3Hub(pluginID, options)\n    const Others = useWeb3Others(pluginID)\n\n    return useQuery(['get-gas-options', pluginID, chainId, options], async () => {\n        if (!Others.isValidChainId(chainId)) return\n        return Hub.getGasOptions!(chainId, options)\n    })\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useFungibleToken } from './useFungibleToken.js'\nimport { useNativeTokenAddress } from './useNativeTokenAddress.js'\n\nexport function useNativeToken<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n) {\n    const nativeTokenAddress = useNativeTokenAddress(pluginID, options)\n    return useFungibleToken<S, T>(pluginID, nativeTokenAddress, undefined, options)\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useWeb3Others } from './useWeb3Others.js'\nimport { useNetwork } from './useNetwork.js'\n\nexport function useNativeTokenAddress<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n) {\n    const network = useNetwork(pluginID)\n    const Others = useWeb3Others(pluginID)\n    if (network?.isCustomized) {\n        return network.nativeCurrency.address\n    }\n    return Others.getNativeTokenAddress(options?.chainId)\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useNonFungibleAsset<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    address?: string,\n    id?: string,\n    options?: HubOptions<T>,\n) {\n    const { account } = useChainContext({ account: options?.account })\n    const Hub = useWeb3Hub(pluginID, {\n        account,\n        ...options,\n    })\n\n    return useQuery({\n        enabled: !!address,\n        queryKey: ['non-fungible-asset', pluginID, address, id, account, options],\n        queryFn: async () => {\n            if (!address || (!id && pluginID !== NetworkPluginID.PLUGIN_SOLANA)) return null\n            return Hub.getNonFungibleAsset(address, id ?? '')\n        },\n    })\n}\n","import { useQuery } from '@tanstack/react-query'\nimport {\n    asyncIteratorToArray,\n    pageableToIterator,\n    type PageIndicator,\n    type NetworkPluginID,\n    EMPTY_LIST,\n} from '@masknet/shared-base'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { type NonFungibleCollection } from '@masknet/web3-shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\nexport function useNonFungibleCollections<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: HubOptions<T>,\n) {\n    const { account } = useChainContext({ account: options?.account, chainId: options?.chainId })\n    const Hub = useWeb3Hub(pluginID, options)\n\n    return useQuery<Array<NonFungibleCollection<Web3Helper.ChainIdScope<S, T>, Web3Helper.SchemaTypeScope<S, T>>>>({\n        queryKey: ['non-fungible-collections', pluginID, account, options],\n        enabled: !!account,\n        queryFn: async () => {\n            if (!account) return EMPTY_LIST\n            return asyncIteratorToArray(\n                pageableToIterator(async (indicator?: PageIndicator) => {\n                    return Hub.getNonFungibleCollectionsByOwner(account, {\n                        indicator,\n                        size: 50,\n                        networkPluginId: pluginID,\n                        ...options,\n                    })\n                }),\n            )\n        },\n    })\n}\n","import { useQuery } from '@tanstack/react-query'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useReverseAddress<T extends NetworkPluginID>(pluginID?: T, address?: string, domainOnly?: boolean) {\n    const { NameService } = useWeb3State(pluginID)\n\n    return useQuery({\n        queryKey: ['reverse', address, domainOnly],\n        enabled: !!NameService?.reverse,\n        queryFn: async () => {\n            if (!address) return null\n            return (await NameService?.reverse?.(address, domainOnly)) || null\n        },\n    })\n}\n","import { useMemo } from 'react'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext } from './useContext.js'\nimport { useWallets } from './useWallets.js'\n\n/**\n * Use the currently selected wallet.\n * @param pluginID\n * @returns\n */\nexport function useWallet<T extends NetworkPluginID>(\n    pluginID?: T,\n    providerType?: Web3Helper.Definition[T]['ProviderType'],\n) {\n    const { account } = useChainContext()\n    const wallets = useWallets()\n\n    return useMemo(() => {\n        return account ? wallets.find((x) => isSameAddress?.(x.address, account)) ?? null : null\n    }, [account, wallets])\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\n\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n\n  const {\n    children,\n    className,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props);\n\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","'use strict'\n\nmodule.exports = function encodeUtf8 (input) {\n  var result = []\n  var size = input.length\n\n  for (var index = 0; index < size; index++) {\n    var point = input.charCodeAt(index)\n\n    if (point >= 0xD800 && point <= 0xDBFF && size > index + 1) {\n      var second = input.charCodeAt(index + 1)\n\n      if (second >= 0xDC00 && second <= 0xDFFF) {\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        point = (point - 0xD800) * 0x400 + second - 0xDC00 + 0x10000\n        index += 1\n      }\n    }\n\n    // US-ASCII\n    if (point < 0x80) {\n      result.push(point)\n      continue\n    }\n\n    // 2-byte UTF-8\n    if (point < 0x800) {\n      result.push((point >> 6) | 192)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 3-byte UTF-8\n    if (point < 0xD800 || (point >= 0xE000 && point < 0x10000)) {\n      result.push((point >> 12) | 224)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 4-byte UTF-8\n    if (point >= 0x10000 && point <= 0x10FFFF) {\n      result.push((point >> 18) | 240)\n      result.push(((point >> 12) & 63) | 128)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // Invalid character\n    result.push(0xEF, 0xBF, 0xBD)\n  }\n\n  return new Uint8Array(result).buffer\n}\n","import{get as r,set as i}from\"react-hook-form\";var e=function(i,e,t){if(i&&\"reportValidity\"in i){var f=r(t,e);i.setCustomValidity(f&&f.message||\"\"),i.reportValidity()}},t=function(r,i){var t=function(t){var f=i.fields[t];f&&f.ref&&\"reportValidity\"in f.ref?e(f.ref,t,r):f.refs&&f.refs.forEach(function(i){return e(i,t,r)})};for(var f in i.fields)t(f)},f=function(e,f){f.shouldUseNativeValidation&&t(e,f);var o={};for(var a in e){var n=r(f.fields,a);i(o,a,Object.assign(e[a]||{},{ref:n&&n.ref}))}return o};export{f as toNestError,t as validateFieldsNatively};\n//# sourceMappingURL=resolvers.module.js.map\n","import{appendErrors as r}from\"react-hook-form\";import{validateFieldsNatively as e,toNestError as o}from\"@hookform/resolvers\";var n=function(e,o){for(var n={};e.length;){var t=e[0],s=t.code,i=t.message,a=t.path.join(\".\");if(!n[a])if(\"unionErrors\"in t){var u=t.unionErrors[0].errors[0];n[a]={message:u.message,type:u.code}}else n[a]={message:i,type:s};if(\"unionErrors\"in t&&t.unionErrors.forEach(function(r){return r.errors.forEach(function(r){return e.push(r)})}),o){var c=n[a].types,f=c&&c[t.code];n[a]=r(a,o,n,s,f?[].concat(f,t.message):t.message)}e.shift()}return n},t=function(r,t,s){return void 0===s&&(s={}),function(i,a,u){try{return Promise.resolve(function(o,n){try{var a=Promise.resolve(r[\"sync\"===s.mode?\"parse\":\"parseAsync\"](i,t)).then(function(r){return u.shouldUseNativeValidation&&e({},u),{errors:{},values:s.raw?i:r}})}catch(r){return n(r)}return a&&a.then?a.then(void 0,n):a}(0,function(r){if(function(r){return null!=r.errors}(r))return{values:{},errors:o(n(r.errors,!u.shouldUseNativeValidation&&\"all\"===u.criteriaMode),u)};throw r}))}catch(r){return Promise.reject(r)}}};export{t as zodResolver};\n//# sourceMappingURL=zod.module.js.map\n","'use client';\nimport * as React from 'react';\nimport { QueriesObserver, notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { useIsRestoring } from './isRestoring.mjs';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary.mjs';\nimport { ensurePreventErrorBoundaryRetry, useClearResetErrorBoundary, getHasError } from './errorBoundaryUtils.mjs';\nimport { ensureStaleTime, shouldSuspend, fetchOptimistic, willFetch } from './suspense.mjs';\n\nfunction useQueries({\n  queries,\n  context\n}) {\n  const queryClient = useQueryClient({\n    context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedQueries = React.useMemo(() => queries.map(options => {\n    const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure the results are already in fetching state before subscribing or updating options\n\n    defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic';\n    return defaultedOptions;\n  }), [queries, queryClient, isRestoring]);\n  defaultedQueries.forEach(query => {\n    ensureStaleTime(query);\n    ensurePreventErrorBoundaryRetry(query, errorResetBoundary);\n  });\n  useClearResetErrorBoundary(errorResetBoundary);\n  const [observer] = React.useState(() => new QueriesObserver(queryClient, defaultedQueries));\n  const optimisticResult = observer.getOptimisticResult(defaultedQueries);\n  useSyncExternalStore(React.useCallback(onStoreChange => isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setQueries(defaultedQueries, {\n      listeners: false\n    });\n  }, [defaultedQueries, observer]);\n  const shouldAtLeastOneSuspend = optimisticResult.some((result, index) => shouldSuspend(defaultedQueries[index], result, isRestoring));\n  const suspensePromises = shouldAtLeastOneSuspend ? optimisticResult.flatMap((result, index) => {\n    const options = defaultedQueries[index];\n    const queryObserver = observer.getObservers()[index];\n\n    if (options && queryObserver) {\n      if (shouldSuspend(options, result, isRestoring)) {\n        return fetchOptimistic(options, queryObserver, errorResetBoundary);\n      } else if (willFetch(result, isRestoring)) {\n        void fetchOptimistic(options, queryObserver, errorResetBoundary);\n      }\n    }\n\n    return [];\n  }) : [];\n\n  if (suspensePromises.length > 0) {\n    throw Promise.all(suspensePromises);\n  }\n\n  const observerQueries = observer.getQueries();\n  const firstSingleResultWhichShouldThrow = optimisticResult.find((result, index) => {\n    var _defaultedQueries$ind, _defaultedQueries$ind2;\n\n    return getHasError({\n      result,\n      errorResetBoundary,\n      useErrorBoundary: (_defaultedQueries$ind = (_defaultedQueries$ind2 = defaultedQueries[index]) == null ? void 0 : _defaultedQueries$ind2.useErrorBoundary) != null ? _defaultedQueries$ind : false,\n      query: observerQueries[index]\n    });\n  });\n\n  if (firstSingleResultWhichShouldThrow != null && firstSingleResultWhichShouldThrow.error) {\n    throw firstSingleResultWhichShouldThrow.error;\n  }\n\n  return optimisticResult;\n}\n\nexport { useQueries };\n//# sourceMappingURL=useQueries.mjs.map\n"],"names":["EncryptPayloadNetwork","sharedDecoder","sharedEncoder","TwitterDecoder","__TwitterEncoder","decodeByNetwork","network","content","Twitter","map","x","unwrapOr","possiblePayload","match","result","payload","decoded","isSome","push","value","encodeByNetwork","decodeArrayBuffer","encodeArrayBuffer","None","Some","input","matchAll","Uint8Array","useSubscription","allPersonas","useAllPersonas","UNDEFINED","lastRecognizedProfile","useLastRecognizedIdentity","useCallback","useImperativeHandle","useRef","useState","useSingletonModal","ref","options","open","setOpen","dispatchRef","optionsRef","openRef","current","creator","dispatchOpen","dispatchClose","dispatchAbort","peek","props","onOpen","close","onClose","abort","error","onAbort","Identifier","formatPersonaFingerprint","fingerprint","size","length","slice","Math","max","MAX_PERSONA_LIMIT","MAX_PERSONA_NAME_LENGTH","formatPersonaName","nickname","isSameIdentity","identities","reduce","previousValue","T2","key","T1","i1IdentifierText","identifier","toText","i2IdentifierText","toLowerCase","isSamePersona","personas","isSameProfile","profiles","makeStyles","Image","useStyles","theme","root","width","height","position","fallbackImage","icon","top","spacing","left","AssetPreviewer","url","classes","undefined","div","className","container","style","objectFit","src","fallback","memo","Icons","CheckBoxIndicator","checked","unCheckedButtonColor","checkedButtonColor","rest","Checkbox","color","CheckboxBlank","Card","useTheme","RadioIndicator","NetworkIcon","resolveImageURL","display","cursor","card","alignItems","justifyContent","borderRadius","zIndex","backgroundColor","palette","mode","minHeight","maxWidth","fallbackLensImage","blocker","indicator","padding","right","CollectibleCard","pluginID","asset","disableNetworkIcon","disableInspect","isSelected","useRadio","showUnCheckedIndicator","cx","chainId","metadata","previewImageURL","imageURL","mediaURL","name","collection","contract","address","Indicator","maskColor","primary","secondaryLine","displayName","ShadowRootTooltip","useBoundedPopperProps","useDetectOverflow","isENSContractAddress","isENSNameWrapperContractAddress","isLens","isLensCollect","isLensFollower","isXnsContractAddress","Button","Skeleton","Typography","forwardRef","useMemo","useSharedTrans","EMPTY_LIST","_","refs","flexDirection","background","bg","overflow","willChange","withAction","transform","transitionDuration","action","marginTop","opacity","collectibleCard","info","ease","transition","fadeIn","animation","aspectRatio","boxSizing","nameRow","whiteSpace","textOverflow","lineHeight","second","identity","fontWeight","main","textAlign","bottom","actionButton","CollectibleItem","disableName","disableAction","actionLabel","verifiedBy","onActionClick","onItemClick","t","popperProps","handleClick","assetName","tokenId","nameOverflow","nameRef","identityOverflow","identityRef","tooltip","component","PopperProps","title","placement","disableInteractive","arrow","onClick","variant","verified_by","marketplace","join","Verification","fullWidth","CollectibleItemSkeleton","omitInfo","omitName","sx","Icon","ChainIcon","fontSize","Box","statusBox","text","EmptyStatus","children","iconSize","p","EmptySimple","React","useEffect","I18nextProvider","initReactI18next","i18NextInstance","init","I18NextProviderHMR","process","env","NODE_ENV","I18NextProvider_dev","i18n","defaultNS","ns","setNS","f","globalThis","addEventListener","removeEventListener","random","rounded","optimistic","image","failImage","center","failed","MASK_DARK_FALLBACK","URL","href","MASK_LIGHT_FALLBACK","disableSpinner","extraClasses","containerProps","setFailed","img","onError","loading","decoding","toString","LoadingBase","LoadingStatus","omitText","useNetwork","ImageIcon","expectedNetwork","fallbackNetwork","iconUrl","isCustomized","MaskMessages","NextIDPlatform","NextIDProof","queryPersonaAvatar","useQuery","useConnectedPersonas","personasInDB","queryKey","queryFn","allPersonaPublicKeys","publicKeyAsHex","allPersonaIdentifiers","avatars","allNextIDBindings","queryAllExistedBindingsByPlatform","NextID","persona","proof","find","proofs","filter","is_valid","avatar","get","events","ownProofChanged","on","refetch","currentPersona","useCurrentPersona","useAsyncFn","fromHex","NextIDAction","SignType","toBase64","languageSettings","currentNextIDPlatform","getPostIdFromNewPostToast","postMessage","signWithPersona","useNextIDVerify","verifyPostCollectTimer","username","verifiedCallback","createPersonaPayload","Create","Error","signature","Message","signPayload","postContent","replace","recover","reason","Promise","resolve","reject","setInterval","postId","clearInterval","bindProof","uuid","createdAt","proofLocation","setTimeout","isBound","queryIsBound","sendToAll","Avatar","Stack","resolveNextIDIdentityToProfile","CopyButton","border","PersonaItemUI","data","currentPersonaIdentifier","currentProfileIdentify","isVerified","some","platform","direction","gap","flexGrow","MenuPersonasActive","NextIDMini","rawPublicKey","CheckCircle","RadioNo","unchecked","delay","attachProfile","openDashboard","setCurrentPersonaIdentifier","CrossIsolationMessages","DashboardRoutes","Telemetry","EventID","EventType","useLayoutEffect","ReloadStatus","ApplicationBoardModal","LeavePageConfirmModal","items","maxHeight","scrollbarWidth","reloadStatus","button","PersonaSelectPanel","finishTarget","enableVerify","selectedPersona","setSelectedPersona","handleVerifyNextID","isLoading","connect","profileIdentifier","personaIdentifier","connectionConfirmState","target","SignUpPersona","applications_create_persona_hint","applications_create_persona_title","actionHint","applications_create_persona_action","isConnected","linkedProfiles","verifiedAtSite","captureEvent","Access","EntryProfileConnectTwitter","EntryMaskComposeConnectTwitter","userId","EntryProfileConnectVerify","EntryMaskComposeVerifyTwitter","personaBindFinished","applicationDialogEvent","sendToLocal","actionProps","buttonText","applications_persona_verify_connect","hint","applications_persona_verify_connect_hint","applications_persona_connect","applications_persona_connect_hint","applications_persona_verify","applications_persona_verify_hint","ActionContent","onRetry","mt","Identity","qr","Trans","blue","CACHE_SCOPE","paddingTop","extDecoration","QRCode","canvasProps","setError","cache","toCanvas","err","remove","dataURL","toDataURL","set","i18nKey","components","again","span","canvas","scope","sessionStorage","getItem","setItem","removeItem","minWidth","message","load_failed","load_retry","BaseSharedUIProvider","SharedContextProvider","ActionButton","MaskTextField","useAccount","useAddressType","useChainContext","useWeb3Connection","useWeb3Hub","useWeb3Others","isSameAddress","AddressType","formatEthereumAddress","useQueries","compact","uniq","Controller","useForm","form","msOverflowStyle","paddingBottom","grid","gridGap","paddingRight","marginBottom","notMine","danger","toolbar","boxShadow","backdropFilter","isValidTokenIds","rawIds","containsInvalidId","split","v","trimmed","trim","id","Number","parseInt","isNaN","AddCollectibles","defaultChainId","account","defaultAccount","onAdd","walletAccount","Others","control","watch","handleSubmit","resetField","formState","errors","isValidating","defaultValues","tokenIds","watchedTokenIds","hub","connection","addressType","loadingAddressType","isValidAddress","validationMsgForAddress","Contract","collectible_contract_invalid","isLoadingContract","isError","getNonFungibleTokenContract","isValid","Boolean","Web3","assetsQueries","queries","enabled","getNonFungibleAsset","token","getNonFungibleToken","owner","ownerId","loadingAssets","every","allFailed","failureReason","noResults","someNotMine","handleFormSubmit","event","selectedTokenIdsMap","setSelectedTokenIdsMap","selectedTokenIds","toggleSelect","idsMap","ids","newIds","includes","handleAdd","disabled","onSubmit","render","field","autoFocus","placeholder","add_collectibles_address_placeholder","InputProps","spellCheck","endAdornment","Close","add_collectibles_token_id_placeholder","collection_not_belong_to_you","no_results","i","isMine","send","startIcon","add_collectibles","DialogContent","InjectedDialog","gridTemplateColumns","AddCollectiblesDialog","titleBarIconStyle","NetworkPluginID","AddCollectiblesModal","setPluginID","PLUGIN_EVM","setChainId","setAccount","dispatch","results","CarouselProvider","Slider","Slide","recommendFeatureAppListWrapper","scrollbarColor","overflowX","margin","carousel","overscrollBehavior","outline","isHoveringCarousel","ApplicationRecommendArea","recommendFeatureAppList","RenderEntryComponent","isCarouselReady","setIsHoveringCarousel","isPlaying","setIsPlaying","link","rel","naturalSlideWidth","naturalSlideHeight","totalSlides","visibleSlides","infinite","interval","onScroll","e","scrollLeft","application","index","onMouseEnter","onMouseLeave","entry","ApplicationEntryID","createContext","useContext","useTimeout","useActivatedPluginsSiteAdaptor","useCurrentPersonaConnectStatus","SelectProviderModal","PersonaContext","Boundary","getMaskColor","EnhanceableSite","useValueRef","useNetworkContext","useUnlistedEntries","smallQuery","breakpoints","values","sm","applicationWrapper","navigator","userAgent","overflowY","gridTemplateRows","shouldScroll","backgroundClip","applicationWrapperWithCarousel","placeholderWrapper","textLight","ApplicationBoardContent","queryOwnedPersonaInformation","currentSite","lastRecognized","applicationCurrentStatus","personaPerSiteConnectStatusLoading","Provider","initialState","ApplicationEntryStatusProvider","ApplicationBoardPluginsList","plugins","currentWeb3Network","applicationList","flatMap","ID","ApplicationEntries","enableRequirement","currentWeb3NetworkSupportedChainIds","web3","isWalletConnectedRequired","currentSiteIsSupportedNetwork","supports","sites","isEnabledOnTheCurrentSite","entryWalletConnectedNotRequired","sort","a","b","appBoardSortingDefaultPriority","recommendFeature","unlistedEntries","listedAppList","section","application_display_tab_plug_app_unlisted_placeholder","Entry","ApplicationEntryStatus","ApplicationEntryStatusContext","nextIdRequired","clickHandler","walletConnectedCallback","requiredSupportPluginID","connected","openAndWaitForClose","isPersonaCreated","shouldVerifyNextId","isPersonaConnected","personaAction","tooltipHint","application_tooltip_hint_connect_wallet","application_tooltip_hint_persona_accessing_dapp","application_tooltip_hint_connect_persona","application_tooltip_hint_verify","isNextIDVerify","isSiteConnectedToCurrentPersona","shouldDisplayTooltipHint","currentPersonaPublicKey","currentSiteConnectedPersonaPublicKey","currentIdentifier","personaConnectStatus","personaStatusLoading","Context","hasPersona","verified","IconButton","Tab","TabContext","TabPanel","MaskTabList","useTabs","ApplicationSettingPluginSwitch","ApplicationSettingPluginList","openSettings","ApplicationSettingTabs","pluginList","pluginSwitch","ApplicationBoard","setPluginMinimalModeEnabled","quickMode","tab","focusPluginID","setOpenSettings","currentTab","onChange","tabs","setTab","reset","closeDialog","compositionDialogEvent","isOnBack","titleTabs","aria-label","label","application_settings_tab_app_list","application_settings_tab_plug_in_switch","independent","application_settings","applications","titleTail","Gear","PluginTransFieldRender","PersistentStorages","List","ListItemButton","ApplicationEntryUnListed","storage","subscription","toggleEntryListing","entryId","listing","state","initialized","initializedPromise","setValue","iconFilterColor","list","listItem","iconWrapper","unlisted","entries","listedEntries","application_settings_tab_plug_app_list_listed","AppList","appList","isListing","application_settings_tab_plug_app_list_unlisted","AppListItem","application_settings_tab_plug_app_unlisted_placeholder","application_settings_tab_plug_app_listed_placeholder","disableTouchRipple","PluginID","openWindow","MaskColorVar","ListItem","ListItemAvatar","Switch","paper","listContent","headerWrapper","settings","alignSelf","marginLeft","textSecondary","default","desc","secondary","DSearch_KEY","pluginsInMinimalMode","availablePlugins","category","hiddenInList","marketListSortingPriority","targetPluginRef","noAvailablePlugins","scrollIntoView","onSwitch","GoPlusSecurity","checkSecurityConfirmationDialogEvent","DSearchSettings","Handle","setRef","element","ele","flex","tutorialLink","Tutorial","description","features","DecentralizedSearch","decentralized_search_name","decentralized_search_description","decentralized_search_feature_token_name","decentralized_search_feature_token_description","decentralized_search_feature_nft_name","decentralized_search_feature_nft_description","decentralized_search_feature_wallet_name","decentralized_search_feature_wallet_description","ApplicationBoardSettingsDialog","setOpenDashboard","setQueryOwnedPersonaInformation","setCurrentSite","setAllPersonas","setLastRecognized","setApplicationCurrentStatus","setPersonaPerSiteConnectStatusLoading","setSetPluginMinimalModeEnabled","setQuickMode","setFocusPluginID","ApplicationBoardSettingsModal","wordBreak","buttonGroup","Dialog","confirmLabel","cancelLabel","confirmVariant","onConfirm","ConfirmDialogComponent","ConfirmDialog","setProps","DialogActions","dialogClasses","dialog","Confirm","maxWidthOfContent","dialog_confirm","ConfirmModal","props_","setProps_","useUpdateEffect","z","zod","BigNumber","isEmpty","noop","zodResolver","formatGweiToWei","formatWeiToEther","formatWeiToGwei","useTokenConstants","formatCurrency","GasOptionType","isGreaterThanOrEqualTo","isLessThanOrEqualTo","isPositive","useFungibleTokenPrice","useGasOptions","optionsTitle","gasUSD","selected","contrastText","unit","price","normalText","GasSetting1559","gasLimit","minGasLimit","gasOptionType","NORMAL","NATIVE_TOKEN_ADDRESS","selectedGasOption","setGasOptionType","nativeTokenPrice","gasOptions","getGasOptionsLoading","popups_wallet_gas_fee_settings_low","gasOption","SLOW","popups_wallet_gas_fee_settings_medium","popups_wallet_gas_fee_settings_high","FAST","currentGasOption","opt","schema","object","string","min","wallet_transfer_error_gas_limit_absence","refine","popups_wallet_gas_fee_settings_min_gas_limit_tips","limit","toFixed","maxPriorityFeePerGas","wallet_transfer_error_max_priority_fee_absence","wallet_transfer_error_max_priority_gas_fee_positive","maxFeePerGas","wallet_transfer_error_max_fee_absence","wallet_transfer_error_max_priority_gas_fee_imbalance","path","clearErrors","resolver","context","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","handleConfirm","maxFee","priorityFee","inputGasLimit","usd","times","onlyRemainTwoOrZeroDecimal","shouldUnescape","popups_wallet_gas_fee_settings_gas_limit","popups_wallet_gas_fee_settings_max_priority_fee","wallet_transfer_gwei","popups_wallet_gas_fee_settings_max_fee","confirm","toWei","ChainId","formatGweiToEther","pow10","useNativeTokenPrice","minGasPriceOfChain","BSC","multipliedBy","Conflux","Matic","Astar","Prior1559GasSetting","gasPrice","gte","wallet_transfer_error_gas_price_absence","minGasPrice","toPrecision","popups_wallet_gas_price","ChainResolver","GasSettingSupported","isFeatureSupported","GasSettingModal","GasSetting","setGasLimit","popups_wallet_gas_fee_settings","onGasLimitChange","onGasOptionChange","setMinGasLimit","setGasPrice","setMaxFee","setPriorityFee","first","positionStyle","header","actions","positionStyleMap","LeavePageConfirm","isRoute","Object","disableTitleBorder","dialogTitle","setInfo","PersonaSelectPanelDialog","applications_persona_title","PersonaSelectPanelModal","setFinishTarget","setPosition","setEnableVerify","Link","logo","flexShrink","marginRight","contractName","linkIcon","contractSymbol","balance","ContractItem","onSelect","iconURL","MaskAvatar","symbol","explorerResolver","addressLink","stopPropagation","LinkOut","EMPTY_ENTRY","Sniffings","useNonFungibleCollections","useWeb3State","FuseNonFungibleCollection","SchemaType","isLensProfileAddress","contractList","contractItem","SelectNonFungibleContractDialog","schemaType","keyword","setKeyword","handleClear","collections","Token","customizedCollectionMap","nonFungibleCollectionMap","customizedCollections","addresses","slug","source","filteredCollections","allCollections","ERC721","fuse","create","searchResults","search","item","handleAddCollectibles","addNonFungibleTokens","handleSelectCollection","is_dashboard_page","select_collectibles","px","evt","collectible_search_placeholder","inputProps","paddingLeft","startAdornment","Search","ml","SelectNonFungibleContractModal","setSchemaType","setTitle","setOnSubmit","urlcat","encryptPayloadNetworkToDomain","FormControlLabel","Radio","RadioGroup","SOCIAL_MEDIA_NAME","textBorder","borderSecondary","SharedUrl","Unknown","Instagram","Minds","Facebook","quote","u","ShareSelectNetwork","setNetwork","encodedText","share_to_social_networks","defaultValue","currentTarget","converter","site","RadioButtonUnChecked","line","checkedIcon","RadioButtonChecked","cancel","share","ShareSelectNetworkModal","setMessage","TokenIcon","useNonFungibleAsset","TokenType","confirmDialog","backgroundImage","justifyItems","congratulation","success","nftContainer","nftName","nftMessage","messageText","nftMessageText","tokenIcon","TokenTransactionConfirmModal","confirmText","messageTextForNFT","messageTextForFT","amount","tokenType","nonFungibleTokenAddress","nonFungibleTokenId","isToken","Fungible","nonFungibleToken","BackdropProps","logoURL","congratulations","TransactionConfirm","shareText","ok","TransactionConfirmModal","setShareText","setShare","setAmount","setToken","setTokenType","setMessageTextForNFT","setMessageTextForFT","setNonFungibleTokenId","setNonFungibleTokenAddress","alpha","collapseClasses","SnackbarProvider","SnackbarContent","useSnackbar","wrapper","white","warning","warn","PopupSnackbarProvider","maxSnack","disableWindowBlurListener","autoHideDuration","anchorOrigin","vertical","horizontal","containerRoot","variantSuccess","variantError","variantInfo","variantWarning","PopupSnackbarContent","usePopupCustomSnackbar","enqueueSnackbar","closeSnackbar","showSnackbar","processing","useAsync","useCustomSnackbar","createLookupTableResolver","TransactionStatusType","TransactionSnackbar","showPopupSnackbar","closePopupSnackbar","snackbarKeyRef","errorInfo","setErrorInfo","progress","setProgress","TransactionFormatter","TransactionWatcher","off","emitter","request","txHash","status","transaction","resolveSnackbarConfig","NOT_DEPEND","plugin_wallet_snackbar_wait_for_confirming","SUCCEED","plugin_wallet_snackbar_confirmed","FAILED","plugin_wallet_snackbar_failed","showSingletonSnackbar","is_popup_page","computed","formatTransaction","snackbar","successfulTitle","transactionLink","successfulDescription","params","failedTitle","isRecognized","failedDescription","snackbarConfig","JSON","stringify","TransactionSnackbarModal","Grid","tip","QRCodeModal","uri","wallet_connect_qr_code_dialog_content","QRCodeDialog","wallet_connect_qr_code_dialog_title","WalletConnectQRCodeModal","setURI","WalletStatusBox","inVisible","visibility","WalletStatusDialog","isHidden","setHidden","plugin_wallet_dialog_title","showPendingTransaction","WalletStatusModal","RootWeb3ContextProvider","WalletRiskWarningModal","ConnectWalletModal","SelectFungibleTokenModal","SelectGasSettingsModal","modals","Modals","register","createWallet","SwapPageModals","Fragment","FormattedAddress","formatter","useAsyncRetry","DEFAULT_PERSONA_CONNECT_STATUS","direct","openPersonListDialog","retry","currentProfile","nextIDInfo","queryExistedBindingByPersona","verifiedProfile","cleanPersonaChangedListener","ownPersonaChanged","cleanProofsChangedListener","compareDesc","isBefore","unionWith","uniqBy","createContainer","ProfileIdentifier","NEXT_ID_PLATFORM_SOCIAL_MEDIA_MAP","usePersonaProofs","Web3Storage","PERSONA_AVATAR_DB_NAMESPACE","usePersonaInformation","usePersonaContext","selectedAccount","setSelectedAccount","queryPersonaAvatarLastUpdateTime","lastUpdateTime","createKVStorage","remote","updateAt","imageUrl","fetchProofsLoading","accounts","localProfiles","profile","remoteProfiles","of","expect","localProfile","aTimeZone","createAt","getTime","bTimeZone","last_checked_at","walletProofs","Ethereum","publicKey","clearPersonaQueryCache","binding","cloneElement","BoundaryContext","boundaryRef","contextValue","useBoundary","omit","formHelperTextClasses","TextField","InputBase","inputBaseClasses","required","redMain","MozAppearance","WebkitAppearance","third","focused","borderColor","inputDisabled","inputFocused","wrapperProps","helperText","mb","disableUnderline","Tooltip","createShadowRootForwardedPopperComponent","tooltipPopperProps","disablePortal","modifiers","rootBoundary","boundary","setOverflow","node","offsetWidth","scrollWidth","useTransition","defaultTab","possibleTabs","startTransition","tabRecords","forEach","isCurrentTabAvailable","useBalance","BalanceNotifier","getBalance","ev","Hub","getFungibleTokenPrice","isValidChainId","getGasOptions","useFungibleToken","useNativeTokenAddress","useNativeToken","nativeTokenAddress","nativeCurrency","getNativeTokenAddress","PLUGIN_SOLANA","asyncIteratorToArray","pageableToIterator","getNonFungibleCollectionsByOwner","networkPluginId","useReverseAddress","domainOnly","NameService","reverse","useWallets","useWallet","providerType","wallets"],"sourceRoot":"","x_google_ignoreList":[83,84,85,86,87,88,89]}