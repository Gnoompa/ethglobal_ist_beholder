{"version":3,"file":"bundled/chunk.8343.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACS;AACiB;AACI;AAEvB;AAChB;AACwB;AACnB;AAC2C;AAClC;AACI;AACmB;AAErE,MAAMmB,iCAAmBnB,2CAAIA,CAAC,SAASmB;IACnC,MAAMC,IAAIjB,gFAAkBA;IAC5B,MAAMkB,QAAQb,kEAAQA;IACtB,MAAMc,WAAWP,uEAAWA;IAC5B,MAAM,EAAEQ,cAAc,EAAE,GAAGd,oEAAcA,CAACe,YAAY;IAEtD,MAAM,EAAEC,YAAY,EAAE,GAAGP,+EAAsBA;IAC/C,MAAM,GAAGQ,gBAAgB,GAAGd,8DAAkBA;IAC9C,MAAM,EAAEe,KAAK,EAAE,GAAGhB,8DAAQA,CAAC;QACvB,IAAI,CAACY,gBAAgB;QACrB,OAAOb,4DAAQA,CAACkB,MAAM,CAACC,uBAAuB,CAACN,eAAeO,UAAU;IAC5E,GAAG;QAACP;KAAe;IAEnB,MAAMQ,aAAa9B,kDAAWA,CAAC;QAC3BqB,SAASN,wEAAWA,CAACgB,QAAQ,EAAE;YAAEC,SAAS;QAAK;IACnD,GAAG,EAAE;IAEL,MAAMC,aAAajC,kDAAWA,CAAC;QAC3B,IAAI,CAAC0B,OAAO;QACZD,gBAAgBC;QAEhBF,aAAaL,EAAEe,MAAM;IACzB,GAAG;QAACR;KAAM;IAEVzB,mEAAQA,CAACqB,gBAAgBa,YAAY;IAErC,qBACI,wDAAChC,+DAAGA;;0BACA,wDAACA,+DAAGA;gBAACiC,GAAG;gBAAGC,SAAQ;gBAAOC,eAAc;gBAASC,QAAQ;;kCACrD,uDAACjC,+DAAUA;wBAACkC,YAAY;kCAAMrB,EAAEsB,gCAAgC;;oBAC/Df,sBACG,uDAACpB,+DAAUA;wBACP8B,GAAG;wBACHM,OAAO;4BAAEC,YAAYvB,MAAMwB,OAAO,CAACC,SAAS,CAACC,KAAK;4BAAEC,UAAU;4BAAcC,cAAc;wBAAE;kCAC3FtB;yBAEL;kCACJ,uDAACpB,+DAAUA;kCACP,qEAACM,0DAAKA;4BACFqC,SAAQ;4BACRC,YAAY;gCACRC,iBACI,uDAAC9C,+DAAIA;oCACD+C,SAAS;wCACL/B,SAASN,wEAAWA,CAACsC,QAAQ;oCACjC;;4BAGZ;;;;;0BAIZ,wDAACxC,6FAAgBA;;kCACb,uDAACT,+DAAMA;wBAACkD,SAAQ;wBAAWC,SAAS;wBAACH,SAAStB;kCACzCX,EAAEqC,IAAI;;kCAEX,uDAACxC,kEAAYA;wBAACoC,SAASnB;wBAAYsB,SAAS;kCACvCpC,EAAEsC,IAAI;;;;;;AAK3B;AAEA,iEAAevC,gBAAgBA,EAAA","sources":["webpack://mask-network/./packages/mask/popups/pages/Personas/ExportPrivateKey/index.tsx"],"sourcesContent":["import { memo, useCallback } from 'react'\nimport { useTitle } from '../../../hooks/index.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { Box, Button, Link, Typography, useTheme } from '@mui/material'\n\nimport { PersonaContext } from '@masknet/shared'\nimport Services from '#services'\nimport { useAsync, useCopyToClipboard } from 'react-use'\nimport { Trans } from 'react-i18next'\nimport { BottomController } from '../../../components/BottomController/index.js'\nimport { useNavigate } from 'react-router-dom'\nimport { PopupRoutes } from '@masknet/shared-base'\nimport { ActionButton, usePopupCustomSnackbar } from '@masknet/theme'\n\nconst ExportPrivateKey = memo(function ExportPrivateKey() {\n    const t = useMaskSharedTrans()\n    const theme = useTheme()\n    const navigate = useNavigate()\n    const { currentPersona } = PersonaContext.useContainer()\n\n    const { showSnackbar } = usePopupCustomSnackbar()\n    const [, copyToClipboard] = useCopyToClipboard()\n    const { value } = useAsync(async () => {\n        if (!currentPersona) return\n        return Services.Backup.backupPersonaPrivateKey(currentPersona.identifier)\n    }, [currentPersona])\n\n    const handleBack = useCallback(() => {\n        navigate(PopupRoutes.Personas, { replace: true })\n    }, [])\n\n    const handleCopy = useCallback(() => {\n        if (!value) return\n        copyToClipboard(value)\n\n        showSnackbar(t.copied())\n    }, [value])\n\n    useTitle(currentPersona?.nickname ?? '')\n\n    return (\n        <Box>\n            <Box p={2} display=\"flex\" flexDirection=\"column\" rowGap={2}>\n                <Typography fontWeight={700}>{t.popups_wallet_backup_private_key()}</Typography>\n                {value ? (\n                    <Typography\n                        p={1.5}\n                        style={{ background: theme.palette.maskColor.input, wordWrap: 'break-word', borderRadius: 8 }}>\n                        {value}\n                    </Typography>\n                ) : null}\n                <Typography>\n                    <Trans\n                        i18nKey=\"popups_export_private_key_tips\"\n                        components={{\n                            a: (\n                                <Link\n                                    onClick={() => {\n                                        navigate(PopupRoutes.Settings)\n                                    }}\n                                />\n                            ),\n                        }}\n                    />\n                </Typography>\n            </Box>\n            <BottomController>\n                <Button variant=\"outlined\" fullWidth onClick={handleBack}>\n                    {t.back()}\n                </Button>\n                <ActionButton onClick={handleCopy} fullWidth>\n                    {t.copy()}\n                </ActionButton>\n            </BottomController>\n        </Box>\n    )\n})\n\nexport default ExportPrivateKey\n"],"names":["memo","useCallback","useTitle","useMaskSharedTrans","Box","Button","Link","Typography","useTheme","PersonaContext","Services","useAsync","useCopyToClipboard","Trans","BottomController","useNavigate","PopupRoutes","ActionButton","usePopupCustomSnackbar","ExportPrivateKey","t","theme","navigate","currentPersona","useContainer","showSnackbar","copyToClipboard","value","Backup","backupPersonaPrivateKey","identifier","handleBack","Personas","replace","handleCopy","copied","nickname","p","display","flexDirection","rowGap","fontWeight","popups_wallet_backup_private_key","style","background","palette","maskColor","input","wordWrap","borderRadius","i18nKey","components","a","onClick","Settings","variant","fullWidth","back","copy"],"sourceRoot":"","x_google_ignoreList":[]}