{"version":3,"file":"bundled/324.js","mappings":"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ACzD;AACA;AACA;AACA;AACA,iBAAiB,+EAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,QAAQ,6EAAa;AACrB;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA,sBAAsB,4EAAY,CAAC,4EAAS,CAAC,sEAAM;AACnD;;;;;;;;;;;;;;;;;;;;;;;;;;ACpIa;AACkC;AACV;AACrC,mBAAmB,mEAAM,CAAC,sDAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxwBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACO;AACP,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzvZa;AACb,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC+C;AACV;AACrC,mBAAmB,mEAAM,CAAC,sDAAO;AAC1B;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACO;AACP,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yDAAyD,oBAAoB;AAC7E,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,gFAAgF,eAAe,6CAA6C,2BAA2B,mCAAmC,OAAO,qBAAqB,SAAS,gCAAgC,iCAAiC,8BAA8B,sBAAsB,kBAAkB,aAAa,eAAe,YAAY,kBAAkB;AAChb,mCAAmC,4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","sources":["webpack://mask-network/./packages/shared-base/src/KVStorage/index.ts","webpack://mask-network/./packages/shared-base/src/NextID/index.ts","webpack://mask-network/./packages/shared-base/src/Site/index.ts","webpack://mask-network/./packages/web3-providers/src/CoinMarketCap/constants.ts","webpack://mask-network/./packages/web3-providers/src/CoinMarketCap/helpers.ts","webpack://mask-network/./packages/web3-providers/src/CoinMarketCap/apis/TrendingAPI.ts","webpack://mask-network/./packages/web3-providers/src/CryptoScamDB/index.ts","webpack://mask-network/./packages/web3-providers/src/FiatCurrencyRate/index.ts","webpack://mask-network/./packages/web3-providers/src/GoPlusLabs/index.ts","webpack://mask-network/./packages/web3-providers/src/GoPlusLabs/rules.ts","webpack://mask-network/./packages/web3-providers/src/GoPlusLabs/types.ts","webpack://mask-network/./packages/web3-providers/src/Lido/constants.ts","webpack://mask-network/./packages/web3-providers/src/Lido/index.ts","webpack://mask-network/./packages/web3-providers/src/NFTScan/apis/TrendingAPI_EVM.ts","webpack://mask-network/./packages/web3-providers/src/NFTScan/apis/TrendingAPI_Solana.ts","webpack://mask-network/./packages/web3-providers/src/NFTScan/helpers/utils.ts","webpack://mask-network/./packages/web3-providers/src/NFTSpam/index.ts","webpack://mask-network/./packages/web3-providers/src/Snapshot/apis/provider.ts","webpack://mask-network/./packages/web3-providers/src/TheGraph/apis/RedPacketAPI.ts","webpack://mask-network/./packages/web3-providers/src/TheGraph/constants.ts","webpack://mask-network/./packages/web3-providers/src/Trending/constants.ts","webpack://mask-network/./packages/web3-providers/src/Trending/helpers.ts","webpack://mask-network/./packages/web3-providers/src/Web3Bio/constants.ts","webpack://mask-network/./packages/web3-providers/src/Web3Bio/index.ts","webpack://mask-network/./packages/web3-shared/evm/src/constants/tokens.ts","webpack://mask-network/./packages/web3-shared/evm/src/types/index.ts","webpack://mask-network/./node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/index.js","webpack://mask-network/./node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js","webpack://mask-network/./node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js","webpack://mask-network/./node_modules/.pnpm/react@0.0.0-experimental-0a360642d-20230711/node_modules/react/cjs/react.production.min.js","webpack://mask-network/./node_modules/.pnpm/@masknet+kit@0.1.2/node_modules/@masknet/kit/esm/typescript/control-flow.js","webpack://mask-network/./node_modules/.pnpm/urlcat@3.1.0_patch_hash=5r5xyq4zgcnqugwsrx4lxq2i4e/node_modules/urlcat/dist/index.mjs"],"sourcesContent":["import { MaskMessages } from '../Messages/index.js'\nimport { PluginID } from '../types/PluginID.js'\nimport { createProxyKVStorageBackend, type KVStorageBackend, createKVStorageHost } from './kv-storage/index.js'\n\nconst indexedDBProxy = createProxyKVStorageBackend()\nconst inMemoryBackend = createProxyKVStorageBackend()\n\nexport function setupMaskKVStorageBackend(indexedDB: KVStorageBackend, inMemory: KVStorageBackend) {\n    indexedDBProxy.replaceBackend(indexedDB)\n    inMemoryBackend.replaceBackend(inMemory)\n}\nconst createPersistentKVStorage = createKVStorageHost(indexedDBProxy, MaskMessages.events.__kv_backend_persistent__)\nconst createInMemoryKVStorage = createKVStorageHost(inMemoryBackend, MaskMessages.events.__kv_backend_in_memory__)\n\nexport const InMemoryStorages = {\n    Plugin: createInMemoryKVStorage('plugin', {}),\n    Web3: createInMemoryKVStorage('web3', {}),\n    FacebookNFTEventOnMobile: createInMemoryKVStorage('FacebookNFTEventMobile', {\n        userId: '',\n        avatarId: '',\n        address: '',\n        tokenId: '',\n        schema: 1,\n        chainId: 1,\n        pluginID: '',\n    }),\n}\n\n/**\n * @deprecated Will be removed in 2.23\n */\nconst ApplicationEntryUnlistedListKey = 'application_entry_unlisted_list'\nconst APPLICATION_ENTRY_UNLISTED = 'APPLICATION_ENTRY_UNLISTED'\n\nexport enum BackupAccountType {\n    Email = 'email',\n    Phone = 'phone',\n}\nexport interface BackupConfig {\n    backupPassword: string | null\n    email: string | null\n    phone: string | null\n    localBackupAt: string | null\n    cloudBackupAt: string | null\n    cloudBackupMethod: BackupAccountType | null\n}\n\nexport const PersistentStorages = {\n    Plugin: createPersistentKVStorage('plugin', {}),\n    Web3: createPersistentKVStorage('web3', {}),\n    Settings: createPersistentKVStorage<{\n        debugging: boolean\n        backupConfig: BackupConfig\n    }>('settings', {\n        debugging: false,\n        backupConfig: {\n            backupPassword: '',\n            email: '',\n            phone: '',\n            localBackupAt: '',\n            cloudBackupAt: '',\n            cloudBackupMethod: null,\n        },\n    }),\n    /**\n     * @deprecated Will be removed in 2.23\n     */\n    ApplicationEntryUnListedList: createPersistentKVStorage<{\n        current: {\n            [key: string]: boolean\n        }\n    }>(ApplicationEntryUnlistedListKey, {\n        current: {\n            [PluginID.RedPacket]: false,\n            [PluginID.FileService]: false,\n            [PluginID.CrossChainBridge]: false,\n            [PluginID.MaskBox]: false,\n            [PluginID.Savings]: false,\n            [PluginID.Avatar]: false,\n            [PluginID.Trader]: false,\n            [PluginID.Tips]: false,\n            [PluginID.Transak]: false,\n            [PluginID.Pets]: false,\n            [PluginID.GoPlusSecurity]: false,\n        },\n    }),\n    ApplicationEntryUnListed: createPersistentKVStorage<{ data: string[] }>(APPLICATION_ENTRY_UNLISTED, { data: [] }),\n}\n\n// TODO remove in 2.23\nasync function migrateUnlistedEntries() {\n    await Promise.allSettled([\n        PersistentStorages.ApplicationEntryUnListedList.storage.current.initializedPromise,\n        PersistentStorages.ApplicationEntryUnListed.storage.data.initializedPromise,\n    ])\n    const legacyData = PersistentStorages.ApplicationEntryUnListedList.storage.current.value\n    const newData = PersistentStorages.ApplicationEntryUnListed.storage.data.value\n    const pairs = Array.from(Object.entries(legacyData))\n    const unlisted = pairs.filter((x) => x[1])\n    if (unlisted.length && !newData.length) {\n        const legacyList = unlisted.map((x) => x[0])\n        await PersistentStorages.ApplicationEntryUnListed.storage.data.setValue(legacyList)\n        await PersistentStorages.ApplicationEntryUnListedList.storage.current.setValue({})\n    }\n}\nmigrateUnlistedEntries()\n","import { ProfileIdentifier } from '@masknet/base'\nimport { EnhanceableSite } from '../Site/types.js'\nimport { NextIDPlatform, type BindingProof } from './types.js'\n\nconst NextIDPlatformToNetwork = {\n    [NextIDPlatform.Ethereum]: undefined,\n    [NextIDPlatform.GitHub]: undefined,\n    [NextIDPlatform.Keybase]: undefined,\n    [NextIDPlatform.Twitter]: EnhanceableSite.Twitter,\n} as Record<NextIDPlatform, EnhanceableSite | undefined>\nexport function resolveNextIDPlatformToNetwork(key: NextIDPlatform): EnhanceableSite | undefined {\n    return NextIDPlatformToNetwork[key]\n}\n\nconst NetworkToNextIDPlatform = {\n    [EnhanceableSite.Facebook]: undefined,\n    [EnhanceableSite.Instagram]: undefined,\n    [EnhanceableSite.Minds]: undefined,\n    [EnhanceableSite.OpenSea]: undefined,\n    [EnhanceableSite.Localhost]: undefined,\n    [EnhanceableSite.Mirror]: undefined,\n    [EnhanceableSite.App]: undefined,\n    [EnhanceableSite.Twitter]: NextIDPlatform.Twitter,\n}\nexport function resolveNetworkToNextIDPlatform(key: EnhanceableSite): NextIDPlatform | undefined {\n    return NetworkToNextIDPlatform[key]\n}\n\nexport function resolveNextIDIdentityToProfile(nextIDIdentity: string, platform: NextIDPlatform) {\n    const network = resolveNextIDPlatformToNetwork(platform)\n    if (!network) return\n\n    return ProfileIdentifier.of(network, nextIDIdentity).expect(\n        `${network} and ${nextIDIdentity} should compose a valid ProfileIdentifier`,\n    )\n}\n\nexport function createBindingProofFromProfileQuery(\n    platform: NextIDPlatform,\n    identity: string,\n    name: string,\n    link?: string,\n    source?: NextIDPlatform,\n    relatedList?: BindingProof[],\n): BindingProof {\n    return {\n        platform,\n        source,\n        identity,\n        name,\n        created_at: '',\n        last_checked_at: '',\n        is_valid: true,\n        relatedList,\n        link,\n    }\n}\n","import { getEnumAsArray } from '@masknet/kit'\nimport { Sniffings } from '../Sniffings/index.js'\nimport { ExtensionSite, EnhanceableSite } from './types.js'\nimport { parseURL } from '../helpers/parseURL.js'\n\nconst matchEnhanceableSiteHost: Record<EnhanceableSite, RegExp> = {\n    [EnhanceableSite.Localhost]: /localhost/i,\n    [EnhanceableSite.App]:\n        process.env.NODE_ENV === 'production'\n            ? /^(app\\.mask\\.io|app-(beta|stage|test)\\.mask\\.io|[\\w-]*\\.?maskbook\\.pages\\.dev)$/i\n            : /localhost/,\n    [EnhanceableSite.Facebook]: /facebook\\.com/i,\n    [EnhanceableSite.Twitter]: /twitter\\.com/i,\n    [EnhanceableSite.Minds]: /minds\\.com/i,\n    [EnhanceableSite.Instagram]: /instagram\\.com/i,\n    [EnhanceableSite.OpenSea]: /opensea\\.io/i,\n    [EnhanceableSite.Mirror]: /mirror\\.xyz/i,\n}\n\nconst matchExtensionSitePathname: Record<ExtensionSite, RegExp> = {\n    [ExtensionSite.Dashboard]: /dashboard\\.html/i,\n    [ExtensionSite.Popup]: /popups\\.html/i,\n}\n\nexport const EnhanceableSiteList = getEnumAsArray(EnhanceableSite).map((x) => x.value)\nexport const ExtensionSiteList = getEnumAsArray(ExtensionSite).map((x) => x.value)\n\nexport function getEnhanceableSiteType(url?: string) {\n    const target = parseURL(url)?.host ?? location.host\n    for (const [type, regexp] of Object.entries(matchEnhanceableSiteHost)) {\n        if (target.match(regexp)) return type as EnhanceableSite\n        continue\n    }\n    return\n}\n\nexport function getExtensionSiteType(url?: string) {\n    const target = parseURL(url)?.pathname ?? location.pathname\n    for (const [type, regexp] of Object.entries(matchExtensionSitePathname)) {\n        if (target.match(regexp)) return type as ExtensionSite\n        continue\n    }\n    return\n}\n\nexport function getSiteType(url?: string) {\n    return getEnhanceableSiteType(url) ?? getExtensionSiteType(url)\n}\n\nexport function getAgentType() {\n    if (Sniffings.is_edge) return 'edge'\n    if (Sniffings.is_opera) return 'opera'\n    if (Sniffings.is_firefox) return 'firefox'\n    if (Sniffings.is_chromium) return 'chromium'\n    return 'unknown'\n}\n\nexport function isEnhanceableSiteType() {\n    return !!getEnhanceableSiteType()\n}\n\nexport function isExtensionSiteType() {\n    return !!getExtensionSiteType()\n}\n\n/**\n * The metamask browser provider is available in the page.\n * @returns\n */\nexport function isEthereumInjected(name = 'ethereum') {\n    if (typeof window === 'undefined') return false\n    return typeof Reflect.get(window, name) !== 'undefined'\n}\n\n/**\n * The metamask browser provider (for extension's content page) is available in the page.\n * @returns\n */\nexport function isInPageEthereumInjected() {\n    return !isExtensionSiteType() && !Sniffings.is_firefox\n}\n\nexport function getExtensionId(): string | undefined {\n    try {\n        if (Sniffings.is_chromium || Sniffings.is_opera || Sniffings.is_edge) {\n            // @ts-expect-error this package should not access browser global. It makes this package non-portable.\n            return browser.runtime.getURL('').match(/chrome-extension:\\/\\/([a-z]{32})/)?.[1] ?? ''\n        }\n    } catch {\n        // in case browser does not exist\n    }\n    return\n}\n","// proxy: https://web-api.coinmarketcap.com/v1\nexport const CMC_BASE_URL = 'https://coinmarketcap-agent.r2d2.to/v1'\nexport const CMC_STATIC_BASE_URL = 'https://s2.coinmarketcap.com/static'\n\n// the bitcoin ledger started at 03 Jan 2009\nexport const BTC_FIRST_LEGER_DATE = new Date('2009-01-03T00:00:00.000Z')\n\nexport const THIRD_PARTY_V1_BASE_URL = 'https://3rdparty-apis.coinmarketcap.com/v1'\n","import { ChainId, ZERO_ADDRESS } from '@masknet/web3-shared-evm'\nimport { fetchSquashedJSON } from '../helpers/fetchJSON.js'\nimport { isSameAddress } from '@masknet/web3-shared-base'\n\nconst NETWORK_NAME_MAP: {\n    [key in string]: ChainId\n} = {\n    Ethereum: ChainId.Mainnet,\n    'BNB Smart Chain (BEP20)': ChainId.BSC,\n    Polygon: ChainId.Matic,\n    'Avalanche C-Chain': ChainId.Avalanche,\n    Moonbeam: ChainId.Moonbeam,\n    Optimism: ChainId.Optimism,\n}\n\nconst NATIVE_TOKEN_ADDRESS = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'\n\nexport function resolveCoinMarketCapChainId(name: string) {\n    return NETWORK_NAME_MAP[name]\n}\n\nexport function resolveCoinMarketCapAddress(address: string) {\n    return isSameAddress(NATIVE_TOKEN_ADDRESS, address) ? ZERO_ADDRESS : address\n}\n\nexport function fetchFromCoinMarketCap<T>(request: RequestInfo | URL, init?: RequestInit) {\n    return fetchSquashedJSON<T>(request, init)\n}\n","import { getUnixTime } from 'date-fns'\nimport { Days, NetworkPluginID } from '@masknet/shared-base'\nimport { TokenType, SourceType } from '@masknet/web3-shared-base'\nimport { type ChainId, isValidChainId } from '@masknet/web3-shared-evm'\nimport { BTC_FIRST_LEGER_DATE, CMC_STATIC_BASE_URL, CMC_BASE_URL, THIRD_PARTY_V1_BASE_URL } from '../constants.js'\nimport { fetchFromCoinMarketCap, resolveCoinMarketCapChainId, resolveCoinMarketCapAddress } from '../helpers.js'\nimport type { Coin, Pair, ResultData, Status, QuotesInfo, CoinInfo } from '../types.js'\nimport { FuseCoin } from '../../Fuse/index.js'\nimport { getCommunityLink, isMirroredKeyword } from '../../Trending/helpers.js'\nimport { COIN_RECOMMENDATION_SIZE, VALID_TOP_RANK } from '../../Trending/constants.js'\nimport type { TrendingAPI } from '../../entry-types.js'\n\n// #regin get quote info\nexport async function getQuotesInfo(id: string, currency: string) {\n    const params = new URLSearchParams()\n    params.append('id', id)\n    params.append('convert', currency)\n\n    try {\n        return await fetchFromCoinMarketCap<{\n            data: Record<string, QuotesInfo>\n            status: Status\n        }>(`${THIRD_PARTY_V1_BASE_URL}/cryptocurrency/widget?${params.toString()}`, {\n            cache: 'default',\n        })\n    } catch {\n        return {\n            data: null,\n        }\n    }\n}\n// #endregion\n\n// #region get coin info\nexport async function getCoinInfo(id: string) {\n    const params = new URLSearchParams('aux=urls,logo,description,tags,platform,date_added,notice,status')\n    params.append('id', id)\n\n    const response = await fetchFromCoinMarketCap<{\n        /** id, coin-info pair */\n        data: Record<string, CoinInfo>\n        status: Status\n    }>(`${CMC_BASE_URL}/cryptocurrency/info?${params.toString()}`, {\n        cache: 'default',\n    })\n    return {\n        data: response.data[id],\n        status: response.status,\n    }\n}\n// #endregion\n\n// #region latest market pairs\n\nexport async function getLatestMarketPairs(id: string, currency: string) {\n    const params = new URLSearchParams(\n        'aux=num_market_pairs,market_url,price_quote,effective_liquidity,market_score,market_reputation&limit=40&sort=cmc_rank&start=1',\n    )\n    params.append('convert', currency)\n    params.append('id', id)\n\n    try {\n        return await fetchFromCoinMarketCap<{\n            data: {\n                id: number\n                market_pairs: Pair[]\n                name: string\n                num_market_pairs: number\n                symbol: string\n            }\n            status: Status\n        }>(`${CMC_BASE_URL}/cryptocurrency/market-pairs/latest?${params.toString()}`, {\n            cache: 'default',\n        })\n    } catch {\n        return {\n            data: {\n                id,\n                market_pairs: [],\n                num_market_pairs: 0,\n            },\n        }\n    }\n}\n\n// #endregion\n\nclass CoinMarketCapTrendingAPI implements TrendingAPI.Provider<ChainId> {\n    private async getHistorical(\n        id: string,\n        currency: string,\n        startDate: Date,\n        endDate: Date,\n        interval: TrendingAPI.HistoricalInterval,\n    ) {\n        const params = new URLSearchParams('format=chart_crypto_details')\n        params.append('convert', currency)\n        params.append('id', id)\n        params.append('interval', interval)\n        params.append('time_end', getUnixTime(endDate).toString())\n        params.append('time_start', getUnixTime(startDate).toString())\n\n        const response = await fetchFromCoinMarketCap<\n            ResultData<Record<string, Record<string, TrendingAPI.Stat>> | TrendingAPI.HistoricalCoinInfo>\n        >(`${CMC_BASE_URL}/cryptocurrency/quotes/historical?${params.toString()}`, {\n            cache: 'default',\n        })\n\n        return response.data\n    }\n\n    async getAllCoins(): Promise<TrendingAPI.Coin[]> {\n        const response = await fetchFromCoinMarketCap<ResultData<Coin[]>>(\n            `${CMC_BASE_URL}/cryptocurrency/map?aux=status,platform&listing_status=active,untracked&sort=cmc_rank`,\n            { cache: 'force-cache' },\n        )\n        if (!response.data) return []\n        return response.data\n            .filter((x) => x.status === 'active')\n            .map((x) => ({\n                id: String(x.id),\n                name: x.name,\n                symbol: x.symbol,\n                type: TokenType.Fungible,\n                contract_address: x.platform?.token_address,\n                market_cap_rank: x.rank,\n            }))\n    }\n\n    async getCoinsByKeyword(chainId: ChainId, keyword: string): Promise<TrendingAPI.Coin[]> {\n        return FuseCoin.create(await this.getAllCoins())\n            .search(keyword)\n            .map((x) => x.item)\n            .filter((y) => y.market_cap_rank && y.market_cap_rank < VALID_TOP_RANK)\n            .slice(0, COIN_RECOMMENDATION_SIZE)\n    }\n\n    getCoinInfoByAddress(address: string): Promise<TrendingAPI.CoinInfo | undefined> {\n        throw new Error('To be implemented.')\n    }\n\n    async getCoinTrending(\n        chainId: ChainId,\n        id: string,\n        currency: TrendingAPI.Currency,\n    ): Promise<TrendingAPI.Trending | undefined> {\n        const currencyName = currency.name.toUpperCase()\n        const [coinInfoRes, { data: quotesInfo }, { data: market }] = await Promise.all([\n            getCoinInfo(id),\n            getQuotesInfo(id, currencyName),\n            getLatestMarketPairs(id, currencyName),\n        ])\n\n        if (!coinInfoRes) return\n        const { data: coinInfo, status } = coinInfoRes\n\n        const contracts: TrendingAPI.Contract[] = coinInfo.contract_address\n            .sort((a, b) => (a.platform.coin.id === String(id) && b.platform.coin.id !== String(id) ? -1 : 1))\n            .map((x) => ({\n                chainId: resolveCoinMarketCapChainId(x.platform.name),\n                address: resolveCoinMarketCapAddress(x.contract_address),\n                pluginID: NetworkPluginID.PLUGIN_EVM,\n                icon_url: `${CMC_STATIC_BASE_URL}/img/coins/64x64/${x.platform.coin.id}.png`,\n            }))\n            .filter((x) => isValidChainId(x.chainId))\n\n        const currentContract = contracts[0]\n\n        const trending: TrendingAPI.Trending = {\n            lastUpdated: status.timestamp,\n            platform: coinInfo.platform,\n            contracts,\n            coin: {\n                id,\n                chainId: currentContract?.chainId,\n                name: coinInfo.name,\n                symbol: coinInfo.symbol,\n                type: TokenType.Fungible,\n                is_mirrored: isMirroredKeyword(coinInfo.symbol),\n                announcement_urls: coinInfo.urls.announcement?.filter(Boolean),\n                tech_docs_urls: coinInfo.urls.technical_doc?.filter(Boolean),\n                message_board_urls: coinInfo.urls.message_board?.filter(Boolean),\n                source_code_urls: coinInfo.urls.source_code?.filter(Boolean),\n                community_urls: getCommunityLink(\n                    [\n                        ...(coinInfo.urls.twitter ?? []),\n                        ...(coinInfo.urls.reddit ?? []),\n                        ...(coinInfo.urls.chat ?? []),\n                    ].filter(Boolean),\n                ),\n                home_urls: coinInfo.urls.website?.filter(Boolean),\n                blockchain_urls: [\n                    `https://coinmarketcap.com/currencies/${coinInfo.slug}/`,\n                    ...(coinInfo.urls.explorer ?? []),\n                ].filter(Boolean),\n                tags: coinInfo.tags ?? void 0,\n                image_url: `${CMC_STATIC_BASE_URL}/img/coins/64x64/${id}.png`,\n                platform_url: `https://coinmarketcap.com/currencies/${coinInfo.slug}/`,\n                twitter_url: coinInfo.urls.twitter?.find((x) => x.includes('twitter')),\n                telegram_url: coinInfo.urls.chat?.find((x) => x.includes('telegram')),\n                market_cap_rank: quotesInfo?.[id]?.cmc_rank,\n                description: coinInfo.description,\n                contract_address: currentContract?.address ?? coinInfo.platform?.token_address,\n            },\n            currency,\n            dataProvider: SourceType.CoinMarketCap,\n            tickers: market.market_pairs\n                .map((pair) => ({\n                    logo_url: `${CMC_STATIC_BASE_URL}/img/exchanges/32x32/${pair.exchange.id}.png`,\n                    trade_url: pair.market_url,\n                    market_name: pair.exchange.name,\n                    market_reputation: pair.market_reputation,\n                    base_name: pair.market_pair_base.exchange_symbol,\n                    target_name: pair.market_pair_quote.exchange_symbol,\n                    price:\n                        pair.market_pair_base.currency_id === market.id\n                            ? pair.quote[currencyName].price\n                            : pair.quote[currencyName].price_quote,\n                    volume: pair.quote[currencyName].volume_24h,\n                    score: String(pair.market_score),\n                    updated: new Date(pair.quote[currencyName].last_updated),\n                }))\n                .sort((a, z) => {\n                    if (a.market_reputation !== z.market_reputation) return z.market_reputation - a.market_reputation // reputation from high to low\n                    if (a.price.toFixed(2) !== z.price.toFixed(2)) return z.price - a.price // price from high to low\n                    return z.volume - a.volume // volume from high to low\n                }),\n        }\n        const quotesInfo_ = quotesInfo?.[id]\n        if (quotesInfo_)\n            trending.market = {\n                circulating_supply: quotesInfo_.total_supply ?? void 0,\n                total_supply: quotesInfo_.total_supply ?? void 0,\n                max_supply: quotesInfo_.max_supply ?? void 0,\n                market_cap: quotesInfo_.quote[currencyName].market_cap,\n                current_price: quotesInfo_.quote[currencyName].price.toString(),\n                total_volume: quotesInfo_.quote[currencyName].volume_24h,\n                price_change_percentage_1h: quotesInfo_.quote[currencyName].percent_change_1h,\n                price_change_24h: quotesInfo_.quote[currencyName].percent_change_24h,\n                price_change_percentage_1h_in_currency: quotesInfo_.quote[currencyName].percent_change_1h,\n                price_change_percentage_24h_in_currency: quotesInfo_.quote[currencyName].percent_change_24h,\n                price_change_percentage_7d_in_currency: quotesInfo_.quote[currencyName].percent_change_7d,\n            }\n\n        return trending\n    }\n\n    async getCoinPriceStats(\n        chainId: ChainId,\n        coinId: string,\n        currency: TrendingAPI.Currency,\n        days: number,\n    ): Promise<TrendingAPI.Stat[]> {\n        const interval = (() => {\n            if (days === 0) return '1d' // max\n            if (days > 365) return '1d' // 1y\n            if (days > 90) return '2h' // 3m\n            if (days > 30) return '1h' // 1m\n            if (days > 7) return '15m' // 1w\n            return '5m'\n        })()\n        const endDate = new Date()\n        const startDate = new Date()\n        startDate.setDate(startDate.getDate() - days)\n        const stats = await this.getHistorical(\n            coinId,\n            currency.name.toUpperCase(),\n            days === Days.MAX ? BTC_FIRST_LEGER_DATE : startDate,\n            endDate,\n            interval,\n        )\n        if (stats.is_active === 0) return []\n        return Object.entries(stats).map(([date, x]) => [new Date(date).getTime(), x[currency.name.toUpperCase()][0]])\n    }\n    getCoinMarketInfo(symbol: string): Promise<TrendingAPI.MarketInfo> {\n        throw new Error('Method not implemented.')\n    }\n}\nexport const CoinMarketCap = new CoinMarketCapTrendingAPI()\n","import urlcat from 'urlcat'\nimport type { ScalableBloomFilter } from 'bloom-filters'\nimport { fetchSquashedJSON } from '../helpers/fetchJSON.js'\nimport type { ScamWarningAPI } from '../entry-types.js'\n\nconst BASE_URL = 'https://scam.mask.r2d2.to/cryptoscam-db'\n\nexport class CryptoScamDB {\n    private static bloomFilter?: ScalableBloomFilter\n\n    static async getBloomFilter() {\n        if (this.bloomFilter) return this.bloomFilter\n        const filter = await fetchSquashedJSON<JSON>(urlcat(BASE_URL, 'filter/config.json'))\n\n        const { ScalableBloomFilter } = await import('bloom-filters')\n        this.bloomFilter = ScalableBloomFilter.fromJSON(filter)\n        return this.bloomFilter\n    }\n\n    static async getScamWarning(link: string): Promise<ScamWarningAPI.Info | undefined> {\n        const filter = await this.getBloomFilter()\n        if (!filter) return\n\n        try {\n            const url = new URL(link)\n            if (!filter.has(url.host)) return\n\n            const result = await fetchSquashedJSON<ScamWarningAPI.Info>(urlcat(BASE_URL, `${url.host}.json`))\n            if (!result) return\n\n            const scamURL = new URL(result.url)\n\n            if ((!url.pathname || url.pathname === '/') && (!scamURL.pathname || scamURL.pathname === '/'))\n                return result\n\n            if (\n                url.pathname.toLowerCase() === scamURL.pathname.toLowerCase() &&\n                url.search.toLowerCase() === scamURL.search.toLowerCase()\n            ) {\n                return result\n            }\n\n            return\n        } catch {\n            return\n        }\n    }\n\n    static async getScamWarnings(links: string[]): Promise<ScamWarningAPI.Info[] | undefined> {\n        const requests = links\n            .map((x) => {\n                if (x.startsWith('https://') || x.startsWith('http://')) return x\n                return `http://${x}`\n            })\n            .map((x) => this.getScamWarning(x))\n        const result = await Promise.allSettled(requests)\n        return result\n            .map((x) => (x.status === 'fulfilled' ? x.value : undefined))\n            .filter((x): x is ScamWarningAPI.Info => !!x)\n    }\n}\n","import { CurrencyType } from '@masknet/web3-shared-base'\nimport { fetchJSON } from '../entry-helpers.js'\n\nconst BASE_URL = 'https://nftapi.firefly.land/exchange-rates?base=USD'\n\nexport namespace FiatCurrencyRateBaseAPI {\n    export type Result = {\n        rates: Record<string, number>\n    }\n}\nexport class FiatCurrencyRate {\n    static async getRate(type?: CurrencyType): Promise<number> {\n        if (!type || type === CurrencyType.USD) return 1\n        const result = await fetchJSON<FiatCurrencyRateBaseAPI.Result>(BASE_URL)\n        return result.rates[type.toUpperCase()]\n    }\n\n    static async getRates() {\n        const result = await fetchJSON<FiatCurrencyRateBaseAPI.Result>(BASE_URL)\n        return result.rates\n    }\n}\n","import urlcat from 'urlcat'\nimport { first, isEmpty, parseInt, uniqBy } from 'lodash-es'\nimport { BigNumber } from 'bignumber.js'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport { ChainId, getGoPlusLabsConstants, isValidChainId, type SchemaType } from '@masknet/web3-shared-evm'\nimport { type FungibleTokenSpender, isSameAddress, type NonFungibleContractSpender } from '@masknet/web3-shared-base'\nimport { GO_PLUS_LABS_ROOT_URL, INFINITE_VALUE } from './constants.js'\nimport {\n    type GoPlusNFTInfo,\n    type GoPlusTokenInfo,\n    type GoPlusTokenSpender,\n    type NFTSpenderInfo,\n    SecurityMessageLevel,\n} from './types.js'\nimport { SecurityMessages } from './rules.js'\nimport { getAllMaskDappContractInfo } from '../helpers/getAllMaskDappContractInfo.js'\nimport { fetchJSON } from '../helpers/fetchJSON.js'\nimport type { AuthorizationAPI, SecurityAPI } from '../entry-types.js'\n\nfunction checkInWhitelist(chainId = ChainId.Mainnet, address: string) {\n    const { WHITE_LISTS } = getGoPlusLabsConstants(chainId)\n    return WHITE_LISTS?.some((x) => isSameAddress(x, address))\n}\n\ninterface SupportedChainResponse {\n    id: string\n    name: string\n}\n\nclass GoPlusAuthorizationAPI implements AuthorizationAPI.Provider<ChainId> {\n    async getSupportChainIds() {\n        return [ChainId.Mainnet, ChainId.BSC]\n    }\n    async getNonFungibleTokenSpenders(chainId: ChainId, addresses: string) {\n        const supportedChainIds = await this.getSupportChainIds()\n        if (!supportedChainIds.includes(chainId)) return EMPTY_LIST\n\n        const maskDappContractInfoList = getAllMaskDappContractInfo(chainId, 'nft')\n        const response = await fetchJSON<{\n            result: GoPlusNFTInfo[]\n        }>(urlcat(GO_PLUS_LABS_ROOT_URL, 'api/v2/nft721_approval_security/:chainId', { chainId, addresses }))\n\n        const nft1155Response = await fetchJSON<{\n            result: GoPlusNFTInfo[]\n        }>(urlcat(GO_PLUS_LABS_ROOT_URL, 'api/v2/nft1155_approval_security/:chainId', { chainId, addresses }))\n\n        if (!response.result?.length && !nft1155Response.result?.length) return EMPTY_LIST\n\n        return [...response.result, ...nft1155Response.result]\n            .reduce<NFTSpenderInfo[]>((acc, cur) => {\n                return acc.concat(\n                    cur.approved_list.map((rawSpender) => {\n                        const maskDappContractInfo = maskDappContractInfoList.find((y) =>\n                            isSameAddress(y.address, rawSpender.approved_contract),\n                        )\n\n                        if (maskDappContractInfo) {\n                            return {\n                                isMaskDapp: true,\n                                address: rawSpender.approved_contract,\n                                amount: '1',\n                                name: maskDappContractInfo.name,\n                                logo: maskDappContractInfo.logo,\n                                contract: {\n                                    address: cur.nft_address,\n                                    name: cur.nft_name,\n                                },\n                            }\n                        }\n\n                        return {\n                            isMaskDapp: false,\n                            address: rawSpender.approved_contract,\n                            amount: '1',\n                            name: rawSpender.address_info.tag,\n                            logo: undefined,\n                            contract: {\n                                address: cur.nft_address,\n                                name: cur.nft_name,\n                            },\n                        }\n                    }),\n                )\n            }, [])\n            .sort((a, b) => {\n                if (a.isMaskDapp && !b.isMaskDapp) return -1\n                if (!a.isMaskDapp && b.isMaskDapp) return 1\n                return Number(b.amount) - Number(a.amount)\n            }) as Array<NonFungibleContractSpender<ChainId, SchemaType>>\n    }\n\n    async getFungibleTokenSpenders(chainId: ChainId, addresses: string) {\n        const supportedChainIds = await this.getSupportChainIds()\n        if (!supportedChainIds.includes(chainId)) return EMPTY_LIST\n\n        const maskDappContractInfoList = getAllMaskDappContractInfo(chainId, 'token')\n\n        const response = await fetchJSON<{\n            code: 0 | 1\n            message: string\n            result: GoPlusTokenInfo[]\n        }>(urlcat(GO_PLUS_LABS_ROOT_URL, 'api/v2/token_approval_security/:chainId', { chainId, addresses }))\n\n        if (!response?.result?.length) return EMPTY_LIST\n\n        return response.result\n            .reduce<GoPlusTokenSpender[]>((acc, cur) => {\n                const tokenInfo = { address: cur.token_address, symbol: cur.token_symbol, name: cur.token_name }\n\n                return acc.concat(\n                    cur.approved_list.map((rawSpender) => {\n                        const spender = {\n                            name: rawSpender.address_info.tag,\n                            address: rawSpender.approved_contract,\n                            amount:\n                                rawSpender.approved_amount === 'Unlimited'\n                                    ? INFINITE_VALUE\n                                    : new BigNumber(rawSpender.approved_amount).toNumber(),\n                            tokenInfo,\n                        }\n\n                        const maskDappContractInfo = maskDappContractInfoList.find((x) =>\n                            isSameAddress(x.address, spender.address),\n                        )\n\n                        if (maskDappContractInfo) {\n                            return {\n                                ...spender,\n                                name: maskDappContractInfo.name,\n                                logo: maskDappContractInfo.logo,\n                                isMaskDapp: true,\n                            }\n                        }\n\n                        return { ...spender, isMaskDapp: false }\n                    }),\n                )\n            }, [])\n            .sort((a, b) => {\n                if (a.isMaskDapp && !b.isMaskDapp) return -1\n                if (!a.isMaskDapp && b.isMaskDapp) return 1\n                return 0\n            }) as Array<FungibleTokenSpender<ChainId, SchemaType>>\n    }\n}\n\nexport class GoPlusLabs {\n    static async getTokenSecurity(chainId: ChainId, addresses: string[]) {\n        const response = await fetchJSON<{\n            code: 0 | 1\n            message: 'OK' | string\n            result: Record<\n                string,\n                SecurityAPI.ContractSecurity & SecurityAPI.TokenSecurity & SecurityAPI.TradingSecurity\n            >\n        }>(\n            urlcat(GO_PLUS_LABS_ROOT_URL, 'api/v1/token_security/:id', {\n                id: chainId,\n                contract_addresses: uniqBy(addresses, (x) => x.toLowerCase()).join(','),\n            }),\n        )\n\n        if (response.code !== 1) return\n        return createTokenSecurity(chainId, response.result)\n    }\n\n    static async getAddressSecurity(\n        chainId: ChainId,\n        address: string,\n    ): Promise<SecurityAPI.AddressSecurity | undefined> {\n        if (!isValidChainId(chainId)) return\n        const response = await fetchJSON<{\n            code: 0 | 1\n            message: 'OK' | string\n            result: SecurityAPI.AddressSecurity\n        }>(\n            urlcat(GO_PLUS_LABS_ROOT_URL, 'api/v1/address_security/:address', {\n                address,\n                chain_id: chainId,\n            }),\n        )\n\n        if (response.code !== 1) return\n        return response.result\n    }\n\n    static async getSupportedChain(): Promise<Array<SecurityAPI.SupportedChain<ChainId>>> {\n        const { code, result } = await fetchJSON<{\n            code: 0 | 1\n            message: 'OK' | string\n            result: SupportedChainResponse[]\n        }>(urlcat(GO_PLUS_LABS_ROOT_URL, 'api/v1/supported_chains'))\n\n        if (code !== 1) return []\n        return result.map((x) => ({ chainId: parseInt(x.id) ?? ChainId.Mainnet, name: x.name }))\n    }\n}\nexport const GoPlusAuthorization = new GoPlusAuthorizationAPI()\n\nfunction createTokenSecurity(\n    chainId: ChainId,\n    response: Record<\n        string,\n        SecurityAPI.ContractSecurity & SecurityAPI.TokenSecurity & SecurityAPI.TradingSecurity\n    > = {},\n) {\n    if (isEmpty(response) || !isValidChainId(chainId)) return\n    const entity = first(Object.entries(response))\n    if (!entity) return\n    const tokenSecurity = { ...entity[1], contract: entity[0], chainId }\n    const is_high_risk = isHighRisk(tokenSecurity)\n    const makeMessageList = getMessageList(tokenSecurity)\n    const risk_item_quantity = makeMessageList.filter((x) => x.level === SecurityMessageLevel.High).length\n    const warn_item_quantity = makeMessageList.filter((x) => x.level === SecurityMessageLevel.Medium).length\n    const inWhitelist = checkInWhitelist(chainId, tokenSecurity.contract)\n    return {\n        ...tokenSecurity,\n        is_high_risk: inWhitelist ? false : is_high_risk,\n        risk_item_quantity: inWhitelist ? 0 : risk_item_quantity,\n        warn_item_quantity: inWhitelist ? 0 : warn_item_quantity,\n        message_list: makeMessageList,\n    }\n}\n\nconst isHighRisk = (tokenSecurity?: SecurityAPI.TokenSecurityType) => {\n    if (!tokenSecurity) return false\n    return tokenSecurity.trust_list === '1'\n        ? false\n        : SecurityMessages.filter(\n              (x) =>\n                  x.condition(tokenSecurity) &&\n                  x.level !== SecurityMessageLevel.Safe &&\n                  !x.shouldHide(tokenSecurity) &&\n                  x.level === SecurityMessageLevel.High,\n          ).sort((a, z) => {\n              if (a.level === SecurityMessageLevel.High) return -1\n              if (z.level === SecurityMessageLevel.High) return 1\n              return 0\n          }).length > 0\n}\n\nconst getMessageList = (tokenSecurity: SecurityAPI.TokenSecurityType) =>\n    tokenSecurity.trust_list === '1'\n        ? []\n        : SecurityMessages.filter(\n              (x) =>\n                  x.condition(tokenSecurity) && x.level !== SecurityMessageLevel.Safe && !x.shouldHide(tokenSecurity),\n          ).sort((a, z) => {\n              if (a.level === SecurityMessageLevel.High) return -1\n              if (z.level === SecurityMessageLevel.High) return 1\n              return 0\n          })\n","import { parseInt } from 'lodash-es'\nimport { type SecurityMessage, SecurityType, SecurityMessageLevel } from './types.js'\nimport type { SecurityAPI } from '../entry-types.js'\n\nconst percentageToNumber = (value?: string) => parseInt((value ?? '').replace('%', '')) * 100\nconst isUnset = (name: keyof SecurityAPI.TokenSecurityType) => (info: SecurityAPI.TokenSecurityType) =>\n    info[name] === undefined\n\nexport const SecurityMessages: SecurityMessage[] = [\n    // open source\n    {\n        type: SecurityType.Contract,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_open_source === '1',\n        titleKey: 'risk_contract_source_code_verified_title',\n        messageKey: 'risk_contract_source_code_verified_body',\n        shouldHide: isUnset('is_open_source'),\n    },\n    {\n        type: SecurityType.Contract,\n        level: SecurityMessageLevel.High,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_open_source === '0',\n        titleKey: 'risk_contract_source_code_not_verified_title',\n        messageKey: 'risk_contract_source_code_not_verified_body',\n        shouldHide: isUnset('is_open_source'),\n    },\n    // proxy\n    {\n        type: SecurityType.Contract,\n        level: SecurityMessageLevel.Medium,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_proxy === '1',\n        titleKey: 'risk_proxy_contract_title',\n        messageKey: 'risk_proxy_contract_body',\n        shouldHide: isUnset('is_proxy'),\n    },\n    {\n        type: SecurityType.Contract,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_proxy === '0',\n        titleKey: 'risk_no_proxy_title',\n        messageKey: 'risk_no_proxy_body',\n        shouldHide: isUnset('is_proxy'),\n    },\n    // mint\n    {\n        type: SecurityType.Contract,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_mintable === '0',\n        titleKey: 'risk_no_mint_function_title',\n        messageKey: 'risk_no_mint_function_body',\n        shouldHide: isUnset('is_mintable'),\n    },\n    {\n        type: SecurityType.Contract,\n        level: SecurityMessageLevel.Medium,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_mintable === '1',\n        titleKey: 'risk_mint_function_title',\n        messageKey: 'risk_mint_function_body',\n        shouldHide: isUnset('is_mintable'),\n    },\n    // owner change balance\n    {\n        type: SecurityType.Contract,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.owner_change_balance === '0',\n        titleKey: 'risk_owner_can_not_change_balance_title',\n        messageKey: 'risk_owner_can_not_change_balance_body',\n        shouldHide: isUnset('owner_change_balance'),\n    },\n    {\n        type: SecurityType.Contract,\n        level: SecurityMessageLevel.Medium,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.owner_change_balance === '1',\n        titleKey: 'risk_owner_change_balance_title',\n        messageKey: 'risk_owner_change_balance_body',\n        shouldHide: isUnset('owner_change_balance'),\n    },\n    // can take back ownership\n    {\n        type: SecurityType.Contract,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.can_take_back_ownership === '0',\n        titleKey: 'risk_no_can_take_back_ownership_title',\n        messageKey: 'risk_no_can_take_back_ownership_body',\n        shouldHide: isUnset('can_take_back_ownership'),\n    },\n    {\n        type: SecurityType.Contract,\n        level: SecurityMessageLevel.Medium,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.can_take_back_ownership === '1',\n        titleKey: 'risk_can_take_back_ownership_title',\n        messageKey: 'risk_can_take_back_ownership_body',\n        shouldHide: isUnset('can_take_back_ownership'),\n    },\n    // buy tax\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => percentageToNumber(info.buy_tax) < 10,\n        titleKey: 'risk_buy_tax_title',\n        messageKey: 'risk_buy_tax_body',\n        i18nParams: (info: SecurityAPI.TokenSecurityType) => ({\n            rate: `${percentageToNumber(info.buy_tax)}%`,\n            quantity: '',\n        }),\n        shouldHide: isUnset('buy_tax'),\n    },\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Medium,\n        condition: (info: SecurityAPI.TokenSecurityType) =>\n            percentageToNumber(info.buy_tax) >= 10 && percentageToNumber(info.buy_tax) < 50,\n        titleKey: 'risk_buy_tax_title',\n        messageKey: 'risk_buy_tax_body',\n        i18nParams: (info: SecurityAPI.TokenSecurityType) => ({\n            rate: `${percentageToNumber(info.buy_tax)}%`,\n            quantity: '',\n        }),\n        shouldHide: isUnset('buy_tax'),\n    },\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.High,\n        condition: (info: SecurityAPI.TokenSecurityType) => percentageToNumber(info.buy_tax) >= 50,\n        titleKey: 'risk_buy_tax_title',\n        messageKey: 'risk_buy_tax_body',\n        i18nParams: (info: SecurityAPI.TokenSecurityType) => ({\n            rate: `${percentageToNumber(info.buy_tax)}%`,\n            quantity: '',\n        }),\n        shouldHide: isUnset('buy_tax'),\n    },\n    // sell tax\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => percentageToNumber(info.sell_tax) < 10,\n        titleKey: 'risk_sell_tax_title',\n        messageKey: 'risk_sell_tax_body',\n        i18nParams: (info: SecurityAPI.TokenSecurityType) => ({\n            rate: `${percentageToNumber(info.sell_tax)}%`,\n            quantity: '',\n        }),\n        shouldHide: isUnset('sell_tax'),\n    },\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Medium,\n        condition: (info: SecurityAPI.TokenSecurityType) =>\n            percentageToNumber(info.sell_tax) >= 10 && percentageToNumber(info.sell_tax) < 50,\n        titleKey: 'risk_sell_tax_title',\n        messageKey: 'risk_sell_tax_body',\n        i18nParams: (info: SecurityAPI.TokenSecurityType) => ({\n            rate: `${percentageToNumber(info.sell_tax)}%`,\n            quantity: '',\n        }),\n        shouldHide: isUnset('sell_tax'),\n    },\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.High,\n        condition: (info: SecurityAPI.TokenSecurityType) => percentageToNumber(info.sell_tax) >= 50,\n        titleKey: 'risk_sell_tax_title',\n        messageKey: 'risk_sell_tax_body',\n        i18nParams: (info: SecurityAPI.TokenSecurityType) => ({\n            rate: `${percentageToNumber(info.sell_tax)}%`,\n            quantity: '',\n        }),\n        shouldHide: isUnset('sell_tax'),\n    },\n    // honeypot\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_honeypot === '0',\n        titleKey: 'risk_is_not_honeypot_title',\n        messageKey: 'risk_is_not_honeypot_body',\n        shouldHide: isUnset('is_honeypot'),\n    },\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.High,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_honeypot === '1',\n        titleKey: 'risk_is_honeypot_title',\n        messageKey: 'risk_is_honeypot_body',\n        shouldHide: isUnset('is_honeypot'),\n    },\n    // transfer_pausable\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.transfer_pausable === '0',\n        titleKey: 'risk_no_code_transfer_pausable_title',\n        messageKey: 'risk_no_code_transfer_pausable_title',\n        shouldHide: isUnset('transfer_pausable'),\n    },\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Medium,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.transfer_pausable === '1',\n        titleKey: 'risk_transfer_pausable_title',\n        messageKey: 'risk_transfer_pausable_body',\n        shouldHide: isUnset('transfer_pausable'),\n    },\n    // anti whale\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_anti_whale === '0',\n        titleKey: 'risk_is_no_anti_whale_title',\n        messageKey: 'risk_is_no_anti_whale_body',\n        shouldHide: isUnset('is_anti_whale'),\n    },\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Medium,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_anti_whale === '1',\n        titleKey: 'risk_is_anti_whale_title',\n        messageKey: 'risk_is_anti_whale_body',\n        shouldHide: isUnset('is_anti_whale'),\n    },\n    // slippage modifiable\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.slippage_modifiable === '0',\n        titleKey: 'risk_not_slippage_modifiable_title',\n        messageKey: 'risk_not_slippage_modifiable_body',\n        shouldHide: isUnset('slippage_modifiable'),\n    },\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Medium,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.slippage_modifiable === '1',\n        titleKey: 'risk_slippage_modifiable_title',\n        messageKey: 'risk_slippage_modifiable_body',\n        shouldHide: isUnset('slippage_modifiable'),\n    },\n    // black list\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_blacklisted === '0',\n        titleKey: 'risk_not_is_blacklisted_title',\n        messageKey: 'risk_not_is_blacklisted_body',\n        shouldHide: isUnset('is_blacklisted'),\n    },\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Medium,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_blacklisted === '1',\n        titleKey: 'risk_is_blacklisted_title',\n        messageKey: 'risk_is_blacklisted_body',\n        shouldHide: isUnset('is_blacklisted'),\n    },\n    // white list\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_whitelisted === '0',\n        titleKey: 'risk_not_is_whitelisted_title',\n        messageKey: 'risk_not_is_whitelisted_body',\n        shouldHide: isUnset('is_whitelisted'),\n    },\n    {\n        type: SecurityType.Transaction,\n        level: SecurityMessageLevel.Medium,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_whitelisted === '1',\n        titleKey: 'risk_is_whitelisted_title',\n        messageKey: 'risk_is_whitelisted_body',\n        shouldHide: isUnset('is_whitelisted'),\n    },\n    // true token\n    {\n        type: SecurityType.Info,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_true_token === '1',\n        titleKey: 'risk_is_true_token_title',\n        messageKey: 'risk_is_true_token_body',\n        shouldHide: isUnset('is_true_token'),\n    },\n    {\n        type: SecurityType.Info,\n        level: SecurityMessageLevel.High,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_true_token === '0',\n        titleKey: 'risk_not_is_true_token_title',\n        messageKey: 'risk_not_is_true_token_body',\n        shouldHide: isUnset('is_true_token'),\n    },\n    // Airdrop scam\n    {\n        type: SecurityType.Info,\n        level: SecurityMessageLevel.Safe,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_airdrop_scam === '0',\n        titleKey: 'risk_is_airdrop_scam_title',\n        messageKey: 'risk_is_airdrop_scam_body',\n        shouldHide: isUnset('is_airdrop_scam'),\n    },\n    {\n        type: SecurityType.Info,\n        level: SecurityMessageLevel.High,\n        condition: (info: SecurityAPI.TokenSecurityType) => info.is_airdrop_scam === '1',\n        titleKey: 'risk_not_is_airdrop_scam_title',\n        messageKey: 'risk_not_is_airdrop_scam_body',\n        shouldHide: isUnset('is_airdrop_scam'),\n    },\n]\n","import type { ReactNode } from 'react'\nimport type { SecurityAPI } from '../entry-types.js'\n\nexport interface GoPlusSpender {\n    approved_contract: string\n    approved_amount: string\n    approved_for_all: 0 | 1\n    address_info: {\n        contract_name: string\n        is_contract: -1 | 1\n        is_open_source: -1 | 1\n        tag: string\n    }\n}\n\nexport interface GoPlusTokenInfo {\n    token_address: string\n    token_name: string\n    token_symbol: string\n    chain_id: string\n    balance: string\n    approved_list: GoPlusSpender[]\n}\n\nexport interface GoPlusTokenSpender {\n    name: string\n    address: string\n    amount: number\n    logo?: JSX.Element\n    isMaskDapp: boolean\n    tokenInfo: {\n        address: string\n        symbol: string\n        name: string\n    }\n}\n\nexport interface GoPlusNFTInfo {\n    chain_id: string\n    nft_name: string\n    nft_symbol: string\n    nft_address: string\n    approved_list: GoPlusSpender[]\n}\n\nexport interface NFTSpenderInfo {\n    isMaskDapp: boolean\n    address: string\n    amount: string\n    name: string\n    logo: ReactNode | undefined\n    contract: {\n        address: string\n        name: string\n    }\n}\n\nexport enum SecurityMessageLevel {\n    High = 'High',\n    Medium = 'Medium',\n    Safe = 'Safe',\n}\n\nexport type SecurityKey =\n    | 'security_info_code_not_verify_title'\n    | 'security_info_code_not_verify_message'\n    | 'security_info_functions_that_can_suspend_trading_title'\n    | 'security_info_functions_that_can_suspend_trading_message'\n    | 'default_placeholder'\n    | 'not_found_tip_title'\n    | 'not_found_tip_network_error'\n    | 'not_found_tip_network_chain_correct'\n    | 'not_found_tip_network_address_not_cover'\n    | 'risk_safe_description'\n    | 'risk_contract_source_code_verified_title'\n    | 'risk_contract_source_code_verified_body'\n    | 'risk_contract_source_code_not_verified_title'\n    | 'risk_contract_source_code_not_verified_body'\n    | 'risk_proxy_contract_title'\n    | 'risk_proxy_contract_body'\n    | 'risk_no_proxy_title'\n    | 'risk_no_proxy_body'\n    | 'risk_mint_function_title'\n    | 'risk_mint_function_body'\n    | 'risk_no_mint_function_title'\n    | 'risk_no_mint_function_body'\n    | 'risk_can_take_back_ownership_title'\n    | 'risk_can_take_back_ownership_body'\n    | 'risk_no_can_take_back_ownership_title'\n    | 'risk_no_can_take_back_ownership_body'\n    | 'risk_owner_change_balance_title'\n    | 'risk_owner_change_balance_body'\n    | 'risk_owner_can_not_change_balance_title'\n    | 'risk_owner_can_not_change_balance_body'\n    | 'risk_buy_tax_title'\n    | 'risk_buy_tax_body'\n    | 'risk_sell_tax_title'\n    | 'risk_sell_tax_body'\n    | 'risk_is_honeypot_title'\n    | 'risk_is_honeypot_body'\n    | 'risk_is_not_honeypot_title'\n    | 'risk_is_not_honeypot_body'\n    | 'risk_transfer_pausable_title'\n    | 'risk_transfer_pausable_body'\n    | 'risk_no_code_transfer_pausable_title'\n    | 'risk_no_code_transfer_pausable_body'\n    | 'risk_is_anti_whale_title'\n    | 'risk_is_anti_whale_body'\n    | 'risk_is_no_anti_whale_title'\n    | 'risk_is_no_anti_whale_body'\n    | 'risk_slippage_modifiable_title'\n    | 'risk_slippage_modifiable_body'\n    | 'risk_not_slippage_modifiable_title'\n    | 'risk_not_slippage_modifiable_body'\n    | 'risk_is_blacklisted_title'\n    | 'risk_is_blacklisted_body'\n    | 'risk_not_is_blacklisted_title'\n    | 'risk_not_is_blacklisted_body'\n    | 'risk_is_whitelisted_title'\n    | 'risk_is_whitelisted_body'\n    | 'risk_not_is_whitelisted_title'\n    | 'risk_not_is_whitelisted_body'\n    | 'risk_is_true_token_title'\n    | 'risk_is_true_token_body'\n    | 'risk_not_is_true_token_title'\n    | 'risk_not_is_true_token_body'\n    | 'risk_is_airdrop_scam_title'\n    | 'risk_is_airdrop_scam_body'\n    | 'risk_not_is_airdrop_scam_title'\n    | 'risk_not_is_airdrop_scam_body'\n    | 'contract_not_found'\n\nexport type I18nOptions = 'rate' | 'quantity'\n\nexport enum SecurityType {\n    Contract = 'contract-security',\n    Transaction = 'transaction-security',\n    Info = 'info-security',\n}\n\nexport interface SecurityMessage {\n    type: SecurityType\n    level: SecurityMessageLevel\n    condition(info: SecurityAPI.TokenSecurityType): boolean\n    titleKey: SecurityKey\n    messageKey: SecurityKey\n    i18nParams?: (info: SecurityAPI.TokenSecurityType) => {\n        [key in I18nOptions]: string\n    }\n    shouldHide(info: SecurityAPI.TokenSecurityType): boolean\n}\n","import { resolveCrossOriginURL } from '@masknet/web3-shared-base'\n\nexport const LIDO_STETH_APR_API = resolveCrossOriginURL('https://stake.lido.fi/api/sma-steth-apr')\n","import { fetchJSON } from '../helpers/fetchJSON.js'\nimport { LIDO_STETH_APR_API } from './constants.js'\n\nexport class Lido {\n    static async getStEthAPR() {\n        const apr = await fetchJSON<number>(LIDO_STETH_APR_API, { mode: 'cors' })\n        return apr.toString()\n    }\n}\n","import urlcat from 'urlcat'\nimport { compact } from 'lodash-es'\nimport { MaskIconURLs } from '@masknet/icons'\nimport {\n    TokenType,\n    SourceType,\n    type NonFungibleCollectionOverview,\n    type NonFungibleTokenActivity,\n} from '@masknet/web3-shared-base'\nimport { EMPTY_LIST, NetworkPluginID } from '@masknet/shared-base'\nimport { type ChainId, type SchemaType, isValidChainId } from '@masknet/web3-shared-evm'\nimport { COIN_RECOMMENDATION_SIZE } from '../../Trending/constants.js'\nimport type { EVM, Response } from '../types/index.js'\nimport { fetchFromNFTScanV2, createNonFungibleAsset } from '../helpers/EVM.js'\nimport { getContractSymbol } from '../../helpers/getContractSymbol.js'\nimport { resolveNFTScanHostName, resolveNFTScanRange, NonFungibleMarketplace } from '../helpers/utils.js'\nimport { LooksRare } from '../../LooksRare/index.js'\nimport { OpenSea } from '../../OpenSea/index.js'\nimport { getPaymentToken } from '../../helpers/getPaymentToken.js'\nimport type { TrendingAPI, NonFungibleTokenAPI } from '../../entry-types.js'\n\nclass NFTScanTrendingAPI_EVM implements TrendingAPI.Provider<ChainId> {\n    private async getCollection(chainId: ChainId, id: string): Promise<NonFungibleTokenAPI.Collection | undefined> {\n        const path = urlcat('/api/v2/collections/:address', {\n            address: id,\n            contract_address: id,\n        })\n        const response = await fetchFromNFTScanV2<Response<NonFungibleTokenAPI.Collection>>(chainId, path)\n        return response?.data\n    }\n\n    private async searchNFTCollection(chainId: ChainId, keyword: string): Promise<NonFungibleTokenAPI.Collection[]> {\n        if (!isValidChainId(chainId)) return EMPTY_LIST\n        const path = '/api/v2/collections/filters'\n        const response = await fetchFromNFTScanV2<Response<NonFungibleTokenAPI.Collection[]>>(chainId, path, {\n            method: 'POST',\n            body: JSON.stringify({\n                name: keyword,\n                symbol: keyword,\n                sort_direction: 'desc',\n                sort_field: 'floor_price',\n                name_fuzzy_search: true,\n            }),\n        })\n        return response?.data ?? EMPTY_LIST\n    }\n\n    async getCollectionOverview(chainId: ChainId, id: string): Promise<NonFungibleCollectionOverview | undefined> {\n        const path = urlcat('/api/v2/statistics/collection/:address', {\n            address: id,\n        })\n        const response = await fetchFromNFTScanV2<Response<NonFungibleCollectionOverview>>(chainId, path)\n        if (!response?.data) return\n        return response.data\n    }\n\n    async getAssetsBatch(chainId: ChainId, list: Array<{ contract_address: string; token_id: string }>) {\n        const path = urlcat('/api/v2/assets/batch', {})\n        const response = await fetchFromNFTScanV2<Response<EVM.Asset[]>>(chainId, path, {\n            method: 'POST',\n            body: JSON.stringify({\n                contract_address_with_token_id_list: list,\n            }),\n        })\n        if (!response?.data) return\n        return response.data.map((x) => createNonFungibleAsset(chainId, x))\n    }\n\n    async getCoinActivities(\n        chainId: ChainId,\n        id: string,\n        cursor: string,\n    ): Promise<{ content: Array<NonFungibleTokenActivity<ChainId, SchemaType>>; cursor: string } | undefined> {\n        const path = urlcat('/api/v2/transactions/:contract', {\n            contract: id,\n            cursor,\n            limit: 50,\n        })\n        const response = await fetchFromNFTScanV2<\n            Response<{\n                content: Array<NonFungibleTokenActivity<ChainId, SchemaType>>\n                next: string\n            }>\n        >(chainId, path)\n\n        if (!response?.data?.content) return\n\n        const batchQueryList = response?.data?.content.map((x) => ({\n            contract_address: x.contract_address,\n            token_id: x.token_id ?? '',\n        }))\n\n        const assetsBatchResponse = await this.getAssetsBatch(chainId, batchQueryList)\n\n        return {\n            cursor: response.data.next,\n            content: response.data.content.map((x) => {\n                const asset = assetsBatchResponse?.find((y) => y.tokenId === x.token_id)\n                return {\n                    ...x,\n                    imageURL: asset?.metadata?.imageURL ?? '',\n                    transaction_link: `${resolveNFTScanHostName(NetworkPluginID.PLUGIN_EVM, chainId)}/${x.hash}`,\n                    trade_token: getPaymentToken(chainId, { symbol: x.trade_symbol }),\n                }\n            }),\n        }\n    }\n\n    private async getCollectionTrending(\n        chainId: ChainId,\n        address: string,\n        range: EVM.CollectionTrendingRange,\n    ): Promise<EVM.CollectionTrendingRecord[]> {\n        const path = urlcat('/api/v2/statistics/collection/trending/:address', {\n            address,\n            time: range,\n        })\n        const response = await fetchFromNFTScanV2<Response<EVM.CollectionTrendingRecord[]>>(chainId, path)\n        return response?.data ?? EMPTY_LIST\n    }\n\n    getAllCoins(): Promise<TrendingAPI.Coin[]> {\n        return Promise.resolve(EMPTY_LIST)\n    }\n\n    async getCoinsByKeyword(chainId: ChainId, keyword: string): Promise<TrendingAPI.Coin[]> {\n        if (!keyword || !isValidChainId(chainId)) return EMPTY_LIST\n        const nfts = await this.searchNFTCollection(chainId, keyword)\n\n        const coins: TrendingAPI.Coin[] = nfts.map((nft) => ({\n            id: nft.contract_address,\n            name: nft.name,\n            symbol: nft.symbol,\n            type: TokenType.NonFungible,\n            address: nft.contract_address,\n            contract_address: nft.contract_address,\n            image_url: nft.logo_url,\n        }))\n        return coins.slice(0, COIN_RECOMMENDATION_SIZE)\n    }\n\n    getCoinInfoByAddress(address: string): Promise<TrendingAPI.CoinInfo | undefined> {\n        throw new Error('To be implemented.')\n    }\n\n    async getCoinPriceStats(\n        chainId: ChainId,\n        coinId: string,\n        currency: TrendingAPI.Currency,\n        days: number,\n    ): Promise<TrendingAPI.Stat[]> {\n        const range = resolveNFTScanRange(days)\n        const records = await this.getCollectionTrending(chainId, coinId, range)\n        return records.map((x) => [x.begin_timestamp, x.average_price])\n    }\n\n    async getCoinTrending(\n        chainId: ChainId,\n        /** address as id */ id: string,\n        currency: TrendingAPI.Currency,\n    ): Promise<TrendingAPI.Trending> {\n        const collection = await this.getCollection(chainId, id)\n        if (!collection) {\n            throw new Error(`NFTSCAN: Can not find token by id ${id}`)\n        }\n        const address = collection.contract_address\n        const [symbol, openseaStats, looksrareStats] = await Promise.all([\n            getContractSymbol(chainId, id),\n            OpenSea.getStats(address).catch(() => null),\n            LooksRare.getStats(address).catch(() => null),\n        ])\n        const tickers: TrendingAPI.Ticker[] = compact([\n            openseaStats\n                ? {\n                      logo_url: MaskIconURLs.open_sea_url().toString(),\n                      // TODO\n                      trade_url: `https://opensea.io/assets/ethereum/${address}`,\n                      market_name: NonFungibleMarketplace.OpenSea,\n                      volume_24h: openseaStats.volume24h,\n                      floor_price: openseaStats.floorPrice,\n                      price_symbol: collection.price_symbol,\n                      sales_24: openseaStats.count24h,\n                  }\n                : null,\n            looksrareStats\n                ? {\n                      logo_url: MaskIconURLs.looks_rare_url().toString(),\n                      trade_url: `https://looksrare.org/collections/${address}`,\n                      market_name: NonFungibleMarketplace.LooksRare,\n                      volume_24h: looksrareStats.volume24h,\n                      floor_price: looksrareStats.floorPrice,\n                      price_symbol: collection.price_symbol,\n                      sales_24: looksrareStats.count24h,\n                  }\n                : null,\n        ])\n\n        return {\n            lastUpdated: new Date().toJSON(),\n            dataProvider: SourceType.NFTScan,\n            contracts: [{ chainId, address, pluginID: NetworkPluginID.PLUGIN_EVM }],\n            currency,\n            coin: {\n                id,\n                name: collection.name,\n                symbol,\n                address,\n                contract_address: address,\n                type: TokenType.NonFungible,\n                description: collection.description,\n                image_url: collection.logo_url,\n                home_urls: compact([\n                    collection.website\n                        ? collection.website\n                        : `${resolveNFTScanHostName(NetworkPluginID.PLUGIN_EVM, chainId)}/${address}`,\n                ]),\n                nftscan_url: `${resolveNFTScanHostName(NetworkPluginID.PLUGIN_EVM, chainId)}/${address}`,\n                community_urls: [\n                    {\n                        type: 'twitter',\n                        link:\n                            collection.twitter &&\n                            (collection.twitter.startsWith('https://twitter.com/')\n                                ? collection.twitter\n                                : `https://twitter.com/${collection.twitter}`),\n                    },\n                    {\n                        type: 'facebook',\n                        // TODO format of facebook url is unknown\n                        link: null,\n                    },\n                    {\n                        type: 'discord',\n                        link: collection.discord,\n                    },\n                    {\n                        type: 'instagram',\n                        link:\n                            collection.instagram &&\n                            (collection.instagram.startsWith('https://instagram.com/')\n                                ? collection.instagram\n                                : `https://www.instagram.com/${collection.instagram}`),\n                    },\n                    {\n                        type: 'medium',\n                        link:\n                            collection.medium &&\n                            (collection.medium.startsWith('https://instagram.com/@')\n                                ? collection.medium\n                                : `https://medium.com/@${collection.medium}`),\n                    },\n                    {\n                        type: 'reddit',\n                        link: collection.reddit,\n                    },\n                    {\n                        type: 'telegram',\n                        link: collection.telegram,\n                    },\n                    {\n                        type: 'youtube',\n                        link: collection.youtube,\n                    },\n                    {\n                        type: 'github',\n                        link: collection.github,\n                    },\n                ].filter((x) => x.link) as TrendingAPI.CommunityUrls,\n            },\n            market: {\n                total_supply: collection.items_total,\n                current_price: collection.floor_price\n                    ? collection.floor_price.toString()\n                    : openseaStats?.floorPrice.toString() ?? '',\n                floor_price: collection.floor_price?.toString(),\n                owners_count: collection.owners_total,\n                price_symbol: collection.price_symbol || 'ETH',\n                royalty: collection.royalty?.toString(),\n            },\n            tickers,\n        }\n    }\n    getCoinMarketInfo(symbol: string): Promise<TrendingAPI.MarketInfo> {\n        throw new Error('Method not implemented.')\n    }\n}\nexport const NFTScanTrending_EVM = new NFTScanTrendingAPI_EVM()\n","import urlcat from 'urlcat'\nimport { compact } from 'lodash-es'\nimport { type NonFungibleCollectionOverview, SourceType, TokenType } from '@masknet/web3-shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport type { ChainId } from '@masknet/web3-shared-solana'\nimport type { Response } from '../types/index.js'\nimport { resolveNFTScanHostName } from '../helpers/utils.js'\nimport { fetchFromNFTScanV2 } from '../helpers/Solana.js'\nimport type { NonFungibleTokenAPI, TrendingAPI } from '../../entry-types.js'\n\nclass NFTScanTrendingAPI_Solana implements TrendingAPI.Provider<ChainId> {\n    private async getCollection(chainId: ChainId, id: string): Promise<NonFungibleTokenAPI.Collection | undefined> {\n        const path = urlcat('/api/sol/collections/:collection', {\n            collection: id,\n        })\n        const response = await fetchFromNFTScanV2<Response<NonFungibleTokenAPI.Collection>>(chainId, path)\n        return response?.data\n    }\n\n    async getCollectionOverview(chainId: ChainId, id: string): Promise<NonFungibleCollectionOverview | undefined> {\n        const path = urlcat('/api/sol/statistics/ranking/trade', {})\n        const response = await fetchFromNFTScanV2<Response<NonFungibleCollectionOverview[]>>(chainId, path)\n        if (!response?.data) return\n        return response.data.find((x) => x.collection === id)\n    }\n\n    async getCoinActivities(\n        chainId: ChainId,\n        id: string,\n        cursor: string,\n    ): Promise<{ content: Web3Helper.NonFungibleTokenActivityAll[]; cursor: string } | undefined> {\n        const path = urlcat('/api/sol/transactions/collection/:collection', {\n            collection: id,\n            cursor,\n            limit: 50,\n        })\n\n        const response = await fetchFromNFTScanV2<\n            Response<{\n                content: Web3Helper.NonFungibleTokenActivityAll[]\n                next: string\n            }>\n        >(chainId, path)\n\n        if (!response?.data?.content) return\n\n        return {\n            cursor: response.data.next,\n            content: response.data.content.map((x) => {\n                return {\n                    ...x,\n                    imageURL: '',\n                    transaction_link: `${resolveNFTScanHostName(NetworkPluginID.PLUGIN_SOLANA, chainId)}/${x.hash}`,\n                }\n            }),\n        }\n    }\n\n    getAllCoins(): Promise<TrendingAPI.Coin[]> {\n        throw new Error('To be implemented.')\n    }\n\n    async getCoinsByKeyword(chainId: ChainId, keyword: string): Promise<TrendingAPI.Coin[]> {\n        throw new Error('To be implemented.')\n    }\n\n    getCoinInfoByAddress(address: string): Promise<TrendingAPI.CoinInfo | undefined> {\n        throw new Error('To be implemented.')\n    }\n\n    async getCoinPriceStats(\n        chainId: ChainId,\n        coinId: string,\n        currency: TrendingAPI.Currency,\n        days: number,\n    ): Promise<TrendingAPI.Stat[]> {\n        throw new Error('Method not implemented.')\n    }\n\n    async getCoinTrending(\n        chainId: ChainId,\n        /** address as id */ id: string,\n        currency: TrendingAPI.Currency,\n    ): Promise<TrendingAPI.Trending> {\n        const collection = await this.getCollection(chainId, id)\n        if (!collection) throw new Error(`NFTSCAN: Can not find token by id ${id}`)\n        const address = collection.contract_address\n        return {\n            lastUpdated: new Date().toJSON(),\n            dataProvider: SourceType.NFTScan,\n            contracts: [{ chainId, address, pluginID: NetworkPluginID.PLUGIN_SOLANA }],\n            currency,\n            coin: {\n                id: collection.name,\n                name: collection.name,\n                symbol: '',\n                address,\n                contract_address: address,\n                type: TokenType.NonFungible,\n                description: collection.description,\n                image_url: collection.logo_url,\n                home_urls: compact([\n                    collection.website\n                        ? collection.website\n                        : `${resolveNFTScanHostName(NetworkPluginID.PLUGIN_SOLANA, chainId)}/${address}`,\n                ]),\n                nftscan_url: `${resolveNFTScanHostName(NetworkPluginID.PLUGIN_SOLANA, chainId)}/${address}`,\n                community_urls: [\n                    {\n                        type: 'twitter',\n                        link:\n                            collection.twitter &&\n                            (collection.twitter.startsWith('https://twitter.com/')\n                                ? collection.twitter\n                                : `https://twitter.com/${collection.twitter}`),\n                    },\n                    {\n                        type: 'facebook',\n                        // TODO format of facebook url is unknown\n                        link: null,\n                    },\n                    {\n                        type: 'discord',\n                        link: collection.discord,\n                    },\n                    {\n                        type: 'instagram',\n                        link:\n                            collection.instagram &&\n                            (collection.instagram.startsWith('https://instagram.com/')\n                                ? collection.instagram\n                                : `https://www.instagram.com/${collection.instagram}`),\n                    },\n                    {\n                        type: 'medium',\n                        link:\n                            collection.medium &&\n                            (collection.medium.startsWith('https://instagram.com/@')\n                                ? collection.medium\n                                : `https://medium.com/@${collection.medium}`),\n                    },\n                    {\n                        type: 'reddit',\n                        link: collection.reddit,\n                    },\n                    {\n                        type: 'telegram',\n                        link: collection.telegram,\n                    },\n                    {\n                        type: 'youtube',\n                        link: collection.youtube,\n                    },\n                    {\n                        type: 'github',\n                        link: collection.github,\n                    },\n                ].filter((x) => x.link) as TrendingAPI.CommunityUrls,\n            },\n            market: {\n                total_supply: collection.items_total,\n                current_price: collection.floor_price.toString(),\n                floor_price: collection.floor_price.toString(),\n                highest_price: undefined,\n                owners_count: collection.owners_total,\n                price_symbol: collection.price_symbol || 'SOL',\n                royalty: collection.royalty?.toString(),\n                total_24h: undefined,\n                volume_24h: undefined,\n                average_volume_24h: undefined,\n                volume_all: undefined,\n            },\n            tickers: [],\n        }\n    }\n\n    getCoinMarketInfo(symbol: string): Promise<TrendingAPI.MarketInfo> {\n        throw new Error('Method not implemented.')\n    }\n}\nexport const NFTScanTrending_Solana = new NFTScanTrendingAPI_Solana()\n","import { createLookupTableResolver, Days, NetworkPluginID } from '@masknet/shared-base'\nimport { ChainId } from '@masknet/web3-shared-evm'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { EVM } from '../types/index.js'\n\nexport function resolveNFTScanHostName(pluginId: NetworkPluginID, chainId: Web3Helper.ChainIdAll) {\n    if (pluginId === NetworkPluginID.PLUGIN_SOLANA) return 'https://solana.nftscan.com'\n\n    switch (chainId) {\n        case ChainId.Mainnet:\n            return 'https://www.nftscan.com'\n        case ChainId.Matic:\n            return 'https://polygon.nftscan.com'\n        case ChainId.BSC:\n            return 'https://bnb.nftscan.com'\n        case ChainId.Arbitrum:\n            return 'https://arbitrum.nftscan.com'\n        case ChainId.Avalanche:\n            return 'https://avax.nftscan.com'\n        case ChainId.Optimism:\n            return 'https://optimism.nftscan.com'\n        case ChainId.xDai:\n            return 'https://gnosis.nftscan.com'\n        case ChainId.Moonbeam:\n            return 'https://moonbeam.nftscan.com'\n        default:\n            return ''\n    }\n}\n\nexport const resolveNFTScanRange = createLookupTableResolver<Days, EVM.CollectionTrendingRange>(\n    {\n        [Days.MAX]: 'all',\n        [Days.ONE_DAY]: '1d',\n        [Days.ONE_WEEK]: '7d',\n        [Days.ONE_MONTH]: '30d',\n        [Days.THREE_MONTHS]: '90d',\n        [Days.ONE_YEAR]: '1y',\n    },\n    // NFTScan will discard range unrecognized range\n    () => '1d',\n)\n\nexport enum NonFungibleMarketplace {\n    OpenSea = 'OpenSea',\n    LooksRare = 'LooksRare',\n}\n","import type { PageIndicator } from '@masknet/shared-base'\nimport urlcat from 'urlcat'\nimport { fetchJSON } from '../helpers/fetchJSON.js'\n\ntype ReportStatus = 'reporting' | 'approved' | 'rejected'\ntype ReportSource = 'firefly' | 'mask-network'\n\nexport interface ReportParams {\n    collection_id: string\n    status: ReportStatus\n    source: ReportSource\n}\n\nexport interface ReportRecord {\n    collection_id: string\n    status: ReportStatus\n    /** @example \"2023-08-10T19:25:54Z\" */\n    create_at: string\n    /** @example \"2023-08-10T19:25:54Z\" */\n    update_at: string\n}\n\n/**\n * If not provided, the default status and source are both set to \"all\"\n */\ninterface GetReportsParams extends Partial<ReportParams> {\n    page?: number\n    page_size?: number\n}\n\nexport type SpamResponse<T> =\n    | {\n          code: 200\n          data: T\n          cursor: number\n          limit: number\n      }\n    | {\n          code: 400\n          message: string\n          data: null\n      }\n\nconst ENDPOINT = 'http://nfttransferlb-152229038.us-east-1.elb.amazonaws.com/v1/nfts/report/spam'\nconst PAGE_SIZE = 10\nexport class NFTSpam {\n    static async report(params: ReportParams) {\n        const res = await fetchJSON<SpamResponse<ReportRecord>>(ENDPOINT, {\n            method: 'post',\n            body: JSON.stringify(params),\n        })\n        return res\n    }\n    static async getReports(params: GetReportsParams, indicator?: PageIndicator) {\n        const url = urlcat(ENDPOINT, {\n            params,\n            page: params.page ?? indicator?.index,\n            page_size: params.page_size ?? PAGE_SIZE,\n        })\n        return fetchJSON<SpamResponse<ReportRecord[]>>(url)\n    }\n}\n","import { fetchCachedJSON } from '../../helpers/fetchJSON.js'\nimport type { SnapshotBaseAPI } from '../../entry-types.js'\n\nasync function fetchFromGraphql<T>(query: string) {\n    const { data } = await fetchCachedJSON<{ data: T }>(\n        `https://cors-next.r2d2.to/?https://hub.snapshot.org/graphql?query=${encodeURIComponent(query)}`,\n        {\n            cache: 'default',\n        },\n    )\n    return data\n}\n\nexport class Snapshot {\n    static async getProposalListBySpace(\n        spaceId: string,\n        strategyName?: string,\n    ): Promise<SnapshotBaseAPI.SnapshotProposal[]> {\n        const queryProposal = `\n            query {\n                proposals (\n                    first: 1000,\n                    skip: 0,\n                    where: {\n                        space_in: [\"${spaceId}\"],\n                        state: \"all\"\n                    },\n                    orderBy: \"created\",\n                    orderDirection: desc\n                ) {\n                id\n                title\n                body\n                choices\n                start\n                end\n                snapshot\n                state\n                scores\n                votes\n                scores_state\n                strategies {\n                    network\n                    params\n                }\n                scores_by_strategy\n                scores_total\n                scores_updated\n                author\n                space {\n                    id\n                    name\n                }\n                }\n            }\n        `\n\n        const { proposals } = await fetchFromGraphql<{ proposals: SnapshotBaseAPI.SnapshotProposal[] }>(queryProposal)\n\n        return proposals.map((proposal) => {\n            const validStrategy = proposal.strategies.find((x) => {\n                return !x.params.symbol?.includes('delegated')\n            })\n\n            const choicesWithScore = proposal.choices\n                .map((x, i) => ({\n                    choice: x,\n                    score: proposal.scores[i],\n                }))\n                .sort((a, b) => (b.score ?? 0) - (a.score ?? 0))\n\n            return {\n                ...proposal,\n                strategyName: validStrategy?.params.symbol ?? strategyName ?? proposal.space?.name,\n                choicesWithScore,\n            }\n        })\n    }\n\n    static async getSpace(spaceId: string) {\n        const querySpace = `\n            query {\n                space(id: \"${spaceId}\") {\n                    members\n                    symbol\n                    followersCount\n                }\n            }\n        `\n\n        const { space } = await fetchFromGraphql<{ space: SnapshotBaseAPI.SnapshotSpace }>(querySpace)\n\n        return space\n    }\n\n    static async getCurrentAccountVote(proposalId: string, totalVotes: number, account: string) {\n        const allSettled = await Promise.allSettled(\n            Array.from(Array(Math.ceil(totalVotes / 1000))).map(async (x, i) => {\n                const queryCurrentAccountVote = `\n                    query {\n                        votes (\n                            first: 1000\n                            skip: ${i * 1000}\n                            where: {\n                                proposal: \"${proposalId}\",\n                                voter:\"${account}\"\n                            }\n                            orderBy: \"created\",\n                            orderDirection: desc\n                        ) {\n                            choice\n                        }\n                    }\n                `\n\n                const { votes } = await fetchFromGraphql<{ votes: Array<{ choice: number }> }>(queryCurrentAccountVote)\n\n                return votes[0]\n            }),\n        )\n\n        const result = allSettled\n            .flatMap((x) => (x.status === 'fulfilled' ? x.value : undefined))\n            .filter(Boolean) as Array<{ choice: number }>\n\n        return result.length ? result[0] : undefined\n    }\n\n    static async getFollowingSpaceIdList(account: string) {\n        if (!account) return []\n\n        const query = `\n            query {\n                follows(\n                    first: 1000,\n                    where: {\n                        follower: \"${account}\"\n                    }\n                ) {\n                    space {\n                        id\n                    }\n                }\n            }\n        `\n\n        const { follows } = await fetchFromGraphql<{ follows: Array<{ space: { id: string } }> }>(query)\n\n        return follows.map((x) => x.space.id)\n    }\n}\n","import { type ChainId } from '@masknet/web3-shared-evm'\nimport { REDPACKET_API_URL, NFT_REDPACKET_API_URL } from '../constants.js'\nimport { ChainResolver } from '../../Web3/EVM/apis/ResolverAPI.js'\nimport { fetchJSON } from '../../helpers/fetchJSON.js'\nimport type { NftRedPacketJSONPayload, RedPacketJSONPayloadFromChain } from '../../entry-types.js'\n\ntype CreateSuccessRecord = {\n    creator: string\n    creation_time: string\n    duration: string\n    block_number: number\n    message: string\n    shares: string\n    name: string\n    token: {\n        address: string\n    }\n    total: string\n    txid: string\n    is_random: boolean\n    id: string\n}\n\ntype NFTRedpacketRecord = {\n    txid: string\n    shares: number\n    token_ids: string[]\n    token_contract: {\n        address: string\n    }\n    duration: number\n    creation_time: number\n    creator: {\n        address: string\n    }\n    name: string\n    message: string\n    id: string\n}\n\nexport class TheGraphRedPacket {\n    static async getHistories(chainId: ChainId, senderAddress: string, contractAddress: string) {\n        if (!senderAddress || !contractAddress) return\n\n        const response = await fetchJSON<{\n            data: {\n                redPackets: CreateSuccessRecord[]\n            }\n        }>(REDPACKET_API_URL, {\n            method: 'POST',\n            body: JSON.stringify({\n                query: `{\n                    redPackets(where: { creator_address: \"${senderAddress}\" }) {\n                          creator {\n                              address\n                          }\n                          message\n                          block_number,\n                          creation_time,\n                          duration,\n                          shares,\n                          name,\n                          token {\n                              address\n                          },\n                          total,\n                          txid,\n                          is_random\n                          id,\n                      }\n                  }`,\n            }),\n        })\n\n        if (!response?.data?.redPackets?.length) return\n        return response.data.redPackets.map(\n            (x) =>\n                ({\n                    contract_address: contractAddress,\n                    txid: x.txid,\n                    id: x.id,\n                    chainId,\n                    shares: Number(x.shares),\n                    total: x.total,\n                    duration: Number(x.duration) * 1000,\n                    block_number: Number(x.block_number),\n                    contract_version: 4,\n                    network: ChainResolver.networkType(chainId),\n                    token_address: x.token.address,\n                    sender: {\n                        address: senderAddress,\n                        name: x.name,\n                        message: x.message,\n                    },\n                    rpid: '',\n                    creation_time: Number(x.creation_time),\n                    total_remaining: '',\n                    password: '',\n                    is_random: x.is_random,\n                }) as RedPacketJSONPayloadFromChain,\n        )\n    }\n\n    static async getNFTHistories(chainId: ChainId, senderAddress: string, contractAddress: string) {\n        if (!senderAddress || !contractAddress) return\n\n        const response = await fetchJSON<{\n            data: {\n                nftredPackets: NFTRedpacketRecord[]\n            }\n        }>(NFT_REDPACKET_API_URL, {\n            method: 'POST',\n            body: JSON.stringify({\n                query: `{\n                    nftredPackets(where: { creator_address: \"${senderAddress}\" }) {\n                        id\n                        txid\n                        shares\n                        token_ids\n                        token_contract {\n                            address\n                        }\n                        duration\n                        creation_time\n                        creator {\n                            address\n                        }\n                        name\n                        message\n                        id\n                    }\n                }`,\n            }),\n        })\n\n        if (!response?.data?.nftredPackets?.length) return\n        return response.data.nftredPackets.map(\n            (x) =>\n                ({\n                    id: x.id,\n                    chainId,\n                    contract_address: contractAddress,\n                    txid: x.txid,\n                    contract_version: 1,\n                    shares: x.shares,\n                    network: ChainResolver.networkType(chainId),\n                    token_address: x.token_contract.address,\n                    sender: {\n                        address: x.creator.address,\n                        name: x.name,\n                        message: x.message,\n                    },\n                    duration: x.duration * 1000,\n                    token_ids: x.token_ids,\n                    // #region Retrieve at NFT History List Item.\n                    rpid: '',\n                    creation_time: 0,\n                    // #endregion\n                    // #region Retrieve from database\n                    password: '',\n                    // #endregion\n                }) as NftRedPacketJSONPayload,\n        )\n    }\n}\n","export const API_URL = 'https://api.thegraph.com/subgraphs/name/ensdomains/ens'\nexport const REDPACKET_API_URL = 'https://api.thegraph.com/subgraphs/name/dimensiondev/mask-red-packet-polygon'\nexport const NFT_REDPACKET_API_URL = 'https://api.thegraph.com/subgraphs/name/dimensiondev/mask-nft-red-packet-polygon'\n","import { SourceType } from '@masknet/web3-shared-base'\nimport { ChainId } from '@masknet/web3-shared-evm'\nimport { ChainId as SolanaChainId } from '@masknet/web3-shared-solana'\nimport type { TrendingAPI } from '../entry-types.js'\n\n// the size of coins to recommend when users search a keyword\nexport const COIN_RECOMMENDATION_SIZE = 10\n\n// all coins stay after the valid top rank will be ignored.\nexport const VALID_TOP_RANK = 5000\n\nexport const CURRENCIES_MAP: Record<SourceType, undefined | TrendingAPI.Currency[]> = {\n    [SourceType.CoinGecko]: [\n        {\n            id: 'usd',\n            name: 'USD',\n            symbol: '$',\n            description: 'Unite State Dollar',\n        },\n    ],\n    [SourceType.CoinMarketCap]: [\n        {\n            id: '2781',\n            name: 'USD',\n            symbol: '$',\n            description: 'Unite State Dollar',\n        },\n    ],\n    [SourceType.NFTScan]: [\n        {\n            id: 'eth',\n            chainId: ChainId.Mainnet,\n            name: '\\u039E',\n            symbol: '\\u039E',\n            description: 'Ethereum',\n        },\n        {\n            id: 'Matic',\n            chainId: ChainId.Matic,\n            name: 'Matic',\n            symbol: 'Matic',\n            description: 'Matic',\n        },\n        {\n            id: 'matic',\n            chainId: ChainId.BSC,\n            name: 'BNB',\n            symbol: 'BNB',\n            description: 'BNB',\n        },\n        {\n            id: 'arbitrum',\n            chainId: ChainId.Arbitrum,\n            name: 'Arbitrum',\n            symbol: 'Arbitrum',\n            description: 'Arbitrum',\n        },\n        {\n            id: 'solana',\n            chainId: SolanaChainId.Mainnet,\n            name: '\\u25CE',\n            symbol: '\\u25CE',\n            description: 'Solana',\n        },\n        {\n            id: 'optimism',\n            chainId: ChainId.Optimism,\n            name: 'Optimism',\n            symbol: 'Optimism',\n            description: 'Optimism',\n        },\n        {\n            id: 'avalanche',\n            chainId: ChainId.Avalanche,\n            name: 'Avalanche',\n            symbol: 'Avalanche',\n            description: 'Avalanche',\n        },\n        {\n            id: 'moonbeam',\n            chainId: ChainId.Moonbeam,\n            name: 'Moonbeam',\n            symbol: 'Moonbeam',\n            description: 'Moonbeam',\n        },\n    ],\n    [SourceType.UniswapInfo]: undefined,\n    [SourceType.X2Y2]: undefined,\n    [SourceType.Chainbase]: undefined,\n    [SourceType.Zerion]: undefined,\n    [SourceType.Rarible]: undefined,\n    [SourceType.OpenSea]: undefined,\n    [SourceType.Alchemy_EVM]: undefined,\n    [SourceType.LooksRare]: undefined,\n    [SourceType.Zora]: undefined,\n    [SourceType.Gem]: undefined,\n    [SourceType.GoPlus]: undefined,\n    [SourceType.Rabby]: undefined,\n    [SourceType.Approval]: undefined,\n    [SourceType.R2D2]: undefined,\n    [SourceType.DeBank]: undefined,\n    [SourceType.Flow]: undefined,\n    [SourceType.Solana]: undefined,\n    [SourceType.RSS3]: undefined,\n    [SourceType.Alchemy_FLOW]: undefined,\n    [SourceType.MagicEden]: undefined,\n    [SourceType.Element]: undefined,\n    [SourceType.Solsea]: undefined,\n    [SourceType.Solanart]: undefined,\n    [SourceType.RaritySniper]: undefined,\n    [SourceType.TraitSniper]: undefined,\n    [SourceType.CF]: undefined,\n    [SourceType.OKX]: undefined,\n    [SourceType.Uniswap]: undefined,\n    [SourceType.NFTX]: undefined,\n    [SourceType.Etherscan]: undefined,\n    [SourceType.CryptoPunks]: undefined,\n    [SourceType.SimpleHash]: undefined,\n}\n","import type { Web3Helper } from '@masknet/web3-helpers'\nimport { SourceType } from '@masknet/web3-shared-base'\nimport { CURRENCIES_MAP } from './constants.js'\nimport MIRRORED_TOKENS from './mirrored_tokens.json'\nimport type { TrendingAPI } from '../entry-types.js'\n\nexport function isMirroredKeyword(symbol: string) {\n    return MIRRORED_TOKENS.map((x) => x.symbol).some((x) => x.toUpperCase() === symbol.toUpperCase())\n}\n\nexport function getCommunityLink(links: string[]): TrendingAPI.CommunityUrls {\n    return links.map((x) => {\n        if (x.includes('twitter')) return { type: 'twitter', link: x }\n        if (x.includes('t.me')) return { type: 'telegram', link: x }\n        if (x.includes('facebook')) return { type: 'facebook', link: x }\n        if (x.includes('discord')) return { type: 'discord', link: x }\n        if (x.includes('reddit')) return { type: 'reddit', link: x }\n        return { type: 'other', link: x }\n    })\n}\n\nexport function getCurrency(chainId: Web3Helper.ChainIdAll, dataProvider: SourceType | undefined) {\n    if (!dataProvider) return undefined\n    const currencies = CURRENCIES_MAP[dataProvider]\n    if (!currencies) return\n    return chainId && dataProvider === SourceType.NFTScan\n        ? currencies.find((x) => x.chainId === chainId)\n        : CURRENCIES_MAP[dataProvider]?.[0]\n}\n","export const WEB3_BIO_ROOT_URL = 'https://cors-next.r2d2.to?https://web3.bio/api/profile'\n","import urlcat from 'urlcat'\nimport { EMPTY_LIST, createBindingProofFromProfileQuery, NextIDPlatform, type BindingProof } from '@masknet/shared-base'\nimport { fetchCachedJSON } from '../helpers/fetchJSON.js'\nimport { WEB3_BIO_ROOT_URL } from './constants.js'\nimport type { Web3BioProfile } from './types.js'\n\nexport class Web3Bio {\n    static fetchFromWeb3Bio<T>(request: Request | RequestInfo, init?: RequestInit) {\n        return fetchCachedJSON<T>(request, init)\n    }\n\n    static async queryProfilesByAddress(address: string) {\n        const { links = EMPTY_LIST } = await this.fetchFromWeb3Bio<Web3BioProfile>(\n            urlcat(WEB3_BIO_ROOT_URL, '/ens/:address', { address }),\n        )\n\n        const BindingProofs = Object.entries(links)\n            .map((x) => {\n                const platform = x[0] as NextIDPlatform\n                if (!Object.values(NextIDPlatform).includes(platform)) return\n                const { handle, link } = x[1]\n                return createBindingProofFromProfileQuery(platform, handle, handle, link)\n            })\n            .filter(Boolean) as BindingProof[]\n\n        return BindingProofs\n    }\n}\n","import type { FungibleToken } from '@masknet/web3-shared-base'\nimport { ChainId, type ChainIdOptionalRecord, type SchemaType } from '../types/index.js'\nimport { createERC20Tokens } from '../helpers/token.js'\nimport { CHAIN_DESCRIPTORS } from './descriptors.js'\n\nexport type ERC20AgainstToken = Readonly<ChainIdOptionalRecord<Array<FungibleToken<ChainId, SchemaType.ERC20>>>>\n\nexport const APE = createERC20Tokens('APE_ADDRESS', 'ApeCoin', 'APE', 18)\nexport const USDC = createERC20Tokens('USDC_ADDRESS', 'USC Coin', 'USDC', 6)\nexport const USDCe = createERC20Tokens('USDC_ADDRESS', 'USD Coin', 'USDCe', 6)\nexport const USDT = createERC20Tokens('USDT_ADDRESS', 'Tether USD', 'USDT', 6)\nexport const USDTe = createERC20Tokens('USDT_ADDRESS', 'Tether USD', 'USDT.e', 6)\nexport const fUSDT = createERC20Tokens('fUSDT_ADDRESS', 'Frapped USDT', 'fUSDT', 6)\nexport const HUSD = createERC20Tokens('HUSD_ADDRESS', 'Huobi USD', 'HUSD', 6)\nexport const BUSD = createERC20Tokens('BUSD_ADDRESS', 'Huobi USD', 'BUSD', 6)\nexport const COMP = createERC20Tokens('COMP_ADDRESS', 'Compound', 'COMP', 18)\nexport const MKR = createERC20Tokens('MKR_ADDRESS', 'Maker', 'MKR', 18)\nexport const DAI = createERC20Tokens('DAI_ADDRESS', 'Dai Stablecoin', 'DAI', 18)\nexport const DAIe = createERC20Tokens('DAI_ADDRESS', 'Dai Stablecoin', 'DAI.e', 18)\nexport const AMPL = createERC20Tokens('AMPL_ADDRESS', 'Ampleforth', 'AMPL', 18)\nexport const OKB = createERC20Tokens('OKB_ADDRESS', 'Ampleforth', 'OKB', 18)\nexport const UST = createERC20Tokens('UST_ADDRESS', 'Wrapped UST Token', 'UST', 18)\nexport const EASY = createERC20Tokens('EASY_ADDRESS', 'EASY', 'EASY', 18)\nexport const eUSDC = createERC20Tokens('eUSDC_ADDRESS', 'Easy USDC', 'eUSDC', 18)\nexport const eUSDT = createERC20Tokens('eUSDT_ADDRESS', 'Easy USDT', 'eUSDT', 18)\nexport const eDAI = createERC20Tokens('eDAI_ADDRESS', 'Easy DAI', 'eDAI', 18)\nexport const sUSD = createERC20Tokens('sUSD_ADDRESS', 'Synth sUSD', 'sUSD', 18)\nexport const UNITOKEN = createERC20Tokens('UNITOKEN_ADDRESS', 'Uniswap', 'UNI', 18)\nexport const TT01 = createERC20Tokens('TT01_ADDRESS', 'Test Token 01', 'TT01', 18)\nexport const TT02 = createERC20Tokens('TT02_ADDRESS', 'Test Token 02', 'TT02', 18)\nexport const TATR = createERC20Tokens('TART_ADDRESS', 'TATR tech', 'TATR', 18)\nexport const ETHER = createERC20Tokens('ETHER_ADDRESS', 'Ether', 'ETH', 18)\nexport const QUICK = createERC20Tokens('QUICK_ADDRESS', 'Quickswap', 'QUICK', 18)\nexport const WANNA = createERC20Tokens('WANNA_ADDRESS', 'Wannaswap', 'WANNA', 18)\nexport const WBTC = createERC20Tokens('WBTC_ADDRESS', 'Wrapped Bitcoin', 'WBTC', 18)\nexport const WBTCe = createERC20Tokens('WBTC_ADDRESS', 'Wrapped Bitcoin', 'WBTCe', 18)\nexport const IGG = createERC20Tokens('IGG_ADDRESS', 'IG Gold', 'IGG', 18)\nexport const OM = createERC20Tokens('OM_ADDRESS', 'OM Token', 'OM', 18)\nexport const SUSHI = createERC20Tokens('SUSHI_ADDRESS', 'SushiToken', 'SUSHI', 18)\nexport const RUNE = createERC20Tokens('RUNE_ADDRESS', 'RUNE.ETH', 'RUNE', 18)\nexport const YFI = createERC20Tokens('YFI_ADDRESS', 'Yearn', 'YFI', 18)\nexport const BTCB = createERC20Tokens('BTCB_ADDRESS', 'Binance BTC', 'BTCB', 18)\nexport const CAKE = createERC20Tokens('CAKE_ADDRESS', 'PancakeSwap Token', 'CAKE', 18)\nexport const maUSDC = createERC20Tokens('maUSDC_ADDRESS', 'Matic Aave interest bearing USDC', 'maUSDC', 6)\nexport const NFTX = createERC20Tokens('NFTX_ADDRESS', 'NFTX', 'NFTX', 18)\nexport const STETH = createERC20Tokens('stETH_ADDRESS', 'stakedETH', 'stETH', 18)\nexport const CUSD = createERC20Tokens('cUSD_ADDRESS', 'Celo Dollar', 'cUSD', 18)\nexport const CEUR = createERC20Tokens('cEUR_ADDRESS', 'Celo Euro', 'cEUR', 18)\nexport const JOE = createERC20Tokens('JOE_ADDRESS', 'JoeToken', 'JOE', 18)\nexport const PNG = createERC20Tokens('PNG_ADDRESS', 'Pangolin', 'PNG', 18)\nexport const VERSA = createERC20Tokens('VERSA_ADDRESS', 'Versa Finance', 'VERSA', 18)\nexport const VIPER = createERC20Tokens('VIPER_ADDRESS', 'Viper', 'VIPER', 18)\nexport const OPENX = createERC20Tokens('OPENX_ADDRESS', 'OpenSwap Token', 'OpenX', 18)\nexport const JEWEL = createERC20Tokens('JEWEL_ADDRESS', 'Jewels', 'JEWEL', 18)\nexport const YUMI = createERC20Tokens('YUMI_ADDRESS', 'YumiSwap Token', 'YUMI', 18)\nexport const xYUMI = createERC20Tokens('xYUMI_ADDRESS', 'Yumi Staking Token', 'xYUMI', 18)\nexport const OP = createERC20Tokens('OP_ADDRESS', 'Optimism', 'OP', 18)\nexport const RARI = createERC20Tokens('RARI_ADDRESS', 'Rarible', 'RARI', 18)\n\nconst getNativeCurrency = (chainId: ChainId) => {\n    return CHAIN_DESCRIPTORS.find((x) => x.chainId === chainId)?.nativeCurrency\n}\n\nexport const WNATIVE = createERC20Tokens(\n    'WNATIVE_ADDRESS',\n    (chainId) => `Wrapped ${getNativeCurrency(chainId)?.name ?? 'Ether'}`,\n    (chainId) => `W${getNativeCurrency(chainId)?.symbol ?? 'ETH'}`,\n    18,\n)\n\nexport const WNATIVE_ONLY: ERC20AgainstToken = {\n    [ChainId.Mainnet]: [WNATIVE[ChainId.Mainnet]],\n    [ChainId.Ropsten]: [WNATIVE[ChainId.Ropsten]],\n    [ChainId.Rinkeby]: [WNATIVE[ChainId.Rinkeby]],\n    [ChainId.Kovan]: [WNATIVE[ChainId.Kovan]],\n    [ChainId.Gorli]: [WNATIVE[ChainId.Gorli]],\n    [ChainId.BSC]: [WNATIVE[ChainId.BSC]],\n    [ChainId.BSCT]: [WNATIVE[ChainId.BSCT]],\n    [ChainId.Matic]: [WNATIVE[ChainId.Matic]],\n    [ChainId.Mumbai]: [WNATIVE[ChainId.Mumbai]],\n    [ChainId.Arbitrum]: [WNATIVE[ChainId.Arbitrum]],\n    [ChainId.Arbitrum_Rinkeby]: [WNATIVE[ChainId.Arbitrum_Rinkeby]],\n    [ChainId.xDai]: [WNATIVE[ChainId.xDai]],\n    [ChainId.Avalanche]: [WNATIVE[ChainId.Avalanche]],\n    [ChainId.Avalanche_Fuji]: [WNATIVE[ChainId.Avalanche_Fuji]],\n    [ChainId.Celo]: [WNATIVE[ChainId.Celo]],\n    [ChainId.Fantom]: [WNATIVE[ChainId.Fantom]],\n    [ChainId.Aurora]: [WNATIVE[ChainId.Aurora]],\n    [ChainId.Aurora_Testnet]: [WNATIVE[ChainId.Aurora_Testnet]],\n    [ChainId.Optimism]: [WNATIVE[ChainId.Optimism]],\n    [ChainId.Optimism_Goerli]: [WNATIVE[ChainId.Optimism_Goerli]],\n    [ChainId.Astar]: [WNATIVE[ChainId.Astar]],\n    [ChainId.Scroll]: [WNATIVE[ChainId.Scroll]],\n}\n","import type { Transaction as Web3Transaction, TransactionReceipt as Web3TransactionReceipt } from 'web3-core'\nimport type { JsonRpcPayload, JsonRpcResponse } from 'web3-core-helpers'\nimport type { NonPayableTransactionObject, PayableTransactionObject } from '@masknet/web3-contracts/types/types.js'\nimport type { Web3State as Web3StateShared, GasOptionType } from '@masknet/web3-shared-base'\nimport type { Web3 } from '../libs/Web3.js'\n\nexport type ChainIdOptionalRecord<T> = { [k in ChainId]?: T }\n\n// Learn more at: https://eips.ethereum.org/EIPS/eip-3085\nexport interface EIP3085Descriptor {\n    chainId: string\n    blockExplorerUrls?: string[]\n    chainName?: string\n    iconUrls?: string[]\n    nativeCurrency?: {\n        name: string\n        symbol: string\n        decimals: number\n    }\n    rpcUrls?: string[]\n}\n\n// Learn more about ethereum ChainId https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md\nexport enum ChainId {\n    // Mainnet\n    Mainnet = 1,\n    Ropsten = 3,\n    Rinkeby = 4,\n    Gorli = 5,\n    Kovan = 42,\n\n    // Base\n    Base = 8453,\n    Base_Goerli = 84531,\n\n    // BSC\n    BSC = 56,\n    BSCT = 97,\n\n    // Matic\n    Matic = 137,\n    Mumbai = 80001,\n\n    // Arbitrum\n    Arbitrum = 42161,\n    Arbitrum_Rinkeby = 421611,\n    Arbitrum_Nova = 42170,\n\n    // xDai\n    xDai = 100,\n\n    // Avalanche\n    Avalanche = 43114,\n    Avalanche_Fuji = 43113,\n\n    // Celo\n    Celo = 42220,\n\n    // Fantom\n    Fantom = 250,\n\n    // Aurora\n    Aurora = 1313161554,\n    Aurora_Testnet = 1313161555,\n\n    // Fuse\n    Fuse = 122,\n\n    // Boba\n    Boba = 288,\n\n    // Metis\n    Metis = 1088,\n\n    // Optimism\n    Optimism = 10,\n    Optimism_Kovan = 69,\n    Optimism_Goerli = 420,\n\n    // Conflux\n    Conflux = 1030,\n\n    // Astar\n    Astar = 592,\n\n    Scroll = 534352,\n\n    ZKSync_Alpha_Testnet = 280,\n\n    Crossbell = 3737,\n\n    Moonbeam = 1284,\n\n    Pulse = 369,\n\n    Klaytn = 8217,\n\n    Harmony = 1666600000,\n\n    Moonriver = 1285,\n\n    Cronos = 25,\n\n    Brise = 32520,\n\n    Canto = 7700,\n\n    DFK = 53935,\n\n    Doge = 2000,\n\n    Evmos = 9001,\n\n    HuobiEco = 128,\n\n    IoTex = 4689,\n\n    Kava = 2222,\n\n    Kcc = 321,\n\n    Milkomeda = 2001,\n\n    OKXChain = 66,\n\n    Palm = 11297108109,\n\n    RSK = 30,\n\n    SmartBitcoinCash = 10000,\n\n    Shiden = 336,\n\n    SongbirdCanary = 19,\n\n    Step = 1234,\n\n    Telos = 40,\n\n    Wanchain = 888,\n\n    /** BitTorrent Chain Mainnet */\n    BitTorrent = 199,\n\n    // For any chains not supported yet.\n    Invalid = 0,\n}\n\nexport enum AddressType {\n    ExternalOwned = 1,\n    Contract = 2,\n}\n\nexport enum SchemaType {\n    Native = 1,\n    ERC20 = 2,\n    ERC721 = 3,\n    ERC1155 = 4,\n    SBT = 5,\n}\n\nexport interface EIP1559GasConfig {\n    gas?: string\n    gasCurrency?: string\n    maxFeePerGas: string\n    maxPriorityFeePerGas: string\n    gasPrice?: string\n    gasOptionType?: GasOptionType\n}\n\nexport interface PriorEIP1559GasConfig {\n    gas?: string\n    gasPrice: string\n    gasCurrency?: string\n    gasOptionType?: GasOptionType\n}\n\nexport type GasConfig = EIP1559GasConfig | PriorEIP1559GasConfig\n\nexport interface GasOption {\n    estimatedSeconds: number\n    // eip1559 only\n    estimatedBaseFee?: string\n    baseFeePerGas?: string\n    // note: for prior 1559 it means gasPrice\n    suggestedMaxFeePerGas: string\n    suggestedMaxPriorityFeePerGas: string\n}\n\n// Learn more for a full list of supported JSON RPC methods\n// https://eth.wiki/json-rpc/API#json-rpc-methods\nexport enum EthereumMethodType {\n    WATCH_ASSET = 'wallet_watchAsset',\n    WATCH_ASSET_LEGACY = 'metamask_watchAsset',\n    PERSONAL_SIGN = 'personal_sign',\n    // https://eips.ethereum.org/EIPS/eip-3085\n    WALLET_ADD_ETHEREUM_CHAIN = 'wallet_addEthereumChain',\n    // https://eips.ethereum.org/EIPS/eip-3326\n    WALLET_SWITCH_ETHEREUM_CHAIN = 'wallet_switchEthereumChain',\n    ETH_CHAIN_ID = 'eth_chainId',\n    ETH_ACCOUNTS = 'eth_accounts',\n    ETH_REQUEST_ACCOUNTS = 'eth_requestAccounts',\n    ETH_SEND_TRANSACTION = 'eth_sendTransaction',\n    ETH_SEND_RAW_TRANSACTION = 'eth_sendRawTransaction',\n    ETH_GET_CODE = 'eth_getCode',\n    ETH_GAS_PRICE = 'eth_gasPrice',\n    ETH_GET_BLOCK_BY_NUMBER = 'eth_getBlockByNumber',\n    ETH_GET_BLOCK_BY_HASH = 'eth_getBlockByHash',\n    ETH_BLOCK_NUMBER = 'eth_blockNumber',\n    ETH_GET_BALANCE = 'eth_getBalance',\n    ETH_GET_TRANSACTION_BY_HASH = 'eth_getTransactionByHash',\n    ETH_GET_TRANSACTION_RECEIPT = 'eth_getTransactionReceipt',\n    ETH_GET_TRANSACTION_COUNT = 'eth_getTransactionCount',\n    ETH_GET_FILTER_CHANGES = 'eth_getFilterChanges',\n    ETH_NEW_PENDING_TRANSACTION_FILTER = 'eth_newPendingTransactionFilter',\n    ETH_ESTIMATE_GAS = 'eth_estimateGas',\n    ETH_CALL = 'eth_call',\n    ETH_SIGN = 'eth_sign',\n    ETH_DECRYPT = 'eth_decrypt',\n    ETH_SIGN_TYPED_DATA = 'eth_signTypedData_v4',\n    ETH_SIGN_TRANSACTION = 'eth_signTransaction',\n    ETH_GET_LOGS = 'eth_getLogs',\n    ETH_GET_ENCRYPTION_PUBLIC_KEY = 'eth_getEncryptionPublicKey',\n\n    // EIP-4337\n    ETH_SEND_USER_OPERATION = 'eth_sendUserOperation',\n    ETH_CALL_USER_OPERATION = 'eth_callUserOperation',\n    ETH_SUPPORTED_CHAIN_IDS = 'eth_supportedChainIds',\n    ETH_SUPPORTED_ENTRY_POINTS = 'eth_supportedEntryPoints',\n    MASK_DEPLOY = 'mask_deploy',\n    MASK_FUND = 'mask_fund',\n\n    // only for mask\n    MASK_LOGIN = 'MASK_LOGIN',\n    MASK_LOGOUT = 'MASK_LOGOUT',\n    MASK_WALLETS = 'MASK_WALLETS',\n    MASK_ADD_WALLET = 'MASK_ADD_WALLET',\n    MASK_UPDATE_WALLET = 'MASK_UPDATE_WALLET',\n    MASK_RENAME_WALLET = 'MASK_RENAME_WALLET',\n    MASK_REMOVE_WALLET = 'MASK_REMOVE_WALLET',\n    MASK_UPDATE_WALLETS = 'MASK_UPDATE_WALLETS',\n    MASK_REMOVE_WALLETS = 'MASK_REMOVE_WALLETS',\n    MASK_RESET_ALL_WALLETS = 'MASK_RESET_ALL_WALLETS',\n    MASK_REPLACE_TRANSACTION = 'mask_replaceTransaction',\n}\n\nexport enum TransactionEventType {\n    TRANSACTION_HASH = 'transactionHash',\n    RECEIPT = 'receipt',\n    CONFIRMATION = 'confirmation',\n    ERROR = 'error',\n}\n\nexport type UnboxTransactionObject<T> = T extends NonPayableTransactionObject<infer R>\n    ? R\n    : T extends PayableTransactionObject<infer S>\n    ? S\n    : T\n\nexport enum NetworkType {\n    Ethereum = 'Ethereum',\n    Binance = 'Binance',\n    Base = 'Base',\n    Polygon = 'Polygon',\n    Arbitrum = 'Arbitrum',\n    xDai = 'xDai',\n    Celo = 'Celo',\n    Fantom = 'Fantom',\n    Aurora = 'Aurora',\n    Avalanche = 'Avalanche',\n    Boba = 'Boba',\n    Fuse = 'Fuse',\n    Metis = 'Metis',\n    Optimism = 'Optimism',\n    Conflux = 'Conflux',\n    Astar = 'Astar',\n    Scroll = 'Scroll',\n    Moonbeam = 'Moonbeam',\n    CustomNetwork = 'CustomNetwork',\n}\n\nexport enum ProviderType {\n    None = 'None',\n    Browser = 'Browser',\n    MaskWallet = 'Maskbook',\n    MetaMask = 'MetaMask',\n    WalletConnect = 'WalletConnect',\n    Fortmatic = 'Fortmatic',\n    Coin98 = 'Coin98',\n    Coinbase = 'Coinbase',\n    OKX = 'OKX',\n    Opera = 'Opera',\n    Clover = 'Clover',\n    CustomNetwork = 'CustomNetwork',\n}\n\n/**\n * EIP-1193 compatible provider\n */\nexport interface Web3Provider {\n    send(\n        payload: JsonRpcPayload,\n        callback: (error: Error | null, response?: JsonRpcResponse) => void,\n    ): Promise<JsonRpcResponse>\n    sendAsync(\n        payload: JsonRpcPayload,\n        callback: (error: Error | null, response?: JsonRpcResponse) => void,\n    ): Promise<JsonRpcResponse>\n    request<T>(requestArguments: RequestArguments): Promise<T>\n\n    on(name: 'connect', listener: (connectInfo: { chainId: string }) => void): Web3Provider\n    on(name: 'disconnect', listener: (error: { message: string; code: number; data?: unknown }) => void): Web3Provider\n    on(name: 'chainChanged', listener: (chainId: string) => void): Web3Provider\n    on(name: 'accountsChanged', listener: (accounts: string[]) => void): Web3Provider\n    on(name: 'message', listener: (message: { type: string; data: unknown }) => void): Web3Provider\n    on(name: string, listener: (event: any) => void): Web3Provider\n\n    removeListener(name: string, listener: (event: any) => void): Web3Provider\n}\n\nexport type Signature = string\n\nexport interface Block {\n    hash: string\n    nonce: string\n    timestamp: string\n    baseFeePerGas?: number\n}\n\nexport interface RequestArguments {\n    method: EthereumMethodType\n    params: any[]\n}\n\nexport interface RequestOptions {\n    silent?: boolean\n    owner?: string\n    identifier?: string\n    paymentToken?: string\n    allowMaskAsGas?: boolean\n    providerURL?: string\n    gasOptionType?: GasOptionType\n}\n\nexport interface MessageRequest {\n    arguments: RequestArguments\n    options: RequestOptions\n}\n\nexport type MessageResponse = JsonRpcResponse\n\nexport interface Transaction {\n    from?: string\n    to?: string\n    value?: string\n    gas?: string\n    gasPrice?: string\n    maxPriorityFeePerGas?: string\n    maxFeePerGas?: string\n    data?: string\n    nonce?: number\n    chainId?: number\n\n    // CELO\n    feeCurrency?: string // address of the ERC20 contract to use to pay for gas and the gateway fee\n    gatewayFeeRecipient?: string // coinbase address of the full serving the light client's transactions\n    gatewayFee?: string // value paid to the gateway fee recipient, denominated in the fee currency\n}\nexport interface UserOperation {\n    sender: string\n    nonce?: number\n    initCode?: string\n    callData?: string\n    callGas?: string\n    verificationGas?: string\n    preVerificationGas?: string\n    maxFeePerGas?: string\n    maxPriorityFeePerGas?: string\n    paymaster?: string\n    paymasterData?: string\n    signature?: string\n}\nexport type TransactionReceipt = Web3TransactionReceipt\nexport type TransactionDetailed = Web3Transaction\nexport type TransactionSignature = string\nexport type TransactionParameter = string | boolean | undefined\n\nexport interface TransactionOptions {\n    account?: string\n    chainId?: ChainId\n    owner?: string\n    identifier?: string\n    paymentToken?: string\n    allowMaskAsGas?: boolean\n    providerURL?: string\n\n    // popups control\n    disableClose?: boolean\n    popupsWindow?: boolean\n    silent?: boolean\n}\n\nexport type Web3State = Web3StateShared<\n    ChainId,\n    SchemaType,\n    ProviderType,\n    NetworkType,\n    MessageRequest,\n    MessageResponse,\n    Transaction,\n    TransactionParameter\n>\n\nexport type Web3Definition = {\n    ChainId: ChainId\n    AddressType: AddressType\n    SchemaType: SchemaType\n    ProviderType: ProviderType\n    NetworkType: NetworkType\n    Signature: Signature\n    GasOption: GasOption\n    Block: Block\n    MessageRequest: MessageRequest\n    MessageResponse: MessageResponse\n    Operation: UserOperation\n    Transaction: Transaction\n    TransactionReceipt: TransactionReceipt\n    TransactionDetailed: TransactionDetailed\n    TransactionSignature: TransactionSignature\n    TransactionParameter: TransactionParameter\n    UserOperation: UserOperation\n    Web3: Web3\n    Web3Provider: Web3Provider\n    Web3State: Web3State\n}\n","\"use strict\";\nimport { arrayify, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction getChecksumAddress(address) {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = arrayify(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nexport function getAddress(address) {\n    let result = null;\n    if (typeof (address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        result = getChecksumAddress(\"0x\" + result);\n    }\n    else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    return result;\n}\nexport function isAddress(address) {\n    try {\n        getAddress(address);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getIcapAddress(address) {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction) {\n    let from = null;\n    try {\n        from = getAddress(transaction.from);\n    }\n    catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n    return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\nexport function getCreate2Address(from, salt, initCodeHash) {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([\"0xff\", getAddress(from), salt, initCodeHash])), 12));\n}\n","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n// Crawl up the constructor chain to find a static method\nexport function getStatic(ctor, key) {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) {\n            return ctor[key];\n        }\n        if (!ctor.prototype || typeof (ctor.prototype) !== \"object\") {\n            break;\n        }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\nexport function resolveProperties(object) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const promises = Object.keys(object).map((key) => {\n            const value = object[key];\n            return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n        });\n        const results = yield Promise.all(promises);\n        return results.reduce((accum, result) => {\n            accum[(result.key)] = result.value;\n            return accum;\n        }, {});\n    });\n}\nexport function checkProperties(object, properties) {\n    if (!object || typeof (object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\nexport function shallowCopy(object) {\n    const result = {};\n    for (const key in object) {\n        result[key] = object[key];\n    }\n    return result;\n}\nconst opaque = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\nfunction _isFrozen(object) {\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof (object)]) {\n        return true;\n    }\n    if (Array.isArray(object) || typeof (object) === \"object\") {\n        if (!Object.isFrozen(object)) {\n            return false;\n        }\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value = null;\n            try {\n                value = object[keys[i]];\n            }\n            catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n            if (!_isFrozen(value)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object) {\n    if (_isFrozen(object)) {\n        return object;\n    }\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n    if (typeof (object) === \"object\") {\n        const result = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) {\n                continue;\n            }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n        return result;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\nexport function deepCopy(object) {\n    return _deepCopy(object);\n}\nexport class Description {\n    constructor(info) {\n        for (const key in info) {\n            this[key] = deepCopy(info[key]);\n        }\n    }\n}\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.server_context\"),w=Symbol.for(\"react.forward_ref\"),x=Symbol.for(\"react.suspense\"),y=Symbol.for(\"react.suspense_list\"),z=Symbol.for(\"react.memo\"),A=Symbol.for(\"react.lazy\"),aa=Symbol.for(\"react.debug_trace_mode\"),ba=Symbol.for(\"react.offscreen\"),ca=\nSymbol.for(\"react.cache\"),B=Symbol.for(\"react.default_value\"),C=Symbol.iterator;function da(a){if(null===a||\"object\"!==typeof a)return null;a=C&&a[C]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E=Object.assign,F={};function G(a,b,c){this.props=a;this.context=b;this.refs=F;this.updater=c||D}G.prototype.isReactComponent={};\nG.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};G.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function H(){}H.prototype=G.prototype;function I(a,b,c){this.props=a;this.context=b;this.refs=F;this.updater=c||D}var J=I.prototype=new H;\nJ.constructor=I;E(J,G.prototype);J.isPureReactComponent=!0;var K=Array.isArray,L=Object.prototype.hasOwnProperty,M={current:null},N={key:!0,ref:!0,__self:!0,__source:!0};\nfunction O(a,b,c){var d,e={},f=null,g=null;if(null!=b)for(d in void 0!==b.ref&&(g=b.ref),void 0!==b.key&&(f=\"\"+b.key),b)L.call(b,d)&&!N.hasOwnProperty(d)&&(e[d]=b[d]);var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){for(var k=Array(h),m=0;m<h;m++)k[m]=arguments[m+2];e.children=k}if(a&&a.defaultProps)for(d in h=a.defaultProps,h)void 0===e[d]&&(e[d]=h[d]);return{$$typeof:l,type:a,key:f,ref:g,props:e,_owner:M.current}}\nfunction ea(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function P(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(c){return b[c]})}var Q=/\\/+/g;function R(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction S(a,b,c,d,e){var f=typeof a;if(\"undefined\"===f||\"boolean\"===f)a=null;var g=!1;if(null===a)g=!0;else switch(f){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case l:case n:g=!0}}if(g)return g=a,e=e(g),a=\"\"===d?\".\"+R(g,0):d,K(e)?(c=\"\",null!=a&&(c=a.replace(Q,\"$&/\")+\"/\"),S(e,b,c,\"\",function(m){return m})):null!=e&&(P(e)&&(e=ea(e,c+(!e.key||g&&g.key===e.key?\"\":(\"\"+e.key).replace(Q,\"$&/\")+\"/\")+a)),b.push(e)),1;g=0;d=\"\"===d?\".\":d+\":\";if(K(a))for(var h=0;h<a.length;h++){f=\na[h];var k=d+R(f,h);g+=S(f,b,c,k,e)}else if(k=da(a),\"function\"===typeof k)for(a=k.call(a),h=0;!(f=a.next()).done;)f=f.value,k=d+R(f,h++),g+=S(f,b,c,k,e);else if(\"object\"===f)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return g}\nfunction T(a,b,c){if(null==a)return a;var d=[],e=0;S(a,d,\"\",\"\",function(f){return b.call(c,f,e++)});return d}function fa(a){if(-1===a._status){var b=a._result;b=b();b.then(function(c){if(0===a._status||-1===a._status)a._status=1,a._result=c},function(c){if(0===a._status||-1===a._status)a._status=2,a._result=c});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}var U={current:null};function ha(){return new WeakMap}\nfunction V(){return{s:0,v:void 0,o:null,p:null}}var W={current:null},X={transition:null},Y={ReactCurrentDispatcher:W,ReactCurrentCache:U,ReactCurrentBatchConfig:X,ReactCurrentOwner:M,ContextRegistry:{}},Z=Y.ContextRegistry;\nexports.Children={map:T,forEach:function(a,b,c){T(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;T(a,function(){b++});return b},toArray:function(a){return T(a,function(b){return b})||[]},only:function(a){if(!P(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=G;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=I;exports.StrictMode=q;exports.Suspense=x;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Y;\nexports.cache=function(a){return function(){var b=U.current;if(!b)return a.apply(null,arguments);var c=b.getCacheForType(ha);b=c.get(a);void 0===b&&(b=V(),c.set(a,b));c=0;for(var d=arguments.length;c<d;c++){var e=arguments[c];if(\"function\"===typeof e||\"object\"===typeof e&&null!==e){var f=b.o;null===f&&(b.o=f=new WeakMap);b=f.get(e);void 0===b&&(b=V(),f.set(e,b))}else f=b.p,null===f&&(b.p=f=new Map),b=f.get(e),void 0===b&&(b=V(),f.set(e,b))}if(1===b.s)return b.v;if(2===b.s)throw b.v;try{var g=a.apply(null,\narguments);c=b;c.s=1;return c.v=g}catch(h){throw g=b,g.s=2,g.v=h,h;}}};\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=E({},a.props),e=a.key,f=a.ref,g=a._owner;if(null!=b){void 0!==b.ref&&(f=b.ref,g=M.current);void 0!==b.key&&(e=\"\"+b.key);if(a.type&&a.type.defaultProps)var h=a.type.defaultProps;for(k in b)L.call(b,k)&&!N.hasOwnProperty(k)&&(d[k]=void 0===b[k]&&void 0!==h?h[k]:b[k])}var k=arguments.length-2;if(1===k)d.children=c;else if(1<k){h=Array(k);\nfor(var m=0;m<k;m++)h[m]=arguments[m+2];d.children=h}return{$$typeof:l,type:a.type,key:e,ref:f,props:d,_owner:g}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=O;exports.createFactory=function(a){var b=O.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.createServerContext=function(a,b){var c=!0;if(!Z[a]){c=!1;var d={$$typeof:v,_currentValue:b,_currentValue2:b,_defaultValue:b,_threadCount:0,Provider:null,Consumer:null,_globalName:a};d.Provider={$$typeof:t,_context:d};Z[a]=d}d=Z[a];if(d._defaultValue===B)d._defaultValue=b,d._currentValue===B&&(d._currentValue=b),d._currentValue2===B&&(d._currentValue2=b);else if(c)throw Error(\"ServerContext: \"+a+\" already defined\");return d};exports.experimental_useEffectEvent=function(a){return W.current.useEffectEvent(a)};\nexports.experimental_useOptimistic=function(a,b){return W.current.useOptimistic(a,b)};exports.forwardRef=function(a){return{$$typeof:w,render:a}};exports.isValidElement=P;exports.lazy=function(a){return{$$typeof:A,_payload:{_status:-1,_result:a},_init:fa}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=X.transition;X.transition={};try{a()}finally{X.transition=b}};exports.unstable_Cache=ca;\nexports.unstable_DebugTracingMode=aa;exports.unstable_Offscreen=ba;exports.unstable_SuspenseList=y;exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};exports.unstable_getCacheForType=function(a){var b=U.current;return b?b.getCacheForType(a):a()};\nexports.unstable_getCacheSignal=function(){var a=U.current;return a?a.getCacheSignal():(a=new AbortController,a.abort(Error(\"This CacheSignal was requested outside React which means that it is immediately aborted.\")),a.signal)};exports.unstable_useCacheRefresh=function(){return W.current.useCacheRefresh()};exports.unstable_useMemoCache=function(a){return W.current.useMemoCache(a)};exports.use=function(a){return W.current.use(a)};exports.useCallback=function(a,b){return W.current.useCallback(a,b)};\nexports.useContext=function(a){return W.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return W.current.useDeferredValue(a)};exports.useEffect=function(a,b){return W.current.useEffect(a,b)};exports.useId=function(){return W.current.useId()};exports.useImperativeHandle=function(a,b,c){return W.current.useImperativeHandle(a,b,c)};exports.useInsertionEffect=function(a,b){return W.current.useInsertionEffect(a,b)};\nexports.useLayoutEffect=function(a,b){return W.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return W.current.useMemo(a,b)};exports.useReducer=function(a,b,c){return W.current.useReducer(a,b,c)};exports.useRef=function(a){return W.current.useRef(a)};exports.useState=function(a){return W.current.useState(a)};exports.useSyncExternalStore=function(a,b,c){return W.current.useSyncExternalStore(a,b,c)};exports.useTransition=function(){return W.current.useTransition()};exports.version=\"18.3.0-experimental-0a360642d-20230711\";\n","export function unreachable(value) {\n    console.error('Unhandled value: ', value);\n    throw new Error('Unreachable case:' + value);\n}\nexport function safeUnreachable(value) {\n    console.error('Unhandled value: ', value);\n}\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\n\n// src/index.ts\nimport qs from \"qs\";\nfunction urlcat(baseUrlOrTemplate, pathTemplateOrParams, maybeParams = {}, config = {}) {\n  if (typeof pathTemplateOrParams === \"string\") {\n    const baseUrl = baseUrlOrTemplate;\n    const pathTemplate = pathTemplateOrParams;\n    const params = maybeParams;\n    return urlcatImpl(pathTemplate, params, baseUrl, config);\n  } else {\n    const baseTemplate = baseUrlOrTemplate;\n    const params = pathTemplateOrParams;\n    return urlcatImpl(baseTemplate, params, void 0, config);\n  }\n}\nfunction configure(rootConfig) {\n  return (baseUrlOrTemplate, pathTemplateOrParams, maybeParams = {}, config = {}) => urlcat(baseUrlOrTemplate, pathTemplateOrParams, maybeParams, __spreadValues(__spreadValues({}, rootConfig), config));\n}\nfunction joinFullUrl(renderedPath, baseUrl, pathAndQuery) {\n  if (renderedPath.length) {\n    return join(baseUrl, \"/\", pathAndQuery);\n  } else {\n    return join(baseUrl, \"?\", pathAndQuery);\n  }\n}\nfunction urlcatImpl(pathTemplate, params, baseUrl, config) {\n  const { renderedPath, remainingParams } = path(pathTemplate, params);\n  const cleanParams = removeNullOrUndef(remainingParams);\n  const renderedQuery = query(cleanParams, config);\n  const pathAndQuery = join(renderedPath, \"?\", renderedQuery);\n  return baseUrl ? joinFullUrl(renderedPath, baseUrl, pathAndQuery) : pathAndQuery;\n}\nfunction query(params, config) {\n  var _a, _b;\n  if (Object.keys(params).length < 1) {\n    return \"\";\n  }\n  const qsConfiguration = {\n    format: (_b = (_a = config == null ? void 0 : config.objectFormat) == null ? void 0 : _a.format) != null ? _b : \"RFC1738\",\n    arrayFormat: config == null ? void 0 : config.arrayFormat\n  };\n  return qs.stringify(params, qsConfiguration);\n}\nfunction subst(template, params) {\n  const { renderedPath } = path(template, params);\n  return renderedPath;\n}\nfunction path(template, params) {\n  const remainingParams = __spreadValues({}, params);\n  const renderedPath = template.replace(/:[_A-Za-z]+[_A-Za-z0-9]*/g, (p) => {\n    const key = p.slice(1);\n    validatePathParam(params, key);\n    delete remainingParams[key];\n    return encodeURIComponent(params[key]);\n  });\n  return { renderedPath, remainingParams };\n}\nfunction validatePathParam(params, key) {\n  const allowedTypes = [\"boolean\", \"string\", \"number\"];\n  if (!Object.prototype.hasOwnProperty.call(params, key)) {\n    throw new Error(`Missing value for path parameter ${key}.`);\n  }\n  if (!allowedTypes.includes(typeof params[key])) {\n    throw new TypeError(\n      `Path parameter ${key} cannot be of type ${typeof params[key]}. Allowed types are: ${allowedTypes.join(\", \")}.`\n    );\n  }\n  if (typeof params[key] === \"string\" && params[key].trim() === \"\") {\n    throw new Error(`Path parameter ${key} cannot be an empty string.`);\n  }\n}\nfunction join(part1, separator, part2) {\n  const p1 = part1.endsWith(separator) ? part1.slice(0, -separator.length) : part1;\n  const p2 = part2.startsWith(separator) ? part2.slice(separator.length) : part2;\n  return p1 === \"\" || p2 === \"\" ? p1 + p2 : p1 + separator + p2;\n}\nfunction removeNullOrUndef(params) {\n  return Object.keys(params).filter((k) => notNullOrUndefined(params[k])).reduce((result, k) => {\n    result[k] = params[k];\n    return result;\n  }, {});\n}\nfunction notNullOrUndefined(v) {\n  return v !== void 0 && v !== null;\n}\nexport {\n  configure,\n  urlcat as default,\n  join,\n  query,\n  subst\n};\n"],"names":["MaskMessages","PluginID","createProxyKVStorageBackend","createKVStorageHost","indexedDBProxy","inMemoryBackend","setupMaskKVStorageBackend","indexedDB","inMemory","replaceBackend","createPersistentKVStorage","events","__kv_backend_persistent__","createInMemoryKVStorage","__kv_backend_in_memory__","InMemoryStorages","Plugin","Web3","FacebookNFTEventOnMobile","userId","avatarId","address","tokenId","schema","chainId","pluginID","ApplicationEntryUnlistedListKey","APPLICATION_ENTRY_UNLISTED","BackupAccountType","Email","Phone","PersistentStorages","Settings","debugging","backupConfig","backupPassword","email","phone","localBackupAt","cloudBackupAt","cloudBackupMethod","ApplicationEntryUnListedList","current","RedPacket","FileService","CrossChainBridge","MaskBox","Savings","Avatar","Trader","Tips","Transak","Pets","GoPlusSecurity","ApplicationEntryUnListed","data","migrateUnlistedEntries","Promise","allSettled","storage","initializedPromise","legacyData","value","newData","pairs","Array","from","Object","entries","unlisted","filter","x","length","legacyList","map","setValue","ProfileIdentifier","EnhanceableSite","NextIDPlatform","NextIDPlatformToNetwork","Ethereum","undefined","GitHub","Keybase","Twitter","resolveNextIDPlatformToNetwork","key","NetworkToNextIDPlatform","Facebook","Instagram","Minds","OpenSea","Localhost","Mirror","App","resolveNetworkToNextIDPlatform","resolveNextIDIdentityToProfile","nextIDIdentity","platform","network","of","expect","createBindingProofFromProfileQuery","identity","name","link","source","relatedList","created_at","last_checked_at","is_valid","getEnumAsArray","Sniffings","ExtensionSite","parseURL","matchEnhanceableSiteHost","process","env","NODE_ENV","matchExtensionSitePathname","Dashboard","Popup","EnhanceableSiteList","ExtensionSiteList","getEnhanceableSiteType","url","target","host","location","type","regexp","match","getExtensionSiteType","pathname","getSiteType","getAgentType","is_edge","is_opera","is_firefox","is_chromium","isEnhanceableSiteType","isExtensionSiteType","isEthereumInjected","window","Reflect","get","isInPageEthereumInjected","getExtensionId","browser","runtime","getURL","CMC_BASE_URL","CMC_STATIC_BASE_URL","BTC_FIRST_LEGER_DATE","Date","THIRD_PARTY_V1_BASE_URL","ChainId","ZERO_ADDRESS","fetchSquashedJSON","isSameAddress","NETWORK_NAME_MAP","Mainnet","BSC","Polygon","Matic","Avalanche","Moonbeam","Optimism","NATIVE_TOKEN_ADDRESS","resolveCoinMarketCapChainId","resolveCoinMarketCapAddress","fetchFromCoinMarketCap","request","init","getUnixTime","Days","NetworkPluginID","TokenType","SourceType","isValidChainId","FuseCoin","getCommunityLink","isMirroredKeyword","COIN_RECOMMENDATION_SIZE","VALID_TOP_RANK","getQuotesInfo","id","currency","params","URLSearchParams","append","toString","cache","getCoinInfo","response","status","getLatestMarketPairs","market_pairs","num_market_pairs","CoinMarketCapTrendingAPI","getHistorical","startDate","endDate","interval","getAllCoins","String","symbol","Fungible","contract_address","token_address","market_cap_rank","rank","getCoinsByKeyword","keyword","create","search","item","y","slice","getCoinInfoByAddress","Error","getCoinTrending","currencyName","toUpperCase","coinInfoRes","quotesInfo","market","all","coinInfo","contracts","sort","a","b","coin","PLUGIN_EVM","icon_url","currentContract","trending","lastUpdated","timestamp","is_mirrored","announcement_urls","urls","announcement","Boolean","tech_docs_urls","technical_doc","message_board_urls","message_board","source_code_urls","source_code","community_urls","twitter","reddit","chat","home_urls","website","blockchain_urls","slug","explorer","tags","image_url","platform_url","twitter_url","find","includes","telegram_url","cmc_rank","description","dataProvider","CoinMarketCap","tickers","pair","logo_url","exchange","trade_url","market_url","market_name","market_reputation","base_name","market_pair_base","exchange_symbol","target_name","market_pair_quote","price","currency_id","quote","price_quote","volume","volume_24h","score","market_score","updated","last_updated","z","toFixed","quotesInfo_","circulating_supply","total_supply","max_supply","market_cap","current_price","total_volume","price_change_percentage_1h","percent_change_1h","price_change_24h","percent_change_24h","price_change_percentage_1h_in_currency","price_change_percentage_24h_in_currency","price_change_percentage_7d_in_currency","percent_change_7d","getCoinPriceStats","coinId","days","setDate","getDate","stats","MAX","is_active","date","getTime","getCoinMarketInfo","urlcat","BASE_URL","CryptoScamDB","bloomFilter","getBloomFilter","ScalableBloomFilter","fromJSON","getScamWarning","URL","has","result","scamURL","toLowerCase","getScamWarnings","links","requests","startsWith","CurrencyType","fetchJSON","FiatCurrencyRate","getRate","USD","rates","getRates","first","isEmpty","parseInt","uniqBy","BigNumber","EMPTY_LIST","getGoPlusLabsConstants","GO_PLUS_LABS_ROOT_URL","INFINITE_VALUE","SecurityMessageLevel","SecurityMessages","getAllMaskDappContractInfo","checkInWhitelist","WHITE_LISTS","some","GoPlusAuthorizationAPI","getSupportChainIds","getNonFungibleTokenSpenders","addresses","supportedChainIds","maskDappContractInfoList","nft1155Response","reduce","acc","cur","concat","approved_list","rawSpender","maskDappContractInfo","approved_contract","isMaskDapp","amount","logo","contract","nft_address","nft_name","address_info","tag","Number","getFungibleTokenSpenders","tokenInfo","token_symbol","token_name","spender","approved_amount","toNumber","GoPlusLabs","getTokenSecurity","contract_addresses","join","code","createTokenSecurity","getAddressSecurity","chain_id","getSupportedChain","GoPlusAuthorization","entity","tokenSecurity","is_high_risk","isHighRisk","makeMessageList","getMessageList","risk_item_quantity","level","High","warn_item_quantity","Medium","inWhitelist","message_list","trust_list","condition","Safe","shouldHide","SecurityType","percentageToNumber","replace","isUnset","info","Contract","is_open_source","titleKey","messageKey","is_proxy","is_mintable","owner_change_balance","can_take_back_ownership","Transaction","buy_tax","i18nParams","rate","quantity","sell_tax","is_honeypot","transfer_pausable","is_anti_whale","slippage_modifiable","is_blacklisted","is_whitelisted","Info","is_true_token","is_airdrop_scam","resolveCrossOriginURL","LIDO_STETH_APR_API","Lido","getStEthAPR","apr","mode","compact","MaskIconURLs","fetchFromNFTScanV2","createNonFungibleAsset","getContractSymbol","resolveNFTScanHostName","resolveNFTScanRange","NonFungibleMarketplace","LooksRare","getPaymentToken","NFTScanTrendingAPI_EVM","getCollection","path","searchNFTCollection","method","body","JSON","stringify","sort_direction","sort_field","name_fuzzy_search","getCollectionOverview","getAssetsBatch","list","contract_address_with_token_id_list","getCoinActivities","cursor","limit","content","batchQueryList","token_id","assetsBatchResponse","next","asset","imageURL","metadata","transaction_link","hash","trade_token","trade_symbol","getCollectionTrending","range","time","resolve","nfts","coins","nft","NonFungible","records","begin_timestamp","average_price","collection","openseaStats","looksrareStats","getStats","catch","open_sea_url","volume24h","floor_price","floorPrice","price_symbol","sales_24","count24h","looks_rare_url","toJSON","NFTScan","nftscan_url","discord","instagram","medium","telegram","youtube","github","items_total","owners_count","owners_total","royalty","NFTScanTrending_EVM","NFTScanTrendingAPI_Solana","PLUGIN_SOLANA","highest_price","total_24h","average_volume_24h","volume_all","NFTScanTrending_Solana","createLookupTableResolver","pluginId","Arbitrum","xDai","ONE_DAY","ONE_WEEK","ONE_MONTH","THREE_MONTHS","ONE_YEAR","ENDPOINT","PAGE_SIZE","NFTSpam","report","res","getReports","indicator","page","index","page_size","fetchCachedJSON","fetchFromGraphql","query","encodeURIComponent","Snapshot","getProposalListBySpace","spaceId","strategyName","queryProposal","proposals","proposal","validStrategy","strategies","choicesWithScore","choices","i","choice","scores","space","getSpace","querySpace","getCurrentAccountVote","proposalId","totalVotes","account","Math","ceil","queryCurrentAccountVote","votes","flatMap","getFollowingSpaceIdList","follows","REDPACKET_API_URL","NFT_REDPACKET_API_URL","ChainResolver","TheGraphRedPacket","getHistories","senderAddress","contractAddress","redPackets","txid","shares","total","duration","block_number","contract_version","networkType","token","sender","message","rpid","creation_time","total_remaining","password","is_random","getNFTHistories","nftredPackets","token_contract","creator","token_ids","API_URL","SolanaChainId","CURRENCIES_MAP","CoinGecko","UniswapInfo","X2Y2","Chainbase","Zerion","Rarible","Alchemy_EVM","Zora","Gem","GoPlus","Rabby","Approval","R2D2","DeBank","Flow","Solana","RSS3","Alchemy_FLOW","MagicEden","Element","Solsea","Solanart","RaritySniper","TraitSniper","CF","OKX","Uniswap","NFTX","Etherscan","CryptoPunks","SimpleHash","MIRRORED_TOKENS","getCurrency","currencies","WEB3_BIO_ROOT_URL","Web3Bio","fetchFromWeb3Bio","queryProfilesByAddress","BindingProofs","values","handle","createERC20Tokens","CHAIN_DESCRIPTORS","APE","USDC","USDCe","USDT","USDTe","fUSDT","HUSD","BUSD","COMP","MKR","DAI","DAIe","AMPL","OKB","UST","EASY","eUSDC","eUSDT","eDAI","sUSD","UNITOKEN","TT01","TT02","TATR","ETHER","QUICK","WANNA","WBTC","WBTCe","IGG","OM","SUSHI","RUNE","YFI","BTCB","CAKE","maUSDC","STETH","CUSD","CEUR","JOE","PNG","VERSA","VIPER","OPENX","JEWEL","YUMI","xYUMI","OP","RARI","getNativeCurrency","nativeCurrency","WNATIVE","WNATIVE_ONLY","Ropsten","Rinkeby","Kovan","Gorli","BSCT","Mumbai","Arbitrum_Rinkeby","Avalanche_Fuji","Celo","Fantom","Aurora","Aurora_Testnet","Optimism_Goerli","Astar","Scroll","Base","Base_Goerli","Arbitrum_Nova","Fuse","Boba","Metis","Optimism_Kovan","Conflux","ZKSync_Alpha_Testnet","Crossbell","Pulse","Klaytn","Harmony","Moonriver","Cronos","Brise","Canto","DFK","Doge","Evmos","HuobiEco","IoTex","Kava","Kcc","Milkomeda","OKXChain","Palm","RSK","SmartBitcoinCash","Shiden","SongbirdCanary","Step","Telos","Wanchain","BitTorrent","Invalid","AddressType","ExternalOwned","SchemaType","Native","ERC20","ERC721","ERC1155","SBT","EthereumMethodType","WATCH_ASSET","WATCH_ASSET_LEGACY","PERSONAL_SIGN","WALLET_ADD_ETHEREUM_CHAIN","WALLET_SWITCH_ETHEREUM_CHAIN","ETH_CHAIN_ID","ETH_ACCOUNTS","ETH_REQUEST_ACCOUNTS","ETH_SEND_TRANSACTION","ETH_SEND_RAW_TRANSACTION","ETH_GET_CODE","ETH_GAS_PRICE","ETH_GET_BLOCK_BY_NUMBER","ETH_GET_BLOCK_BY_HASH","ETH_BLOCK_NUMBER","ETH_GET_BALANCE","ETH_GET_TRANSACTION_BY_HASH","ETH_GET_TRANSACTION_RECEIPT","ETH_GET_TRANSACTION_COUNT","ETH_GET_FILTER_CHANGES","ETH_NEW_PENDING_TRANSACTION_FILTER","ETH_ESTIMATE_GAS","ETH_CALL","ETH_SIGN","ETH_DECRYPT","ETH_SIGN_TYPED_DATA","ETH_SIGN_TRANSACTION","ETH_GET_LOGS","ETH_GET_ENCRYPTION_PUBLIC_KEY","ETH_SEND_USER_OPERATION","ETH_CALL_USER_OPERATION","ETH_SUPPORTED_CHAIN_IDS","ETH_SUPPORTED_ENTRY_POINTS","MASK_DEPLOY","MASK_FUND","MASK_LOGIN","MASK_LOGOUT","MASK_WALLETS","MASK_ADD_WALLET","MASK_UPDATE_WALLET","MASK_RENAME_WALLET","MASK_REMOVE_WALLET","MASK_UPDATE_WALLETS","MASK_REMOVE_WALLETS","MASK_RESET_ALL_WALLETS","MASK_REPLACE_TRANSACTION","TransactionEventType","TRANSACTION_HASH","RECEIPT","CONFIRMATION","ERROR","NetworkType","Binance","CustomNetwork","ProviderType","None","Browser","MaskWallet","MetaMask","WalletConnect","Fortmatic","Coin98","Coinbase","Opera","Clover"],"sourceRoot":"","x_google_ignoreList":[26,27,28,29,31]}