{"version":3,"file":"bundled/chunk.1299.js","mappings":"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","sources":["webpack://mask-network/./packages/mask/popups/hooks/useConnectedOrigins.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/DisconnectModal/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/OriginCard/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/ConnectedSites/index.tsx"],"sourcesContent":["import { NetworkPluginID } from '@masknet/shared-base'\nimport { useQuery } from '@tanstack/react-query'\nimport { useWallet } from '@masknet/web3-hooks-base'\nimport Services from '#services'\n\nexport function useConnectedOrigins() {\n    const wallet = useWallet(NetworkPluginID.PLUGIN_EVM)\n    return useQuery(\n        ['wallet-granted-origins', wallet?.address],\n        async () => await Services.Wallet.getAllConnectedOrigins(wallet!.address),\n        {\n            enabled: !!wallet?.address,\n            networkMode: 'always',\n        },\n    )\n}\n","import { memo, useCallback } from 'react'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\nimport { Box, Typography } from '@mui/material'\nimport { makeStyles, usePopupCustomSnackbar } from '@masknet/theme'\nimport Services from '#services'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { useWallet } from '@masknet/web3-hooks-base'\nimport { queryClient } from '@masknet/shared-base-ui'\nimport { useMutation } from '@tanstack/react-query'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        width: '100%',\n        height: '100%',\n        background: 'linear-gradient(0deg, rgba(0, 0, 0, 0.40) 0%, rgba(0, 0, 0, 0.40) 100%), rgba(28, 104, 243, 0.20)',\n        backdropFilter: 'blur(5px)',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '24px',\n        background: theme.palette.maskColor.white,\n        borderRadius: '14px',\n        width: '320px',\n        alignItems: 'center',\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n    },\n    title: {\n        color: theme.palette.maskColor.main,\n        fontSize: '16px',\n        fontWeight: 700,\n        lineHeight: '20px',\n        marginBottom: '24px',\n    },\n    desc: {\n        color: theme.palette.maskColor.second,\n        fontSize: '14px',\n        fontWeight: 400,\n        lineHeight: '18px',\n        marginBottom: '36px',\n        textAlign: 'center',\n    },\n    confirmButton: {\n        background: theme.palette.maskColor.warn,\n        borderRadius: '99px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.maskColor.white,\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight: '18px',\n        width: '100%',\n        outline: 'none',\n        border: 'none',\n        padding: '11px',\n        marginBottom: '16px',\n        cursor: 'pointer',\n    },\n    cancelButton: {\n        background: theme.palette.maskColor.thirdMain,\n        borderRadius: '99px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.maskColor.main,\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight: '18px',\n        width: '100%',\n        outline: 'none',\n        border: 'none',\n        padding: '11px',\n        marginBottom: '24px',\n        cursor: 'pointer',\n    },\n    disconnectAll: {\n        color: theme.palette.maskColor.highlight,\n        fontSize: '14px',\n        fontWeight: 400,\n        lineHeight: '18px',\n        outline: 'none',\n        background: 'none',\n        border: 'none',\n        cursor: 'pointer',\n    },\n}))\n\ninterface DisconnectModalProps {\n    origin: string\n    setOpen: (open: boolean) => void\n}\n\nconst DisconnectModal = memo(function DisconnectModal({ origin, setOpen }: DisconnectModalProps) {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const { showSnackbar } = usePopupCustomSnackbar()\n    const wallet = useWallet(NetworkPluginID.PLUGIN_EVM)\n    const { mutate: onDisconnect } = useMutation({\n        mutationFn: useCallback(async (): Promise<void> => {\n            if (!wallet) return\n            await Services.Wallet.disconnectWalletFromOrigin(wallet.address, origin)\n        }, []),\n        onMutate: async () => {\n            await queryClient.invalidateQueries(['wallet-granted-origins', wallet?.address])\n            showSnackbar(t.popups_wallet_disconnect_site_success(), { variant: 'success' })\n            setOpen(false)\n        },\n        onSettled: () => {\n            queryClient.invalidateQueries(['wallet-granted-origins', wallet?.address])\n        },\n    })\n    const { mutate: onDisconnectAll } = useMutation({\n        mutationFn: useCallback(async (): Promise<void> => {\n            if (!wallet) return\n            await Services.Wallet.disconnectAllOriginsConnectedFromWallet(wallet!.address)\n        }, [wallet?.address]),\n        onMutate: async () => {\n            await queryClient.invalidateQueries(['wallet-granted-origins', wallet?.address])\n            showSnackbar(t.popups_wallet_disconnect_site_success(), { variant: 'success' })\n            setOpen(false)\n        },\n        onSettled: () => {\n            queryClient.invalidateQueries(['wallet-granted-origins', wallet?.address])\n        },\n    })\n    return (\n        <Box className={classes.container}>\n            <Box className={classes.card}>\n                <Typography className={classes.title}>{t.plugin_wallet_disconnect()}</Typography>\n                <Typography className={classes.desc}>{t.popups_wallet_disconnect_confirm()}</Typography>\n                <button\n                    type=\"button\"\n                    className={classes.confirmButton}\n                    disabled={!wallet}\n                    onClick={() => onDisconnect()}>\n                    {t.confirm()}\n                </button>\n                <button type=\"button\" className={classes.cancelButton} onClick={() => setOpen(false)}>\n                    {t.cancel()}\n                </button>\n                <button\n                    type=\"button\"\n                    className={classes.disconnectAll}\n                    disabled={!wallet}\n                    onClick={() => onDisconnectAll()}>\n                    {t.popups_wallet_disconnect_all()}\n                </button>\n            </Box>\n        </Box>\n    )\n})\n\nexport default DisconnectModal\n","import { memo, useState, useMemo } from 'react'\nimport { Box, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { Icons } from '@masknet/icons'\nimport DisconnectModal from '../DisconnectModal/index.js'\nimport { SOCIAL_MEDIA_ROUND_ICON_MAPPING } from '@masknet/shared'\nimport { SOCIAL_MEDIA_NAME } from '@masknet/shared-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        display: 'flex',\n        padding: '8px',\n        alignItems: 'center',\n        gap: '6px',\n        borderRadius: '8px',\n        border: '1px solid ' + theme.palette.maskColor.line,\n    },\n    site: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '296px',\n    },\n    siteName: {\n        color: theme.palette.maskColor.main,\n        fontSize: 12,\n        fontWeight: 700,\n        lineHeight: '16px',\n    },\n    siteUrl: {\n        color: theme.palette.maskColor.main,\n        fontSize: 12,\n        fontWeight: 400,\n        lineHeight: '16px',\n    },\n    button: {\n        outline: 'none',\n        background: 'none',\n        border: 'none',\n        cursor: 'pointer',\n    },\n}))\n\ninterface OriginCardProps {\n    origin: string\n}\n\nconst OriginCard = memo(function OriginCard({ origin }: OriginCardProps) {\n    const { classes } = useStyles()\n    const [open, setOpen] = useState(false)\n    const Icon = useMemo(() => SOCIAL_MEDIA_ROUND_ICON_MAPPING[origin], [origin])\n    return (\n        <Box className={classes.container}>\n            {Icon ? <Icon size={24} /> : null}\n            <Box className={classes.site}>\n                <Typography className={classes.siteName}>{SOCIAL_MEDIA_NAME[origin]}</Typography>\n                <Typography className={classes.siteUrl}>{origin}</Typography>\n            </Box>\n            <button className={classes.button} onClick={() => setOpen(true)} type=\"button\">\n                <Icons.Disconnect />\n            </button>\n            {open ? (\n                <DisconnectModal\n                    origin={origin}\n                    setOpen={(open: boolean) => {\n                        setOpen(open)\n                    }}\n                />\n            ) : null}\n        </Box>\n    )\n})\n\nexport default OriginCard\n","import { memo } from 'react'\nimport { useTitle } from '../../../hooks/index.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { Box, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport OriginCard from '../components/OriginCard/index.js'\nimport { useConnectedOrigins } from '../../../hooks/useConnectedOrigins.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        display: 'flex',\n        width: '100%',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '16px',\n    },\n    desc: {\n        color: theme.palette.maskColor.second,\n        fontSize: 14,\n        fontWeight: 400,\n        lineHeight: '18px',\n    },\n    cardList: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: '12px',\n        padding: '16px 0',\n    },\n}))\n\nconst ConnectedSites = memo(function ConnectedSites() {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    useTitle(t.popups_wallet_connected_sites())\n    const _ = useConnectedOrigins()\n    const origins = _.data ? [..._.data].sort((a, b) => a.localeCompare(b, 'en-US')) : undefined\n\n    return (\n        <Box className={classes.container}>\n            <Typography className={classes.desc}>{t.popups_wallet_connected_sites_description()}</Typography>\n            <Box className={classes.cardList}>\n                {origins?.map((origin) => <OriginCard key={origin} origin={origin} />)}\n            </Box>\n        </Box>\n    )\n})\n\nexport default ConnectedSites\n"],"names":["NetworkPluginID","useQuery","useWallet","Services","useConnectedOrigins","wallet","PLUGIN_EVM","address","Wallet","getAllConnectedOrigins","enabled","networkMode","memo","useCallback","useMaskSharedTrans","Box","Typography","makeStyles","usePopupCustomSnackbar","queryClient","useMutation","useStyles","theme","container","width","height","background","backdropFilter","position","top","left","card","display","flexDirection","padding","palette","maskColor","white","borderRadius","alignItems","transform","title","color","main","fontSize","fontWeight","lineHeight","marginBottom","desc","second","textAlign","confirmButton","warn","justifyContent","outline","border","cursor","cancelButton","thirdMain","disconnectAll","highlight","DisconnectModal","origin","setOpen","t","classes","showSnackbar","mutate","onDisconnect","mutationFn","disconnectWalletFromOrigin","onMutate","invalidateQueries","popups_wallet_disconnect_site_success","variant","onSettled","onDisconnectAll","disconnectAllOriginsConnectedFromWallet","className","plugin_wallet_disconnect","popups_wallet_disconnect_confirm","button","type","disabled","onClick","confirm","cancel","popups_wallet_disconnect_all","useState","useMemo","Icons","SOCIAL_MEDIA_ROUND_ICON_MAPPING","SOCIAL_MEDIA_NAME","gap","line","site","siteName","siteUrl","OriginCard","open","Icon","size","Disconnect","useTitle","cardList","ConnectedSites","popups_wallet_connected_sites","_","origins","data","sort","a","b","localeCompare","undefined","popups_wallet_connected_sites_description","map"],"sourceRoot":"","x_google_ignoreList":[]}