{"version":3,"file":"bundled/chunk.2435.js","mappings":"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","sources":["webpack://mask-network/./packages/shared/src/UI/components/AddCollectibles/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/AddToken/index.tsx","webpack://mask-network/./packages/shared-base-ui/src/hooks/useRowSize.ts","webpack://mask-network/./packages/shared/src/UI/components/DotLoading/index.tsx","webpack://mask-network/./packages/theme/src/Components/SearchableList/EmptyResult.tsx","webpack://mask-network/./packages/theme/src/Components/SearchableList/SearchableList.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleTokensFromTokenList.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleTokensBalance.ts","webpack://mask-network/./packages/shared/src/UI/components/SettingSwitch/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/FungibleTokenList/useTokenBlocked.ts","webpack://mask-network/./packages/shared/src/UI/components/FungibleTokenList/FungibleTokenItem.tsx","webpack://mask-network/./packages/shared/src/UI/components/FungibleTokenList/ManageTokenListBar.tsx","webpack://mask-network/./packages/shared/src/UI/components/FungibleTokenList/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/FungibleTokenList/type.ts","webpack://mask-network/./packages/theme/src/hooks/useTabs.tsx","webpack://mask-network/./node_modules/.pnpm/memoize-one@5.2.1/node_modules/memoize-one/dist/memoize-one.esm.js"],"sourcesContent":["import { Icons } from '@masknet/icons'\nimport { EMPTY_LIST, type NetworkPluginID } from '@masknet/shared-base'\nimport { ActionButton, MaskTextField, makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport {\n    useAccount,\n    useAddressType,\n    useChainContext,\n    useWeb3Connection,\n    useWeb3Hub,\n    useWeb3Others,\n} from '@masknet/web3-hooks-base'\nimport { isSameAddress, type NonFungibleTokenContract } from '@masknet/web3-shared-base'\nimport { AddressType, formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { Stack, Typography, useTheme } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { useQueries, useQuery } from '@tanstack/react-query'\nimport { compact, uniq } from 'lodash-es'\nimport { memo, useCallback, useMemo, useState, type FormEvent } from 'react'\nimport { Controller, useForm } from 'react-hook-form'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { CollectibleItem, CollectibleItemSkeleton } from '../AssetsManagement/CollectibleItem.js'\nimport { EmptyStatus } from '../EmptyStatus/index.js'\nimport { LoadingStatus } from '../LoadingStatus/index.js'\nimport { ReloadStatus } from '../ReloadStatus/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    form: {\n        height: 564,\n        boxSizing: 'border-box',\n        display: 'flex',\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.maskColor.bottom,\n        flexDirection: 'column',\n        overflow: 'auto',\n        msOverflowStyle: 'none',\n        scrollbarWidth: 'none',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    main: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        // Space for toolbar\n        paddingBottom: theme.spacing(9),\n        boxSizing: 'border-box',\n    },\n    grid: {\n        width: '100%',\n        display: 'grid',\n        overflow: 'auto',\n        gridGap: theme.spacing(2),\n        padding: theme.spacing(2, 0),\n        paddingRight: theme.spacing(1),\n        boxSizing: 'border-box',\n        marginBottom: 'auto',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    notMine: {\n        opacity: 0.5,\n        cursor: 'not-allowed',\n        '*': {\n            cursor: 'not-allowed',\n        },\n    },\n    error: {\n        backgroundColor: theme.palette.maskColor.bottom,\n        fontSize: 14,\n        color: theme.palette.maskColor.danger,\n    },\n    toolbar: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        height: theme.spacing(9),\n        padding: theme.spacing(0, 2),\n        cursor: 'pointer',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.05)',\n        backdropFilter: 'blur(16px)',\n        borderRadius: theme.spacing(0, 0, 1.5, 1.5),\n    },\n    input: {\n        fontSize: 12,\n    },\n}))\n\ntype AddingNFTs<T extends NetworkPluginID = NetworkPluginID> = [\n    contract: NonFungibleTokenContract<Web3Helper.Definition[T]['ChainId'], Web3Helper.Definition[T]['SchemaType']>,\n    tokenIds: string[],\n]\n\nexport interface AddCollectiblesProps<T extends NetworkPluginID = NetworkPluginID>\n    extends withClasses<'grid' | 'form' | 'main'> {\n    pluginID?: T\n    chainId?: Web3Helper.Definition[T]['ChainId']\n    /**\n     * Specified account.\n     * For example, in PFP, we can add collectibles from verified wallets if no wallet connected.\n     */\n    account?: string\n    onAdd(result?: AddingNFTs<T>): void\n    disabled?: boolean\n}\n\nfunction isValidTokenIds(rawIds: string) {\n    const containsInvalidId = rawIds.split(',').some((v) => {\n        const trimmed = v.trim()\n        if (!trimmed) return false\n        const id = Number.parseInt(trimmed, 10)\n        return Number.isNaN(id) || id <= 0\n    })\n    return !containsInvalidId\n}\n\nexport const AddCollectibles = memo(function AddCollectibles(props: AddCollectiblesProps) {\n    const { pluginID, chainId: defaultChainId, account: defaultAccount, onAdd } = props\n    const { chainId } = useChainContext({ chainId: defaultChainId })\n    const t = useSharedTrans()\n    const theme = useTheme()\n    const walletAccount = useAccount()\n    const account = defaultAccount || walletAccount\n    const { classes } = useStyles(undefined, { props })\n    const Others = useWeb3Others(pluginID)\n\n    const {\n        control,\n        watch,\n        handleSubmit,\n        resetField,\n        formState: { errors, isValidating },\n    } = useForm({\n        mode: 'all',\n        defaultValues: { address: '', tokenIds: '' },\n    })\n    const watchedTokenIds = watch('tokenIds')\n    const tokenIds = useMemo(() => uniq(compact(watchedTokenIds.split(',').map((id) => id.trim()))), [watchedTokenIds])\n    const address = watch('address')\n    const hub = useWeb3Hub(pluginID, { chainId })\n    const connection = useWeb3Connection(pluginID, { chainId })\n\n    const { value: addressType, loading: loadingAddressType } = useAddressType(\n        pluginID,\n        Others.isValidAddress(address) ? address : '',\n        {\n            chainId,\n        },\n    )\n\n    const validationMsgForAddress = useMemo(() => {\n        if (!address) return ''\n        if (!Others.isValidAddress?.(address ?? '') || (addressType !== AddressType.Contract && !loadingAddressType))\n            return t.collectible_contract_invalid()\n        return ''\n    }, [address, addressType, loadingAddressType])\n\n    const {\n        data: contract,\n        isLoading: isLoadingContract,\n        isError,\n        refetch,\n    } = useQuery({\n        queryKey: ['nft-contract', pluginID, chainId, address],\n        queryFn: () => connection.getNonFungibleTokenContract(address, undefined, { chainId }),\n    })\n\n    const isValid = useMemo(() => {\n        return Boolean(isValidTokenIds(watchedTokenIds) && !validationMsgForAddress && address && tokenIds.length > 0)\n    }, [watchedTokenIds, validationMsgForAddress])\n\n    const Web3 = useWeb3Connection(pluginID, {\n        chainId,\n    })\n    const assetsQueries = useQueries({\n        queries: tokenIds.map((tokenId) => ({\n            enabled: isValid,\n            queryKey: ['nft-asset', account, pluginID, chainId, address, tokenId],\n            queryFn: async () => {\n                try {\n                    return await hub.getNonFungibleAsset(address, tokenId, { chainId, account })\n                } catch (err) {\n                    const token = await Web3.getNonFungibleToken(address, tokenId)\n                    return { ...token, owner: { address: token.ownerId } }\n                }\n            },\n        })),\n    })\n    const loadingAssets = assetsQueries.every((x) => x.isLoading)\n    const allFailed = assetsQueries.every((x) => x.failureReason)\n    const noResults = assetsQueries.every((x) => !x.isLoading && !x.data) || !isValid || allFailed\n    const someNotMine = assetsQueries.some((x) => (x.data ? !isSameAddress(x.data.owner?.address, account) : false))\n\n    const handleFormSubmit = useCallback(\n        (event: FormEvent<HTMLFormElement>) => {\n            handleSubmit(() => {})(event)\n        },\n        [handleSubmit],\n    )\n    const [selectedTokenIdsMap, setSelectedTokenIdsMap] = useState<Record<string, string[]>>({})\n    const selectedTokenIds = selectedTokenIdsMap[formatEthereumAddress(address)] || EMPTY_LIST\n\n    const toggleSelect = useCallback(\n        (asset: Web3Helper.NonFungibleAssetAll) => {\n            setSelectedTokenIdsMap((idsMap) => {\n                const ids = idsMap[formatEthereumAddress(address)] ?? []\n                const newIds = ids.includes(asset.tokenId)\n                    ? ids.filter((x) => x !== asset.tokenId)\n                    : [...ids, asset.tokenId]\n                return {\n                    ...idsMap,\n                    [formatEthereumAddress(address)]: newIds,\n                }\n            })\n        },\n        [address],\n    )\n\n    const handleAdd = useCallback(() => {\n        if (!contract) return\n        onAdd([contract, selectedTokenIds])\n    }, [contract, selectedTokenIds, onAdd])\n\n    const disabled = !selectedTokenIds.length || isLoadingContract || isValidating || props.disabled\n\n    return (\n        <form className={classes.form} onSubmit={handleFormSubmit}>\n            <Controller\n                control={control}\n                name=\"address\"\n                render={({ field }) => {\n                    return (\n                        <>\n                            <MaskTextField\n                                {...field}\n                                autoFocus\n                                placeholder={t.add_collectibles_address_placeholder()}\n                                error={!!(errors.address || validationMsgForAddress)}\n                                InputProps={{\n                                    spellCheck: false,\n                                    endAdornment: field.value ? (\n                                        <Icons.Close\n                                            size={18}\n                                            onClick={() => resetField('address')}\n                                            color={validationMsgForAddress ? theme.palette.maskColor.danger : undefined}\n                                        />\n                                    ) : null,\n                                    classes: { input: classes.input },\n                                }}\n                            />\n                            {validationMsgForAddress ? (\n                                <Typography className={classes.error} mt={0.5}>\n                                    {validationMsgForAddress}\n                                </Typography>\n                            ) : null}\n                        </>\n                    )\n                }}\n            />\n            <Box mt={2}>\n                <Controller\n                    control={control}\n                    name=\"tokenIds\"\n                    render={({ field }) => (\n                        <>\n                            <MaskTextField\n                                {...field}\n                                placeholder={t.add_collectibles_token_id_placeholder()}\n                                error={!!errors.tokenIds}\n                                InputProps={{\n                                    spellCheck: false,\n                                    endAdornment: field.value ? (\n                                        <Icons.Close\n                                            size={18}\n                                            onClick={() => resetField('tokenIds')}\n                                            color={errors.tokenIds ? theme.palette.maskColor.danger : undefined}\n                                        />\n                                    ) : null,\n                                    classes: { input: classes.input },\n                                }}\n                            />\n\n                            {errors.tokenIds ? (\n                                <Typography className={classes.error} mt={0.5}>\n                                    {errors.tokenIds?.message}\n                                </Typography>\n                            ) : null}\n                        </>\n                    )}\n                />\n            </Box>\n            {someNotMine ? (\n                <Typography className={classes.error} mt={1}>\n                    {t.collection_not_belong_to_you()}\n                </Typography>\n            ) : null}\n            <div className={classes.main}>\n                {!address || tokenIds.length === 0 ? null : (isLoadingContract || loadingAssets) &&\n                  isValid &&\n                  !allFailed ? (\n                    <LoadingStatus flexGrow={1} />\n                ) : isError ? (\n                    <ReloadStatus flexGrow={1} onRetry={refetch} />\n                ) : noResults ? (\n                    <EmptyStatus height=\"100%\">{t.no_results()}</EmptyStatus>\n                ) : (\n                    <Box className={classes.grid}>\n                        {assetsQueries\n                            .filter((x) => x.data)\n                            .map(({ data: asset, isLoading }, i) => {\n                                if (isLoading) return <CollectibleItemSkeleton key={i} />\n                                if (!asset) return null\n                                const isMine = isSameAddress(account, asset.owner?.address)\n                                return (\n                                    <CollectibleItem\n                                        key={`${asset.chainId}.${asset.address}.${asset.tokenId}`}\n                                        className={isMine ? undefined : classes.notMine}\n                                        asset={asset}\n                                        pluginID={pluginID}\n                                        disableName\n                                        actionLabel={t.send()}\n                                        disableAction\n                                        onItemClick={isMine ? toggleSelect : undefined}\n                                        isSelected={selectedTokenIds.includes(asset.tokenId)}\n                                        showUnCheckedIndicator\n                                    />\n                                )\n                            })}\n                    </Box>\n                )}\n            </div>\n            <Stack className={classes.toolbar} direction=\"row\" justifyContent=\"center\">\n                <ActionButton fullWidth startIcon={<Icons.Avatar size={18} />} disabled={disabled} onClick={handleAdd}>\n                    {t.add_collectibles()}\n                </ActionButton>\n            </Stack>\n        </form>\n    )\n})\n","import { memo, useState } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { AddCollectibles, FungibleTokenList, SelectNetworkSidebar, TokenListMode } from '@masknet/shared'\nimport { NetworkPluginID, PopupRoutes } from '@masknet/shared-base'\nimport { useRowSize } from '@masknet/shared-base-ui'\nimport { MaskTabList, makeStyles, usePopupCustomSnackbar, useTabs } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useBlockedFungibleTokens, useChainContext, useNetworks, useWeb3State } from '@masknet/web3-hooks-base'\nimport { TokenType, type NonFungibleTokenContract } from '@masknet/web3-shared-base'\nimport { ChainId, type SchemaType } from '@masknet/web3-shared-evm'\nimport { TabContext, TabPanel } from '@mui/lab'\nimport { Tab } from '@mui/material'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { NormalHeader } from '../../../components/index.js'\nimport { useTitle } from '../../../hooks/index.js'\nimport { WalletAssetTabs } from '../type.js'\n\nconst useStyles = makeStyles<{ searchError: boolean }>()((theme, { searchError }) => ({\n    content: {\n        flex: 1,\n        padding: '0 0 0 16px',\n        display: 'flex',\n        overflow: 'hidden',\n    },\n    channel: {\n        flex: 1,\n        paddingTop: theme.spacing(2),\n        '& > div': {\n            flex: 1,\n            display: 'flex',\n            flexDirection: 'column',\n        },\n    },\n    listBox: {\n        flex: 1,\n        marginTop: searchError ? 18 : 0,\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    wrapper: {\n        padding: theme.spacing(0, 2, 0, 1.5),\n    },\n    input: {\n        fontSize: 12,\n        background: '#F7F9FA',\n    },\n    tabs: {\n        flex: 'none!important',\n        paddingTop: '0px!important',\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    panel: {\n        padding: 0,\n        background: theme.palette.maskColor.bottom,\n        flex: 1,\n        overflow: 'auto',\n    },\n    main: {\n        flexGrow: 1,\n        height: '100%',\n        boxSizing: 'border-box',\n        overflow: 'auto',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    searchInput: {\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(1.5),\n        paddingBottom: theme.spacing(2),\n    },\n    sidebar: {\n        height: 432,\n        paddingTop: theme.spacing(2),\n    },\n    grid: {\n        gridTemplateColumns: 'repeat(auto-fill, minmax(40%, 1fr))',\n    },\n    form: {\n        padding: theme.spacing(2, 2, 0, 1.5),\n        height: 490,\n    },\n    nftContent: {\n        overflow: 'auto',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n}))\n\nenum TabType {\n    Tokens = 'Tokens',\n    Collectibles = 'Collectibles',\n}\n\nconst AddToken = memo(function AddToken() {\n    const t = useMaskSharedTrans()\n\n    const blackList = useBlockedFungibleTokens()\n    const rowSize = useRowSize()\n    const navigate = useNavigate()\n    const { chainId: defaultChainId, assetType } = useParams()\n    const { account } = useChainContext()\n    const [currentTab, onChange] = useTabs(\n        assetType === TabType.Collectibles ? TabType.Collectibles : TabType.Tokens,\n        TabType.Tokens,\n        TabType.Collectibles,\n    )\n    const [searchError, setSearchError] = useState(false)\n    const { classes } = useStyles({ searchError })\n    const allNetworks = useNetworks(NetworkPluginID.PLUGIN_EVM, true)\n\n    const supportedChains = allNetworks.map((x) => x.chainId)\n    const [chainId, setChainId] = useState<Web3Helper.ChainIdAll>(\n        defaultChainId && supportedChains.includes(Number.parseInt(defaultChainId, 10))\n            ? Number.parseInt(defaultChainId, 10)\n            : ChainId.Mainnet,\n    )\n\n    useTitle(t.add_assets())\n\n    const { Token } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n\n    const { showSnackbar } = usePopupCustomSnackbar()\n\n    const [{ loading: loadingAddCustomNFTs }, addCustomNFTs] = useAsyncFn(\n        async (result: [contract: NonFungibleTokenContract<ChainId, SchemaType>, tokenIds: string[]]) => {\n            const [contract, tokenIds] = result\n            await Token?.addNonFungibleTokens?.(account, contract, tokenIds)\n\n            for await (const tokenId of tokenIds) {\n                await Token?.addToken?.(account, {\n                    id: `${contract.chainId}.${contract.address}.${tokenId}`,\n                    chainId: contract.chainId,\n                    tokenId,\n                    type: TokenType.NonFungible,\n                    schema: contract.schema,\n                    address: contract.address,\n                })\n            }\n\n            showSnackbar(t.popups_wallet_collectible_added_successfully(), {\n                variant: 'success',\n            })\n            navigate(`${PopupRoutes.Wallet}?tab=${WalletAssetTabs.Collectibles}`, { replace: true })\n        },\n        [account],\n    )\n\n    return (\n        <TabContext value={currentTab}>\n            <NormalHeader\n                tabList={\n                    <MaskTabList onChange={onChange} aria-label=\"persona-tabs\" classes={{ root: classes.tabs }}>\n                        <Tab label={t.popups_wallet_token()} value={TabType.Tokens} />\n                        <Tab label={t.popups_wallet_collectible()} value={TabType.Collectibles} />\n                    </MaskTabList>\n                }\n            />\n            <div className={classes.content}>\n                <SelectNetworkSidebar\n                    className={classes.sidebar}\n                    hideAllButton\n                    chainId={chainId}\n                    onChainChange={(chainId) => setChainId(chainId ?? ChainId.Mainnet)}\n                    networks={allNetworks}\n                    pluginID={NetworkPluginID.PLUGIN_EVM}\n                />\n                <div className={classes.main}>\n                    <TabPanel className={classes.panel} value={TabType.Tokens}>\n                        <FungibleTokenList\n                            chainId={chainId}\n                            isHiddenChainIcon={false}\n                            mode={TokenListMode.Manage}\n                            classes={{\n                                channel: classes.channel,\n                                listBox: classes.listBox,\n                                searchInput: classes.searchInput,\n                            }}\n                            onSearchError={setSearchError}\n                            blacklist={blackList.map((x) => x.address)}\n                            FixedSizeListProps={{ height: 444, itemSize: rowSize + 16, className: classes.wrapper }}\n                            SearchTextFieldProps={{ className: classes.input }}\n                        />\n                    </TabPanel>\n                    <TabPanel className={classes.panel} value={TabType.Collectibles}>\n                        <AddCollectibles\n                            pluginID={NetworkPluginID.PLUGIN_EVM}\n                            chainId={chainId}\n                            onAdd={addCustomNFTs}\n                            disabled={loadingAddCustomNFTs}\n                            classes={{ grid: classes.grid, form: classes.form, main: classes.nftContent }}\n                        />\n                    </TabPanel>\n                </div>\n            </div>\n        </TabContext>\n    )\n})\n\nexport default AddToken\n","import { useEffect, useState } from 'react'\n\nexport function useRowSize() {\n    const [rowSize, setRowSize] = useState(54)\n\n    useEffect(() => {\n        try {\n            const fontSize = Number.parseFloat(getComputedStyle(document.documentElement).fontSize)\n            setRowSize(fontSize * 4)\n        } catch {\n            setRowSize(60)\n        }\n    }, [])\n    return rowSize\n}\n","import { makeStyles } from '@masknet/theme'\n\nconst useStyles = makeStyles()((theme) => ({\n    loading: {\n        display: 'flex',\n        columnGap: 4,\n        '@keyframes dotLoading': {\n            to: {\n                opacity: 0.1,\n            },\n        },\n        '& > div': {\n            animation: 'dotLoading 0.6s infinite alternate',\n        },\n        '& > div:nth-child(2)': {\n            animationDelay: '0.2s',\n        },\n        '& > div:nth-child(3)': {\n            animationDelay: '0.4s',\n        },\n    },\n    dot: {\n        width: 3,\n        height: 3,\n        backgroundColor: theme.palette.maskColor.main,\n    },\n}))\nexport function DotLoading() {\n    const { classes } = useStyles()\n    return (\n        <div className={classes.loading}>\n            <div className={classes.dot} />\n            <div className={classes.dot} />\n            <div className={classes.dot} />\n        </div>\n    )\n}\n","import { Stack, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\n\nexport function EmptyResult() {\n    return (\n        <Stack justifyContent=\"center\" alignItems=\"center\" gap={1.5}>\n            <Icons.EmptySimple size={36} />\n            <Typography>No results</Typography>\n        </Stack>\n    )\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { FixedSizeList, type FixedSizeListProps, type ListChildComponentProps } from 'react-window'\nimport Fuse from 'fuse.js'\nimport { uniqBy } from 'lodash-es'\nimport { Box, Stack, Typography, useTheme } from '@mui/material'\nimport { makeStyles } from '../../UIHelper/index.js'\nimport { MaskTextField, type MaskTextFieldProps } from '../TextField/index.js'\nimport { Icons } from '@masknet/icons'\nimport { EmptyResult } from './EmptyResult.js'\n\nexport interface MaskSearchableListProps<T> extends withClasses<'listBox' | 'searchInput'> {\n    /** The list data should be render */\n    data: T[]\n    /** The identity of list data item for remove duplicates item */\n    itemKey?: keyof T\n    /** The key of list item for search */\n    searchKey?: string[]\n    /** Renderer for each list item */\n    itemRender: React.ComponentType<ListChildComponentProps>\n    /** The props to react-window */\n    FixedSizeListProps?: Partial<FixedSizeListProps>\n    /** The callback when clicked someone list item */\n    onSelect?(selected: T): void\n    /** The hook when search */\n    onSearch?(key: string): void\n    /** Props for search box */\n    SearchFieldProps?: MaskTextFieldProps\n    /** Show search bar */\n    disableSearch?: boolean\n}\n\n/**\n * This component is used to provide a searchable list in Mask design.\n *\n * @example\n * interface IListDate { name: string }\n * const ListItem = ({ name }: IListDate) => <div>{ name }</div>\n * const onSelect = () => {}\n *\n * return (\n *      <SearchableList<IListDate>\n *           onSelect={onSelect}\n *           data={ListData}\n *           searchKey={['name']}\n *           itemRender={ListItem}\n *      />\n * )\n */\nexport function SearchableList<T extends {}>({\n    itemKey,\n    data,\n    onSelect,\n    onSearch,\n    disableSearch,\n    searchKey,\n    itemRender,\n    FixedSizeListProps = {},\n    SearchFieldProps,\n    ...props\n}: MaskSearchableListProps<T>) {\n    const [keyword, setKeyword] = useState('')\n    const theme = useTheme()\n    const { classes } = useStyles(undefined, { props })\n    const { height = 300, itemSize, ...rest } = FixedSizeListProps\n    const { InputProps, ...textFieldPropsRest } = SearchFieldProps ?? {}\n\n    // #region create searched data\n    const readyToRenderData = useMemo(() => {\n        if (!keyword) return data\n\n        const fuse = new Fuse(data, {\n            shouldSort: true,\n            isCaseSensitive: false,\n            threshold: 0.45,\n            minMatchCharLength: 1,\n            keys: searchKey ?? Object.keys(data.length > 0 ? data[0] : []),\n        })\n        const filtered = fuse.search(keyword).map((x: any) => x.item)\n        return itemKey ? uniqBy(filtered, (x) => x[itemKey]) : filtered\n    }, [keyword, JSON.stringify(data)])\n    // #endregion\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.currentTarget.value\n        setKeyword(value)\n        onSearch?.(value)\n        if (!value) handleClear()\n    }\n\n    const handleClear = () => {\n        setKeyword('')\n        onSearch?.('')\n    }\n\n    const getItemKey = useCallback(\n        (\n            index: number,\n            data: {\n                dataSet: T[]\n            },\n        ) => {\n            if (!itemKey) return index.toString()\n            return data.dataSet[index][itemKey] as string\n        },\n        [itemKey],\n    )\n\n    const windowHeight = !!textFieldPropsRest.error && typeof height === 'number' ? height - 28 : height\n\n    return (\n        <div className={classes.container}>\n            {!disableSearch && (\n                <Box className={classes.searchInput}>\n                    <MaskTextField\n                        value={keyword}\n                        placeholder=\"Search\"\n                        autoFocus\n                        fullWidth\n                        InputProps={{\n                            style: { height: 40 },\n                            inputProps: { style: { paddingLeft: 4 } },\n                            startAdornment: <Icons.Search size={18} />,\n                            endAdornment: keyword ? (\n                                <Icons.Close\n                                    size={18}\n                                    onClick={handleClear}\n                                    color={textFieldPropsRest.error ? theme.palette.maskColor.danger : undefined}\n                                />\n                            ) : null,\n                            ...InputProps,\n                        }}\n                        onChange={handleChange}\n                        {...textFieldPropsRest}\n                    />\n                    {textFieldPropsRest.error ? (\n                        <Typography className={classes.error} mt={0.5}>\n                            {textFieldPropsRest.helperText}\n                        </Typography>\n                    ) : null}\n                </Box>\n            )}\n            {readyToRenderData.length === 0 && (\n                <Stack\n                    height={windowHeight}\n                    justifyContent=\"center\"\n                    alignContent=\"center\"\n                    marginTop=\"18px\"\n                    marginBottom=\"48px\">\n                    <EmptyResult />\n                </Stack>\n            )}\n            {readyToRenderData.length !== 0 && (\n                <div className={classes.listBox}>\n                    <FixedSizeList\n                        className={classes.list}\n                        width=\"100%\"\n                        height={windowHeight}\n                        overscanCount={25}\n                        itemSize={itemSize ?? 100}\n                        itemData={{\n                            dataSet: readyToRenderData,\n                            onSelect,\n                        }}\n                        itemKey={(index, data) => getItemKey(index, data)}\n                        itemCount={readyToRenderData.length}\n                        {...rest}>\n                        {itemRender}\n                    </FixedSizeList>\n                </div>\n            )}\n        </div>\n    )\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        overflow: 'visible',\n    },\n    listBox: {\n        '& > div::-webkit-scrollbar': {\n            backgroundColor: 'transparent',\n            width: 0,\n        },\n        '& > div::-webkit-scrollbar-thumb': {\n            borderRadius: '20px',\n            width: 5,\n            border: '7px solid rgba(0, 0, 0, 0)',\n            backgroundColor: theme.palette.maskColor.secondaryLine,\n            backgroundClip: 'padding-box',\n        },\n        '& > div > div': {\n            position: 'relative',\n            margin: 'auto',\n        },\n    },\n    list: {\n        scrollbarWidth: 'thin',\n    },\n    error: {\n        backgroundColor: theme.palette.maskColor.bottom,\n        fontSize: 14,\n        color: theme.palette.maskColor.danger,\n    },\n}))\n\nexport interface MaskFixedSizeListProps extends FixedSizeListProps {}\n","import { useAsyncRetry } from 'react-use'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\nexport function useFungibleTokensFromTokenList<\n    S extends 'all' | void = void,\n    T extends NetworkPluginID = NetworkPluginID,\n>(pluginID?: T, options?: HubOptions<T>) {\n    const { chainId } = useChainContext({ chainId: options?.chainId })\n    const Hub = useWeb3Hub(pluginID, {\n        chainId,\n        ...options,\n    })\n\n    return useAsyncRetry<Array<Web3Helper.FungibleTokenScope<S, T>> | undefined>(async () => {\n        return Hub.getFungibleTokensFromTokenList(chainId, { chainId })\n    }, [chainId, Hub])\n}\n","import { useAsyncRetry } from 'react-use'\nimport { EMPTY_OBJECT, type NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useFungibleTokensBalance<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    listOfAddress?: string[],\n    options?: ConnectionOptions<T>,\n) {\n    const Web3 = useWeb3Connection(pluginID, options)\n\n    return useAsyncRetry(async () => {\n        if (!listOfAddress?.length) return EMPTY_OBJECT\n        return Web3.getFungibleTokensBalance(listOfAddress)\n    }, [listOfAddress?.join(','), Web3])\n}\n","import { Switch, styled, switchClasses } from '@mui/material'\n\nexport const SettingSwitch = styled<typeof Switch>(Switch)(({ size, disabled }) => {\n    const isSmall = size === 'small'\n    const base = isSmall ? 16 : 24\n    return {\n        [`&.${switchClasses.root}`]: {\n            width: base * 3,\n            height: base * 2,\n            padding: '5px 3px',\n        },\n        [`& .${switchClasses.thumb}`]: {\n            width: base,\n            height: base,\n        },\n        [`& .${switchClasses.checked}`]: {\n            color: 'white !important',\n            [`&.${switchClasses.switchBase}`]: {\n                transform: `translateX(${isSmall ? 20 : 28}px)`,\n            },\n            [`&+.${switchClasses.track}`]: {\n                opacity: '1 !important',\n                backgroundColor: `${disabled ? 'rgba(61, 194, 51, 0.5)' : '#3DC233'} !important`,\n            },\n        },\n        [`& .${switchClasses.track}`]: {\n            borderRadius: 12,\n        },\n        [`& .${switchClasses.switchBase}`]: {\n            top: isSmall ? 4 : 3,\n            transform: `translateX(${isSmall ? 4 : 2}px)`,\n        },\n    }\n}) as any as typeof Switch\n","import { useBlockedFungibleTokens, useTrustedFungibleTokens } from '@masknet/web3-hooks-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport type { ChainId } from '@masknet/web3-shared-evm'\n\nexport const useTokenBlocked = (address: string) => {\n    const blockedFungibleTokens = useBlockedFungibleTokens(NetworkPluginID.PLUGIN_EVM, undefined)\n\n    return !!blockedFungibleTokens?.find((x) => isSameAddress(x.address, address))\n}\n\nexport const useTokenTrusted = (address: string, chainId: ChainId) => {\n    const trustedFungibleTokens = useTrustedFungibleTokens(NetworkPluginID.PLUGIN_EVM, undefined, chainId)\n\n    return !!trustedFungibleTokens?.find((x) => isSameAddress(x.address, address))\n}\n","import { memo, useMemo } from 'react'\nimport { Box, Link, ListItem, ListItemIcon, ListItemText, Typography } from '@mui/material'\nimport { formatBalance, type FungibleToken } from '@masknet/web3-shared-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { TokenIcon } from '../TokenIcon/index.js'\nimport { Icons } from '@masknet/icons'\nimport { useFungibleTokenBalance, useNetwork, useNetworkContext, useWeb3Others } from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { makeStyles, LoadingBase, ActionButton } from '@masknet/theme'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { TokenListMode } from './type.js'\nimport { SettingSwitch } from '../SettingSwitch/index.js'\nimport { useTokenBlocked, useTokenTrusted } from './useTokenBlocked.js'\nimport { FormattedBalance } from '../../wallet/index.js'\nimport { DotLoading, NetworkIcon } from '../index.js'\nimport { useAsyncFn } from 'react-use'\n\nconst useStyles = makeStyles()((theme) => ({\n    icon: {\n        width: 36,\n        height: 36,\n    },\n    list: {\n        maxHeight: '100%',\n        padding: theme.spacing(1.5),\n        marginBottom: theme.spacing(0.5),\n        borderRadius: theme.spacing(1),\n        backdropFilter: 'blur(16px)',\n        '&:hover': {\n            background: theme.palette.maskColor.bg,\n        },\n    },\n    text: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    primary: {\n        flex: 1,\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        paddingRight: theme.spacing(1),\n    },\n    name: {\n        display: 'flex',\n        gap: theme.spacing(0.5),\n        alignItems: 'center',\n        lineHeight: '20px',\n        color: theme.palette.maskColor.second,\n    },\n    nameText: {\n        maxWidth: 400,\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n    },\n    symbol: {\n        lineHeight: '20px',\n        fontSize: 16,\n    },\n    balance: {\n        fontSize: 16,\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n    },\n    importButton: {\n        borderRadius: 99,\n    },\n    action: {\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    switch: {\n        position: 'relative',\n        left: theme.spacing(1),\n    },\n    link: {\n        color: theme.palette.maskColor.second,\n    },\n    badgeIcon: {\n        position: 'absolute',\n        right: -6,\n        bottom: -4,\n        border: `1px solid ${theme.palette.common.white}`,\n        borderRadius: '50%',\n    },\n    dotLoadingWrapper: {\n        display: 'flex',\n        flexDirection: 'column-reverse',\n        height: 15,\n    },\n}))\n\nexport const getFungibleTokenItem = <T extends NetworkPluginID>(\n    getSource: (address: string) => 'personal' | 'official' | 'external' | 'official-native',\n    isSelected: (address: string) => boolean,\n    mode: TokenListMode,\n    addOrRemoveTokenToLocal: (\n        token: FungibleToken<Web3Helper.Definition[T]['ChainId'], Web3Helper.Definition[T]['SchemaType']>,\n        strategy: 'add' | 'remove',\n    ) => Promise<void>,\n    trustOrBlockTokenToLocal: (\n        token: FungibleToken<Web3Helper.Definition[T]['ChainId'], Web3Helper.Definition[T]['SchemaType']>,\n        strategy: 'trust' | 'block',\n    ) => Promise<void>,\n    isHiddenChainIcon?: boolean,\n    isCustomToken?: boolean,\n) => {\n    return memo(({ data, index, style }: any) => {\n        const t = useSharedTrans()\n        const { classes } = useStyles()\n        const Others = useWeb3Others()\n\n        const token = data.dataSet[index]\n        const onSelect = data.onSelect\n\n        const { chainId, address, name, symbol, decimals, logoURL, balance } = token\n\n        const isBlocked = useTokenBlocked(address)\n        const isTrust = useTokenTrusted(address, token.chainId)\n\n        const { pluginID } = useNetworkContext<T>()\n        const network = useNetwork(pluginID, chainId)\n\n        const { source, selected } = useMemo(() => {\n            return {\n                source: getSource(address),\n                selected: isSelected(address),\n            }\n        }, [address, getSource, isSelected])\n\n        const [{ loading: onAddOrRemoveTokenToLocalLoading }, onAddOrRemoveTokenToLocal] = useAsyncFn(\n            async (event: React.MouseEvent<HTMLButtonElement | HTMLElement>, strategy: 'add' | 'remove') => {\n                event.stopPropagation()\n                if (token) await addOrRemoveTokenToLocal(token, strategy)\n            },\n            [token, addOrRemoveTokenToLocal],\n        )\n\n        const [{ loading: onTrustOrBlockTokenToLocalLoading }, onTrustOrBlockTokenToLocal] = useAsyncFn(\n            async (event: React.ChangeEvent<HTMLInputElement>) => {\n                event.stopPropagation()\n                if (token) await trustOrBlockTokenToLocal(token, event.target.checked ? 'trust' : 'block')\n            },\n            [token, trustOrBlockTokenToLocal],\n        )\n\n        const explorerLink = useMemo(() => {\n            return Others.explorerResolver.fungibleTokenLink(token.chainId, token.address)\n        }, [token.address, token.chainId, Others.explorerResolver.fungibleTokenLink])\n\n        const action = useMemo(() => {\n            if (mode === TokenListMode.Manage) {\n                if (source === 'personal')\n                    return <Icons.TrashLine onClick={(e) => onAddOrRemoveTokenToLocal(e, 'remove')} size={24} />\n                return (\n                    <>\n                        {isCustomToken ? (\n                            <ActionButton\n                                color=\"primary\"\n                                disabled={onAddOrRemoveTokenToLocalLoading}\n                                loading={onAddOrRemoveTokenToLocalLoading}\n                                className={classes.importButton}\n                                onClick={(e) => onAddOrRemoveTokenToLocal(e, 'add')}>\n                                {t.import()}\n                            </ActionButton>\n                        ) : (\n                            <SettingSwitch\n                                disabled={\n                                    (source === 'official-native' && mode === TokenListMode.Manage) ||\n                                    onTrustOrBlockTokenToLocalLoading\n                                }\n                                classes={{ root: classes.switch }}\n                                onChange={async (event) => {\n                                    event.stopPropagation()\n                                    event.preventDefault()\n                                    await onTrustOrBlockTokenToLocal(event)\n                                }}\n                                size=\"small\"\n                                checked={!isBlocked}\n                            />\n                        )}\n                    </>\n                )\n            }\n            return (\n                <Typography className={classes.balance}>\n                    {balance === undefined ? (\n                        <LoadingBase size={24} />\n                    ) : balance === '' ? null : (\n                        <FormattedBalance\n                            value={balance}\n                            decimals={decimals}\n                            significant={6}\n                            formatter={formatBalance}\n                        />\n                    )}\n                </Typography>\n            )\n        }, [balance, decimals, isBlocked, source, mode, isTrust])\n\n        const { data: tokenBalance, isLoading: isLoadingTokenBalance } = useFungibleTokenBalance(\n            NetworkPluginID.PLUGIN_EVM,\n            isCustomToken ? address : '',\n            {\n                chainId,\n            },\n        )\n\n        return (\n            <div style={style}>\n                <ListItem\n                    title={address}\n                    key={address}\n                    button\n                    className={`${classes.list} dashboard token-list`}\n                    onClick={mode === TokenListMode.List ? () => onSelect(token) : undefined}\n                    disabled={!!(selected && mode === TokenListMode.List)}>\n                    <ListItemIcon>\n                        <Box position=\"relative\">\n                            <TokenIcon\n                                className={classes.icon}\n                                chainId={chainId}\n                                address={address}\n                                name={name}\n                                logoURL={logoURL}\n                            />\n                            {isHiddenChainIcon || !network?.iconUrl ? null : (\n                                <NetworkIcon\n                                    pluginID={pluginID}\n                                    chainId={chainId}\n                                    className={classes.badgeIcon}\n                                    size={16}\n                                />\n                            )}\n                        </Box>\n                    </ListItemIcon>\n                    <ListItemText classes={{ primary: classes.text }}>\n                        <Typography className={classes.primary} color=\"textPrimary\" component=\"span\">\n                            <span className={classes.symbol}>{symbol}</span>\n                            <span className={`${classes.name} dashboard token-list-symbol`}>\n                                {isCustomToken ? (\n                                    isLoadingTokenBalance ? (\n                                        <span className={classes.dotLoadingWrapper}>\n                                            <DotLoading />\n                                        </span>\n                                    ) : (\n                                        <FormattedBalance\n                                            value={tokenBalance}\n                                            decimals={decimals}\n                                            significant={6}\n                                            formatter={formatBalance}\n                                        />\n                                    )\n                                ) : (\n                                    <>\n                                        <span className={classes.nameText}>{name}</span>\n                                        <Link\n                                            onClick={(event) => event.stopPropagation()}\n                                            href={explorerLink}\n                                            style={{ width: 18, height: 18 }}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\">\n                                            <Icons.PopupLink size={18} className={classes.link} />\n                                        </Link>\n                                        {token.isCustomToken ? <span>{t.added_by_user()}</span> : null}\n                                    </>\n                                )}\n                            </span>\n                        </Typography>\n                        <Typography\n                            className={classes.action}\n                            sx={{ fontSize: 16 }}\n                            color=\"textSecondary\"\n                            component=\"span\">\n                            {action}\n                        </Typography>\n                    </ListItemText>\n                </ListItem>\n            </div>\n        )\n    })\n}\n","import { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { Stack, Typography } from '@mui/material'\nimport { memo } from 'react'\nimport { useSharedTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        padding: theme.spacing(2.25, 0),\n        margin: theme.spacing(2, -2, -2, -2),\n        boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.05)',\n        backdropFilter: 'blur(16px)',\n        borderRadius: theme.spacing(0, 0, 1.5, 1.5),\n    },\n    target: {\n        cursor: 'pointer',\n        fontWeight: 700,\n    },\n}))\n\ninterface ManageTokenListBarProps {\n    onClick(): void\n}\n\nexport const ManageTokenListBar = memo<ManageTokenListBarProps>(({ onClick }) => {\n    const t = useSharedTrans()\n    const { classes } = useStyles()\n    return (\n        <Stack className={classes.root} direction=\"row\" justifyContent=\"center\">\n            <Stack className={classes.target} display=\"inline-flex\" gap={2} direction=\"row\" onClick={onClick}>\n                <Icons.Edit2 />\n                <Typography>{t.erc20_manage_token_list()}</Typography>\n            </Stack>\n        </Stack>\n    )\n})\n","import { useCallback, useEffect, useMemo, useState, useTransition } from 'react'\nimport { uniqBy } from 'lodash-es'\nimport { EMPTY_LIST, EMPTY_OBJECT, type NetworkPluginID } from '@masknet/shared-base'\nimport { SearchableList, makeStyles, type MaskFixedSizeListProps, type MaskTextFieldProps } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { AddressType } from '@masknet/web3-shared-evm'\nimport {\n    useAccount,\n    useAddressType,\n    useBlockedFungibleTokens,\n    useChainId,\n    useFungibleAssets,\n    useFungibleToken,\n    useFungibleTokenBalance,\n    useFungibleTokensBalance,\n    useFungibleTokensFromTokenList,\n    useNetworkContext,\n    useTrustedFungibleTokens,\n    useWeb3Others,\n    useWeb3State,\n} from '@masknet/web3-hooks-base'\nimport {\n    CurrencyType,\n    ZERO,\n    currySameAddress,\n    isSameAddress,\n    leftShift,\n    toZero,\n    type FungibleToken,\n} from '@masknet/web3-shared-base'\nimport { Box, Stack } from '@mui/material'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { getFungibleTokenItem } from './FungibleTokenItem.js'\nimport { ManageTokenListBar } from './ManageTokenListBar.js'\nimport { TokenListMode } from './type.js'\n\nexport * from './type.js'\n\nconst SEARCH_KEYS = ['address', 'symbol', 'name']\n\nexport interface FungibleTokenListProps<T extends NetworkPluginID>\n    extends withClasses<'channel' | 'bar' | 'listBox' | 'searchInput'> {\n    pluginID?: T\n    chainId?: Web3Helper.ChainIdAll\n    whitelist?: string[]\n    blacklist?: string[]\n    tokens?: Array<FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>>\n    selectedTokens?: string[]\n    disableSearch?: boolean\n    onSelect?(token: FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll> | null): void\n    onSearchError?(error: boolean): void\n    FixedSizeListProps?: Partial<MaskFixedSizeListProps>\n    SearchTextFieldProps?: MaskTextFieldProps\n    enableManage?: boolean\n    isHiddenChainIcon?: boolean\n    setMode?(mode: TokenListMode): void\n    mode?: TokenListMode\n}\n\nconst useStyles = makeStyles<{ enableMange: boolean }>()((theme, { enableMange }) => ({\n    channel: {\n        position: enableMange ? 'relative' : 'unset',\n    },\n    bar: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n    },\n}))\n\nexport function FungibleTokenList<T extends NetworkPluginID>(props: FungibleTokenListProps<T>) {\n    const {\n        tokens = EMPTY_LIST,\n        whitelist: includeTokens,\n        blacklist: excludeTokens = EMPTY_LIST,\n        onSelect,\n        onSearchError,\n        FixedSizeListProps,\n        selectedTokens = EMPTY_LIST,\n        enableManage = false,\n        isHiddenChainIcon = true,\n        setMode,\n        mode = TokenListMode.List,\n    } = props\n\n    const t = useSharedTrans()\n    const { classes } = useStyles({ enableMange: mode === TokenListMode.List && enableManage }, { props })\n\n    const { pluginID } = useNetworkContext<T>(props.pluginID)\n    const account = useAccount(pluginID)\n    const chainId = useChainId(pluginID, props.chainId)\n    const { Token } = useWeb3State<'all'>(pluginID)\n    const Others = useWeb3Others(pluginID)\n\n    const { value: fungibleTokens = EMPTY_LIST } = useFungibleTokensFromTokenList(pluginID, {\n        chainId,\n    })\n\n    const { data: fungibleAssets = EMPTY_LIST } = useFungibleAssets(pluginID, undefined, {\n        chainId,\n    })\n\n    const trustedFungibleTokens = useTrustedFungibleTokens(pluginID, undefined, chainId)\n    const blockedFungibleTokens = useBlockedFungibleTokens(pluginID)\n    const nativeToken = useMemo(() => Others.chainResolver.nativeCurrency(chainId), [chainId])\n\n    const filteredFungibleTokens = useMemo(() => {\n        const allFungibleTokens = uniqBy(\n            [...(nativeToken ? [nativeToken] : []), ...tokens, ...fungibleTokens, ...trustedFungibleTokens],\n            (x) => x.address.toLowerCase(),\n        )\n\n        const blockedTokenAddresses = blockedFungibleTokens.map((x) => x.address)\n        return allFungibleTokens.filter((token) => {\n            const checkSameAddress = (addr: string) => addr.toLowerCase() === token.address.toLowerCase()\n            const isIncluded = !includeTokens || includeTokens.some(checkSameAddress)\n            const isExcluded = excludeTokens.length ? excludeTokens.some(checkSameAddress) : false\n            const isBlocked = blockedTokenAddresses.some(checkSameAddress)\n\n            return isIncluded && !isExcluded && !isBlocked\n        })\n    }, [\n        nativeToken,\n        tokens,\n        fungibleTokens,\n        trustedFungibleTokens,\n        includeTokens,\n        excludeTokens,\n        blockedFungibleTokens,\n    ])\n\n    const { value: fungibleTokensBalance = EMPTY_OBJECT } = useFungibleTokensBalance(\n        pluginID,\n        filteredFungibleTokens.map((x) => x.address),\n        { account, chainId },\n    )\n\n    // To avoid SearchableList re-render, reduce the dep\n    const sortedFungibleTokensForManage = useMemo(() => {\n        if (mode === TokenListMode.List) return EMPTY_LIST\n        const isTrustedToken = currySameAddress(trustedFungibleTokens.map((x) => x.address))\n\n        return uniqBy([...(nativeToken ? [nativeToken] : []), ...fungibleTokens, ...trustedFungibleTokens], (x) =>\n            x.address.toLowerCase(),\n        ).sort((a, z) => {\n            // trusted token\n            if (isTrustedToken(a.address)) return -1\n            if (isTrustedToken(z.address)) return 1\n\n            const isNativeTokenA = isSameAddress(a.address, Others.getNativeTokenAddress(a.chainId))\n            if (isNativeTokenA) return -1\n            const isNativeTokenZ = isSameAddress(z.address, Others.getNativeTokenAddress(z.chainId))\n            if (isNativeTokenZ) return 1\n\n            // mask token with position value\n            const isMaskTokenA = isSameAddress(a.address, Others.getMaskTokenAddress(a.chainId))\n            if (isMaskTokenA) return -1\n            const isMaskTokenZ = isSameAddress(z.address, Others.getMaskTokenAddress(z.chainId))\n            if (isMaskTokenZ) return 1\n\n            if (z.rank && (!a.rank || a.rank - z.rank > 0)) return 1\n            if (a.rank && (!z.rank || z.rank - a.rank > 0)) return -1\n\n            // alphabet\n            if (a.name !== z.name) return a.name < z.name ? -1 : 1\n\n            return 0\n        })\n    }, [chainId, trustedFungibleTokens, fungibleTokens, nativeToken, mode])\n\n    const sortedFungibleTokensForList = useMemo(() => {\n        if (mode === TokenListMode.Manage) return EMPTY_LIST\n        const fungibleAssetsTable = Object.fromEntries(\n            fungibleAssets.filter((x) => x.chainId === chainId).map((x) => [x.address, x]),\n        )\n        const isTrustedToken = currySameAddress(trustedFungibleTokens.map((x) => x.address))\n\n        const getTokenValue = (address: string) => {\n            const value = fungibleAssetsTable[address]?.value?.[CurrencyType.USD]\n            return value ? toZero(value) : ZERO\n        }\n        const { getNativeTokenAddress, getMaskTokenAddress } = Others\n        return filteredFungibleTokens\n            .map((x) => ({\n                ...x,\n                // To avoid reduce re-render, merge balance into token, when value is `undefined` to represent loading\n                balance: fungibleTokensBalance[x.address],\n            }))\n            .sort((a, z) => {\n                // the currently selected chain id\n                if (a.chainId !== z.chainId) {\n                    if (a.chainId === chainId) return -1\n                    if (z.chainId === chainId) return 1\n                }\n\n                // native token\n                const isNativeTokenA = isSameAddress(a.address, getNativeTokenAddress(a.chainId))\n                if (isNativeTokenA) return -1\n                const isNativeTokenZ = isSameAddress(z.address, getNativeTokenAddress(z.chainId))\n                if (isNativeTokenZ) return 1\n\n                // mask token with position value\n                const aUSD = getTokenValue(a.address)\n                const isMaskTokenA = isSameAddress(a.address, getMaskTokenAddress(a.chainId))\n                if (aUSD.isPositive() && isMaskTokenA) return -1\n                const zUSD = getTokenValue(z.address)\n                const isMaskTokenZ = isSameAddress(z.address, getMaskTokenAddress(z.chainId))\n                if (zUSD.isPositive() && isMaskTokenZ) return 1\n\n                // token value\n                if (!aUSD.isEqualTo(zUSD)) return zUSD.gt(aUSD) ? 1 : -1\n\n                const aBalance = leftShift(fungibleTokensBalance[a.address] ?? '0', a.decimals)\n                const zBalance = leftShift(fungibleTokensBalance[z.address] ?? '0', z.decimals)\n                // token balance\n                if (!aBalance.isEqualTo(zBalance)) return zBalance.gt(aBalance) ? 1 : -1\n\n                // trusted token\n                if (isTrustedToken(a.address)) return -1\n                if (isTrustedToken(z.address)) return 1\n\n                // mask token with position value\n                if (isMaskTokenA) return -1\n                if (isMaskTokenZ) return 1\n\n                if (z.rank && (!a.rank || a.rank - z.rank > 0)) return 1\n                if (a.rank && (!z.rank || z.rank - a.rank > 0)) return -1\n\n                // alphabet\n                if (a.name !== z.name) return a.name < z.name ? -1 : 1\n\n                return 0\n            })\n    }, [mode, chainId, fungibleAssets, trustedFungibleTokens, filteredFungibleTokens, fungibleTokensBalance])\n\n    // #region add token by address\n    const [keyword, setKeyword] = useState('')\n\n    const { value: addressType } = useAddressType(pluginID, !Others.isValidAddress?.(keyword ?? '') ? '' : keyword, {\n        chainId,\n    })\n\n    const isAddressNotContract = addressType !== AddressType.Contract && Others.isValidAddress(keyword)\n\n    const searchedTokenAddress = useMemo(() => {\n        if (!keyword) return\n\n        return Others.isValidAddress(keyword) &&\n            !sortedFungibleTokensForList.some((x) => isSameAddress(x.address, keyword))\n            ? keyword\n            : ''\n    }, [keyword, sortedFungibleTokensForList])\n    const searchError = keyword.match(/^0x.+/i) && !Others.isValidAddress(keyword) ? t.erc20_search_wrong_address() : ''\n    useEffect(() => {\n        onSearchError?.(!!searchError)\n    }, [searchError, !searchError])\n\n    const { data: searchedToken } = useFungibleToken(pluginID, searchedTokenAddress, undefined, {\n        chainId,\n    })\n\n    const isCustomToken = useMemo(\n        () =>\n            !sortedFungibleTokensForManage.find(\n                (x) => isSameAddress(x.address, searchedToken?.address) && searchedToken?.chainId === x.chainId,\n            ) && Boolean(searchedToken),\n        [sortedFungibleTokensForManage, searchedToken],\n    )\n\n    const { data: tokenBalance = '' } = useFungibleTokenBalance(pluginID, searchedToken?.address, {\n        chainId,\n        account,\n    })\n    // #endregion\n\n    const itemRender = useMemo(() => {\n        return getFungibleTokenItem<T>(\n            (address) => {\n                if (isSameAddress(nativeToken?.address, address)) return 'official-native'\n\n                const inOfficialList = fungibleTokens.some((x) => isSameAddress(x.address, address))\n                if (inOfficialList) return 'official'\n\n                const inPersonaList = trustedFungibleTokens.some((x) => isSameAddress(x.address, address))\n                if (inPersonaList) return 'personal'\n\n                return 'external'\n            },\n            (address) => selectedTokens.some((x) => isSameAddress(x, address)),\n            mode,\n            async (\n                token: FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>,\n                strategy: 'add' | 'remove',\n            ) => {\n                if (strategy === 'add') await Token?.addToken?.(account, token)\n                if (strategy === 'remove') await Token?.removeToken?.(account, token)\n            },\n            async (\n                token: FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>,\n                strategy: 'trust' | 'block',\n            ) => {\n                if (strategy === 'trust') await Token?.trustToken?.(account, token)\n                if (strategy === 'block') await Token?.blockToken?.(account, token)\n            },\n            isHiddenChainIcon,\n            isCustomToken,\n        )\n    }, [\n        nativeToken?.address,\n        selectedTokens,\n        mode,\n        trustedFungibleTokens,\n        fungibleTokens,\n        isCustomToken,\n        isHiddenChainIcon,\n    ])\n    const SearchFieldProps = useMemo(\n        () => ({\n            placeholder: t.erc20_token_list_placeholder(),\n            helperText: searchError,\n            error: !!searchError,\n            ...props.SearchTextFieldProps,\n        }),\n        [searchError, JSON.stringify(props.SearchTextFieldProps)],\n    )\n\n    const [, startTransition] = useTransition()\n\n    const handleSelect = useCallback(\n        (token: FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll> | null) =>\n            startTransition(() => onSelect?.(token)),\n        [onSelect],\n    )\n\n    return (\n        <Stack className={classes.channel}>\n            <SearchableList<\n                FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll> & {\n                    balance?: string\n                    isCustomToken?: boolean\n                }\n            >\n                onSelect={handleSelect}\n                onSearch={setKeyword}\n                data={\n                    isAddressNotContract\n                        ? EMPTY_LIST\n                        : searchedToken && isSameAddress(searchedToken.address, searchedTokenAddress)\n                        ? // balance field work for case: user search someone token by contract and whitelist is empty.\n                          [{ ...searchedToken, balance: tokenBalance, isCustomToken }]\n                        : mode === TokenListMode.List\n                        ? sortedFungibleTokensForList\n                        : sortedFungibleTokensForManage\n                }\n                searchKey={SEARCH_KEYS}\n                disableSearch={!!props.disableSearch}\n                itemKey=\"address\"\n                classes={{ listBox: classes.listBox, searchInput: classes.searchInput }}\n                itemRender={itemRender}\n                FixedSizeListProps={FixedSizeListProps}\n                SearchFieldProps={SearchFieldProps}\n            />\n            {mode === TokenListMode.List && enableManage ? (\n                <Box className={classes.bar}>\n                    <ManageTokenListBar onClick={() => setMode?.(TokenListMode.Manage)} />\n                </Box>\n            ) : null}\n        </Stack>\n    )\n}\n\nFungibleTokenList.displayName = 'FungibleTokenList'\n","export enum TokenListMode {\n    List = 'list',\n    Manage = 'manage',\n}\n","import { useCallback, useEffect, useState, useTransition } from 'react'\n\n/**\n * @example\n *  const [currentTab, onChange, tabs, setTab] = useTab('tab1', 'tab2', 'tab3')\n *  return (\n *      <TabContext value={currentTab}>\n *          <TabList onChange={onChange}>\n *              <Tab label=\"Item One\" value={tabs.tab1} />\n *              <Tab label=\"Item Two\" value={tabs.tab2} />\n *              <Tab label=\"Item Three\" value={tabs.tab3} />\n *          </TabList>\n *          <TabPanel value={tabs.tab1}>Item One</TabPanel>\n *          <TabPanel value={tabs.tab2}>Item Two</TabPanel>\n *          <TabPanel value={tabs.tab3}>Item Three</TabPanel>\n *      </TabContext>\n *  )\n */\nexport function useTabs<T extends string>(defaultTab: T, ...possibleTabs: T[]) {\n    const [currentTab, setTab] = useState(defaultTab)\n    const [, startTransition] = useTransition()\n    const tabRecords = { [defaultTab]: defaultTab } as Record<T, T>\n    possibleTabs.forEach((t) => (tabRecords[t] = t))\n\n    const isCurrentTabAvailable = [defaultTab, ...possibleTabs].includes(currentTab)\n    useEffect(() => {\n        if (!isCurrentTabAvailable) {\n            setTab(defaultTab)\n        }\n    }, [isCurrentTabAvailable, defaultTab])\n\n    const onChange = useCallback((event: unknown, value: any) => {\n        startTransition(() => setTab(value))\n    }, [])\n    return [currentTab, onChange, tabRecords, setTab] as const\n}\n","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n"],"names":["Icons","EMPTY_LIST","ActionButton","MaskTextField","makeStyles","useAccount","useAddressType","useChainContext","useWeb3Connection","useWeb3Hub","useWeb3Others","isSameAddress","AddressType","formatEthereumAddress","Stack","Typography","useTheme","Box","useQueries","useQuery","compact","uniq","memo","useCallback","useMemo","useState","Controller","useForm","useSharedTrans","CollectibleItem","CollectibleItemSkeleton","EmptyStatus","LoadingStatus","ReloadStatus","useStyles","theme","form","height","boxSizing","display","padding","spacing","backgroundColor","palette","maskColor","bottom","flexDirection","overflow","msOverflowStyle","scrollbarWidth","main","flexGrow","paddingBottom","grid","width","gridGap","paddingRight","marginBottom","notMine","opacity","cursor","error","fontSize","color","danger","toolbar","position","left","right","alignItems","boxShadow","backdropFilter","borderRadius","input","isValidTokenIds","rawIds","containsInvalidId","split","some","v","trimmed","trim","id","Number","parseInt","isNaN","AddCollectibles","props","pluginID","chainId","defaultChainId","account","defaultAccount","onAdd","t","walletAccount","classes","undefined","Others","control","watch","handleSubmit","resetField","formState","errors","isValidating","mode","defaultValues","address","tokenIds","watchedTokenIds","map","hub","connection","value","addressType","loading","loadingAddressType","isValidAddress","validationMsgForAddress","Contract","collectible_contract_invalid","data","contract","isLoading","isLoadingContract","isError","refetch","queryKey","queryFn","getNonFungibleTokenContract","isValid","Boolean","length","Web3","assetsQueries","queries","tokenId","enabled","getNonFungibleAsset","err","token","getNonFungibleToken","owner","ownerId","loadingAssets","every","x","allFailed","failureReason","noResults","someNotMine","handleFormSubmit","event","selectedTokenIdsMap","setSelectedTokenIdsMap","selectedTokenIds","toggleSelect","asset","idsMap","ids","newIds","includes","filter","handleAdd","disabled","className","onSubmit","name","render","field","autoFocus","placeholder","add_collectibles_address_placeholder","InputProps","spellCheck","endAdornment","Close","size","onClick","mt","add_collectibles_token_id_placeholder","message","collection_not_belong_to_you","div","onRetry","no_results","i","isMine","disableName","actionLabel","send","disableAction","onItemClick","isSelected","showUnCheckedIndicator","direction","justifyContent","fullWidth","startIcon","Avatar","add_collectibles","useAsyncFn","useNavigate","useParams","FungibleTokenList","SelectNetworkSidebar","TokenListMode","NetworkPluginID","PopupRoutes","useRowSize","MaskTabList","usePopupCustomSnackbar","useTabs","useBlockedFungibleTokens","useNetworks","useWeb3State","TokenType","ChainId","TabContext","TabPanel","Tab","useMaskSharedTrans","NormalHeader","useTitle","WalletAssetTabs","searchError","content","flex","channel","paddingTop","listBox","marginTop","wrapper","background","tabs","paddingLeft","panel","searchInput","marginRight","marginLeft","sidebar","gridTemplateColumns","nftContent","TabType","Tokens","Collectibles","AddToken","blackList","rowSize","navigate","assetType","currentTab","onChange","setSearchError","allNetworks","PLUGIN_EVM","supportedChains","setChainId","Mainnet","add_assets","Token","showSnackbar","loadingAddCustomNFTs","addCustomNFTs","result","addNonFungibleTokens","addToken","type","NonFungible","schema","popups_wallet_collectible_added_successfully","variant","Wallet","replace","tabList","aria-label","root","label","popups_wallet_token","popups_wallet_collectible","hideAllButton","onChainChange","networks","isHiddenChainIcon","Manage","onSearchError","blacklist","FixedSizeListProps","itemSize","SearchTextFieldProps","useEffect","setRowSize","parseFloat","getComputedStyle","document","documentElement","columnGap","to","animation","animationDelay","dot","DotLoading","EmptyResult","gap","EmptySimple","FixedSizeList","Fuse","uniqBy","SearchableList","itemKey","onSelect","onSearch","disableSearch","searchKey","itemRender","SearchFieldProps","keyword","setKeyword","rest","textFieldPropsRest","readyToRenderData","fuse","shouldSort","isCaseSensitive","threshold","minMatchCharLength","keys","Object","filtered","search","item","JSON","stringify","handleChange","e","currentTarget","handleClear","getItemKey","index","toString","dataSet","windowHeight","container","style","inputProps","startAdornment","Search","helperText","alignContent","list","overscanCount","itemData","itemCount","border","secondaryLine","backgroundClip","margin","useAsyncRetry","useFungibleTokensFromTokenList","options","Hub","getFungibleTokensFromTokenList","EMPTY_OBJECT","useFungibleTokensBalance","listOfAddress","getFungibleTokensBalance","join","Switch","styled","switchClasses","SettingSwitch","isSmall","base","thumb","checked","switchBase","transform","track","top","useTrustedFungibleTokens","useTokenBlocked","blockedFungibleTokens","find","useTokenTrusted","trustedFungibleTokens","Link","ListItem","ListItemIcon","ListItemText","formatBalance","TokenIcon","useFungibleTokenBalance","useNetwork","useNetworkContext","LoadingBase","FormattedBalance","NetworkIcon","icon","maxHeight","bg","text","primary","whiteSpace","textOverflow","lineHeight","second","nameText","maxWidth","symbol","balance","fontWeight","importButton","action","switch","link","badgeIcon","common","white","dotLoadingWrapper","getFungibleTokenItem","getSource","addOrRemoveTokenToLocal","trustOrBlockTokenToLocal","isCustomToken","decimals","logoURL","isBlocked","isTrust","network","source","selected","onAddOrRemoveTokenToLocalLoading","onAddOrRemoveTokenToLocal","strategy","stopPropagation","onTrustOrBlockTokenToLocalLoading","onTrustOrBlockTokenToLocal","target","explorerLink","explorerResolver","fungibleTokenLink","TrashLine","import","preventDefault","significant","formatter","tokenBalance","isLoadingTokenBalance","title","button","List","iconUrl","component","span","href","rel","PopupLink","added_by_user","sx","ManageTokenListBar","Edit2","erc20_manage_token_list","useTransition","useChainId","useFungibleAssets","useFungibleToken","CurrencyType","ZERO","currySameAddress","leftShift","toZero","SEARCH_KEYS","enableMange","bar","tokens","whitelist","includeTokens","excludeTokens","selectedTokens","enableManage","setMode","fungibleTokens","fungibleAssets","nativeToken","chainResolver","nativeCurrency","filteredFungibleTokens","allFungibleTokens","toLowerCase","blockedTokenAddresses","checkSameAddress","addr","isIncluded","isExcluded","fungibleTokensBalance","sortedFungibleTokensForManage","isTrustedToken","sort","a","z","isNativeTokenA","getNativeTokenAddress","isNativeTokenZ","isMaskTokenA","getMaskTokenAddress","isMaskTokenZ","rank","sortedFungibleTokensForList","fungibleAssetsTable","fromEntries","getTokenValue","USD","aUSD","isPositive","zUSD","isEqualTo","gt","aBalance","zBalance","isAddressNotContract","searchedTokenAddress","match","erc20_search_wrong_address","searchedToken","inOfficialList","inPersonaList","removeToken","trustToken","blockToken","erc20_token_list_placeholder","startTransition","handleSelect","displayName","defaultTab","possibleTabs","setTab","tabRecords","forEach","isCurrentTabAvailable"],"sourceRoot":"","x_google_ignoreList":[15]}