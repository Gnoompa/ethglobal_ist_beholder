{"version":3,"file":"bundled/chunk.2202.js","mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;;AAEA,MAAM,IAA2B;AACjC;AACA,IAAI,KAAK,EAIN;;AAEH,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;;;;;;;;;;;AChHD;AAC+B;;AAE/B,wCAAwC,gDAAmB;AAC3D,6BAA6B,6CAAgB;AAC7C;;AAE+C;AAC/C","sources":["webpack://mask-network/./packages/plugin-infra/src/site-adaptor/context.ts","webpack://mask-network/./packages/plugin-infra/src/utils/message.ts","webpack://mask-network/./packages/plugins/Claim/src/message.ts","webpack://mask-network/./packages/plugins/Claim/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/Claim/src/types.ts","webpack://mask-network/./packages/plugins/Claim/src/hooks/useClaimAirdrop.tsx","webpack://mask-network/./packages/plugins/Claim/src/SiteAdaptor/components/AirDropActivities/AirDropActivityItem.tsx","webpack://mask-network/./packages/plugins/Claim/src/hooks/useAirDropActivity.ts","webpack://mask-network/./packages/plugins/Claim/src/SiteAdaptor/components/AirDropActivities/index.tsx","webpack://mask-network/./packages/plugins/Claim/src/SiteAdaptor/components/ClaimDialog/index.tsx","webpack://mask-network/./packages/plugins/Claim/src/SiteAdaptor/components/ClaimEntry/index.tsx","webpack://mask-network/./packages/plugins/Claim/src/SiteAdaptor/components/ClaimSuccessDialog/index.tsx","webpack://mask-network/./packages/plugins/Claim/src/SiteAdaptor/index.tsx","webpack://mask-network/./packages/shared-base-ui/src/hooks/useRemoteControlledDialog.ts","webpack://mask-network/./packages/shared-base/src/SingletonModal/index.ts","webpack://mask-network/./packages/shared/src/UI/components/CopyButton/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/EmptyStatus/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/ImageIcon/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletIcon/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletStatusBar/Action.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletStatusBar/PluginWalletStatusBar.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletStatusBar/WalletDescription.tsx","webpack://mask-network/./packages/shared/src/UI/modals/modals.ts","webpack://mask-network/./packages/theme/src/CSSVariables/constants.ts","webpack://mask-network/./packages/theme/src/CSSVariables/vars.ts","webpack://mask-network/./packages/theme/src/Components/ActionButton/index.tsx","webpack://mask-network/./packages/theme/src/Components/LoadingBase/index.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Info.js","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Warning.js","webpack://mask-network/./packages/theme/src/Components/Snackbar/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleToken.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNetworkDescriptor.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNetworks.ts","webpack://mask-network/./packages/web3-hooks/base/src/useProviderDescriptor.ts","webpack://mask-network/./packages/web3-hooks/base/src/useRecentTransactions.ts","webpack://mask-network/./packages/web3-hooks/base/src/useReverseAddress.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWallet.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWallets.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWeb3Hub.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useContract.ts","webpack://mask-network/./packages/web3-shared/evm/src/helpers/pack.ts","webpack://mask-network/./node_modules/.pnpm/buffer-reverse@1.0.1/node_modules/buffer-reverse/index.js","webpack://mask-network/./node_modules/.pnpm/copy-to-clipboard@3.3.1/node_modules/copy-to-clipboard/index.js","webpack://mask-network/./node_modules/.pnpm/toggle-selection@1.0.6/node_modules/toggle-selection/index.js","webpack://mask-network/./node_modules/.pnpm/treeify@1.1.0/node_modules/treeify/treeify.js","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/isRestoring.mjs"],"sourcesContent":["// This file will be virtualized in the future.\n// Currently all plugins access the same value, but we can virtualize them in the future.\n\nimport type { Subscription } from 'use-subscription'\nimport type { IdentityResolved } from '../types.js'\nimport type { NextIDPlatform, PersonaIdentifier, PostIdentifier } from '@masknet/shared-base'\n\nexport interface __SiteAdaptorContext__ {\n    lastRecognizedProfile: Subscription<IdentityResolved | undefined>\n    currentVisitingProfile: Subscription<IdentityResolved | undefined>\n    currentNextIDPlatform: NextIDPlatform | undefined\n    currentPersonaIdentifier: Subscription<PersonaIdentifier | undefined>\n    getPostURL: (identifier: PostIdentifier) => URL | null\n    share: undefined | ((text: string) => void)\n    getUserIdentity: ((useId: string) => Promise<IdentityResolved | undefined>) | undefined\n    getPostIdFromNewPostToast: (() => string) | undefined\n    postMessage: ((text: string, options?: any) => Promise<void>) | undefined\n    getSearchedKeyword: (() => string) | undefined\n    connectPersona: () => Promise<void>\n}\nexport let lastRecognizedProfile: __SiteAdaptorContext__['lastRecognizedProfile']\nexport let currentVisitingProfile: __SiteAdaptorContext__['currentVisitingProfile']\nexport let currentNextIDPlatform: NextIDPlatform | undefined\nexport let currentPersonaIdentifier: __SiteAdaptorContext__['currentPersonaIdentifier']\nexport let getPostURL: __SiteAdaptorContext__['getPostURL']\nexport let share: __SiteAdaptorContext__['share']\nexport let getUserIdentity: __SiteAdaptorContext__['getUserIdentity']\nexport let getPostIdFromNewPostToast: __SiteAdaptorContext__['getPostIdFromNewPostToast']\nexport let postMessage: __SiteAdaptorContext__['postMessage']\nexport let getSearchedKeyword: __SiteAdaptorContext__['getSearchedKeyword']\nexport let connectPersona: __SiteAdaptorContext__['connectPersona']\nexport function __setSiteAdaptorContext__(value: __SiteAdaptorContext__) {\n    ;({\n        lastRecognizedProfile,\n        currentVisitingProfile,\n        currentNextIDPlatform,\n        currentPersonaIdentifier,\n        getPostURL,\n        share,\n        getUserIdentity,\n        getPostIdFromNewPostToast,\n        postMessage,\n        getSearchedKeyword,\n        connectPersona,\n    } = value)\n}\n","import { WebExtensionMessage } from '@dimensiondev/holoflows-kit'\nimport type { PluginMessageEmitterItem } from '@masknet/plugin-infra'\nimport { serializer } from '@masknet/shared-base'\n\n/** @internal */\nexport const DOMAIN_RPC = Symbol('create RPC instead of normal message')\n/**\n * Create a plugin message emitter\n * @param pluginID The plugin ID\n *\n * @example\n * export const MyPluginMessage = getPluginMessage(PLUGIN_ID)\n */\nexport let getPluginMessage = <T>(pluginID: string, type?: typeof DOMAIN_RPC): PluginMessageEmitter<T> => {\n    const domain = (type === DOMAIN_RPC ? '@plugin-rpc/' : '@plugin/') + pluginID\n    if (cache.has(domain)) return cache.get(domain) as any\n\n    const messageCenter = new WebExtensionMessage<T>({ domain })\n    const events = messageCenter.events\n    messageCenter.serialization = serializer\n    cache.set(domain, events)\n    return events\n}\n\nexport function __workaround__replaceImplementationOfCreatePluginMessage__(\n    newImpl: (pluginID: string) => PluginMessageEmitter<any>,\n) {\n    getPluginMessage = newImpl\n}\nexport type PluginMessageEmitter<T> = { readonly [key in keyof T]: PluginMessageEmitterItem<T[key]> }\nconst cache = new Map<string, PluginMessageEmitter<unknown>>()\n\n// TODO: this type should be defined here, not shared-base\nexport type { PluginMessageEmitterItem } from '@masknet/shared-base'\n","import { type PluginMessageEmitter, getPluginMessage } from '@masknet/plugin-infra'\nimport { PLUGIN_ID } from './constants.js'\n\nexport interface PluginClaimMessage {\n    claimDialogEvent: { open: boolean }\n    claimSuccessDialogEvent: {\n        open: boolean\n        token?: string\n        amount?: string\n    }\n}\n\nimport.meta.webpackHot?.accept()\nexport const PluginClaimMessage: PluginMessageEmitter<PluginClaimMessage> = getPluginMessage(PLUGIN_ID)\n","// @ts-nocheck\n/* eslint-disable */\nimport { createElement, useMemo, type ComponentType } from \"react\";\nimport { useTranslation, Trans, type TransProps } from \"react-i18next\";\ntype TypedTransProps<Value, Components> = Omit<TransProps<string>, \"values\" | \"ns\" | \"i18nKey\"> & ({} extends Value ? {} : {\n    values: Value;\n}) & {\n    components: Components;\n};\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useClaimTrans(): {\n    /**\n      * `Claim`\n      */\n    __plugin_name(): string;\n    /**\n      * `Airdrop`\n      */\n    airdrop(): string;\n    /**\n      * `Claim`\n      */\n    claim(): string;\n    /**\n      * `Claimable`\n      */\n    claimable(): string;\n    /**\n      * `Tips`\n      */\n    tips(): string;\n    /**\n      * `Share`\n      */\n    share(): string;\n    /**\n      * `I just claimed airdrop with {{amount}} {{symbol}} on Mask Network extension. Follow @realMaskNetwork to check if you are eligible to claim.\n     Install https://mask.io to explore more airdrop activities.`\n      */\n    share_text(options: Readonly<{\n        amount: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `To participate in airdrops, it is necessary to have enough native tokens in your wallet on the specified network to cover the transaction costs.`\n      */\n    airdrop_alert(): string;\n    /**\n      * `Please connect wallet`\n      */\n    connect_wallet_airdrop_tips(): string;\n    /**\n      * `Congratulations!`\n      */\n    congratulations(): string;\n    /**\n      * `Claimed {{amount}} ${{symbol}} successfully.`\n      */\n    claim_successfully_tips(options: Readonly<{\n        amount: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `Eligible to claim`\n      */\n    eligible_to_claim(): string;\n    /**\n      * `Expired`\n      */\n    expired(): string;\n    /**\n      * `No activities found.`\n      */\n    no_activities_tips(): string;\n    /**\n      * `{{symbol}} Unclaimed:`\n      */\n    unclaimed_token_title(options: {\n        readonly symbol: string;\n    }): string;\n    /**\n      * `{{symbol}} Locked:`\n      */\n    locked_token_title(options: {\n        readonly symbol: string;\n    }): string;\n    /**\n      * `Unlock Time: {{-time}}`\n      */\n    unlock_time(options: {\n        readonly time: string;\n    }): string;\n    /**\n      * `Claim your Airdrop`\n      */\n    claim_tips(): string;\n    /**\n      * `Your wallet cancelled the transaction.`\n      */\n    cancel_claim_tips(): string;\n    /**\n      * `Mask Community ${{symbol}} Giveaway`\n      */\n    airdrop_title(options: {\n        readonly symbol: string;\n    }): string;\n    /**\n      * `Please connect wallet to check if you are eligible to claim ${{symbol}}.`\n      */\n    no_account_tips(options: {\n        readonly symbol: string;\n    }): string;\n    /**\n      * `Sorry, you are not eligible to claim $ARB in this campaign.`\n      */\n    no_eligible_tips(): string;\n    /**\n      * `You have claimed {{amount}} ${{symbol}}.`\n      */\n    claimed_tips(options: Readonly<{\n        amount: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `You’re connected to a WalletConnect wallet. Please switch network in that wallet, or switch to another wallet.`\n      */\n    wallet_connect_tips(): string;\n} { const { t } = useTranslation(\"com.mask.claim\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\nfunction createComponent(i18nKey: string) {\n    return (props) => createElement(Trans, { i18nKey, ns: \"com.mask.claim\", ...props });\n}\nexport const ClaimTrans: {\n    /**\n      * `Claiming will be live until: <strong> {{days}} d  {{hours}} h  {{minutes}} m </strong>`\n      */\n    airdrop_in_progress_time_tips: ComponentType<TypedTransProps<Readonly<{\n        days: string;\n        hours: string;\n        minutes: string;\n    }>, {\n        strong: JSX.Element;\n    }>>;\n    /**\n      * `Start Time: <strong>{{time}}</strong>`\n      */\n    start_time_tips: ComponentType<TypedTransProps<{\n        readonly time: string;\n    }, {\n        strong: JSX.Element;\n    }>>;\n    /**\n      * `Ended on <strong>{{time}}</strong>`\n      */\n    end_time_tips: ComponentType<TypedTransProps<{\n        readonly time: string;\n    }, {\n        strong: JSX.Element;\n    }>>;\n} = /*#__PURE__*/ createProxy(createComponent);\n","export enum ActivityStatus {\n    NOT_START = 'NOT_START',\n    IN_PROGRESS = 'IN_PROGRESS',\n    ENDED = 'ENDED',\n}\n","import { useRef, useCallback } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport type { AbiItem } from 'web3-utils'\nimport { useTheme } from '@mui/material'\nimport type { AirdropV2 } from '@masknet/web3-contracts/types/AirdropV2.js'\nimport AirDropV2ABI from '@masknet/web3-contracts/abis/AirdropV2.json'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { useContract } from '@masknet/web3-hooks-evm'\nimport {\n    useAirdropClaimersConstants,\n    type ChainId,\n    ProviderType,\n    ContractTransaction,\n    formatEtherToWei,\n} from '@masknet/web3-shared-evm'\nimport { type SnackbarKey, useCustomSnackbar, type SnackbarMessage, type ShowSnackbarOptions } from '@masknet/theme'\nimport { toFixed } from '@masknet/web3-shared-base'\nimport { useRemoteControlledDialog } from '@masknet/shared-base-ui'\nimport { Web3 } from '@masknet/web3-providers'\nimport { PluginClaimMessage } from '../message.js'\nimport { useClaimTrans } from '../locales/i18n_generated.js'\n\nexport function useClaimAirdrop(\n    chainId: ChainId,\n    eventIndex: number,\n    callback: () => void,\n    merkleProof?: string[],\n    amount?: string,\n    tokenAddress?: string,\n) {\n    const theme = useTheme()\n    const t = useClaimTrans()\n    const { account, providerType, chainId: globalChainId } = useChainContext()\n    const { CONTRACT_ADDRESS } = useAirdropClaimersConstants(chainId)\n    const airdropContract = useContract<AirdropV2>(chainId, CONTRACT_ADDRESS, AirDropV2ABI as AbiItem[])\n\n    const { setDialog } = useRemoteControlledDialog(PluginClaimMessage.claimSuccessDialogEvent)\n\n    const { showSnackbar, closeSnackbar } = useCustomSnackbar()\n\n    const snackbarKeyRef = useRef<SnackbarKey>()\n    const showSingletonSnackbar = useCallback(\n        (title: SnackbarMessage, options: ShowSnackbarOptions) => {\n            if (snackbarKeyRef.current !== undefined) closeSnackbar(snackbarKeyRef.current)\n            snackbarKeyRef.current = showSnackbar(title, options)\n            return () => {\n                closeSnackbar(snackbarKeyRef.current)\n            }\n        },\n        [showSnackbar, closeSnackbar],\n    )\n\n    return useAsyncFn(async () => {\n        try {\n            if (!airdropContract || !amount || !merkleProof) return\n\n            if (chainId !== globalChainId && providerType === ProviderType.WalletConnect) {\n                await Web3.switchChain?.(chainId, {\n                    providerType: ProviderType.WalletConnect,\n                })\n            }\n            const tx = await new ContractTransaction(airdropContract).fillAll(\n                airdropContract.methods.claim(eventIndex, merkleProof, account, formatEtherToWei(amount)),\n                {\n                    from: account,\n                    gas: toFixed(\n                        await airdropContract.methods\n                            .claim(eventIndex, merkleProof, account, formatEtherToWei(amount))\n                            .estimateGas({ from: account }),\n                    ),\n                    chainId,\n                },\n            )\n\n            const hash = await Web3.sendTransaction(tx, {\n                chainId,\n            })\n            const receipt = await Web3.getTransactionReceipt(hash, {\n                chainId,\n            })\n\n            if (receipt) {\n                callback()\n                setDialog({\n                    open: true,\n                    token: tokenAddress,\n                    amount,\n                })\n            }\n        } catch (error) {\n            if (\n                error instanceof Error &&\n                (error.message.includes('Transaction was rejected') ||\n                    error.message.includes('Signature canceled') ||\n                    error.message.includes('User rejected the request') ||\n                    error.message.includes('User rejected transaction'))\n            )\n                showSingletonSnackbar(t.claim_tips(), {\n                    processing: false,\n                    variant: 'default',\n                    message: <span style={{ color: theme.palette.maskColor.danger }}>{t.cancel_claim_tips()}</span>,\n                })\n        }\n    }, [airdropContract, account, amount, merkleProof, eventIndex, providerType, globalChainId])\n}\n","import { memo, useMemo, useState } from 'react'\nimport { useInterval } from 'react-use'\nimport { isAfter, format, isBefore, intervalToDuration, differenceInDays } from 'date-fns'\nimport { ClaimTrans, useClaimTrans } from '../../../locales/i18n_generated.js'\nimport { ActionButton, ShadowRootTooltip, makeStyles } from '@masknet/theme'\nimport { Box, Typography, alpha } from '@mui/material'\nimport { useChainContext, useFungibleToken, useNetworkDescriptor } from '@masknet/web3-hooks-base'\nimport { ActivityStatus } from '../../../types.js'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { ProviderType, type ChainId } from '@masknet/web3-shared-evm'\nimport { ImageIcon } from '@masknet/shared'\nimport { Icons } from '@masknet/icons'\nimport { useClaimAirdrop } from '../../../hooks/useClaimAirdrop.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    badge: {\n        position: 'absolute',\n        top: 8,\n        left: 8,\n    },\n    container: {\n        position: 'relative',\n        height: 200,\n        borderRadius: 12,\n        backgroundImage: `url(${new URL('../../../assets/ARB-background.png', import.meta.url)})`,\n        backgroundRepeat: 'no-repeat',\n        paddingLeft: 232,\n        paddingRight: 20,\n        backgroundSize: 'contain',\n    },\n    content: {\n        marginTop: 46,\n    },\n    title: {\n        fontSize: 18,\n        fontWeight: 700,\n        lineHeight: 1.2,\n        color: theme.palette.maskColor.white,\n    },\n    timeTips: {\n        fontSize: 14,\n        lineHeight: '18px',\n        marginTop: theme.spacing(1),\n        color: alpha(theme.palette.maskColor.white, 0.8),\n    },\n    tips: {\n        marginTop: theme.spacing(1),\n        fontSize: 14,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.white,\n    },\n    actions: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    amount: {\n        color: theme.palette.maskColor.white,\n        fontSize: 20,\n        lineHeight: '24px',\n        fontWeight: 700,\n    },\n    claimable: {\n        fontSize: 14,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.white,\n    },\n    claimButton: {\n        background: theme.palette.maskColor.white,\n        color: theme.palette.maskColor.publicMain,\n        '&:hover': {\n            background: theme.palette.maskColor.white,\n        },\n    },\n    strong: {\n        color: theme.palette.maskColor.white,\n        fontWeight: 700,\n    },\n}))\n\ninterface AirDropActivityItemProps {\n    startTime: number\n    endTime: number\n    token: string\n    isClaimed?: boolean\n    amount?: string\n    isEligible?: boolean\n    chainId: ChainId\n    merkleProof?: string[]\n    eventIndex: number\n    onClaimSuccess: () => void\n}\n\nexport const AirDropActivityItem = memo<AirDropActivityItemProps>(\n    ({\n        startTime,\n        endTime,\n        token,\n        isClaimed,\n        amount,\n        isEligible,\n        chainId,\n        merkleProof,\n        eventIndex,\n        onClaimSuccess,\n    }) => {\n        const t = useClaimTrans()\n        const { classes } = useStyles()\n        const { account, providerType } = useChainContext()\n        const [now, setNow] = useState(new Date())\n        const networkDescriptor = useNetworkDescriptor(NetworkPluginID.PLUGIN_EVM, chainId)\n\n        const activityStatus = useMemo(() => {\n            if (!isAfter(now, startTime)) return ActivityStatus.NOT_START\n            if (isBefore(endTime, now)) return ActivityStatus.ENDED\n            return ActivityStatus.IN_PROGRESS\n        }, [startTime, endTime, now])\n\n        const timeTips = useMemo(() => {\n            switch (activityStatus) {\n                case ActivityStatus.NOT_START:\n                    return (\n                        <ClaimTrans.start_time_tips\n                            values={{ time: format(startTime, 'MM-dd-yyyy HH:mm') }}\n                            components={{ strong: <strong className={classes.strong} /> }}\n                        />\n                    )\n                case ActivityStatus.IN_PROGRESS:\n                    const duration = intervalToDuration({\n                        start: now,\n                        end: endTime,\n                    })\n\n                    const days = differenceInDays(endTime, now)\n\n                    return (\n                        <ClaimTrans.airdrop_in_progress_time_tips\n                            values={{\n                                days: String(days ?? ''),\n                                hours: String(duration.hours ?? ''),\n                                minutes: String(duration.minutes ?? ''),\n                            }}\n                            components={{ strong: <strong className={classes.strong} /> }}\n                        />\n                    )\n                case ActivityStatus.ENDED:\n                    return (\n                        <ClaimTrans.end_time_tips\n                            values={{ time: format(endTime, 'MM-dd-yyyy HH:mm') }}\n                            components={{ strong: <strong className={classes.strong} /> }}\n                        />\n                    )\n            }\n        }, [activityStatus, classes, now])\n\n        const tokenDetail = useFungibleToken(NetworkPluginID.PLUGIN_EVM, token, undefined, { chainId })\n\n        const [{ loading }, handleClaim] = useClaimAirdrop(\n            chainId,\n            eventIndex,\n            onClaimSuccess,\n            merkleProof,\n            amount,\n            token,\n        )\n\n        // Time update every minute\n        useInterval(() => {\n            setNow(new Date())\n        }, 1000 * 60)\n\n        return (\n            <Box className={classes.container}>\n                <ImageIcon icon={networkDescriptor?.icon} size={24} className={classes.badge} />\n                <Box className={classes.content}>\n                    <Typography className={classes.title}>{t.airdrop_title({ symbol: 'ARB' })}</Typography>\n                    <Typography className={classes.timeTips}>{timeTips}</Typography>\n                    {!account ? (\n                        <Typography className={classes.tips}>{t.no_account_tips({ symbol: 'ARB' })}</Typography>\n                    ) : (\n                        <>\n                            {!isEligible ? (\n                                <Typography className={classes.tips}>{t.no_eligible_tips()}</Typography>\n                            ) : null}\n                            {isClaimed ? (\n                                <Typography className={classes.tips}>\n                                    {t.claimed_tips({ amount: amount ?? '', symbol: 'ARB' })}\n                                </Typography>\n                            ) : null}\n                            {isEligible && !isClaimed ? (\n                                <Box className={classes.actions}>\n                                    <Box>\n                                        <Typography className={classes.amount}>\n                                            {amount} {tokenDetail.data?.symbol}\n                                        </Typography>\n                                        <Typography className={classes.claimable}>\n                                            {activityStatus === ActivityStatus.IN_PROGRESS\n                                                ? t.eligible_to_claim()\n                                                : t.claimable()}\n                                        </Typography>\n                                    </Box>\n                                    <ActionButton\n                                        onClick={handleClaim}\n                                        loading={loading}\n                                        className={classes.claimButton}\n                                        disabled={activityStatus !== ActivityStatus.IN_PROGRESS}\n                                        endIcon={\n                                            providerType === ProviderType.WalletConnect ? (\n                                                <ShadowRootTooltip title={t.wallet_connect_tips()} placement=\"top\">\n                                                    <Icons.Questions size={18} />\n                                                </ShadowRootTooltip>\n                                            ) : null\n                                        }>\n                                        {activityStatus === ActivityStatus.ENDED ? t.expired() : t.claim()}\n                                    </ActionButton>\n                                </Box>\n                            ) : null}\n                        </>\n                    )}\n                </Box>\n            </Box>\n        )\n    },\n)\n","import { last } from 'lodash-es'\nimport { keccak256 } from 'web3-utils'\nimport { MerkleTree } from 'merkletreejs'\nimport { secondsToMilliseconds } from 'date-fns'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { Airdrop } from '@masknet/web3-providers'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { type ChainId, formatEtherToWei, pack } from '@masknet/web3-shared-evm'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useAirDropActivity(chainId: ChainId) {\n    const { account } = useChainContext()\n\n    return useQuery({\n        queryKey: ['airdrop-activity', chainId, account],\n        queryFn: async () => {\n            const result = await Airdrop.getActivity(chainId, account)\n            if (!result) return\n            const { claimers, startTime, endTime, ...rest } = result\n\n            const claimerList = Object.entries(claimers)\n            const claimer = claimerList.find(([address]) => isSameAddress(address, account))\n            const airdropList = claimerList.map(([address, amount]) => {\n                return keccak256(pack(['address', 'uint256'], [address, formatEtherToWei(amount)]))\n            })\n            const merkleTree = new MerkleTree(airdropList, keccak256, { sortPairs: true })\n            const amount = claimer ? last(claimer) : undefined\n            const leaf = amount\n                ? keccak256(pack(['address', 'uint256'], [account, formatEtherToWei(amount)]))\n                : undefined\n\n            const merkleProof = leaf ? merkleTree.getHexProof(leaf) : undefined\n\n            return {\n                ...rest,\n                isEligible: !!claimer,\n                startTime: secondsToMilliseconds(Number(startTime)),\n                endTime: secondsToMilliseconds(Number(endTime)),\n                amount: claimer ? last(claimer) : undefined,\n                chainId,\n                merkleProof,\n            }\n        },\n    })\n}\n","import { LoadingBase, makeStyles } from '@masknet/theme'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { Alert, AlertTitle, Box } from '@mui/material'\nimport { memo } from 'react'\nimport { useClaimTrans } from '../../../locales/i18n_generated.js'\nimport { AirDropActivityItem } from './AirDropActivityItem.js'\nimport { useAirDropActivity } from '../../../hooks/useAirDropActivity.js'\nimport { ChainId } from '@masknet/web3-shared-evm'\nimport { EmptyStatus } from '@masknet/shared'\nimport { useToggle } from 'react-use'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: theme.spacing(1.5),\n        minHeight: 424,\n        position: 'relative',\n    },\n    placeholder: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: 456,\n        width: '100%',\n        flexDirection: 'column',\n        padding: 0,\n    },\n    alert: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(1.5),\n        position: 'absolute',\n        bottom: 16,\n        left: 16,\n        right: 16,\n        borderRadius: 4,\n        zIndex: 1,\n    },\n    alertTitle: {\n        fontSize: 14,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.main,\n        marginBottom: 0,\n    },\n}))\n\nexport const AirDropActivities = memo(() => {\n    const t = useClaimTrans()\n    const [open, toggle] = useToggle(true)\n    const { classes } = useStyles()\n    const { account } = useChainContext()\n\n    const { data: activity, isLoading, refetch } = useAirDropActivity(ChainId.Arbitrum)\n\n    if (isLoading)\n        return (\n            <Box className={classes.placeholder}>\n                <LoadingBase size={24} />\n            </Box>\n        )\n\n    if (activity) {\n        return (\n            <Box className={classes.container}>\n                <AirDropActivityItem {...activity} onClaimSuccess={refetch} />\n                {open ? (\n                    <Alert severity=\"info\" onClose={toggle} className={classes.alert}>\n                        <AlertTitle className={classes.alertTitle}>{t.airdrop_alert()}</AlertTitle>\n                    </Alert>\n                ) : null}\n            </Box>\n        )\n    }\n    return (\n        <EmptyStatus className={classes.placeholder}>\n            {!account ? t.connect_wallet_airdrop_tips() : t.no_activities_tips()}\n        </EmptyStatus>\n    )\n})\n\nAirDropActivities.displayName = 'AirDropActivities'\n","import { InjectedDialog, PluginWalletStatusBar } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { memo } from 'react'\nimport { useClaimTrans } from '../../../locales/i18n_generated.js'\nimport { DialogActions, DialogContent } from '@mui/material'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { ChainId } from '@masknet/web3-shared-evm'\nimport { AirDropActivities } from '../AirDropActivities/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    actions: {\n        padding: 0,\n    },\n}))\n\ninterface Props {\n    open: boolean\n    onClose(): void\n}\nexport const ClaimDialog = memo(({ open, onClose }: Props) => {\n    const t = useClaimTrans()\n    const { classes } = useStyles()\n\n    return (\n        <InjectedDialog open={open} onClose={onClose} title={t.__plugin_name()}>\n            <DialogContent sx={{ padding: 0 }}>\n                <AirDropActivities />\n            </DialogContent>\n            <DialogActions className={classes.actions}>\n                <PluginWalletStatusBar\n                    requiredSupportPluginID={NetworkPluginID.PLUGIN_EVM}\n                    requiredSupportChainIds={[ChainId.Arbitrum]}\n                />\n            </DialogActions>\n        </InjectedDialog>\n    )\n})\n\nClaimDialog.displayName = 'ClaimDialog'\n","import { memo, useCallback } from 'react'\nimport { Trans } from 'react-i18next'\nimport { Icons } from '@masknet/icons'\nimport { ApplicationEntry } from '@masknet/shared'\nimport { PluginID } from '@masknet/shared-base'\nimport { useRemoteControlledDialog } from '@masknet/shared-base-ui'\nimport { PluginClaimMessage } from '../../../message.js'\n\ninterface ClaimEntryProps {\n    disabled: boolean\n    tooltipHint?: string\n    onClick?: (walletConnectedCallback?: () => void) => void\n}\n\nexport const ClaimEntry = memo<ClaimEntryProps>((props) => {\n    const { setDialog } = useRemoteControlledDialog(PluginClaimMessage.claimDialogEvent)\n    const handleClick = useCallback(() => {\n        setDialog({\n            open: true,\n        })\n    }, [setDialog])\n\n    return (\n        <ApplicationEntry\n            {...props}\n            icon={<Icons.MarketsClaim size={36} />}\n            title={<Trans ns={PluginID.Claim} i18nKey=\"__plugin_name\" />}\n            onClick={() => (props.onClick ? props.onClick(handleClick) : handleClick())}\n        />\n    )\n})\n","import { ActionButton, makeStyles, usePortalShadowRoot } from '@masknet/theme'\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@mui/material'\nimport { useCallback } from 'react'\nimport { useFungibleToken } from '@masknet/web3-hooks-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { Icons } from '@masknet/icons'\nimport { ImageIcon } from '@masknet/shared'\nimport { useClaimTrans } from '../../../locales/i18n_generated.js'\nimport { share } from '@masknet/plugin-infra/content-script/context'\n\nconst useStyles = makeStyles()((theme) => ({\n    paper: {\n        margin: 0,\n        width: 420,\n        backgroundColor: theme.palette.maskColor.bottom,\n    },\n    title: {\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: theme.palette.maskColor.modalTitleBg,\n        fontSize: 18,\n        lineHeight: '24px',\n        fontWeight: 700,\n    },\n    close: {\n        position: 'absolute',\n        left: 16,\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '34px 16px 50px',\n        backgroundColor: theme.palette.maskColor.bottom,\n    },\n    actions: {\n        padding: '0px 16px 16px',\n        backgroundColor: theme.palette.maskColor.bottom,\n    },\n    symbol: {\n        fontSize: 20,\n        lineHeight: '24px',\n        fontWeight: 700,\n        marginTop: 10,\n    },\n    congratulations: {\n        fontSize: 20,\n        lineHeight: '24px',\n        fontWeight: 700,\n        color: theme.palette.maskColor.success,\n        marginTop: 34,\n    },\n    tips: {\n        fontSize: 16,\n        lineHeight: '20px',\n        color: theme.palette.maskColor.second,\n        marginTop: 14,\n    },\n    icon: {\n        objectFit: 'contain',\n    },\n}))\n\ninterface Props {\n    open: boolean\n    onClose(): void\n    amount?: string\n    tokenAddress?: string\n}\nexport function ClaimSuccessDialog({ open, onClose, amount, tokenAddress }: Props) {\n    const t = useClaimTrans()\n    const { classes } = useStyles()\n\n    const { data: tokenDetail } = useFungibleToken(NetworkPluginID.PLUGIN_EVM, tokenAddress)\n\n    const onShare = useCallback(() => {\n        if (!amount || !tokenDetail) return\n\n        share?.(t.share_text({ amount, symbol: tokenDetail.symbol }))\n    }, [amount, tokenDetail?.symbol])\n\n    return usePortalShadowRoot((container) => (\n        <Dialog container={container} open={open} onClose={onClose} classes={{ paper: classes.paper }}>\n            <DialogTitle className={classes.title}>\n                <Icons.Close className={classes.close} onClick={onClose} />\n                {t.claim()}\n            </DialogTitle>\n            <DialogContent className={classes.content} style={{ paddingTop: 34 }}>\n                <ImageIcon icon={tokenDetail?.logoURL} size={90} className={classes.icon} />\n                <Typography className={classes.symbol}>\n                    {amount} {tokenDetail?.symbol}\n                </Typography>\n                <Typography className={classes.congratulations}>{t.congratulations()}</Typography>\n                {amount && tokenDetail ? (\n                    <Typography className={classes.tips}>\n                        {t.claim_successfully_tips({ amount, symbol: tokenDetail.symbol })}\n                    </Typography>\n                ) : null}\n            </DialogContent>\n            <DialogActions className={classes.actions}>\n                <ActionButton fullWidth onClick={onShare}>\n                    {t.share()}\n                </ActionButton>\n            </DialogActions>\n        </Dialog>\n    ))\n}\n","import { useState } from 'react'\nimport { Trans } from 'react-i18next'\nimport { Icons } from '@masknet/icons'\nimport type { Plugin } from '@masknet/plugin-infra'\nimport { PluginID } from '@masknet/shared-base'\nimport { useRemoteControlledDialog } from '@masknet/shared-base-ui'\nimport { isValidAddress } from '@masknet/web3-shared-evm'\nimport { base } from '../base.js'\nimport { PLUGIN_ID } from '../constants.js'\nimport { PluginClaimMessage } from '../message.js'\nimport { ClaimDialog } from './components/ClaimDialog/index.js'\nimport { ClaimEntry } from './components/ClaimEntry/index.js'\nimport { ClaimSuccessDialog } from './components/ClaimSuccessDialog/index.js'\n\nconst site: Plugin.SiteAdaptor.Definition = {\n    ...base,\n    GlobalInjection: function ClaimGlobalInjection() {\n        const { open: claimOpen, closeDialog: closeClaimDialog } = useRemoteControlledDialog(\n            PluginClaimMessage.claimDialogEvent,\n        )\n\n        const [tokenAddress, setTokenAddress] = useState<string>()\n        const [amount, setAmount] = useState<string>()\n        const { open: successOpen, closeDialog: closeSuccessDialog } = useRemoteControlledDialog(\n            PluginClaimMessage.claimSuccessDialogEvent,\n            (ev) => {\n                if (!ev.open) {\n                    setAmount(undefined)\n                    setTokenAddress(undefined)\n                    return\n                }\n\n                setAmount(ev.amount)\n\n                if (isValidAddress(ev.token)) setTokenAddress(ev.token)\n            },\n        )\n\n        return (\n            <>\n                {claimOpen ? <ClaimDialog open onClose={closeClaimDialog} /> : null}\n                {successOpen ? (\n                    <ClaimSuccessDialog open onClose={closeSuccessDialog} tokenAddress={tokenAddress} amount={amount} />\n                ) : null}\n            </>\n        )\n    },\n    ApplicationEntries: [\n        {\n            RenderEntryComponent: (props) => {\n                return <ClaimEntry {...props} />\n            },\n            ApplicationEntryID: PLUGIN_ID,\n            appBoardSortingDefaultPriority: 8,\n            icon: <Icons.MarketsClaim size={36} />,\n            name: <Trans ns={PluginID.Claim} i18nKey=\"__plugin_name\" />,\n            iconFilterColor: 'rgba(240, 51, 51, 0.3)',\n            category: 'dapp',\n            entryWalletConnectedNotRequired: true,\n        },\n    ],\n}\n\nexport default site\n","import type { PluginMessageEmitterItem } from '@masknet/shared-base'\nimport { useState, useEffect, useCallback, useRef } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nexport interface RemoteControlledDialogEvent {\n    open: boolean\n    hookId?: string\n}\n\ninterface Result<T> {\n    open: boolean\n    closeDialog: () => void\n    openDialog: () => void\n    setDialog: (ev: T) => void\n}\n\n/**\n * Use a dialog state controlled by remote\n */\nexport function useRemoteControlledDialog<T extends { open: boolean }>(\n    event: PluginMessageEmitterItem<T>,\n    onUpdateByRemote?: (ev: T) => void,\n    tabType: 'self' | 'activated' = 'self',\n): Result<T> {\n    const [HOOK_ID] = useState(uuid) // create an uuid for every hook\n    const [open, setOpen] = useState(false)\n\n    useEffect(\n        () =>\n            event.on((_ev: T) => {\n                const event = _ev as unknown as RemoteControlledDialogEvent\n\n                // ignore the event from the same hook\n                if (event.hookId === HOOK_ID) return\n\n                setOpen(event.open)\n                onUpdateByRemote?.(_ev)\n            }),\n        [onUpdateByRemote, event, HOOK_ID],\n    )\n\n    const timer = useRef<ReturnType<typeof setTimeout> | null>(null)\n    const onUpdateByLocal = useCallback(\n        (ev: T) => {\n            setOpen(ev.open)\n\n            const timer_ = timer.current\n            if (timer_ !== null) clearTimeout(timer_)\n            timer.current = setTimeout(() => {\n                const payload: T & RemoteControlledDialogEvent = {\n                    hookId: HOOK_ID,\n                    ...ev,\n                }\n                tabType === 'self' ? event.sendToLocal(payload) : event.sendToVisiblePages(payload)\n            }, 100)\n        },\n        [event, tabType, HOOK_ID],\n    )\n    const openDialog = useCallback(() => {\n        onUpdateByLocal({ open: true } as T)\n    }, [])\n    const closeDialog = useCallback(() => {\n        onUpdateByLocal({ open: false } as T)\n    }, [])\n\n    return {\n        open,\n        openDialog,\n        closeDialog,\n        setDialog: onUpdateByLocal,\n    }\n}\n","import { defer, delay, type DeferTuple } from '@masknet/kit'\nimport { Emitter } from '@servie/events'\n\nexport type SingletonModalRefCreator<OpenProps = void, CloseProps = void> = (\n    onOpen: (props: OpenProps) => void,\n    onClose: (props: CloseProps) => void,\n    onAbort: (error: Error) => void,\n) => {\n    peek: () => boolean\n    open: (props: OpenProps) => void\n    close: (props: CloseProps) => void\n    abort?: (error: Error) => void\n}\n\nexport interface SingletonModalProps {\n    children: React.ReactNode\n}\n\nexport class SingletonModal<\n    OpenProps = void,\n    CloseProps = void,\n    T extends SingletonModalRefCreator<OpenProps, CloseProps> = SingletonModalRefCreator<OpenProps, CloseProps>,\n> {\n    constructor() {\n        this.open = this.open.bind(this)\n        this.close = this.close.bind(this)\n        this.abort = this.abort.bind(this)\n        this.openAndWaitForClose = this.openAndWaitForClose.bind(this)\n    }\n    readonly emitter = new Emitter<{\n        open: [OpenProps]\n        close: [CloseProps]\n        abort: [Error]\n    }>()\n\n    protected onOpen: ReturnType<T>['open'] | undefined\n    protected onClose: ReturnType<T>['close'] | undefined\n    protected onAbort: ReturnType<T>['abort'] | undefined\n\n    private dispatchPeek: ReturnType<T>['peek'] | undefined\n    private dispatchOpen: ReturnType<T>['open'] | undefined\n    private dispatchClose: ReturnType<T>['close'] | undefined\n    private dispatchAbort: ReturnType<T>['abort'] | undefined\n\n    /**\n     * Register a React modal component that implemented a forwarded ref.\n     * The ref item should be fed with open and close methods.\n     */\n    register = (creator: T | null) => {\n        if (!creator) {\n            this.dispatchOpen = undefined\n            this.dispatchClose = undefined\n            this.dispatchAbort = undefined\n            return\n        }\n\n        const ref = creator(\n            (props) => {\n                this.onOpen?.(props)\n                this.emitter.emit('open', props)\n            },\n            (props) => {\n                this.onClose?.(props)\n                this.emitter.emit('close', props)\n            },\n            (error) => {\n                this.onAbort?.(error)\n                this.emitter.emit('abort', error)\n            },\n        )\n        this.dispatchPeek = ref.peek\n        this.dispatchOpen = ref.open\n        this.dispatchClose = ref.close\n        this.dispatchAbort = ref.abort\n    }\n\n    /**\n     * Peek the open state of the React modal component.\n     */\n    peek() {\n        return this.dispatchPeek?.() ?? false\n    }\n\n    /**\n     * Open the registered modal component with props\n     * @param props\n     */\n    open(props: OpenProps) {\n        if (typeof this.dispatchOpen === 'undefined') console.warn(\"[SingletonModal]: The modal hasn't registered yet.\")\n        this.dispatchOpen?.(props)\n    }\n\n    /**\n     * Close the registered modal component with props\n     * @param props\n     */\n    close(props: CloseProps) {\n        this.dispatchClose?.(props)\n    }\n\n    /**\n     * Abort the registered modal component with Error\n     */\n    abort(error: Error) {\n        this.dispatchAbort?.(error)\n    }\n\n    /**\n     * Open the registered modal component and wait for it closes\n     * @param props\n     */\n    openAndWaitForClose(props: OpenProps): Promise<CloseProps> {\n        return new Promise<CloseProps>((resolve, reject) => {\n            this.open(props)\n            this.onClose = (props) => resolve(props)\n            this.onAbort = (error) => reject(error)\n        })\n    }\n}\n\nexport class SingletonModalQueued<OpenProps = void, CloseProps = void> extends SingletonModal<OpenProps, CloseProps> {\n    private opened = false\n    private tasks: Array<{\n        props: OpenProps\n        defer?: DeferTuple<CloseProps, Error>\n    }> = []\n\n    constructor() {\n        super()\n\n        this.emitter.on('open', () => {\n            this.opened = true\n        })\n        this.emitter.on('close', () => {\n            this.opened = false\n            this.cleanup()\n        })\n        this.emitter.on('abort', () => {\n            this.opened = false\n            this.cleanup()\n        })\n    }\n\n    override open(props: OpenProps) {\n        if (!this.opened) {\n            super.open(props)\n            return\n        }\n\n        this.tasks.push({\n            props,\n        })\n    }\n\n    override close(props: CloseProps) {\n        if (!this.opened) return\n\n        super.close(props)\n    }\n\n    override openAndWaitForClose(props: OpenProps) {\n        if (!this.opened) return super.openAndWaitForClose(props)\n\n        const d = defer<CloseProps, Error>()\n        this.tasks.push({\n            props,\n            defer: d,\n        })\n        return d[0]\n    }\n\n    private async cleanup() {\n        if (this.opened || !this.tasks.length) return\n\n        await delay(300)\n\n        const { props, defer } = this.tasks.shift()!\n\n        this.open(props)\n        if (!defer) return\n        this.onClose = (props) => defer[1](props)\n        this.onAbort = (error) => defer[2](error)\n    }\n}\n","import { Icons, type GeneratedIconProps } from '@masknet/icons'\nimport { ShadowRootTooltip, makeStyles } from '@masknet/theme'\nimport { Link, type LinkProps } from '@mui/material'\nimport { memo, useCallback, useRef, useState, type MouseEvent } from 'react'\nimport { useCopyToClipboard } from 'react-use'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    copy: {\n        '&:hover': {\n            color: theme.palette.maskColor.main,\n        },\n    },\n}))\n\nexport interface CopyButtonProps\n    extends Omit<LinkProps<'button'>, 'color'>,\n        Pick<GeneratedIconProps, 'size' | 'color'> {\n    title?: string\n    text: string\n    /** defaults to 'Copied' */\n    successText?: string\n    /** stop event propagation and prevent default */\n    scoped?: boolean\n}\n\nexport const CopyButton = memo<CopyButtonProps>(function CopyButton({\n    text,\n    title,\n    successText,\n    size,\n    color,\n    scoped = true,\n    className,\n    ...props\n}) {\n    const t = useSharedTrans()\n    const { classes, cx, theme } = useStyles(undefined, { props })\n\n    const [, copyToClipboard] = useCopyToClipboard()\n    const [copied, setCopied] = useState(false)\n    const [active, setActive] = useState(false)\n    const timerRef = useRef<ReturnType<typeof setTimeout>>()\n\n    const handleCopy = useCallback(\n        async (ev: MouseEvent<HTMLAnchorElement>) => {\n            if (scoped) {\n                ev.stopPropagation()\n                ev.preventDefault()\n            }\n            copyToClipboard(text)\n            setCopied(true)\n            setActive(true)\n            clearTimeout(timerRef.current)\n            timerRef.current = setTimeout(setActive, 1500, false)\n        },\n        [text, scoped],\n    )\n\n    const tooltipTitle = copied ? successText ?? t.copied() : title ?? t.copy()\n    const iconProps = { size, color }\n\n    return (\n        <ShadowRootTooltip open={active} title={tooltipTitle} placement=\"top\" disableInteractive arrow>\n            <Link\n                underline=\"none\"\n                component=\"button\"\n                onClick={handleCopy}\n                color=\"inherit\"\n                {...props}\n                fontSize={0}\n                className={cx(classes.root, className)}>\n                {active ? (\n                    <Icons.Check {...iconProps} color={theme.palette.maskColor.success} />\n                ) : (\n                    <Icons.Copy {...iconProps} className={classes.copy} />\n                )}\n            </Link>\n        </ShadowRootTooltip>\n    )\n})\n","import { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Typography, type BoxProps } from '@mui/material'\nimport { memo } from 'react'\n\nconst useStyles = makeStyles()((theme) => ({\n    statusBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    text: {\n        color: theme.palette.maskColor.second,\n        fontSize: '14px',\n        fontWeight: 400,\n        marginTop: theme.spacing(1.5),\n    },\n}))\n\ninterface Props extends BoxProps {\n    iconSize?: number\n}\n\nexport const EmptyStatus = memo(function EmptyStatus({ className, children, iconSize = 32, ...rest }: Props) {\n    const { classes, cx } = useStyles()\n    return (\n        <Box className={cx(classes.statusBox, className)} p={2} {...rest}>\n            <Icons.EmptySimple size={iconSize} />\n            <Typography className={classes.text} component=\"div\">\n                {children}\n            </Typography>\n        </Box>\n    )\n})\n","import { memo, type HTMLProps, type CSSProperties } from 'react'\n\nexport interface ImageIconProps extends HTMLProps<HTMLImageElement> {\n    size?: number\n    icon?: string\n    iconFilterColor?: string\n}\n\nexport const ImageIcon = memo(function ImageIcon({ size = 48, icon, iconFilterColor, ...rest }: ImageIconProps) {\n    const style: CSSProperties | undefined = iconFilterColor\n        ? {\n              filter: `drop-shadow(0px 6px 12px ${iconFilterColor})`,\n              backdropFilter: 'blur(16px)',\n              ...rest.style,\n          }\n        : rest.style\n\n    return <img height={size} width={size} src={icon?.toString()} {...rest} style={style} />\n})\n","import { makeStyles } from '@masknet/theme'\nimport { ImageIcon } from '../ImageIcon/index.js'\n\ninterface StyleProps {\n    size: number\n    badgeIconBorderColor?: string\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, props) => ({\n    root: {\n        position: 'relative',\n        display: 'flex',\n        height: props.size,\n        width: props.size,\n    },\n    mainIcon: {\n        display: 'block',\n    },\n    badgeIcon: {\n        position: 'absolute',\n        right: -6,\n        bottom: -4,\n        border: `1px solid ${props.badgeIconBorderColor ?? theme.palette.common.white}`,\n        borderRadius: '50%',\n    },\n}))\n\ninterface WalletIconProps extends withClasses<'root' | 'mainIcon'> {\n    size?: number\n    badgeSize?: number\n    mainIcon?: string\n    badgeIcon?: string\n    badgeIconBorderColor?: string\n    iconFilterColor?: string\n}\n\nexport function WalletIcon(props: WalletIconProps) {\n    const { size = 24, badgeSize = 14, mainIcon, badgeIcon, badgeIconBorderColor, iconFilterColor } = props\n    const { classes } = useStyles(\n        {\n            size: badgeSize > size ? badgeSize : size,\n            badgeIconBorderColor,\n        },\n        { props: { classes: props.classes } },\n    )\n\n    return (\n        <div\n            className={classes.root}\n            style={{\n                height: size,\n                width: size,\n            }}>\n            {mainIcon ? (\n                <ImageIcon className={classes.mainIcon} size={size} icon={mainIcon} iconFilterColor={iconFilterColor} />\n            ) : null}\n            {badgeIcon ? <ImageIcon className={classes.badgeIcon} size={badgeSize} icon={badgeIcon} /> : null}\n        </div>\n    )\n}\n","import { memo, type PropsWithChildren, useRef } from 'react'\nimport { Box, Button } from '@mui/material'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { Sniffings } from '@masknet/shared-base'\n\ninterface ActionProps extends PropsWithChildren<{}> {\n    openSelectWalletDialog: () => void\n}\n\nexport const Action = memo<ActionProps>(function Action({ children, openSelectWalletDialog }) {\n    const ref = useRef<HTMLDivElement>()\n    const t = useSharedTrans()\n\n    return (\n        <Box display=\"flex\" columnGap={16} minWidth={!Sniffings.is_popup_page ? 276 : 176} ref={ref}>\n            {children ?? (\n                <Button fullWidth onClick={openSelectWalletDialog}>\n                    {t.wallet_status_button_change()}\n                </Button>\n            )}\n        </Box>\n    )\n})\n","import { memo, type PropsWithChildren, useCallback, useMemo } from 'react'\nimport { alpha, Box, Button } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles, MaskColorVar } from '@masknet/theme'\nimport {\n    useNetworkContext,\n    useProviderDescriptor,\n    useRecentTransactions,\n    useNetworkDescriptor,\n    useWallet,\n    useReverseAddress,\n    useWeb3Others,\n    useChainContext,\n    NetworkContextProvider,\n    RevokeChainContextProvider,\n} from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { type NetworkPluginID, Sniffings } from '@masknet/shared-base'\nimport { TransactionStatusType } from '@masknet/web3-shared-base'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { WalletDescription } from './WalletDescription.js'\nimport { Action } from './Action.js'\nimport { SelectProviderModal, WalletStatusModal } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        boxSizing: 'content-box',\n        display: 'flex',\n        backgroundColor: Sniffings.is_dashboard_page\n            ? MaskColorVar.mainBackground\n            : alpha(theme.palette.maskColor.bottom, 0.8),\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 0px 20px rgba(255, 255, 255, 0.12)'\n                : '0px 0px 20px rgba(0, 0, 0, 0.05)',\n        backdropFilter: 'blur(16px)',\n        padding: theme.spacing(2),\n        borderRadius: '0 0 12px 12px',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flex: 1,\n        maxHeight: 40,\n    },\n    connection: {\n        width: 18,\n        height: 18,\n        marginRight: 8,\n    },\n}))\n\nexport interface WalletStatusBarProps<T extends NetworkPluginID> extends PropsWithChildren<{}> {\n    className?: string\n    actualPluginID?: T\n    expectedPluginID?: T\n    expectedChainId?: Web3Helper.Definition[T]['ChainId']\n    onClick?: (ev: React.MouseEvent<HTMLDivElement>) => void\n    requiredSupportChainIds?: Array<Web3Helper.Definition[T]['ChainId']>\n    requiredSupportPluginID?: NetworkPluginID\n}\n\nconst PluginWalletStatusBarWithoutContext = memo<WalletStatusBarProps<NetworkPluginID>>(\n    ({\n        className,\n        onClick,\n        expectedPluginID,\n        expectedChainId,\n        children,\n        requiredSupportChainIds,\n        requiredSupportPluginID,\n    }) => {\n        const t = useSharedTrans()\n        const { classes, cx } = useStyles()\n\n        const { pluginID } = useNetworkContext()\n        const { account, chainId, providerType } = useChainContext()\n        const wallet = useWallet(pluginID)\n        const providerDescriptor = useProviderDescriptor()\n        const networkDescriptor = useNetworkDescriptor(pluginID, chainId)\n        const expectedNetworkDescriptor = useNetworkDescriptor(expectedPluginID, expectedChainId)\n        const { data: domain } = useReverseAddress(pluginID, account)\n        const Others = useWeb3Others()\n\n        const openSelectProviderDialog = useCallback(() => {\n            SelectProviderModal.open({\n                requiredSupportChainIds,\n                requiredSupportPluginID,\n            })\n        }, [expectedNetworkDescriptor, requiredSupportChainIds, requiredSupportPluginID])\n\n        const pendingTransactions = useRecentTransactions(pluginID, TransactionStatusType.NOT_DEPEND)\n\n        const walletName = useMemo(() => {\n            if (domain) return domain\n            if (providerType === ProviderType.MaskWallet && wallet?.name) return wallet?.name\n            return providerDescriptor?.name || Others.formatAddress(account, 4)\n        }, [account, domain, providerType, wallet?.name, providerDescriptor?.name, Others.formatAddress])\n\n        if (!account) {\n            return (\n                <Box className={cx(classes.root, className)}>\n                    <Button fullWidth onClick={openSelectProviderDialog}>\n                        <Icons.Wallet className={classes.connection} /> {t.plugin_wallet_connect_a_wallet()}\n                    </Button>\n                </Box>\n            )\n        }\n\n        return (\n            <Box className={cx(classes.root, className)}>\n                <WalletDescription\n                    pending={!!pendingTransactions.length}\n                    providerIcon={providerDescriptor?.icon}\n                    networkIcon={networkDescriptor?.icon}\n                    iconFilterColor={providerDescriptor?.iconFilterColor}\n                    name={walletName}\n                    formattedAddress={Others.formatAddress(account, 4)}\n                    addressLink={Others.explorerResolver.addressLink(chainId, account)}\n                    onClick={onClick ?? openSelectProviderDialog}\n                    onPendingClick={() => WalletStatusModal.open()}\n                />\n                <Action openSelectWalletDialog={openSelectProviderDialog}>{children}</Action>\n            </Box>\n        )\n    },\n)\n\nPluginWalletStatusBarWithoutContext.displayName = 'PluginWalletStatusBarWithoutContext'\n\nexport const PluginWalletStatusBar = memo<WalletStatusBarProps<NetworkPluginID>>((props) => {\n    const children = (\n        <RevokeChainContextProvider>\n            <PluginWalletStatusBarWithoutContext {...props} />\n        </RevokeChainContextProvider>\n    )\n\n    return props.actualPluginID ? (\n        <NetworkContextProvider value={props.actualPluginID}>{children}</NetworkContextProvider>\n    ) : (\n        children\n    )\n})\n\nPluginWalletStatusBar.displayName = 'PluginWalletStatusBar'\n","import { makeStyles, LoadingBase } from '@masknet/theme'\nimport { memo } from 'react'\nimport { alpha, Box, Link, Typography } from '@mui/material'\nimport { CopyButton, WalletIcon } from '@masknet/shared'\nimport { Icons } from '@masknet/icons'\nimport { useSharedTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 4,\n        cursor: 'pointer',\n    },\n    description: {\n        marginLeft: 10,\n    },\n    walletName: {\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 4,\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        lineHeight: '18px',\n    },\n    address: {\n        color: theme.palette.maskColor.second,\n        lineHeight: '18px',\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 2,\n    },\n    pending: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 2,\n        borderRadius: 2,\n        padding: '2px 4px',\n        backgroundColor: alpha(theme.palette.maskColor.warn, 0.1),\n        color: theme.palette.maskColor.warn,\n        lineHeight: '18px',\n    },\n    progress: {\n        color: theme.palette.maskColor.warn,\n    },\n    linkIcon: {\n        color: theme.palette.maskColor.second,\n        cursor: 'pointer',\n        height: 14,\n    },\n}))\n\nexport interface WalletDescriptionProps {\n    onClick?: (ev: React.MouseEvent<HTMLDivElement>) => void\n    pending?: boolean\n    onPendingClick?: () => void\n    providerIcon?: string\n    networkIcon?: string\n    iconFilterColor?: string\n    name?: string\n    address?: string\n    formattedAddress?: string\n    addressLink?: string\n    verified?: boolean\n}\n\nexport const WalletDescription = memo<WalletDescriptionProps>(\n    ({\n        onClick,\n        providerIcon,\n        networkIcon,\n        iconFilterColor,\n        name,\n        address,\n        formattedAddress,\n        addressLink,\n        onPendingClick,\n        pending,\n        verified,\n    }) => {\n        const { classes } = useStyles()\n        const t = useSharedTrans()\n\n        return (\n            <Box onClick={onClick} className={classes.root}>\n                <WalletIcon\n                    size={30}\n                    badgeSize={12}\n                    mainIcon={providerIcon ?? networkIcon}\n                    badgeIcon={providerIcon ? networkIcon : undefined}\n                    iconFilterColor={iconFilterColor}\n                />\n                <Box className={classes.description}>\n                    <Typography className={classes.walletName}>\n                        <span>{name}</span>\n                        {verified ? <Icons.Verification size={18} /> : null}\n                        {onPendingClick ? <Icons.ArrowDrop /> : null}\n                    </Typography>\n                    <Typography className={classes.address}>\n                        <span>{formattedAddress}</span>\n                        {address ? <CopyButton size={14} className={classes.linkIcon} text={address} /> : null}\n                        <Link\n                            href={addressLink}\n                            target=\"_blank\"\n                            title=\"View on Explorer\"\n                            rel=\"noopener noreferrer\"\n                            onClick={(event) => {\n                                event.stopPropagation()\n                            }}\n                            className={classes.linkIcon}>\n                            <Icons.LinkOut size={14} className={classes.linkIcon} />\n                        </Link>\n                        {pending ? (\n                            <span\n                                className={classes.pending}\n                                onClick={(e) => {\n                                    e.stopPropagation()\n                                    onPendingClick?.()\n                                }}>\n                                {t.recent_transaction_pending()}\n                                <LoadingBase size={12} className={classes.progress} />\n                            </span>\n                        ) : null}\n                    </Typography>\n                </Box>\n            </Box>\n        )\n    },\n)\n","import { SingletonModal } from '@masknet/shared-base'\nimport type { SelectProviderModalOpenProps, SelectProviderModalCloseProps } from './SelectProviderModal/index.js'\nimport type { WalletConnectQRCodeOpenProps } from './WalletConnectQRCodeModal/index.js'\nimport type { WalletRiskWarningModalOpenProps } from './WalletRiskWarningModal/index.js'\nimport type { ConnectWalletModalOpenProps, ConnectWalletModalCloseProps } from './ConnectWalletModal/index.js'\nimport type { LeavePageConfirmModalOpenProps } from './LeavePageConfirmModal/index.js'\nimport type {\n    ApplicationBoardModalOpenProps,\n    ApplicationBoardSettingsModalOpenProps,\n} from './ApplicationBoardModal/index.js'\nimport type { GasSettingModalOpenOrCloseProps } from './GasSettingModal/index.js'\nimport type { ConfirmModalCloseProps, ConfirmModalOpenProps } from './ConfirmModal/index.js'\nimport type { ConfirmDialogOpenProps } from './ConfirmDialog/index.js'\nimport type { TransactionConfirmModalOpenProps } from './TokenTransactionConfirmModal/index.js'\nimport type { SelectNonFungibleContractModalOpenProps } from './SelectNonFungibleContractModal/index.js'\nimport type {\n    SelectFungibleTokenModalOpenProps,\n    SelectFungibleTokenModalCloseProps,\n} from './SelectFungibleTokenModal/index.js'\nimport type {\n    SelectGasSettingsModalCloseProps,\n    SelectGasSettingsModalOpenProps,\n} from './SelectAdvancedSettingsDialog/index.js'\nimport type { AddCollectiblesModalCloseProps, AddCollectiblesModalOpenProps } from './AddCollectiblesModal/index.js'\nimport type { PersonaSelectPanelModalOpenProps } from './PersonaSelectPanelModal/index.js'\nimport type { ShareSelectNetworkModalOpenProps } from './ShareSelectNetwork/index.js'\n\nexport const WalletConnectQRCodeModal = new SingletonModal<WalletConnectQRCodeOpenProps>()\nexport const SelectProviderModal = new SingletonModal<SelectProviderModalOpenProps, SelectProviderModalCloseProps>()\nexport const WalletStatusModal = new SingletonModal()\nexport const WalletRiskWarningModal = new SingletonModal<WalletRiskWarningModalOpenProps>()\nexport const ConnectWalletModal = new SingletonModal<ConnectWalletModalOpenProps, ConnectWalletModalCloseProps>()\nexport const LeavePageConfirmModal = new SingletonModal<LeavePageConfirmModalOpenProps>()\nexport const ApplicationBoardModal = new SingletonModal<ApplicationBoardModalOpenProps>()\nexport const ApplicationBoardSettingsModal = new SingletonModal<ApplicationBoardSettingsModalOpenProps>()\nexport const GasSettingModal = new SingletonModal<GasSettingModalOpenOrCloseProps, GasSettingModalOpenOrCloseProps>()\nexport const TransactionConfirmModal = new SingletonModal<TransactionConfirmModalOpenProps>()\nexport const TransactionSnackbar = new SingletonModal()\nexport const ConfirmModal = new SingletonModal<ConfirmModalOpenProps, ConfirmModalCloseProps>()\nexport const ConfirmDialog = new SingletonModal<ConfirmDialogOpenProps, boolean>()\nexport const SelectNonFungibleContractModal = new SingletonModal<SelectNonFungibleContractModalOpenProps>()\nexport const SelectGasSettingsModal = new SingletonModal<\n    SelectGasSettingsModalOpenProps,\n    SelectGasSettingsModalCloseProps\n>()\nexport const AddCollectiblesModal = new SingletonModal<AddCollectiblesModalOpenProps, AddCollectiblesModalCloseProps>()\nexport const SelectFungibleTokenModal = new SingletonModal<\n    SelectFungibleTokenModalOpenProps,\n    SelectFungibleTokenModalCloseProps\n>()\n\nexport const PersonaSelectPanelModal = new SingletonModal<PersonaSelectPanelModalOpenProps>()\n\nexport const ShareSelectNetworkModal = new SingletonModal<ShareSelectNetworkModalOpenProps>()\n\nexport { ApplicationSettingTabs } from './ApplicationBoardModal/ApplicationBoardDialog.js'\n","export const LightColor = {\n    bg: '##F9F9F9',\n    primary: '#1c68f3',\n    primaryContrastText: '#ffffff',\n    background: '#FFFFFF',\n    secondary: '#e8f0fe',\n    secondaryContrastText: '#1c68f3',\n    input: '#F6F6F8',\n    primaryBackground: '#ffffff',\n    primaryBackground2: '#FBFBFC',\n    secondaryBackground: '#f9fafa',\n    lightBackground: '#F9FAFA',\n    mainBackground: '#ffffff',\n    suspensionBackground: 'rgba(249, 250, 250, 0.8)',\n    normalBackground: '#F3F3F4',\n    twitterBackground: '#F7F9FA',\n    twitterBackgroundHover: '#EFF1F2',\n    twitterInputBackground: '#F6F8F8',\n    twitterButton: '#111418',\n    twitterButtonText: '#ffffff',\n    twitterBlue: '#1C68F3',\n    twitterBorderLine: '#EDF1F2',\n    twitterSecond: '#7B8192',\n    twitterMain: '#0F1419',\n    twitterBottom: '#ffffff',\n    twitterInfoBackground: '#AFC3E1',\n    twitterInfo: '#8CA3C7',\n    twitterBg: '#F6F8F8',\n    twitterTooltipBg: 'rgba(0,0,0,.6)',\n    twitterInput: '#EDF1F2',\n    twitterLine: '#EBEEF0',\n    redMain: '#ff5f5f',\n    redLight: '#ffafaf',\n    redContrastText: '#ffffff',\n\n    greenMain: '#3DC233',\n    greenLight: '#e6f6f0',\n\n    orangeMain: '#ffb915',\n    orangeLight: '#faf0d8',\n\n    iconLight: '#a6a9b6',\n\n    divider: '#eff3f4',\n\n    border: '#F3F3F4',\n    borderSecondary: '#536471',\n\n    textPrimary: '#111432',\n    textSecondary: '#7b8192',\n\n    secondaryInfoText: '#AFC3E1',\n    normalText: '#7B8192',\n    normalTextLight: 'rgba(255, 255, 255, 0.8)',\n    infoBackground: 'rgba(175, 195, 225, 0.15)',\n    success: '#60DFAB',\n    warning: '#FFB915',\n    blue: '#1C68F3',\n    textLink: '#1C68F3',\n    lineLight: '#E4E8F1',\n    lineLighter: '#E9E9EA',\n    textLight: '#A6A9B6',\n    lightestBackground: '#FFFFFF',\n    linkText: '#1C68F3',\n    twitter: '#2CA4EF',\n    facebook: '#4267B2',\n    white: '#ffffff',\n    bottom: '#F9FAFA',\n    main: '#1C68F3',\n    errorBackground: 'rgba(255, 95, 95, 0.15)',\n    tooltipBackground: '#ffffff',\n    warningBackground: 'rgba(255, 185, 21, 0.1)',\n    cyberconnectPrimary: '#000000',\n    errorPlugin: '#FF3545',\n    buttonPluginBackground: '#07101B',\n    textPluginColor: '#07101B',\n    buttonPluginColor: '#FFFFFF',\n}\nexport const DarkColor: typeof LightColor = {\n    bg: '#1C1C1C',\n    primary: '#1c68f3',\n    primaryContrastText: '#ffffff',\n    background: '#15171A',\n    secondary: '#242e57',\n    secondaryContrastText: '#ffffff',\n    input: '#282B49',\n    primaryBackground: '#212442',\n    primaryBackground2: '#212442',\n    secondaryBackground: '#252846',\n    lightBackground: '#2E314F',\n    mainBackground: '#111432',\n    suspensionBackground: 'rgba(27, 30, 60, 0.8)',\n    normalBackground: '#262947',\n    twitterInputBackground: '#17191D',\n    twitterBackground: '#17191D',\n    twitterBackgroundHover: '#17191D',\n    twitterButton: '#EFF3F4',\n    twitterButtonText: '#0F1419',\n    twitterBlue: '#4989FF',\n    twitterBorderLine: '#2F3336',\n    twitterInput: '#1D2023',\n    twitterSecond: '#636B72',\n    twitterMain: '#D9D9D9',\n    twitterBottom: '#000000',\n    twitterInfoBackground: '#AFC3E1',\n    twitterInfo: '#8CA3C7',\n    twitterLine: '#2F3336',\n    twitterBg: '#15171A',\n    twitterTooltipBg: 'rgba(91,112,131,.6)',\n    redMain: '#ff5f5f',\n    redLight: '#46304a',\n    redContrastText: '#ffffff',\n\n    greenMain: '#3DC233',\n    greenLight: '#314457',\n\n    orangeMain: '#ffb915',\n    orangeLight: '#463e3f',\n\n    iconLight: '#a6a9b6',\n\n    divider: '#3e455e',\n\n    border: '#3E455E',\n    borderSecondary: '#6e767d',\n\n    // TODO: ?\n    textPrimary: '#ffffff',\n    // TODO: ?\n    textSecondary: 'ghostwhite',\n\n    secondaryInfoText: '#AFC3E1',\n    normalText: 'rgba(255, 255, 255, 0.8)',\n    normalTextLight: 'rgba(255, 255, 255, 0.8)',\n\n    infoBackground: 'rgba(175, 195, 225, 0.15)',\n    success: '#60DFAB',\n    warning: '#FFB915',\n    blue: '#1C68F3',\n    textLink: '#ffffff',\n    lineLight: '#32365B',\n    lineLighter: '#32365B',\n    textLight: '#A6A9B6',\n    lightestBackground: '#212422',\n    linkText: '#ffffff',\n    twitter: '#2CA4EF',\n    facebook: '#4267B2',\n    white: '#ffffff',\n    bottom: '#000000',\n    main: '#D4D4D4',\n    errorBackground: 'rgba(255, 95, 95, 0.1)',\n    tooltipBackground: '#1A1D20',\n    warningBackground: 'rgba(255, 185, 21, 0.1)',\n    cyberconnectPrimary: '#ffffff',\n    errorPlugin: '#FF3545',\n    buttonPluginBackground: '#07101B',\n    textPluginColor: '#07101B',\n    buttonPluginColor: '#FFFFFF',\n}\nexport type Color = typeof LightColor\n","import type { Theme } from '@mui/material'\nimport { kebabCase } from 'lodash-es'\nimport { LightColor, DarkColor } from './constants.js'\n\nexport function getMaskColor(theme: Theme) {\n    if (theme.palette.mode === 'dark') return DarkColor\n    return LightColor\n}\nexport type MaskCSSVariableColor = string & {\n    /** Append alpha channel to the original color */\n    alpha(alpha: number): string\n} & ((defaultValue?: string) => string)\n\nfunction set(key: string | symbol) {\n    if (typeof key === 'symbol') return undefined\n    const cssVar = kebabCase(key)\n    function value(defaultValue?: string) {\n        // it might be an object when used in styled components.\n        if (typeof defaultValue !== 'string') defaultValue = undefined\n        const x = `var(--mask-${cssVar}${defaultValue ? ', ' + defaultValue : ''})`\n        return x\n    }\n    Object.assign(value, {\n        [Symbol.toPrimitive]: () => `var(--mask-${cssVar})`,\n        alpha: (alpha: number) => `rgba(var(--mask-${cssVar}-fragment), ${alpha})`,\n    })\n    Object.defineProperty(MaskColorVar, key, { configurable: true, enumerable: true, value })\n    return value\n}\n/**\n * @deprecated Use theme.palette.maskColor\n */\nexport const MaskColorVar: Record<keyof typeof LightColor, MaskCSSVariableColor> = {\n    __proto__: new Proxy(\n        {},\n        {\n            get: (_, p) => set(p),\n            getOwnPropertyDescriptor: (_, p) => {\n                set(p)\n                return Object.getOwnPropertyDescriptor(MaskColorVar, p)\n            },\n        },\n    ),\n} as any\n","import { Box, Button } from '@mui/material'\nimport type { ButtonProps } from '@mui/material/Button'\nimport { LoadingBase } from '../LoadingBase/index.js'\nimport { makeStyles } from '../../UIHelper/index.js'\n\nexport interface ActionButtonProps extends ButtonProps {\n    width?: number | string\n    loading?: boolean\n}\n\nconst useStyles = makeStyles()({\n    loading: {\n        ['& > *']: {\n            opacity: 0.3,\n        },\n    },\n})\n\nexport function ActionButton<T extends React.ComponentType<any> = React.ComponentType>(\n    props: ActionButtonProps & PropsOf<T>,\n) {\n    const { width, loading, children, className, style, ...rest } = props\n    const { classes, cx } = useStyles()\n    return (\n        <Button\n            className={cx('actionButton', className, loading ? classes.loading : undefined)}\n            style={{ width, ...style, pointerEvents: loading ? 'none' : undefined }}\n            {...rest}\n            disableElevation\n            disabled={!!(rest.disabled || loading)}>\n            {loading ? (\n                <Box\n                    position=\"absolute\"\n                    width=\"100%\"\n                    height=\"100%\"\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    style={{ opacity: 1 }}>\n                    <LoadingBase />\n                </Box>\n            ) : null}\n            {children}\n        </Button>\n    )\n}\n","import { type GeneratedIconProps, Icons } from '@masknet/icons'\nimport { makeStyles } from '../../UIHelper/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    animated: {\n        '@keyframes loadingAnimation': {\n            '0%': {\n                transform: 'rotate(0deg)',\n            },\n            '100%': {\n                transform: 'rotate(360deg)',\n            },\n        },\n        animation: 'loadingAnimation 1s linear infinite',\n    },\n}))\n\nexport function LoadingBase(props: GeneratedIconProps) {\n    const { classes, cx } = useStyles()\n    return <Icons.CircleLoading {...props} className={cx(classes.animated, props.className)} />\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');","import { forwardRef, useRef, memo, useCallback } from 'react'\nimport { keyframes } from 'tss-react'\nimport {\n    SnackbarProvider,\n    type SnackbarProviderProps,\n    type SnackbarKey,\n    useSnackbar,\n    type VariantType,\n    type SnackbarMessage,\n    SnackbarContent,\n    type SnackbarAction,\n    type OptionsObject,\n} from 'notistack'\nimport { Typography, IconButton, alpha } from '@mui/material'\nimport { Close as CloseIcon, Warning as WarningIcon, Info as InfoIcon } from '@mui/icons-material'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles } from '../../UIHelper/index.js'\nimport { MaskColorVar } from '../../CSSVariables/index.js'\nimport { usePortalShadowRoot } from '../../ShadowRoot/index.js'\n\nexport { PopupSnackbarProvider, usePopupCustomSnackbar } from './PopupSnackbar.js'\nexport { SnackbarProvider, useSnackbar } from 'notistack'\nexport type { VariantType, OptionsObject, SnackbarKey, SnackbarMessage } from 'notistack'\n\nexport interface StyleProps {\n    offsetY?: number\n}\n\nconst useStyles = makeStyles<StyleProps, 'title' | 'message'>()((theme, { offsetY }, classNames) => {\n    const spinningAnimationKeyFrames = keyframes`\n        to {\n          transform: rotate(360deg)\n        }\n    `\n    const title = {\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        fontSize: 14,\n        lineHeight: '18px',\n    } as const\n    const message = {\n        color: theme.palette.maskColor.main,\n        fontWeight: 400,\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: 14,\n        lineHeight: '18px',\n        wordBreak: 'break-word',\n        '& > a': {\n            display: 'flex',\n            alignItems: 'center',\n        },\n        '& :focus:not(:focus-visible)': {\n            outline: 0,\n        },\n    } as const\n    const defaultVariant = {\n        background: theme.palette.maskColor.bottom,\n        color: theme.palette.maskColor.main,\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 4px 30px rgba(255, 255, 255, 0.15)'\n                : '0px 4px 30px rgba(0, 0, 0, 0.1)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n\n        [`& .${classNames.message}`]: {\n            color: 'inherit',\n        },\n    }\n    const success = {\n        backgroundColor: theme.palette.maskColor.success,\n        color: theme.palette.maskColor.white,\n        boxShadow: `0px 6px 20px ${alpha(theme.palette.maskColor.success, 0.15)}`,\n        backdropFilter: 'blur(16px)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n        [`& .${classNames.message}`]: {\n            color: alpha(theme.palette.maskColor.white, 0.8),\n            '& svg': {\n                color: theme.palette.maskColor.white,\n            },\n        },\n    } as const\n\n    const error = {\n        background: theme.palette.maskColor.danger,\n        color: theme.palette.maskColor.white,\n        boxShadow: `0px 6px 20px ${alpha(theme.palette.maskColor.danger, 0.15)}`,\n        backdropFilter: 'blur(16px)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n        [`& .${classNames.message}`]: {\n            color: alpha(theme.palette.maskColor.white, 0.8),\n            '& svg': {\n                color: theme.palette.maskColor.white,\n            },\n        },\n    } as const\n\n    const info = {\n        background: theme.palette.maskColor.primary,\n        color: theme.palette.maskColor.white,\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 4px 30px rgba(255, 255, 255, 0.15)'\n                : '0px 4px 30px rgba(0, 0, 0, 0.1)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n        [`& .${classNames.message}`]: {\n            color: alpha(theme.palette.maskColor.white, 0.8),\n            '& svg': {\n                color: theme.palette.maskColor.white,\n            },\n        },\n    }\n\n    const warning = {\n        backgroundColor: theme.palette.maskColor.warn,\n        color: theme.palette.maskColor.white,\n        boxShadow: `0px 6px 20px ${alpha(theme.palette.maskColor.warn, 0.15)}`,\n        backdropFilter: 'blur(16px)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n        [`& .${classNames.message}`]: {\n            color: alpha(theme.palette.maskColor.white, 0.8),\n            '& svg': {\n                color: theme.palette.maskColor.white,\n            },\n        },\n    } as const\n\n    return {\n        root: {\n            zIndex: 9999,\n            transform: typeof offsetY !== 'undefined' ? `translateY(${offsetY}px)` : 'none',\n            color: MaskColorVar.textLight,\n            pointerEvents: 'inherit',\n        },\n        content: {\n            alignItems: 'center',\n            padding: theme.spacing(2),\n            borderRadius: 12,\n            width: 380,\n            flexWrap: 'nowrap !important' as 'nowrap',\n        },\n        // eslint-disable-next-line tss-unused-classes/unused-classes\n        default: defaultVariant,\n        success,\n        error,\n        info,\n        warning,\n        icon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            '& > svg': {\n                width: 24,\n                height: 24,\n            },\n        },\n        spinning: {\n            display: 'flex',\n            animation: `${spinningAnimationKeyFrames} 2s infinite linear`,\n        },\n        action: {\n            marginLeft: 'auto',\n        },\n        closeButton: {\n            color: 'inherit',\n            transform: 'translateY(-10px)',\n        },\n        texts: {\n            marginLeft: theme.spacing(1.5),\n            '& :focus:not(:focus-visible)': {\n                outline: 0,\n            },\n        },\n        title,\n        message,\n    }\n})\n\nexport interface CustomSnackbarContentProps {\n    id: SnackbarKey\n    title: SnackbarMessage\n    message?: string | React.ReactNode\n    icon?: React.ReactNode\n    processing?: boolean\n    variant?: VariantType\n    action?: SnackbarAction\n    offsetY?: number\n    classes?: Partial<ReturnType<typeof useStyles>['classes']>\n}\nconst IconMap: Record<VariantType, React.ReactNode> = {\n    default: <InfoIcon color=\"inherit\" />,\n    success: <Icons.SuccessForSnackBar />,\n    error: <Icons.TransactionFailed />,\n    warning: <WarningIcon color=\"inherit\" />,\n    info: <InfoIcon color=\"inherit\" />,\n}\n\nexport const CustomSnackbarContent = forwardRef<HTMLDivElement, CustomSnackbarContentProps>((props, ref) => {\n    const { classes, cx } = useStyles({ offsetY: props.offsetY }, { props })\n    const snackbar = useSnackbar()\n    const loadingIcon = <Icons.CircleLoading className={classes.spinning} />\n    const variantIcon = props.processing ? loadingIcon : props.variant ? IconMap[props.variant] : null\n    let renderedAction: React.ReactNode = (\n        <IconButton className={classes.closeButton} onClick={() => snackbar.closeSnackbar(props.id)}>\n            <CloseIcon />\n        </IconButton>\n    )\n    if (props.action) {\n        renderedAction = typeof props.action === 'function' ? props.action(props.id) : props.action\n    }\n    return (\n        <SnackbarContent ref={ref} className={cx(classes.content, classes[props.variant!])}>\n            {variantIcon ? <div className={classes.icon}>{variantIcon}</div> : null}\n            <div className={classes.texts}>\n                <Typography className={classes.title} variant=\"h2\">\n                    {props.title}\n                </Typography>\n                {props.message ? (\n                    <Typography className={classes.message} variant=\"body1\">\n                        {props.message}\n                    </Typography>\n                ) : null}\n            </div>\n            <div className={classes.action}>{renderedAction}</div>\n        </SnackbarContent>\n    )\n})\n\nexport const CustomSnackbarProvider = memo<\n    SnackbarProviderProps & {\n        offsetY?: number\n    }\n>(function CustomSnackbarProvider({ offsetY, ...rest }) {\n    const ref = useRef<SnackbarProvider>(null)\n    const { classes } = useStyles({ offsetY })\n    const onDismiss = (key: string | number) => () => {\n        ref.current?.closeSnackbar(key)\n    }\n\n    return usePortalShadowRoot((container) => (\n        <SnackbarProvider\n            ref={ref}\n            maxSnack={30}\n            disableWindowBlurListener\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            hideIconVariant\n            // this is a false positive, SnackbarProvider won't use it like it is a component.\n            // eslint-disable-next-line react/no-unstable-nested-components\n            content={(key, title) => (\n                <CustomSnackbarContent id={key} variant={rest.variant ?? 'default'} title={title} offsetY={offsetY} />\n            )}\n            // eslint-disable-next-line react/no-unstable-nested-components\n            action={(key) => (\n                <IconButton size=\"large\" onClick={onDismiss(key)} sx={{ color: 'inherit' }}>\n                    <CloseIcon color=\"inherit\" />\n                </IconButton>\n            )}\n            classes={{\n                containerRoot: classes.root,\n                variantSuccess: classes.success,\n                variantError: classes.error,\n                variantInfo: classes.info,\n                variantWarning: classes.warning,\n            }}\n            domRoot={container}\n            {...rest}\n        />\n    ))\n})\n\nexport interface ShowSnackbarOptions\n    extends OptionsObject,\n        Pick<CustomSnackbarContentProps, 'message' | 'processing' | 'icon' | 'classes'> {}\n\nexport function useCustomSnackbar() {\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n    const showSnackbar = useCallback(\n        (\n            text: SnackbarMessage,\n            options: ShowSnackbarOptions = {\n                variant: 'default',\n            },\n        ) => {\n            const { processing, message, variant, ...rest } = options\n            return enqueueSnackbar(text, {\n                variant: options.variant,\n                content: (key, title) => {\n                    return (\n                        <CustomSnackbarContent\n                            variant={variant ?? 'default'}\n                            id={key}\n                            title={title}\n                            message={message}\n                            processing={processing}\n                            action={rest.action}\n                            classes={rest.classes}\n                        />\n                    )\n                },\n                ...rest,\n            })\n        },\n        [enqueueSnackbar],\n    )\n\n    return { showSnackbar, closeSnackbar }\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { attemptUntil } from '@masknet/web3-shared-base'\nimport { useQuery } from '@tanstack/react-query'\nimport { useWeb3Hub } from './useWeb3Hub.js'\nimport { useChainContext } from './useContext.js'\nimport { isNativeTokenAddress } from '@masknet/web3-shared-evm'\nimport { useNetworks } from './useNetworks.js'\n\nexport function useFungibleToken<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    address?: string | null,\n    fallbackToken?: Web3Helper.FungibleTokenScope<S, T>,\n    options?: HubOptions<T>,\n) {\n    const { chainId } = useChainContext({ chainId: options?.chainId })\n    const Hub = useWeb3Hub(pluginID, {\n        chainId,\n        ...options,\n    })\n    const networks = useNetworks(pluginID)\n\n    return useQuery({\n        enabled: true,\n        queryKey: ['fungible-token', pluginID, address, chainId, options],\n        queryFn: async () => {\n            if (!address) return\n            return attemptUntil(\n                [\n                    async () => {\n                        if (pluginID !== NetworkPluginID.PLUGIN_EVM || !isNativeTokenAddress(address) || !chainId)\n                            return\n                        const network = networks.find((x) => x.chainId === chainId)\n                        return network?.nativeCurrency\n                    },\n                    async () => {\n                        const token = await Hub.getFungibleToken(address, { chainId })\n                        if (!token) return\n                        const logoURL = token.logoURL ?? fallbackToken?.logoURL\n                        const symbol =\n                            token.symbol === 'UNKNOWN' || !token.symbol ? fallbackToken?.symbol : token.symbol\n                        return { ...token, symbol, logoURL } as Web3Helper.FungibleTokenScope<S, T>\n                    },\n                ],\n                fallbackToken,\n            )\n        },\n    })\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport { getRegisteredWeb3Networks } from '@masknet/web3-providers'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext, useNetworkContext } from './useContext.js'\n\n/**\n * Get built in declared network descriptor\n * @param expectedPluginID\n * @param expectedChainIdOrNetworkTypeOrID\n * @returns\n */\nexport function useNetworkDescriptor<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n    expectedChainIdOrNetworkTypeOrID?: string | number,\n): Web3Helper.NetworkDescriptorScope<S, T> | undefined {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    const { networkType } = useChainContext()\n\n    return getRegisteredWeb3Networks(pluginID).find((x) =>\n        [x.chainId, x.type, x.ID].includes(expectedChainIdOrNetworkTypeOrID ?? networkType ?? ''),\n    )\n}\n","import { EMPTY_ARRAY, type NetworkPluginID } from '@masknet/shared-base'\nimport { uniqBy } from 'lodash-es'\nimport { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport { useWeb3State } from './useWeb3State.js'\n\n/**\n * Bulletin networks and custom networks.\n * There could be duplicate chian id among them, because that's allow to custom networks.\n */\nexport function useNetworks<T extends NetworkPluginID = NetworkPluginID>(pluginID?: T, uniqChainId?: boolean) {\n    const { Network } = useWeb3State(pluginID)\n    const networks = useSubscription(Network?.networks ?? EMPTY_ARRAY)\n    return useMemo(() => {\n        const list = networks.filter((x) => x.network === 'mainnet' || x.isCustomized)\n        return uniqChainId ? uniqBy(list, (x) => x.chainId) : list\n    }, [networks, uniqChainId])\n}\n","import { getRegisteredWeb3Providers } from '@masknet/web3-providers'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext, useNetworkContext } from './useContext.js'\n\n/**\n * Get built in declared provider descriptor\n * @param expectedPluginID\n * @param expectedProviderTypeOrID\n * @returns\n */\nexport function useProviderDescriptor<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n    expectedProviderTypeOrID?: string,\n): Web3Helper.ProviderDescriptorScope<S, T> | undefined {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    const { providerType } = useChainContext()\n\n    return getRegisteredWeb3Providers(pluginID).find((x) =>\n        [x.type, x.ID].includes(expectedProviderTypeOrID ?? providerType ?? ''),\n    )\n}\n","import { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport type { RecentTransactionComputed, TransactionStatusType } from '@masknet/web3-shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { EMPTY_ARRAY, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useRecentTransactions<T extends NetworkPluginID>(pluginID?: T, status?: TransactionStatusType) {\n    const { Transaction } = useWeb3State(pluginID)\n    const transactions = useSubscription(Transaction?.transactions ?? EMPTY_ARRAY)\n    type ChainId = Web3Helper.Definition[T]['ChainId']\n    type Transaction = Web3Helper.Definition[T]['Transaction']\n\n    return useMemo<Array<RecentTransactionComputed<ChainId, Transaction>>>(() => {\n        return (status ? transactions.filter((x) => status === x.status) : transactions).map((x) => ({\n            ...x,\n            _tx: x.candidates[x.indexId],\n        }))\n    }, [status, transactions])\n}\n","import { useQuery } from '@tanstack/react-query'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useReverseAddress<T extends NetworkPluginID>(pluginID?: T, address?: string, domainOnly?: boolean) {\n    const { NameService } = useWeb3State(pluginID)\n\n    return useQuery({\n        queryKey: ['reverse', address, domainOnly],\n        enabled: !!NameService?.reverse,\n        queryFn: async () => {\n            if (!address) return null\n            return (await NameService?.reverse?.(address, domainOnly)) || null\n        },\n    })\n}\n","import { useMemo } from 'react'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext } from './useContext.js'\nimport { useWallets } from './useWallets.js'\n\n/**\n * Use the currently selected wallet.\n * @param pluginID\n * @returns\n */\nexport function useWallet<T extends NetworkPluginID>(\n    pluginID?: T,\n    providerType?: Web3Helper.Definition[T]['ProviderType'],\n) {\n    const { account } = useChainContext()\n    const wallets = useWallets()\n\n    return useMemo(() => {\n        return account ? wallets.find((x) => isSameAddress?.(x.address, account)) ?? null : null\n    }, [account, wallets])\n}\n","import { EMPTY_LIST, type Wallet } from '@masknet/shared-base'\nimport { Providers } from '@masknet/web3-providers'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { useMemo } from 'react'\nimport { usePersistSubscription } from '@masknet/shared-base-ui'\n\nexport function useWallets() {\n    // We got stored Mask wallets only.\n    const wallets = usePersistSubscription(\n        '@@mask-wallets',\n        Providers[ProviderType.MaskWallet].subscription.wallets ?? EMPTY_LIST,\n    )\n\n    return useMemo(() => {\n        return [...wallets]\n            .map((w) => {\n                // Could be serialized by react query persist client\n                if (w.createdAt instanceof Date && w.updatedAt instanceof Date) return w\n                return {\n                    ...w,\n                    createdAt: new Date(w.createdAt),\n                    updatedAt: new Date(w.updatedAt),\n                } as Wallet\n            })\n            .sort((a, b) => {\n                if (a.owner && !b.owner) return 1\n                const timestampA = a.createdAt.getTime()\n                const timestampB = b.createdAt.getTime()\n                if (timestampA - timestampB > 10000) {\n                    return 1\n                } else if (timestampB - timestampA > 10000) {\n                    return -1\n                }\n                const numA = a.name.split('Wallet ')[1]\n                const numB = b.name.split('Wallet ')[1]\n                try {\n                    if (!numA && numB && !Number.isNaN(numB)) return 1\n                    if (!Number.isNaN(numA) && !Number.isNaN(numB)) {\n                        return Number(numA) > Number(numB) ? 1 : -1\n                    } else {\n                        return numB.length - numA.length\n                    }\n                } catch {\n                    return 0\n                }\n            })\n    }, [wallets])\n}\n","import { useMemo } from 'react'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { HubAll } from '@masknet/web3-providers'\nimport type { Hub, HubOptions } from '@masknet/web3-providers/types'\nimport { useNetworkContext } from './useContext.js'\n\nexport function useWeb3Hub<T extends NetworkPluginID = NetworkPluginID>(expectedPluginID?: T, options?: HubOptions<T>) {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    return useMemo(() => HubAll.use(pluginID, options) as Hub<T>, [pluginID, JSON.stringify(options)])\n}\n","import { useMemo } from 'react'\nimport type { AbiItem } from 'web3-utils'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { type ChainId, createContract } from '@masknet/web3-shared-evm'\nimport type { BaseContract } from '@masknet/web3-contracts/types/types.js'\n\n/**\n * Create a contract which will forward its all transactions to the\n * EthereumService in the background page and decode the result of calls automatically\n * @param address\n * @param ABI\n * @param chainId\n */\nexport function useContract<T extends BaseContract>(chainId?: ChainId, address = '', ABI: AbiItem[] = EMPTY_LIST) {\n    return useMemo(() => createContract<T>(Web3.getWeb3({ chainId }), address, ABI), [address, ABI])\n}\n\n/**\n * Create many contracts with same ABI\n * @param listOfAddress\n * @param ABI\n * @param chainId\n */\nexport function useContracts<T extends BaseContract>(\n    chainId?: ChainId,\n    listOfAddress: string[] = EMPTY_LIST,\n    ABI: AbiItem[] = EMPTY_LIST,\n) {\n    return useMemo(\n        () =>\n            listOfAddress\n                .map((address) => createContract<T>(Web3.getWeb3({ chainId }), address, ABI))\n                .filter(Boolean) as T[],\n        [JSON.stringify(listOfAddress), ABI],\n    )\n}\n","import { utf8ToHex } from 'web3-utils'\n\nexport function pack(types: string[], values: any[]) {\n    if (types.length !== values.length) {\n        throw new Error('Number of types does not match number of values.')\n    }\n\n    let result = '0x'\n\n    for (let i = 0; i < types.length; i += 1) {\n        switch (types[i]) {\n            case 'address':\n                result += values[i].slice(2).padStart(40, '0')\n                break\n            case 'uint256':\n                result += BigInt(values[i]).toString(16).padStart(64, '0')\n                break\n            case 'bytes32':\n                result += utf8ToHex(values[i]).slice(2).padStart(64, '0')\n                break\n            case 'bool':\n                result += values[i] ? '01' : '00'\n                break\n            // ... you can continue adding more cases for other data types\n            default:\n                throw new Error(`Unsupported type ${types[i]}`)\n        }\n    }\n\n    return result\n}\n","module.exports = function reverse (src) {\n  var buffer = new Buffer(src.length)\n\n  for (var i = 0, j = src.length - 1; i <= j; ++i, --j) {\n    buffer[i] = src[j]\n    buffer[j] = src[i]\n  }\n\n  return buffer\n}\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","//     treeify.js\n//     Luke Plaster <notatestuser@gmail.com>\n//     https://github.com/notatestuser/treeify.js\n\n// do the universal module definition dance\n(function (root, factory) {\n\n  if (typeof exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else {\n    root.treeify = factory();\n  }\n\n}(this, function() {\n\n  function makePrefix(key, last) {\n    var str = (last ? '└' : '├');\n    if (key) {\n      str += '─ ';\n    } else {\n      str += '──┐';\n    }\n    return str;\n  }\n\n  function filterKeys(obj, hideFunctions) {\n    var keys = [];\n    for (var branch in obj) {\n      // always exclude anything in the object's prototype\n      if (!obj.hasOwnProperty(branch)) {\n        continue;\n      }\n      // ... and hide any keys mapped to functions if we've been told to\n      if (hideFunctions && ((typeof obj[branch])===\"function\")) {\n        continue;\n      }\n      keys.push(branch);\n    }\n    return keys;\n  }\n\n  function growBranch(key, root, last, lastStates, showValues, hideFunctions, callback) {\n    var line = '', index = 0, lastKey, circular, lastStatesCopy = lastStates.slice(0);\n\n    if (lastStatesCopy.push([ root, last ]) && lastStates.length > 0) {\n      // based on the \"was last element\" states of whatever we're nested within,\n      // we need to append either blankness or a branch to our line\n      lastStates.forEach(function(lastState, idx) {\n        if (idx > 0) {\n          line += (lastState[1] ? ' ' : '│') + '  ';\n        }\n        if ( ! circular && lastState[0] === root) {\n          circular = true;\n        }\n      });\n\n      // the prefix varies based on whether the key contains something to show and\n      // whether we're dealing with the last element in this collection\n      line += makePrefix(key, last) + key;\n\n      // append values and the circular reference indicator\n      showValues && (typeof root !== 'object' || root instanceof Date) && (line += ': ' + root);\n      circular && (line += ' (circular ref.)');\n\n      callback(line);\n    }\n\n    // can we descend into the next item?\n    if ( ! circular && typeof root === 'object') {\n      var keys = filterKeys(root, hideFunctions);\n      keys.forEach(function(branch){\n        // the last key is always printed with a different prefix, so we'll need to know if we have it\n        lastKey = ++index === keys.length;\n\n        // hold your breath for recursive action\n        growBranch(branch, root[branch], lastKey, lastStatesCopy, showValues, hideFunctions, callback);\n      });\n    }\n  };\n\n  // --------------------\n\n  var Treeify = {};\n\n  // Treeify.asLines\n  // --------------------\n  // Outputs the tree line-by-line, calling the lineCallback when each one is available.\n\n  Treeify.asLines = function(obj, showValues, hideFunctions, lineCallback) {\n    /* hideFunctions and lineCallback are curried, which means we don't break apps using the older form */\n    var hideFunctionsArg = typeof hideFunctions !== 'function' ? hideFunctions : false;\n    growBranch('.', obj, false, [], showValues, hideFunctionsArg, lineCallback || hideFunctions);\n  };\n\n  // Treeify.asTree\n  // --------------------\n  // Outputs the entire tree, returning it as a string with line breaks.\n\n  Treeify.asTree = function(obj, showValues, hideFunctions) {\n    var tree = '';\n    growBranch('.', obj, false, [], showValues, hideFunctions, function(line) {\n      tree += line + '\\n';\n    });\n    return tree;\n  };\n\n  // --------------------\n\n  return Treeify;\n\n}));\n","'use client';\nimport * as React from 'react';\n\nconst IsRestoringContext = /*#__PURE__*/React.createContext(false);\nconst useIsRestoring = () => React.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\nexport { IsRestoringProvider, useIsRestoring };\n//# sourceMappingURL=isRestoring.mjs.map\n"],"names":["lastRecognizedProfile","currentVisitingProfile","currentNextIDPlatform","currentPersonaIdentifier","getPostURL","share","getUserIdentity","getPostIdFromNewPostToast","postMessage","getSearchedKeyword","connectPersona","__setSiteAdaptorContext__","value","WebExtensionMessage","serializer","DOMAIN_RPC","Symbol","getPluginMessage","pluginID","type","domain","cache","has","get","messageCenter","events","serialization","set","__workaround__replaceImplementationOfCreatePluginMessage__","newImpl","Map","PLUGIN_ID","webpackHot","accept","PluginClaimMessage","createElement","useMemo","useTranslation","Trans","createProxy","initValue","define","key","Object","defineProperty","container","configurable","__proto__","Proxy","_","undefined","getPrototypeOf","setPrototypeOf","v","getOwnPropertyDescriptor","useClaimTrans","t","bind","createComponent","i18nKey","props","ns","ClaimTrans","ActivityStatus","NOT_START","IN_PROGRESS","ENDED","useRef","useCallback","useAsyncFn","useTheme","AirDropV2ABI","useChainContext","useContract","useAirdropClaimersConstants","ProviderType","ContractTransaction","formatEtherToWei","useCustomSnackbar","toFixed","useRemoteControlledDialog","Web3","useClaimAirdrop","chainId","eventIndex","callback","merkleProof","amount","tokenAddress","theme","account","providerType","globalChainId","CONTRACT_ADDRESS","airdropContract","setDialog","claimSuccessDialogEvent","showSnackbar","closeSnackbar","snackbarKeyRef","showSingletonSnackbar","title","options","current","WalletConnect","switchChain","tx","fillAll","methods","claim","from","gas","estimateGas","hash","sendTransaction","receipt","getTransactionReceipt","open","token","error","Error","message","includes","claim_tips","processing","variant","span","style","color","palette","maskColor","danger","cancel_claim_tips","memo","useState","useInterval","isAfter","format","isBefore","intervalToDuration","differenceInDays","ActionButton","ShadowRootTooltip","makeStyles","Box","Typography","alpha","useFungibleToken","useNetworkDescriptor","NetworkPluginID","ImageIcon","Icons","useStyles","badge","position","top","left","height","borderRadius","backgroundImage","URL","url","backgroundRepeat","paddingLeft","paddingRight","backgroundSize","content","marginTop","fontSize","fontWeight","lineHeight","white","timeTips","spacing","tips","actions","display","justifyContent","claimable","claimButton","background","publicMain","strong","AirDropActivityItem","startTime","endTime","isClaimed","isEligible","onClaimSuccess","classes","now","setNow","Date","networkDescriptor","PLUGIN_EVM","activityStatus","start_time_tips","values","time","components","className","duration","start","end","days","airdrop_in_progress_time_tips","String","hours","minutes","end_time_tips","tokenDetail","loading","handleClaim","icon","size","airdrop_title","symbol","no_account_tips","no_eligible_tips","claimed_tips","data","eligible_to_claim","onClick","disabled","endIcon","wallet_connect_tips","placement","Questions","expired","last","keccak256","MerkleTree","secondsToMilliseconds","Airdrop","isSameAddress","pack","useQuery","useAirDropActivity","queryKey","queryFn","result","getActivity","claimers","rest","claimerList","entries","claimer","find","address","airdropList","map","merkleTree","sortPairs","leaf","getHexProof","Number","LoadingBase","Alert","AlertTitle","ChainId","EmptyStatus","useToggle","padding","flexDirection","rowGap","minHeight","placeholder","alignItems","width","alert","bottom","right","zIndex","alertTitle","main","marginBottom","AirDropActivities","toggle","activity","isLoading","refetch","Arbitrum","severity","onClose","airdrop_alert","connect_wallet_airdrop_tips","no_activities_tips","displayName","InjectedDialog","PluginWalletStatusBar","DialogActions","DialogContent","ClaimDialog","__plugin_name","sx","requiredSupportPluginID","requiredSupportChainIds","ApplicationEntry","PluginID","ClaimEntry","claimDialogEvent","handleClick","MarketsClaim","Claim","usePortalShadowRoot","Dialog","DialogTitle","paper","margin","backgroundColor","modalTitleBg","close","congratulations","success","second","objectFit","ClaimSuccessDialog","onShare","share_text","Close","paddingTop","logoURL","claim_successfully_tips","fullWidth","isValidAddress","base","site","GlobalInjection","ClaimGlobalInjection","claimOpen","closeDialog","closeClaimDialog","setTokenAddress","setAmount","successOpen","closeSuccessDialog","ev","ApplicationEntries","RenderEntryComponent","ApplicationEntryID","appBoardSortingDefaultPriority","name","iconFilterColor","category","entryWalletConnectedNotRequired","useEffect","v4","uuid","event","onUpdateByRemote","tabType","HOOK_ID","setOpen","on","_ev","hookId","timer","onUpdateByLocal","timer_","clearTimeout","setTimeout","payload","sendToLocal","sendToVisiblePages","openDialog","defer","delay","Emitter","SingletonModal","constructor","abort","openAndWaitForClose","emitter","onOpen","onAbort","dispatchPeek","dispatchOpen","dispatchClose","dispatchAbort","register","creator","ref","emit","peek","console","warn","Promise","resolve","reject","SingletonModalQueued","opened","tasks","cleanup","push","d","length","shift","Link","useCopyToClipboard","useSharedTrans","copy","CopyButton","text","successText","scoped","cx","copyToClipboard","copied","setCopied","active","setActive","timerRef","handleCopy","stopPropagation","preventDefault","tooltipTitle","iconProps","disableInteractive","arrow","underline","component","root","Check","Copy","statusBox","children","iconSize","p","EmptySimple","filter","backdropFilter","img","src","toString","mainIcon","badgeIcon","border","badgeIconBorderColor","common","WalletIcon","badgeSize","div","Button","Sniffings","Action","openSelectWalletDialog","columnGap","minWidth","is_popup_page","wallet_status_button_change","MaskColorVar","useNetworkContext","useProviderDescriptor","useRecentTransactions","useWallet","useReverseAddress","useWeb3Others","NetworkContextProvider","RevokeChainContextProvider","TransactionStatusType","WalletDescription","SelectProviderModal","WalletStatusModal","boxSizing","is_dashboard_page","mainBackground","boxShadow","mode","flex","maxHeight","connection","marginRight","PluginWalletStatusBarWithoutContext","expectedPluginID","expectedChainId","wallet","providerDescriptor","expectedNetworkDescriptor","Others","openSelectProviderDialog","pendingTransactions","NOT_DEPEND","walletName","MaskWallet","formatAddress","Wallet","plugin_wallet_connect_a_wallet","pending","providerIcon","networkIcon","formattedAddress","addressLink","explorerResolver","onPendingClick","actualPluginID","cursor","description","marginLeft","gap","progress","linkIcon","verified","Verification","ArrowDrop","href","target","rel","LinkOut","e","recent_transaction_pending","WalletConnectQRCodeModal","WalletRiskWarningModal","ConnectWalletModal","LeavePageConfirmModal","ApplicationBoardModal","ApplicationBoardSettingsModal","GasSettingModal","TransactionConfirmModal","TransactionSnackbar","ConfirmModal","ConfirmDialog","SelectNonFungibleContractModal","SelectGasSettingsModal","AddCollectiblesModal","SelectFungibleTokenModal","PersonaSelectPanelModal","ShareSelectNetworkModal","ApplicationSettingTabs","LightColor","bg","primary","primaryContrastText","secondary","secondaryContrastText","input","primaryBackground","primaryBackground2","secondaryBackground","lightBackground","suspensionBackground","normalBackground","twitterBackground","twitterBackgroundHover","twitterInputBackground","twitterButton","twitterButtonText","twitterBlue","twitterBorderLine","twitterSecond","twitterMain","twitterBottom","twitterInfoBackground","twitterInfo","twitterBg","twitterTooltipBg","twitterInput","twitterLine","redMain","redLight","redContrastText","greenMain","greenLight","orangeMain","orangeLight","iconLight","divider","borderSecondary","textPrimary","textSecondary","secondaryInfoText","normalText","normalTextLight","infoBackground","warning","blue","textLink","lineLight","lineLighter","textLight","lightestBackground","linkText","twitter","facebook","errorBackground","tooltipBackground","warningBackground","cyberconnectPrimary","errorPlugin","buttonPluginBackground","textPluginColor","buttonPluginColor","DarkColor","kebabCase","getMaskColor","cssVar","defaultValue","x","assign","toPrimitive","enumerable","opacity","pointerEvents","disableElevation","animated","transform","animation","CircleLoading","forwardRef","keyframes","SnackbarProvider","useSnackbar","SnackbarContent","IconButton","CloseIcon","Warning","WarningIcon","Info","InfoIcon","PopupSnackbarProvider","usePopupCustomSnackbar","offsetY","classNames","spinningAnimationKeyFrames","wordBreak","outline","defaultVariant","info","flexWrap","default","spinning","action","closeButton","texts","IconMap","SuccessForSnackBar","TransactionFailed","CustomSnackbarContent","snackbar","loadingIcon","variantIcon","renderedAction","id","CustomSnackbarProvider","onDismiss","maxSnack","disableWindowBlurListener","anchorOrigin","vertical","horizontal","hideIconVariant","containerRoot","variantSuccess","variantError","variantInfo","variantWarning","domRoot","enqueueSnackbar","attemptUntil","useWeb3Hub","isNativeTokenAddress","useNetworks","fallbackToken","Hub","networks","enabled","network","nativeCurrency","getFungibleToken","getRegisteredWeb3Networks","expectedChainIdOrNetworkTypeOrID","networkType","ID","EMPTY_ARRAY","uniqBy","useSubscription","useWeb3State","uniqChainId","Network","list","isCustomized","getRegisteredWeb3Providers","expectedProviderTypeOrID","status","Transaction","transactions","_tx","candidates","indexId","domainOnly","NameService","reverse","useWallets","wallets","EMPTY_LIST","Providers","usePersistSubscription","subscription","w","createdAt","updatedAt","sort","a","b","owner","timestampA","getTime","timestampB","numA","split","numB","isNaN","HubAll","use","JSON","stringify","createContract","ABI","getWeb3","useContracts","listOfAddress","Boolean","utf8ToHex","types","i","slice","padStart","BigInt"],"sourceRoot":"","x_google_ignoreList":[27,28,41,42,43,44,45]}