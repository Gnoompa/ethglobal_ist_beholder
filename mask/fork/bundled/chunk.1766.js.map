{"version":3,"file":"bundled/chunk.1766.js","mappings":"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","sources":["webpack://mask-network/./packages/mask/popups/pages/Wallet/CreateWallet/index.tsx"],"sourcesContent":["import { memo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { first, sortBy } from 'lodash-es'\nimport { List, ListItem, ListItemIcon, ListItemText, Tooltip, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { PopupRoutes } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { useTitle } from '../../../hooks/index.js'\nimport { useWalletGroup } from '../../../hooks/useWalletGroup.js'\nimport { ImportCreateWallet } from '../components/ImportCreateWallet/index.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    content: {\n        padding: '16px',\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n    },\n    sectionTitle: {\n        fontSize: 14,\n        fontWeight: 700,\n        lineHeight: '18px',\n        marginBottom: theme.spacing(2),\n        color: theme.palette.maskColor.second,\n    },\n    groups: {\n        padding: 0,\n        marginBottom: theme.spacing(2),\n    },\n    group: {\n        boxShadow: theme.palette.maskColor.bottomBg,\n        padding: theme.spacing(1.5),\n        backdropFilter: 'blur(8px)',\n        borderRadius: 8,\n        cursor: 'pointer',\n        '&:not(:first-of-type)': {\n            marginTop: theme.spacing(2),\n        },\n    },\n    secondaryAction: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    groupIcon: {\n        marginRight: 0,\n        minWidth: 'auto',\n    },\n    groupText: {\n        margin: theme.spacing(0, 0, 0, 1),\n    },\n    groupName: {\n        fontSize: 12,\n        fontWeight: 700,\n        lineHeight: '16px',\n        color: theme.palette.maskColor.main,\n    },\n    walletCount: {\n        marginRight: theme.spacing(1),\n        fontSize: 12,\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        lineHeight: '16px',\n    },\n}))\n\nconst CreateWallet = memo(function CreateWallet() {\n    const t = useMaskSharedTrans()\n    const { classes, theme } = useStyles()\n    const navigate = useNavigate()\n\n    const walletGroup = useWalletGroup()\n    const groups = walletGroup?.groups ? Object.entries(walletGroup.groups) : []\n\n    useTitle(t.popups_add_wallet())\n\n    return (\n        <div className={classes.content}>\n            {groups.length ? (\n                <>\n                    <Typography className={classes.sectionTitle}>{t.add_new_address_to_an_existing_group()}</Typography>\n                    <List className={classes.groups}>\n                        {groups.map(([key, wallets], index) => {\n                            const theFirstWallet = first(sortBy(wallets, (w) => w.createdAt.getTime()))\n                            return (\n                                <ListItem\n                                    classes={{ secondaryAction: classes.secondaryAction }}\n                                    key={key}\n                                    className={classes.group}\n                                    onClick={() => {\n                                        navigate(PopupRoutes.DeriveWallet, {\n                                            state: {\n                                                mnemonicId: key,\n                                            },\n                                        })\n                                    }}>\n                                    <ListItemIcon className={classes.groupIcon}>\n                                        <Icons.MaskBlue size={24} color={theme.palette.maskColor.white} />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        className={classes.groupText}\n                                        secondary={\n                                            theFirstWallet?.address ? (\n                                                <Tooltip title={theFirstWallet?.address}>\n                                                    <Typography component=\"span\">\n                                                        {formatEthereumAddress(theFirstWallet?.address, 4)}\n                                                    </Typography>\n                                                </Tooltip>\n                                            ) : null\n                                        }>\n                                        <Typography className={classes.groupName}>\n                                            {t.popups_wallet_group_title({ index: String(index + 1) })}\n                                        </Typography>\n                                    </ListItemText>\n                                    <Typography className={classes.walletCount}>{wallets.length}</Typography>\n                                    <Icons.ArrowRight size={20} />\n                                </ListItem>\n                            )\n                        })}\n                    </List>\n                </>\n            ) : null}\n\n            <Typography className={classes.sectionTitle}>{t.or_create_a_new_wallet_group()}</Typography>\n            <ImportCreateWallet />\n        </div>\n    )\n})\n\nexport default CreateWallet\n"],"names":["memo","useNavigate","first","sortBy","List","ListItem","ListItemIcon","ListItemText","Tooltip","Typography","Icons","PopupRoutes","makeStyles","formatEthereumAddress","useTitle","useWalletGroup","ImportCreateWallet","useMaskSharedTrans","useStyles","theme","content","padding","flex","display","flexDirection","overflow","sectionTitle","fontSize","fontWeight","lineHeight","marginBottom","spacing","color","palette","maskColor","second","groups","group","boxShadow","bottomBg","backdropFilter","borderRadius","cursor","marginTop","secondaryAction","alignItems","justifyContent","groupIcon","marginRight","minWidth","groupText","margin","groupName","main","walletCount","CreateWallet","t","classes","navigate","walletGroup","Object","entries","popups_add_wallet","div","className","length","add_new_address_to_an_existing_group","map","key","wallets","index","theFirstWallet","w","createdAt","getTime","onClick","DeriveWallet","state","mnemonicId","MaskBlue","size","white","secondary","address","title","component","popups_wallet_group_title","String","ArrowRight","or_create_a_new_wallet_group"],"sourceRoot":"","x_google_ignoreList":[]}