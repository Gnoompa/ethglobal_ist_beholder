{"version":3,"file":"bundled/chunk.9548.js","mappings":"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","sources":["webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useSocialIdentity.ts","webpack://mask-network/./packages/plugin-infra/src/types.ts","webpack://mask-network/./packages/web3-hooks/base/src/useMountReport.ts","webpack://mask-network/./packages/plugins/Tips/src/contexts/TargetRuntimeContext.tsx","webpack://mask-network/./packages/plugins/Tips/src/storage/index.ts","webpack://mask-network/./packages/plugins/Tips/src/contexts/Tip/TipContext.ts","webpack://mask-network/./packages/plugins/Tips/src/contexts/Tip/useTipAccountsCompletion.ts","webpack://mask-network/./packages/plugins/Tips/src/contexts/Tip/useNftTip.ts","webpack://mask-network/./packages/plugins/Tips/src/contexts/Tip/useTokenTip.ts","webpack://mask-network/./packages/plugins/Tips/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/Tips/src/contexts/Tip/useRecipientValidate.ts","webpack://mask-network/./packages/plugins/Tips/src/contexts/Tip/useTipValidate.ts","webpack://mask-network/./packages/plugins/Tips/src/contexts/Tip/TipTaskProvider.tsx","webpack://mask-network/./packages/plugins/Tips/src/components/NFTSection/index.tsx","webpack://mask-network/./packages/plugins/Tips/src/components/NetworkSection/index.tsx","webpack://mask-network/./packages/plugins/Tips/src/components/RecipientSection/RecipientSelect.tsx","webpack://mask-network/./packages/plugins/Tips/src/components/RecipientSection/index.tsx","webpack://mask-network/./packages/plugins/Tips/src/components/TokenSection/useGasLimit.ts","webpack://mask-network/./packages/plugins/Tips/src/components/TokenSection/GasSettingsBar.tsx","webpack://mask-network/./packages/plugins/Tips/src/components/TokenSection/index.tsx","webpack://mask-network/./packages/plugins/Tips/src/components/TipDialog.tsx","webpack://mask-network/./packages/plugins/Tips/src/contexts/TipTaskManager.tsx","webpack://mask-network/./packages/shared/src/UI/components/PluginGuide/index.tsx","webpack://mask-network/./packages/plugins/Tips/src/SiteAdaptor/components/TipsRealmContent/index.tsx","webpack://mask-network/./packages/plugins/Tips/src/SiteAdaptor/index.tsx","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useSocialIdentityByUserId.ts","webpack://mask-network/./packages/plugins/Tips/src/hooks/useProfilePublicKey.ts","webpack://mask-network/./packages/plugins/Tips/src/components/TipsButton/useTipsAccounts.ts","webpack://mask-network/./packages/plugins/Tips/src/components/TipsButton/index.tsx","webpack://mask-network/./packages/plugins/Tips/src/messages.ts","webpack://mask-network/./packages/shared-base-ui/src/components/ErrorBoundary/context.tsx","webpack://mask-network/./packages/shared/src/UI/components/AccountIcons/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/CollectibleList/CollectibleCard.tsx","webpack://mask-network/./packages/shared/src/UI/components/CollectibleList/CollectibleItem.tsx","webpack://mask-network/./packages/shared/src/UI/components/CollectibleList/LoadingSkeleton.tsx","webpack://mask-network/./packages/shared/src/UI/components/CollectibleList/CollectibleList.tsx","webpack://mask-network/./packages/shared/src/UI/components/ElementAnchor/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/EmptyStatus/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/Linking.tsx","webpack://mask-network/./packages/shared/src/UI/components/LoadRetry/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/ReversedAddress/index.tsx","webpack://mask-network/./packages/theme/src/Components/Boundary/index.tsx","webpack://mask-network/./packages/theme/src/Components/Dialogs/DialogStack.tsx","webpack://mask-network/./packages/theme/src/Components/WrappedComponents/ShadowRootTooltip.ts","webpack://mask-network/./packages/theme/src/ShadowRoot/Portal.tsx","webpack://mask-network/./packages/theme/src/ShadowRoot/ShadowRootSetup.tsx","webpack://mask-network/./packages/theme/src/hooks/useBoundedPopperProps.ts","webpack://mask-network/./packages/web3-hooks/base/src/useAddressType.ts","webpack://mask-network/./packages/web3-hooks/base/src/useBlockedNonFungibleTokens.ts","webpack://mask-network/./packages/web3-hooks/base/src/useHiddenAddressConfig.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNonFungibleAssets.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNonFungibleTokenContract.ts","webpack://mask-network/./packages/web3-hooks/base/src/useSocialAddressesAll.ts","webpack://mask-network/./packages/web3-hooks/base/src/useSocialAccountsFrom.ts","webpack://mask-network/./packages/web3-hooks/base/src/useSocialAccountsAll.ts","webpack://mask-network/./node_modules/.pnpm/@mui+styled-engine@5.10.8_@emotion+react@11.11.1_@emotion+styled@11.11.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","webpack://mask-network/./node_modules/.pnpm/html-parse-stringify@3.0.1/node_modules/html-parse-stringify/dist/html-parse-stringify.module.js","webpack://mask-network/./node_modules/.pnpm/void-elements@3.1.0/node_modules/void-elements/index.js","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs"],"sourcesContent":["import { useEffect } from 'react'\nimport { MaskMessages } from '@masknet/shared-base'\nimport type { IdentityResolved } from '../types.js'\nimport { useQuery } from '@tanstack/react-query'\nimport { currentNextIDPlatform } from './context.js'\nimport { querySocialIdentity } from '../dom/context.js'\n\n/**\n * Get the social identity of the given identity\n */\nexport function useSocialIdentity(identity: IdentityResolved | null | undefined) {\n    const result = useQuery({\n        queryKey: ['next-id', identity, currentNextIDPlatform],\n        enabled: Boolean(identity && currentNextIDPlatform),\n        queryFn: async () => {\n            if (!currentNextIDPlatform || !identity) return null\n            return querySocialIdentity(currentNextIDPlatform, identity)\n        },\n        refetchOnWindowFocus: false,\n    })\n\n    useEffect(() => MaskMessages.events.ownProofChanged.on(() => result.refetch()), [result.refetch])\n\n    return result\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-qualifier */\n// https://github.com/typescript-eslint/typescript-eslint/issues/7192\nimport type React from 'react'\nimport type { Option, Result } from 'ts-results-es'\nimport type { Emitter } from '@servie/events'\n/* eslint @masknet/unicode-specific-set: [\"error\", { \"only\": \"code\" }] */\nimport type {\n    BindingProof,\n    ECKeyIdentifier,\n    NetworkPluginID,\n    PluginID,\n    ProfileIdentifier,\n    ScopedStorage,\n    SocialAccount,\n    SocialIdentity,\n    BooleanPreference,\n    EnhanceableSite,\n} from '@masknet/shared-base'\nimport type { TypedMessage } from '@masknet/typed-message'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { SearchResult } from '@masknet/web3-shared-base'\nimport type { CompositionType } from './entry-content-script.js'\n\nexport declare namespace Plugin {\n    /**\n     * A code loader interface of the plugin API.\n     *\n     * Plugin should be lazy-loaded. If a plugin is not enabled, it will not be loaded into the Mask.\n     *\n     * @example\n     * ```ts\n     * const loader = {\n     *     load: () => import('./code'),\n     *     hotModuleReload: hot => import.meta.webpackHot && import.meta.webpackHot.accept('./code', () => hot(import('./code')))\n     * }\n     * ```\n     *\n     * The `./code` should use `export default` to export what loader expects.\n     */\n    export interface Loader<DeferredModule> {\n        /**\n         * The `load()` function will be called on demand.\n         *\n         * It should not have side effects (e.g. start some daemon, start a new HTTP request or WebSocket client),\n         * those work should be in the `.init()` function.\n         * @returns the actual definition of this plugin\n         * @example load: () => import('./path')\n         */\n        load(): Promise<{\n            default: DeferredModule\n        }>\n\n        /**\n         * This provides the functionality for hot module reload on the plugin.\n         * When the callback is called, the old instance of the plugin will be unloaded, then the new instance will be init.\n         * @example hotModuleReload: hot => import.meta.webpackHot && import.meta.webpackHot.accept('./path', () => hot(import('./path')))\n         */\n        hotModuleReload(\n            onHot: (\n                hot: Promise<{\n                    default: DeferredModule\n                }>,\n            ) => void,\n        ): void\n    }\n\n    /**\n     * DeferredDefinition should not contain any functionality of the plugin expects the loader.\n     * If the plugin is not providing some of the functionality, please can omit that field.\n     */\n    export interface DeferredDefinition extends Shared.Definition {\n        /** Load the Site Adaptor part of the plugin. */\n        SiteAdaptor?: Loader<SiteAdaptor.Definition>\n        /** Load the extension page part of the plugin. */\n        ExtensionPage?: Loader<ExtensionPage.Definition>\n        /** Load the Worker part of the plugin. */\n        Worker?: Loader<Worker.Definition>\n    }\n}\n/**\n * Basic knowledge of the plugin (ID, name, publisher, ...).\n */\nexport namespace Plugin.Shared {\n    export interface SharedContext {\n        /**\n         * A lightweight K/V storage used to store some simple data.\n         */\n        createKVStorage<T extends object>(type: 'memory' | 'persistent', defaultValues: T): ScopedStorage<T>\n    }\n\n    export interface SharedUIContext extends SharedContext {\n        setMinimalMode(enabled: boolean): void\n    }\n\n    export interface Definition {\n        /**\n         * ID of the plugin. It should be unique.\n         * @example \"com.mask.wallet\"\n         */\n        ID: PluginID\n        /**\n         * The human readable name of the plugin.\n         * @example { i18nKey: \"name\", fallback: \"Never gonna give you up\" }\n         */\n        name: I18NStringField\n        /**\n         * A brief description of this plugin.\n         * @example { i18nKey: \"description\", fallback: \"This plugin is going to replace every link in the page to https://www.youtube.com/watch?v=dQw4w9WgXcQ\" }\n         */\n        description?: I18NStringField\n        /**\n         * Publisher of this plugin.\n         * @example { link: \"https://github.com/Dimensiondev\", name: { fallback: \"Mask Network\", i18nKey: \"org_name\" } }\n         */\n        publisher?: Publisher\n        /**\n         * Configuration of what environment that this plugin expects to run in.\n         */\n        enableRequirement: EnableRequirement\n        /**\n         * Is this plugin marked as \"experimental\"?\n         *\n         * If the enableRequirement.target is not \"stable\", it will be treated as true.\n         *\n         * This does not affect if the plugin enable or not.\n         */\n        experimentalMark?: boolean\n        /**\n         * If the plugin is in the minimal mode by default.\n         */\n        inMinimalModeByDefault?: boolean\n        /** i18n resources of this plugin */\n        i18n?: I18NResource\n        /**\n         * Declare what this plugin provides.\n         *\n         * Declare this field properly so Mask Network can suggest your plugin when needed.\n         */\n        contribution?: Contribution\n        /** Declare ability this plugin supported. */\n        ability?: Ability\n    }\n\n    /**\n     * This part is shared between ExtensionPage, Site Adaptor and Worker part\n     * which you should include the information above in those three parts.\n     */\n    export interface DefinitionDeferred<Context extends SharedContext = SharedContext> extends Definition, Utilities {\n        /**\n         * This function is called when the plugin is initialized.\n         *\n         * The plugin must clean up all side effects it creates when the `AbortSignal` provided aborts\n         * to make sure the plugin can be reloaded safely.\n         */\n        init?(signal: AbortSignal, context: Context): void | Promise<void>\n    }\n\n    export interface Utilities {}\n\n    /** The publisher of the plugin */\n    export interface Publisher {\n        /** The name of the publisher */\n        name: I18NStringField\n        /** URL of the publisher */\n        link: string\n    }\n\n    /** For what stage the plugin should be included in the Mask. */\n    export type ReleaseStages = 'stable' | 'beta' | 'insider'\n\n    /**\n     * The condition that expected to start the plugin.\n     *\n     * If the condition changes and becomes invalid, the plugin will be unloaded.\n     */\n    export interface EnableRequirement {\n        target: ReleaseStages\n        /** The website this plugin supports. */\n        supports: SupportedSitesDeclare\n        /** The Web3 Network this plugin supports */\n        web3?: Partial<\n            Record<\n                NetworkPluginID,\n                {\n                    supportedChainIds?: number[]\n                }\n            >\n        >\n        /**\n         * Requested origins.\n         * Only put necessary permissions here.\n         * https://developer.chrome.com/docs/extensions/mv3/match_patterns/\n         */\n        host_permissions?: string[]\n    }\n\n    export interface SupportedSitesDeclare {\n        /**\n         * opt-in means the listed site is supported.\n         * out-out means the listed site is not supported.\n         */\n        type: 'opt-in' | 'opt-out'\n        sites: Partial<Record<EnhanceableSite, boolean>>\n    }\n\n    export type I18NLanguage = string\n    export type I18NKey = string\n    export type I18NValue = string\n    export type I18NResource = Record<I18NLanguage, Record<I18NKey, I18NValue>>\n\n    export interface Contribution {\n        /** This plugin can recognize and react to the following metadata keys. */\n        metadataKeys?: ReadonlySet<string>\n        /** This plugin can recognize and enhance the post that matches the following matchers. */\n        postContent?: ReadonlySet<RegExp | string>\n    }\n    export interface Ability {}\n}\n\n/** This part runs in the Site Adaptor */\nexport namespace Plugin.SiteAdaptor {\n    export interface SiteAdaptorContext extends Shared.SharedUIContext {}\n\n    export interface Definition extends GeneralUI.Definition, Shared.DefinitionDeferred<SiteAdaptorContext> {\n        /** This UI will be rendered for each post found. */\n        PostInspector?: InjectUI<{}>\n        /** This UI will be rendered for action of each post found. */\n        PostActions?: InjectUI<{}>\n        /** This UI will be rendered for each decrypted post. */\n        DecryptedInspector?: InjectUI<{\n            message: TypedMessage\n        }>\n        /** This UI will be rendered into the global scope of the site. */\n        GlobalInjection?: InjectUI<{}>\n        /** This UI will be rendered under the Search result of the site */\n        SearchResultInspector?: SearchResultInspector\n        /** This UI will be rendered under the Search result of the site. */\n        SearchResultTabs?: SearchResultTab[]\n        /** This UI will be an entry to the plugin in the Composition dialog of Mask. */\n        readonly CompositionDialogEntry?: CompositionDialogEntry\n        /** This UI will be use when there is known badges. */\n        CompositionDialogMetadataBadgeRender?: CompositionMetadataBadgeRender\n        /** This UI will be rendered as an entry in the wallet status dialog */\n        ApplicationEntries?: ApplicationEntry[]\n        /** This UI will be rendered as tabs on the profile page */\n        ProfileTabs?: ProfileTab[]\n        /** This UI will be rendered as tabs on the profile card */\n        ProfileCardTabs?: ProfileTab[]\n        /** This UI will be rendered as cover on the profile page */\n        ProfileCover?: ProfileCover[]\n        /** This UI will be rendered as tab on the setting dialog */\n        SettingTabs?: SettingTab[]\n        /** This UI will be rendered components on the avatar realm */\n        AvatarRealm?: AvatarRealm\n        /** This UI will be shared across plugins */\n        Widgets?: Widget[]\n        // Widgets?: {\n        //     [key in keyof WidgetRegistry]: Widget<WidgetRegistry[key]>\n        // }\n        /** This UI will be rendered components on the tips realm */\n        TipsRealm?: TipsRealm\n        /** This UI will be rendered components on the tips realm */\n        Lens?: LensWidget\n        /** This UI will be rendered as plugin wrapper page */\n        wrapperProps?: PluginWrapperProps\n        /**\n         * A hook for if this plugin can enhance the #hash or $cash tag.\n         */\n        enhanceTag?: {\n            onClick?: (kind: 'cash' | 'hash', content: string, event: React.MouseEvent<HTMLAnchorElement>) => void\n            onHover?: (kind: 'cash' | 'hash', content: string, event: React.MouseEvent<HTMLAnchorElement>) => () => void\n        }\n    }\n\n    // #region Composition entry\n    /**\n     * The entry has two type:\n     *\n     * - Dialog type: This type is very common so it is supported as first class citizen.\n     * - Custom type: Fallback choice if the dialog type cannot do what you want to do.\n     */\n    export type CompositionDialogEntry = CompositionDialogEntryCustom | CompositionDialogEntryDialog\n\n    export interface CompositionDialogEntryCustom {\n        /**\n         * A label that will be rendered in the CompositionDialog as a chip.\n         * @example {fallback: \"🧧 Red Packet\"}\n         */\n        label: I18NFieldOrReactNode\n\n        /** This callback will be called when the user clicked on the chip. */\n        onClick(options: { compositionType: CompositionType; metadata: ReadonlyMap<string, unknown> | undefined }): void\n    }\n\n    export interface CompositionDialogEntryDialog {\n        /**\n         * A label that will be rendered in the CompositionDialog as a chip.\n         * @example {fallback: \"🧧 Red Packet\"}\n         */\n        label: I18NFieldOrReactNode\n        /** A React dialog component that receives `open` and `onClose`. The dialog will be opened when the chip clicked. */\n        dialog: React.ComponentType<CompositionDialogEntry_DialogProps>\n        /**\n         * If this option is true, the dialog will be always mounted even if the dialog is not opening.\n         *\n         * @default false\n         */\n        keepMounted?: boolean\n    }\n\n    export interface CompositionDialogEntry_DialogProps {\n        open: boolean\n\n        onClose(): void\n\n        isOpenFromApplicationBoard?: boolean\n    }\n\n    export type CompositionMetadataBadgeRender =\n        | CompositionMetadataBadgeRenderStatic\n        | CompositionMetadataBadgeRenderDynamic\n    export type CompositionMetadataBadgeRenderStatic = ReadonlyMap<string, CompositionMetadataBadgeRenderStaticMapper>\n    export type CompositionMetadataBadgeRenderStaticMapper<T = any> = (metadata: T) => string | BadgeDescriptor | null\n    export type CompositionMetadataBadgeRenderDynamic = (\n        key: string,\n        metadata: unknown,\n    ) => string | BadgeDescriptor | null\n\n    export interface BadgeDescriptor {\n        text: string | React.ReactNode\n        tooltip?: React.ReactNode\n    }\n\n    // #endregion\n\n    export interface ApplicationEntry {\n        /**\n         * The contrast between ApplicationEntryID and PluginID is that one plugin may contains multiple entries.\n         */\n        ApplicationEntryID: string\n        /**\n         * Render entry component\n         */\n        RenderEntryComponent?: (props: {\n            disabled: boolean\n            tooltipHint?: string\n            onClick?: (walletConnectedCallback?: () => void, requiredSupportPluginID?: NetworkPluginID) => void\n        }) => JSX.Element | null\n        /**\n         * Used to order the applications on the board\n         */\n        appBoardSortingDefaultPriority?: number\n\n        /**\n         * Used to order the applications on the market list\n         */\n        marketListSortingPriority?: number\n\n        icon: React.ReactNode\n\n        name: I18NFieldOrReactNode\n\n        description?: I18NFieldOrReactNode\n\n        iconFilterColor?: string\n\n        tutorialLink?: string\n        /**\n         * Does the application listed in the DAPP list\n         */\n        category?: 'dapp' | 'other'\n\n        nextIdRequired?: boolean\n        /**\n         * One plugin may has multiple part. E.g. Tips requires connected wallet, but Tips setting not.\n         */\n        entryWalletConnectedNotRequired?: boolean\n\n        /**\n         * Display using an eye-catching card and unable to be unlisted.\n         */\n        recommendFeature?: {\n            description: React.ReactNode\n            backgroundGradient: string\n            isFirst?: boolean\n        }\n        features?: Array<{\n            name: I18NFieldOrReactNode\n            description: I18NFieldOrReactNode\n        }>\n\n        hiddenInList?: boolean\n    }\n\n    export interface PluginWrapperProps {\n        icon?: React.ReactNode\n        title?: string | React.ReactNode\n        backgroundGradient?: string\n        borderRadius?: string\n        margin?: string\n    }\n\n    export interface SearchResultInspector {\n        ID: string\n        /**\n         * The injected UI\n         */\n        UI?: {\n            /** The brief content above detailed tabs. */\n            Content?: InjectUI<{\n                resultList: Array<SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>>\n                currentResult: SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>\n                isProfilePage?: boolean\n                identity?: SocialIdentity | null\n            }>\n        }\n        Utils?: {\n            shouldDisplay?(result: SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>): boolean\n        }\n    }\n\n    export interface SearchResultTab {\n        ID: string\n\n        /**\n         * The name of the slider card\n         */\n        label: I18NStringField | string\n        /**\n         * Used to order the sliders\n         */\n        priority: number\n        /**\n         * The injected UI\n         */\n        UI?: {\n            /**\n             * The injected tab content\n             */\n            TabContent: InjectUI<{\n                result: SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>\n            }>\n        }\n        Utils?: {\n            shouldDisplay?(result: SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>): boolean\n        }\n    }\n\n    export interface SearchResultContent {\n        ID: string\n        UI?: {\n            Content?: React.ForwardRefExoticComponent<{ keyword: string } & React.RefAttributes<unknown>>\n        }\n    }\n\n    export enum AvatarRealmSourceType {\n        ProfilePage = 'ProfilePage',\n        ProfileCard = 'ProfileCard',\n        Post = 'Post',\n        Editor = 'Editor',\n        Menu = 'Menu',\n        Suggestion = 'Suggestion',\n    }\n\n    export interface AvatarRealm {\n        ID: string\n        priority: number\n        label: I18NStringField | string\n        UI?: {\n            /**\n             * The injected avatar decorator component\n             */\n            Decorator: InjectUI<{\n                identity?: SocialIdentity | null\n                userId?: string\n                persona?: string\n                socialAccounts?: Array<SocialAccount<Web3Helper.ChainIdAll>>\n            }>\n            /**\n             * The injected avatar settings button component\n             */\n            Settings?: InjectUI<{\n                identity?: SocialIdentity\n                persona?: string\n                socialAccounts?: Array<SocialAccount<Web3Helper.ChainIdAll>>\n            }>\n        }\n        Utils?: {\n            /**\n             * If it returns false, this cover will not be displayed.\n             */\n            shouldDisplay?(\n                identity?: SocialIdentity | null,\n                socialAccounts?: Array<SocialAccount<Web3Helper.ChainIdAll>>,\n                sourceType?: AvatarRealmSourceType,\n            ): boolean\n        }\n    }\n\n    export enum TipsSlot {\n        FollowButton = 'follow',\n        Post = 'post',\n        Profile = 'profile',\n        MirrorMenu = 'mirror-menu',\n        MirrorEntry = 'mirror-entry',\n        MirrorProfile = 'mirror-profile',\n        MirrorVerification = 'mirror-verification',\n    }\n\n    export interface TipsRealmOptions {\n        identity?: ProfileIdentifier\n        slot: TipsSlot\n        accounts?: Array<SocialAccount<Web3Helper.ChainIdAll>>\n        iconSize?: number\n        buttonSize?: number\n\n        onStatusUpdate?(disabled: boolean): void\n    }\n\n    export interface TipsRealm {\n        ID: string\n        priority: number\n        UI?: {\n            /**\n             * The injected Tips Content component\n             */\n            Content: InjectUI<TipsRealmOptions>\n        }\n    }\n\n    export enum LensSlot {\n        ProfileName = 'profile-name',\n        Post = 'post',\n        Sidebar = 'sidebar',\n    }\n\n    export interface LensOptions {\n        identity?: ProfileIdentifier\n        slot: LensSlot\n        accounts?: Array<SocialAccount<Web3Helper.ChainIdAll>>\n        /** To update enabled/disabled status */\n        onStatusUpdate?(disabled: boolean): void\n    }\n\n    export interface LensWidget {\n        ID: string\n        UI?: {\n            /**\n             * The injected Lens Content component\n             */\n            Content: InjectUI<LensOptions>\n        }\n    }\n\n    export interface ProfileSlider {\n        ID: string\n\n        /**\n         * The name of the slider card\n         */\n        label: I18NStringField | string\n        /**\n         * Used to order the sliders\n         */\n        priority: number\n        /**\n         * The injected UI\n         */\n        children: InjectUI<{}>\n    }\n\n    export interface ProfileTab {\n        ID: string\n\n        /**\n         * The name of the tab\n         */\n        label: I18NStringField | string\n\n        /**\n         * Used to order the sliders\n         */\n        priority: number\n\n        UI?: {\n            /**\n             * The injected tab content\n             */\n            TabContent: InjectUI<{\n                identity?: SocialIdentity | null\n                socialAccount?: SocialAccount<Web3Helper.ChainIdAll>\n            }>\n        }\n        Utils?: {\n            /**\n             * If it returns false, this tab will not be displayed.\n             */\n            shouldDisplay?(\n                identity?: SocialIdentity | null,\n                socialAccount?: SocialAccount<Web3Helper.ChainIdAll>,\n            ): boolean\n            /**\n             * Filter social address.\n             */\n            filter?: (x: SocialAccount<Web3Helper.ChainIdAll>) => boolean\n            /**\n             * Sort social address in expected order.\n             */\n            sorter?: (a: SocialAccount<Web3Helper.ChainIdAll>, z: SocialAccount<Web3Helper.ChainIdAll>) => number\n        }\n    }\n\n    export interface ProfileCover {\n        ID: string\n\n        /**\n         * The name of the cover\n         */\n        label: I18NStringField | string\n\n        /**\n         * Used to order the sliders\n         */\n        priority: number\n\n        UI?: {\n            /**\n             * The injected cover component\n             */\n            Cover: InjectUI<{\n                identity?: SocialIdentity\n                socialAccounts?: SocialAccount<Web3Helper.ChainIdAll>\n            }>\n        }\n        Utils: {\n            /**\n             * If it returns false, this cover will not be displayed\n             */\n            shouldDisplay?(identity?: SocialIdentity, socialAccount?: SocialAccount<Web3Helper.ChainIdAll>): boolean\n            /**\n             * Filter social account\n             */\n            filterSocialAccount?(x: SocialAccount<Web3Helper.ChainIdAll>): boolean\n            /**\n             * Sort social account in expected order\n             */\n            sortSocialAccount?(a: SocialAccount<Web3Helper.ChainIdAll>, z: SocialAccount<Web3Helper.ChainIdAll>): number\n        }\n    }\n\n    export interface SettingsTabUIProps {\n        onClose: () => void\n        bindingWallets?: BindingProof[]\n        currentPersona?: ECKeyIdentifier\n        pluginID: PluginID\n    }\n\n    export interface SettingTab {\n        ID: PluginID\n        /**\n         * The name of setting tab\n         */\n        label: I18NStringField | string\n\n        /**\n         * Used to order the tabs\n         */\n        priority: number\n\n        UI?: {\n            TabContent: InjectUI<SettingsTabUIProps>\n        }\n    }\n\n    /** Contribute a widget to other plugins. */\n    export interface Widget {\n        ID: string\n\n        name: keyof WidgetRegistry\n\n        label: I18NStringField | string\n\n        UI?: {\n            Widget: InjectUI<{}>\n        }\n    }\n\n    export interface WidgetRegistry {\n        example: {}\n    }\n}\n\n/** This part runs in the Popup */\nexport namespace Plugin.ExtensionPage {\n    export interface ExtensionPageContext extends Shared.SharedUIContext {}\n\n    // As you can see we currently don't have so much use case for an API here.\n    export interface Definition extends GeneralUI.Definition, Shared.DefinitionDeferred<ExtensionPageContext> {\n        /** Plugin DO NOT need to define this. This will be auto set by the plugin host. */\n        __general_ui__?: GeneralUI.Definition\n    }\n}\n\n/** This part runs in the background page */\nexport namespace Plugin.Worker {\n    export interface WorkerContext extends Shared.SharedContext {\n        getDatabaseStorage<T extends IndexableTaggedUnion>(): DatabaseStorage<T>\n        /**\n         * Start the background service.\n         * @param impl Implementation of the RPC\n         */\n        startService(impl: object): void\n        /**\n         * Start the background generator service.\n         * @param impl Implementation of the RPC\n         */\n        startGeneratorService(impl: object): void\n    }\n\n    export interface Definition extends Shared.DefinitionDeferred<WorkerContext> {\n        backup?: BackupHandler\n    }\n\n    export interface BackupHandler {\n        /**\n         * This function will be called when user try to generate a new backup.\n         * The return value will contribute to the backup file.\n         *\n         * If it returns a None, it will not contributes to the backup file.\n         *\n         * If it returns a Some<T>, T will be serialized by JSON.stringify and added into the backup file.\n         */\n        onBackup(): Promise<Option<unknown>>\n\n        /**\n         * This function will be called when the user try to restore a backup file,\n         * and there is some data associated with this plugin.\n         *\n         * @param data The serialized backup content previously returned by `onBackup`.\n         * You MUST treat the data as untrustful content because it can be modified by the user.\n         */\n        onRestore(data: unknown): Promise<Result<void, Error>>\n    }\n\n    /**\n     * @typeParameter Data It should be a [tagged union](https://en.wikipedia.org/wiki/Tagged_union) with an extra `id` field\n     * @example\n     *\n     * type File = { type: 'file'; name: string; id: string }\n     * type Folder = { type: 'folder'; file: string[]; id: string }\n     * const Storage: Plugin.Worker.Storage<File | Folder> = context.storage\n     * const file: File = { type: 'file', name: 'file.txt', id: uuid() }\n     * const folder: Folder = { type: 'folder', file: [file.id], id: uuid() }\n     * // Add new data\n     * await Storage.add(file)\n     * await Storage.add(folder)\n     * // Remove\n     * await Storage.remove('file', file.id)\n     * // Query\n     * const result: File | undefined = await Storage.get('file', file.id)\n     * const has: boolean = await Storage.has('file', file.id)\n     * // iterate\n     * for await (const { value } of Storage.iterate('file')) {\n     *     // read only during the for...await loop\n     *     // !! NO: await Storage.remove('file', file.id)\n     *     console.log(value.name)\n     * }\n     * for await (const cursor of Storage.iterate_mutate('folder')) {\n     *     cursor.value // Folder\n     *     await cursor.update({ ...cursor.value, file: [] })\n     *     await cursor.delete()\n     * }\n     */\n    export interface DatabaseStorage<Data extends IndexableTaggedUnion = IndexableTaggedUnion> {\n        /**\n         * Query an object from the database\n         * @param type \"type\" field on the object\n         * @param id \"id\" field on the object\n         */\n        get<T extends Data['type']>(\n            type: T,\n            id: Data['id'],\n        ): Promise<\n            | (Data & {\n                  type: T\n              })\n            | undefined\n        >\n\n        has<T extends Data['type']>(type: T, id: Data['id']): Promise<boolean>\n\n        /**\n         * Store a data into the database.\n         * @param data Must be an object with \"type\" and \"id\"\n         */\n        add(data: Data): Promise<void>\n\n        /**\n         * Remove an object from the database\n         * @param type \"type\" field on the object\n         * @param id \"id\" field on the object\n         */\n        remove<T extends Data['type']>(type: T, id: Data['id']): Promise<void>\n\n        /**\n         * Iterate over the database of given type (readonly!)\n         *\n         * !!! During the iterate, you MUST NOT do anything that writes to the store (use iterate_mutate instead)\n         *\n         * !!! You MUST NOT do anything asynchronous before the iterate ends\n         *\n         * !!! Otherwise the transaction will be inactivate\n         * @param type \"type\" field on the object\n         */\n        iterate<T extends Data['type']>(type: T): AsyncIterableIterator<StorageReadonlyCursor<Data, T>>\n\n        /**\n         * Iterate over the database of given type (read-write).\n         *\n         * !!! You MUST NOT do anything asynchronous before the iterate ends\n         *\n         * !!! Otherwise the transaction will be inactivate\n         * @param type \"type\" field on the object\n         */\n        iterate_mutate<T extends Data['type']>(type: T): AsyncIterableIterator<StorageMutableCursor<Data, T>>\n    }\n\n    export interface StorageReadonlyCursor<Data extends IndexableTaggedUnion, T extends Data['type']> {\n        value: Data & {\n            type: T\n        }\n    }\n\n    export interface StorageMutableCursor<Data extends IndexableTaggedUnion, T extends Data['type']>\n        extends StorageReadonlyCursor<Data, T> {\n        delete: () => Promise<void>\n        update: (\n            data: Data & {\n                type: T\n            },\n        ) => Promise<void>\n    }\n}\n\n/** This part defines the plugin part that does not context aware. */\nexport namespace Plugin.GeneralUI {\n    export interface Definition {\n        /** This UI will be injected into the global scope of the target page. */\n        GlobalInjection?: InjectUI<{}>\n        /**\n         * Render metadata in many different environments.\n         *\n         * 1. Environment\n         *\n         * The render component MUST NOT assume they are running in a specific environment (e.g. Site Adaptor).\n         * Plugin messages and RPC MAY NOT working.\n         *\n         * It MUST NOT assume the environment using the `context` props.\n         * ALL actions MUST BE DONE with the given props.\n         *\n         * Here is some example of *possible* environments.\n         * - inside site adaptor, given \"composition\" context, running in the CompositionDialog.\n         * - inside site adaptor, given \"post\" context,        running in the DecryptedPost.\n         * - inside Popups,       given \"post\" context,        running in the PostInspector (Isolated mode).\n         * - on mask.io,          given \"post\" context,        allowing preview the message without extension installed.\n         *\n         * 2. Contexts\n         *\n         * The render component might be used in many different contexts.\n         *\n         * - \"composition\" context, the render should be editable, but not interactive (e.g. allow vote).\n         * - \"post\" context, the render should be readonly, but interactive.\n         *\n         * 3. Actions\n         *\n         * The render component MUST BE a ForwardRefExotic React Component\n         * that support operations defined in `Plugin.ContextFree.MetadataRender.RenderActions`\n         */\n        metadataRender?: MetadataRender.StaticRender | MetadataRender.DynamicRender\n    }\n\n    export namespace MetadataRender {\n        export type MetadataReader<T> = (meta: TypedMessage['meta']) => Result<T, unknown>\n        // #region Static render\n        // new Map([ [reader, react component] ])\n        export type StaticRender<T = any> = ReadonlyMap<MetadataReader<T>, StaticRenderComponent<T>>\n        export type StaticRenderComponent<T> = Omit<React.ForwardRefExoticComponent<StaticRenderProps<T>>, 'propTypes'>\n        export type StaticRenderProps<T> = Context<T> &\n            React.RefAttributes<RenderActions<T>> & {\n                metadata: T\n            }\n        // #endregion\n        // #region DynamicRender\n        export type DynamicRender = Omit<React.ForwardRefExoticComponent<DynamicRenderProps>, 'propTypes'>\n        export type DynamicRenderProps = Context<unknown> &\n            React.RefAttributes<RenderActions<unknown>> & {\n                metadata: TypedMessage['meta']\n            }\n        // #endregion\n        export type RenderActions<T> = {\n            /**\n             * This action make the render into the edit state.\n             * It should report the result via onEditComplete() props.\n             *\n             * If this action does not exist, it will be rendered as non-editable.\n             */\n            edit?(): void\n            /**\n             * This action make the render quit the edit state.\n             * If save is true, the render MUST report the new result via onEditComplete.\n             *\n             * If this action does not exist, the render should handle the save/cancel by themselves.\n             */\n            quitEdit?(save: boolean): void\n        }\n        export type Context<T> = CompositionContext<T> | DecryptedPostContext\n\n        /** This metadata render is called in a composition preview context. */\n        export interface CompositionContext<T> {\n            context: 'composition'\n\n            /**\n             * When edit() is called, this component should go into to editable state.\n             * If the edit completes, the new metadata will be used to replace the old one.\n             */\n            onEditComplete(metaKey: string, replaceMeta: T): void\n        }\n\n        /**\n         * This metadata render is called in the decrypted post.\n         */\n        export interface DecryptedPostContext {\n            context: 'post'\n        }\n    }\n}\n\n// Helper types\nexport namespace Plugin {\n    /**\n     * Injected UI. There're two kinds\n     * - InjectUIReact: Optimized for React component.\n     * - InjectUIRaw: The fallback choice if a React component doesn't apply here.\n     */\n    export type InjectUI<Props> = InjectUIRaw<Props> | InjectUIReact<Props>\n    /**\n     *\n     * @example\n     * ```ts\n     * const ui = {\n     *      type: 'raw' as const,\n     *      init(signal, dom) {\n     *          return props => dom.textContent = toString(props)\n     *      }\n     * }\n     * ```\n     */\n    export type InjectUIRaw<Props> = {\n        type: 'raw'\n        /**\n         * The raw version of the inject UI.\n         * @param signal The AbortSignal. You should undo side effects when the signal aborts.\n         * @param mountingPoint The mounting DOM\n         * @returns A function that will be called each time if the `props` has changed\n         */\n        init(signal: AbortSignal, mountingPoint: HTMLDivElement): (props: Props) => void\n    }\n    export type InjectUIReact<Props> = React.ComponentType<Props>\n}\n\nexport type IndexableTaggedUnion = {\n    type: string | number\n    id: string | number\n}\n\nexport interface I18NStringField {\n    /** The i18n key of the string content. */\n    i18nKey?: string\n    /** The fallback content to display if there is no i18n string found. */\n    fallback: string\n}\n\nexport type I18NFieldOrReactNode = I18NStringField | React.ReactNode\n\nexport interface IdentityResolved {\n    nickname?: string\n    avatar?: string\n    bio?: string\n    homepage?: string\n    identifier?: ProfileIdentifier\n    isOwner?: boolean\n}\n\n/**\n * This namespace is not related to the plugin authors\n */\n// ---------------------------------------------------\nexport namespace Plugin.__Host {\n    export interface Host<Definition, Context> {\n        /**\n         * Control if the plugin is in the minimal mode.\n         *\n         * If it is in the minimal mode, it will be omitted in some cases.\n         */\n        minimalMode: EnabledStatusReporter\n\n        addI18NResource(pluginID: string, resources: Shared.I18NResource): void\n\n        createContext(id: string, definition: Definition, signal: AbortSignal): Context\n\n        signal?: AbortSignal\n        permission: PermissionReporter\n    }\n\n    export interface WorkerContext extends Omit<Worker.WorkerContext, 'startService' | 'startGeneratorService'> {}\n    export interface PermissionReporter {\n        hasPermission(host_permission: string[]): Promise<boolean>\n\n        events: Emitter<{ changed: [] }>\n    }\n\n    export interface EnabledStatusReporter {\n        isEnabled(id: string): BooleanPreference | Promise<BooleanPreference>\n\n        events: Emitter<{\n            enabled: [id: string]\n            disabled: [id: string]\n        }>\n    }\n}\n","import { useMount } from 'react-use'\nimport { type Unresolved, resolve } from '@masknet/shared-base'\nimport { type EventID, EventType } from '@masknet/web3-telemetry/types'\nimport { Telemetry } from '@masknet/web3-telemetry'\n\n/**\n * Log an access event\n */\nexport function useMountReport(eventID: Unresolved<EventID>) {\n    useMount(() => {\n        Telemetry.captureEvent(EventType.Access, resolve(eventID))\n    })\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport {\n    useAccount,\n    useChainContext,\n    useDefaultChainId,\n    useNetworkContext,\n    Web3ContextProvider,\n} from '@masknet/web3-hooks-base'\nimport { type PropsWithChildren, useCallback, useState, useMemo } from 'react'\nimport { createContainer } from 'unstated-next'\n\nfunction useTargetRuntime(initPluginID?: NetworkPluginID) {\n    const { pluginID } = useNetworkContext()\n    const [targetPluginID, setTargetPluginID] = useState<NetworkPluginID>(initPluginID ?? pluginID)\n\n    const [chainIdMap, setChainIdMap] = useState<Partial<Record<NetworkPluginID, number>>>({})\n\n    const { chainId } = useChainContext()\n    const defaultChainId = useDefaultChainId(targetPluginID)\n    const fallbackChainId = targetPluginID === pluginID ? chainId : defaultChainId\n    const targetChainId = chainIdMap[targetPluginID] ?? fallbackChainId\n    const setTargetChainId = useCallback(\n        (id: number) => {\n            setChainIdMap((map) => ({ ...map, [targetPluginID]: id }))\n        },\n        [targetPluginID],\n    )\n\n    return {\n        targetPluginID,\n        setTargetPluginID,\n        targetChainId,\n        setTargetChainId,\n    }\n}\n\nexport const TargetRuntimeContext = createContainer(useTargetRuntime)\nTargetRuntimeContext.Provider.displayName = 'TargetRuntimeContextProvider'\n\n/**\n * A Tips scoped chain runtime, which controls Web3ContextProvider value\n */\nexport function ChainRuntime({ children }: PropsWithChildren<{}>) {\n    const { targetPluginID, targetChainId } = TargetRuntimeContext.useContainer()\n    const account = useAccount(targetPluginID)\n\n    const context = useMemo(() => {\n        return {\n            pluginID: targetPluginID,\n            chainId: targetChainId,\n            account,\n            controlled: true,\n        }\n    }, [targetPluginID, targetChainId, account])\n\n    return <Web3ContextProvider value={context}>{children}</Web3ContextProvider>\n}\n","import type { ScopedStorage, EnhanceableSite } from '@masknet/shared-base'\nimport { type NonFungibleToken } from '@masknet/web3-shared-base'\nimport type { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { useSubscription } from 'use-subscription'\nimport { useCallback } from 'react'\n\ninterface StorageValue {\n    addedTokens: Array<NonFungibleToken<ChainId, SchemaType>>\n}\n\nexport const storageDefaultValue = {\n    publicKey: null as null | string,\n    addedTokens: [],\n}\n\ninterface GuideStorage {\n    userGuide: Partial<Record<EnhanceableSite, number>>\n}\n\n// TODO Keep this for 5 versions until 2.23\nconst legacyStorageStep = localStorage.getItem('plugin_userGuide_com.maskbook.tip_mirror.xyz')\nexport const guideStorageDefaultValue: GuideStorage = {\n    userGuide: {\n        'mirror.xyz': legacyStorageStep ? Number.parseInt(legacyStorageStep, 10) : undefined,\n    },\n}\n\nlet storage: ScopedStorage<StorageValue> = null!\nlet guideStorage: ScopedStorage<GuideStorage> = null!\n\nexport function setupStorage(_: typeof storage, _guideStorage: typeof guideStorage) {\n    storage = _\n    guideStorage = _guideStorage\n}\n\nexport function getStorage() {\n    return storage.storage\n}\n\nconst TIPS_GUIDE_TOTAL = 1\nconst TIPS_GUIDE_INIT = 1\n\nexport const useTipsUserGuide = (site: EnhanceableSite) => {\n    const settings = useSubscription(guideStorage?.storage?.userGuide.subscription)\n\n    const setStep = useCallback(\n        async (to: number) => {\n            await guideStorage.storage.userGuide.setValue({\n                ...settings,\n                [site]: to,\n            })\n        },\n        [settings, site],\n    )\n\n    const step = settings[site] ?? TIPS_GUIDE_INIT\n    const nextStep = useCallback(async () => {\n        await guideStorage.storage.userGuide.setValue({\n            ...settings,\n            [site]: step + 1,\n        })\n    }, [settings, step, site])\n\n    return {\n        finished: step > TIPS_GUIDE_TOTAL,\n        step,\n        setStep,\n        nextStep,\n    }\n}\n","import { noop } from 'lodash-es'\nimport { createContext, type Dispatch, type SetStateAction } from 'react'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { type SocialAccount } from '@masknet/shared-base'\nimport { type NonFungibleTokenContract, TokenType } from '@masknet/web3-shared-base'\nimport type { GasConfig } from '@masknet/web3-shared-evm'\nimport type { ValidationTuple } from '../../types/index.js'\n\nexport interface TipContextOptions {\n    recipient: SocialAccount<Web3Helper.ChainIdAll> | undefined\n    recipientUserId: string\n    recipientAddress: string\n    setRecipient: Dispatch<SetStateAction<string>>\n    tipType: TokenType\n    setTipType: Dispatch<SetStateAction<TokenType>>\n    recipients: Array<SocialAccount<Web3Helper.ChainIdAll>>\n    token: Web3Helper.FungibleTokenAll | null\n    setToken: Dispatch<SetStateAction<Web3Helper.FungibleTokenAll | null>>\n    amount: string\n    setAmount: Dispatch<SetStateAction<string>>\n    nonFungibleTokenId: string | null\n    setNonFungibleTokenId: Dispatch<SetStateAction<string | null>>\n    nonFungibleTokenContract: NonFungibleTokenContract<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll> | null\n    nonFungibleTokenAddress: string\n    setNonFungibleTokenAddress: Dispatch<SetStateAction<string>>\n    sendTip: () => Promise<string | undefined>\n    isSending: boolean\n    isDirty: boolean\n    storedTokens: Web3Helper.NonFungibleTokenAll[]\n    reset: () => void\n    setGasOption: Dispatch<SetStateAction<GasConfig | undefined>>\n    gasOption: GasConfig | undefined\n    validation: ValidationTuple\n    validatingRecipient: boolean\n    recipientValidation: ValidationTuple\n    isAvailableBalance: boolean\n    isGasSufficient: boolean\n    balance: string\n}\n\nexport const TipContext = createContext<TipContextOptions>({\n    recipient: undefined,\n    recipientAddress: '',\n    recipientUserId: '',\n    setRecipient: noop,\n    tipType: TokenType.NonFungible,\n    setTipType: noop,\n    recipients: [],\n    token: null,\n    setToken: noop,\n    amount: '',\n    setAmount: noop,\n    nonFungibleTokenId: null,\n    setNonFungibleTokenId: noop,\n    nonFungibleTokenContract: null,\n    nonFungibleTokenAddress: '',\n    setNonFungibleTokenAddress: noop,\n    sendTip: noop as () => Promise<string | undefined>,\n    isSending: false,\n    isDirty: false,\n    storedTokens: [],\n    reset: noop,\n    setGasOption: noop,\n    gasOption: undefined,\n    validation: [true],\n    validatingRecipient: false,\n    recipientValidation: [true],\n    isAvailableBalance: false,\n    isGasSufficient: false,\n    balance: '',\n})\nTipContext.displayName = 'TipContext'\n","import { useEffect, useMemo, useState } from 'react'\nimport { useWeb3State } from '@masknet/web3-hooks-base'\nimport type { SocialAccount } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\n\n/**\n * Add name service\n */\nexport function useTipAccountsCompletion(accounts: Array<SocialAccount<Web3Helper.ChainIdAll>>) {\n    const [map, setMap] = useState<Record<string, string>>({})\n\n    const { NameService } = useWeb3State()\n    useEffect(() => {\n        if (!NameService?.reverse) return\n        accounts.forEach(async ({ address, label: originalName }) => {\n            if (originalName) return\n\n            const name = await NameService.reverse!(address)\n            if (!name) return\n            setMap((oldMap) => ({\n                ...oldMap,\n                [address]: name,\n            }))\n        })\n    }, [accounts, NameService])\n\n    return useMemo(() => {\n        if (!Object.keys(map).length) return accounts\n        return accounts.map((config) => ({\n            ...config,\n            name: config.label || map[config.address],\n        }))\n    }, [accounts, map])\n}\n","import { useAsyncFn } from 'react-use'\nimport { useChainContext, useWeb3Connection, useWeb3State } from '@masknet/web3-hooks-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport type { TipTuple } from './type.js'\n\nexport function useNftTip<T extends NetworkPluginID>(\n    pluginID: T,\n    recipient: string,\n    contractAddress: string,\n    tokenId?: string | null,\n    options?: ConnectionOptions<T>,\n): TipTuple {\n    const { Token } = useWeb3State<'all'>(pluginID)\n    const { account, chainId } = useChainContext()\n    const Web3 = useWeb3Connection(pluginID, {\n        account,\n        ...options,\n        overrides: {},\n    })\n\n    const [{ loading: isTransferring }, sendTip] = useAsyncFn(async () => {\n        if (!contractAddress) return\n        if (pluginID === NetworkPluginID.PLUGIN_EVM && !tokenId) return\n        const txid = await Web3.transferNonFungibleToken(contractAddress, tokenId ?? '', recipient, '1')\n        const tokenDetailed = await Web3.getNonFungibleToken(contractAddress, tokenId ?? '', undefined, {\n            chainId,\n            account,\n        })\n        if (tokenDetailed) {\n            await Token?.removeToken?.(account, tokenDetailed)\n        }\n        return txid\n    }, [account, tokenId, pluginID, contractAddress, recipient, Web3])\n\n    return [isTransferring, sendTip]\n}\n","import { useAsyncFn } from 'react-use'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { rightShift } from '@masknet/web3-shared-base'\nimport { useChainContext, useWeb3Connection } from '@masknet/web3-hooks-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport type { TipTuple } from './type.js'\n\nexport function useTokenTip<T extends NetworkPluginID>(\n    pluginID: T,\n    recipient: string,\n    token: Web3Helper.FungibleTokenAll | null,\n    amount: string,\n    options?: ConnectionOptions<T>,\n): TipTuple {\n    const { account } = useChainContext()\n    const Web3 = useWeb3Connection(pluginID, {\n        account,\n        ...options,\n    })\n    const [{ loading: isTransferring }, sendTip] = useAsyncFn(async () => {\n        if (!token?.address) return\n        const totalAmount = rightShift(amount, token.decimals).toFixed()\n        return Web3.transferFungibleToken(token?.address, recipient, totalAmount, '')\n    }, [account, token?.address, token?.decimals, amount, Web3])\n\n    return [isTransferring, sendTip]\n}\n","// @ts-nocheck\n/* eslint-disable */\nimport { createElement, useMemo, type ComponentType } from \"react\";\nimport { useTranslation, Trans, type TransProps } from \"react-i18next\";\ntype TypedTransProps<Value, Components> = Omit<TransProps<string>, \"values\" | \"ns\" | \"i18nKey\"> & ({} extends Value ? {} : {\n    values: Value;\n}) & {\n    components: Components;\n};\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useTipsTrans(): {\n    /**\n      * `Tips`\n      */\n    tips(): string;\n    /**\n      * `To`\n      */\n    tip_to(): string;\n    /**\n      * `Cancel`\n      */\n    cancel(): string;\n    /**\n      * `Confirm`\n      */\n    confirm(): string;\n    /**\n      * `Copy successfully`\n      */\n    copy_success(): string;\n    /**\n      * `Default`\n      */\n    [\"default\"](): string;\n    /**\n      * `Gas Fee`\n      */\n    gas_fee(): string;\n    /**\n      * `Insufficient balance`\n      */\n    token_insufficient_balance(): string;\n    /**\n      * `Manage wallet`\n      */\n    manage_wallet(): string;\n    /**\n      * `Network error or execute smart contract failed.`\n      */\n    failed_to_transfer_nft(): string;\n    /**\n      * `Save`\n      */\n    save(): string;\n    /**\n      * `Save successfully`\n      */\n    save_successfully(): string;\n    /**\n      * `Save failed`\n      */\n    save_failed(): string;\n    /**\n      * `Send`\n      */\n    send_tip(): string;\n    /**\n      * `Sending...`\n      */\n    sending_tip(): string;\n    /**\n      * `No Enough Gas Fees`\n      */\n    no_enough_gas_fees(): string;\n    /**\n      * `The collectible doesn't exist or belong to you.`\n      */\n    nft_not_belong_to_you(): string;\n    /**\n      * `Sent tip successfully.`\n      */\n    send_tip_successfully(): string;\n    /**\n      * `Sent {{- amount}} {{name}} tips successfully.`\n      */\n    send_specific_tip_successfully(options: Readonly<{\n        amount: string;\n        name: string;\n    }>): string;\n    /**\n      * `Share`\n      */\n    tip_share(): string;\n    /**\n      * `OK`\n      */\n    tip_success_ok(): string;\n    /**\n      * `Please connect a wallet.`\n      */\n    tip_connect_wallet_message(): string;\n    /**\n      * `Connect Wallet`\n      */\n    tip_connect_wallet(): string;\n    /**\n      * `Search`\n      */\n    search(): string;\n    /**\n      * `Token`\n      */\n    tip_type_token(): string;\n    /**\n      * `NFT`\n      */\n    tip_type_nft(): string;\n    /**\n      * `Tokens`\n      */\n    tips_tab_tokens(): string;\n    /**\n      * `NFTs`\n      */\n    tips_tab_collectibles(): string;\n    /**\n      * `Wallets not found.`\n      */\n    tip_wallets_missed(): string;\n    /**\n      * `Contracts`\n      */\n    tip_contracts(): string;\n    /**\n      * `Install https://mask.io/download-links to send your first tip.`\n      */\n    promote(): string;\n    /**\n      * `I just tipped {{- amount}} {{symbol}} to @{{recipientSnsId}}'s wallet {{recipient}}\n    \n    $t(promote)`\n      */\n    tip_token_share_post$name(options: Readonly<{\n        amount: string & string;\n        symbol: string & string;\n        recipientSnsId: string & string;\n        recipient: string & string;\n    }>): string;\n    /**\n      * `I just tipped {{- amount}} {{symbol}} to @{{recipientSnsId}}'s wallet address {{recipient}}\n    \n    $t(promote)`\n      */\n    tip_token_share_post$address(options: Readonly<{\n        amount: string;\n        symbol: string;\n        recipientSnsId: string;\n        recipient: string;\n    }>): string;\n    /**\n      * `I just tipped a {{name}} to @{{recipientSnsId}}'s wallet {{recipient}}\n    \n    $t(promote)`\n      */\n    tip_nft_share_post$name(options: Readonly<{\n        name: string & string;\n        recipientSnsId: string & string;\n        recipient: string & string;\n    }>): string;\n    /**\n      * `I just tipped a {{name}} to @{{recipientSnsId}}'s wallet address {{recipient}}\n    \n    $t(promote)`\n      */\n    tip_nft_share_post$address(options: Readonly<{\n        name: string;\n        recipientSnsId: string;\n        recipient: string;\n    }>): string;\n    /**\n      * `Add`\n      */\n    tip_add(): string;\n    /**\n      * `Adding`\n      */\n    tip_adding(): string;\n    /**\n      * `Add Collectibles`\n      */\n    tip_add_collectibles(): string;\n    /**\n      * `Input contract address`\n      */\n    tip_add_collectibles_contract_address(): string;\n    /**\n      * `Token ID`\n      */\n    tip_add_collectibles_token_id(): string;\n    /**\n      * `The contract address is incorrect or the collectible does not belong to you.`\n      */\n    tip_add_collectibles_error(): string;\n    /**\n      * `Loading`\n      */\n    tip_loading(): string;\n    /**\n      * `No any collectible is available to preview. Please add your collectible here.`\n      */\n    tip_empty_nft(): string;\n    /**\n      * `Save successfully`\n      */\n    tip_persona_sign_success(): string;\n    /**\n      * `Add and manage verified wallet addresses for receiving tips.`\n      */\n    tips_wallet_alert(): string;\n    /**\n      * `The receiving address is a contract address. Please check again.`\n      */\n    recipient_address_is_contract(): string;\n    /**\n      * `The receiving address may be a malicious address.`\n      */\n    recipient_address_is_malicious(): string;\n    /**\n      * `Copy Address`\n      */\n    copy_address(): string;\n    /**\n      * `Tips Wallet set up successfully.`\n      */\n    wallet_set_up_successfully(): string;\n    /**\n      * `Tips Wallet set up failed, please try again.`\n      */\n    wallet_set_up_failed(): string;\n    /**\n      * `View on Explorer`\n      */\n    view_on_explorer(): string;\n    /**\n      * `Send authors tips by using Mask Network’s Tips function.`\n      */\n    tips_guide_description(): string;\n    /**\n      * `Close`\n      */\n    tips_guide_action(): string;\n    /**\n      * `No collectible found.`\n      */\n    tips_no_collectible_found(): string;\n    /**\n      * `Retry`\n      */\n    retry(): string;\n    /**\n      * - tip_token_share_post$name: `I just tipped {{- amount}} {{symbol}} to @{{recipientSnsId}}'s wallet {{recipient}}\n    \n    $t(promote)`\n    \n      * - tip_token_share_post$address: `I just tipped {{- amount}} {{symbol}} to @{{recipientSnsId}}'s wallet address {{recipient}}\n    \n    $t(promote)`\n      */\n    tip_token_share_post(options: Readonly<{\n        amount: string & string;\n        symbol: string & string;\n        recipientSnsId: string & string;\n        recipient: string & string;\n        context?: \"name\" | \"address\";\n    }>): string;\n    /**\n      * - tip_nft_share_post$name: `I just tipped a {{name}} to @{{recipientSnsId}}'s wallet {{recipient}}\n    \n    $t(promote)`\n    \n      * - tip_nft_share_post$address: `I just tipped a {{name}} to @{{recipientSnsId}}'s wallet address {{recipient}}\n    \n    $t(promote)`\n      */\n    tip_nft_share_post(options: Readonly<{\n        name: string & string;\n        recipientSnsId: string & string;\n        recipient: string & string;\n        context?: \"name\" | \"address\";\n    }>): string;\n} { const { t } = useTranslation(\"com.maskbook.tip\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\nfunction createComponent(i18nKey: string) {\n    return (props) => createElement(Trans, { i18nKey, ns: \"com.maskbook.tip\", shouldUnescape: true, ...props });\n}\nexport const TipsTrans: {\n    /**\n      * `Gift crypto or NFTs tips to any <Link>Next.ID</Link> verified users on social media.`\n      */\n    description: ComponentType<TypedTransProps<Readonly<{}>, {\n        Link: JSX.Element;\n    }>>;\n} = /*#__PURE__*/ createProxy(createComponent);\n","import { useMemo } from 'react'\nimport { useAsync } from 'react-use'\nimport { useAddressType, useChainContext } from '@masknet/web3-hooks-base'\nimport { GoPlusLabs } from '@masknet/web3-providers'\nimport { AddressType } from '@masknet/web3-shared-evm'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { useTipsTrans } from '../../locales/index.js'\nimport type { ValidationTuple } from '../../types/index.js'\n\nexport function useRecipientValidate(recipientAddress: string): {\n    loading: boolean\n    validation: ValidationTuple\n} {\n    const t = useTipsTrans()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { value: addressType, loading } = useAddressType(NetworkPluginID.PLUGIN_EVM, recipientAddress, {\n        chainId,\n    })\n    const { value: security } = useAsync(async () => {\n        return GoPlusLabs.getAddressSecurity(chainId, recipientAddress)\n    }, [chainId, recipientAddress])\n\n    const isMaliciousAddress = security && Object.values(security).filter((x) => x === '1').length > 0\n\n    const validation: ValidationTuple = useMemo(() => {\n        if (addressType === AddressType.Contract) return [false, t.recipient_address_is_contract()]\n        if (isMaliciousAddress) return [false, t.recipient_address_is_malicious()]\n        return [true]\n    }, [addressType, isMaliciousAddress, t])\n    return {\n        loading,\n        validation,\n    }\n}\n","import { useMemo } from 'react'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext, useFungibleTokenBalance } from '@masknet/web3-hooks-base'\nimport { isGreaterThan, isLessThanOrEqualTo, rightShift, TokenType } from '@masknet/web3-shared-base'\nimport { useTipsTrans } from '../../locales/index.js'\nimport type { ValidationTuple } from '../../types/index.js'\nimport type { TipContextOptions } from './TipContext.js'\n\ntype TipValidateOptions = Pick<\n    TipContextOptions,\n    'tipType' | 'amount' | 'token' | 'nonFungibleTokenId' | 'nonFungibleTokenAddress' | 'isGasSufficient'\n>\n\nexport function useTipValidate(\n    pluginID: NetworkPluginID,\n    chainId: Web3Helper.ChainIdAll,\n    {\n        tipType,\n        amount,\n        token,\n        nonFungibleTokenId: tokenId,\n        nonFungibleTokenAddress: tokenAddress,\n        isGasSufficient,\n    }: TipValidateOptions,\n): ValidationTuple {\n    const { account } = useChainContext()\n\n    const { data: balance = '0' } = useFungibleTokenBalance(pluginID, token?.address, { chainId, account })\n    const t = useTipsTrans()\n\n    const result: ValidationTuple = useMemo(() => {\n        if (tipType === TokenType.Fungible) {\n            if (!isGasSufficient) {\n                return [false, t.no_enough_gas_fees()]\n            }\n            if (!amount || isLessThanOrEqualTo(amount, 0)) return [false]\n            if (isGreaterThan(rightShift(amount, token?.decimals), balance))\n                return [false, t.token_insufficient_balance()]\n        } else if (pluginID === NetworkPluginID.PLUGIN_EVM) {\n            if (!tokenId || !tokenAddress) return [false]\n        } else if (pluginID === NetworkPluginID.PLUGIN_SOLANA && !tokenAddress) {\n            return [false]\n        }\n        return [true]\n    }, [tipType, amount, token?.decimals, balance, pluginID, tokenId, tokenAddress, t, isGasSufficient])\n\n    return result\n}\n","import {\n    type Dispatch,\n    memo,\n    type SetStateAction,\n    useCallback,\n    useContext,\n    useEffect,\n    useMemo,\n    useState,\n    type PropsWithChildren,\n} from 'react'\nimport { useSubscription } from 'use-subscription'\nimport { useNonFungibleTokenContract, useChainContext, useNativeToken } from '@masknet/web3-hooks-base'\nimport { isSameAddress, TokenType } from '@masknet/web3-shared-base'\nimport type { ChainId, GasConfig } from '@masknet/web3-shared-evm'\nimport { NetworkPluginID, type SocialAccount } from '@masknet/shared-base'\nimport { useAvailableBalance } from '@masknet/shared'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { getStorage } from '../../storage/index.js'\nimport type { TipTask } from '../../types/index.js'\nimport { type TipContextOptions, TipContext } from './TipContext.js'\nimport { useTipAccountsCompletion } from './useTipAccountsCompletion.js'\nimport { useNftTip } from './useNftTip.js'\nimport { useTokenTip } from './useTokenTip.js'\nimport { useRecipientValidate } from './useRecipientValidate.js'\nimport { useTipValidate } from './useTipValidate.js'\nimport { TargetRuntimeContext } from '../TargetRuntimeContext.js'\n\ninterface Props extends PropsWithChildren<{}> {\n    task: TipTask\n}\n\nfunction useRecipients(pluginID: NetworkPluginID, tipsAccounts: Array<SocialAccount<Web3Helper.ChainIdAll>>) {\n    const _recipients = useTipAccountsCompletion(tipsAccounts)\n    const recipients = useMemo(() => {\n        return [..._recipients].sort((a, z) => {\n            if (a.pluginID === z.pluginID) return 0\n            return a.pluginID === pluginID ? -1 : 1\n        })\n    }, [_recipients, pluginID])\n    return recipients\n}\n\nfunction useDirtyDetection(deps: any[]): [boolean, Dispatch<SetStateAction<boolean>>] {\n    const [isDirty, setIsDirty] = useState(false)\n    const { account } = useChainContext()\n\n    useEffect(() => {\n        setIsDirty(true)\n    }, [account, ...deps])\n\n    return [isDirty, setIsDirty]\n}\n\nexport const TipTaskProvider = memo(({ children, task }: Props) => {\n    const { targetPluginID, setTargetPluginID } = TargetRuntimeContext.useContainer()\n    const { chainId: targetChainId } = useChainContext()\n\n    const [gasOption, setGasOption] = useState<GasConfig>()\n    const [_recipientAddress, setRecipient] = useState(task.recipient ?? '')\n    const recipients = useRecipients(targetPluginID, task.accounts)\n    const [tipType, setTipType] = useState(TokenType.Fungible)\n    const [amount, setAmount] = useState('')\n    const [nonFungibleTokenAddress, setNonFungibleTokenAddress] = useState('')\n    const { data: nativeTokenDetailed = null } = useNativeToken(targetPluginID, { chainId: targetChainId })\n\n    const [tokenMap, setTokenMap] = useState<Record<string, TipContextOptions['token']>>({})\n    const key = `${targetPluginID}:${targetChainId}`\n    const setToken: TipContextOptions['setToken'] = useCallback(\n        (val) => {\n            setTokenMap((map) => {\n                const newToken = typeof val === 'function' ? val(map[key]) : val\n                return { ...map, [key]: newToken }\n            })\n        },\n        [key],\n    )\n    const token = tokenMap[key] ?? nativeTokenDetailed\n\n    // #region balance\n    const { isAvailableBalance, balance, isGasSufficient } = useAvailableBalance(\n        targetPluginID,\n        token?.address,\n        gasOption,\n        {\n            chainId: targetChainId,\n        },\n    )\n    // #endregion\n\n    const [nonFungibleTokenId, setNonFungibleTokenId] = useState<TipContextOptions['nonFungibleTokenId']>(null)\n    const storedTokens = useSubscription(getStorage().addedTokens.subscription)\n    const validation = useTipValidate(targetPluginID, targetChainId, {\n        tipType,\n        amount,\n        token,\n        nonFungibleTokenId,\n        nonFungibleTokenAddress,\n        isGasSufficient,\n    })\n\n    const { value: nonFungibleTokenContract } = useNonFungibleTokenContract(targetPluginID, nonFungibleTokenAddress)\n\n    const connectionOptions =\n        targetPluginID === NetworkPluginID.PLUGIN_EVM\n            ? {\n                  overrides: gasOption,\n                  chainId: targetChainId as ChainId,\n              }\n            : undefined\n    const recipientAddress = _recipientAddress || task.recipient || recipients[0]?.address\n    const { loading: validatingRecipient, validation: recipientValidation } = useRecipientValidate(recipientAddress)\n    const tokenTipTuple = useTokenTip(targetPluginID, recipientAddress, token, amount, connectionOptions)\n    const nftTipTuple = useNftTip(\n        targetPluginID,\n        recipientAddress,\n        nonFungibleTokenAddress,\n        nonFungibleTokenId,\n        connectionOptions,\n    )\n\n    const sendTipTuple = tipType === TokenType.Fungible ? tokenTipTuple : nftTipTuple\n    const [isDirty, setIsDirty] = useDirtyDetection([tipType, recipientAddress, targetChainId, amount, token])\n    const isSending = sendTipTuple[0]\n    const sendTip = sendTipTuple[1]\n    const recipient = recipients.find((x) => isSameAddress(x.address, recipientAddress))\n\n    const reset = useCallback(() => {\n        setAmount('')\n        setNonFungibleTokenId(null)\n        setNonFungibleTokenAddress('')\n    }, [])\n\n    useEffect(reset, [targetChainId])\n\n    const wrappedSendTip = useCallback(() => {\n        setIsDirty(false)\n        return sendTip()\n    }, [sendTip])\n\n    const contextValue = useMemo((): TipContextOptions => {\n        return {\n            recipient,\n            recipientUserId: task.recipientUserId || '',\n            recipientAddress,\n            setRecipient,\n            recipients,\n            tipType,\n            setTipType,\n            token,\n            setToken,\n            amount,\n            setAmount,\n            nonFungibleTokenId,\n            setNonFungibleTokenId,\n            nonFungibleTokenContract: nonFungibleTokenContract || null,\n            nonFungibleTokenAddress,\n            setNonFungibleTokenAddress,\n            sendTip: wrappedSendTip,\n            // Respect to dirty status, reset if it's dirty\n            isSending: isDirty ? false : isSending,\n            isDirty,\n            storedTokens: storedTokens.filter((t) => t.contract?.chainId === targetChainId),\n            reset,\n            gasOption,\n            setGasOption,\n            validation,\n            validatingRecipient,\n            recipientValidation,\n            isAvailableBalance,\n            isGasSufficient,\n            balance,\n        }\n    }, [\n        targetChainId,\n        recipient,\n        recipientAddress,\n        task.recipient,\n        task.recipientUserId,\n        recipients,\n        tipType,\n        amount,\n        nonFungibleTokenId,\n        nonFungibleTokenContract,\n        nonFungibleTokenAddress,\n        token,\n        wrappedSendTip,\n        isSending,\n        reset,\n        balance,\n        gasOption,\n        storedTokens,\n        validation,\n        validatingRecipient,\n        recipientValidation,\n    ])\n\n    useEffect(() => {\n        const pid = recipient?.pluginID ?? NetworkPluginID.PLUGIN_EVM\n        setTargetPluginID(pid)\n    }, [recipient?.pluginID])\n\n    return <TipContext.Provider value={contextValue}>{children}</TipContext.Provider>\n})\n\nTipTaskProvider.displayName = 'TipTaskProvider'\n\nexport function useTip() {\n    return useContext(TipContext)\n}\n","import { type HTMLProps, useCallback, useMemo, useEffect } from 'react'\nimport { compact, uniqWith } from 'lodash-es'\nimport { FormControl, Typography } from '@mui/material'\nimport { Web3 } from '@masknet/web3-providers'\nimport { useChainContext, useNonFungibleAssets, useNetworkContext, useWeb3State } from '@masknet/web3-hooks-base'\nimport {\n    AddCollectiblesModal,\n    ElementAnchor,\n    RetryHint,\n    CollectibleList,\n    LoadingStatus,\n    EmptyStatus,\n} from '@masknet/shared'\nimport { EMPTY_LIST, NetworkPluginID } from '@masknet/shared-base'\nimport { LoadingBase, makeStyles } from '@masknet/theme'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { isLensProfileAddress, isLensFollower, isLensCollect, SchemaType, type ChainId } from '@masknet/web3-shared-evm'\nimport { useTipsTrans } from '../../locales/index.js'\nimport { useTip } from '../../contexts/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n        height: '100%',\n    },\n    header: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        flexShrink: 0,\n        margin: theme.spacing(0, 2),\n    },\n    selectSection: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n        flexGrow: 1,\n        margin: theme.spacing(2, 0, 0),\n    },\n    statusBox: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n        padding: theme.spacing(4),\n    },\n    collectibleList: {\n        paddingRight: 0,\n    },\n    loadingList: {\n        overflowY: 'scroll',\n        flexGrow: 1,\n        '::-webkit-scrollbar': {\n            backgroundColor: 'transparent',\n            width: 20,\n        },\n        '::-webkit-scrollbar-thumb': {\n            borderRadius: '20px',\n            width: 5,\n            minHeight: 50,\n            border: '7px solid rgba(0, 0, 0, 0)',\n            backgroundColor: theme.palette.maskColor.secondaryLine,\n            backgroundClip: 'padding-box',\n        },\n    },\n    addButton: {\n        marginLeft: 'auto',\n        cursor: 'pointer',\n        color: theme.palette.maskColor.highlight,\n        fontSize: 14,\n        fontWeight: 700,\n        lineHeight: '18px',\n    },\n}))\n\ninterface Props extends HTMLProps<HTMLDivElement> {\n    onEmpty?(empty: boolean): void\n}\n\nexport function NFTSection({ className, onEmpty, ...rest }: Props) {\n    const {\n        nonFungibleTokenAddress: tokenAddress,\n        nonFungibleTokenId: tokenId,\n        setNonFungibleTokenId,\n        setNonFungibleTokenAddress,\n    } = useTip()\n    const { classes, cx } = useStyles()\n    const t = useTipsTrans()\n    const selectedKey = tokenAddress || tokenId ? `${tokenAddress}_${tokenId}` : undefined\n    const { pluginID } = useNetworkContext()\n    const { account, chainId } = useChainContext()\n\n    const {\n        value: fetchedTokens = EMPTY_LIST,\n        done,\n        next,\n        loading,\n        error: loadError,\n    } = useNonFungibleAssets(pluginID, undefined, { chainId })\n\n    const isEvm = pluginID === NetworkPluginID.PLUGIN_EVM\n    const tokens = useMemo(() => {\n        const filtered = isEvm\n            ? fetchedTokens.filter((x) => {\n                  if (isLensProfileAddress(x.address)) return false\n                  if (x.metadata?.name && isLensFollower(x.metadata.name)) return false\n                  if (x.collection?.name && isLensCollect(x.collection.name)) return false\n                  return true\n              })\n            : fetchedTokens\n        return uniqWith(\n            filtered,\n            isEvm\n                ? (v1, v2) => {\n                      return isSameAddress(v1.contract?.address, v2.contract?.address) && v1.tokenId === v2.tokenId\n                  }\n                : (v1, v2) => v1.tokenId === v2.tokenId,\n        )\n    }, [fetchedTokens, isEvm])\n\n    const { Token } = useWeb3State(pluginID)\n    const handleAddToken = useCallback(async () => {\n        const results = await AddCollectiblesModal.openAndWaitForClose({\n            pluginID,\n            chainId,\n        })\n        if (!results || !chainId) return\n        const [contract, tokenIds] = results\n        const allSettled = await Promise.allSettled(\n            tokenIds.map(async (tokenId) => {\n                const token = await Web3.getNonFungibleToken(contract.address, tokenId, SchemaType.ERC721, {\n                    chainId: chainId as ChainId,\n                    account,\n                })\n                await Token?.addToken?.(account, token)\n                return token\n            }),\n        )\n        const tokens = compact(allSettled.map((x) => (x.status === 'fulfilled' ? x.value : null)))\n        if (!tokens.length) return\n\n        setNonFungibleTokenAddress(tokens[0].address)\n        setNonFungibleTokenId(tokens[0].tokenId)\n    }, [account, pluginID, chainId, Token?.addNonFungibleTokens])\n\n    // fetched tokens are all filtered out, keep fetching next page\n    useEffect(() => {\n        if (tokens.length) return\n        next()\n    }, [!tokens.length, fetchedTokens.length, next])\n\n    return (\n        <div className={cx(classes.root, className)} {...rest}>\n            <FormControl className={classes.header}>\n                {isEvm && account ? (\n                    <Typography className={classes.addButton} onClick={handleAddToken}>\n                        {t.tip_add_collectibles()}\n                    </Typography>\n                ) : null}\n            </FormControl>\n            <div className={classes.selectSection}>\n                {(() => {\n                    if (tokens.length) {\n                        // TODO CollectionList has its own loading skeleton\n                        return (\n                            <div className={classes.loadingList}>\n                                <CollectibleList\n                                    classes={{ root: classes.collectibleList }}\n                                    retry={next}\n                                    collectibles={tokens}\n                                    pluginID={pluginID}\n                                    loading={loading}\n                                    columns={4}\n                                    selectable\n                                    value={selectedKey}\n                                    showNetworkIcon={false}\n                                    onChange={(value: string | null) => {\n                                        if (!value) {\n                                            setNonFungibleTokenAddress('')\n                                            setNonFungibleTokenId('')\n                                            return\n                                        }\n                                        const [address, tokenId] = value.split('_')\n                                        setNonFungibleTokenAddress(address)\n                                        setNonFungibleTokenId(tokenId)\n                                    }}\n                                />\n                                <ElementAnchor key={fetchedTokens.length} callback={() => next?.()}>\n                                    {!done && <LoadingBase size={36} />}\n                                </ElementAnchor>\n                            </div>\n                        )\n                    }\n                    if (tokens.length === 0 && (!done || loading) && account) {\n                        return <LoadingStatus className={classes.statusBox} iconSize={36} />\n                    }\n                    if (fetchedTokens.length === 0 && loadError && account && done) {\n                        return <RetryHint retry={next} />\n                    }\n                    return (\n                        <EmptyStatus className={classes.statusBox} iconSize={36}>\n                            {t.tip_empty_nft()}\n                        </EmptyStatus>\n                    )\n                })()}\n            </div>\n        </div>\n    )\n}\n","import { PluginID, EMPTY_LIST } from '@masknet/shared-base'\nimport { useActivatedPlugin } from '@masknet/plugin-infra/dom'\nimport { makeStyles } from '@masknet/theme'\nimport { NetworkTab } from '@masknet/shared'\nimport { useNetworkContext } from '@masknet/web3-hooks-base'\nimport { TargetRuntimeContext } from '../../contexts/TargetRuntimeContext.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    abstractTabWrapper: {\n        width: '100%',\n        paddingBottom: theme.spacing(1),\n        flexShrink: 0,\n        height: 62,\n    },\n}))\n\nexport function NetworkSection() {\n    const { classes } = useStyles()\n    const { setTargetChainId } = TargetRuntimeContext.useContainer()\n\n    const { pluginID } = useNetworkContext()\n    const tipsDefinition = useActivatedPlugin(PluginID.Tips, 'any')\n    const chainIdList = tipsDefinition?.enableRequirement.web3?.[pluginID]?.supportedChainIds ?? EMPTY_LIST\n\n    if (!chainIdList.length) return null\n\n    return (\n        <div className={classes.abstractTabWrapper}>\n            <NetworkTab chains={chainIdList} pluginID={pluginID} onChange={setTargetChainId} />\n        </div>\n    )\n}\n","import { memo, useRef } from 'react'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { AccountIcons, ReversedAddress } from '@masknet/shared'\nimport { Link, MenuItem, Select, Typography } from '@mui/material'\nimport { useDefaultChainId, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { NetworkPluginID, type SocialAccount } from '@masknet/shared-base'\nimport { useTip } from '../../contexts/index.js'\nimport { useTipsTrans } from '../../locales/index.js'\n\nconst useStyles = makeStyles<void, 'icon' | 'pluginIcon' | 'text'>()((theme, _, refs) => {\n    return {\n        root: {\n            height: 40,\n            flexGrow: 1,\n        },\n        menuItem: {\n            height: 32,\n            color: theme.palette.maskColor.main,\n            borderRadius: theme.spacing(1),\n            padding: theme.spacing(0, 0.5),\n            '&:not(:first-of-type)': {\n                marginTop: theme.spacing(1),\n            },\n        },\n        text: {\n            fontWeight: 700,\n            marginLeft: theme.spacing(0.5),\n            fontSize: '0.825rem',\n        },\n        select: {\n            display: 'flex',\n            alignItems: 'center',\n            [`& .${refs.icon}`]: {\n                display: 'none',\n            },\n            [`& .${refs.pluginIcon}`]: {\n                display: 'none',\n            },\n            [`& .${refs.text}`]: {\n                fontWeight: 400,\n            },\n        },\n        menuPaper: {\n            '::-webkit-scrollbar': {\n                display: 'none',\n                opacity: 0,\n            },\n        },\n        menu: {\n            maxHeight: 312,\n            padding: theme.spacing(1.5),\n            borderRadius: theme.spacing(2),\n        },\n        icon: {\n            width: 20,\n            height: 20,\n        },\n        pluginIcon: {},\n        link: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            fontSize: 0,\n        },\n        actionIcon: {\n            marginLeft: theme.spacing(0.5),\n            color: theme.palette.maskColor.main,\n        },\n        checkIcon: {\n            marginLeft: 'auto',\n            color: '#60DFAB',\n            filter: 'drop-shadow(0px 4px 10px rgba(28, 104, 243, 0.2))',\n        },\n    }\n})\n\nconst PluginIcon = ({ pluginID }: { pluginID: NetworkPluginID }) => {\n    const { classes } = useStyles()\n    const mapping = {\n        [NetworkPluginID.PLUGIN_EVM]: (\n            <Icons.ETH\n                size={20}\n                className={classes.pluginIcon}\n                style={{\n                    filter: 'drop-shadow(0px 6px 12px rgba(98, 126, 234, 0.2))',\n                    backdropFilter: 'blur(16px)',\n                }}\n            />\n        ),\n        [NetworkPluginID.PLUGIN_FLOW]: (\n            <Icons.Flow\n                size={20}\n                className={classes.pluginIcon}\n                style={{\n                    filter: 'drop-shadow(0px 6px 12px rgba(25, 251, 155, 0.2))',\n                    backdropFilter: 'blur(16px)',\n                }}\n            />\n        ),\n        [NetworkPluginID.PLUGIN_SOLANA]: (\n            <Icons.Solana\n                size={20}\n                className={classes.pluginIcon}\n                style={{\n                    filter: 'drop-shadow(0px 6px 12px rgba(25, 251, 155, 0.2))',\n                    backdropFilter: 'blur(16px)',\n                }}\n            />\n        ),\n    }\n    return mapping[pluginID]\n}\n\nfunction ExternalLink({ account }: { account: SocialAccount<Web3Helper.ChainIdAll> }) {\n    const t = useTipsTrans()\n    const { classes, cx } = useStyles()\n    const Others = useWeb3Others(account.pluginID)\n    const chainId = useDefaultChainId(account.pluginID)\n\n    return (\n        <Link\n            className={cx(classes.link, classes.actionIcon, classes.icon)}\n            onClick={(e) => e.stopPropagation()}\n            href={Others.explorerResolver.addressLink(chainId, account.address) ?? ''}\n            target=\"_blank\"\n            title={t.view_on_explorer()}\n            rel=\"noopener noreferrer\">\n            <Icons.LinkOut size={20} />\n        </Link>\n    )\n}\n\ninterface Props {\n    className?: string\n}\nexport const RecipientSelect = memo(({ className }: Props) => {\n    const { classes, cx } = useStyles()\n    const selectRef = useRef(null)\n    const { recipient, recipients, setRecipient } = useTip()\n    const recipientAddress = recipient?.address\n\n    return (\n        <Select\n            className={cx(classes.root, className)}\n            ref={selectRef}\n            value={recipientAddress}\n            classes={{ select: classes.select }}\n            onChange={(e) => {\n                setRecipient(e.target.value)\n            }}\n            MenuProps={{\n                classes: {\n                    paper: classes.menuPaper,\n                    list: classes.menu,\n                },\n                anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                },\n                disableScrollLock: true,\n                container: selectRef.current,\n                anchorEl: selectRef.current,\n                BackdropProps: {\n                    invisible: true,\n                },\n            }}>\n            {recipients.map((account) => (\n                <MenuItem className={classes.menuItem} key={account.address} value={account.address}>\n                    <PluginIcon pluginID={account.pluginID} />\n                    {account.label ? (\n                        <Typography component=\"span\" className={classes.text}>\n                            {account.label}\n                        </Typography>\n                    ) : (\n                        <ReversedAddress\n                            address={account.address}\n                            size={account.address.length}\n                            component=\"span\"\n                            className={classes.text}\n                        />\n                    )}\n                    <ExternalLink account={account} />\n                    <AccountIcons socialAccount={account} classes={{ icon: classes.icon }} />\n                    {isSameAddress(account.address, recipientAddress) ? (\n                        <Icons.CheckCircle className={cx(classes.checkIcon, classes.icon)} />\n                    ) : null}\n                </MenuItem>\n            ))}\n        </Select>\n    )\n})\n","import { makeStyles } from '@masknet/theme'\nimport { FormControl, type FormControlProps, Typography } from '@mui/material'\nimport { useTip } from '../../contexts/index.js'\nimport { useTipsTrans } from '../../locales/index.js'\nimport { RecipientSelect } from './RecipientSelect.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        container: {\n            width: 'auto',\n        },\n        receiverRow: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            width: 'auto',\n        },\n        to: {\n            fontSize: 19,\n            fontWeight: 500,\n        },\n        select: {\n            marginLeft: theme.spacing(2),\n        },\n        validation: {\n            fontSize: 14,\n            fontWeight: 400,\n            lineHeight: '18px',\n            color: theme.palette.maskColor.danger,\n            marginTop: theme.spacing(1),\n        },\n    }\n})\n\ninterface Props extends FormControlProps {}\n\nexport function RecipientSection({ className, ...rest }: Props) {\n    const { classes, cx } = useStyles()\n    const t = useTipsTrans()\n    const {\n        recipientValidation: [isValid, validateMessage],\n    } = useTip()\n    return (\n        <FormControl fullWidth className={cx(classes.container, className)} {...rest}>\n            <div className={classes.receiverRow}>\n                <Typography className={classes.to}>{t.tip_to()}</Typography>\n                <RecipientSelect className={classes.select} />\n            </div>\n            {isValid ? null : <div className={classes.validation}>{validateMessage}</div>}\n        </FormControl>\n    )\n}\n","import { useAsync } from 'react-use'\nimport { toHex } from 'web3-utils'\nimport { Contract } from '@masknet/web3-providers'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { TokenType } from '@masknet/web3-shared-base'\nimport { isNativeTokenAddress } from '@masknet/web3-shared-evm'\nimport { useTip } from '../../contexts/index.js'\n\nconst MIN_GAS_LIMIT = 21000\nconst DEFAULT_GAS_LIMIT = 50000\n\n// We only care about fungible tokens\nexport function useGasLimit(fallback = DEFAULT_GAS_LIMIT) {\n    const { tipType, token, amount, recipientAddress } = useTip()\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    return useAsync(async () => {\n        const isNativeToken = isNativeTokenAddress(token?.address)\n        const isTippingToken = tipType === TokenType.Fungible\n        if (isNativeToken || !isTippingToken) return MIN_GAS_LIMIT\n        if (!token?.address) return fallback\n\n        const contract = Contract.getERC20Contract(token.address, {\n            chainId,\n            account,\n        })\n        const tx = contract?.methods.transfer(recipientAddress, toHex(amount))\n        const estimated = await tx?.estimateGas({\n            from: account,\n        })\n        return estimated ?? fallback\n    }, [token, tipType, chainId, account, fallback])\n}\n","import { useCallback } from 'react'\nimport { useAsync } from 'react-use'\nimport { SelectGasSettingsToolbar } from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext, useGasPrice, useNativeTokenPrice, useNetwork, useWallet } from '@masknet/web3-hooks-base'\nimport { SmartPayBundler } from '@masknet/web3-providers'\nimport { type GasConfig, isNativeTokenAddress, GasEditor } from '@masknet/web3-shared-evm'\nimport { useGasLimit } from './useGasLimit.js'\nimport { useTip } from '../../contexts/index.js'\n\nconst ETH_GAS_LIMIT = 21000\nconst ERC20_GAS_LIMIT = 50000\n\nexport function GasSettingsBar() {\n    const wallet = useWallet()\n    const { token, setGasOption, gasOption } = useTip()\n    const { value: smartPayChainId } = useAsync(async () => SmartPayBundler.getSupportedChainId(), [])\n\n    const isNativeToken = isNativeTokenAddress(token?.address)\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { data: nativeTokenPrice = 0 } = useNativeTokenPrice(NetworkPluginID.PLUGIN_EVM, {\n        chainId,\n    })\n    const { data: defaultGasPrice = '1' } = useGasPrice(NetworkPluginID.PLUGIN_EVM, { chainId })\n    const network = useNetwork(NetworkPluginID.PLUGIN_EVM, chainId)\n    const nativeToken = network?.nativeCurrency\n    const GAS_LIMIT = isNativeToken ? ETH_GAS_LIMIT : ERC20_GAS_LIMIT\n    const { value: gasLimit = GAS_LIMIT } = useGasLimit()\n\n    const handleGasSettingChange = useCallback(\n        (gasConfig: GasConfig) => {\n            const editor = GasEditor.fromConfig(chainId, gasConfig)\n            setGasOption((config) => {\n                return editor.getGasConfig({\n                    gasPrice: defaultGasPrice,\n                    maxFeePerGas: defaultGasPrice,\n                    maxPriorityFeePerGas: defaultGasPrice,\n                    ...config,\n                })\n            })\n        },\n        [chainId, defaultGasPrice],\n    )\n    return (\n        <SelectGasSettingsToolbar\n            supportMultiCurrency={!!wallet?.owner && chainId === smartPayChainId}\n            nativeToken={nativeToken!}\n            nativeTokenPrice={nativeTokenPrice}\n            gasConfig={gasOption}\n            gasLimit={gasLimit}\n            onChange={handleGasSettingChange}\n        />\n    )\n}\n","import { type HTMLProps, useCallback } from 'react'\nimport { useChainContext, useNetworkContext } from '@masknet/web3-hooks-base'\nimport { FungibleTokenInput, SelectFungibleTokenModal, TokenValue } from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { useTip } from '../../contexts/index.js'\nimport { GasSettingsBar } from './GasSettingsBar.js'\n\nconst useStyles = makeStyles()({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    tokenValue: {\n        flexGrow: 1,\n    },\n})\n\nexport function TokenSection(props: HTMLProps<HTMLDivElement>) {\n    const { classes, cx } = useStyles()\n    const { token, setToken, amount, setAmount, isAvailableBalance, balance } = useTip()\n    const { pluginID } = useNetworkContext()\n    const { chainId } = useChainContext()\n\n    const onSelectTokenChipClick = useCallback(async () => {\n        const picked = await SelectFungibleTokenModal.openAndWaitForClose({\n            pluginID,\n            chainId,\n            disableNativeToken: false,\n            selectedTokens: token ? [token.address] : [],\n        })\n        if (!picked) return\n        setToken(picked)\n    }, [token?.address, pluginID, chainId])\n\n    return (\n        <div {...props} className={cx(props.className, classes.container)}>\n            <FungibleTokenInput\n                label=\"\"\n                token={token}\n                amount={amount}\n                isAvailableBalance={isAvailableBalance}\n                onAmountChange={setAmount}\n                balance={balance}\n                onSelectToken={onSelectTokenChipClick}\n            />\n            {pluginID === NetworkPluginID.PLUGIN_EVM ? <GasSettingsBar /> : null}\n            <TokenValue className={classes.tokenValue} token={token} amount={amount} />\n        </div>\n    )\n}\n","import { share } from '@masknet/plugin-infra/content-script/context'\nimport { ChainBoundary, InjectedDialog, PluginWalletStatusBar, TransactionConfirmModal } from '@masknet/shared'\nimport { NetworkPluginID, getSiteType, pluginIDsSettings } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { ActionButton, MaskTabList, makeStyles } from '@masknet/theme'\nimport {\n    useChainContext,\n    useMountReport,\n    useNetworkContext,\n    useNonFungibleAsset,\n    useReverseAddress,\n    useWallet,\n} from '@masknet/web3-hooks-base'\nimport { SmartPayBundler } from '@masknet/web3-providers'\nimport { TokenType } from '@masknet/web3-shared-base'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventID, EventType } from '@masknet/web3-telemetry/types'\nimport { TabContext, TabPanel } from '@mui/lab'\nimport { DialogContent, Tab } from '@mui/material'\nimport { useCallback, useMemo } from 'react'\nimport { useAsync, useUpdateEffect } from 'react-use'\nimport { TargetRuntimeContext } from '../contexts/TargetRuntimeContext.js'\nimport { useTip } from '../contexts/index.js'\nimport { useTipsTrans } from '../locales/index.js'\nimport { NFTSection } from './NFTSection/index.js'\nimport { NetworkSection } from './NetworkSection/index.js'\nimport { RecipientSection } from './RecipientSection/index.js'\nimport { TokenSection } from './TokenSection/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    dialog: {\n        width: 600,\n        height: 620,\n        overflow: 'hidden',\n        backgroundImage: 'none',\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        flexShrink: 1,\n        flexGrow: 1,\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n        padding: 0,\n    },\n    recipient: {\n        margin: theme.spacing(1, 2, 0),\n    },\n    tabPanel: {\n        flexGrow: 1,\n        overflow: 'auto',\n        padding: theme.spacing(0, 2),\n    },\n    section: {\n        height: '100%',\n        paddingTop: theme.spacing(2),\n        boxSizing: 'border-box',\n    },\n}))\n\ninterface TipDialogProps {\n    open: boolean\n    onClose?: () => void\n}\n\nconst site = getSiteType()\nexport function TipDialog({ open = false, onClose }: TipDialogProps) {\n    const t = useTipsTrans()\n    const { classes } = useStyles()\n\n    const {\n        tipType,\n        setTipType,\n        amount,\n        token,\n        isSending,\n        isDirty,\n        recipient,\n        recipientAddress,\n        recipientUserId,\n        nonFungibleTokenAddress,\n        nonFungibleTokenContract,\n        nonFungibleTokenId,\n        sendTip,\n        validation: [isValid, validateMessage],\n    } = useTip()\n    const { pluginID } = useNetworkContext()\n    const { data: recipientEns } = useReverseAddress(pluginID, recipientAddress)\n    const wallet = useWallet()\n    const { chainId } = useChainContext()\n\n    const isTokenTip = tipType === TokenType.Fungible\n    const shareText = useMemo(() => {\n        const recipientName = recipient?.label || recipientEns\n        const context = recipientName ? 'name' : 'address'\n        const message = isTokenTip\n            ? t.tip_token_share_post({\n                  amount,\n                  symbol: token?.symbol || 'token',\n                  recipientSnsId: recipientUserId,\n                  recipient: recipientName || recipientAddress,\n                  context,\n              })\n            : t.tip_nft_share_post({\n                  name: nonFungibleTokenContract?.name || 'NFT',\n                  recipientSnsId: recipientUserId,\n                  recipient: recipientName || recipientAddress,\n                  context,\n              })\n        return message\n    }, [amount, isTokenTip, nonFungibleTokenContract?.name, token, recipient, recipientUserId, t, recipientEns])\n\n    const currentTab = isTokenTip ? TokenType.Fungible : TokenType.NonFungible\n    const onTabChange = useCallback((_: unknown, value: TokenType) => {\n        setTipType(value)\n    }, [])\n\n    const buttonLabel = isSending ? t.sending_tip() : isValid || !validateMessage ? t.send_tip() : validateMessage\n\n    const { data: nonFungibleToken } = useNonFungibleAsset(undefined, nonFungibleTokenAddress, nonFungibleTokenId ?? '')\n    const send = useCallback(async () => {\n        const hash = await sendTip()\n        if (typeof hash !== 'string') return\n        Telemetry.captureEvent(EventType.Access, EventID.EntryTimelineTipsSend)\n\n        await TransactionConfirmModal.openAndWaitForClose({\n            shareText,\n            amount,\n            tokenType: tipType,\n            token,\n            nonFungibleTokenId,\n            nonFungibleTokenAddress,\n            messageTextForNFT: t.send_specific_tip_successfully({\n                amount: '1',\n                name: nonFungibleToken?.contract?.name || 'NFT',\n            }),\n            messageTextForFT: t.send_specific_tip_successfully({\n                amount,\n                name: `$${token?.symbol}`,\n            }),\n            title: t.tips(),\n            share,\n        })\n        onClose?.()\n    }, [sendTip, nonFungibleToken, shareText, amount, tipType, token, nonFungibleTokenAddress, nonFungibleTokenId])\n\n    const expectedPluginID = [NetworkPluginID.PLUGIN_EVM, NetworkPluginID.PLUGIN_SOLANA].includes(pluginID)\n        ? pluginID\n        : NetworkPluginID.PLUGIN_EVM\n    const submitDisabled = !isValid || (isSending && !isDirty)\n\n    const pluginIDs = useValueRef(pluginIDsSettings)\n\n    const pluginId = site ? pluginIDs[site] : NetworkPluginID.PLUGIN_EVM\n\n    const { value: smartPayChainId } = useAsync(async () => SmartPayBundler.getSupportedChainId(), [])\n\n    const { setTargetChainId } = TargetRuntimeContext.useContainer()\n\n    useUpdateEffect(() => {\n        if (!!wallet?.owner && smartPayChainId) setTargetChainId(smartPayChainId)\n    }, [!!wallet?.owner, smartPayChainId])\n\n    useMountReport(EventID.EntryTimelineTipsOpen)\n\n    return (\n        <TabContext value={currentTab}>\n            <InjectedDialog\n                open={open}\n                onClose={onClose}\n                classes={{ paper: classes.dialog }}\n                title={t.tips()}\n                titleTabs={\n                    <MaskTabList variant=\"base\" onChange={onTabChange} aria-label=\"Tips\">\n                        <Tab label={t.tips_tab_tokens()} value={TokenType.Fungible} />\n                        <Tab label={t.tips_tab_collectibles()} value={TokenType.NonFungible} />\n                    </MaskTabList>\n                }>\n                <DialogContent className={classes.content}>\n                    <NetworkSection />\n                    <RecipientSection className={classes.recipient} />\n                    <TabPanel value={TokenType.Fungible} className={classes.tabPanel}>\n                        <TokenSection className={classes.section} />\n                    </TabPanel>\n                    <TabPanel value={TokenType.NonFungible} className={classes.tabPanel} style={{ padding: 0 }}>\n                        <NFTSection className={classes.section} />\n                    </TabPanel>\n                    <PluginWalletStatusBar\n                        actualPluginID={pluginId}\n                        expectedPluginID={expectedPluginID}\n                        expectedChainId={chainId}>\n                        <ChainBoundary\n                            expectedPluginID={expectedPluginID}\n                            expectedChainId={chainId}\n                            ActionButtonPromiseProps={{\n                                fullWidth: true,\n                            }}>\n                            <ActionButton fullWidth disabled={submitDisabled} onClick={send}>\n                                {buttonLabel}\n                            </ActionButton>\n                        </ChainBoundary>\n                    </PluginWalletStatusBar>\n                </DialogContent>\n            </InjectedDialog>\n        </TabContext>\n    )\n}\n","import { useCallback, useEffect, useState, type PropsWithChildren } from 'react'\nimport { isEqual } from 'lodash-es'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { TipDialog } from '../components/index.js'\nimport { PluginTipsMessages } from '../messages.js'\nimport type { TipTask } from '../types/index.js'\nimport { TipTaskProvider } from './Tip/TipTaskProvider.js'\nimport { TargetRuntimeContext, ChainRuntime } from './TargetRuntimeContext.js'\n\nlet id = 0\n\ninterface Task extends TipTask {\n    id: number\n}\n\nexport function TipTaskManager({ children }: PropsWithChildren<{}>) {\n    const [tasks, setTasks] = useState<Task[]>(EMPTY_LIST)\n\n    const removeTask = useCallback((task: Task) => {\n        setTasks((list) => list.filter((t) => t.id !== task.id))\n    }, [])\n\n    useEffect(() => {\n        return PluginTipsMessages.tipTask.on((task) => {\n            id += 1\n            setTasks((list) => [...list, { id, ...task }])\n        })\n    }, [])\n\n    useEffect(() => {\n        return PluginTipsMessages.tipTaskUpdate.on((task) => {\n            setTasks((list) => {\n                const included = list.some((t) => t.recipientUserId === task.recipientUserId)\n                if (!included) return list\n                if (list.some((t) => isEqual(task, t))) return list\n                return list.map((t) => (t.recipientUserId === task.recipientUserId ? { ...task, id: t.id } : t))\n            })\n        })\n    }, [])\n\n    // We assume there is only single one tips task at each time.\n    return (\n        <>\n            {tasks.map((task) => {\n                const tipsAccount = task.accounts.find((x) => isSameAddress(x.address, task.recipient))\n                const pluginID = tipsAccount?.pluginID ?? task.accounts[0].pluginID\n                return (\n                    <TargetRuntimeContext.Provider key={task.id} initialState={pluginID}>\n                        <ChainRuntime>\n                            <TipTaskProvider task={task}>\n                                <TipDialog open onClose={() => removeTask(task)} />\n                            </TipTaskProvider>\n                        </ChainRuntime>\n                    </TargetRuntimeContext.Provider>\n                )\n            })}\n            {children}\n        </>\n    )\n}\n","import type { PluginID } from '@masknet/shared-base'\nimport { makeStyles, usePortalShadowRoot } from '@masknet/theme'\nimport { Box, Button, Portal, Typography } from '@mui/material'\nimport React, {\n    cloneElement,\n    createContext,\n    useEffect,\n    useLayoutEffect,\n    useMemo,\n    useRef,\n    useState,\n    type ReactElement,\n} from 'react'\nimport { usePluginGuideRecord } from './usePluginGuideRecord.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        position: 'absolute',\n        borderRadius: '50%',\n    },\n    target: {\n        background: 'transparent',\n    },\n    mask: {\n        position: 'fixed',\n        top: 0,\n        width: '100vw',\n        height: '100vh',\n        background: 'transparent',\n        zIndex: 1000,\n    },\n    card: {\n        position: 'absolute',\n        left: 0,\n        width: 256,\n        padding: theme.spacing(2),\n        borderRadius: theme.spacing(2),\n        background: theme.palette.maskColor.tips,\n        boxShadow: '0 4px 8px rgba(0,0,0,.1)',\n        boxSizing: 'border-box',\n        color: theme.palette.maskColor.bottom,\n        '&.arrow-top:after': {\n            content: '\"\"',\n            display: 'inline-block',\n            width: 0,\n            height: 0,\n            border: 'solid 8px transparent',\n            borderBottomColor: theme.palette.maskColor.tips,\n            borderBottomWidth: '13px',\n            borderTopWidth: 0,\n            position: 'absolute',\n            top: '-13px',\n            left: '24px',\n        },\n        '&.arrow-bottom:after': {\n            content: '\"\"',\n            display: 'inline-block',\n            width: 0,\n            height: 0,\n            border: 'solid 8px transparent',\n            borderTopColor: theme.palette.maskColor.tips,\n            borderTopWidth: '13px',\n            borderBottomWidth: 0,\n            position: 'absolute',\n            bottom: '-13px',\n            left: '24px',\n        },\n    },\n    buttonContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingTop: theme.spacing(2),\n    },\n    button: {\n        width: '100%',\n        borderRadius: '20px',\n        backgroundColor: theme.palette.maskColor.bottom,\n        color: theme.palette.maskColor.main,\n        '&:hover': {\n            backgroundColor: theme.palette.maskColor.bottom,\n        },\n    },\n}))\n\ninterface GuideStepProps {\n    // cloneElement is used.\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    children: ReactElement\n    step: number\n    totalStep: number\n    arrow?: boolean\n    finished?: boolean\n    currentStep: number\n    title: string\n    actionText: string\n    onNext?: () => void\n}\n\nexport function PluginGuide({\n    children,\n    step,\n    totalStep,\n    arrow = true,\n    finished = false,\n    title,\n    actionText,\n    currentStep,\n    onNext,\n}: GuideStepProps) {\n    const { classes, cx } = useStyles()\n    const childrenRef = useRef<HTMLElement>(null)\n\n    const [clientRect, setClientRect] = useState<any>({})\n    const [bottomAvailable, setBottomAvailable] = useState(true)\n\n    const targetVisible = !!clientRect.top && !!clientRect.left && !!clientRect.height && clientRect.width\n    const stepVisible = !finished && currentStep === step && targetVisible\n\n    useLayoutEffect(() => {\n        document.documentElement.style.overflow = stepVisible ? 'hidden' : ''\n        document.documentElement.style.paddingLeft = 'calc(100vw - 100%)'\n    }, [stepVisible])\n\n    useEffect(() => {\n        if (finished) return\n\n        const updateClientRect = () => {\n            const cr = childrenRef.current?.getBoundingClientRect()\n\n            if (cr) {\n                const bottomAvailable = window.innerHeight - cr.height - cr.top > 200\n                setBottomAvailable(bottomAvailable)\n                if (!cr.width) {\n                    setClientRect({ ...cr.toJSON(), top: 30, left: 'calc(100vw - 300px)' })\n                } else {\n                    setClientRect(cr)\n                }\n            }\n        }\n\n        updateClientRect()\n\n        window.addEventListener('resize', updateClientRect)\n\n        return () => {\n            window.removeEventListener('resize', updateClientRect)\n        }\n    }, [childrenRef.current, finished])\n\n    return (\n        <>\n            {cloneElement(children, { ref: childrenRef })}\n            {usePortalShadowRoot((container) => {\n                if (!stepVisible) return null\n                return (\n                    <Portal container={container}>\n                        <div\n                            className={classes.mask}\n                            onClick={(e) => {\n                                e.stopPropagation()\n                            }}>\n                            <div\n                                className={classes.container}\n                                style={{\n                                    top: clientRect.top,\n                                    left: clientRect.left,\n                                }}>\n                                <Box\n                                    className={classes.target}\n                                    style={{\n                                        width: clientRect.width,\n                                        height: clientRect.height,\n                                    }}>\n                                    <div\n                                        onClick={(e) => e.stopPropagation()}\n                                        className={cx(\n                                            classes.card,\n                                            arrow ? (bottomAvailable ? 'arrow-top' : 'arrow-bottom') : '',\n                                        )}\n                                        style={{\n                                            left: clientRect.width < 50 ? -clientRect.width / 2 + 5 : 0,\n                                            [bottomAvailable ? 'top' : 'bottom']: clientRect.height + 16,\n                                        }}>\n                                        {totalStep !== 1 && (\n                                            <div style={{ paddingBottom: '16px' }}>\n                                                <Typography sx={{ fontSize: 20 }}>\n                                                    {currentStep}/{totalStep}\n                                                </Typography>\n                                            </div>\n                                        )}\n                                        <div>\n                                            <Typography fontSize={14} fontWeight={600}>\n                                                {title}\n                                            </Typography>\n                                        </div>\n                                        <div className={classes.buttonContainer}>\n                                            <Button color=\"primary\" className={classes.button} onClick={onNext}>\n                                                {actionText}\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </Box>\n                            </div>\n                        </div>\n                    </Portal>\n                )\n            })}\n        </>\n    )\n}\n\ninterface PluginGuideContext {\n    title?: string\n    actionText?: string\n    finished: boolean\n    currentStep: number\n    totalStep: number\n    nextStep: () => void\n}\nconst PluginGuideContext = createContext<PluginGuideContext>(null!)\n\nexport function PluginGuideProvider({\n    value,\n    children,\n}: React.ProviderProps<{\n    pluginID: PluginID\n    totalStep: number\n    storageKey?: string\n    onFinish?: () => void\n    guides: Array<{\n        title: string\n        actionText: string\n    }>\n}>) {\n    const { guides, totalStep, onFinish, storageKey = 'default', pluginID } = value\n    const { currentStep, finished, nextStep } = usePluginGuideRecord(pluginID, totalStep, storageKey, onFinish)\n    const title = guides[currentStep - 1]?.title\n    const actionText = guides[currentStep - 1]?.actionText\n    const context = useMemo(\n        () => ({\n            title,\n            actionText,\n            finished,\n            currentStep,\n            totalStep,\n            nextStep,\n        }),\n        [title, actionText, finished, currentStep, totalStep, nextStep],\n    )\n    return <PluginGuideContext.Provider value={context}>{children}</PluginGuideContext.Provider>\n}\n","import { Plugin } from '@masknet/plugin-infra'\nimport { useLastRecognizedIdentity } from '@masknet/plugin-infra/content-script'\nimport { PluginGuide } from '@masknet/shared'\nimport type { EnhanceableSite } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Stack } from '@mui/material'\nimport { useTipsUserGuide } from '../../../storage/index.js'\nimport { TipButton } from '../../../components/index.js'\nimport { useTipsTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles<{ buttonSize: number }, 'postTipsButton'>()((theme, { buttonSize }, refs) => ({\n    postButtonWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        color: '#8899a6',\n        position: 'relative',\n        [`& .${refs.postTipsButton}::before`]: {\n            content: '\"\"',\n            width: 34,\n            height: 34,\n            position: 'absolute',\n            borderRadius: '100%',\n            zIndex: 0,\n        },\n        [`&:hover .${refs.postTipsButton}::before`]: {\n            backgroundColor: 'rgba(20,155,240,0.1)',\n        },\n    },\n    mirrorEntryTipsButtonWrapper: {\n        justifyContent: 'flex-end',\n    },\n    postTipsButton: {},\n    roundButton: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderWidth: 1,\n        borderStyle: 'solid',\n        borderColor: theme.palette.maskColor.borderSecondary,\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        color: theme.palette.text.primary,\n        '&:hover': {\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(239,243,244,0.1)' : 'rgba(15,20,25,0.1)',\n        },\n    },\n    followTipsButton: {\n        position: 'absolute',\n        width: buttonSize,\n        height: buttonSize,\n        left: 0,\n        top: 0,\n        borderRadius: '100%',\n    },\n    profileTipsButton: {\n        width: buttonSize,\n        height: buttonSize,\n        borderRadius: '100%',\n    },\n}))\n\nconst { TipsSlot } = Plugin.SiteAdaptor\n\nexport function TipsRealmContent({\n    identity,\n    slot,\n    accounts,\n    iconSize = 20,\n    buttonSize = 34,\n    onStatusUpdate,\n}: Plugin.SiteAdaptor.TipsRealmOptions) {\n    const t = useTipsTrans()\n    const { classes, cx } = useStyles({ buttonSize })\n    const myIdentity = useLastRecognizedIdentity()\n    const userGuide = useTipsUserGuide(myIdentity?.identifier?.network as EnhanceableSite)\n\n    if (!identity || identity.userId === myIdentity?.identifier?.userId) return null\n\n    const buttonClassMap: Partial<Record<Plugin.SiteAdaptor.TipsSlot, string>> = {\n        [TipsSlot.FollowButton]: cx(classes.followTipsButton, classes.roundButton),\n        [TipsSlot.Post]: classes.postTipsButton,\n        [TipsSlot.Profile]: cx(classes.profileTipsButton, classes.roundButton),\n        [TipsSlot.MirrorMenu]: classes.profileTipsButton,\n        [TipsSlot.MirrorEntry]: classes.postTipsButton,\n    }\n\n    const button = (\n        <TipButton\n            accounts={accounts}\n            className={buttonClassMap[slot]}\n            iconSize={iconSize}\n            receiver={identity}\n            onStatusUpdate={onStatusUpdate}\n        />\n    )\n\n    if (slot === TipsSlot.MirrorMenu) {\n        const { finished, step, nextStep } = userGuide\n        return (\n            <PluginGuide\n                step={1}\n                totalStep={1}\n                finished={finished}\n                currentStep={step}\n                onNext={nextStep}\n                title={t.tips_guide_description()}\n                actionText={t.tips_guide_action()}>\n                <Stack\n                    display=\"flex\"\n                    width=\"38px\"\n                    height=\"38px\"\n                    position=\"relative\"\n                    top={0}\n                    alignItems=\"center\"\n                    justifyContent=\"center\">\n                    {button}\n                </Stack>\n            </PluginGuide>\n        )\n    }\n\n    if (slot === TipsSlot.Post || slot === TipsSlot.MirrorEntry) {\n        return (\n            <div\n                className={cx(\n                    classes.postButtonWrapper,\n                    slot === TipsSlot.MirrorEntry ? classes.mirrorEntryTipsButtonWrapper : undefined,\n                )}>\n                {button}\n            </div>\n        )\n    }\n\n    return button\n}\n","import { Trans } from 'react-i18next'\nimport { Icons } from '@masknet/icons'\nimport type { Plugin } from '@masknet/plugin-infra'\nimport { PluginID } from '@masknet/shared-base'\nimport { MaskColorVar } from '@masknet/theme'\nimport { Link } from '@mui/material'\nimport { base } from '../base.js'\nimport { TipTaskManager } from '../contexts/index.js'\nimport { guideStorageDefaultValue, setupStorage, storageDefaultValue } from '../storage/index.js'\nimport { TipsRealmContent } from './components/TipsRealmContent/index.js'\n\nconst site: Plugin.SiteAdaptor.Definition = {\n    ...base,\n    init(_, context) {\n        const storage = context.createKVStorage('memory', storageDefaultValue)\n        const guideStorage = context.createKVStorage('persistent', guideStorageDefaultValue)\n        setupStorage(storage, guideStorage)\n    },\n    ApplicationEntries: [\n        (() => {\n            const name = base.name\n            const icon = <Icons.Tips size={36} />\n            const iconFilterColor = 'rgba(247, 147, 30, 0.3)'\n            return {\n                category: 'dapp',\n                description: (\n                    <Trans\n                        ns={PluginID.Tips}\n                        i18nKey=\"description\"\n                        components={{\n                            Link: (\n                                <Link\n                                    href=\"https://next.id/\"\n                                    rel=\"noopener noreferrer\"\n                                    target=\"_blank\"\n                                    style={{ color: MaskColorVar.primary }}\n                                />\n                            ),\n                        }}\n                    />\n                ),\n                ApplicationEntryID: base.ID,\n                icon,\n                name,\n                iconFilterColor,\n                nextIdRequired: true,\n                entryWalletConnectedNotRequired: true,\n            }\n        })(),\n    ],\n    GlobalInjection() {\n        return <TipTaskManager />\n    },\n    TipsRealm: {\n        ID: `${base.ID}_tips`,\n        priority: 1,\n        UI: {\n            Content(props) {\n                return <TipsRealmContent {...props} />\n            },\n        },\n    },\n}\n\nexport default site\n","import { useAsync } from 'react-use'\nimport { getUserIdentity } from './context.js'\nimport { useSocialIdentity } from './useSocialIdentity.js'\n\nexport function useSocialIdentityByUserId(userId?: string) {\n    const { value: identity } = useAsync(async () => {\n        if (!userId) return\n        return getUserIdentity?.(userId)\n    }, [userId])\n    return useSocialIdentity(identity)\n}\n","import { resolveNetworkToNextIDPlatform } from '@masknet/shared-base'\nimport { useQuery } from '@tanstack/react-query'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { useBaseUIRuntime } from '@masknet/shared'\n\nexport function useProfilePublicKey(userId?: string) {\n    const { networkIdentifier } = useBaseUIRuntime()\n    const platform = resolveNetworkToNextIDPlatform(networkIdentifier)\n    return useQuery({\n        queryKey: ['next-id', 'lasted-active', platform, userId],\n        queryFn: async () => {\n            if (!userId || !platform) return\n            const binding = await NextIDProof.queryLatestBindingByPlatform(platform, userId)\n            return binding?.persona\n        },\n    })\n}\n","import { useMemo } from 'react'\nimport type { IdentityResolved } from '@masknet/plugin-infra'\nimport { EMPTY_LIST, PluginID } from '@masknet/shared-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { useHiddenAddressConfigOf, useSocialAccountsAll } from '@masknet/web3-hooks-base'\nimport { signWithPersona } from '@masknet/plugin-infra/dom/context'\n\n/**\n * Get Tips accounts, removing the hidden ones,\n * and put the default one at the front.\n */\nexport function useTipsAccounts(identity: IdentityResolved | null | undefined, personaPubkey: string | undefined) {\n    const { data: socialAccounts = EMPTY_LIST } = useSocialAccountsAll(identity)\n    const userId = identity?.identifier?.userId\n    const { data: hiddenAddresses } = useHiddenAddressConfigOf(\n        personaPubkey,\n        PluginID.Web3Profile,\n        userId,\n        signWithPersona,\n    )\n    return useMemo(() => {\n        if (!hiddenAddresses?.length) return socialAccounts\n        const list = socialAccounts\n        return list.filter((x) => !hiddenAddresses.some((y) => isSameAddress(y, x.address)))\n    }, [hiddenAddresses, socialAccounts, userId])\n}\n","import { Icons } from '@masknet/icons'\nimport { useCurrentVisitingIdentity, useSocialIdentityByUserId } from '@masknet/plugin-infra/content-script'\nimport {\n    EMPTY_LIST,\n    NetworkPluginID,\n    SocialAddressType,\n    type ProfileIdentifier,\n    type SocialAccount,\n} from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useNetworkContext } from '@masknet/web3-hooks-base'\nimport { useCallback, useEffect, useMemo, type HTMLProps, type MouseEventHandler } from 'react'\nimport { useProfilePublicKey } from '../../hooks/useProfilePublicKey.js'\nimport { PluginTipsMessages } from '../../messages.js'\nimport { useTipsAccounts } from './useTipsAccounts.js'\n\ninterface Props extends HTMLProps<HTMLDivElement> {\n    // This is workaround solution, link issue mf-2536 and pr #7576.\n    // Should refactor social account to support multi-account for one post.\n    accounts?: Array<SocialAccount<Web3Helper.ChainIdAll>>\n    recipient?: string\n    receiver?: ProfileIdentifier\n    buttonSize?: number\n    iconSize?: number\n    onStatusUpdate?(disabled: boolean): void\n}\n\nconst useStyles = makeStyles<{ iconSize: number }>()((theme, props) => ({\n    tipButton: {\n        cursor: 'pointer',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontFamily: '-apple-system, system-ui, sans-serif',\n    },\n    icon: {\n        width: props.iconSize,\n        height: props.iconSize,\n    },\n}))\n\nexport function TipButton(props: Props) {\n    const {\n        className,\n        accounts: receivingAccounts = EMPTY_LIST,\n        receiver,\n        recipient,\n        children,\n        iconSize = 24,\n        onStatusUpdate,\n        ...rest\n    } = props\n    const { classes, cx } = useStyles({ iconSize })\n\n    const { data: personaPubkey, isLoading: loadingPersona } = useProfilePublicKey(receiver?.userId)\n    const receiverUserId = receiver?.userId\n\n    const { pluginID } = useNetworkContext()\n    const visitingIdentity = useCurrentVisitingIdentity()\n    const { data: identity } = useSocialIdentityByUserId(receiverUserId)\n\n    const isVisitingUser = visitingIdentity?.identifier?.userId === receiverUserId\n    const isRuntimeAvailable = useMemo(() => {\n        switch (pluginID) {\n            case NetworkPluginID.PLUGIN_EVM:\n                return true\n            case NetworkPluginID.PLUGIN_SOLANA:\n                return isVisitingUser\n        }\n        return false\n    }, [pluginID, isVisitingUser])\n\n    const accountsByIdentity = useTipsAccounts(identity, personaPubkey)\n    const accounts = useMemo(() => {\n        return [...receivingAccounts, ...accountsByIdentity]\n            .sort((a, z) => {\n                const aHasNextId = a.supportedAddressTypes?.includes(SocialAddressType.NEXT_ID)\n                const zHasNextId = z.supportedAddressTypes?.includes(SocialAddressType.NEXT_ID)\n                if (aHasNextId === zHasNextId) return 0\n                return aHasNextId ? -1 : zHasNextId ? 1 : 0\n            })\n            .sort((a, z) => {\n                if (a.pluginID === z.pluginID) return 0\n                return a.pluginID === pluginID ? -1 : 1\n            })\n    }, [receivingAccounts, accountsByIdentity, pluginID])\n\n    const disabled = loadingPersona || accounts.length === 0 || !isRuntimeAvailable\n\n    useEffect(() => {\n        onStatusUpdate?.(disabled)\n    }, [disabled])\n\n    const createTipTask: MouseEventHandler<HTMLDivElement> = useCallback(\n        async (evt) => {\n            evt.stopPropagation()\n            evt.preventDefault()\n            if (disabled) return\n            if (!accounts.length || !receiverUserId) return\n            PluginTipsMessages.tipTask.sendToLocal({\n                recipient,\n                recipientUserId: receiverUserId,\n                accounts,\n            })\n        },\n        [disabled, recipient, accounts, receiverUserId],\n    )\n\n    useEffect(() => {\n        if (!receiverUserId || !accounts.length) return\n        PluginTipsMessages.tipTaskUpdate.sendToLocal({\n            recipient,\n            recipientUserId: receiverUserId,\n            accounts,\n        })\n    }, [recipient, receiverUserId, accounts])\n\n    if (disabled) return null\n\n    return (\n        <div className={cx(className, classes.tipButton)} {...rest} role=\"button\" onClick={createTipTask}>\n            <Icons.TipCoin className={classes.icon} />\n            {children}\n        </div>\n    )\n}\n","import { PluginID } from '@masknet/shared-base'\nimport { getPluginMessage, type PluginMessageEmitter } from '@masknet/plugin-infra'\nimport type { TipTask } from './types/index.js'\n\ninterface TipMessage {\n    tipTask: TipTask\n    tipTaskUpdate: TipTask\n}\n\nimport.meta.webpackHot?.accept()\nexport const PluginTipsMessages: PluginMessageEmitter<TipMessage> = getPluginMessage(PluginID.Tips)\n","import { createContext, useContext, useRef } from 'react'\nimport type { BuildInfoFile } from '@masknet/flags'\nimport { useBuildInfo_raw } from '../../index.js'\nexport interface ErrorBoundaryError {\n    /** Type of the Error */\n    type: string\n    /** The Error message */\n    message: string\n    /** The error stack */\n    stack: string\n}\n/**\n * Provide the build info for CrashUI\n */\nconst BuildInfo = createContext<() => BuildInfoFile>(useBuildInfo_raw)\nBuildInfo.displayName = 'BuildInfo'\n\nexport function BuildInfoProvider(props: React.PropsWithChildren<{ value: () => BuildInfoFile }>) {\n    return <BuildInfo.Provider {...props} />\n}\nexport function useBuildInfo() {\n    return useRef(useContext(BuildInfo)).current()\n}\nexport function useBuildInfoMarkdown() {\n    const env = useBuildInfo()\n    const gitInfo = env.COMMIT_HASH\n        ? `\n## Git (${env.DIRTY ? '*' : ''}):\n${env.COMMIT_HASH} (${env.BRANCH_NAME})`\n        : ''\n\n    const buildInfoMarkdown =\n        `## Build info\n- Version: ${env.VERSION || 'unknown'}\n- NODE_ENV: ${process.env.NODE_ENV || 'unknown'}\n- userAgent: ${navigator.userAgent}\n- build: ${env.channel || 'unknown'}\n- BUILD_DATE: ${env.BUILD_DATE || 'unknown'}\n` + gitInfo\n    return buildInfoMarkdown\n}\n","import { Icons } from '@masknet/icons'\nimport { SocialAddressType, type SocialAccount } from '@masknet/shared-base'\nimport { makeStyles, ShadowRootTooltip } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { resolveSocialAddressLink } from '@masknet/web3-shared-base'\nimport { Typography, type TooltipProps, Link } from '@mui/material'\nimport { compact } from 'lodash-es'\nimport { Linking } from '../../../index.js'\nimport { useSharedTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        icon: {\n            width: 20,\n            height: 20,\n        },\n        iconStack: {\n            display: 'inline-flex',\n            alignItems: 'center',\n        },\n        stackedIcon: {\n            marginRight: -6,\n            display: 'inline-flex',\n            alignItems: 'center',\n        },\n        linking: {\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n        },\n        link: {\n            color: theme.palette.maskColor.primary,\n            textDecoration: 'none',\n        },\n        actionIcon: {\n            marginLeft: theme.spacing(0.5),\n            color: theme.palette.maskColor.main,\n        },\n        roundedIcon: {\n            borderRadius: '50%',\n        },\n        tooltip: {\n            maxWidth: 'unset',\n        },\n    }\n})\n\nenum AddressPlatform {\n    Facebook = 'facebook',\n    Twitter = 'twitter',\n    NextId = 'next_id',\n}\n\ninterface AccountTooltipsProps extends Omit<TooltipProps, 'title'> {\n    type?: SocialAddressType\n    platform?: AddressPlatform\n}\n\nfunction AccountTooltips({ platform, type, children }: AccountTooltipsProps) {\n    const { classes } = useStyles()\n    const t = useSharedTrans()\n    return (\n        <ShadowRootTooltip\n            classes={{ tooltip: classes.tooltip }}\n            disableInteractive\n            title={\n                <Typography fontSize={14} lineHeight=\"18px\">\n                    {SocialAddressType.Address === type\n                        ? t.account_icon_tooltips_only({\n                              context: platform!,\n                          })\n                        : t.account_icon_tooltips({\n                              source: type?.replace('_', ' ') ?? '',\n                              context: platform,\n                          })}\n                </Typography>\n            }\n            arrow>\n            {children}\n        </ShadowRootTooltip>\n    )\n}\n\nexport interface AccountIconProps extends withClasses<'icon'> {\n    socialAccount: SocialAccount<Web3Helper.ChainIdAll>\n}\n\nexport function AccountIcons({ socialAccount, classes: externalClasses }: AccountIconProps) {\n    const t = useSharedTrans()\n    const { classes, cx, theme } = useStyles(undefined, { props: { classes: externalClasses } })\n\n    const { supportedAddressTypes } = socialAccount\n    if (!supportedAddressTypes?.length) return null\n\n    const iconStyle =\n        theme.palette.mode === 'light'\n            ? {\n                  boxShadow: '0px 6px 12px rgba(28, 104, 243, 0.2)',\n                  backdropFilter: 'blur(8px)',\n              }\n            : undefined\n\n    const fromTwitter = [\n        SocialAddressType.ENS,\n        SocialAddressType.SPACE_ID,\n        SocialAddressType.ARBID,\n        SocialAddressType.Lens,\n        SocialAddressType.TwitterBlue,\n        SocialAddressType.Address,\n    ].find((x) => supportedAddressTypes.includes(x))\n    const fromNextId = supportedAddressTypes.includes(SocialAddressType.NEXT_ID)\n\n    const normalClasses = cx(classes.actionIcon, classes.icon)\n    const roundedClasses = cx(classes.actionIcon, classes.icon, classes.roundedIcon)\n    const configs = compact([\n        fromNextId\n            ? {\n                  link: resolveSocialAddressLink(SocialAddressType.NEXT_ID),\n                  platform: AddressPlatform.NextId,\n                  icon: <Icons.NextIDMini className={normalClasses} style={{ ...iconStyle, width: 32, height: 18 }} />,\n              }\n            : null,\n        fromTwitter\n            ? {\n                  platform: AddressPlatform.Twitter,\n                  type: fromTwitter,\n                  icon: <Icons.TwitterXRound className={roundedClasses} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.CyberConnect)\n            ? {\n                  link: resolveSocialAddressLink(SocialAddressType.CyberConnect),\n                  type: SocialAddressType.CyberConnect,\n                  icon: <Icons.CyberConnect className={normalClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n\n        supportedAddressTypes.includes(SocialAddressType.Leaderboard)\n            ? {\n                  link: resolveSocialAddressLink(SocialAddressType.Leaderboard),\n                  type: SocialAddressType.Leaderboard,\n                  icon: <Icons.Leaderboard className={normalClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.Sybil)\n            ? {\n                  link: resolveSocialAddressLink(SocialAddressType.Sybil),\n                  type: SocialAddressType.Sybil,\n                  icon: <Icons.Sybil className={roundedClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.Mask)\n            ? {\n                  type: SocialAddressType.Mask,\n                  icon: <Icons.MaskBlue className={roundedClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.Firefly)\n            ? {\n                  type: SocialAddressType.Firefly,\n                  icon: <Icons.Firefly className={normalClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.OpenSea)\n            ? {\n                  type: SocialAddressType.OpenSea,\n                  icon: <Icons.OpenSea className={roundedClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.RSS3)\n            ? {\n                  type: SocialAddressType.RSS3,\n                  icon: <Icons.RSS3 className={roundedClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.SPACE_ID)\n            ? {\n                  type: SocialAddressType.SPACE_ID,\n                  icon: <Icons.SpaceId className={roundedClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.Lens)\n            ? {\n                  type: SocialAddressType.Lens,\n                  icon: <Icons.Lens className={roundedClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n    ])\n\n    if (configs.length <= 3) {\n        return (\n            <>\n                {configs.map(({ platform, type, link, icon }, i) => {\n                    const node = (\n                        <AccountTooltips key={i} platform={platform} type={type}>\n                            {icon}\n                        </AccountTooltips>\n                    )\n                    if (link)\n                        return (\n                            <Linking key={i} href={link} LinkProps={{ className: classes.linking }}>\n                                {node}\n                            </Linking>\n                        )\n                    return node\n                })}\n            </>\n        )\n    }\n    const sources = compact(\n        configs.flatMap((config, i) => {\n            return config.type && config.link\n                ? [\n                      <Link\n                          className={classes.link}\n                          href={config.link}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          key={config.type}>\n                          {config.type}\n                      </Link>,\n                      i === configs.length ? '' : ', ',\n                  ]\n                : null\n        }),\n    )\n    return (\n        <ShadowRootTooltip\n            classes={{ tooltip: classes.tooltip }}\n            title={\n                <Typography fontSize={14} lineHeight=\"18px\" component=\"div\">\n                    {t.account_icon_merged_tooltip({\n                        context: fromTwitter ? AddressPlatform.Twitter : fromNextId ? AddressPlatform.NextId : 'normal',\n                    })}\n                    <>{sources}</>\n                </Typography>\n            }>\n            <span className={classes.iconStack}>\n                {configs.map(({ icon }, i) => {\n                    return (\n                        <span className={classes.stackedIcon} key={i}>\n                            {icon}\n                        </span>\n                    )\n                })}\n            </span>\n        </ShadowRootTooltip>\n    )\n}\n","import { memo, useMemo } from 'react'\nimport { Card, Link } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { useWeb3Others, useNetworkDescriptor } from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { AssetPreviewer, ImageIcon } from '@masknet/shared'\nimport { NETWORK_DESCRIPTORS } from '@masknet/web3-shared-evm'\nimport type { SourceType } from '@masknet/web3-shared-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: '8px 8px 0 0',\n        position: 'absolute',\n        zIndex: 1,\n        backgroundColor: theme.palette.mode === 'light' ? '#F7F9FA' : '#2F3336',\n        width: '100%',\n        height: '100%',\n    },\n    fallbackImage: {\n        minHeight: '0 !important',\n        maxWidth: 'none',\n        width: 30,\n        height: 30,\n    },\n    blocker: {\n        position: 'absolute',\n        zIndex: 2,\n        width: '100%',\n        height: '100%',\n    },\n    linkWrapper: {\n        position: 'relative',\n        display: 'block',\n    },\n    networkIcon: {\n        position: 'absolute',\n        top: 6,\n        left: 6,\n    },\n}))\n\nexport interface CollectibleCardProps {\n    className?: string\n    provider: SourceType\n    asset: Web3Helper.NonFungibleAssetAll\n    link?: string\n    pluginID?: NetworkPluginID\n    disableLink?: boolean\n    showNetworkIcon?: boolean\n}\n\nexport const CollectibleCard = memo(function CollectibleCard({\n    className,\n    asset,\n    pluginID,\n    disableLink,\n    showNetworkIcon,\n    ...rest\n}: CollectibleCardProps) {\n    const { classes, cx } = useStyles()\n    const Others = useWeb3Others()\n\n    const networkDescriptor = useNetworkDescriptor(pluginID)\n\n    const networkIcon = useMemo(() => {\n        // None is better than incorrect.\n        if (!pluginID) return\n        if (pluginID === NetworkPluginID.PLUGIN_EVM) {\n            return NETWORK_DESCRIPTORS.find((network) => network?.chainId === asset.chainId)?.icon\n        }\n        return networkDescriptor?.icon\n    }, [asset.chainId, pluginID, networkDescriptor?.icon])\n\n    const content = (\n        <>\n            <div className={classes.blocker} />\n            <Card className={classes.root}>\n                <div>\n                    <AssetPreviewer\n                        url={asset.metadata?.mediaURL || asset.metadata?.imageURL}\n                        classes={{\n                            fallbackImage: classes.fallbackImage,\n                        }}\n                    />\n                    {networkIcon && showNetworkIcon !== false ? (\n                        <ImageIcon icon={networkIcon} size={24} className={classes.networkIcon} />\n                    ) : null}\n                </div>\n            </Card>\n        </>\n    )\n\n    if (disableLink) return <div className={cx(classes.linkWrapper, className)}>{content}</div>\n\n    return (\n        <Link\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={\n                asset.link ?? Others.explorerResolver.nonFungibleTokenLink(asset.chainId, asset.address, asset.tokenId)\n            }\n            className={cx(classes.linkWrapper, className)}\n            {...rest}>\n            {content}\n        </Link>\n    )\n})\n\nCollectibleCard.displayName = 'CollectibleCard'\n","import { forwardRef, type HTMLProps, memo } from 'react'\nimport { useWeb3Others } from '@masknet/web3-hooks-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Checkbox, Radio, Skeleton, Typography, useForkRef } from '@mui/material'\nimport { CollectibleCard, type CollectibleCardProps } from './CollectibleCard.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        position: 'relative',\n        zIndex: 0,\n        background: theme.palette.maskColor.bg,\n        borderRadius: theme.spacing(1),\n    },\n    inactive: {\n        opacity: 0.5,\n    },\n    selectable: {\n        cursor: 'pointer',\n    },\n    collectibleCard: {\n        width: '100%',\n        height: '100%',\n        aspectRatio: '1/1',\n        borderRadius: theme.spacing(1),\n        overflow: 'hidden',\n    },\n    description: {\n        alignSelf: 'stretch',\n        borderRadius: theme.spacing(0, 0, 1, 1),\n    },\n    name: {\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        lineHeight: '36px',\n        minHeight: '1em',\n        textIndent: '8px',\n    },\n    select: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: 6,\n        zIndex: 9,\n    },\n}))\n\nexport interface ChangeEventOptions {\n    checked: boolean\n    value: string\n}\nexport interface SelectableProps {\n    selectable?: boolean\n    checked?: boolean\n    inactive?: boolean\n    multiple?: boolean\n    value?: string\n    onChange?(options: ChangeEventOptions): void\n}\n\ninterface CollectibleItemProps\n    extends Omit<HTMLProps<HTMLDivElement>, keyof SelectableProps>,\n        CollectibleCardProps,\n        SelectableProps {}\n\n// TODO lazy render in big list.\nexport const CollectibleItem = memo(\n    forwardRef<HTMLDivElement, CollectibleItemProps>(function CollectibleItem(props: CollectibleItemProps, ref) {\n        const {\n            provider,\n            asset,\n            pluginID,\n            checked,\n            inactive,\n            selectable,\n            multiple,\n            value,\n            onChange,\n            className,\n            showNetworkIcon,\n            disableLink,\n            ...rest\n        } = props\n        const { classes, cx } = useStyles()\n        const Others = useWeb3Others()\n\n        const uiTokenId = Others.formatTokenId(asset.tokenId, 4)\n\n        const SelectableButton = selectable && multiple ? Checkbox : Radio\n        const scrollIntoViewRef = (node: HTMLDivElement) => {\n            if (!checked || multiple || !node) return\n            node.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\n        }\n        const forkedRef = useForkRef(ref, scrollIntoViewRef)\n\n        return (\n            <div\n                className={cx(classes.card, className, {\n                    [classes.inactive]: inactive,\n                    [classes.selectable]: selectable,\n                })}\n                onClick={() => {\n                    if (selectable) {\n                        onChange?.({\n                            checked: !checked,\n                            value: value!,\n                        })\n                    }\n                }}\n                {...rest}\n                ref={forkedRef}>\n                <CollectibleCard\n                    className={classes.collectibleCard}\n                    asset={asset}\n                    provider={provider}\n                    pluginID={pluginID}\n                    showNetworkIcon={showNetworkIcon}\n                    disableLink={disableLink || selectable}\n                />\n                {asset.metadata?.name || uiTokenId ? (\n                    <div className={classes.description}>\n                        <Typography className={classes.name} color=\"textPrimary\" variant=\"body2\">\n                            {asset.metadata?.name || uiTokenId}\n                        </Typography>\n                    </div>\n                ) : null}\n                {checked ? <SelectableButton className={classes.select} value={value} checked /> : null}\n            </div>\n        )\n    }),\n)\n\nexport function CollectibleItemSkeleton(props: HTMLProps<HTMLDivElement>) {\n    const { classes, cx } = useStyles()\n    return (\n        <div {...props} className={cx(classes.card, props.className)}>\n            <div className={classes.collectibleCard}>\n                <Skeleton animation=\"wave\" variant=\"rectangular\" height=\"100%\" />\n            </div>\n            <div className={classes.description}>\n                <Typography className={classes.name} color=\"textPrimary\" variant=\"body2\">\n                    <Skeleton animation=\"wave\" variant=\"text\" height=\"100%\" />\n                </Typography>\n            </div>\n        </div>\n    )\n}\n","import { range } from 'lodash-es'\nimport type { HTMLProps } from 'react'\nimport { CollectibleItemSkeleton } from './CollectibleItem.js'\n\ninterface Props extends Pick<HTMLProps<HTMLDivElement>, 'className'> {}\n\nexport function LoadingSkeleton({ className }: Props) {\n    return (\n        <div className={className}>\n            {range(7).map((i) => (\n                <CollectibleItemSkeleton key={i} />\n            ))}\n        </div>\n    )\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport { ShadowRootTooltip, makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useWeb3Others } from '@masknet/web3-hooks-base'\nimport { SourceType } from '@masknet/web3-shared-base'\nimport { Box, type BoxProps } from '@mui/material'\nimport { memo, useCallback, useMemo, useRef } from 'react'\nimport { useSharedTrans } from '../../../index.js'\nimport { ReloadStatus } from '../index.js'\nimport { CollectibleItem, type ChangeEventOptions, type SelectableProps } from './CollectibleItem.js'\nimport { LoadingSkeleton } from './LoadingSkeleton.js'\nimport type { CollectibleGridProps } from './type.js'\n\nconst useStyles = makeStyles<CollectibleGridProps>()((theme, { columns = 3, gap = 2 }) => {\n    const gapIsNumber = typeof gap === 'number'\n    return {\n        root: {\n            width: '100%',\n            display: 'grid',\n            gridTemplateColumns: `repeat(${columns}, 1fr)`,\n            gridGap: gapIsNumber ? theme.spacing(gap) : gap,\n            padding: gapIsNumber ? theme.spacing(0, gap, 0) : `0 ${gap} 0`,\n            boxSizing: 'border-box',\n        },\n        collectibleItem: {\n            overflowX: 'hidden',\n        },\n        text: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: 260,\n        },\n        list: {\n            overflow: 'auto',\n            position: 'relative',\n        },\n    }\n})\n\nexport interface CollectibleListProps\n    extends CollectibleGridProps,\n        Omit<SelectableProps, 'value' | 'checked' | 'onChange'>,\n        Omit<BoxProps, 'gap' | 'onChange'> {\n    pluginID?: NetworkPluginID\n    collectibles: Web3Helper.NonFungibleAssetAll[]\n    error?: string\n    loading: boolean\n    disableLink?: boolean\n    showNetworkIcon?: boolean\n    /**\n     * Collectible key, in format of `${contractAddress}_${tokenId}`.\n     * You can also customize, but don't forget pass a customized getCollectibleKey as well.\n     * */\n    value?: string | string[]\n    getCollectibleKey?(collectible: Web3Helper.NonFungibleAssetAll): string\n    retry(): void\n    onChange?(value: string | string[] | null): void\n}\n\nconst getKey = (collectible: Web3Helper.NonFungibleAssetAll) => {\n    return `${collectible.address}_${collectible.tokenId}`\n}\n\nexport const CollectibleList = memo(function CollectibleList(props: CollectibleListProps) {\n    const {\n        pluginID,\n        collectibles,\n        columns,\n        gap,\n        loading,\n        error,\n        selectable,\n        multiple,\n        disableLink,\n        showNetworkIcon,\n        value,\n        retry,\n        getCollectibleKey = getKey,\n        onChange,\n        className,\n        ...rest\n    } = props\n    const t = useSharedTrans()\n    const { classes, cx } = useStyles({ columns, gap })\n    const Others = useWeb3Others()\n\n    const availableKeys = useMemo(() => collectibles.map(getCollectibleKey), [collectibles])\n    const handleItemChange = useCallback(\n        (event: ChangeEventOptions) => {\n            if (multiple) {\n                const newValue = availableKeys.filter((x) => {\n                    return x === event.value ? event.checked : value?.includes(x)\n                })\n                onChange?.(newValue)\n            } else {\n                onChange?.(event.checked ? event.value : null)\n            }\n        },\n        [multiple, availableKeys, value],\n    )\n    const listRef = useRef<typeof Box>(null)\n\n    return (\n        <Box className={cx(classes.list, className)} {...rest} ref={listRef}>\n            {loading && collectibles.length === 0 ? (\n                <LoadingSkeleton className={classes.root} />\n            ) : error || (collectibles.length === 0 && !loading) ? (\n                <ReloadStatus className={classes.text} message={t.no_collectible_found()} onRetry={retry} />\n            ) : (\n                <Box className={classes.root}>\n                    {collectibles.map((token, index) => {\n                        const name = token.metadata?.name\n                        const uiTokenId = Others.formatTokenId(token.tokenId, 4) ?? `#${token.tokenId}`\n                        const title = `${name || token.collection?.name || token.contract?.name} ${uiTokenId}`\n                        const collectibleKey = getCollectibleKey(token)\n                        const checked = selectable ? value?.includes(collectibleKey) : false\n                        const inactive = value ? !!value?.length && !checked : false\n                        return (\n                            <ShadowRootTooltip\n                                key={index}\n                                title={title}\n                                placement=\"top\"\n                                disableInteractive\n                                PopperProps={{\n                                    placement: 'top',\n                                    popperOptions: {\n                                        strategy: 'absolute',\n                                    },\n                                    modifiers: [\n                                        {\n                                            name: 'preventOverflow',\n                                            options: {\n                                                rootBoundary: listRef.current,\n                                                boundary: listRef.current,\n                                            },\n                                        },\n                                    ],\n                                }}\n                                arrow>\n                                <CollectibleItem\n                                    className={classes.collectibleItem}\n                                    asset={token}\n                                    provider={SourceType.OpenSea}\n                                    pluginID={pluginID}\n                                    selectable={selectable}\n                                    multiple={multiple}\n                                    disableLink={disableLink}\n                                    showNetworkIcon={showNetworkIcon}\n                                    checked={checked}\n                                    inactive={inactive}\n                                    value={collectibleKey}\n                                    onChange={handleItemChange}\n                                />\n                            </ShadowRootTooltip>\n                        )\n                    })}\n                </Box>\n            )}\n        </Box>\n    )\n})\n","import { memo, useEffect, useRef } from 'react'\nimport { useIntersectionObserver } from '@react-hookz/web'\nimport { Stack, type StackProps } from '@mui/material'\n\ninterface ElementAnchorProps extends StackProps {\n    callback: (intersection: IntersectionObserverEntry | undefined) => void\n}\n\nexport const ElementAnchor = memo<ElementAnchorProps>(({ callback, children, ...rest }) => {\n    const elementRef = useRef<HTMLDivElement>(null)\n    const intersection = useIntersectionObserver(elementRef, {\n        rootMargin: '200px',\n    })\n\n    const callbackRef = useRef(callback)\n    callbackRef.current = callback\n    useEffect(() => {\n        if (!intersection?.isIntersecting) return\n        callbackRef.current(intersection)\n    }, [intersection])\n\n    return (\n        <Stack pt={1} ref={elementRef} justifyContent=\"center\" alignItems=\"center\" direction=\"row\" {...rest}>\n            {children}\n        </Stack>\n    )\n})\n\nElementAnchor.displayName = 'ElementAnchor'\n","import { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Typography, type BoxProps } from '@mui/material'\nimport { memo } from 'react'\n\nconst useStyles = makeStyles()((theme) => ({\n    statusBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    text: {\n        color: theme.palette.maskColor.second,\n        fontSize: '14px',\n        fontWeight: 400,\n        marginTop: theme.spacing(1.5),\n    },\n}))\n\ninterface Props extends BoxProps {\n    iconSize?: number\n}\n\nexport const EmptyStatus = memo(function EmptyStatus({ className, children, iconSize = 32, ...rest }: Props) {\n    const { classes, cx } = useStyles()\n    return (\n        <Box className={cx(classes.statusBox, className)} p={2} {...rest}>\n            <Icons.EmptySimple size={iconSize} />\n            <Typography className={classes.text} component=\"div\">\n                {children}\n            </Typography>\n        </Box>\n    )\n})\n","import { Link, type LinkProps, Typography, type TypographyProps } from '@mui/material'\n\nexport interface LinkingProps {\n    href?: string\n    children?: React.ReactNode\n    LinkProps?: Partial<LinkProps>\n    TypographyProps?: Partial<TypographyProps>\n}\n\nexport function Linking(props: LinkingProps) {\n    const { href, LinkProps, TypographyProps, children } = props\n    if (href && URL.canParse(href)) {\n        const { hostname } = new URL(href)\n        return (\n            <Link\n                color={(theme) => theme.palette.maskColor.main}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={props.href}\n                {...LinkProps}>\n                {children ? (\n                    children\n                ) : (\n                    <Typography variant=\"body2\" component=\"span\" {...TypographyProps}>\n                        {hostname.replace(/^www./i, '')}\n                    </Typography>\n                )}\n            </Link>\n        )\n    } else {\n        return (\n            <span className={LinkProps?.className} title={LinkProps?.title}>\n                {children ? (\n                    children\n                ) : (\n                    <Typography variant=\"body2\" component=\"span\" {...TypographyProps}>\n                        {href}\n                    </Typography>\n                )}\n            </span>\n        )\n    }\n}\n","import { memo } from 'react'\nimport { Button, type ButtonProps, Stack, Typography } from '@mui/material'\nimport { useSharedTrans } from '../../../locales/index.js'\n\ninterface RetryHintProps {\n    hint?: boolean\n    retry?(): void\n    ButtonProps?: ButtonProps\n}\n\nexport const RetryHint = memo<RetryHintProps>(({ retry, hint = true, ButtonProps }) => {\n    const t = useSharedTrans()\n    return (\n        <Stack justifyContent=\"center\" direction=\"row\" alignItems=\"center\" height={hint ? '100%' : '100px'}>\n            <Stack gap={2.75}>\n                {hint ? (\n                    <Typography textAlign=\"center\" fontSize={12} fontWeight={700}>\n                        {t.load_failed()}\n                    </Typography>\n                ) : null}\n                <Button {...ButtonProps} size=\"small\" style={{ borderRadius: 16 }} onClick={() => retry?.()}>\n                    {t.load_retry()}\n                </Button>\n            </Stack>\n        </Stack>\n    )\n})\n\nRetryHint.displayName = 'RetryHint'\n","import { type ComponentProps, memo } from 'react'\nimport { type NetworkPluginID } from '@masknet/shared-base'\nimport { useReverseAddress, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { Typography } from '@mui/material'\nimport { ShadowRootTooltip, useBoundedPopperProps } from '@masknet/theme'\nimport { isSameAddress } from '@masknet/web3-shared-base'\n\nexport interface ReverseAddressProps extends ComponentProps<typeof Typography> {\n    address: string\n    pluginID?: NetworkPluginID\n    size?: number\n    // declare explicitly to avoid ts warning\n    component?: string\n}\n\nexport const ReversedAddress = memo<ReverseAddressProps>(({ address, pluginID, size = 4, ...rest }) => {\n    const { data: domain } = useReverseAddress(pluginID, address)\n    const Others = useWeb3Others(pluginID)\n\n    const showDomain = !!domain && Others.isValidDomain(domain)\n    const uiLabel = showDomain ? Others.formatDomainName(domain) : Others.formatAddress(address, size) ?? address\n    const hasEllipsis = showDomain ? uiLabel !== domain : !isSameAddress(uiLabel, address)\n    const node = (\n        <Typography fontWeight={700} {...rest}>\n            {uiLabel}\n        </Typography>\n    )\n    const popperProps = useBoundedPopperProps()\n\n    return hasEllipsis ? (\n        <ShadowRootTooltip\n            title={showDomain ? domain : address}\n            PopperProps={{ ...popperProps, style: { whiteSpace: 'break-spaces' } }}>\n            {node}\n        </ShadowRootTooltip>\n    ) : (\n        node\n    )\n})\n\nReversedAddress.displayName = 'ReversedAddress'\n","import {\n    cloneElement,\n    createContext,\n    memo,\n    type RefObject,\n    useContext,\n    useMemo,\n    useRef,\n    type ReactElement,\n} from 'react'\n\ninterface Options {\n    boundaryRef: RefObject<HTMLElement>\n}\n\nconst BoundaryContext = createContext<Options>({\n    boundaryRef: { current: null },\n})\n\ninterface BoundaryProps {\n    // cloneElement is used.\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    children: ReactElement\n}\n\nexport const Boundary = memo(({ children }: BoundaryProps) => {\n    const boundaryRef = useRef<HTMLElement>(null)\n    const contextValue = useMemo(() => ({ boundaryRef }), [boundaryRef.current])\n    return (\n        <BoundaryContext.Provider value={contextValue}>\n            {cloneElement(children, { ...children.props, ref: boundaryRef })}\n        </BoundaryContext.Provider>\n    )\n})\n\nBoundary.displayName = 'Boundary'\n\nexport function useBoundary() {\n    return useContext(BoundaryContext)\n}\n","import { useRef, useContext, createContext, useState, useMemo, useLayoutEffect } from 'react'\nimport { type DialogProps } from '@mui/material'\nimport { noop } from 'lodash-es'\n\ninterface StackContext {\n    stack: readonly string[]\n    push(id: string): void\n    pop(id: string): void\n    setParent(selfID: string, parentID: string | null): () => void\n    hasGlobalBackdrop: boolean\n}\nconst DialogStackingContext = createContext<StackContext>({\n    stack: [],\n    push: noop,\n    pop: noop,\n    setParent: () => noop,\n    hasGlobalBackdrop: false,\n})\nDialogStackingContext.displayName = 'DialogStackingContext'\n\nconst DialogHierarchyContext = createContext<string | null>(null)\nDialogHierarchyContext.displayName = 'DialogHierarchyContext'\n\n/**\n * If you're using <Dialog> on its own and you want to support DialogStack, please use this hook.\n *\n * Your dialog component MUST support the following attributes with the same semantics with MUI Dialog component.\n *\n * - disableEscapeKeyDown\n * - disableScrollLock\n * - hideBackdrop\n * - style\n * - aria-hidden\n * - open\n * - transitionDuration\n * @example\n * function SomeComponent() {\n *     const [open, setOpen] = useState(false)\n *     const { shouldReplaceExitWithBack, extraProps, TrackDialogHierarchy } = useDialogStackConsumer(open)\n *     return <TrackDialogHierarchy>\n *         <button onClick={() => setOpen(true)}></button>\n *         <Dialog open={open} {...extraProps}>\n *             You MUST hide Close button and and BackButton based on the value of `shouldReplaceExitWithBack`\n *         </Dialog>\n *     </TrackDialogHierarchy>\n * }\n */\nexport function useDialogStackActor(open: boolean): useDialogStackActorReturn {\n    const selfID = useRef('' + Math.random()).current\n    const { pop, push, stack, setParent, hasGlobalBackdrop } = useContext(DialogStackingContext)\n\n    // children's useEffect will run before parent's useEffect.\n    // when the hierarchy is A > B and they are both open,\n    // the stack will be [\"B\", \"A\"] (B pushed into the stack first.)\n    // we need to notify the context the react component tree hierarchy to order them correctly.\n    const parentID = useContext(DialogHierarchyContext)\n    useLayoutEffect(() => setParent(selfID, parentID), [parentID])\n\n    useLayoutEffect(() => {\n        open ? push(selfID) : pop(selfID)\n        return () => pop(selfID)\n    }, [open])\n\n    const TrackDialogHierarchy = (useRef<useDialogStackActorReturn['TrackDialogHierarchy']>(null!).current ??=\n        function TrackDialogHierarchy({ children }) {\n            return <DialogHierarchyContext.Provider value={selfID}>{children}</DialogHierarchyContext.Provider>\n        })\n\n    const returnVal: useDialogStackActorReturn = {\n        shouldReplaceExitWithBack: stack.length > 1,\n        extraProps: { open },\n        TrackDialogHierarchy,\n    }\n    if (hasGlobalBackdrop) returnVal.extraProps.hideBackdrop = true\n    if (stack.length > 1) returnVal.extraProps.transitionDuration = 0\n\n    if (!open) return returnVal\n    if (stack.at(-1) !== selfID) {\n        returnVal.extraProps = {\n            ...returnVal.extraProps,\n            disableEscapeKeyDown: true,\n            disableScrollLock: true,\n            hideBackdrop: true,\n            hidden: true,\n            style: { visibility: 'hidden' },\n            'aria-hidden': true,\n        }\n    }\n    return returnVal\n}\n\nexport interface useDialogStackActorReturn {\n    shouldReplaceExitWithBack: boolean\n    extraProps: DialogProps\n    TrackDialogHierarchy: React.ComponentType<React.PropsWithChildren<{}>>\n}\n\nexport interface DialogStackingProviderProps extends React.PropsWithChildren<{}> {\n    hasGlobalBackdrop?: boolean\n}\n\n/**\n * This Provider can turn any `MaskDialog` or `InjectedDialog` in the subtree into a unified dialog.\n *\n * For example:\n *\n * ```tsx\n * <DialogStackingProvider>\n *    <Dialog1>\n *        <Dialog2></Dialog2>\n *    </Dialog1>\n *    <Dialog3></Dialog3>\n * </DialogStackingProvider>\n * ```\n *\n * When Dialog1 and Dialog2 both opened, only Dialog2 will be visible and the left top button\n * becomes \"BackArrow\".\n */\nexport function DialogStackingProvider(props: DialogStackingProviderProps) {\n    const [stack, setStack] = useState<readonly string[]>([])\n    const [hierarchy, setHierarchy] = useState<Hierarchy>({})\n    const context = useMemo((): StackContext => {\n        const sortedStack = sortStackByHierarchy(hierarchy, stack)\n        return {\n            hasGlobalBackdrop: props.hasGlobalBackdrop || false,\n            stack: sortedStack,\n            // Note: the following methods MUST NOT use stack or hierarchy out of the useState callback.\n            setParent(child, parent) {\n                if (!parent) return noop\n                setHierarchy((hierarchy) => {\n                    if (hierarchy[parent]?.has(child)) return hierarchy\n                    const newSet = new Set(hierarchy[parent] || [])\n                    newSet.add(child)\n                    return { ...hierarchy, [parent]: newSet }\n                })\n\n                return () => {\n                    setHierarchy((hierarchy) => {\n                        const newSet = new Set(hierarchy[parent])\n                        newSet.delete(child)\n                        return { ...hierarchy, [parent]: newSet }\n                    })\n                }\n            },\n            pop(id: string) {\n                setStack((stack) => (stack.includes(id) ? stack.filter((x) => x !== id) : stack))\n            },\n            push(id: string) {\n                setStack((stack) => (stack.includes(id) ? stack : stack.concat(id)))\n            },\n        }\n    }, [stack, hierarchy, props.hasGlobalBackdrop])\n    return <DialogStackingContext.Provider value={context}>{props.children}</DialogStackingContext.Provider>\n}\n\nexport function useDialogStacking() {\n    return useContext(DialogStackingContext)\n}\n\ntype Hierarchy = {\n    readonly [parent: string]: undefined | ReadonlySet<string>\n}\nfunction sortStackByHierarchy(hierarchy: Hierarchy, stack: readonly string[]): readonly string[] {\n    if (stack.length <= 1) return stack\n    const last = stack.at(-1)!\n    const children = hierarchy[last]\n    if (!children?.size) return stack\n    for (const child of children) {\n        if (stack.includes(child)) return sortStackByHierarchy(hierarchy, [last].concat(stack.slice(0, -1)))\n    }\n    return stack\n}\n","import { Tooltip } from '@mui/material'\nimport { createShadowRootForwardedPopperComponent } from '../../ShadowRoot/index.js'\n\nexport const ShadowRootTooltip = createShadowRootForwardedPopperComponent(Tooltip)\nShadowRootTooltip.displayName = 'ShadowRootTooltip'\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { useRef, forwardRef, useContext } from 'react'\nimport { Flags } from '@masknet/flags'\nimport type { PopperProps } from '@mui/material'\nimport {\n    DisableShadowRootContext,\n    PreventShadowRootEventPropagationListContext,\n    stopPropagation,\n    StyleSheetsContext,\n} from './Contexts.js'\nimport { ref } from './ShadowRootSetup.js'\n\n/**\n * Render to a React Portal in to the page needs this hook. It will provide a wrapped container that provides ShadowRoot isolation and CSS support for it.\n *\n * The return value can only be used once!\n * @param renderer A function that want to use PortalShadowRoot\n * @example\n * const picker = usePortalShadowRoot((container) => (\n *      <DatePicker\n *          DialogProps={{ container }}\n *          PopperProps={{ container }}\n *          value={new Date()}\n *          onChange={() => {}}\n *          renderInput={(props) => <TextField {...props} />}\n *      />\n * ))\n */\nexport function usePortalShadowRoot<T>(renderer: (container: HTMLElement | undefined) => T, debugKey?: string): T {\n    const disabled = useRef(useContext(DisableShadowRootContext)).current\n    // we ignore the changes on DisableShadowRootContext during multiple render\n    // so we can violates the React hooks rule and still be safe.\n    if (disabled) return renderer(undefined)\n\n    const sheet = useContext(StyleSheetsContext)\n    const signal = useRef<AbortController | null>(null)\n    const preventEventPropagationList = useContext(PreventShadowRootEventPropagationListContext)\n    const container = useRefInit(() => {\n        signal.current = new AbortController()\n        const portal = ref.portalContainer\n\n        const root = document.createElement('div')\n        root.dataset.portalShadowRoot = debugKey || ''\n        const shadow = root.attachShadow(Flags.shadowRootInit)\n\n        for (const each of preventEventPropagationList) {\n            shadow.addEventListener(each, stopPropagation, { signal: signal.current.signal })\n        }\n\n        const container = shadow.appendChild(document.createElement('main'))\n\n        sheet.addContainer(shadow)\n\n        // This is important to make the portal orders correct.\n        Object.defineProperty(container, 'appendChild', {\n            configurable: true,\n            writable: true,\n            value: (child: Node) => {\n                if (!root.parentElement) portal.appendChild(root)\n                Node.prototype.appendChild.call(container, child)\n                return child\n            },\n        })\n        Object.defineProperty(container, 'removeChild', {\n            configurable: true,\n            writable: true,\n            value: (child: Node) => {\n                Node.prototype.removeChild.call(container, child)\n                if (container.childElementCount === 0) portal.removeChild(root)\n                return child\n            },\n        })\n\n        return container\n    })\n\n    return renderer(container)\n}\n\nexport function createShadowRootForwardedComponent<\n    T extends {\n        container?: Element | (() => Element | null) | null | undefined\n        open: boolean\n    },\n>(Component: React.ComponentType<T>) {\n    return forwardRef((props: T, ref) => {\n        return usePortalShadowRoot((container) => <Component container={container} {...props} ref={ref} />)\n    }) as any as typeof Component\n}\n\nexport function createShadowRootForwardedPopperComponent<\n    T extends {\n        PopperProps?: Partial<PopperProps>\n    },\n>(Component: React.ComponentType<T>) {\n    return forwardRef((props: T, ref) => {\n        return usePortalShadowRoot((container) => {\n            return <Component {...props} PopperProps={{ container, ...props.PopperProps }} ref={ref} />\n        })\n    }) as any as typeof Component\n}\n\nfunction useRefInit<T>(f: () => T): T {\n    const ref = useRef<T>(undefined!)\n    if (!ref.current) ref.current = f()\n    return ref.current\n}\n","import { ObservableMap } from '@masknet/shared-base'\nimport { StrictMode, useEffect, useState } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { PreventShadowRootEventPropagationListContext } from './Contexts.js'\n\n/**\n * This container is used to attach the single React root.\n * It does not contain direct DOM decedents.\n * All decedents are mounted via <Portal>.\n */\nlet globalContainer: HTMLElement\n/**\n * This container is prepared for all the Modals.\n */\nlet portalContainer: ShadowRoot\nexport type WrapJSX = ((jsx: React.ReactNode) => JSX.Element) | undefined\n/** @internal */\nexport const shadowEnvironmentMountingRoots = new ObservableMap<any, JSX.Element>()\n\nexport function setupReactShadowRootEnvironment(\n    init: ShadowRootInit,\n    preventEventPropagationList: Array<keyof HTMLElementEventMap>,\n    wrapJSX?: WrapJSX,\n) {\n    if (portalContainer) return portalContainer\n    // TODO: make sure globalContainer is the last DOM in the body?\n    globalContainer = document.body.appendChild(document.createElement('div'))\n    portalContainer = globalContainer.attachShadow(init)\n\n    // Note: This React Root does not expect to have any direct DOM children.\n    createRoot(globalContainer).render(\n        <StrictMode>\n            <MountingPoint wrapJSX={wrapJSX} preventPropagationList={preventEventPropagationList} />\n        </StrictMode>,\n    )\n    return portalContainer\n}\nfunction MountingPoint(props: { wrapJSX: WrapJSX; preventPropagationList: Array<keyof HTMLElementEventMap> }) {\n    const [children, setChildren] = useState<JSX.Element[]>([])\n    useEffect(() => {\n        shadowEnvironmentMountingRoots.event.on(shadowEnvironmentMountingRoots.ALL_EVENTS, () => {\n            setChildren(Array.from(shadowEnvironmentMountingRoots.values()))\n        })\n    }, [])\n    return (\n        <PreventShadowRootEventPropagationListContext.Provider value={props.preventPropagationList}>\n            {props.wrapJSX ? props.wrapJSX(children) : children}\n        </PreventShadowRootEventPropagationListContext.Provider>\n    )\n}\n\n/** @internal */\nexport const ref = {\n    get portalContainer(): Element | ShadowRoot {\n        let dom: Element | ShadowRoot\n        if (location.protocol.includes('extension')) dom = document.body\n        else if (globalThis.location.hostname === 'localhost') return document.body\n        else if (!portalContainer) throw new TypeError('Please call setupPortalShadowRoot first')\n        else dom = portalContainer\n\n        Object.defineProperty(ref, 'mountingPoint', { value: dom })\n        return dom\n    },\n}\n","import type { PopperProps } from '@mui/material'\nimport { useBoundary } from '../Components/index.js'\n\nexport function useBoundedPopperProps() {\n    const { boundaryRef } = useBoundary()\n\n    const tooltipPopperProps: Partial<PopperProps> = {\n        disablePortal: !!boundaryRef.current,\n        placement: 'top',\n        modifiers: [\n            {\n                name: 'flip',\n                options: {\n                    rootBoundary: boundaryRef.current,\n                    boundary: boundaryRef.current,\n                },\n            },\n        ],\n    }\n\n    return tooltipPopperProps\n}\n","import { useAsyncRetry } from 'react-use'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useAddressType<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    address?: string,\n    options?: ConnectionOptions<T>,\n) {\n    const Web3 = useWeb3Connection(pluginID, options)\n\n    return useAsyncRetry<Web3Helper.AddressTypeScope<S, T> | undefined>(async () => {\n        if (!address) return\n        return Web3.getAddressType(address, options)\n    }, [address, Web3, options?.chainId])\n}\n","import { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport { EMPTY_ARRAY, type NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useBlockedNonFungibleTokens<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    schemaType?: Web3Helper.SchemaTypeScope<S, T>,\n) {\n    const { Token } = useWeb3State(pluginID)\n    const nfts = useSubscription(Token?.blockedNonFungibleTokens ?? EMPTY_ARRAY)\n    return useMemo<Array<Web3Helper.NonFungibleTokenScope<S, T>>>(() => {\n        return nfts.length && schemaType ? nfts.filter((x) => x.schema === schemaType) : nfts\n    }, [schemaType, nfts])\n}\n","import { EMPTY_LIST, EMPTY_OBJECT, NextIDPlatform, type PluginID, type PersonaIdentifier } from '@masknet/shared-base'\nimport { useQuery, type UseQueryResult } from '@tanstack/react-query'\nimport { Web3Storage } from '@masknet/web3-providers'\nimport { useCallback, useMemo } from 'react'\nimport type { WalletAPI } from '@masknet/web3-providers/types'\n\ntype AddressData = Record<string, string[]> | string[]\ntype StorageValueV1 = string[]\ntype StorageValueV2 = { hiddenAddresses?: string[] }\ntype StorageValueV3 = { hiddenAddresses?: Record<string, string[]> }\ntype CurrentStorageValue = StorageValueV3\ntype StorageValue = StorageValueV1 | StorageValueV2 | StorageValueV3\n\n/**\n *\n * Get unlisted address by persona pubkey.\n *\n * @param personaPubkey The persona identifier in hex string\n * @param pluginID The plugin id as store key\n * @returns\n */\nexport function useHiddenAddressConfig(\n    personaPubkey: string | undefined,\n    pluginID: PluginID | undefined,\n    signWithPersona: WalletAPI.IOContext['signWithPersona'],\n) {\n    return useQuery({\n        queryKey: ['next-id', 'hidden-address', pluginID, personaPubkey],\n        enabled: !!personaPubkey,\n        queryFn: async () => {\n            if (!pluginID || !personaPubkey) return EMPTY_OBJECT\n            const storage = Web3Storage.createNextIDStorage(\n                personaPubkey,\n                NextIDPlatform.NextID,\n                personaPubkey,\n                signWithPersona,\n            )\n\n            const result = await storage.get<StorageValue>(pluginID)\n            if (!result) return EMPTY_OBJECT\n\n            // When the tips data is legacy\n            if (Array.isArray(result)) return result\n\n            if (!result.hiddenAddresses) return EMPTY_OBJECT\n\n            if (Array.isArray(result.hiddenAddresses)) return result.hiddenAddresses\n            return result.hiddenAddresses ?? EMPTY_OBJECT\n        },\n    })\n}\n\nexport function useHiddenAddressConfigOf(\n    personaPubkey: string | undefined,\n    pluginID: PluginID | undefined,\n    socialId: string | undefined,\n    signWithPersona: WalletAPI.IOContext['signWithPersona'],\n) {\n    const result = useHiddenAddressConfig(personaPubkey, pluginID, signWithPersona)\n    return {\n        ...result,\n        // Identities of Twitter proof get lowered case.\n        data: result.data ? getHiddenAddressesOf(result.data, socialId?.toLowerCase()) : undefined,\n    }\n}\n\ninterface Options {\n    /** To update storage, a signer is required */\n    identifier?: PersonaIdentifier\n    pluginID: PluginID\n    /** For data migration */\n    socialIds?: string[]\n}\n\ntype ConfigResult = [UseQueryResult<Record<string, string[]>>, (config: Record<string, string[]>) => Promise<void>]\n/**\n * Provider address config and data updater\n */\nexport function useUnlistedAddressConfig(\n    { identifier, pluginID, socialIds }: Options,\n    signWithPersona: WalletAPI.IOContext['signWithPersona'],\n): ConfigResult {\n    const query = useHiddenAddressConfig(identifier?.publicKeyAsHex, pluginID, signWithPersona)\n    const { data: unlistedAddressConfig } = query\n\n    const migratedUnlistedAddressConfig = useMemo(() => {\n        if (!unlistedAddressConfig || !socialIds?.length) return EMPTY_OBJECT\n        if (!Array.isArray(unlistedAddressConfig)) return unlistedAddressConfig\n\n        return hiddenAddressesAdapter(unlistedAddressConfig, socialIds)\n    }, [unlistedAddressConfig, socialIds])\n\n    const updateConfig = useCallback(\n        async (config: Record<string, string[]>) => {\n            if (!identifier) return\n            const storage = Web3Storage.createNextIDStorage(\n                identifier.publicKeyAsHex,\n                NextIDPlatform.NextID,\n                identifier,\n                signWithPersona,\n            )\n            await storage.set<CurrentStorageValue>(pluginID, {\n                hiddenAddresses: config,\n            })\n        },\n        [pluginID, identifier],\n    )\n\n    return [{ ...query, data: migratedUnlistedAddressConfig } as UseQueryResult<Record<string, string[]>>, updateConfig]\n}\n\nexport function hiddenAddressesAdapter(list: string[], accounts: string[]): Record<string, string[]> {\n    return Object.fromEntries(accounts.map((account) => [account, list]))\n}\n\nexport function getHiddenAddressesOf(config?: AddressData, socialId?: string) {\n    if (!config) return EMPTY_LIST\n    if (Array.isArray(config)) return config\n    return socialId ? config[socialId] ?? EMPTY_LIST : EMPTY_LIST\n}\n","import { EMPTY_LIST, type NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useInfiniteQuery } from '@tanstack/react-query'\nimport { useCallback, useMemo } from 'react'\nimport { useBlockedNonFungibleTokens } from './useBlockedNonFungibleTokens.js'\nimport { useChainContext } from './useContext.js'\nimport { useNetworkDescriptors } from './useNetworkDescriptors.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\n/**\n * Blocked tokens would be filtered out\n */\nexport function useNonFungibleAssets<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    schemaType?: Web3Helper.SchemaTypeScope<S, T>,\n    options?: HubOptions<T>,\n) {\n    const { account, chainId } = useChainContext({ account: options?.account })\n    const Hub = useWeb3Hub(pluginID, { account, chainId, ...options })\n    const networks = useNetworkDescriptors(pluginID)\n    const availableChainIds = useMemo(() => {\n        return networks\n            .filter((x) => x.isMainnet && (options?.chainId ? x.chainId === options.chainId : true))\n            .map((x) => x.chainId)\n    }, [networks, options?.chainId])\n\n    const blockedTokens = useBlockedNonFungibleTokens()\n    const blockedTokenIds = useMemo(() => {\n        return blockedTokens.filter((x) => availableChainIds.includes(x.chainId)).map((x) => x.id)\n    }, [blockedTokens, availableChainIds])\n    const { data, isLoading, fetchNextPage, hasNextPage, refetch, error, dataUpdatedAt } = useInfiniteQuery({\n        queryKey: ['non-fungible-assets', account, availableChainIds, blockedTokenIds],\n        queryFn: async ({ pageParam }) => {\n            const chainId = pageParam?.chainId || availableChainIds[0]\n            const res = await Hub.getNonFungibleAssets!(account, {\n                indicator: pageParam?.indicator,\n                size: 20,\n                chainId,\n            })\n            const data = blockedTokenIds.length\n                ? res.data.filter((x) => {\n                      const id = `${x.chainId}.${x.address}.${x.tokenId}`.toLowerCase()\n                      return !blockedTokenIds.includes(id)\n                  })\n                : res.data\n            return {\n                ...res,\n                data,\n                chainId,\n            }\n        },\n        getNextPageParam: (lastPage) => {\n            const { nextIndicator, chainId } = lastPage\n            const nextChainId = nextIndicator ? chainId : availableChainIds[availableChainIds.indexOf(chainId) + 1]\n            if (!nextChainId) return\n            return {\n                indicator: nextIndicator,\n                chainId: nextChainId,\n            }\n        },\n    })\n\n    const list = useMemo(() => data?.pages.flatMap((x) => x.data) || EMPTY_LIST, [data?.pages])\n    const nextPage = useCallback(() => fetchNextPage(), [fetchNextPage])\n\n    // TODO rename these fields in style of react-query\n    return {\n        value: list,\n        next: nextPage,\n        loading: isLoading,\n        done: !hasNextPage,\n        retry: refetch,\n        error,\n        dataUpdatedAt,\n    }\n}\n","import { useAsyncRetry } from 'react-use'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport type { NonFungibleTokenContract } from '@masknet/web3-shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useNonFungibleTokenContract<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    address?: string,\n    schemaType?: Web3Helper.SchemaTypeScope<S, T>,\n    options?: ConnectionOptions<T>,\n) {\n    const Web3 = useWeb3Connection(pluginID, options)\n\n    return useAsyncRetry<\n        NonFungibleTokenContract<Web3Helper.ChainIdScope<S, T>, Web3Helper.SchemaTypeScope<S, T>> | undefined\n    >(async () => {\n        if (!address) return\n        return Web3.getNonFungibleTokenContract?.(address, schemaType)\n    }, [address, schemaType, Web3])\n}\n","import { NetworkPluginID, type SocialAddress, type SocialAddressType, type SocialIdentity } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useQuery } from '@tanstack/react-query'\nimport { useWeb3State } from './useWeb3State.js'\n\ntype AddressList = Array<SocialAddress<Web3Helper.ChainIdAll>>\n\n/**\n * Get all social addresses across all networks.\n */\nexport function useSocialAddressesAll(\n    identity?: SocialIdentity | null,\n    includes?: SocialAddressType[],\n    sorter?: (a: SocialAddress<Web3Helper.ChainIdAll>, z: SocialAddress<Web3Helper.ChainIdAll>) => number,\n) {\n    // TODO: to add flow\n    const { IdentityService: EVM_IdentityService } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n    const { IdentityService: SolanaIdentityService } = useWeb3State(NetworkPluginID.PLUGIN_SOLANA)\n\n    const userId = identity?.identifier?.userId\n\n    return useQuery({\n        enabled: !!identity && userId !== '$unknown',\n        queryKey: ['all-social-addresses', userId, identity, includes],\n        queryFn: async () => {\n            const allSettled = await Promise.allSettled<AddressList>(\n                [EVM_IdentityService, SolanaIdentityService].map((x) => x?.lookup(identity!) ?? []),\n            )\n\n            const listOfAddress = allSettled.flatMap((x) => (x.status === 'fulfilled' ? x.value : []))\n            const sorted = sorter && listOfAddress.length ? listOfAddress.sort(sorter) : listOfAddress\n            return includes?.length ? sorted.filter((x) => includes.includes(x.type)) : sorted\n        },\n    })\n}\n","import { useMemo } from 'react'\nimport type { SocialAddress } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useWeb3State } from './useWeb3State.js'\n\n/**\n * Merge many social addresses into a social account.\n */\nexport function useSocialAccountsFrom(socialAddresses: Array<SocialAddress<Web3Helper.ChainIdAll>>) {\n    const { IdentityService } = useWeb3State()\n    return useMemo(() => {\n        return IdentityService?.__mergeSocialAddressesAll__(socialAddresses)\n    }, [socialAddresses, IdentityService])\n}\n","import { type SocialAccount, type SocialAddressType, type SocialIdentity, EMPTY_LIST } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useSocialAddressesAll } from './useSocialAddressesAll.js'\nimport { useSocialAccountsFrom } from './useSocialAccountsFrom.js'\n\n/**\n * Get all social addresses across all networks.\n */\nexport function useSocialAccountsAll(\n    identity?: SocialIdentity | null,\n    includes?: SocialAddressType[],\n    sorter?: (a: SocialAccount<Web3Helper.ChainIdAll>, z: SocialAccount<Web3Helper.ChainIdAll>) => number,\n) {\n    const { data: socialAddressList = EMPTY_LIST, ...rest } = useSocialAddressesAll(identity, includes, sorter)\n    const socialAccounts = useSocialAccountsFrom(socialAddressList) ?? EMPTY_LIST\n\n    return {\n        ...rest,\n        data: socialAccounts,\n    }\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\n\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","import e from\"void-elements\";var t=/\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g;function n(n){var r={type:\"tag\",name:\"\",voidElement:!1,attrs:{},children:[]},i=n.match(/<\\/?([^\\s]+?)[/\\s>]/);if(i&&(r.name=i[1],(e[i[1]]||\"/\"===n.charAt(n.length-2))&&(r.voidElement=!0),r.name.startsWith(\"!--\"))){var s=n.indexOf(\"--\\x3e\");return{type:\"comment\",comment:-1!==s?n.slice(4,s):\"\"}}for(var a=new RegExp(t),c=null;null!==(c=a.exec(n));)if(c[0].trim())if(c[1]){var o=c[1].trim(),l=[o,\"\"];o.indexOf(\"=\")>-1&&(l=o.split(\"=\")),r.attrs[l[0]]=l[1],a.lastIndex--}else c[2]&&(r.attrs[c[2]]=c[3].trim().substring(1,c[3].length-1));return r}var r=/<[a-zA-Z0-9\\-\\!\\/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g,i=/^\\s*$/,s=Object.create(null);function a(e,t){switch(t.type){case\"text\":return e+t.content;case\"tag\":return e+=\"<\"+t.name+(t.attrs?function(e){var t=[];for(var n in e)t.push(n+'=\"'+e[n]+'\"');return t.length?\" \"+t.join(\" \"):\"\"}(t.attrs):\"\")+(t.voidElement?\"/>\":\">\"),t.voidElement?e:e+t.children.reduce(a,\"\")+\"</\"+t.name+\">\";case\"comment\":return e+\"\\x3c!--\"+t.comment+\"--\\x3e\"}}var c={parse:function(e,t){t||(t={}),t.components||(t.components=s);var a,c=[],o=[],l=-1,m=!1;if(0!==e.indexOf(\"<\")){var u=e.indexOf(\"<\");c.push({type:\"text\",content:-1===u?e:e.substring(0,u)})}return e.replace(r,function(r,s){if(m){if(r!==\"</\"+a.name+\">\")return;m=!1}var u,f=\"/\"!==r.charAt(1),h=r.startsWith(\"\\x3c!--\"),p=s+r.length,d=e.charAt(p);if(h){var v=n(r);return l<0?(c.push(v),c):((u=o[l]).children.push(v),c)}if(f&&(l++,\"tag\"===(a=n(r)).type&&t.components[a.name]&&(a.type=\"component\",m=!0),a.voidElement||m||!d||\"<\"===d||a.children.push({type:\"text\",content:e.slice(p,e.indexOf(\"<\",p))}),0===l&&c.push(a),(u=o[l-1])&&u.children.push(a),o[l]=a),(!f||a.voidElement)&&(l>-1&&(a.voidElement||a.name===r.slice(2,-1))&&(l--,a=-1===l?c:o[l]),!m&&\"<\"!==d&&d)){u=-1===l?c:o[l].children;var x=e.indexOf(\"<\",p),g=e.slice(p,-1===x?void 0:x);i.test(g)&&(g=\" \"),(x>-1&&l+u.length>=0||\" \"!==g)&&u.push({type:\"text\",content:g})}}),c},stringify:function(e){return e.reduce(function(e,t){return e+a(\"\",t)},\"\")}};export default c;\n","/**\n * This file automatically generated from `pre-publish.js`.\n * Do not manually edit.\n */\n\nmodule.exports = {\n  \"area\": true,\n  \"base\": true,\n  \"br\": true,\n  \"col\": true,\n  \"embed\": true,\n  \"hr\": true,\n  \"img\": true,\n  \"input\": true,\n  \"link\": true,\n  \"meta\": true,\n  \"param\": true,\n  \"source\": true,\n  \"track\": true,\n  \"wbr\": true\n};\n","'use client';\nimport { parseQueryArgs, InfiniteQueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}\n\nexport { useInfiniteQuery };\n//# sourceMappingURL=useInfiniteQuery.mjs.map\n"],"names":["useEffect","MaskMessages","useQuery","currentNextIDPlatform","querySocialIdentity","useSocialIdentity","identity","result","queryKey","enabled","Boolean","queryFn","refetchOnWindowFocus","events","ownProofChanged","on","refetch","Plugin","AvatarRealmSourceType","ProfilePage","ProfileCard","Post","Editor","Menu","Suggestion","TipsSlot","FollowButton","Profile","MirrorMenu","MirrorEntry","MirrorProfile","MirrorVerification","LensSlot","ProfileName","Sidebar","SiteAdaptor","useMount","resolve","EventType","Telemetry","useMountReport","eventID","captureEvent","Access","useAccount","useChainContext","useDefaultChainId","useNetworkContext","Web3ContextProvider","useCallback","useState","useMemo","createContainer","useTargetRuntime","initPluginID","pluginID","targetPluginID","setTargetPluginID","chainIdMap","setChainIdMap","chainId","defaultChainId","fallbackChainId","targetChainId","setTargetChainId","id","map","TargetRuntimeContext","Provider","displayName","ChainRuntime","children","useContainer","account","context","controlled","value","useSubscription","storageDefaultValue","publicKey","addedTokens","legacyStorageStep","localStorage","getItem","guideStorageDefaultValue","userGuide","Number","parseInt","undefined","storage","guideStorage","setupStorage","_","_guideStorage","getStorage","TIPS_GUIDE_TOTAL","TIPS_GUIDE_INIT","useTipsUserGuide","site","settings","subscription","setStep","to","setValue","step","nextStep","finished","noop","createContext","TokenType","TipContext","recipient","recipientAddress","recipientUserId","setRecipient","tipType","NonFungible","setTipType","recipients","token","setToken","amount","setAmount","nonFungibleTokenId","setNonFungibleTokenId","nonFungibleTokenContract","nonFungibleTokenAddress","setNonFungibleTokenAddress","sendTip","isSending","isDirty","storedTokens","reset","setGasOption","gasOption","validation","validatingRecipient","recipientValidation","isAvailableBalance","isGasSufficient","balance","useWeb3State","useTipAccountsCompletion","accounts","setMap","NameService","reverse","forEach","address","label","originalName","name","oldMap","Object","keys","length","config","useAsyncFn","useWeb3Connection","NetworkPluginID","useNftTip","contractAddress","tokenId","options","Token","Web3","overrides","loading","isTransferring","PLUGIN_EVM","txid","transferNonFungibleToken","tokenDetailed","getNonFungibleToken","removeToken","rightShift","useTokenTip","totalAmount","decimals","toFixed","transferFungibleToken","createElement","useTranslation","Trans","createProxy","initValue","define","key","defineProperty","container","configurable","__proto__","Proxy","get","getPrototypeOf","setPrototypeOf","v","getOwnPropertyDescriptor","useTipsTrans","t","bind","createComponent","i18nKey","props","ns","shouldUnescape","TipsTrans","useAsync","useAddressType","GoPlusLabs","AddressType","useRecipientValidate","addressType","security","getAddressSecurity","isMaliciousAddress","values","filter","x","Contract","recipient_address_is_contract","recipient_address_is_malicious","useFungibleTokenBalance","isGreaterThan","isLessThanOrEqualTo","useTipValidate","tokenAddress","data","Fungible","no_enough_gas_fees","token_insufficient_balance","PLUGIN_SOLANA","memo","useContext","useNonFungibleTokenContract","useNativeToken","isSameAddress","useAvailableBalance","useRecipients","tipsAccounts","_recipients","sort","a","z","useDirtyDetection","deps","setIsDirty","TipTaskProvider","task","_recipientAddress","nativeTokenDetailed","tokenMap","setTokenMap","val","newToken","connectionOptions","tokenTipTuple","nftTipTuple","sendTipTuple","find","wrappedSendTip","contextValue","contract","pid","useTip","compact","uniqWith","FormControl","Typography","useNonFungibleAssets","AddCollectiblesModal","ElementAnchor","RetryHint","CollectibleList","LoadingStatus","EmptyStatus","EMPTY_LIST","LoadingBase","makeStyles","isLensProfileAddress","isLensFollower","isLensCollect","SchemaType","useStyles","theme","root","display","flexDirection","overflow","height","header","alignItems","flexShrink","margin","spacing","selectSection","flexGrow","statusBox","justifyContent","padding","collectibleList","paddingRight","loadingList","overflowY","backgroundColor","width","borderRadius","minHeight","border","palette","maskColor","secondaryLine","backgroundClip","addButton","marginLeft","cursor","color","highlight","fontSize","fontWeight","lineHeight","NFTSection","className","onEmpty","rest","classes","cx","selectedKey","fetchedTokens","done","next","error","loadError","isEvm","tokens","filtered","metadata","collection","v1","v2","handleAddToken","results","openAndWaitForClose","tokenIds","allSettled","Promise","ERC721","addToken","status","addNonFungibleTokens","div","onClick","tip_add_collectibles","retry","collectibles","columns","selectable","showNetworkIcon","onChange","split","callback","size","iconSize","tip_empty_nft","PluginID","useActivatedPlugin","NetworkTab","abstractTabWrapper","paddingBottom","NetworkSection","tipsDefinition","Tips","chainIdList","enableRequirement","web3","supportedChainIds","chains","useRef","Icons","AccountIcons","ReversedAddress","Link","MenuItem","Select","useWeb3Others","refs","menuItem","main","marginTop","text","select","icon","pluginIcon","menuPaper","opacity","menu","maxHeight","link","actionIcon","checkIcon","PluginIcon","mapping","ETH","style","backdropFilter","PLUGIN_FLOW","Flow","Solana","ExternalLink","Others","e","stopPropagation","href","explorerResolver","addressLink","target","title","view_on_explorer","rel","LinkOut","RecipientSelect","selectRef","ref","MenuProps","paper","list","anchorOrigin","vertical","horizontal","disableScrollLock","current","anchorEl","BackdropProps","invisible","component","socialAccount","CheckCircle","receiverRow","danger","RecipientSection","isValid","validateMessage","fullWidth","tip_to","toHex","isNativeTokenAddress","MIN_GAS_LIMIT","DEFAULT_GAS_LIMIT","useGasLimit","fallback","isNativeToken","isTippingToken","getERC20Contract","tx","methods","transfer","estimated","estimateGas","from","SelectGasSettingsToolbar","useGasPrice","useNativeTokenPrice","useNetwork","useWallet","SmartPayBundler","GasEditor","ETH_GAS_LIMIT","ERC20_GAS_LIMIT","GasSettingsBar","wallet","smartPayChainId","getSupportedChainId","nativeTokenPrice","defaultGasPrice","network","nativeToken","nativeCurrency","GAS_LIMIT","gasLimit","handleGasSettingChange","gasConfig","editor","fromConfig","getGasConfig","gasPrice","maxFeePerGas","maxPriorityFeePerGas","supportMultiCurrency","owner","FungibleTokenInput","SelectFungibleTokenModal","TokenValue","tokenValue","TokenSection","onSelectTokenChipClick","picked","disableNativeToken","selectedTokens","onAmountChange","onSelectToken","share","ChainBoundary","InjectedDialog","PluginWalletStatusBar","TransactionConfirmModal","getSiteType","pluginIDsSettings","useValueRef","ActionButton","MaskTabList","useNonFungibleAsset","useReverseAddress","EventID","TabContext","TabPanel","DialogContent","Tab","useUpdateEffect","dialog","backgroundImage","content","tabPanel","section","paddingTop","boxSizing","TipDialog","open","onClose","recipientEns","isTokenTip","shareText","recipientName","message","tip_token_share_post","symbol","recipientSnsId","tip_nft_share_post","currentTab","onTabChange","buttonLabel","sending_tip","send_tip","nonFungibleToken","send","hash","EntryTimelineTipsSend","tokenType","messageTextForNFT","send_specific_tip_successfully","messageTextForFT","tips","expectedPluginID","includes","submitDisabled","pluginIDs","pluginId","EntryTimelineTipsOpen","titleTabs","variant","aria-label","tips_tab_tokens","tips_tab_collectibles","actualPluginID","expectedChainId","ActionButtonPromiseProps","disabled","isEqual","PluginTipsMessages","TipTaskManager","tasks","setTasks","removeTask","tipTask","tipTaskUpdate","included","some","tipsAccount","initialState","usePortalShadowRoot","Box","Button","Portal","React","cloneElement","useLayoutEffect","usePluginGuideRecord","position","background","mask","top","zIndex","card","left","boxShadow","bottom","borderBottomColor","borderBottomWidth","borderTopWidth","borderTopColor","buttonContainer","button","PluginGuide","totalStep","arrow","actionText","currentStep","onNext","childrenRef","clientRect","setClientRect","bottomAvailable","setBottomAvailable","targetVisible","stepVisible","document","documentElement","paddingLeft","updateClientRect","cr","getBoundingClientRect","window","innerHeight","toJSON","addEventListener","removeEventListener","sx","PluginGuideContext","PluginGuideProvider","guides","onFinish","storageKey","useLastRecognizedIdentity","Stack","TipButton","buttonSize","postButtonWrapper","postTipsButton","mirrorEntryTipsButtonWrapper","roundButton","borderWidth","borderStyle","borderColor","borderSecondary","verticalAlign","primary","mode","followTipsButton","profileTipsButton","TipsRealmContent","slot","onStatusUpdate","myIdentity","identifier","userId","buttonClassMap","receiver","tips_guide_description","tips_guide_action","MaskColorVar","base","init","createKVStorage","ApplicationEntries","iconFilterColor","category","description","components","ApplicationEntryID","ID","nextIdRequired","entryWalletConnectedNotRequired","GlobalInjection","TipsRealm","priority","UI","Content","getUserIdentity","useSocialIdentityByUserId","resolveNetworkToNextIDPlatform","NextIDProof","useBaseUIRuntime","useProfilePublicKey","networkIdentifier","platform","binding","queryLatestBindingByPlatform","persona","useHiddenAddressConfigOf","useSocialAccountsAll","signWithPersona","useTipsAccounts","personaPubkey","socialAccounts","hiddenAddresses","Web3Profile","y","useCurrentVisitingIdentity","SocialAddressType","tipButton","fontFamily","receivingAccounts","isLoading","loadingPersona","receiverUserId","visitingIdentity","isVisitingUser","isRuntimeAvailable","accountsByIdentity","aHasNextId","supportedAddressTypes","NEXT_ID","zHasNextId","createTipTask","evt","preventDefault","sendToLocal","role","TipCoin","getPluginMessage","webpackHot","accept","useBuildInfo_raw","BuildInfo","BuildInfoProvider","useBuildInfo","useBuildInfoMarkdown","env","gitInfo","COMMIT_HASH","DIRTY","BRANCH_NAME","buildInfoMarkdown","VERSION","process","NODE_ENV","navigator","userAgent","channel","BUILD_DATE","ShadowRootTooltip","resolveSocialAddressLink","Linking","useSharedTrans","iconStack","stackedIcon","marginRight","linking","textDecoration","roundedIcon","tooltip","maxWidth","AddressPlatform","Facebook","Twitter","NextId","AccountTooltips","type","disableInteractive","Address","account_icon_tooltips_only","account_icon_tooltips","source","replace","externalClasses","iconStyle","fromTwitter","ENS","SPACE_ID","ARBID","Lens","TwitterBlue","fromNextId","normalClasses","roundedClasses","configs","NextIDMini","TwitterXRound","CyberConnect","Leaderboard","Sybil","Mask","MaskBlue","Firefly","OpenSea","RSS3","SpaceId","i","node","LinkProps","sources","flatMap","account_icon_merged_tooltip","span","Card","useNetworkDescriptor","AssetPreviewer","ImageIcon","NETWORK_DESCRIPTORS","fallbackImage","blocker","linkWrapper","networkIcon","CollectibleCard","asset","disableLink","networkDescriptor","url","mediaURL","imageURL","nonFungibleTokenLink","forwardRef","Checkbox","Radio","Skeleton","useForkRef","bg","inactive","collectibleCard","aspectRatio","alignSelf","whiteSpace","textOverflow","textIndent","right","CollectibleItem","provider","checked","multiple","uiTokenId","formatTokenId","SelectableButton","scrollIntoViewRef","scrollIntoView","block","behavior","forkedRef","CollectibleItemSkeleton","animation","range","LoadingSkeleton","SourceType","ReloadStatus","gap","gapIsNumber","gridTemplateColumns","gridGap","collectibleItem","overflowX","getKey","collectible","getCollectibleKey","availableKeys","handleItemChange","event","newValue","listRef","no_collectible_found","onRetry","index","collectibleKey","placement","PopperProps","popperOptions","strategy","modifiers","rootBoundary","boundary","useIntersectionObserver","elementRef","intersection","rootMargin","callbackRef","isIntersecting","pt","direction","second","p","EmptySimple","TypographyProps","URL","canParse","hostname","hint","ButtonProps","textAlign","load_failed","load_retry","useBoundedPopperProps","domain","showDomain","isValidDomain","uiLabel","formatDomainName","formatAddress","hasEllipsis","popperProps","BoundaryContext","boundaryRef","Boundary","useBoundary","DialogStackingContext","stack","push","pop","setParent","hasGlobalBackdrop","DialogHierarchyContext","useDialogStackActor","selfID","Math","random","parentID","TrackDialogHierarchy","returnVal","shouldReplaceExitWithBack","extraProps","hideBackdrop","transitionDuration","at","disableEscapeKeyDown","hidden","visibility","DialogStackingProvider","setStack","hierarchy","setHierarchy","sortedStack","sortStackByHierarchy","child","parent","has","newSet","Set","add","delete","concat","useDialogStacking","last","slice","Tooltip","createShadowRootForwardedPopperComponent","Flags","DisableShadowRootContext","PreventShadowRootEventPropagationListContext","StyleSheetsContext","renderer","debugKey","sheet","signal","preventEventPropagationList","useRefInit","AbortController","portal","portalContainer","dataset","portalShadowRoot","shadow","attachShadow","shadowRootInit","each","appendChild","addContainer","writable","parentElement","Node","prototype","call","removeChild","childElementCount","createShadowRootForwardedComponent","Component","f","ObservableMap","StrictMode","createRoot","globalContainer","shadowEnvironmentMountingRoots","setupReactShadowRootEnvironment","wrapJSX","body","render","MountingPoint","preventPropagationList","setChildren","ALL_EVENTS","Array","dom","location","protocol","globalThis","TypeError","tooltipPopperProps","disablePortal","useAsyncRetry","getAddressType","EMPTY_ARRAY","useBlockedNonFungibleTokens","schemaType","nfts","blockedNonFungibleTokens","schema","EMPTY_OBJECT","NextIDPlatform","Web3Storage","useHiddenAddressConfig","createNextIDStorage","NextID","isArray","socialId","getHiddenAddressesOf","toLowerCase","useUnlistedAddressConfig","socialIds","query","publicKeyAsHex","unlistedAddressConfig","migratedUnlistedAddressConfig","hiddenAddressesAdapter","updateConfig","set","fromEntries","useInfiniteQuery","useNetworkDescriptors","useWeb3Hub","Hub","networks","availableChainIds","isMainnet","blockedTokens","blockedTokenIds","fetchNextPage","hasNextPage","dataUpdatedAt","pageParam","res","getNonFungibleAssets","indicator","getNextPageParam","lastPage","nextIndicator","nextChainId","indexOf","pages","nextPage","getNonFungibleTokenContract","useSocialAddressesAll","sorter","IdentityService","EVM_IdentityService","SolanaIdentityService","lookup","listOfAddress","sorted","useSocialAccountsFrom","socialAddresses","__mergeSocialAddressesAll__","socialAddressList"],"sourceRoot":"","x_google_ignoreList":[55,56,57,58]}