{"version":3,"file":"bundled/chunk.7436.js","mappings":"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","sources":["webpack://mask-network/./packages/plugin-infra/src/types.ts","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/emitter.ts","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/hooks/Lens/useControlLensPopup.ts","webpack://mask-network/./packages/plugins/Web3Profile/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/components/LensList.tsx","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/components/LensPopup.tsx","webpack://mask-network/./packages/web3-providers/src/types/Lens.ts","webpack://mask-network/./packages/plugins/Web3Profile/src/utils.ts","webpack://mask-network/./packages/web3-shared/evm/src/helpers/encodeTypedData.ts","webpack://mask-network/./packages/web3-shared/evm/src/helpers/splitSignature.ts","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/context.ts","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/hooks/Lens/useQueryAuthenticate.ts","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/hooks/Lens/useFollow.ts","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/hooks/Lens/useUnfollow.ts","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/components/HandlerDescription.tsx","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/hooks/ConfettiExplosion/utils.ts","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/hooks/ConfettiExplosion/Confetto.ts","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/hooks/ConfettiExplosion/Sequin.ts","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/hooks/ConfettiExplosion/index.tsx","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/components/FollowLensDialog.tsx","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/hooks/usePersona.ts","webpack://mask-network/./packages/shared/src/UI/components/WalletSettingCard/UI.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletSettingCard/index.tsx","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/components/ProfileCard.tsx","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/components/Web3ProfileDialog.tsx","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/Web3ProfileGlobalInjection.tsx","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/components/LensBadge.tsx","webpack://mask-network/./packages/plugins/Web3Profile/src/SiteAdaptor/index.tsx","webpack://mask-network/./packages/shared-base-ui/src/hooks/useRemoteControlledDialog.ts","webpack://mask-network/./packages/shared/src/UI/components/EmptyStatus/index.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/HelpOutline.js","webpack://mask-network/./packages/shared/src/UI/components/EthereumERC20TokenApprovedBoundary/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/Image/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/TokenIcon/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useRiskWarningApproved.ts","webpack://mask-network/./packages/shared/src/UI/components/WalletConnectedBoundary/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletIcon/index.tsx","webpack://mask-network/./packages/shared/src/hooks/usePersonaProofs.ts","webpack://mask-network/./packages/theme/src/Components/WrappedComponents/ShadowRootPopper.ts","webpack://mask-network/./packages/web3-hooks/base/src/useChainIdValid.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFireflyLensAccounts.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleToken.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleTokenBalance.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleTokenSpenders.ts","webpack://mask-network/./packages/web3-hooks/base/src/useHiddenAddressConfig.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNativeTokenBalance.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNetworkDescriptor.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWallet.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useContract.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useERC20TokenAllowance.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useERC20TokenApproveCallback.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unnecessary-qualifier */\n// https://github.com/typescript-eslint/typescript-eslint/issues/7192\nimport type React from 'react'\nimport type { Option, Result } from 'ts-results-es'\nimport type { Emitter } from '@servie/events'\n/* eslint @masknet/unicode-specific-set: [\"error\", { \"only\": \"code\" }] */\nimport type {\n    BindingProof,\n    ECKeyIdentifier,\n    NetworkPluginID,\n    PluginID,\n    ProfileIdentifier,\n    ScopedStorage,\n    SocialAccount,\n    SocialIdentity,\n    BooleanPreference,\n    EnhanceableSite,\n} from '@masknet/shared-base'\nimport type { TypedMessage } from '@masknet/typed-message'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { SearchResult } from '@masknet/web3-shared-base'\nimport type { CompositionType } from './entry-content-script.js'\n\nexport declare namespace Plugin {\n    /**\n     * A code loader interface of the plugin API.\n     *\n     * Plugin should be lazy-loaded. If a plugin is not enabled, it will not be loaded into the Mask.\n     *\n     * @example\n     * ```ts\n     * const loader = {\n     *     load: () => import('./code'),\n     *     hotModuleReload: hot => import.meta.webpackHot && import.meta.webpackHot.accept('./code', () => hot(import('./code')))\n     * }\n     * ```\n     *\n     * The `./code` should use `export default` to export what loader expects.\n     */\n    export interface Loader<DeferredModule> {\n        /**\n         * The `load()` function will be called on demand.\n         *\n         * It should not have side effects (e.g. start some daemon, start a new HTTP request or WebSocket client),\n         * those work should be in the `.init()` function.\n         * @returns the actual definition of this plugin\n         * @example load: () => import('./path')\n         */\n        load(): Promise<{\n            default: DeferredModule\n        }>\n\n        /**\n         * This provides the functionality for hot module reload on the plugin.\n         * When the callback is called, the old instance of the plugin will be unloaded, then the new instance will be init.\n         * @example hotModuleReload: hot => import.meta.webpackHot && import.meta.webpackHot.accept('./path', () => hot(import('./path')))\n         */\n        hotModuleReload(\n            onHot: (\n                hot: Promise<{\n                    default: DeferredModule\n                }>,\n            ) => void,\n        ): void\n    }\n\n    /**\n     * DeferredDefinition should not contain any functionality of the plugin expects the loader.\n     * If the plugin is not providing some of the functionality, please can omit that field.\n     */\n    export interface DeferredDefinition extends Shared.Definition {\n        /** Load the Site Adaptor part of the plugin. */\n        SiteAdaptor?: Loader<SiteAdaptor.Definition>\n        /** Load the extension page part of the plugin. */\n        ExtensionPage?: Loader<ExtensionPage.Definition>\n        /** Load the Worker part of the plugin. */\n        Worker?: Loader<Worker.Definition>\n    }\n}\n/**\n * Basic knowledge of the plugin (ID, name, publisher, ...).\n */\nexport namespace Plugin.Shared {\n    export interface SharedContext {\n        /**\n         * A lightweight K/V storage used to store some simple data.\n         */\n        createKVStorage<T extends object>(type: 'memory' | 'persistent', defaultValues: T): ScopedStorage<T>\n    }\n\n    export interface SharedUIContext extends SharedContext {\n        setMinimalMode(enabled: boolean): void\n    }\n\n    export interface Definition {\n        /**\n         * ID of the plugin. It should be unique.\n         * @example \"com.mask.wallet\"\n         */\n        ID: PluginID\n        /**\n         * The human readable name of the plugin.\n         * @example { i18nKey: \"name\", fallback: \"Never gonna give you up\" }\n         */\n        name: I18NStringField\n        /**\n         * A brief description of this plugin.\n         * @example { i18nKey: \"description\", fallback: \"This plugin is going to replace every link in the page to https://www.youtube.com/watch?v=dQw4w9WgXcQ\" }\n         */\n        description?: I18NStringField\n        /**\n         * Publisher of this plugin.\n         * @example { link: \"https://github.com/Dimensiondev\", name: { fallback: \"Mask Network\", i18nKey: \"org_name\" } }\n         */\n        publisher?: Publisher\n        /**\n         * Configuration of what environment that this plugin expects to run in.\n         */\n        enableRequirement: EnableRequirement\n        /**\n         * Is this plugin marked as \"experimental\"?\n         *\n         * If the enableRequirement.target is not \"stable\", it will be treated as true.\n         *\n         * This does not affect if the plugin enable or not.\n         */\n        experimentalMark?: boolean\n        /**\n         * If the plugin is in the minimal mode by default.\n         */\n        inMinimalModeByDefault?: boolean\n        /** i18n resources of this plugin */\n        i18n?: I18NResource\n        /**\n         * Declare what this plugin provides.\n         *\n         * Declare this field properly so Mask Network can suggest your plugin when needed.\n         */\n        contribution?: Contribution\n        /** Declare ability this plugin supported. */\n        ability?: Ability\n    }\n\n    /**\n     * This part is shared between ExtensionPage, Site Adaptor and Worker part\n     * which you should include the information above in those three parts.\n     */\n    export interface DefinitionDeferred<Context extends SharedContext = SharedContext> extends Definition, Utilities {\n        /**\n         * This function is called when the plugin is initialized.\n         *\n         * The plugin must clean up all side effects it creates when the `AbortSignal` provided aborts\n         * to make sure the plugin can be reloaded safely.\n         */\n        init?(signal: AbortSignal, context: Context): void | Promise<void>\n    }\n\n    export interface Utilities {}\n\n    /** The publisher of the plugin */\n    export interface Publisher {\n        /** The name of the publisher */\n        name: I18NStringField\n        /** URL of the publisher */\n        link: string\n    }\n\n    /** For what stage the plugin should be included in the Mask. */\n    export type ReleaseStages = 'stable' | 'beta' | 'insider'\n\n    /**\n     * The condition that expected to start the plugin.\n     *\n     * If the condition changes and becomes invalid, the plugin will be unloaded.\n     */\n    export interface EnableRequirement {\n        target: ReleaseStages\n        /** The website this plugin supports. */\n        supports: SupportedSitesDeclare\n        /** The Web3 Network this plugin supports */\n        web3?: Partial<\n            Record<\n                NetworkPluginID,\n                {\n                    supportedChainIds?: number[]\n                }\n            >\n        >\n        /**\n         * Requested origins.\n         * Only put necessary permissions here.\n         * https://developer.chrome.com/docs/extensions/mv3/match_patterns/\n         */\n        host_permissions?: string[]\n    }\n\n    export interface SupportedSitesDeclare {\n        /**\n         * opt-in means the listed site is supported.\n         * out-out means the listed site is not supported.\n         */\n        type: 'opt-in' | 'opt-out'\n        sites: Partial<Record<EnhanceableSite, boolean>>\n    }\n\n    export type I18NLanguage = string\n    export type I18NKey = string\n    export type I18NValue = string\n    export type I18NResource = Record<I18NLanguage, Record<I18NKey, I18NValue>>\n\n    export interface Contribution {\n        /** This plugin can recognize and react to the following metadata keys. */\n        metadataKeys?: ReadonlySet<string>\n        /** This plugin can recognize and enhance the post that matches the following matchers. */\n        postContent?: ReadonlySet<RegExp | string>\n    }\n    export interface Ability {}\n}\n\n/** This part runs in the Site Adaptor */\nexport namespace Plugin.SiteAdaptor {\n    export interface SiteAdaptorContext extends Shared.SharedUIContext {}\n\n    export interface Definition extends GeneralUI.Definition, Shared.DefinitionDeferred<SiteAdaptorContext> {\n        /** This UI will be rendered for each post found. */\n        PostInspector?: InjectUI<{}>\n        /** This UI will be rendered for action of each post found. */\n        PostActions?: InjectUI<{}>\n        /** This UI will be rendered for each decrypted post. */\n        DecryptedInspector?: InjectUI<{\n            message: TypedMessage\n        }>\n        /** This UI will be rendered into the global scope of the site. */\n        GlobalInjection?: InjectUI<{}>\n        /** This UI will be rendered under the Search result of the site */\n        SearchResultInspector?: SearchResultInspector\n        /** This UI will be rendered under the Search result of the site. */\n        SearchResultTabs?: SearchResultTab[]\n        /** This UI will be an entry to the plugin in the Composition dialog of Mask. */\n        readonly CompositionDialogEntry?: CompositionDialogEntry\n        /** This UI will be use when there is known badges. */\n        CompositionDialogMetadataBadgeRender?: CompositionMetadataBadgeRender\n        /** This UI will be rendered as an entry in the wallet status dialog */\n        ApplicationEntries?: ApplicationEntry[]\n        /** This UI will be rendered as tabs on the profile page */\n        ProfileTabs?: ProfileTab[]\n        /** This UI will be rendered as tabs on the profile card */\n        ProfileCardTabs?: ProfileTab[]\n        /** This UI will be rendered as cover on the profile page */\n        ProfileCover?: ProfileCover[]\n        /** This UI will be rendered as tab on the setting dialog */\n        SettingTabs?: SettingTab[]\n        /** This UI will be rendered components on the avatar realm */\n        AvatarRealm?: AvatarRealm\n        /** This UI will be shared across plugins */\n        Widgets?: Widget[]\n        // Widgets?: {\n        //     [key in keyof WidgetRegistry]: Widget<WidgetRegistry[key]>\n        // }\n        /** This UI will be rendered components on the tips realm */\n        TipsRealm?: TipsRealm\n        /** This UI will be rendered components on the tips realm */\n        Lens?: LensWidget\n        /** This UI will be rendered as plugin wrapper page */\n        wrapperProps?: PluginWrapperProps\n        /**\n         * A hook for if this plugin can enhance the #hash or $cash tag.\n         */\n        enhanceTag?: {\n            onClick?: (kind: 'cash' | 'hash', content: string, event: React.MouseEvent<HTMLAnchorElement>) => void\n            onHover?: (kind: 'cash' | 'hash', content: string, event: React.MouseEvent<HTMLAnchorElement>) => () => void\n        }\n    }\n\n    // #region Composition entry\n    /**\n     * The entry has two type:\n     *\n     * - Dialog type: This type is very common so it is supported as first class citizen.\n     * - Custom type: Fallback choice if the dialog type cannot do what you want to do.\n     */\n    export type CompositionDialogEntry = CompositionDialogEntryCustom | CompositionDialogEntryDialog\n\n    export interface CompositionDialogEntryCustom {\n        /**\n         * A label that will be rendered in the CompositionDialog as a chip.\n         * @example {fallback: \"🧧 Red Packet\"}\n         */\n        label: I18NFieldOrReactNode\n\n        /** This callback will be called when the user clicked on the chip. */\n        onClick(options: { compositionType: CompositionType; metadata: ReadonlyMap<string, unknown> | undefined }): void\n    }\n\n    export interface CompositionDialogEntryDialog {\n        /**\n         * A label that will be rendered in the CompositionDialog as a chip.\n         * @example {fallback: \"🧧 Red Packet\"}\n         */\n        label: I18NFieldOrReactNode\n        /** A React dialog component that receives `open` and `onClose`. The dialog will be opened when the chip clicked. */\n        dialog: React.ComponentType<CompositionDialogEntry_DialogProps>\n        /**\n         * If this option is true, the dialog will be always mounted even if the dialog is not opening.\n         *\n         * @default false\n         */\n        keepMounted?: boolean\n    }\n\n    export interface CompositionDialogEntry_DialogProps {\n        open: boolean\n\n        onClose(): void\n\n        isOpenFromApplicationBoard?: boolean\n    }\n\n    export type CompositionMetadataBadgeRender =\n        | CompositionMetadataBadgeRenderStatic\n        | CompositionMetadataBadgeRenderDynamic\n    export type CompositionMetadataBadgeRenderStatic = ReadonlyMap<string, CompositionMetadataBadgeRenderStaticMapper>\n    export type CompositionMetadataBadgeRenderStaticMapper<T = any> = (metadata: T) => string | BadgeDescriptor | null\n    export type CompositionMetadataBadgeRenderDynamic = (\n        key: string,\n        metadata: unknown,\n    ) => string | BadgeDescriptor | null\n\n    export interface BadgeDescriptor {\n        text: string | React.ReactNode\n        tooltip?: React.ReactNode\n    }\n\n    // #endregion\n\n    export interface ApplicationEntry {\n        /**\n         * The contrast between ApplicationEntryID and PluginID is that one plugin may contains multiple entries.\n         */\n        ApplicationEntryID: string\n        /**\n         * Render entry component\n         */\n        RenderEntryComponent?: (props: {\n            disabled: boolean\n            tooltipHint?: string\n            onClick?: (walletConnectedCallback?: () => void, requiredSupportPluginID?: NetworkPluginID) => void\n        }) => JSX.Element | null\n        /**\n         * Used to order the applications on the board\n         */\n        appBoardSortingDefaultPriority?: number\n\n        /**\n         * Used to order the applications on the market list\n         */\n        marketListSortingPriority?: number\n\n        icon: React.ReactNode\n\n        name: I18NFieldOrReactNode\n\n        description?: I18NFieldOrReactNode\n\n        iconFilterColor?: string\n\n        tutorialLink?: string\n        /**\n         * Does the application listed in the DAPP list\n         */\n        category?: 'dapp' | 'other'\n\n        nextIdRequired?: boolean\n        /**\n         * One plugin may has multiple part. E.g. Tips requires connected wallet, but Tips setting not.\n         */\n        entryWalletConnectedNotRequired?: boolean\n\n        /**\n         * Display using an eye-catching card and unable to be unlisted.\n         */\n        recommendFeature?: {\n            description: React.ReactNode\n            backgroundGradient: string\n            isFirst?: boolean\n        }\n        features?: Array<{\n            name: I18NFieldOrReactNode\n            description: I18NFieldOrReactNode\n        }>\n\n        hiddenInList?: boolean\n    }\n\n    export interface PluginWrapperProps {\n        icon?: React.ReactNode\n        title?: string | React.ReactNode\n        backgroundGradient?: string\n        borderRadius?: string\n        margin?: string\n    }\n\n    export interface SearchResultInspector {\n        ID: string\n        /**\n         * The injected UI\n         */\n        UI?: {\n            /** The brief content above detailed tabs. */\n            Content?: InjectUI<{\n                resultList: Array<SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>>\n                currentResult: SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>\n                isProfilePage?: boolean\n                identity?: SocialIdentity | null\n            }>\n        }\n        Utils?: {\n            shouldDisplay?(result: SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>): boolean\n        }\n    }\n\n    export interface SearchResultTab {\n        ID: string\n\n        /**\n         * The name of the slider card\n         */\n        label: I18NStringField | string\n        /**\n         * Used to order the sliders\n         */\n        priority: number\n        /**\n         * The injected UI\n         */\n        UI?: {\n            /**\n             * The injected tab content\n             */\n            TabContent: InjectUI<{\n                result: SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>\n            }>\n        }\n        Utils?: {\n            shouldDisplay?(result: SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>): boolean\n        }\n    }\n\n    export interface SearchResultContent {\n        ID: string\n        UI?: {\n            Content?: React.ForwardRefExoticComponent<{ keyword: string } & React.RefAttributes<unknown>>\n        }\n    }\n\n    export enum AvatarRealmSourceType {\n        ProfilePage = 'ProfilePage',\n        ProfileCard = 'ProfileCard',\n        Post = 'Post',\n        Editor = 'Editor',\n        Menu = 'Menu',\n        Suggestion = 'Suggestion',\n    }\n\n    export interface AvatarRealm {\n        ID: string\n        priority: number\n        label: I18NStringField | string\n        UI?: {\n            /**\n             * The injected avatar decorator component\n             */\n            Decorator: InjectUI<{\n                identity?: SocialIdentity | null\n                userId?: string\n                persona?: string\n                socialAccounts?: Array<SocialAccount<Web3Helper.ChainIdAll>>\n            }>\n            /**\n             * The injected avatar settings button component\n             */\n            Settings?: InjectUI<{\n                identity?: SocialIdentity\n                persona?: string\n                socialAccounts?: Array<SocialAccount<Web3Helper.ChainIdAll>>\n            }>\n        }\n        Utils?: {\n            /**\n             * If it returns false, this cover will not be displayed.\n             */\n            shouldDisplay?(\n                identity?: SocialIdentity | null,\n                socialAccounts?: Array<SocialAccount<Web3Helper.ChainIdAll>>,\n                sourceType?: AvatarRealmSourceType,\n            ): boolean\n        }\n    }\n\n    export enum TipsSlot {\n        FollowButton = 'follow',\n        Post = 'post',\n        Profile = 'profile',\n        MirrorMenu = 'mirror-menu',\n        MirrorEntry = 'mirror-entry',\n        MirrorProfile = 'mirror-profile',\n        MirrorVerification = 'mirror-verification',\n    }\n\n    export interface TipsRealmOptions {\n        identity?: ProfileIdentifier\n        slot: TipsSlot\n        accounts?: Array<SocialAccount<Web3Helper.ChainIdAll>>\n        iconSize?: number\n        buttonSize?: number\n\n        onStatusUpdate?(disabled: boolean): void\n    }\n\n    export interface TipsRealm {\n        ID: string\n        priority: number\n        UI?: {\n            /**\n             * The injected Tips Content component\n             */\n            Content: InjectUI<TipsRealmOptions>\n        }\n    }\n\n    export enum LensSlot {\n        ProfileName = 'profile-name',\n        Post = 'post',\n        Sidebar = 'sidebar',\n    }\n\n    export interface LensOptions {\n        identity?: ProfileIdentifier\n        slot: LensSlot\n        accounts?: Array<SocialAccount<Web3Helper.ChainIdAll>>\n        /** To update enabled/disabled status */\n        onStatusUpdate?(disabled: boolean): void\n    }\n\n    export interface LensWidget {\n        ID: string\n        UI?: {\n            /**\n             * The injected Lens Content component\n             */\n            Content: InjectUI<LensOptions>\n        }\n    }\n\n    export interface ProfileSlider {\n        ID: string\n\n        /**\n         * The name of the slider card\n         */\n        label: I18NStringField | string\n        /**\n         * Used to order the sliders\n         */\n        priority: number\n        /**\n         * The injected UI\n         */\n        children: InjectUI<{}>\n    }\n\n    export interface ProfileTab {\n        ID: string\n\n        /**\n         * The name of the tab\n         */\n        label: I18NStringField | string\n\n        /**\n         * Used to order the sliders\n         */\n        priority: number\n\n        UI?: {\n            /**\n             * The injected tab content\n             */\n            TabContent: InjectUI<{\n                identity?: SocialIdentity | null\n                socialAccount?: SocialAccount<Web3Helper.ChainIdAll>\n            }>\n        }\n        Utils?: {\n            /**\n             * If it returns false, this tab will not be displayed.\n             */\n            shouldDisplay?(\n                identity?: SocialIdentity | null,\n                socialAccount?: SocialAccount<Web3Helper.ChainIdAll>,\n            ): boolean\n            /**\n             * Filter social address.\n             */\n            filter?: (x: SocialAccount<Web3Helper.ChainIdAll>) => boolean\n            /**\n             * Sort social address in expected order.\n             */\n            sorter?: (a: SocialAccount<Web3Helper.ChainIdAll>, z: SocialAccount<Web3Helper.ChainIdAll>) => number\n        }\n    }\n\n    export interface ProfileCover {\n        ID: string\n\n        /**\n         * The name of the cover\n         */\n        label: I18NStringField | string\n\n        /**\n         * Used to order the sliders\n         */\n        priority: number\n\n        UI?: {\n            /**\n             * The injected cover component\n             */\n            Cover: InjectUI<{\n                identity?: SocialIdentity\n                socialAccounts?: SocialAccount<Web3Helper.ChainIdAll>\n            }>\n        }\n        Utils: {\n            /**\n             * If it returns false, this cover will not be displayed\n             */\n            shouldDisplay?(identity?: SocialIdentity, socialAccount?: SocialAccount<Web3Helper.ChainIdAll>): boolean\n            /**\n             * Filter social account\n             */\n            filterSocialAccount?(x: SocialAccount<Web3Helper.ChainIdAll>): boolean\n            /**\n             * Sort social account in expected order\n             */\n            sortSocialAccount?(a: SocialAccount<Web3Helper.ChainIdAll>, z: SocialAccount<Web3Helper.ChainIdAll>): number\n        }\n    }\n\n    export interface SettingsTabUIProps {\n        onClose: () => void\n        bindingWallets?: BindingProof[]\n        currentPersona?: ECKeyIdentifier\n        pluginID: PluginID\n    }\n\n    export interface SettingTab {\n        ID: PluginID\n        /**\n         * The name of setting tab\n         */\n        label: I18NStringField | string\n\n        /**\n         * Used to order the tabs\n         */\n        priority: number\n\n        UI?: {\n            TabContent: InjectUI<SettingsTabUIProps>\n        }\n    }\n\n    /** Contribute a widget to other plugins. */\n    export interface Widget {\n        ID: string\n\n        name: keyof WidgetRegistry\n\n        label: I18NStringField | string\n\n        UI?: {\n            Widget: InjectUI<{}>\n        }\n    }\n\n    export interface WidgetRegistry {\n        example: {}\n    }\n}\n\n/** This part runs in the Popup */\nexport namespace Plugin.ExtensionPage {\n    export interface ExtensionPageContext extends Shared.SharedUIContext {}\n\n    // As you can see we currently don't have so much use case for an API here.\n    export interface Definition extends GeneralUI.Definition, Shared.DefinitionDeferred<ExtensionPageContext> {\n        /** Plugin DO NOT need to define this. This will be auto set by the plugin host. */\n        __general_ui__?: GeneralUI.Definition\n    }\n}\n\n/** This part runs in the background page */\nexport namespace Plugin.Worker {\n    export interface WorkerContext extends Shared.SharedContext {\n        getDatabaseStorage<T extends IndexableTaggedUnion>(): DatabaseStorage<T>\n        /**\n         * Start the background service.\n         * @param impl Implementation of the RPC\n         */\n        startService(impl: object): void\n        /**\n         * Start the background generator service.\n         * @param impl Implementation of the RPC\n         */\n        startGeneratorService(impl: object): void\n    }\n\n    export interface Definition extends Shared.DefinitionDeferred<WorkerContext> {\n        backup?: BackupHandler\n    }\n\n    export interface BackupHandler {\n        /**\n         * This function will be called when user try to generate a new backup.\n         * The return value will contribute to the backup file.\n         *\n         * If it returns a None, it will not contributes to the backup file.\n         *\n         * If it returns a Some<T>, T will be serialized by JSON.stringify and added into the backup file.\n         */\n        onBackup(): Promise<Option<unknown>>\n\n        /**\n         * This function will be called when the user try to restore a backup file,\n         * and there is some data associated with this plugin.\n         *\n         * @param data The serialized backup content previously returned by `onBackup`.\n         * You MUST treat the data as untrustful content because it can be modified by the user.\n         */\n        onRestore(data: unknown): Promise<Result<void, Error>>\n    }\n\n    /**\n     * @typeParameter Data It should be a [tagged union](https://en.wikipedia.org/wiki/Tagged_union) with an extra `id` field\n     * @example\n     *\n     * type File = { type: 'file'; name: string; id: string }\n     * type Folder = { type: 'folder'; file: string[]; id: string }\n     * const Storage: Plugin.Worker.Storage<File | Folder> = context.storage\n     * const file: File = { type: 'file', name: 'file.txt', id: uuid() }\n     * const folder: Folder = { type: 'folder', file: [file.id], id: uuid() }\n     * // Add new data\n     * await Storage.add(file)\n     * await Storage.add(folder)\n     * // Remove\n     * await Storage.remove('file', file.id)\n     * // Query\n     * const result: File | undefined = await Storage.get('file', file.id)\n     * const has: boolean = await Storage.has('file', file.id)\n     * // iterate\n     * for await (const { value } of Storage.iterate('file')) {\n     *     // read only during the for...await loop\n     *     // !! NO: await Storage.remove('file', file.id)\n     *     console.log(value.name)\n     * }\n     * for await (const cursor of Storage.iterate_mutate('folder')) {\n     *     cursor.value // Folder\n     *     await cursor.update({ ...cursor.value, file: [] })\n     *     await cursor.delete()\n     * }\n     */\n    export interface DatabaseStorage<Data extends IndexableTaggedUnion = IndexableTaggedUnion> {\n        /**\n         * Query an object from the database\n         * @param type \"type\" field on the object\n         * @param id \"id\" field on the object\n         */\n        get<T extends Data['type']>(\n            type: T,\n            id: Data['id'],\n        ): Promise<\n            | (Data & {\n                  type: T\n              })\n            | undefined\n        >\n\n        has<T extends Data['type']>(type: T, id: Data['id']): Promise<boolean>\n\n        /**\n         * Store a data into the database.\n         * @param data Must be an object with \"type\" and \"id\"\n         */\n        add(data: Data): Promise<void>\n\n        /**\n         * Remove an object from the database\n         * @param type \"type\" field on the object\n         * @param id \"id\" field on the object\n         */\n        remove<T extends Data['type']>(type: T, id: Data['id']): Promise<void>\n\n        /**\n         * Iterate over the database of given type (readonly!)\n         *\n         * !!! During the iterate, you MUST NOT do anything that writes to the store (use iterate_mutate instead)\n         *\n         * !!! You MUST NOT do anything asynchronous before the iterate ends\n         *\n         * !!! Otherwise the transaction will be inactivate\n         * @param type \"type\" field on the object\n         */\n        iterate<T extends Data['type']>(type: T): AsyncIterableIterator<StorageReadonlyCursor<Data, T>>\n\n        /**\n         * Iterate over the database of given type (read-write).\n         *\n         * !!! You MUST NOT do anything asynchronous before the iterate ends\n         *\n         * !!! Otherwise the transaction will be inactivate\n         * @param type \"type\" field on the object\n         */\n        iterate_mutate<T extends Data['type']>(type: T): AsyncIterableIterator<StorageMutableCursor<Data, T>>\n    }\n\n    export interface StorageReadonlyCursor<Data extends IndexableTaggedUnion, T extends Data['type']> {\n        value: Data & {\n            type: T\n        }\n    }\n\n    export interface StorageMutableCursor<Data extends IndexableTaggedUnion, T extends Data['type']>\n        extends StorageReadonlyCursor<Data, T> {\n        delete: () => Promise<void>\n        update: (\n            data: Data & {\n                type: T\n            },\n        ) => Promise<void>\n    }\n}\n\n/** This part defines the plugin part that does not context aware. */\nexport namespace Plugin.GeneralUI {\n    export interface Definition {\n        /** This UI will be injected into the global scope of the target page. */\n        GlobalInjection?: InjectUI<{}>\n        /**\n         * Render metadata in many different environments.\n         *\n         * 1. Environment\n         *\n         * The render component MUST NOT assume they are running in a specific environment (e.g. Site Adaptor).\n         * Plugin messages and RPC MAY NOT working.\n         *\n         * It MUST NOT assume the environment using the `context` props.\n         * ALL actions MUST BE DONE with the given props.\n         *\n         * Here is some example of *possible* environments.\n         * - inside site adaptor, given \"composition\" context, running in the CompositionDialog.\n         * - inside site adaptor, given \"post\" context,        running in the DecryptedPost.\n         * - inside Popups,       given \"post\" context,        running in the PostInspector (Isolated mode).\n         * - on mask.io,          given \"post\" context,        allowing preview the message without extension installed.\n         *\n         * 2. Contexts\n         *\n         * The render component might be used in many different contexts.\n         *\n         * - \"composition\" context, the render should be editable, but not interactive (e.g. allow vote).\n         * - \"post\" context, the render should be readonly, but interactive.\n         *\n         * 3. Actions\n         *\n         * The render component MUST BE a ForwardRefExotic React Component\n         * that support operations defined in `Plugin.ContextFree.MetadataRender.RenderActions`\n         */\n        metadataRender?: MetadataRender.StaticRender | MetadataRender.DynamicRender\n    }\n\n    export namespace MetadataRender {\n        export type MetadataReader<T> = (meta: TypedMessage['meta']) => Result<T, unknown>\n        // #region Static render\n        // new Map([ [reader, react component] ])\n        export type StaticRender<T = any> = ReadonlyMap<MetadataReader<T>, StaticRenderComponent<T>>\n        export type StaticRenderComponent<T> = Omit<React.ForwardRefExoticComponent<StaticRenderProps<T>>, 'propTypes'>\n        export type StaticRenderProps<T> = Context<T> &\n            React.RefAttributes<RenderActions<T>> & {\n                metadata: T\n            }\n        // #endregion\n        // #region DynamicRender\n        export type DynamicRender = Omit<React.ForwardRefExoticComponent<DynamicRenderProps>, 'propTypes'>\n        export type DynamicRenderProps = Context<unknown> &\n            React.RefAttributes<RenderActions<unknown>> & {\n                metadata: TypedMessage['meta']\n            }\n        // #endregion\n        export type RenderActions<T> = {\n            /**\n             * This action make the render into the edit state.\n             * It should report the result via onEditComplete() props.\n             *\n             * If this action does not exist, it will be rendered as non-editable.\n             */\n            edit?(): void\n            /**\n             * This action make the render quit the edit state.\n             * If save is true, the render MUST report the new result via onEditComplete.\n             *\n             * If this action does not exist, the render should handle the save/cancel by themselves.\n             */\n            quitEdit?(save: boolean): void\n        }\n        export type Context<T> = CompositionContext<T> | DecryptedPostContext\n\n        /** This metadata render is called in a composition preview context. */\n        export interface CompositionContext<T> {\n            context: 'composition'\n\n            /**\n             * When edit() is called, this component should go into to editable state.\n             * If the edit completes, the new metadata will be used to replace the old one.\n             */\n            onEditComplete(metaKey: string, replaceMeta: T): void\n        }\n\n        /**\n         * This metadata render is called in the decrypted post.\n         */\n        export interface DecryptedPostContext {\n            context: 'post'\n        }\n    }\n}\n\n// Helper types\nexport namespace Plugin {\n    /**\n     * Injected UI. There're two kinds\n     * - InjectUIReact: Optimized for React component.\n     * - InjectUIRaw: The fallback choice if a React component doesn't apply here.\n     */\n    export type InjectUI<Props> = InjectUIRaw<Props> | InjectUIReact<Props>\n    /**\n     *\n     * @example\n     * ```ts\n     * const ui = {\n     *      type: 'raw' as const,\n     *      init(signal, dom) {\n     *          return props => dom.textContent = toString(props)\n     *      }\n     * }\n     * ```\n     */\n    export type InjectUIRaw<Props> = {\n        type: 'raw'\n        /**\n         * The raw version of the inject UI.\n         * @param signal The AbortSignal. You should undo side effects when the signal aborts.\n         * @param mountingPoint The mounting DOM\n         * @returns A function that will be called each time if the `props` has changed\n         */\n        init(signal: AbortSignal, mountingPoint: HTMLDivElement): (props: Props) => void\n    }\n    export type InjectUIReact<Props> = React.ComponentType<Props>\n}\n\nexport type IndexableTaggedUnion = {\n    type: string | number\n    id: string | number\n}\n\nexport interface I18NStringField {\n    /** The i18n key of the string content. */\n    i18nKey?: string\n    /** The fallback content to display if there is no i18n string found. */\n    fallback: string\n}\n\nexport type I18NFieldOrReactNode = I18NStringField | React.ReactNode\n\nexport interface IdentityResolved {\n    nickname?: string\n    avatar?: string\n    bio?: string\n    homepage?: string\n    identifier?: ProfileIdentifier\n    isOwner?: boolean\n}\n\n/**\n * This namespace is not related to the plugin authors\n */\n// ---------------------------------------------------\nexport namespace Plugin.__Host {\n    export interface Host<Definition, Context> {\n        /**\n         * Control if the plugin is in the minimal mode.\n         *\n         * If it is in the minimal mode, it will be omitted in some cases.\n         */\n        minimalMode: EnabledStatusReporter\n\n        addI18NResource(pluginID: string, resources: Shared.I18NResource): void\n\n        createContext(id: string, definition: Definition, signal: AbortSignal): Context\n\n        signal?: AbortSignal\n        permission: PermissionReporter\n    }\n\n    export interface WorkerContext extends Omit<Worker.WorkerContext, 'startService' | 'startGeneratorService'> {}\n    export interface PermissionReporter {\n        hasPermission(host_permission: string[]): Promise<boolean>\n\n        events: Emitter<{ changed: [] }>\n    }\n\n    export interface EnabledStatusReporter {\n        isEnabled(id: string): BooleanPreference | Promise<BooleanPreference>\n\n        events: Emitter<{\n            enabled: [id: string]\n            disabled: [id: string]\n        }>\n    }\n}\n","import type { FireflyBaseAPI } from '@masknet/web3-providers/types'\nimport { Emitter } from '@servie/events'\n\ninterface OpenPopupOptions {\n    lensAccounts: FireflyBaseAPI.LensAccount[]\n    /** For lazy load lens accounts from NextID */\n    userId: string\n    popupAnchorEl: HTMLElement | null\n}\nexport const emitter = new Emitter<{\n    open: [OpenPopupOptions]\n    close: []\n}>()\n\nexport function openPopup(options: OpenPopupOptions) {\n    emitter.emit('open', options)\n}\n","import { useCallback, useEffect, useRef, useState, type RefObject } from 'react'\nimport { emitter } from '../../emitter.js'\n\nconst LEAVE_DURATION = 500\nexport function useControlLensPopup(holderRef: RefObject<HTMLDivElement>) {\n    const hoverRef = useRef(false)\n    const closeTimerRef = useRef<ReturnType<typeof setTimeout>>()\n\n    const [active, setActive] = useState(false)\n\n    const hidePopup = useCallback(() => {\n        if (hoverRef.current) return\n        setActive(false)\n    }, [])\n\n    const showProfileCard = useCallback(() => {\n        clearTimeout(closeTimerRef.current)\n        setActive(true)\n    }, [])\n    useEffect(() => {\n        const holder = holderRef.current\n        if (!holder) {\n            hidePopup()\n            return\n        }\n        const enter = () => {\n            hoverRef.current = true\n            clearTimeout(closeTimerRef.current)\n        }\n        const leave = () => {\n            hoverRef.current = false\n            clearTimeout(closeTimerRef.current)\n            closeTimerRef.current = setTimeout(hidePopup, LEAVE_DURATION)\n        }\n        holder.addEventListener('mouseenter', enter)\n        holder.addEventListener('mouseleave', leave)\n        return () => {\n            holder.removeEventListener('mouseenter', enter)\n            holder.removeEventListener('mouseleave', leave)\n        }\n    }, [holderRef.current])\n\n    useEffect(() => {\n        const unsubscribe = emitter.on('open', showProfileCard)\n        return () => void unsubscribe()\n    }, [hidePopup, showProfileCard])\n\n    useEffect(() => {\n        const onClick = (event: MouseEvent) => {\n            // `NODE.contains(other)` doesn't work for cross multiple layer of Shadow DOM\n            if (event.composedPath()?.includes(holderRef.current!)) return\n            hoverRef.current = false\n            hidePopup()\n        }\n        document.body.addEventListener('click', onClick, true)\n        return () => {\n            document.body.removeEventListener('click', onClick, true)\n        }\n    }, [hidePopup])\n\n    return active\n}\n","// @ts-nocheck\n/* eslint-disable */\nimport { createElement, useMemo, type ComponentType } from \"react\";\nimport { useTranslation, Trans, type TransProps } from \"react-i18next\";\ntype TypedTransProps<Value, Components> = Omit<TransProps<string>, \"values\" | \"ns\" | \"i18nKey\"> & ({} extends Value ? {} : {\n    values: Value;\n}) & {\n    components: Components;\n};\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useWeb3ProfileTrans(): {\n    /**\n      * `Choose and showcase your Web3 footprints on Twitter.`\n      */\n    __plugin_description(): string;\n    /**\n      * `persona_public_key_copy`\n      */\n    persona_public_key_copy(): string;\n    /**\n      * `Current`\n      */\n    current(): string;\n    /**\n      * `plugin_wallet_view_on_explorer`\n      */\n    plugin_wallet_view_on_explorer(): string;\n    /**\n      * `Wallets`\n      */\n    wallets(): string;\n    /**\n      * `Donations`\n      */\n    donations(): string;\n    /**\n      * `Footprints`\n      */\n    footprints(): string;\n    /**\n      * `NFTs`\n      */\n    NFTs(): string;\n    /**\n      * `Web3 Profile`\n      */\n    web3_profile(): string;\n    /**\n      * `EVM Wallet`\n      */\n    EVM_wallet(): string;\n    /**\n      * `Edit your profile in lenster`\n      */\n    edit_profile_in_lenster(): string;\n    /**\n      * `{{- profile}} is owned by the current connected wallet. Please go to lenster.xyz to edit profile.`\n      */\n    edit_profile_tips(options: {\n        readonly profile: string;\n    }): string;\n    /**\n      * `Solana Wallet`\n      */\n    Solana_wallet(): string;\n    /**\n      * `Flow Wallet`\n      */\n    Flow_wallet(): string;\n    /**\n      * `Network error, try again`\n      */\n    network_error(): string;\n    /**\n      * `View`\n      */\n    view(): string;\n    /**\n      * `Follow`\n      */\n    follow(): string;\n    /**\n      * `Following`\n      */\n    following_action(): string;\n    /**\n      * `Follow Lens handle`\n      */\n    follow_lens_handle(): string;\n    /**\n      * `Unfollow lens handle`\n      */\n    unfollow_lens_handle(): string;\n    /**\n      * `Follow for {{value}} {{symbol}}`\n      */\n    follow_for_fees(options: Readonly<{\n        value: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `Unfollow`\n      */\n    unfollow(): string;\n    /**\n      * `Only holding lens handle can follow.`\n      */\n    follow_with_profile_tips(): string;\n    /**\n      * `No enough balance to complete follow process.`\n      */\n    follow_with_charge_tips(): string;\n    /**\n      * `This user has banned follow function.`\n      */\n    follow_with_revert_tips(): string;\n    /**\n      * `Current wallet does not support to interact with Lens protocol.`\n      */\n    follow_wallet_tips(): string;\n    /**\n      * `Need to pay gas fee to follow this account.`\n      */\n    follow_gas_tips(): string;\n    /**\n      * `Lens Follow`\n      */\n    lens_follow(): string;\n    /**\n      * `Lens Unfollow`\n      */\n    lens_unfollow(): string;\n    /**\n      * `Previous follow transaction is in processing, please wait and try again.`\n      */\n    lens_follow_processing_tips(): string;\n    /**\n      * `Previous unfollow transaction is in processing, please wait and try again.`\n      */\n    lens_unfollow_processing_tips(): string;\n    /**\n      * `Unlock {{value}} {{symbol}} and follow`\n      */\n    unlock_token_tips(options: Readonly<{\n        value: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `Switch to Polygon and Follow`\n      */\n    switch_network_tips(): string;\n    /**\n      * `Disconnect`\n      */\n    plugin_wallet_disconnect(): string;\n    /**\n      * `Change`\n      */\n    wallet_status_button_change(): string;\n    /**\n      * `Connect Wallet`\n      */\n    plugin_wallet_on_connect(): string;\n    /**\n      * `The wallet has already been bound to {{currentPersona}}. Please switch to another wallet.`\n      */\n    wallet_verify_has_bound(options: {\n        readonly currentPersona: string;\n    }): string;\n    /**\n      * `Please connect a wallet.`\n      */\n    wallet_verify_empty_alert(): string;\n    /**\n      * `{{personaName}} Sign`\n      */\n    wallet_verify_persona_name(options: {\n        readonly personaName: string;\n    }): string;\n    /**\n      * `Sign seamlessly with Persona, ensure the validity of data.`\n      */\n    wallet_verify_persona_sign_intro(): string;\n    /**\n      * `Persona Sign`\n      */\n    wallet_verify_persona_sign(): string;\n    /**\n      * `After two steps, you will own, view, utilize all your cyber identities through Next.ID. You can also disconnect them easily.`\n      */\n    waller_verify_wallet_sign_intro(): string;\n    /**\n      * `Done`\n      */\n    done(): string;\n    /**\n      * `Confirm`\n      */\n    confirm(): string;\n    /**\n      * `Cancel`\n      */\n    cancel(): string;\n    /**\n      * `Save`\n      */\n    save(): string;\n    /**\n      * `Copied`\n      */\n    copied(): string;\n    /**\n      * `Listed`\n      */\n    listed(): string;\n    /**\n      * `Lens`\n      */\n    lens(): string;\n    /**\n      * `Lenster`\n      */\n    lenster(): string;\n    /**\n      * `Unlisted`\n      */\n    unlisted(): string;\n    /**\n      * `Add Wallet`\n      */\n    add_wallet(): string;\n    /**\n      * `No connected wallet. Please add wallet.`\n      */\n    add_wallet_to_connected(): string;\n    /**\n      * `You’ve switched off all wallets. Please go to settings to active.`\n      */\n    open_wallet(): string;\n    /**\n      * `Persona signed successfully.`\n      */\n    tip_persona_sign_success(): string;\n    /**\n      * `Wallet connection failed.`\n      */\n    tip_wallet_sign_error(): string;\n    /**\n      * `The tips feature currently supports only EVM chains. Support for other chains will be added in the future.`\n      */\n    plugin_tips_not_evm_alert(): string;\n    /**\n      * `The wallet is connected.`\n      */\n    tip_wallet_sign_success(): string;\n    /**\n      * `Persona Signature failed.`\n      */\n    tip_persona_sign_error(): string;\n    /**\n      * `Wallet`\n      */\n    wallet(): string;\n    /**\n      * `Please input contract address`\n      */\n    nft_input_address_label(): string;\n    /**\n      * `Please input token ID`\n      */\n    nft_input_tokenid_label(): string;\n    /**\n      * `web3 error`\n      */\n    plugin_avatar_web3_error(): string;\n    /**\n      * `Cannot found asset.`\n      */\n    plugin_avatar_asset(): string;\n    /**\n      * `Chain does not match.`\n      */\n    plugin_avatar_chain_error(): string;\n    /**\n      * `The contract address is incorrect or the collection does not belong to you`\n      */\n    nft_owner_hint(): string;\n    /**\n      * `Checking`\n      */\n    nft_add_button_label_checking(): string;\n    /**\n      * `Add`\n      */\n    nft_add_button_label(): string;\n    /**\n      * `Input Contract Address`\n      */\n    plugin_avatar_input_token_address(): string;\n    /**\n      * `Token ID`\n      */\n    plugin_avatar_input_token_id(): string;\n    /**\n      * `Add Collectible`\n      */\n    wallets_add_collectible(): string;\n    /**\n      * `Add collectible`\n      */\n    add_collectible(): string;\n    /**\n      * `Add Collectible`\n      */\n    nft_add_dialog_title(): string;\n    /**\n      * `No {{collection}} found.`\n      */\n    no_collection$empty(options: {\n        readonly collection: string & string;\n    }): string;\n    /**\n      * `All {{collection}} unlisted.`\n      */\n    no_collection$hidden(options: {\n        readonly collection: string;\n    }): string;\n    /**\n      * `Click items in listed area to hidden your {{collection}} on Web3 Profile.`\n      */\n    no_unlisted_collection(options: {\n        readonly collection: string;\n    }): string;\n    /**\n      * `Click items in Unlisted area to show your {{collection}} on Web3 Profile.`\n      */\n    no_listed_collection(options: {\n        readonly collection: string;\n    }): string;\n    /**\n      * `Toggle the button to manage wallet display settings.`\n      */\n    wallet_setting_hint(): string;\n    /**\n      * `That hasn't been authenticated yet.`\n      */\n    no_authenticated_wallet(): string;\n    /**\n      * `No Items found.`\n      */\n    no_items_found(): string;\n    /**\n      * `No verified account found here.`\n      */\n    no_verified_account(): string;\n    /**\n      * `Please verify this persona to set your Web3 profile.`\n      */\n    account_empty(): string;\n    /**\n      * `Load More`\n      */\n    load_more(): string;\n    /**\n      * `Set up wallet for displaying Web3 footprints and receiving tips on each social media account.`\n      */\n    setup_tips(): string;\n    /**\n      * `Save successfully`\n      */\n    save_successfully(): string;\n    /**\n      * `Set up Web3 Profile wallets successfully.`\n      */\n    save_successfully_message(): string;\n    /**\n      * `Save failed`\n      */\n    save_failed(): string;\n    /**\n      * `Failed to set up Web3 Profile wallets. Please try again.`\n      */\n    save_failed_message(): string;\n    /**\n      * - no_collection$empty: `No {{collection}} found.`\n    \n      * - no_collection$hidden: `All {{collection}} unlisted.`\n      */\n    no_collection(options: Readonly<{\n        collection: string & string;\n        context?: \"empty\" | \"hidden\";\n    }>): string;\n} { const { t } = useTranslation(\"io.mask.web3-profile\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\nfunction createComponent(i18nKey: string) {\n    return (props) => createElement(Trans, { i18nKey, ns: \"io.mask.web3-profile\", shouldUnescape: true, ...props });\n}\nexport const Web3ProfileTrans: {\n    /**\n      * `<strong>{{followers}}</strong> Followers`\n      */\n    followers: ComponentType<TypedTransProps<{\n        readonly followers: string;\n    }, {\n        strong: JSX.Element;\n    }>>;\n    /**\n      * `<strong>{{following}}</strong> Following`\n      */\n    following: ComponentType<TypedTransProps<{\n        readonly following: string;\n    }, {\n        strong: JSX.Element;\n    }>>;\n} = /*#__PURE__*/ createProxy(createComponent);\n","import { Icons } from '@masknet/icons'\nimport { Image } from '@masknet/shared'\nimport { CrossIsolationMessages } from '@masknet/shared-base'\nimport { ActionButton, makeStyles } from '@masknet/theme'\nimport type { FireflyBaseAPI } from '@masknet/web3-providers/types'\nimport { List, ListItem, Typography, type ListProps } from '@mui/material'\nimport { memo } from 'react'\nimport { useWeb3ProfileTrans } from '../../locales/i18n_generated.js'\nimport { useAsync } from 'react-use'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { Lens } from '@masknet/web3-providers'\nimport { isSameAddress } from '@masknet/web3-shared-base'\n\nconst useStyles = makeStyles()((theme) => {\n    const isDark = theme.palette.mode === 'dark'\n    return {\n        list: {\n            backgroundColor: isDark ? '#030303' : theme.palette.common.white,\n            maxWidth: 320,\n            // Show up to 6 item\n            maxHeight: 244,\n            overflow: 'auto',\n            minWidth: 240,\n            padding: theme.spacing(1.5),\n            boxSizing: 'border-box',\n            borderRadius: 16,\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        listItem: {\n            cursor: 'default',\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(0.5),\n            height: 40,\n            marginBottom: 6,\n            borderRadius: 4,\n            '&:hover': {\n                backgroundColor: theme.palette.maskColor.bg,\n            },\n            '&:last-of-type': {\n                marginBottom: 0,\n            },\n        },\n        avatar: {\n            borderRadius: '50%',\n        },\n        name: {\n            color: theme.palette.maskColor.main,\n            fontWeight: 400,\n            marginLeft: theme.spacing(0.5),\n            marginRight: theme.spacing(2),\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            flexGrow: 1,\n        },\n        followButton: {\n            marginLeft: 'auto',\n            height: 32,\n            minWidth: 64,\n            padding: theme.spacing(1, 1.5),\n            backgroundColor: '#ABFE2C',\n            color: theme.palette.common.black,\n            borderRadius: 99,\n            fontSize: '12px',\n            '&:hover': {\n                backgroundColor: '#ABFE2C',\n                color: theme.palette.common.black,\n            },\n        },\n    }\n})\ninterface Props extends ListProps {\n    accounts: FireflyBaseAPI.LensAccount[]\n}\n\nexport const LensList = memo(({ className, accounts, ...rest }: Props) => {\n    const { classes, cx } = useStyles()\n    return (\n        <List className={cx(classes.list, className)} {...rest}>\n            {accounts.map((account, key) => {\n                return <LensListItem account={account} key={key} />\n            })}\n        </List>\n    )\n})\n\nLensList.displayName = 'LensList'\n\ninterface LensListItemProps {\n    account: FireflyBaseAPI.LensAccount\n}\n\nconst LensListItem = memo<LensListItemProps>(({ account }) => {\n    const { classes } = useStyles()\n    const { account: wallet } = useChainContext()\n    const t = useWeb3ProfileTrans()\n    const profileUri = account.profileUri.filter(Boolean)\n    const lensIcon = <Icons.Lens size={20} />\n\n    const { loading, value } = useAsync(async () => {\n        const profile = await Lens.getProfileByHandle(account.handle)\n        const isFollowing = await Lens.queryFollowStatus(wallet, profile.id)\n\n        return {\n            ownedBy: profile.ownedBy,\n            isFollowing,\n        }\n    }, [account, wallet])\n\n    return (\n        <ListItem className={classes.listItem} key={account.handle}>\n            {profileUri.length ? (\n                <Image size={20} src={profileUri[0]} className={classes.avatar} fallback={lensIcon} />\n            ) : (\n                lensIcon\n            )}\n            <Typography className={classes.name}>{account.name || account.handle}</Typography>\n            <ActionButton\n                variant=\"text\"\n                loading={loading}\n                className={classes.followButton}\n                disableElevation\n                onClick={() => {\n                    CrossIsolationMessages.events.followLensDialogEvent.sendToLocal({\n                        open: true,\n                        handle: account.handle,\n                    })\n                }}>\n                {isSameAddress(wallet, value?.ownedBy)\n                    ? t.view()\n                    : value?.isFollowing\n                    ? t.following_action()\n                    : t.follow()}\n            </ActionButton>\n        </ListItem>\n    )\n})\n\nLensListItem.displayName = 'LensListItem'\n","import { isEqual, sortBy, uniqBy } from 'lodash-es'\nimport { memo, useEffect, useRef, useState } from 'react'\nimport { ShadowRootPopper, makeStyles } from '@masknet/theme'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport type { FireflyBaseAPI, NextIDBaseAPI } from '@masknet/web3-providers/types'\nimport { Fade } from '@mui/material'\nimport { emitter } from '../emitter.js'\nimport { useControlLensPopup } from '../hooks/Lens/useControlLensPopup.js'\nimport { LensList } from './LensList.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    popup: {\n        position: 'absolute',\n        zIndex: 99,\n        borderRadius: 16,\n        boxShadow:\n            theme.palette.mode === 'light'\n                ? '0px 4px 30px rgba(0, 0, 0, 0.1)'\n                : '0px 4px 30px rgba(255, 255, 255, 0.15)',\n    },\n}))\n\nexport const NextIdLensToFireflyLens = (account: NextIDBaseAPI.LensAccount): FireflyBaseAPI.LensAccount => {\n    return {\n        address: account.address,\n        name: account.displayName,\n        handle: account.handle,\n        bio: '',\n        url: '',\n        profileUri: [],\n    }\n}\n\nexport const LensPopup = memo(() => {\n    const { classes } = useStyles()\n    const holderRef = useRef<HTMLDivElement>(null)\n    const [lens, setLens] = useState<FireflyBaseAPI.LensAccount[]>([])\n    const active = useControlLensPopup(holderRef)\n    const [anchorEl, setAnchorEl] = useState<HTMLElement | null>()\n\n    useEffect(() => {\n        const unsubscribe = emitter.on('open', async ({ lensAccounts, userId, popupAnchorEl }) => {\n            setLens((oldAccounts) => {\n                return isEqual(oldAccounts, lensAccounts) ? oldAccounts : lensAccounts\n            })\n            setAnchorEl(popupAnchorEl)\n            if (lens[0]?.handle) return\n            const accounts = await NextIDProof.queryAllLens(lens[0].handle)\n            if (!accounts.length) return\n            setLens((oldAccounts) => {\n                if (accounts.length <= oldAccounts.length) return oldAccounts\n                const merged = uniqBy([...oldAccounts, ...accounts.map(NextIdLensToFireflyLens)], (x) => x.handle)\n                return sortBy(merged, [(x) => -accounts.findIndex((y) => x.handle === y.handle)])\n            })\n        })\n        return () => void unsubscribe()\n    }, [])\n\n    return (\n        <Fade in={active} easing=\"linear\" timeout={250}>\n            <ShadowRootPopper\n                open={!!anchorEl}\n                anchorEl={anchorEl}\n                keepMounted\n                className={classes.popup}\n                ref={holderRef}>\n                <LensList accounts={lens} />\n            </ShadowRootPopper>\n        </Fade>\n    )\n})\n\nLensPopup.displayName = 'LensPopup'\n","export enum FollowModuleType {\n    FeeFollowModule = 'FeeFollowModule',\n    ProfileFollowModule = 'ProfileFollowModule',\n    RevertFollowModule = 'RevertFollowModule',\n}\n\nexport type FollowModuleTypedData = {\n    profileFollowModule?: {\n        profileId: string\n    }\n\n    feeFollowModule?: {\n        currency: string\n        value: string\n    }\n}\n\nexport enum ProxyActionType {\n    ProxyActionError = 'ProxyActionError',\n    ProxyActionQueued = 'ProxyActionQueued',\n    ProxyActionStatusResult = 'ProxyActionStatusResult',\n}\n\nexport enum BroadcastType {\n    RelayerResult = 'RelayerResult',\n    RelayError = 'RelayError',\n}\n\nexport namespace LensBaseAPI {\n    export interface Profile {\n        id: string\n        handle: string\n        ownedBy: string\n        name: string\n        picture?: {\n            original?: {\n                url: string\n            }\n        }\n        stats: {\n            totalFollowers: number\n            totalFollowing: number\n        }\n        followModule?: {\n            type: FollowModuleType\n            contractAddress?: string\n            amount?: {\n                asset: {\n                    name: string\n                    symbol: string\n                    decimals: number\n                    address: string\n                }\n                value: string\n            }\n            recipient: string\n        }\n    }\n\n    export interface DoesFollow {\n        followerAddress: string\n        profileId: string\n        follows: boolean\n    }\n\n    export interface Challenge {\n        text: string\n    }\n\n    export interface Authenticate {\n        accessToken: string\n        refreshToken: string\n    }\n\n    export interface CreateFollowTypedData {\n        id: string\n        expiresAt: string\n        typedData: {\n            domain: {\n                name: string\n                chainId: number\n                version: string\n                verifyingContract: string\n            }\n            types: {\n                FollowWithSig: Array<{\n                    name: string\n                    type: string\n                }>\n            }\n            value: {\n                nonce: number\n                deadline: number\n                profileIds: string[]\n                datas: string[]\n            }\n        }\n    }\n\n    export interface CreateUnfollowTypedData {\n        id: string\n        expiresAt: string\n        typedData: {\n            domain: {\n                name: string\n                chainId: number\n                version: string\n                verifyingContract: string\n            }\n            types: {\n                BurnWithSig: Array<{\n                    name: string\n                    type: string\n                }>\n            }\n            value: {\n                nonce: number\n                deadline: number\n                tokenId: string\n            }\n        }\n    }\n\n    export interface ProxyActionError {\n        reason: string\n        lastKnownTxId: string\n        __typename: ProxyActionType.ProxyActionError\n    }\n\n    export interface ProxyActionQueued {\n        queuedAt: string\n        __typename: ProxyActionType.ProxyActionQueued\n    }\n\n    export interface ProxyActionStatusResult {\n        txHash: string\n        txId: string\n        status: string\n        __typename: ProxyActionType.ProxyActionStatusResult\n    }\n\n    export type ProxyActionStatus = ProxyActionError | ProxyActionQueued | ProxyActionStatusResult\n\n    export interface RelayerResult {\n        txHash: string\n        __typename: BroadcastType.RelayerResult\n    }\n\n    export interface RelayError {\n        reason: string\n        __typename: BroadcastType.RelayError\n    }\n\n    export type Broadcast = RelayerResult | RelayError\n\n    export interface ApprovedModuleAllowanceAmount {\n        allowance: string\n        contractAddress: string\n        currency: string\n        module: string\n    }\n    export interface TransactionPublication {\n        publicationId: string\n    }\n}\n","import urlcat from 'urlcat'\n\nexport function getLensterLink(handle: string) {\n    return urlcat('https://lenster.xyz/u/:handle', { handle })\n}\n","import { sha3, soliditySha3 } from 'web3-utils'\nimport { AbiCoder } from 'web3-eth-abi'\n\ninterface TypedDataField {\n    name: string\n    type: string\n}\n\ninterface TypedDataDomain {\n    [key: string]: any\n}\n\n// Helper function to find types for a given type name\nconst findTypes = (types: Record<string, TypedDataField[]>, primaryType: string): string[] => {\n    let result: string[] = []\n    for (const type of types[primaryType]!) {\n        result.push(`${type.type} ${type.name}`)\n        if (types[type.type]) {\n            result = result.concat(findTypes(types, type.type))\n        }\n    }\n    return result\n}\n\n// Recursively find all the dependencies of a type\nconst dependencies = (types: Record<string, TypedDataField[]>, primaryType: string, found: string[] = []): string[] => {\n    if (found.includes(primaryType)) {\n        return found\n    }\n    found.push(primaryType)\n    for (const field of types[primaryType]!) {\n        for (const dep of dependencies(types, field.type, found)) {\n            if (!found.includes(dep)) {\n                found.push(dep)\n            }\n        }\n    }\n    return found\n}\n\n// Encode the type data for hashing\nconst encodeType = (types: Record<string, TypedDataField[]>, primaryType: string): string => {\n    const depSet = dependencies(types, primaryType)\n    depSet.sort((a, b) => (a < b ? -1 : a > b ? 1 : 0))\n    return depSet\n        .map((type) => `${type}(${types[type]?.map(({ name, type }) => `${type} ${name}`).join(',')})`)\n        .join('')\n}\n\n// Generate the EIP-712 hash\nconst typeHash = (types: Record<string, TypedDataField[]>, primaryType: string): string => {\n    return sha3(encodeType(types, primaryType))!\n}\n\nexport function encodeTypedData(\n    domain: TypedDataDomain,\n    types: Record<string, TypedDataField[]>,\n    message: Record<string, any>,\n): string {\n    const coder = new AbiCoder()\n    const domainSeparator: string = sha3(\n        coder.encodeParameters(\n            Object.keys(domain).map(() => 'string'),\n            Object.values(domain),\n        ),\n    )!\n\n    const messageHash: string = sha3(coder.encodeParameters(findTypes(types, 'Message'), Object.values(message)))!\n\n    const payload: string = soliditySha3(\n        '0x1901',\n        domainSeparator,\n        sha3(coder.encodeParameters(['bytes32', 'bytes32'], [typeHash(types, 'Message'), messageHash]))!,\n    )!\n\n    return payload\n}\n","import { toDecimal } from 'web3-utils'\n\nexport function splitSignature(signature: string) {\n    if (signature.length !== 132 && !signature.startsWith('0x')) {\n        throw new Error('Invalid signature length')\n    }\n\n    // Extracting r, s, v from the signature\n    const r = signature.slice(0, 66)\n    const s = '0x' + signature.slice(66, 130)\n    const v = toDecimal('0x' + signature.slice(130, 132))\n\n    return { r, s, v }\n}\n","import type { Plugin } from '@masknet/plugin-infra'\nimport { type StorageObject } from '@masknet/shared-base'\nimport { type LensTokenStorageType } from './types.js'\n\nexport let lensTokenStorage: StorageObject<LensTokenStorageType>\n\nexport async function setupStorage(x: Plugin.SiteAdaptor.SiteAdaptorContext) {\n    const result = x.createKVStorage('persistent', {}).createSubScope<LensTokenStorageType>('LensToken', {})\n    await Promise.all([result.storage.accessToken?.initializedPromise, result.storage.refreshToken?.initializedPromise])\n    lensTokenStorage = result.storage\n}\n","import { useCallback } from 'react'\nimport { isBefore, add } from 'date-fns'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { Lens, Web3 } from '@masknet/web3-providers'\nimport { ChainId, isValidAddress } from '@masknet/web3-shared-evm'\nimport { lensTokenStorage as storage } from '../../context.js'\n\nexport function useQueryAuthenticate(address: string) {\n    const { chainId } = useChainContext()\n\n    return useCallback(async () => {\n        if (!address || chainId !== ChainId.Matic || !isValidAddress(address)) return\n\n        const accessToken = storage.accessToken?.value?.[address]\n        const refreshToken = storage.refreshToken?.value?.[address]\n        if (accessToken && isBefore(new Date(), accessToken.expireDate)) {\n            return accessToken.token\n        } else if (refreshToken && isBefore(new Date(), refreshToken.expireDate)) {\n            const authenticate = await Lens.refresh(refreshToken.token)\n            if (!authenticate) return\n            // Only reset accessToken\n            await storage.accessToken?.setValue({\n                [address]: {\n                    token: authenticate.accessToken,\n                    expireDate: add(new Date(), { minutes: 30 }),\n                },\n            })\n            return authenticate.accessToken\n        }\n\n        const challenge = await Lens.queryChallenge(address)\n        if (!challenge) return\n\n        const signature = await Web3.signMessage('message', challenge)\n        const authenticate = await Lens.authenticate(address, signature)\n        if (!authenticate) return\n\n        /**\n         * accessToken - This lasts 30 minutes before needed to be refreshed\n         * refreshToken - This lasts 7 days to allow you to keep them logged in and generate a new accessToken when they come back without them having to sign a challenge again.\n         */\n\n        await storage.accessToken?.setValue({\n            [address]: {\n                token: authenticate.accessToken,\n                expireDate: add(new Date(), { minutes: 30 }),\n            },\n        })\n\n        await storage.refreshToken?.setValue({\n            [address]: {\n                token: authenticate.refreshToken,\n                expireDate: add(new Date(), { days: 7 }),\n            },\n        })\n\n        return authenticate.accessToken\n    }, [address, chainId])\n}\n","import { useCallback, useRef, type MouseEvent, useState } from 'react'\nimport { cloneDeep } from 'lodash-es'\nimport { type AbiItem } from 'web3-utils'\nimport { delay } from '@masknet/kit'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { useContract } from '@masknet/web3-hooks-evm'\nimport { Lens, Web3 } from '@masknet/web3-providers'\nimport {\n    ChainId,\n    ContractTransaction,\n    encodeTypedData,\n    splitSignature,\n    useLensConstants,\n} from '@masknet/web3-shared-evm'\nimport LensHubABI from '@masknet/web3-contracts/abis/LensHub.json'\nimport type { LensHub } from '@masknet/web3-contracts/types/LensHub.js'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { BroadcastType, ProxyActionType, type FollowModuleTypedData } from '@masknet/web3-providers/types'\nimport { fetchJSON } from '@masknet/plugin-infra/dom/context'\nimport { type SnackbarKey, useCustomSnackbar, type SnackbarMessage, type ShowSnackbarOptions } from '@masknet/theme'\nimport { useQueryAuthenticate } from './useQueryAuthenticate.js'\nimport { useWeb3ProfileTrans } from '../../../locales/i18n_generated.js'\n\nexport function useFollow(\n    profileId?: string,\n    followModule?: FollowModuleTypedData,\n    hasDefaultProfile?: boolean,\n    onSuccess?: (event: MouseEvent<HTMLElement>) => void,\n    onFailed?: () => void,\n) {\n    const [loading, setLoading] = useState(false)\n    const t = useWeb3ProfileTrans()\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const handleQueryAuthenticate = useQueryAuthenticate(account)\n    const { LENS_HUB_PROXY_CONTRACT_ADDRESS } = useLensConstants(chainId)\n    const lensHub = useContract<LensHub>(chainId, LENS_HUB_PROXY_CONTRACT_ADDRESS, LensHubABI as AbiItem[])\n\n    const snackbarKeyRef = useRef<SnackbarKey>()\n    const { showSnackbar, closeSnackbar } = useCustomSnackbar()\n\n    const showSingletonSnackbar = useCallback(\n        (title: SnackbarMessage, options: ShowSnackbarOptions) => {\n            if (snackbarKeyRef.current !== undefined) closeSnackbar(snackbarKeyRef.current)\n            snackbarKeyRef.current = showSnackbar(title, options)\n            return () => {\n                closeSnackbar(snackbarKeyRef.current)\n            }\n        },\n        [showSnackbar, closeSnackbar],\n    )\n\n    const followWithProxyAction = useCallback(\n        async (token: string) => {\n            if (!profileId || chainId !== ChainId.Matic || followModule || !hasDefaultProfile) return\n            return Lens.followWithProxyAction(profileId, { token })\n        },\n        [profileId, chainId, followModule, hasDefaultProfile],\n    )\n\n    const queryProxyActionStatus = useCallback(async (token: string, proxyAction?: string) => {\n        if (!proxyAction) return\n\n        for (let i = 0; i < 30; i += 1) {\n            const status = await Lens.queryProxyStatus(proxyAction, { token })\n            if (!status) return\n            switch (status.__typename) {\n                case ProxyActionType.ProxyActionError:\n                    throw new Error(status.reason)\n                case ProxyActionType.ProxyActionQueued:\n                    await delay(1000)\n                    continue\n                case ProxyActionType.ProxyActionStatusResult:\n                    const receipt = await Web3.confirmTransaction(status.txHash)\n                    if (!receipt.status) return\n                    return proxyAction\n                default:\n                    // TODO: error\n                    return\n            }\n        }\n\n        return\n    }, [])\n\n    const handleFollow = useCallback<(event: MouseEvent<HTMLElement>) => Promise<void>>(\n        async (event: MouseEvent<HTMLElement>) => {\n            const cloneEvent = cloneDeep(event)\n\n            try {\n                setLoading(true)\n                if (!profileId || chainId !== ChainId.Matic) return\n                const token = await handleQueryAuthenticate()\n                if (!token) return\n                const proxyAction = await followWithProxyAction(token)\n                if (proxyAction) {\n                    onSuccess?.(cloneEvent)\n                    setLoading(false)\n                }\n\n                const result = await queryProxyActionStatus(token, proxyAction)\n\n                if (!result) {\n                    setLoading(true)\n                    const typedData = await Lens.createFollowTypedData(profileId, { token, followModule })\n\n                    if (!typedData) return\n\n                    const signature = await Web3.signMessage(\n                        'typedData',\n                        JSON.stringify(\n                            encodeTypedData(\n                                typedData.typedData.domain,\n                                typedData.typedData.types,\n                                typedData.typedData.value,\n                            ),\n                        ),\n                    )\n\n                    const { v, r, s } = splitSignature(signature)\n\n                    const { deadline, profileIds, datas } = typedData.typedData.value\n\n                    let hash: string | undefined\n\n                    try {\n                        const broadcast = await Lens.broadcast(typedData.id, signature, { token, fetcher: fetchJSON })\n                        if (broadcast?.__typename === BroadcastType.RelayError) throw new Error(broadcast.reason)\n                        else hash = broadcast?.txHash\n                    } catch {\n                        onFailed?.()\n                        const tx = await new ContractTransaction(lensHub).fillAll(\n                            lensHub?.methods.followWithSig([account, profileIds, datas, [v, r, s, deadline]]),\n                            {\n                                from: account,\n                            },\n                        )\n\n                        hash = await Web3.sendTransaction(tx)\n                    }\n\n                    if (!hash) return\n                    onSuccess?.(cloneEvent)\n                    setLoading(false)\n\n                    const receipt = await Web3.confirmTransaction(hash, {\n                        signal: AbortSignal.timeout(3 * 60 * 1000),\n                    })\n                    if (!receipt.status) throw new Error('Failed to Follow')\n                }\n            } catch (error) {\n                if (\n                    error instanceof Error &&\n                    !error.message.includes('Transaction was rejected') &&\n                    !error.message.includes('Signature canceled') &&\n                    !error.message.includes('User rejected the request') &&\n                    !error.message.includes('User rejected transaction') &&\n                    !error.message.includes('RPC Error')\n                ) {\n                    onFailed?.()\n                    showSingletonSnackbar(t.follow_lens_handle(), {\n                        processing: false,\n                        variant: 'error',\n                        message: t.network_error(),\n                    })\n                }\n            } finally {\n                setLoading(false)\n            }\n        },\n        [handleQueryAuthenticate, profileId, account, chainId, onSuccess, showSingletonSnackbar, onFailed],\n    )\n\n    return { loading, handleFollow }\n}\n","import { useCallback, useRef, type MouseEvent, useState } from 'react'\nimport { cloneDeep } from 'lodash-es'\nimport type { AbiItem } from 'web3-utils'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { Contract, Lens, Web3 } from '@masknet/web3-providers'\nimport { type SnackbarMessage, type ShowSnackbarOptions, type SnackbarKey, useCustomSnackbar } from '@masknet/theme'\nimport { ChainId, ContractTransaction, encodeTypedData, splitSignature } from '@masknet/web3-shared-evm'\nimport LensFollowNftABI from '@masknet/web3-contracts/abis/LensFollowNFT.json'\nimport type { LensFollowNFT } from '@masknet/web3-contracts/types/LensFollowNFT.js'\nimport { useQueryAuthenticate } from './useQueryAuthenticate.js'\nimport { BroadcastType } from '@masknet/web3-providers/types'\nimport { fetchJSON } from '@masknet/plugin-infra/dom/context'\nimport { useWeb3ProfileTrans } from '../../../locales/i18n_generated.js'\n\nexport function useUnfollow(\n    profileId?: string,\n    onSuccess?: (event: MouseEvent<HTMLElement>) => void,\n    onFailed?: () => void,\n) {\n    const [loading, setLoading] = useState(false)\n    const t = useWeb3ProfileTrans()\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const handleQueryAuthenticate = useQueryAuthenticate(account)\n\n    const snackbarKeyRef = useRef<SnackbarKey>()\n    const { showSnackbar, closeSnackbar } = useCustomSnackbar()\n\n    const showSingletonSnackbar = useCallback(\n        (title: SnackbarMessage, options: ShowSnackbarOptions) => {\n            if (snackbarKeyRef.current !== undefined) closeSnackbar(snackbarKeyRef.current)\n            snackbarKeyRef.current = showSnackbar(title, options)\n            return () => {\n                closeSnackbar(snackbarKeyRef.current)\n            }\n        },\n        [showSnackbar, closeSnackbar],\n    )\n\n    const handleUnfollow = useCallback(\n        async (event: MouseEvent<HTMLElement>) => {\n            const cloneEvent = cloneDeep(event)\n            try {\n                setLoading(true)\n                if (!profileId || chainId !== ChainId.Matic) return\n                const token = await handleQueryAuthenticate()\n                if (!token) return\n\n                const typedData = await Lens.createUnfollowTypedData(profileId, { token })\n\n                if (!typedData) return\n\n                const signature = await Web3.signMessage(\n                    'typedData',\n                    JSON.stringify(\n                        encodeTypedData(\n                            typedData.typedData.domain,\n                            typedData.typedData.types,\n                            typedData.typedData.value,\n                        ),\n                    ),\n                    { chainId: ChainId.Matic },\n                )\n\n                const { v, r, s } = splitSignature(signature)\n                const { tokenId, deadline } = typedData.typedData.value\n\n                let hash: string | undefined\n                try {\n                    onSuccess?.(cloneEvent)\n                    setLoading?.(false)\n                    const broadcast = await Lens.broadcast(typedData.id, signature, { token, fetcher: fetchJSON })\n                    if (broadcast?.__typename === BroadcastType.RelayError) throw new Error(broadcast.reason)\n                    else hash = broadcast?.txHash\n                } catch {\n                    onFailed?.()\n                    setLoading(true)\n\n                    const followNFTContract = Contract.getWeb3Contract<LensFollowNFT>(\n                        typedData.typedData.domain.verifyingContract,\n                        LensFollowNftABI as AbiItem[],\n                    )\n                    const tx = await new ContractTransaction(followNFTContract).fillAll(\n                        followNFTContract?.methods.burnWithSig(tokenId, [v, r, s, deadline]),\n                        { from: account },\n                    )\n                    hash = await Web3.sendTransaction(tx, { chainId: ChainId.Matic })\n                    onSuccess?.(cloneEvent)\n                    setLoading(false)\n                }\n\n                if (!hash) return\n\n                const receipt = await Web3.confirmTransaction(hash, {\n                    chainId: ChainId.Matic,\n                    signal: AbortSignal.timeout(3 * 60 * 1000),\n                })\n                if (!receipt.status) return\n            } catch (error) {\n                if (\n                    error instanceof Error &&\n                    !error.message.includes('Transaction was rejected') &&\n                    !error.message.includes('Signature canceled') &&\n                    !error.message.includes('User rejected the request') &&\n                    !error.message.includes('User rejected transaction') &&\n                    !error.message.includes('RPC Error')\n                ) {\n                    onFailed?.()\n                    showSingletonSnackbar(t.unfollow_lens_handle(), {\n                        processing: false,\n                        variant: 'error',\n                        message: t.network_error(),\n                    })\n                }\n            } finally {\n                setLoading(false)\n            }\n        },\n        [handleQueryAuthenticate, chainId, profileId, account, onSuccess, showSingletonSnackbar],\n    )\n\n    return { loading, handleUnfollow }\n}\n","import { memo, useCallback, useMemo } from 'react'\nimport { Box, Button, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { WalletIcon, SelectProviderModal } from '@masknet/shared'\nimport {\n    useChainContext,\n    useNetworkContext,\n    useProviderDescriptor,\n    useReverseAddress,\n    useWallet,\n    useWeb3Others,\n} from '@masknet/web3-hooks-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { resolveIPFS_URL } from '@masknet/web3-shared-base'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { useWeb3ProfileTrans } from '../../locales/i18n_generated.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        background: theme.palette.maskColor.bg,\n        borderRadius: 8,\n        padding: theme.spacing(1.5),\n    },\n    description: {\n        display: 'flex',\n        columnGap: 4,\n    },\n    name: {\n        fontWeight: 700,\n        fontSize: 14,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.main,\n    },\n    address: {\n        fontWeight: 700,\n        fontSize: 14,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.second,\n    },\n    avatar: {\n        objectFit: 'cover',\n        borderRadius: 99,\n    },\n}))\n\ninterface HandlerDescriptionProps extends withClasses<'container'> {\n    profile?: {\n        avatar?: string\n        handle: string\n    }\n}\n\nexport const HandlerDescription = memo<HandlerDescriptionProps>((props) => {\n    const t = useWeb3ProfileTrans()\n    const { classes } = useStyles(undefined, { props })\n    const { pluginID } = useNetworkContext()\n    const wallet = useWallet()\n    const { account, providerType } = useChainContext()\n    const Others = useWeb3Others()\n\n    const { data: domain } = useReverseAddress(pluginID, props.profile?.handle ? account : undefined)\n    const providerDescriptor = useProviderDescriptor()\n\n    const walletName = useMemo(() => {\n        if (props.profile?.handle) return props.profile.handle\n        if (domain) return domain\n        if (providerType === ProviderType.MaskWallet && wallet?.name) return wallet?.name\n        return providerDescriptor?.name\n    }, [account, domain, providerType, wallet?.name, providerDescriptor?.name, props.profile?.handle])\n\n    const handleDisconnect = useCallback(() => Web3.disconnect(), [])\n\n    const avatarUrl = useMemo(() => {\n        if (!props.profile?.avatar) return\n        return resolveIPFS_URL(props.profile?.avatar)\n    }, [props.profile?.avatar])\n\n    return (\n        <Box className={classes.container}>\n            <Box className={classes.description}>\n                <WalletIcon\n                    size={36}\n                    classes={{ mainIcon: props.profile ? classes.avatar : undefined }}\n                    mainIcon={\n                        props.profile\n                            ? avatarUrl\n                                ? avatarUrl\n                                : new URL('../assets/Lens.png', import.meta.url).href\n                            : providerDescriptor?.icon\n                    }\n                />\n                <Box>\n                    <Typography className={classes.name}>{walletName}</Typography>\n                    <Typography className={classes.address}>{Others.formatAddress(account, 4)}</Typography>\n                </Box>\n            </Box>\n            <Button variant=\"text\" onClick={props.profile ? handleDisconnect : () => SelectProviderModal.open()}>\n                {props.profile ? t.plugin_wallet_disconnect() : t.wallet_status_button_change()}\n            </Button>\n        </Box>\n    )\n})\n","// colors, back side is darker for confetti flipping\nexport const colors = [\n    { front: '#abfe2c', back: '#5CC91A' }, // Purple\n    { front: '#00C21F', back: '#21C93C' }, // Light Blue\n    { front: '#C3FF9E', back: '#9FEA71' }, // Darker Blue\n]\n\n// amount to add on each button press\nexport const confettiCount = 20\nexport const sequinCount = 10\n\n// \"physics\" variables\nexport const gravityConfetti = 0.3\nexport const gravitySequins = 0.55\nexport const dragConfetti = 0.075\nexport const dragSequins = 0.02\nexport const terminalVelocity = 3\n\n// helper function to pick a random number within a range\nexport const randomRange = (min: number, max: number) => Math.random() * (max - min) + min\n\n// helper function to get initial velocities for confetti\n// this weighted spread helps the confetti look more realistic\nexport const initConfettoVelocity = (xRange: number[], yRange: number[]) => {\n    const x = randomRange(xRange[0], xRange[1])\n    const range = yRange[1] - yRange[0] + 1\n    let y = yRange[1] - Math.abs(randomRange(0, range) + randomRange(0, range) - range)\n    if (y >= yRange[1] - 1) {\n        // Occasional confetto goes higher than the max\n        y += Math.random() < 0.25 ? randomRange(1, 3) : 0\n    }\n    return { x, y: -y }\n}\n","import { colors, dragConfetti, gravityConfetti, initConfettoVelocity, randomRange, terminalVelocity } from './utils.js'\n\nexport class Confetto {\n    randomModifier: number\n    color: { front: string; back: string }\n    dimensions: { x: number; y: number }\n    position: { x: number; y: number }\n    rotation: number\n\n    scale = { x: 1, y: 1 }\n    velocity = initConfettoVelocity([-9, 9], [6, 11])\n\n    constructor(canvasWidth: number, canvasHeight: number, buttonOffsetWidth: number, buttonOffsetHeight: number) {\n        this.randomModifier = randomRange(0, 99)\n\n        this.color = colors[Math.floor(randomRange(0, colors.length))]\n\n        this.dimensions = {\n            x: randomRange(5, 9),\n            y: randomRange(8, 15),\n        }\n\n        this.position = {\n            x: randomRange(canvasWidth / 2 - buttonOffsetWidth / 4, canvasWidth / 2 + buttonOffsetWidth / 4),\n            y: randomRange(\n                canvasHeight / 2 + buttonOffsetHeight / 2 + 8,\n                canvasHeight / 2 + 1.5 * buttonOffsetHeight - 8,\n            ),\n        }\n\n        this.rotation = randomRange(0, 2 * Math.PI)\n    }\n\n    public update() {\n        // apply forces to velocity\n        this.velocity.x -= this.velocity.x * dragConfetti\n        this.velocity.y = Math.min(this.velocity.y + gravityConfetti, terminalVelocity)\n        this.velocity.x += Math.random() > 0.5 ? Math.random() : -Math.random()\n\n        // set position\n        this.position.x += this.velocity.x\n        this.position.y += this.velocity.y\n\n        // spin confetto by scaling y and set the color, .09 just slows cosine frequency\n        this.scale.y = Math.cos((this.position.y + this.randomModifier) * 0.09)\n    }\n}\n","import { colors, dragSequins, gravitySequins, randomRange } from './utils.js'\n\nexport class Sequin {\n    color: string\n    radius: number\n    position: { x: number; y: number }\n\n    velocity = {\n        x: randomRange(-6, 6),\n        y: randomRange(-8, -12),\n    }\n\n    constructor(canvasWidth: number, canvasHeight: number, buttonOffsetWidth: number, buttonOffsetHeight: number) {\n        this.color = colors[Math.floor(randomRange(0, colors.length))].back\n        this.radius = randomRange(1, 2)\n        this.position = {\n            x: randomRange(canvasWidth / 2 - buttonOffsetWidth / 3, canvasWidth / 2 + buttonOffsetWidth / 3),\n            y: randomRange(\n                canvasHeight / 2 + buttonOffsetHeight / 2 + 8,\n                canvasHeight / 2 + 1.5 * buttonOffsetHeight - 8,\n            ),\n        }\n    }\n\n    public update() {\n        // apply forces to velocity\n        this.velocity.x -= this.velocity.x * dragSequins\n        this.velocity.y = this.velocity.y + gravitySequins\n\n        // set position\n        this.position.x += this.velocity.x\n        this.position.y += this.velocity.y\n    }\n}\n","import { useCallback, useEffect, useRef } from 'react'\nimport { Confetto } from './Confetto.js'\nimport { Sequin } from './Sequin.js'\nimport { confettiCount, sequinCount } from './utils.js'\n\n// add Confetto/Sequin objects to arrays to draw them\nconst confetti: Confetto[] = []\nconst sequins: Sequin[] = []\n\nlet buttonOffsetWidth: number = 0\nlet buttonOffsetHeight: number = 0\nlet canvasWidth: number = 0\nlet canvasHeight: number = 0\nlet globalCtx: CanvasRenderingContext2D | undefined\nlet requestId: number | undefined\nconst renderConfetti = () => {\n    if (globalCtx) {\n        globalCtx.clearRect(0, 0, canvasWidth, canvasHeight)\n        confetti.forEach((confetto, index) => {\n            if (!globalCtx) return\n            const width = confetto.dimensions.x * confetto.scale.x\n            const height = confetto.dimensions.y * confetto.scale.y\n\n            // move canvas to position and rotate\n            globalCtx.translate(confetto.position.x, confetto.position.y)\n            globalCtx.rotate(confetto.rotation)\n\n            // update confetto \"physics\" values\n            confetto.update()\n\n            // get front or back fill color\n            globalCtx.fillStyle = confetto.scale.y > 0 ? confetto.color.front : confetto.color.back\n\n            // draw confetto\n            globalCtx.fillRect(-width / 2, -height / 2, width, height)\n\n            // reset transform matrix\n            globalCtx.setTransform(1, 0, 0, 1, 0, 0)\n\n            // clear rectangle where button cuts off\n            if (confetto.velocity.y < 0) {\n                globalCtx.clearRect(\n                    canvasWidth / 2 - buttonOffsetWidth / 2,\n                    canvasHeight / 2 + buttonOffsetHeight / 2,\n                    buttonOffsetWidth,\n                    buttonOffsetHeight,\n                )\n            }\n        })\n\n        sequins.forEach((sequin, index) => {\n            if (!globalCtx) return\n            // move canvas to position\n            globalCtx.translate(sequin.position.x, sequin.position.y)\n\n            // update sequin \"physics\" values\n            sequin.update()\n\n            // set the color\n            globalCtx.fillStyle = sequin.color\n\n            // draw sequin\n            globalCtx.beginPath()\n            globalCtx.arc(0, 0, sequin.radius, 0, 2 * Math.PI)\n            globalCtx.fill()\n\n            // reset transform matrix\n            globalCtx.setTransform(1, 0, 0, 1, 0, 0)\n\n            // clear rectangle where button cuts off\n            if (sequin.velocity.y < 0) {\n                globalCtx.clearRect(\n                    canvasWidth / 2 - buttonOffsetWidth / 2,\n                    canvasHeight / 2 + buttonOffsetHeight / 2,\n                    buttonOffsetWidth,\n                    buttonOffsetHeight,\n                )\n            }\n        })\n\n        // remove confetti and sequins that fall off the screen\n        // must be done in separate loops to avoid noticeable flickering\n        confetti.forEach((confetto, index) => {\n            if (confetto.position.y >= canvasHeight) confetti.splice(index, 1)\n        })\n        sequins.forEach((sequin, index) => {\n            if (sequin.position.y >= canvasHeight) sequins.splice(index, 1)\n        })\n    }\n\n    requestId = window.requestAnimationFrame(renderConfetti)\n}\n\nexport function useConfettiExplosion() {\n    const canvasRef = useRef<HTMLCanvasElement | null>(null)\n\n    useEffect(() => {\n        const resize = () => {\n            const canvas = canvasRef.current\n            if (!canvas) return\n            canvas.width = window.innerWidth\n            canvas.height = window.innerHeight\n        }\n\n        window.addEventListener('resize', resize)\n        renderConfetti()\n        return () => {\n            if (requestId) window.cancelAnimationFrame(requestId)\n            window.removeEventListener('resize', resize)\n        }\n    }, [])\n\n    const showConfettiExplosion = useCallback((width: number, height: number) => {\n        const canvas = canvasRef.current\n        if (!canvas) return\n        const ctx = canvas.getContext('2d')\n        if (!ctx) return\n        buttonOffsetWidth = width\n        buttonOffsetHeight = height\n        canvasWidth = canvas.width\n        canvasHeight = canvas.height\n        globalCtx = ctx\n        for (let i = 0; i < confettiCount; i += 1) {\n            confetti.push(new Confetto(canvas.width, canvas.height, width, height))\n        }\n        for (let i = 0; i < sequinCount; i += 1) {\n            sequins.push(new Sequin(canvas.width, canvas.height, width, height))\n        }\n    }, [])\n\n    return {\n        showConfettiExplosion,\n        canvasRef,\n    }\n}\n","import { useMemo, useState, type MouseEvent, useCallback } from 'react'\nimport { useAsyncRetry } from 'react-use'\nimport { first } from 'lodash-es'\nimport { Icons } from '@masknet/icons'\nimport {\n    ChainBoundary,\n    EthereumERC20TokenApprovedBoundary,\n    InjectedDialog,\n    WalletConnectedBoundary,\n} from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { ActionButton, makeStyles, useCustomSnackbar } from '@masknet/theme'\nimport { useChainContext, useFungibleTokenBalance, useNetworkContext, useWallet } from '@masknet/web3-hooks-base'\nimport { Lens } from '@masknet/web3-providers'\nimport { FollowModuleType } from '@masknet/web3-providers/types'\nimport { formatBalance, isLessThan, isSameAddress, resolveIPFS_URL, ZERO } from '@masknet/web3-shared-base'\nimport { ChainId, createERC20Token, formatAmount, ProviderType } from '@masknet/web3-shared-evm'\nimport { Avatar, Box, Button, buttonClasses, CircularProgress, DialogContent, Typography } from '@mui/material'\nimport { Web3ProfileTrans, useWeb3ProfileTrans } from '../../locales/i18n_generated.js'\nimport { getLensterLink } from '../../utils.js'\nimport { useFollow } from '../hooks/Lens/useFollow.js'\nimport { useUnfollow } from '../hooks/Lens/useUnfollow.js'\nimport { HandlerDescription } from './HandlerDescription.js'\nimport { useConfettiExplosion } from '../hooks/ConfettiExplosion/index.js'\n\nconst useStyles = makeStyles<{ account: boolean }>()((theme, { account }) => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    name: {\n        fontSize: 16,\n        lineHeight: '20px',\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n        marginTop: 24,\n    },\n    handle: {\n        fontSize: 16,\n        lineHeight: '20px',\n        fontWeight: 400,\n        color: theme.palette.maskColor.main,\n        margin: theme.spacing(0.5, 0),\n    },\n    followers: {\n        display: 'flex',\n        justifyContent: 'center',\n        columnGap: 8,\n    },\n    dialogTitle: {\n        background: `${theme.palette.maskColor.bottom}!important`,\n    },\n    dialogContent: {\n        maxWidth: 400,\n        minHeight: 398,\n    },\n    actions: {\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: 12,\n        width: '100%',\n        marginTop: 24,\n    },\n    followAction: {\n        backgroundColor: '#A1FE27',\n        color: theme.palette.maskColor.publicMain,\n        '&:hover': {\n            backgroundColor: '#A1FE27',\n            color: theme.palette.maskColor.publicMain,\n        },\n        [`&.${buttonClasses.disabled}`]: {\n            background: '#A1FE27',\n            opacity: 0.6,\n            color: theme.palette.maskColor.publicMain,\n        },\n    },\n    profile: {\n        marginTop: account ? 24 : 44,\n        width: '100%',\n    },\n    tips: {\n        marginBottom: theme.spacing(3),\n        color: theme.palette.maskColor.main,\n        fontSize: 14,\n    },\n    canvas: {\n        height: '100vh',\n        pointerEvents: 'none',\n        position: 'fixed',\n        width: '100%',\n        zIndex: 2,\n        top: 0,\n        left: 0,\n    },\n    linkButton: {\n        '&:hover': {\n            backgroundColor: theme.palette.maskColor.thirdMain,\n        },\n    },\n}))\n\ninterface Props {\n    handle?: string\n    onClose(): void\n}\n\nlet task: Promise<void> | undefined\n\nexport function FollowLensDialog({ handle, onClose }: Props) {\n    const t = useWeb3ProfileTrans()\n\n    const wallet = useWallet()\n    const [isFollowing, setIsFollowing] = useState(false)\n    const [isHovering, setIsHovering] = useState(false)\n    const { classes } = useStyles({ account: !!wallet })\n    const { account, chainId, providerType } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { pluginID } = useNetworkContext()\n\n    const { showSnackbar } = useCustomSnackbar()\n\n    // #region profile information\n    const { value, loading } = useAsyncRetry(async () => {\n        if (!handle || !open || !open) return\n        const profile = await Lens.getProfileByHandle(handle)\n\n        if (!profile) return\n        const isFollowing = await Lens.queryFollowStatus(account, profile.id)\n\n        const defaultProfile = await Lens.queryDefaultProfileByAddress(account)\n\n        const profiles = await Lens.queryProfilesByAddress(account)\n\n        setIsFollowing(!!isFollowing)\n        return {\n            profile,\n            isSelf: isSameAddress(profile.ownedBy, account),\n            isFollowing,\n            defaultProfile: defaultProfile ?? first(profiles),\n        }\n    }, [handle, open, account])\n\n    const { profile, defaultProfile, isSelf } = value ?? {}\n\n    const followModule = useMemo(() => {\n        if (profile?.followModule?.type === FollowModuleType.ProfileFollowModule && defaultProfile) {\n            return {\n                profileFollowModule: {\n                    profileId: defaultProfile.id,\n                },\n            }\n        } else if (profile?.followModule?.type === FollowModuleType.FeeFollowModule && profile.followModule.amount) {\n            return {\n                feeFollowModule: {\n                    currency: profile.followModule.amount.asset.address,\n                    value: profile.followModule.amount.value,\n                },\n            }\n        }\n        return\n    }, [profile, defaultProfile])\n    // #endregion\n\n    const approved = useMemo(() => {\n        if (!profile?.followModule?.amount?.asset) return { amount: ZERO.toFixed() }\n        const { address, name, symbol, decimals } = profile.followModule.amount.asset\n        const token = createERC20Token(chainId, address, name, symbol, decimals)\n        const amount = formatAmount(profile.followModule.amount.value, decimals)\n\n        return {\n            token,\n            amount,\n        }\n    }, [profile?.followModule?.amount, chainId])\n\n    // #region follow and unfollow event handler\n    const { showConfettiExplosion, canvasRef } = useConfettiExplosion()\n    const { loading: followLoading, handleFollow } = useFollow(\n        profile?.id,\n        followModule,\n        !!defaultProfile,\n        (event: MouseEvent<HTMLElement>) => {\n            showConfettiExplosion(event.currentTarget.offsetWidth, event.currentTarget.offsetHeight)\n            setIsFollowing(true)\n        },\n        () => setIsFollowing(false),\n    )\n    const { loading: unfollowLoading, handleUnfollow } = useUnfollow(\n        profile?.id,\n        (event: MouseEvent<HTMLElement>) => {\n            setIsFollowing(false)\n        },\n        () => setIsFollowing(true),\n    )\n    // #endregion\n\n    const { data: feeTokenBalance, isLoading: getBalanceLoading } = useFungibleTokenBalance(\n        NetworkPluginID.PLUGIN_EVM,\n        profile?.followModule?.amount?.asset.address ?? '',\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<HTMLElement>) => {\n            if (task) {\n                showSnackbar(isFollowing ? t.lens_unfollow() : t.lens_follow(), {\n                    processing: true,\n                    message: isFollowing ? t.lens_unfollow_processing_tips() : t.lens_follow_processing_tips(),\n                    autoHideDuration: 2000,\n                })\n                return\n            }\n            task = (isFollowing ? handleUnfollow(event) : handleFollow(event)).finally(() => (task = undefined))\n        },\n        [handleFollow, handleUnfollow, isFollowing],\n    )\n\n    const disabled = useMemo(() => {\n        if (\n            !account ||\n            !!wallet?.owner ||\n            pluginID !== NetworkPluginID.PLUGIN_EVM ||\n            providerType === ProviderType.Fortmatic ||\n            followLoading ||\n            unfollowLoading ||\n            (profile?.followModule?.type === FollowModuleType.ProfileFollowModule && !defaultProfile) ||\n            (profile?.followModule?.type === FollowModuleType.FeeFollowModule &&\n                profile.followModule.amount &&\n                (!feeTokenBalance ||\n                    isLessThan(\n                        formatBalance(feeTokenBalance, profile.followModule.amount.asset.decimals),\n                        profile.followModule.amount.value,\n                    ))) ||\n            profile?.followModule?.type === FollowModuleType.RevertFollowModule\n        )\n            return true\n\n        return false\n    }, [\n        account,\n        wallet?.owner,\n        chainId,\n        followLoading,\n        unfollowLoading,\n        feeTokenBalance,\n        profile?.followModule,\n        pluginID,\n    ])\n\n    const buttonText = useMemo(() => {\n        if (isFollowing) {\n            return isHovering ? t.unfollow() : t.following_action()\n        } else if (profile?.followModule?.type === FollowModuleType.FeeFollowModule && profile.followModule.amount) {\n            return t.follow_for_fees({\n                value: profile.followModule.amount.value,\n                symbol: profile.followModule.amount.asset.symbol,\n            })\n        }\n\n        return t.follow()\n    }, [isFollowing, isHovering, profile])\n\n    const tips = useMemo(() => {\n        if (isSelf && profile) return t.edit_profile_tips({ profile: profile.handle })\n        if (wallet?.owner || pluginID !== NetworkPluginID.PLUGIN_EVM || providerType === ProviderType.Fortmatic)\n            return t.follow_wallet_tips()\n        else if (profile?.followModule?.type === FollowModuleType.ProfileFollowModule && !defaultProfile)\n            return t.follow_with_profile_tips()\n        else if (\n            profile?.followModule?.type === FollowModuleType.FeeFollowModule &&\n            profile.followModule.amount &&\n            (!feeTokenBalance ||\n                isLessThan(\n                    formatBalance(feeTokenBalance, profile.followModule.amount.asset.decimals),\n                    profile.followModule.amount.value,\n                ))\n        )\n            return t.follow_with_charge_tips()\n        else if (profile?.followModule?.type === FollowModuleType.RevertFollowModule) return t.follow_with_revert_tips()\n        else if (!defaultProfile) {\n            return t.follow_gas_tips()\n        }\n        return\n    }, [wallet?.owner, chainId, profile, feeTokenBalance, pluginID, providerType, isSelf])\n\n    const avatar = useMemo(() => {\n        if (!profile?.picture?.original) return\n        return resolveIPFS_URL(profile?.picture?.original.url)\n    }, [profile?.picture?.original])\n\n    return (\n        <InjectedDialog\n            open\n            onClose={onClose}\n            title={t.lens()}\n            classes={{ dialogTitle: classes.dialogTitle, paper: classes.dialogContent }}>\n            <DialogContent sx={{ padding: 3 }}>\n                {!value && (loading || getBalanceLoading) ? (\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight={342}>\n                        <CircularProgress />\n                    </Box>\n                ) : (\n                    <Box className={classes.container}>\n                        <Avatar\n                            src={avatar ?? new URL('../assets/Lens.png', import.meta.url).toString()}\n                            sx={{ width: 64, height: 64 }}\n                        />\n                        <Typography className={classes.name}>{profile?.name}</Typography>\n                        <Typography className={classes.handle}>@{profile?.handle}</Typography>\n                        <Typography className={classes.followers}>\n                            <Web3ProfileTrans.followers\n                                components={{ strong: <strong /> }}\n                                values={{ followers: String(profile?.stats?.totalFollowers ?? '0') }}\n                            />\n                            <Web3ProfileTrans.following\n                                components={{ strong: <strong /> }}\n                                values={{ following: String(profile?.stats?.totalFollowing ?? '0') }}\n                            />\n                        </Typography>\n                        <Box className={classes.actions}>\n                            {isSelf ? (\n                                <Button\n                                    variant=\"roundedContained\"\n                                    className={classes.followAction}\n                                    href={profile?.handle ? getLensterLink(profile.handle) : '#'}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    endIcon={<Icons.LinkOut size={18} />}\n                                    sx={{ cursor: 'pointer' }}>\n                                    {t.edit_profile_in_lenster()}\n                                </Button>\n                            ) : (\n                                <>\n                                    <EthereumERC20TokenApprovedBoundary\n                                        spender={value?.profile.followModule?.contractAddress}\n                                        amount={approved.amount}\n                                        token={!isFollowing ? approved.token : undefined}\n                                        showHelperToken={false}\n                                        ActionButtonProps={{\n                                            variant: 'roundedContained',\n                                            className: classes.followAction,\n                                            disabled,\n                                        }}\n                                        infiniteUnlockContent={t.unlock_token_tips({\n                                            value: value?.profile.followModule?.amount?.value ?? ZERO.toFixed(),\n                                            symbol: approved.token?.symbol ?? '',\n                                        })}\n                                        failedContent={t.unlock_token_tips({\n                                            value: value?.profile.followModule?.amount?.value ?? ZERO.toFixed(),\n                                            symbol: approved.token?.symbol ?? '',\n                                        })}>\n                                        <ChainBoundary\n                                            disableConnectWallet\n                                            expectedPluginID={pluginID}\n                                            expectedChainId={ChainId.Matic}\n                                            ActionButtonPromiseProps={{\n                                                variant: 'roundedContained',\n                                                className: classes.followAction,\n                                                startIcon: null,\n                                                disabled,\n                                            }}\n                                            switchText={t.switch_network_tips()}>\n                                            <ActionButton\n                                                variant=\"roundedContained\"\n                                                className={classes.followAction}\n                                                disabled={disabled}\n                                                loading={followLoading || unfollowLoading || loading}\n                                                onClick={handleClick}\n                                                onMouseOver={() => setIsHovering(true)}\n                                                onMouseOut={() => setIsHovering(false)}>\n                                                {buttonText}\n                                            </ActionButton>\n                                        </ChainBoundary>\n                                    </EthereumERC20TokenApprovedBoundary>\n                                    <Button\n                                        className={classes.linkButton}\n                                        variant=\"roundedOutlined\"\n                                        href={profile?.handle ? getLensterLink(profile.handle) : '#'}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        endIcon={<Icons.LinkOut size={18} />}\n                                        sx={{ cursor: 'pointer' }}>\n                                        {t.lenster()}\n                                    </Button>\n                                </>\n                            )}\n                        </Box>\n                        <Box className={classes.profile}>\n                            <WalletConnectedBoundary\n                                offChain\n                                hideRiskWarningConfirmed\n                                expectedChainId={ChainId.Matic}\n                                ActionButtonProps={{ variant: 'roundedContained' }}>\n                                {tips ? <Typography className={classes.tips}>{tips}</Typography> : null}\n                                <HandlerDescription\n                                    profile={\n                                        defaultProfile\n                                            ? {\n                                                  avatar: defaultProfile.picture?.original?.url,\n                                                  handle: defaultProfile.handle,\n                                              }\n                                            : undefined\n                                    }\n                                />\n                            </WalletConnectedBoundary>\n                        </Box>\n                    </Box>\n                )}\n                <canvas\n                    className={classes.canvas}\n                    id=\"follow-button-confetto\"\n                    ref={canvasRef}\n                    width={window.innerWidth}\n                    height={window.innerHeight}\n                />\n            </DialogContent>\n        </InjectedDialog>\n    )\n}\n","import { lastRecognizedProfile } from '@masknet/plugin-infra/content-script/context'\nimport { allPersonas, currentPersona } from '@masknet/plugin-infra/dom/context'\nimport { useSubscription } from 'use-subscription'\n\nexport function useCurrentPersona() {\n    return useSubscription(currentPersona)\n}\n\nexport function useLastRecognizedProfile() {\n    return useSubscription(lastRecognizedProfile)\n}\n\nexport function useAllPersonas() {\n    return useSubscription(allPersonas)\n}\n","import { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { Link, Switch, Typography } from '@mui/material'\nimport { memo } from 'react'\nimport { WalletIcon } from '../WalletIcon/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        backgroundColor: theme.palette.maskColor.bottom,\n        borderRadius: 8,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: theme.spacing(1.25, 1),\n    },\n    left: {\n        display: 'flex',\n        columnGap: 10,\n        alignItems: 'center',\n    },\n    name: {\n        color: theme.palette.maskColor.main,\n        lineHeight: '18px',\n        fontWeight: 700,\n    },\n    address: {\n        color: theme.palette.maskColor.second,\n        fontSize: 12,\n        lineHeight: '16px',\n        display: 'flex',\n        alignItems: 'center',\n    },\n    link: {\n        height: 14,\n        color: theme.palette.maskColor.second,\n    },\n}))\n\ninterface WalletSettingCardUIProps {\n    icon?: string\n    walletName?: string\n    formattedAddress?: string\n    addressLink?: string\n    checked: boolean\n    onSwitchChange: () => void\n}\n\nexport const WalletSettingCardUI = memo<WalletSettingCardUIProps>(\n    ({ icon, walletName, formattedAddress, addressLink, checked, onSwitchChange }) => {\n        const { classes } = useStyles()\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.left}>\n                    <WalletIcon mainIcon={icon} size={30} />\n                    <div>\n                        <Typography className={classes.name}>{walletName}</Typography>\n                        <Typography className={classes.address}>\n                            {formattedAddress}\n                            <Link\n                                href={addressLink}\n                                target=\"_blank\"\n                                title=\"View on Explorer\"\n                                rel=\"noopener noreferrer\"\n                                className={classes.link}>\n                                <Icons.LinkOut size={14} />\n                            </Link>\n                        </Typography>\n                    </div>\n                </div>\n                <Switch checked={checked} onChange={onSwitchChange} />\n            </div>\n        )\n    },\n)\n","import { memo, useMemo } from 'react'\nimport type { BindingProof } from '@masknet/shared-base'\nimport { isSameAddress, resolveNextID_NetworkPluginID } from '@masknet/web3-shared-base'\nimport {\n    useDefaultChainId,\n    useNetworkDescriptor,\n    useReverseAddress,\n    useWallets,\n    useWeb3Others,\n} from '@masknet/web3-hooks-base'\nimport { WalletSettingCardUI } from './UI.js'\n\ninterface WalletSettingCardProps {\n    wallet: BindingProof\n    fallbackName?: string\n    checked: boolean\n    onSwitchChange: (address: string) => void\n}\n\nexport const WalletSettingCard = memo<WalletSettingCardProps>(function WalletSettingCard({\n    wallet,\n    fallbackName,\n    checked,\n    onSwitchChange,\n}) {\n    const wallets = useWallets()\n    const networkPluginId = resolveNextID_NetworkPluginID(wallet.platform)\n    const chainId = useDefaultChainId(networkPluginId)\n    const networkDescriptor = useNetworkDescriptor(networkPluginId, chainId)\n    const Others = useWeb3Others(networkPluginId)\n    const { data: domain } = useReverseAddress(networkPluginId, wallet.identity)\n\n    const walletName = useMemo(() => {\n        if (domain) return domain\n        const walletAtDB = wallets.find((x) => isSameAddress(wallet.identity, x.address))\n        if (walletAtDB) return walletAtDB.name\n        return\n    }, [domain, wallets, wallet.identity])\n\n    const formattedAddress = Others.formatAddress(wallet.identity, 4)\n    const addressLink = Others.explorerResolver.addressLink(chainId, wallet.identity)\n    return (\n        <WalletSettingCardUI\n            onSwitchChange={() => onSwitchChange(wallet.identity)}\n            icon={networkDescriptor?.icon}\n            formattedAddress={formattedAddress}\n            addressLink={addressLink}\n            walletName={walletName ?? fallbackName}\n            checked={checked}\n        />\n    )\n})\n","import { memo, useState, useCallback, useMemo, useRef } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport { Icons } from '@masknet/icons'\nimport { PlatformAvatar, WalletSettingCard } from '@masknet/shared'\nimport { type BindingProof, EMPTY_LIST } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Twitter } from '@masknet/web3-providers'\nimport {\n    Card,\n    CardContent,\n    CardHeader,\n    Collapse,\n    Skeleton,\n    Typography,\n    type CardProps,\n    Button,\n    alpha,\n} from '@mui/material'\nimport { resolveNextIDPlatformWalletName } from '@masknet/web3-shared-base'\nimport { useWeb3ProfileTrans } from '../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    card: {\n        backgroundColor: theme.palette.maskColor.bottom,\n        boxShadow:\n            theme.palette.mode === 'dark' ? '0px 0px 20px rgba(255, 255, 255, 0.12)' : '0 0 20px rgba(0, 0, 0, 0.05)',\n    },\n    cursor: {\n        cursor: 'pointer',\n    },\n    content: {\n        padding: theme.spacing(0, 2, 2),\n        paddingBottom: '16px !important',\n    },\n    avatar: {\n        marginRight: theme.spacing(1),\n    },\n    headerContent: {\n        height: 40,\n    },\n    action: {\n        display: 'flex',\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    wallets: {\n        borderTop: `1px solid ${theme.palette.maskColor.line}`,\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        gap: theme.spacing(1.5),\n    },\n    percent: {\n        width: 36,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 16,\n    },\n    arrowWrapper: {\n        width: 38,\n        height: 38,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    titleWrapper: {\n        display: 'flex',\n    },\n    title: {\n        height: 18,\n        lineHeight: '18px',\n        fontSize: 14,\n        fontWeight: 'bold',\n        color: theme.palette.maskColor.main,\n    },\n    current: {\n        display: 'inline-block',\n        marginLeft: theme.spacing(1.5),\n        borderRadius: 4,\n        fontWeight: 'bold',\n        fontSize: '10px',\n        height: theme.spacing(2),\n        lineHeight: '16px',\n        padding: '0 6px',\n        boxSizing: 'border-box',\n        color: theme.palette.maskColor.primary,\n        backgroundColor: alpha(theme.palette.maskColor.primary, 0.1),\n    },\n    subheader: {\n        height: 16,\n        lineHeight: '16px',\n        fontSize: 12,\n        fontWeight: 'normal',\n        color: theme.palette.maskColor.second,\n        marginTop: theme.spacing(0.5),\n    },\n    providerIcon: {\n        padding: 1,\n        background: theme.palette.maskColor.white,\n    },\n}))\n\ninterface Props extends CardProps {\n    profile: BindingProof\n    avatar?: string\n    walletProofs?: BindingProof[]\n    unlistedAddresses: string[]\n    pendingUnlistedAddresses: string[]\n    initialExpanded?: boolean\n    isCurrent?: boolean\n    onToggle?(identity: string, address: string): void\n    onAddWallet?(): void\n}\n\nexport const ProfileCard = memo(function ProfileCard({\n    profile,\n    avatar,\n    walletProofs = EMPTY_LIST,\n    className,\n    unlistedAddresses,\n    pendingUnlistedAddresses,\n    initialExpanded = false,\n    isCurrent,\n    onToggle,\n    onAddWallet,\n    ...rest\n}: Props) {\n    const { classes, cx } = useStyles()\n    const t = useWeb3ProfileTrans()\n    const [expanded, setExpanded] = useState(initialExpanded)\n    const { data: user } = useQuery({\n        queryKey: ['twitter', 'profile', profile.identity],\n        queryFn: () => Twitter.getUserByScreenName(profile.identity),\n    })\n    const nickname = user?.nickname || profile.name || profile.identity\n    // Identities of Twitter proof get lowered case. Prefer handle from Twitter API.\n    const handle = user?.screenName || profile.identity\n    const avatarUrl = user?.avatarURL || avatar\n    const handleSwitch = useCallback(\n        (address: string) => {\n            onToggle?.(profile.identity, address)\n        },\n        [onToggle, profile.identity],\n    )\n    const listingAddresses = useMemo(() => {\n        const addresses = walletProofs.map((x) => x.identity)\n        return addresses.filter((x) => !pendingUnlistedAddresses.includes(x))\n    }, [pendingUnlistedAddresses])\n\n    const action = walletProofs.length ? (\n        <>\n            <Icons.Wallet size={24} />\n            <Typography className={classes.percent} variant=\"body2\" mx={1}>\n                {listingAddresses.length}/{walletProofs.length}\n            </Typography>\n            <div className={classes.arrowWrapper}>\n                {expanded ? <Icons.ArrowUp size={20} /> : <Icons.ArrowDrop size={20} />}\n            </div>\n        </>\n    ) : (\n        <Button variant=\"text\" disableRipple onClick={onAddWallet} sx={{ px: 1 }}>\n            {t.add_wallet()}\n        </Button>\n    )\n    const cardRef = useRef<HTMLDivElement>(null)\n\n    return (\n        <Card className={cx(classes.card, className)} ref={cardRef} {...rest}>\n            <CardHeader\n                className={walletProofs.length ? classes.cursor : undefined}\n                classes={{\n                    avatar: classes.avatar,\n                    action: classes.action,\n                    content: classes.headerContent,\n                }}\n                avatar={\n                    <PlatformAvatar\n                        classes={{ providerIcon: classes.providerIcon }}\n                        networkIcon={avatarUrl}\n                        providerIcon={new URL('../assets/TwitterXRound.svg', import.meta.url).href}\n                        size={36}\n                    />\n                }\n                title={\n                    <div className={classes.titleWrapper}>\n                        <Typography variant=\"subtitle1\" className={classes.title}>\n                            {nickname}\n                        </Typography>\n                        {isCurrent ? (\n                            <span className={classes.current} role=\"status\">\n                                {t.current()}\n                            </span>\n                        ) : null}\n                    </div>\n                }\n                subheader={\n                    <Typography variant=\"subtitle2\" className={classes.subheader}>\n                        @{handle}\n                    </Typography>\n                }\n                action={action}\n                onClick={() => {\n                    if (!walletProofs.length) return\n                    return setExpanded((v) => !v)\n                }}\n            />\n            {walletProofs.length ? (\n                <Collapse\n                    in={expanded}\n                    easing=\"ease-in-out\"\n                    onEntered={() => {\n                        cardRef.current?.scrollIntoView({\n                            block: 'nearest',\n                            behavior: 'smooth',\n                        })\n                    }}>\n                    <CardContent className={classes.content}>\n                        <div className={classes.wallets}>\n                            {walletProofs.map((proof, i) => {\n                                const checked = listingAddresses.includes(proof.identity)\n                                const fallbackName = resolveNextIDPlatformWalletName(proof.platform)\n                                return (\n                                    <WalletSettingCard\n                                        key={proof.identity}\n                                        wallet={proof}\n                                        fallbackName={`${fallbackName} ${walletProofs.length - i}`}\n                                        checked={checked}\n                                        onSwitchChange={handleSwitch}\n                                    />\n                                )\n                            })}\n                        </div>\n                    </CardContent>\n                </Collapse>\n            ) : null}\n        </Card>\n    )\n})\n\nexport const ProfileCardSkeleton = memo(function ProfileCardSkeleton(props: CardProps) {\n    const { classes, cx } = useStyles()\n    return (\n        <Card {...props} className={cx(classes.card, props.className)}>\n            <CardHeader\n                classes={{\n                    avatar: classes.avatar,\n                    action: classes.action,\n                    content: classes.headerContent,\n                }}\n                avatar={<Skeleton variant=\"circular\" height={36} width={36} />}\n                title={<Skeleton variant=\"text\" height={18} width={60} />}\n                subheader={<Skeleton variant=\"text\" height={16} width={40} />}\n            />\n        </Card>\n    )\n})\n","import { isEqual, isEqualWith, range, sortBy, uniq, uniqBy } from 'lodash-es'\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAsyncFn, useAsyncRetry } from 'react-use'\nimport { DialogActions, DialogContent } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { Alert, EmptyStatus, InjectedDialog, PersonaAction, PopupHomeTabType, usePersonaProofs } from '@masknet/shared'\nimport { EMPTY_LIST, NextIDPlatform, PopupRoutes, PluginID, EMPTY_OBJECT } from '@masknet/shared-base'\nimport { ActionButton, makeStyles, useCustomSnackbar } from '@masknet/theme'\nimport { useUnlistedAddressConfig } from '@masknet/web3-hooks-base'\nimport { openPopupWindow, queryPersonaAvatar, signWithPersona } from '@masknet/plugin-infra/dom/context'\nimport { useWeb3ProfileTrans } from '../../locales/index.js'\nimport { useAllPersonas, useCurrentPersona, useLastRecognizedProfile } from '../hooks/index.js'\nimport { ProfileCard, ProfileCardSkeleton } from './ProfileCard.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    content: {\n        width: 568,\n        height: 484,\n        padding: theme.spacing(1, 2, 0),\n        '::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    profileCard: {\n        margin: theme.spacing(1.5, 0),\n    },\n    actions: {\n        padding: '0px !important',\n        boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.05)',\n    },\n    button: {\n        width: 276,\n    },\n    titleTailButton: {\n        cursor: 'pointer',\n        color: theme.palette.maskColor.main,\n    },\n}))\n\ninterface Props {\n    open: boolean\n    onClose(): void\n}\nexport const Web3ProfileDialog = memo(function Web3ProfileDialog({ open, onClose }: Props) {\n    const t = useWeb3ProfileTrans()\n    const { classes } = useStyles()\n    const myProfile = useLastRecognizedProfile()\n    const allPersona = useAllPersonas()\n\n    const [tipsVisible, setTipsVisible] = useState(true)\n    const dismissTips = useCallback(() => setTipsVisible(false), [])\n\n    const persona = useCurrentPersona()\n    const currentPersona = allPersona.find((x) => x.identifier.rawPublicKey === persona?.rawPublicKey)\n    const personaPublicKey = currentPersona?.identifier.publicKeyAsHex\n    const allLinkedProfiles = useMemo(() => {\n        return allPersona.flatMap((x) => x.linkedProfiles).filter((x) => x.identifier.network === 'twitter.com')\n    }, [allPersona])\n\n    const { data: proofs, isLoading: loadingBinding, isFetched } = usePersonaProofs(personaPublicKey)\n\n    const twitterProofs = useMemo(() => {\n        if (!proofs?.length) return EMPTY_LIST\n        return uniqBy(\n            proofs.filter((proof) => proof.platform === NextIDPlatform.Twitter && proof.is_valid),\n            (x) => x.identity,\n        )\n    }, [proofs])\n    const walletProofs = useMemo(() => {\n        if (!proofs?.length) return EMPTY_LIST\n        return uniqBy(\n            proofs.filter((proof) => proof.platform === NextIDPlatform.Ethereum),\n            (x) => x.identity,\n        )\n    }, [proofs])\n\n    const socialIds = useMemo(() => twitterProofs.map((x) => x.identity), [twitterProofs])\n    const [{ data: unlistedAddressConfig = EMPTY_OBJECT, isInitialLoading, refetch }, updateConfig] =\n        useUnlistedAddressConfig(\n            {\n                identifier: currentPersona?.identifier,\n                pluginID: PluginID.Web3Profile,\n                socialIds,\n            },\n            signWithPersona,\n        )\n\n    const [pendingUnlistedConfig, setPendingUnlistedConfig] = useState<Record<string, string[]>>({})\n    useEffect(() => {\n        setPendingUnlistedConfig(unlistedAddressConfig)\n    }, [unlistedAddressConfig])\n    const isClean = useMemo(() => {\n        return isEqualWith(unlistedAddressConfig, pendingUnlistedConfig, (config1, config2) => {\n            // Some identities might only in pendingUnlistedConfig but not in migratedUnlistedAddressConfig,\n            // so we merged all the identities\n            const keys = uniq([...Object.keys(config1), ...Object.keys(config2)])\n            for (const key of keys) {\n                if (!isEqual(sortBy(config1[key] || []), sortBy(config2[key] || []))) return false\n            }\n            return true\n        })\n    }, [unlistedAddressConfig, pendingUnlistedConfig])\n\n    const toggleUnlisted = useCallback((identity: string, address: string) => {\n        setPendingUnlistedConfig((config) => {\n            const list = config[identity] ?? []\n            return {\n                ...config,\n                [identity]: list.includes(address) ? list.filter((x) => x !== address) : [...list, address],\n            }\n        })\n    }, [])\n\n    const { showSnackbar } = useCustomSnackbar()\n    const [{ loading: submitting }, handleSubmit] = useAsyncFn(async () => {\n        try {\n            await updateConfig(pendingUnlistedConfig)\n            showSnackbar(t.save_successfully(), {\n                variant: 'success',\n                message: t.save_successfully_message(),\n                autoHideDuration: 2000,\n            })\n        } catch {\n            showSnackbar(t.save_failed(), {\n                variant: 'error',\n                message: t.save_failed_message(),\n            })\n        }\n\n        refetch()\n    }, [pendingUnlistedConfig, t, updateConfig])\n\n    const { value: avatar } = useAsyncRetry(async () => queryPersonaAvatar(currentPersona?.identifier), [])\n\n    const openPopupsWindow = useCallback(() => {\n        openPopupWindow(PopupRoutes.Personas, {\n            tab: PopupHomeTabType.ConnectedWallets,\n        })\n    }, [])\n\n    const disabled = isClean || isInitialLoading\n\n    return (\n        <InjectedDialog\n            classes={{ dialogContent: classes.content }}\n            title={t.web3_profile()}\n            fullWidth={false}\n            open={open}\n            isOnBack\n            titleTail={<Icons.Wallet size={24} onClick={openPopupsWindow} className={classes.titleTailButton} />}\n            onClose={onClose}>\n            <DialogContent className={classes.content}>\n                <Alert open={tipsVisible} onClose={dismissTips}>\n                    {t.setup_tips()}\n                </Alert>\n                {loadingBinding && !twitterProofs.length ? (\n                    range(3).map((v) => <ProfileCardSkeleton className={classes.profileCard} key={v} />)\n                ) : isFetched && !twitterProofs.length ? (\n                    <EmptyStatus height={360}>{t.no_verified_account()}</EmptyStatus>\n                ) : (\n                    twitterProofs.map((proof) => {\n                        const avatar = allLinkedProfiles.find((x) => x.identifier.userId === proof.identity)?.avatar\n                        const unlistedAddresses = unlistedAddressConfig[proof.identity] ?? EMPTY_LIST\n                        const pendingUnlistedAddresses = pendingUnlistedConfig[proof.identity] ?? EMPTY_LIST\n                        const isCurrent = proof.identity.toLowerCase() === myProfile?.identifier?.userId.toLowerCase()\n                        return (\n                            <ProfileCard\n                                key={proof.identity}\n                                className={classes.profileCard}\n                                avatar={avatar}\n                                profile={proof}\n                                walletProofs={walletProofs}\n                                unlistedAddresses={unlistedAddresses}\n                                pendingUnlistedAddresses={pendingUnlistedAddresses}\n                                initialExpanded={isCurrent}\n                                isCurrent={isCurrent}\n                                onToggle={toggleUnlisted}\n                                onAddWallet={openPopupsWindow}\n                            />\n                        )\n                    })\n                )}\n            </DialogContent>\n            {currentPersona ? (\n                <DialogActions className={classes.actions}>\n                    <PersonaAction\n                        avatar={avatar === null ? undefined : avatar}\n                        currentPersona={currentPersona}\n                        currentVisitingProfile={myProfile}>\n                        <ActionButton\n                            className={classes.button}\n                            disabled={disabled}\n                            loading={submitting}\n                            onClick={handleSubmit}>\n                            {t.confirm()}\n                        </ActionButton>\n                    </PersonaAction>\n                </DialogActions>\n            ) : null}\n        </InjectedDialog>\n    )\n})\n","import { memo, useEffect, useState } from 'react'\nimport { ChainId } from '@masknet/web3-shared-evm'\nimport { useRemoteControlledDialog } from '@masknet/shared-base-ui'\nimport { CrossIsolationMessages } from '@masknet/shared-base'\nimport { DefaultWeb3ContextProvider } from '@masknet/web3-hooks-base'\nimport { LensPopup } from './components/LensPopup.js'\nimport { FollowLensDialog } from './components/FollowLensDialog.js'\nimport { Web3ProfileDialog } from './components/Web3ProfileDialog.js'\n\nexport const Web3ProfileGlobalInjection = memo(function Web3ProfileGlobalInjection() {\n    const [profileOpen, setProfileOpen] = useState(false)\n    useEffect(() => {\n        return CrossIsolationMessages.events.web3ProfileDialogEvent.on(({ open }) => {\n            setProfileOpen(open)\n        })\n    }, [])\n    const [handle, setHandle] = useState('')\n\n    const { open: lensOpen, closeDialog: closeLensDialog } = useRemoteControlledDialog(\n        CrossIsolationMessages.events.followLensDialogEvent,\n        (ev) => {\n            if (!ev.open) {\n                setHandle('')\n            }\n            setHandle(ev.handle)\n        },\n    )\n\n    return (\n        <>\n            {profileOpen ? <Web3ProfileDialog open onClose={() => setProfileOpen(false)} /> : null}\n\n            {lensOpen && handle ? (\n                <DefaultWeb3ContextProvider value={{ chainId: ChainId.Matic }}>\n                    <FollowLensDialog handle={handle} onClose={closeLensDialog} />\n                </DefaultWeb3ContextProvider>\n            ) : null}\n\n            <LensPopup />\n        </>\n    )\n})\n","import { memo, useRef, useEffect } from 'react'\nimport { IconButton } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { Icons } from '@masknet/icons'\nimport { Plugin } from '@masknet/plugin-infra'\nimport type { FireflyBaseAPI } from '@masknet/web3-providers/types'\nimport { openPopup } from '../emitter.js'\n\nconst LensIconSizeMap: Record<Plugin.SiteAdaptor.LensSlot, number> = {\n    [Plugin.SiteAdaptor.LensSlot.Post]: 18,\n    [Plugin.SiteAdaptor.LensSlot.ProfileName]: 18,\n    [Plugin.SiteAdaptor.LensSlot.Sidebar]: 16,\n}\n\nconst useStyles = makeStyles()({\n    badge: {\n        padding: 0,\n        verticalAlign: 'baseline',\n    },\n})\ninterface Props {\n    slot: Plugin.SiteAdaptor.LensSlot\n    accounts: FireflyBaseAPI.LensAccount[]\n    userId: string\n}\n\nexport const LensBadge = memo(({ slot, accounts, userId }: Props) => {\n    const buttonRef = useRef<HTMLButtonElement>(null)\n    const { classes } = useStyles()\n\n    useEffect(() => {\n        const button = buttonRef.current\n        if (!button) return\n        let openTimer: ReturnType<typeof setTimeout>\n        const enter = () => {\n            clearTimeout(openTimer)\n\n            openTimer = setTimeout(() => {\n                openPopup({\n                    lensAccounts: accounts,\n                    userId,\n                    popupAnchorEl: buttonRef.current,\n                })\n            }, 200)\n        }\n        const leave = () => {\n            clearTimeout(openTimer)\n        }\n        button.addEventListener('mouseenter', enter)\n        button.addEventListener('mouseleave', leave)\n        return () => {\n            clearTimeout(openTimer)\n            button.removeEventListener('mouseenter', enter)\n            button.removeEventListener('mouseleave', leave)\n        }\n    }, [accounts, userId])\n\n    return (\n        <IconButton disableRipple className={classes.badge} ref={buttonRef}>\n            <Icons.Lens size={LensIconSizeMap[slot]} />\n        </IconButton>\n    )\n})\n\nLensBadge.displayName = 'LensBadge'\n","import { Icons } from '@masknet/icons'\nimport { Plugin } from '@masknet/plugin-infra'\nimport { PluginTransFieldRender } from '@masknet/plugin-infra/content-script'\nimport { ApplicationEntry } from '@masknet/shared'\nimport { CrossIsolationMessages, EMPTY_LIST, PluginID } from '@masknet/shared-base'\nimport { useFireflyLensAccounts } from '@masknet/web3-hooks-base'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { useQuery } from '@tanstack/react-query'\nimport { uniqBy } from 'lodash-es'\nimport { useEffect, useMemo } from 'react'\nimport { Trans } from 'react-i18next'\nimport { base } from '../base.js'\nimport { Web3ProfileGlobalInjection } from './Web3ProfileGlobalInjection.js'\nimport { LensBadge } from './components/LensBadge.js'\nimport { NextIdLensToFireflyLens } from './components/LensPopup.js'\nimport { setupStorage } from './context.js'\n\nconst site: Plugin.SiteAdaptor.Definition = {\n    ...base,\n    async init(signal, context) {\n        await setupStorage(context)\n    },\n\n    GlobalInjection: Web3ProfileGlobalInjection,\n    ApplicationEntries: [\n        (() => {\n            const icon = <Icons.Web3Profile size={36} />\n            const name = <Trans ns={PluginID.Web3Profile} i18nKey=\"web3_profile\" />\n            return {\n                RenderEntryComponent(EntryComponentProps) {\n                    useEffect(() => {\n                        return CrossIsolationMessages.events.applicationDialogEvent.on(({ open, pluginID }) => {\n                            if (pluginID !== PluginID.Web3Profile) return\n                            CrossIsolationMessages.events.web3ProfileDialogEvent.sendToLocal({ open })\n                        })\n                    }, [])\n\n                    return (\n                        <>\n                            <ApplicationEntry\n                                {...EntryComponentProps}\n                                title={<PluginTransFieldRender field={name} pluginID={base.ID} />}\n                                icon={icon}\n                                onClick={() =>\n                                    EntryComponentProps?.onClick\n                                        ? EntryComponentProps.onClick()\n                                        : CrossIsolationMessages.events.web3ProfileDialogEvent.sendToLocal({\n                                              open: true,\n                                          })\n                                }\n                            />\n                        </>\n                    )\n                },\n                ApplicationEntryID: base.ID,\n                appBoardSortingDefaultPriority: 3,\n                marketListSortingPriority: 3,\n                name,\n                icon,\n                nextIdRequired: true,\n                category: 'dapp',\n                description: (\n                    <Trans\n                        i18nKey=\"__plugin_description\"\n                        defaults=\"Choose and showcase your Web3 footprints on Twitter.\"\n                        ns={base.ID}\n                    />\n                ),\n            }\n        })(),\n    ],\n    Lens: {\n        ID: `${base.ID}_lens`,\n        UI: {\n            Content({ identity, slot, onStatusUpdate }) {\n                const userId = identity?.userId\n                const { data: accounts = EMPTY_LIST } = useFireflyLensAccounts(userId, true)\n                const isProfile = slot === Plugin.SiteAdaptor.LensSlot.ProfileName\n\n                const handle = accounts[0]?.handle\n                const { data: nextIdLens = EMPTY_LIST } = useQuery({\n                    queryKey: ['next-id', 'all-lens', userId],\n                    enabled: isProfile && !!handle && !!accounts?.length,\n                    queryFn: async () => {\n                        const lensAccounts = await NextIDProof.queryAllLens(handle)\n                        return lensAccounts.map(NextIdLensToFireflyLens)\n                    },\n                })\n\n                const lensAccounts = useMemo(\n                    () => (isProfile ? uniqBy([...accounts, ...nextIdLens], (x) => x.handle) : accounts),\n                    [isProfile, accounts, nextIdLens],\n                )\n\n                const hasLens = !lensAccounts.length\n                useEffect(() => {\n                    onStatusUpdate?.(hasLens)\n                }, [onStatusUpdate, hasLens])\n\n                if (!accounts.length || !userId) return null\n\n                return <LensBadge slot={slot} accounts={lensAccounts} userId={userId} />\n            },\n        },\n    },\n}\n\nexport default site\n","import type { PluginMessageEmitterItem } from '@masknet/shared-base'\nimport { useState, useEffect, useCallback, useRef } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nexport interface RemoteControlledDialogEvent {\n    open: boolean\n    hookId?: string\n}\n\ninterface Result<T> {\n    open: boolean\n    closeDialog: () => void\n    openDialog: () => void\n    setDialog: (ev: T) => void\n}\n\n/**\n * Use a dialog state controlled by remote\n */\nexport function useRemoteControlledDialog<T extends { open: boolean }>(\n    event: PluginMessageEmitterItem<T>,\n    onUpdateByRemote?: (ev: T) => void,\n    tabType: 'self' | 'activated' = 'self',\n): Result<T> {\n    const [HOOK_ID] = useState(uuid) // create an uuid for every hook\n    const [open, setOpen] = useState(false)\n\n    useEffect(\n        () =>\n            event.on((_ev: T) => {\n                const event = _ev as unknown as RemoteControlledDialogEvent\n\n                // ignore the event from the same hook\n                if (event.hookId === HOOK_ID) return\n\n                setOpen(event.open)\n                onUpdateByRemote?.(_ev)\n            }),\n        [onUpdateByRemote, event, HOOK_ID],\n    )\n\n    const timer = useRef<ReturnType<typeof setTimeout> | null>(null)\n    const onUpdateByLocal = useCallback(\n        (ev: T) => {\n            setOpen(ev.open)\n\n            const timer_ = timer.current\n            if (timer_ !== null) clearTimeout(timer_)\n            timer.current = setTimeout(() => {\n                const payload: T & RemoteControlledDialogEvent = {\n                    hookId: HOOK_ID,\n                    ...ev,\n                }\n                tabType === 'self' ? event.sendToLocal(payload) : event.sendToVisiblePages(payload)\n            }, 100)\n        },\n        [event, tabType, HOOK_ID],\n    )\n    const openDialog = useCallback(() => {\n        onUpdateByLocal({ open: true } as T)\n    }, [])\n    const closeDialog = useCallback(() => {\n        onUpdateByLocal({ open: false } as T)\n    }, [])\n\n    return {\n        open,\n        openDialog,\n        closeDialog,\n        setDialog: onUpdateByLocal,\n    }\n}\n","import { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Typography, type BoxProps } from '@mui/material'\nimport { memo } from 'react'\n\nconst useStyles = makeStyles()((theme) => ({\n    statusBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    text: {\n        color: theme.palette.maskColor.second,\n        fontSize: '14px',\n        fontWeight: 400,\n        marginTop: theme.spacing(1.5),\n    },\n}))\n\ninterface Props extends BoxProps {\n    iconSize?: number\n}\n\nexport const EmptyStatus = memo(function EmptyStatus({ className, children, iconSize = 32, ...rest }: Props) {\n    const { classes, cx } = useStyles()\n    return (\n        <Box className={cx(classes.statusBox, className)} p={2} {...rest}>\n            <Icons.EmptySimple size={iconSize} />\n            <Typography className={classes.text} component=\"div\">\n                {children}\n            </Typography>\n        </Box>\n    )\n})\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\n}), 'HelpOutline');","import React, { useCallback, useMemo } from 'react'\nimport { unreachable } from '@masknet/kit'\nimport { TokenIcon } from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { ActionButton, ShadowRootTooltip, makeStyles, type ActionButtonProps } from '@masknet/theme'\nimport { useChainContext, useFungibleTokenBalance, useFungibleTokenSpenders } from '@masknet/web3-hooks-base'\nimport { ApproveStateType, useERC20TokenApproveCallback } from '@masknet/web3-hooks-evm'\nimport { isGte, isSameAddress, type FungibleToken, rightShift } from '@masknet/web3-shared-base'\nimport type { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { HelpOutline } from '@mui/icons-material'\nimport { useSharedTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles<void, 'icon'>()((theme, _, refs) => ({\n    icon: {},\n    button: {\n        whiteSpace: 'nowrap',\n        // increase selector priority over button's\n        [`.${refs.icon}`]: {\n            width: 18,\n            height: 18,\n            fontSize: 10,\n        },\n    },\n    helpIcon: {\n        width: 18,\n        height: 18,\n    },\n}))\n\nexport interface EthereumERC20TokenApprovedBoundaryProps extends withClasses<'button' | 'container'> {\n    amount: string\n    balance?: string\n    spender?: string\n    token?: FungibleToken<ChainId, SchemaType>\n    fallback?: React.ReactNode\n    children?: React.ReactNode | ((allowance: string) => React.ReactNode)\n    infiniteUnlockContent?: React.ReactNode\n    ActionButtonProps?: ActionButtonProps\n    contractName?: string\n    showHelperToken?: boolean\n    failedContent?: React.ReactNode\n    callback?: () => void\n}\n\nexport function EthereumERC20TokenApprovedBoundary(props: EthereumERC20TokenApprovedBoundaryProps) {\n    const {\n        children = null,\n        amount,\n        balance,\n        spender,\n        token,\n        infiniteUnlockContent,\n        contractName,\n        showHelperToken = true,\n        failedContent,\n        callback,\n    } = props\n\n    const t = useSharedTrans()\n    const { classes } = useStyles(undefined, { props })\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: token?.chainId })\n    const { data: tokenBalance } = useFungibleTokenBalance(NetworkPluginID.PLUGIN_EVM, token?.address, {\n        chainId,\n    })\n\n    const {\n        data: spenders,\n        isLoading: spendersLoading,\n        isError,\n        refetch,\n    } = useFungibleTokenSpenders(NetworkPluginID.PLUGIN_EVM, {\n        chainId,\n        account,\n    })\n\n    const approveAmount = balance || tokenBalance || amount\n    const [{ type: approveStateType, allowance }, transactionState, approveCallback] = useERC20TokenApproveCallback(\n        token?.address ?? '',\n        approveAmount,\n        spender ?? '',\n        () => {\n            callback?.()\n            refetch()\n        },\n        token?.chainId,\n    )\n    const approved = useMemo(() => {\n        if (isGte(allowance, amount)) return true\n        if (!token?.address || !spenders?.length) return false\n        return spenders.some((x) => {\n            return (\n                isSameAddress(x.tokenInfo.address, token.address) &&\n                isSameAddress(x.address, spender) &&\n                isGte(rightShift(x.amount || 0, x.tokenInfo.decimals || token.decimals), amount)\n            )\n        })\n    }, [allowance, amount, spenders, token?.address, token?.decimals, spender])\n\n    const loading =\n        spendersLoading ||\n        approveStateType === ApproveStateType.UPDATING ||\n        transactionState.loadingApprove ||\n        transactionState.loading\n\n    const onApprove = useCallback(async () => {\n        if (approved || loading) return\n        await approveCallback(true)\n    }, [approved, loading, approveCallback])\n\n    // not a valid erc20 token, please given token as undefined\n    if (!token) return <>{typeof children === 'function' ? children(allowance) : children}</>\n\n    if (isError)\n        return (\n            <ActionButton\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                onClick={() => refetch()}\n                {...props.ActionButtonProps}>\n                {failedContent ?? t.wallet_load_retry({ symbol: token.symbol ?? token.name ?? 'Token' })}\n            </ActionButton>\n        )\n    if (loading || !approved)\n        return (\n            <ActionButton\n                loading={loading}\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                startIcon={\n                    <TokenIcon\n                        className={classes.icon}\n                        address={token.address}\n                        chainId={token.chainId}\n                        name={token.name}\n                        disableDefaultIcon\n                    />\n                }\n                endIcon={\n                    showHelperToken ? (\n                        <ShadowRootTooltip\n                            title={t.plugin_wallet_token_infinite_unlock_tips({\n                                provider: contractName ?? '',\n                                symbol: token.symbol,\n                            })}\n                            placement=\"top\"\n                            arrow\n                            leaveDelay={2000}\n                            disableInteractive\n                            disableFocusListener\n                            disableTouchListener>\n                            <HelpOutline className={classes.helpIcon} />\n                        </ShadowRootTooltip>\n                    ) : null\n                }\n                onClick={onApprove}\n                {...props.ActionButtonProps}>\n                {infiniteUnlockContent ?? t.plugin_wallet_token_infinite_unlock({ symbol: token.symbol })}\n            </ActionButton>\n        )\n    if (approved) return <>{typeof children === 'function' ? children(allowance) : children}</>\n\n    unreachable(approved)\n}\n","import { type HTMLProps, type ImgHTMLAttributes, useState } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { useTheme } from '@mui/material'\n\nconst useStyles = makeStyles<Pick<ImageProps, 'size' | 'rounded'>, 'center'>()((theme, { size, rounded }, refs) => ({\n    optimistic: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    container: {\n        width: size ?? '100%',\n        height: size ?? '100%',\n        position: 'relative',\n        borderRadius: rounded ? '50%' : undefined,\n        overflow: rounded ? 'hidden' : undefined,\n    },\n    image: {\n        display: 'block',\n    },\n    failImage: {\n        width: 30,\n        height: 30,\n    },\n    center: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    failed: {\n        [`&.${refs.center}`]: {\n            background:\n                theme.palette.mode === 'light'\n                    ? 'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.9) 100%), linear-gradient(90deg, rgba(98, 152, 234, 0.2) 1.03%, rgba(98, 152, 234, 0.2) 1.04%, rgba(98, 126, 234, 0.2) 100%)'\n                    : 'linear-gradient(180deg, #202020 0%, #181818 100%)',\n        },\n    },\n}))\n\nconst MASK_DARK_FALLBACK = new URL('./mask-dark.png', import.meta.url).href\nconst MASK_LIGHT_FALLBACK = new URL('./mask-light.png', import.meta.url).href\n\nexport interface ImageProps\n    extends ImgHTMLAttributes<HTMLImageElement>,\n        withClasses<'container' | 'fallbackImage' | 'imageLoading' | 'failed'> {\n    size?: number | string\n    rounded?: boolean\n    fallback?: string | JSX.Element | null\n    disableSpinner?: boolean\n    containerProps?: HTMLProps<HTMLDivElement>\n}\n\nexport function Image({\n    fallback,\n    size,\n    rounded,\n    disableSpinner,\n    classes: extraClasses,\n    onClick,\n    containerProps,\n    ...rest\n}: ImageProps) {\n    const { classes, cx } = useStyles({ size, rounded }, { props: { classes: extraClasses } })\n    const theme = useTheme()\n    const [failed, setFailed] = useState(false)\n\n    if (rest.src && !failed) {\n        return (\n            <div {...containerProps} className={cx(classes.container, classes.optimistic, containerProps?.className)}>\n                <img\n                    className={classes.image}\n                    width={size}\n                    height={size}\n                    {...rest}\n                    src={rest.src}\n                    onError={() => setFailed(true)}\n                />\n            </div>\n        )\n    }\n\n    if (fallback && !(fallback instanceof URL) && typeof fallback !== 'string') {\n        return (\n            <div\n                {...containerProps}\n                className={cx(classes.container, classes.failed, classes.center, containerProps?.className)}>\n                {fallback}\n            </div>\n        )\n    }\n\n    return (\n        <div\n            {...containerProps}\n            className={cx(classes.container, classes.failed, classes.center, containerProps?.className)}>\n            <img\n                loading=\"lazy\"\n                decoding=\"async\"\n                width={size}\n                height={size}\n                {...rest}\n                src={fallback?.toString() ?? (theme.palette.mode === 'dark' ? MASK_DARK_FALLBACK : MASK_LIGHT_FALLBACK)}\n                className={cx(classes.image, classes.failImage, classes.fallbackImage)}\n            />\n        </div>\n    )\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext, useFungibleToken, useWeb3Hub } from '@masknet/web3-hooks-base'\nimport { TokenType } from '@masknet/web3-shared-base'\nimport { useQuery } from '@tanstack/react-query'\nimport { first } from 'lodash-es'\nimport { memo } from 'react'\nimport { Icon, type IconProps } from '../Icon/index.js'\n\nexport interface TokenIconProps extends IconProps {\n    pluginID?: NetworkPluginID\n    chainId?: Web3Helper.ChainIdAll\n    address: string\n    symbol?: string\n    tokenType?: TokenType\n    disableDefaultIcon?: boolean\n}\n\nexport const TokenIcon = memo(function TokenIcon(props: TokenIconProps) {\n    const {\n        pluginID = NetworkPluginID.PLUGIN_EVM,\n        chainId: propChainId,\n        address,\n        logoURL,\n        symbol,\n        tokenType = TokenType.Fungible,\n        disableDefaultIcon,\n        name,\n        ...rest\n    } = props\n    const { data: token } = useFungibleToken(pluginID, address, undefined, { chainId: propChainId })\n\n    const { chainId } = useChainContext({ chainId: props.chainId })\n    const Hub = useWeb3Hub(pluginID)\n    const isNFT = tokenType === TokenType.NonFungible\n    const { data } = useQuery({\n        queryKey: ['token-icon', chainId, address, isNFT],\n        enabled: !logoURL,\n        queryFn: async () => {\n            const logoURLs = isNFT\n                ? (() => {\n                      throw new Error(\n                          \"Unreachable: it used to call Hub.getNonFungibleTokenIconURLs, but it's default implementation is throw an error, and not override by any subclass.\",\n                      )\n                  })()\n                : await Hub.getFungibleTokenIconURLs(chainId, address).catch(() => [])\n            return first(logoURLs)\n        },\n    })\n\n    if (data && disableDefaultIcon) return null\n    const text = token?.name || token?.symbol || symbol || name || '?' // `?` prevent to fallback to avatar icon\n    const url = logoURL || token?.logoURL || data\n    return <Icon {...rest} logoURL={url} name={text} />\n})\n","import { useSubscription } from 'use-subscription'\nimport { FALSE, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useRiskWarningApproved<T extends NetworkPluginID>(pluginID?: T) {\n    const { RiskWarning } = useWeb3State(pluginID)\n    return useSubscription(RiskWarning?.approved ?? FALSE)\n}\n","import { makeStyles, ActionButton, type ActionButtonProps } from '@masknet/theme'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { isZero } from '@masknet/web3-shared-base'\nimport {\n    useChainContext,\n    useNetworkContext,\n    useNativeTokenBalance,\n    useRiskWarningApproved,\n    useWallet,\n} from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useAsync } from 'react-use'\nimport { SmartPayBundler } from '@masknet/web3-providers'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { SelectProviderModal, WalletRiskWarningModal } from '../../modals/modals.js'\n\nconst useStyles = makeStyles()({\n    button: {\n        margin: 0,\n    },\n})\n\nexport interface WalletConnectedBoundaryProps extends withClasses<'connectWallet' | 'button'> {\n    offChain?: boolean\n    children?: React.ReactNode\n    expectedChainId: Web3Helper.ChainIdAll\n    hideRiskWarningConfirmed?: boolean\n    ActionButtonProps?: ActionButtonProps\n    startIcon?: React.ReactNode\n}\n\nexport function WalletConnectedBoundary(props: WalletConnectedBoundaryProps) {\n    const { children = null, offChain = false, hideRiskWarningConfirmed = false, expectedChainId } = props\n\n    const t = useSharedTrans()\n    const { classes, cx } = useStyles(undefined, { props })\n\n    const { pluginID } = useNetworkContext()\n    const { account, chainId: chainIdValid } = useChainContext({ chainId: expectedChainId })\n    const wallet = useWallet()\n    const { value: smartPayChainId } = useAsync(async () => SmartPayBundler.getSupportedChainId(), [])\n\n    const nativeTokenBalance = useNativeTokenBalance(undefined, {\n        chainId: chainIdValid,\n    })\n    const approved = useRiskWarningApproved()\n\n    const buttonClass = cx(classes.button, classes.connectWallet)\n\n    if (!account)\n        return (\n            <ActionButton\n                startIcon={props.startIcon}\n                className={buttonClass}\n                fullWidth\n                onClick={() => SelectProviderModal.open()}\n                {...props.ActionButtonProps}>\n                {t.plugin_wallet_connect_a_wallet()}\n            </ActionButton>\n        )\n\n    if (!approved && !hideRiskWarningConfirmed && pluginID === NetworkPluginID.PLUGIN_EVM)\n        return (\n            <ActionButton\n                className={buttonClass}\n                fullWidth\n                variant=\"contained\"\n                onClick={() => {\n                    WalletRiskWarningModal.open({\n                        account,\n                        pluginID,\n                    })\n                }}\n                {...props.ActionButtonProps}>\n                {t.plugin_wallet_confirm_risk_warning()}\n            </ActionButton>\n        )\n\n    if (!(wallet?.owner && chainIdValid === smartPayChainId) && isZero(nativeTokenBalance.value ?? '0') && !offChain)\n        return (\n            <ActionButton\n                className={buttonClass}\n                disabled={!nativeTokenBalance.error}\n                fullWidth\n                variant=\"contained\"\n                onClick={nativeTokenBalance.retry}\n                {...props.ActionButtonProps}>\n                {nativeTokenBalance.loading ? t.plugin_wallet_update_gas_fee() : t.plugin_wallet_no_gas_fee()}\n            </ActionButton>\n        )\n\n    if (!chainIdValid && !offChain)\n        return (\n            <ActionButton className={buttonClass} disabled fullWidth variant=\"contained\" {...props.ActionButtonProps}>\n                {t.plugin_wallet_invalid_network()}\n            </ActionButton>\n        )\n\n    return <>{children}</>\n}\n","import { makeStyles } from '@masknet/theme'\nimport { ImageIcon } from '../ImageIcon/index.js'\n\ninterface StyleProps {\n    size: number\n    badgeIconBorderColor?: string\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, props) => ({\n    root: {\n        position: 'relative',\n        display: 'flex',\n        height: props.size,\n        width: props.size,\n    },\n    mainIcon: {\n        display: 'block',\n    },\n    badgeIcon: {\n        position: 'absolute',\n        right: -6,\n        bottom: -4,\n        border: `1px solid ${props.badgeIconBorderColor ?? theme.palette.common.white}`,\n        borderRadius: '50%',\n    },\n}))\n\ninterface WalletIconProps extends withClasses<'root' | 'mainIcon'> {\n    size?: number\n    badgeSize?: number\n    mainIcon?: string\n    badgeIcon?: string\n    badgeIconBorderColor?: string\n    iconFilterColor?: string\n}\n\nexport function WalletIcon(props: WalletIconProps) {\n    const { size = 24, badgeSize = 14, mainIcon, badgeIcon, badgeIconBorderColor, iconFilterColor } = props\n    const { classes } = useStyles(\n        {\n            size: badgeSize > size ? badgeSize : size,\n            badgeIconBorderColor,\n        },\n        { props: { classes: props.classes } },\n    )\n\n    return (\n        <div\n            className={classes.root}\n            style={{\n                height: size,\n                width: size,\n            }}>\n            {mainIcon ? (\n                <ImageIcon className={classes.mainIcon} size={size} icon={mainIcon} iconFilterColor={iconFilterColor} />\n            ) : null}\n            {badgeIcon ? <ImageIcon className={classes.badgeIcon} size={badgeSize} icon={badgeIcon} /> : null}\n        </div>\n    )\n}\n","import { useEffect } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { EMPTY_LIST, type BindingProof, MaskMessages, Sniffings } from '@masknet/shared-base'\n\nexport function usePersonaProofs(publicKey?: string) {\n    const result = useQuery<BindingProof[], Error>({\n        queryKey: ['next-id', 'bindings-by-persona', publicKey],\n        queryFn: async () => {\n            if (Sniffings.is_popup_page) await NextIDProof.clearPersonaQueryCache(publicKey!)\n            const binding = await NextIDProof.queryExistedBindingByPersona(publicKey!)\n            return binding?.proofs ?? EMPTY_LIST\n        },\n    })\n    const { refetch } = result\n\n    useEffect(() => {\n        return MaskMessages.events.ownProofChanged.on(async () => {\n            // Clearing the query cache when the proof relation changes\n            if (publicKey) {\n                await NextIDProof.clearPersonaQueryCache(publicKey)\n            }\n            refetch()\n        })\n    }, [publicKey])\n\n    return result\n}\n","import { Popper } from '@mui/material'\nimport { createShadowRootForwardedComponent } from '../../ShadowRoot/index.js'\n\nexport const ShadowRootPopper = createShadowRootForwardedComponent(Popper)\nShadowRootPopper.displayName = 'ShadowRootTooltip'\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Others } from './useWeb3Others.js'\n\nexport function useChainIdValid<T extends NetworkPluginID>(\n    pluginID?: T,\n    expectedChainId?: Web3Helper.Definition[T]['ChainId'],\n) {\n    const { account, chainId } = useChainContext({ chainId: expectedChainId })\n    const Others = useWeb3Others(pluginID)\n\n    return (!account || Others.chainResolver.isValidChainId?.(chainId, process.env.NODE_ENV === 'development')) ?? false\n}\n","import { useQuery } from '@tanstack/react-query'\nimport { Firefly } from '@masknet/web3-providers'\nimport type { FireflyBaseAPI } from '@masknet/web3-providers/types'\n\nexport function useFireflyLensAccounts(twitterId?: string, isVerified?: boolean) {\n    return useQuery<FireflyBaseAPI.LensAccount[]>({\n        queryKey: ['firefly', 'lens', twitterId, isVerified],\n        enabled: !!twitterId,\n        queryFn: () => Firefly.getLensByTwitterId(twitterId, isVerified),\n    })\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { attemptUntil } from '@masknet/web3-shared-base'\nimport { useQuery } from '@tanstack/react-query'\nimport { useWeb3Hub } from './useWeb3Hub.js'\nimport { useChainContext } from './useContext.js'\nimport { isNativeTokenAddress } from '@masknet/web3-shared-evm'\nimport { useNetworks } from './useNetworks.js'\n\nexport function useFungibleToken<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    address?: string | null,\n    fallbackToken?: Web3Helper.FungibleTokenScope<S, T>,\n    options?: HubOptions<T>,\n) {\n    const { chainId } = useChainContext({ chainId: options?.chainId })\n    const Hub = useWeb3Hub(pluginID, {\n        chainId,\n        ...options,\n    })\n    const networks = useNetworks(pluginID)\n\n    return useQuery({\n        enabled: true,\n        queryKey: ['fungible-token', pluginID, address, chainId, options],\n        queryFn: async () => {\n            if (!address) return\n            return attemptUntil(\n                [\n                    async () => {\n                        if (pluginID !== NetworkPluginID.PLUGIN_EVM || !isNativeTokenAddress(address) || !chainId)\n                            return\n                        const network = networks.find((x) => x.chainId === chainId)\n                        return network?.nativeCurrency\n                    },\n                    async () => {\n                        const token = await Hub.getFungibleToken(address, { chainId })\n                        if (!token) return\n                        const logoURL = token.logoURL ?? fallbackToken?.logoURL\n                        const symbol =\n                            token.symbol === 'UNKNOWN' || !token.symbol ? fallbackToken?.symbol : token.symbol\n                        return { ...token, symbol, logoURL } as Web3Helper.FungibleTokenScope<S, T>\n                    },\n                ],\n                fallbackToken,\n            )\n        },\n    })\n}\n","import { noop } from 'lodash-es'\nimport { useEffect } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Connection } from './useWeb3Connection.js'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useFungibleTokenBalance<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    address?: string,\n    options?: ConnectionOptions<T>,\n    /** Allow to control the request */\n    enabled = true,\n) {\n    const { account } = useChainContext({ account: options?.account })\n    const Web3 = useWeb3Connection(pluginID, {\n        account,\n        ...options,\n    })\n    const { BalanceNotifier } = useWeb3State(pluginID)\n\n    const result = useQuery({\n        enabled,\n        queryKey: ['fungible-token', 'balance', pluginID, account, address, options],\n        queryFn: async () => {\n            if (!address) return '0'\n            return Web3.getFungibleTokenBalance(address, undefined, options)\n        },\n    })\n\n    useEffect(() => {\n        return (\n            BalanceNotifier?.emitter.on('update', (ev) => {\n                if (isSameAddress(account, ev.account)) {\n                    result.refetch()\n                }\n            }) ?? noop\n        )\n    }, [account, result.refetch, BalanceNotifier])\n\n    return result\n}\n","import { useQuery } from '@tanstack/react-query'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\nexport function useFungibleTokenSpenders<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: HubOptions<T>,\n) {\n    const { account, chainId } = useChainContext<T>({\n        account: options?.account,\n        chainId: options?.chainId,\n    })\n    const Hub = useWeb3Hub(pluginID, {\n        account,\n        chainId,\n        ...options,\n    })\n    return useQuery({\n        queryKey: ['fungible-tokens', 'spenders', chainId, account],\n        enabled: true,\n        queryFn: async () => Hub.getFungibleTokenSpenders(chainId, account),\n    })\n}\n","import { EMPTY_LIST, EMPTY_OBJECT, NextIDPlatform, type PluginID, type PersonaIdentifier } from '@masknet/shared-base'\nimport { useQuery, type UseQueryResult } from '@tanstack/react-query'\nimport { Web3Storage } from '@masknet/web3-providers'\nimport { useCallback, useMemo } from 'react'\nimport type { WalletAPI } from '@masknet/web3-providers/types'\n\ntype AddressData = Record<string, string[]> | string[]\ntype StorageValueV1 = string[]\ntype StorageValueV2 = { hiddenAddresses?: string[] }\ntype StorageValueV3 = { hiddenAddresses?: Record<string, string[]> }\ntype CurrentStorageValue = StorageValueV3\ntype StorageValue = StorageValueV1 | StorageValueV2 | StorageValueV3\n\n/**\n *\n * Get unlisted address by persona pubkey.\n *\n * @param personaPubkey The persona identifier in hex string\n * @param pluginID The plugin id as store key\n * @returns\n */\nexport function useHiddenAddressConfig(\n    personaPubkey: string | undefined,\n    pluginID: PluginID | undefined,\n    signWithPersona: WalletAPI.IOContext['signWithPersona'],\n) {\n    return useQuery({\n        queryKey: ['next-id', 'hidden-address', pluginID, personaPubkey],\n        enabled: !!personaPubkey,\n        queryFn: async () => {\n            if (!pluginID || !personaPubkey) return EMPTY_OBJECT\n            const storage = Web3Storage.createNextIDStorage(\n                personaPubkey,\n                NextIDPlatform.NextID,\n                personaPubkey,\n                signWithPersona,\n            )\n\n            const result = await storage.get<StorageValue>(pluginID)\n            if (!result) return EMPTY_OBJECT\n\n            // When the tips data is legacy\n            if (Array.isArray(result)) return result\n\n            if (!result.hiddenAddresses) return EMPTY_OBJECT\n\n            if (Array.isArray(result.hiddenAddresses)) return result.hiddenAddresses\n            return result.hiddenAddresses ?? EMPTY_OBJECT\n        },\n    })\n}\n\nexport function useHiddenAddressConfigOf(\n    personaPubkey: string | undefined,\n    pluginID: PluginID | undefined,\n    socialId: string | undefined,\n    signWithPersona: WalletAPI.IOContext['signWithPersona'],\n) {\n    const result = useHiddenAddressConfig(personaPubkey, pluginID, signWithPersona)\n    return {\n        ...result,\n        // Identities of Twitter proof get lowered case.\n        data: result.data ? getHiddenAddressesOf(result.data, socialId?.toLowerCase()) : undefined,\n    }\n}\n\ninterface Options {\n    /** To update storage, a signer is required */\n    identifier?: PersonaIdentifier\n    pluginID: PluginID\n    /** For data migration */\n    socialIds?: string[]\n}\n\ntype ConfigResult = [UseQueryResult<Record<string, string[]>>, (config: Record<string, string[]>) => Promise<void>]\n/**\n * Provider address config and data updater\n */\nexport function useUnlistedAddressConfig(\n    { identifier, pluginID, socialIds }: Options,\n    signWithPersona: WalletAPI.IOContext['signWithPersona'],\n): ConfigResult {\n    const query = useHiddenAddressConfig(identifier?.publicKeyAsHex, pluginID, signWithPersona)\n    const { data: unlistedAddressConfig } = query\n\n    const migratedUnlistedAddressConfig = useMemo(() => {\n        if (!unlistedAddressConfig || !socialIds?.length) return EMPTY_OBJECT\n        if (!Array.isArray(unlistedAddressConfig)) return unlistedAddressConfig\n\n        return hiddenAddressesAdapter(unlistedAddressConfig, socialIds)\n    }, [unlistedAddressConfig, socialIds])\n\n    const updateConfig = useCallback(\n        async (config: Record<string, string[]>) => {\n            if (!identifier) return\n            const storage = Web3Storage.createNextIDStorage(\n                identifier.publicKeyAsHex,\n                NextIDPlatform.NextID,\n                identifier,\n                signWithPersona,\n            )\n            await storage.set<CurrentStorageValue>(pluginID, {\n                hiddenAddresses: config,\n            })\n        },\n        [pluginID, identifier],\n    )\n\n    return [{ ...query, data: migratedUnlistedAddressConfig } as UseQueryResult<Record<string, string[]>>, updateConfig]\n}\n\nexport function hiddenAddressesAdapter(list: string[], accounts: string[]): Record<string, string[]> {\n    return Object.fromEntries(accounts.map((account) => [account, list]))\n}\n\nexport function getHiddenAddressesOf(config?: AddressData, socialId?: string) {\n    if (!config) return EMPTY_LIST\n    if (Array.isArray(config)) return config\n    return socialId ? config[socialId] ?? EMPTY_LIST : EMPTY_LIST\n}\n","import { useAsyncRetry } from 'react-use'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useNativeTokenBalance<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n) {\n    const { account } = useChainContext({ account: options?.account })\n    const Web3 = useWeb3Connection(pluginID, {\n        account,\n        ...options,\n    })\n\n    return useAsyncRetry(async () => {\n        return Web3.getNativeTokenBalance()\n    }, [account, Web3])\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport { getRegisteredWeb3Networks } from '@masknet/web3-providers'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext, useNetworkContext } from './useContext.js'\n\n/**\n * Get built in declared network descriptor\n * @param expectedPluginID\n * @param expectedChainIdOrNetworkTypeOrID\n * @returns\n */\nexport function useNetworkDescriptor<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n    expectedChainIdOrNetworkTypeOrID?: string | number,\n): Web3Helper.NetworkDescriptorScope<S, T> | undefined {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    const { networkType } = useChainContext()\n\n    return getRegisteredWeb3Networks(pluginID).find((x) =>\n        [x.chainId, x.type, x.ID].includes(expectedChainIdOrNetworkTypeOrID ?? networkType ?? ''),\n    )\n}\n","import { useMemo } from 'react'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext } from './useContext.js'\nimport { useWallets } from './useWallets.js'\n\n/**\n * Use the currently selected wallet.\n * @param pluginID\n * @returns\n */\nexport function useWallet<T extends NetworkPluginID>(\n    pluginID?: T,\n    providerType?: Web3Helper.Definition[T]['ProviderType'],\n) {\n    const { account } = useChainContext()\n    const wallets = useWallets()\n\n    return useMemo(() => {\n        return account ? wallets.find((x) => isSameAddress?.(x.address, account)) ?? null : null\n    }, [account, wallets])\n}\n","import { useMemo } from 'react'\nimport type { AbiItem } from 'web3-utils'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { type ChainId, createContract } from '@masknet/web3-shared-evm'\nimport type { BaseContract } from '@masknet/web3-contracts/types/types.js'\n\n/**\n * Create a contract which will forward its all transactions to the\n * EthereumService in the background page and decode the result of calls automatically\n * @param address\n * @param ABI\n * @param chainId\n */\nexport function useContract<T extends BaseContract>(chainId?: ChainId, address = '', ABI: AbiItem[] = EMPTY_LIST) {\n    return useMemo(() => createContract<T>(Web3.getWeb3({ chainId }), address, ABI), [address, ABI])\n}\n\n/**\n * Create many contracts with same ABI\n * @param listOfAddress\n * @param ABI\n * @param chainId\n */\nexport function useContracts<T extends BaseContract>(\n    chainId?: ChainId,\n    listOfAddress: string[] = EMPTY_LIST,\n    ABI: AbiItem[] = EMPTY_LIST,\n) {\n    return useMemo(\n        () =>\n            listOfAddress\n                .map((address) => createContract<T>(Web3.getWeb3({ chainId }), address, ABI))\n                .filter(Boolean) as T[],\n        [JSON.stringify(listOfAddress), ABI],\n    )\n}\n","import { Contract } from '@masknet/web3-providers'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useERC20TokenAllowance(\n    address?: string,\n    spender?: string,\n    options?: ConnectionOptions<NetworkPluginID.PLUGIN_EVM>,\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({\n        account: options?.account,\n        chainId: options?.chainId,\n    })\n\n    return useQuery({\n        queryKey: ['erc20-allowance', address, account, spender],\n        queryFn: async () => {\n            if (!account || !address || !spender) return '0'\n            return Contract.getERC20Contract(address, { chainId })?.methods.allowance(account, spender).call({\n                from: account,\n            })\n        },\n        refetchInterval: 30 * 1000,\n    })\n}\n","import { useCallback, useMemo } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { isLessThan, toFixed, isZero } from '@masknet/web3-shared-base'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport { useChainContext, useFungibleTokenBalance } from '@masknet/web3-hooks-base'\nimport { useERC20TokenAllowance } from './useERC20TokenAllowance.js'\n\nconst MaxUint256 = toFixed('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n\nexport enum ApproveStateType {\n    UNKNOWN = 0,\n    NOT_APPROVED = 1,\n    UPDATING = 2,\n    PENDING = 3,\n    APPROVED = 4,\n    FAILED = 5,\n}\n\nexport function useERC20TokenApproveCallback(\n    address: string,\n    amount: string,\n    spender: string,\n    callback?: () => void,\n    tokenChainId?: ChainId,\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    // read the approved information from the chain\n    const {\n        data: balance = '0',\n        isLoading: loadingBalance,\n        error: errorBalance,\n        refetch: revalidateBalance,\n    } = useFungibleTokenBalance(NetworkPluginID.PLUGIN_EVM, address, { chainId: tokenChainId })\n    const {\n        data: allowance = '0',\n        isLoading: loadingAllowance,\n        error: errorAllowance,\n        refetch: revalidateAllowance,\n    } = useERC20TokenAllowance(address, spender, { chainId: tokenChainId })\n\n    // the computed approve state\n    const approveStateType = useMemo(() => {\n        if (!amount || !spender) return ApproveStateType.UNKNOWN\n        if (loadingBalance || loadingAllowance) return ApproveStateType.UPDATING\n        if (errorBalance || errorAllowance) return ApproveStateType.FAILED\n        return isLessThan(allowance, amount) || (allowance === amount && isZero(amount))\n            ? ApproveStateType.NOT_APPROVED\n            : ApproveStateType.APPROVED\n    }, [amount, spender, balance, allowance, errorBalance, errorAllowance, loadingAllowance, loadingBalance])\n\n    const [state, approveCallback] = useAsyncFn(\n        async (useExact = false, isRevoke = false) => {\n            if (approveStateType === ApproveStateType.UNKNOWN || !amount || !spender) {\n                return\n            }\n            // error: failed to approve token\n            if (approveStateType !== ApproveStateType.NOT_APPROVED && !isRevoke) {\n                return\n            }\n\n            if (tokenChainId !== chainId) {\n                await Web3.switchChain?.(tokenChainId ?? chainId)\n            }\n\n            const hash = await Web3.approveFungibleToken(address, spender, useExact ? amount : MaxUint256, {\n                chainId: tokenChainId,\n            })\n\n            const receipt = await Web3.confirmTransaction(hash, {\n                chainId: tokenChainId,\n                signal: AbortSignal.timeout(5 * 60 * 1000),\n            })\n\n            if (receipt) {\n                callback?.()\n                revalidateBalance()\n                revalidateAllowance()\n            }\n        },\n        [account, amount, spender, address, approveStateType, tokenChainId, chainId],\n    )\n\n    const resetCallback = useCallback(() => {\n        revalidateBalance()\n        revalidateAllowance()\n    }, [revalidateBalance])\n\n    return [\n        {\n            type: approveStateType,\n            allowance,\n            amount,\n            spender,\n            balance,\n        },\n        { ...state, loading: loadingAllowance || loadingBalance || state.loading, loadingApprove: state.loading },\n        approveCallback,\n        resetCallback,\n    ] as const\n}\n"],"names":["Plugin","AvatarRealmSourceType","ProfilePage","ProfileCard","Post","Editor","Menu","Suggestion","TipsSlot","FollowButton","Profile","MirrorMenu","MirrorEntry","MirrorProfile","MirrorVerification","LensSlot","ProfileName","Sidebar","SiteAdaptor","Emitter","emitter","openPopup","options","emit","useCallback","useEffect","useRef","useState","LEAVE_DURATION","useControlLensPopup","holderRef","hoverRef","closeTimerRef","active","setActive","hidePopup","current","showProfileCard","clearTimeout","holder","enter","leave","setTimeout","addEventListener","removeEventListener","unsubscribe","on","onClick","event","composedPath","includes","document","body","createElement","useMemo","useTranslation","Trans","createProxy","initValue","define","key","value","Object","defineProperty","container","configurable","__proto__","Proxy","get","_","undefined","getPrototypeOf","setPrototypeOf","v","getOwnPropertyDescriptor","useWeb3ProfileTrans","t","bind","createComponent","i18nKey","props","ns","shouldUnescape","Web3ProfileTrans","Icons","Image","CrossIsolationMessages","ActionButton","makeStyles","List","ListItem","Typography","memo","useAsync","useChainContext","Lens","isSameAddress","useStyles","theme","isDark","palette","mode","list","backgroundColor","common","white","maxWidth","maxHeight","overflow","minWidth","padding","spacing","boxSizing","borderRadius","display","listItem","cursor","alignItems","height","marginBottom","maskColor","bg","avatar","name","color","main","fontWeight","marginLeft","marginRight","textOverflow","whiteSpace","flexGrow","followButton","black","fontSize","LensList","className","accounts","rest","classes","cx","map","account","LensListItem","displayName","wallet","profileUri","filter","Boolean","lensIcon","size","loading","profile","getProfileByHandle","handle","isFollowing","queryFollowStatus","id","ownedBy","length","src","fallback","variant","disableElevation","events","followLensDialogEvent","sendToLocal","open","view","following_action","follow","isEqual","sortBy","uniqBy","ShadowRootPopper","NextIDProof","Fade","popup","position","zIndex","boxShadow","NextIdLensToFireflyLens","address","bio","url","LensPopup","lens","setLens","anchorEl","setAnchorEl","lensAccounts","userId","popupAnchorEl","oldAccounts","queryAllLens","merged","x","findIndex","y","in","easing","timeout","keepMounted","ref","FollowModuleType","FeeFollowModule","ProfileFollowModule","RevertFollowModule","ProxyActionType","ProxyActionError","ProxyActionQueued","ProxyActionStatusResult","BroadcastType","RelayerResult","RelayError","urlcat","getLensterLink","sha3","soliditySha3","AbiCoder","findTypes","types","primaryType","result","type","push","concat","dependencies","found","field","dep","encodeType","depSet","sort","a","b","join","typeHash","encodeTypedData","domain","message","coder","domainSeparator","encodeParameters","keys","values","messageHash","payload","toDecimal","splitSignature","signature","startsWith","Error","r","slice","s","lensTokenStorage","setupStorage","createKVStorage","createSubScope","Promise","all","storage","accessToken","initializedPromise","refreshToken","isBefore","add","Web3","ChainId","isValidAddress","useQueryAuthenticate","chainId","Matic","Date","expireDate","token","authenticate","refresh","setValue","minutes","challenge","queryChallenge","signMessage","days","cloneDeep","delay","useContract","ContractTransaction","useLensConstants","LensHubABI","fetchJSON","useCustomSnackbar","useFollow","profileId","followModule","hasDefaultProfile","onSuccess","onFailed","setLoading","handleQueryAuthenticate","LENS_HUB_PROXY_CONTRACT_ADDRESS","lensHub","snackbarKeyRef","showSnackbar","closeSnackbar","showSingletonSnackbar","title","followWithProxyAction","queryProxyActionStatus","proxyAction","i","status","queryProxyStatus","__typename","reason","receipt","confirmTransaction","txHash","handleFollow","cloneEvent","typedData","createFollowTypedData","JSON","stringify","deadline","profileIds","datas","hash","broadcast","fetcher","tx","fillAll","methods","followWithSig","from","sendTransaction","signal","AbortSignal","error","follow_lens_handle","processing","network_error","Contract","LensFollowNftABI","useUnfollow","handleUnfollow","createUnfollowTypedData","tokenId","followNFTContract","getWeb3Contract","verifyingContract","burnWithSig","unfollow_lens_handle","Box","Button","WalletIcon","SelectProviderModal","useNetworkContext","useProviderDescriptor","useReverseAddress","useWallet","useWeb3Others","resolveIPFS_URL","ProviderType","justifyContent","background","description","columnGap","lineHeight","second","objectFit","HandlerDescription","pluginID","providerType","Others","data","providerDescriptor","walletName","MaskWallet","handleDisconnect","disconnect","avatarUrl","mainIcon","URL","href","icon","formatAddress","plugin_wallet_disconnect","wallet_status_button_change","colors","front","back","confettiCount","sequinCount","gravityConfetti","gravitySequins","dragConfetti","dragSequins","terminalVelocity","randomRange","min","max","Math","random","initConfettoVelocity","xRange","yRange","range","abs","Confetto","randomModifier","dimensions","rotation","scale","velocity","constructor","canvasWidth","canvasHeight","buttonOffsetWidth","buttonOffsetHeight","floor","PI","update","cos","Sequin","radius","confetti","sequins","globalCtx","requestId","renderConfetti","clearRect","forEach","confetto","index","width","translate","rotate","fillStyle","fillRect","setTransform","sequin","beginPath","arc","fill","splice","window","requestAnimationFrame","useConfettiExplosion","canvasRef","resize","canvas","innerWidth","innerHeight","cancelAnimationFrame","showConfettiExplosion","ctx","getContext","useAsyncRetry","first","ChainBoundary","EthereumERC20TokenApprovedBoundary","InjectedDialog","WalletConnectedBoundary","NetworkPluginID","useFungibleTokenBalance","formatBalance","isLessThan","ZERO","createERC20Token","formatAmount","Avatar","buttonClasses","CircularProgress","DialogContent","flexDirection","marginTop","margin","followers","dialogTitle","bottom","dialogContent","minHeight","actions","rowGap","followAction","publicMain","disabled","opacity","tips","pointerEvents","top","left","linkButton","thirdMain","task","FollowLensDialog","onClose","setIsFollowing","isHovering","setIsHovering","defaultProfile","queryDefaultProfileByAddress","profiles","queryProfilesByAddress","isSelf","profileFollowModule","amount","feeFollowModule","currency","asset","approved","toFixed","symbol","decimals","followLoading","currentTarget","offsetWidth","offsetHeight","unfollowLoading","feeTokenBalance","isLoading","getBalanceLoading","PLUGIN_EVM","handleClick","lens_unfollow","lens_follow","lens_unfollow_processing_tips","lens_follow_processing_tips","autoHideDuration","finally","owner","Fortmatic","buttonText","unfollow","follow_for_fees","edit_profile_tips","follow_wallet_tips","follow_with_profile_tips","follow_with_charge_tips","follow_with_revert_tips","follow_gas_tips","picture","original","paper","sx","toString","components","strong","String","stats","totalFollowers","following","totalFollowing","target","rel","endIcon","LinkOut","edit_profile_in_lenster","spender","contractAddress","showHelperToken","ActionButtonProps","infiniteUnlockContent","unlock_token_tips","failedContent","disableConnectWallet","expectedPluginID","expectedChainId","ActionButtonPromiseProps","startIcon","switchText","switch_network_tips","onMouseOver","onMouseOut","lenster","offChain","hideRiskWarningConfirmed","lastRecognizedProfile","allPersonas","currentPersona","useSubscription","useCurrentPersona","useLastRecognizedProfile","useAllPersonas","Link","Switch","root","link","WalletSettingCardUI","formattedAddress","addressLink","checked","onSwitchChange","div","onChange","resolveNextID_NetworkPluginID","useDefaultChainId","useNetworkDescriptor","useWallets","WalletSettingCard","fallbackName","wallets","networkPluginId","platform","networkDescriptor","identity","walletAtDB","find","explorerResolver","useQuery","PlatformAvatar","EMPTY_LIST","Twitter","Card","CardContent","CardHeader","Collapse","Skeleton","alpha","resolveNextIDPlatformWalletName","card","content","paddingBottom","headerContent","action","alignSelf","borderTop","line","gridTemplateColumns","gap","percent","textAlign","arrowWrapper","titleWrapper","primary","subheader","providerIcon","walletProofs","unlistedAddresses","pendingUnlistedAddresses","initialExpanded","isCurrent","onToggle","onAddWallet","expanded","setExpanded","user","queryKey","queryFn","getUserByScreenName","nickname","screenName","avatarURL","handleSwitch","listingAddresses","addresses","Wallet","mx","ArrowUp","ArrowDrop","disableRipple","px","add_wallet","cardRef","networkIcon","span","role","onEntered","scrollIntoView","block","behavior","proof","ProfileCardSkeleton","isEqualWith","uniq","useAsyncFn","DialogActions","Alert","EmptyStatus","PersonaAction","PopupHomeTabType","usePersonaProofs","NextIDPlatform","PopupRoutes","PluginID","EMPTY_OBJECT","useUnlistedAddressConfig","openPopupWindow","queryPersonaAvatar","signWithPersona","profileCard","button","titleTailButton","Web3ProfileDialog","myProfile","allPersona","tipsVisible","setTipsVisible","dismissTips","persona","identifier","rawPublicKey","personaPublicKey","publicKeyAsHex","allLinkedProfiles","flatMap","linkedProfiles","network","proofs","loadingBinding","isFetched","twitterProofs","is_valid","Ethereum","socialIds","unlistedAddressConfig","isInitialLoading","refetch","updateConfig","Web3Profile","pendingUnlistedConfig","setPendingUnlistedConfig","isClean","config1","config2","toggleUnlisted","config","submitting","handleSubmit","save_successfully","save_successfully_message","save_failed","save_failed_message","openPopupsWindow","Personas","tab","ConnectedWallets","web3_profile","fullWidth","isOnBack","titleTail","setup_tips","no_verified_account","toLowerCase","currentVisitingProfile","confirm","useRemoteControlledDialog","DefaultWeb3ContextProvider","Web3ProfileGlobalInjection","profileOpen","setProfileOpen","web3ProfileDialogEvent","setHandle","lensOpen","closeDialog","closeLensDialog","ev","IconButton","LensIconSizeMap","badge","verticalAlign","LensBadge","slot","buttonRef","openTimer","PluginTransFieldRender","ApplicationEntry","useFireflyLensAccounts","base","site","init","context","GlobalInjection","ApplicationEntries","RenderEntryComponent","EntryComponentProps","applicationDialogEvent","ID","ApplicationEntryID","appBoardSortingDefaultPriority","marketListSortingPriority","nextIdRequired","category","defaults","UI","Content","onStatusUpdate","isProfile","nextIdLens","enabled","hasLens","v4","uuid","onUpdateByRemote","tabType","HOOK_ID","setOpen","_ev","hookId","timer","onUpdateByLocal","timer_","sendToVisiblePages","openDialog","setDialog","statusBox","text","children","iconSize","p","EmptySimple","component","React","unreachable","TokenIcon","ShadowRootTooltip","useFungibleTokenSpenders","ApproveStateType","useERC20TokenApproveCallback","isGte","rightShift","HelpOutline","useSharedTrans","refs","helpIcon","balance","contractName","callback","tokenBalance","spenders","spendersLoading","isError","approveAmount","approveStateType","allowance","transactionState","approveCallback","some","tokenInfo","UPDATING","loadingApprove","onApprove","wallet_load_retry","disableDefaultIcon","plugin_wallet_token_infinite_unlock_tips","provider","placement","arrow","leaveDelay","disableInteractive","disableFocusListener","disableTouchListener","plugin_wallet_token_infinite_unlock","useTheme","rounded","optimistic","image","failImage","center","failed","MASK_DARK_FALLBACK","MASK_LIGHT_FALLBACK","disableSpinner","extraClasses","containerProps","setFailed","img","onError","decoding","fallbackImage","useFungibleToken","useWeb3Hub","TokenType","Icon","propChainId","logoURL","tokenType","Fungible","Hub","isNFT","NonFungible","logoURLs","getFungibleTokenIconURLs","catch","FALSE","useWeb3State","useRiskWarningApproved","RiskWarning","isZero","useNativeTokenBalance","SmartPayBundler","WalletRiskWarningModal","chainIdValid","smartPayChainId","getSupportedChainId","nativeTokenBalance","buttonClass","connectWallet","plugin_wallet_connect_a_wallet","plugin_wallet_confirm_risk_warning","retry","plugin_wallet_update_gas_fee","plugin_wallet_no_gas_fee","plugin_wallet_invalid_network","ImageIcon","badgeIcon","right","border","badgeIconBorderColor","badgeSize","iconFilterColor","style","MaskMessages","Sniffings","publicKey","is_popup_page","clearPersonaQueryCache","binding","queryExistedBindingByPersona","ownProofChanged","Popper","createShadowRootForwardedComponent","useChainIdValid","chainResolver","isValidChainId","process","env","NODE_ENV","Firefly","twitterId","isVerified","getLensByTwitterId","attemptUntil","isNativeTokenAddress","useNetworks","fallbackToken","networks","nativeCurrency","getFungibleToken","noop","useWeb3Connection","BalanceNotifier","getFungibleTokenBalance","getFungibleTokenSpenders","Web3Storage","useHiddenAddressConfig","personaPubkey","createNextIDStorage","NextID","Array","isArray","hiddenAddresses","useHiddenAddressConfigOf","socialId","getHiddenAddressesOf","query","migratedUnlistedAddressConfig","hiddenAddressesAdapter","set","fromEntries","getNativeTokenBalance","getRegisteredWeb3Networks","expectedChainIdOrNetworkTypeOrID","networkType","createContract","ABI","getWeb3","useContracts","listOfAddress","useERC20TokenAllowance","getERC20Contract","call","refetchInterval","MaxUint256","UNKNOWN","NOT_APPROVED","PENDING","APPROVED","FAILED","tokenChainId","loadingBalance","errorBalance","revalidateBalance","loadingAllowance","errorAllowance","revalidateAllowance","state","useExact","isRevoke","switchChain","approveFungibleToken","resetCallback"],"sourceRoot":"","x_google_ignoreList":[30]}