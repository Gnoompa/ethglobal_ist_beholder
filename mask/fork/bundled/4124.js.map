{"version":3,"file":"bundled/4124.js","mappings":"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AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;;;;;;;;AClCC;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,iEAAiE,UAAU;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C,oCAAoC,WAAW;AAC/C;AACA,wCAAwC,cAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,+BAA+B,gBAAgB;AAC/C,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;ACjDN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrGa;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D,yBAAgB,GAAG,UAAe;AAClC,eAAe,mBAAO,CAAC,KAAkB;AACzC,uBAAuB,mBAAO,CAAC,KAA0B;AACzD,kBAAkB,mBAAO,CAAC,KAAW;AACrC,mBAAmB,mBAAO,CAAC,KAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAgB;;;;;;;;ACzEhB;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2CAA2C,KAAK;AAChD,oEAAoE;AACpE;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAA0B;;AAErC,CAAC;;;;;;;;;;;;;AC1KD,cAAc,aAAa,+CAA+C,uDAAuD,WAAW,0CAA0C,yCAAyC,SAAgB,gBAAgB,qBAAqB,mBAAmB,kDAAkD,SAAS,iEAAe,IAAI;;;;;;;;ACAxW;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,iBAAiB,GAAG,iBAAiB,GAAG,iBAAiB;AAC7E,eAAe,mBAAO,CAAC,IAAoB;AAC3C,gBAAgB,mBAAO,CAAC,KAAS;AACjC,iBAAiB;AACjB,iBAAiB;AACjB;AACA;AACA;AACA,CAAC;AACD,iBAAiB;AACjB,iBAAiB;;;;;;;;;ACZJ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe,GAAG,iBAAiB,GAAG,aAAa,GAAG,aAAa,GAAG,aAAa,GAAG,uBAAuB,GAAG,wBAAwB,GAAG,cAAc,GAAG,gBAAgB,GAAG,YAAY,GAAG,oBAAoB;AAClN,eAAe,mBAAO,CAAC,KAAoB;AAC3C,iBAAiB,mBAAO,CAAC,KAAsB;AAC/C,oBAAoB,mBAAO,CAAC,KAAkB;AAC9C,kBAAkB,mBAAO,CAAC,KAAkB;AAC5C,gDAA+C,EAAE,qCAAqC,oCAAoC,EAAC;AAC3H,wCAAuC,EAAE,qCAAqC,4BAA4B,EAAC;AAC3G,4CAA2C,EAAE,qCAAqC,gCAAgC,EAAC;AACnH,0CAAyC,EAAE,qCAAqC,8BAA8B,EAAC;AAC/G,oDAAmD,EAAE,qCAAqC,wCAAwC,EAAC;AACnI,mDAAkD,EAAE,qCAAqC,uCAAuC,EAAC;AACjI,yCAAwC,EAAE,qCAAqC,6BAA6B,EAAC;AAC7G,yCAAwC,EAAE,qCAAqC,6BAA6B,EAAC;AAC7G,yCAAwC,EAAE,qCAAqC,6BAA6B,EAAC;AAC7G,6CAA4C,EAAE,qCAAqC,iCAAiC,EAAC;AACrH,2CAA0C,EAAE,qCAAqC,+BAA+B,EAAC;AACjH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvBa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc,GAAG,gBAAgB,GAAG,mBAAmB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,aAAa,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,kBAAkB;AACnP;AACA,kCAAkC,mBAAO,CAAC,KAAuB;AACjE,gBAAgB,mBAAO,CAAC,IAAqB;AAC7C;AACA,kBAAkB;AAClB;AACA,mBAAmB;AACnB,cAAc,mBAAO,CAAC,IAAqB;AAC3C,8CAA6C,EAAE,qCAAqC,8BAA8B,EAAC;AACnH,yCAAwC,EAAE,qCAAqC,8BAA8B,EAAC;AAC9G,+CAA8C,EAAE,qCAAqC,+BAA+B,EAAC;AACrH,8CAA6C,EAAE,qCAAqC,8BAA8B,EAAC;AACnH,+CAA8C,EAAE,qCAAqC,+BAA+B,EAAC;AACrH;AACA;AACA;AACA,oEAAoE,YAAY;AAChF;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,cAAc;AACd;AACA,wBAAwB,KAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;AC9DY;;AAEb,oBAAoB,mBAAO,CAAC,KAAiB;AAC7C,qBAAqB,mBAAO,CAAC,KAAkB;;AAE/C;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA,4BAA4B;;AAE5B;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;;AAEA,aAAa,MAAM;AACnB;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,SAAS,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA,wBAAwB,MAAM;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB;;AAEtB;AACA;AACA;;AAEA,SAAS,OAAO;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB,MAAM;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,WAAW,GAAG,WAAW;AACtC;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;;AAEnB,kBAAkB,mBAAmB;AACrC;AACA,gCAAgC;AAChC;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa,MAAM,mBAAO,CAAC,KAAO,6KAA6K;AAC/M,kBAAkB,UAAU,eAAe,qBAAqB,6BAA6B,0BAA0B,0DAA0D,4EAA4E,OAAO,wDAAwD,gBAAgB,GAAG,WAAW,GAAG,YAAY;;;;;;;;;ACV5V;;AAEb,IAAI,IAAqC;AACzC,EAAE,0CAAyD;AAC3D,EAAE,KAAK,EAEN;;;;;;;;;ACNY;;AAEb,IAAI,IAAqC;AACzC,EAAE,2CAAqE;AACvE,EAAE,KAAK,EAEN;;;;;;;;;ACND;AACA;AACA;AACA;AACA,MAAM,KAA6B;AACnC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;AACA,8BAA8B,EAAE,eAAe,EAAE,oBAAoB,EAAE,kBAAkB,EAAE;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;;AAEA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;;AAEA;AACA;;AAEA,eAAe,MAAM;AACrB;AACA,2CAA2C;AAC3C,iBAAiB,MAAM;AACvB;;AAEA;AACA;AACA,yDAAyD,MAAM;AAC/D;;AAEA,MAAM;AACN;AACA,2CAA2C;AAC3C,oBAAoB,MAAM;AAC1B;;AAEA;AACA;AACA,6DAA6D,MAAM;AACnE;AACA;;AAEA,IAAI;AACJ;;AAEA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;;AAEA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFD;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;ACtBgE;AAClB;AACwB;AACE;AACM;AACzB;AAC8E;AAClF;AACwB;AACG;AACtB;AACa;AACrB;AACmB;AAC1B;AAC+B;AAC0C;AACrE;;;;;;;;;;;;;ACjBpC;AACP;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;ACPO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;;;;;;;;;;ACX0C;AACnC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,eAAe;AACjF,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACzBA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/DyC;AACzC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA,2DAA2D,wCAAwC;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;;AC3DA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnG2D;AACpD;AACP;AACA;AACA;AACA;AACA,kBAAkB,GAAG;AACrB;AACA,yBAAyB,UAAU,0BAA0B,UAAU;AACvE,WAAW,UAAU;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,GAAG;AACrB;AACA;;;;;ACpB0E;AAChD;AACU;AACc;AAClD,iBAAiB,WAAK;AACtB;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP,kBAAkB,WAAW;AAC7B;AACA;AACA,aAAa,iBAAiB;AAC9B,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM,qBAAqB,qBAAO,mCAAmC,qBAAO;AAC9F,qBAAqB,qBAAO;AAC5B;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAO,aAAa,UAAU;AAC7C,eAAe,qBAAO,aAAa,UAAU;AAC7C,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAO,aAAa,UAAU;AAC7C,eAAe,qBAAO,aAAa,UAAU;AAC7C,eAAe,qBAAO,aAAa,UAAU;AAC7C,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;;;ACnGsC;AACtC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;;;ACb0B;AACiB;AACS;AACA;AACmB;AAChC;AACS;AACzC;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB,mDAAmD;AACzE,4BAA4B,yDAAyD;AACrF,yBAAyB,sDAAsD;AAC/E;AACA,sBAAsB,uDAAuD;AAC7E,SAAS;AACT;AACA,0BAA0B,iCAAiC;AAC3D;AACA;AACA;AACA,YAAY,8BAA8B,EAAE,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA,SAAS;AACT;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA,0BAA0B,gBAAgB;AAC1C,yBAAyB;AACzB;AACA;AACA,SAAS;AACT;AACA,6BAA6B,SAAS;AACtC;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uEAAuE,2CAA2C;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iEAAiE,qCAAqC;AACtG;AACA;AACA;;;AC3JyC;AAClC,OAAO,UAAM,IAAI,iCAAiC,cAAc,YAAY;;;;;;;;;;;;;;;;;;ACDnF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAI;AACnB,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAI;AACvB;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqG;;;ACxLlC;AACN;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,yCAAyC,IAAI;AAC9E;AACA,wBAAwB,mBAAI;AAC5B;AACA;AACA,oBAAoB,mBAAI,sDAAsD,mBAAI;AAClF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,CAAC;;AAE2B;;;AC9FyF;;AAErH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qBAAqB,oBAAoB,MAAM;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,aAAa;AACrB,+BAA+B,aAAa;AAC5C;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;;;ACtDgC;AACG;;;;;;;;;;;;;;;;;;;;;;ACDR;AACA;;;;;;;;;;;;;;;;ACDU;AACA;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAG;AAClB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAQ;AACtC;AACA;AACA;AACA,CAAC;AACD;AACO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA,8CAA8C,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA,8CAA8C,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB;;;;;;;;;;;;;;;;;;AC7La;AACG;AACzC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,4DAAQ,2CAA2C,mBAAmB;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,4DAAQ,2CAA2C,mBAAmB;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAI;AACnB;AACA;AACA,6BAA6B,4DAAQ;AACrC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,4DAAQ,iBAAiB,mBAAmB;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAQ;AACpC;AACA;AACA;AACA,CAAC;AACD;AACO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA,8CAA8C,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA,8CAA8C,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qBAAqB;AAC5D,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpRqC;AACZ;AAC3C,2BAA2B,yEAAY;AAC9C;AACA,yBAAyB,oEAAoC;AAC7D,KAAK;AACL;AACO,+BAA+B,yEAAY;AAClD;AACA,y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B;AACzB,sCAAsC,sDAAI;AAC1C;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,8BAA8B,yEAAY;AACjD;AACA,yBAAyB,oEAAwC;AACjE,KAAK;AACL;AACO,iCAAiC,yEAAY;AACpD;AACA,yBAAyB,oEAA2C;AACpE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,iCAAiC,yEAAY;AACpD;AACA,yBAAyB,oEAA2C;AACpE,KAAK;AACL;AACO,qCAAqC,yEAAY;AACxD;AACA,yBAAyB,oEAA+C;AACxE,KAAK;AACL;AACO,8BAA8B,yEAAY;AACjD;AACA,yBAAyB,oEAAwC;AACjE;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA;AACA,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACO,gCAAgC,yEAAY;AACnD;AACA,yBAAyB,oEAA0C;AACnE,KAAK;AACL;AACO,qCAAqC,yEAAY;AACxD;AACA,yBAAyB,oEAA+C;AACxE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,oCAAoC,yEAAY;AACvD;AACA,yBAAyB,mEAA8C;AACvE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,uDAAK;AAC7C;AACA;AACA;AACA;AACA,sCAAsC,sDAAI;AAC1C;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,gCAAgC,yEAAY;AACnD;AACA,yBAAyB,oEAA0C;AACnE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,iCAAiC,yEAAY;AACpD;AACA,yBAAyB,mEAA2C;AACpE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,8BAA8B,yEAAY;AACjD;AACA,yBAAyB,oEAAwC;AACjE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,mCAAmC,yEAAY;AACtD;AACA,yBAAyB,oEAA6C;AACtE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,6BAA6B,yEAAY;AAChD;AACA,yBAAyB,oEAAuC;AAChE,KAAK;AACL;AACO,gCAAgC,yEAAY;AACnD;AACA;AACA,yBAAyB,oEAA+C;AACxE,KAAK;AACL;AACA;AACA,yBAAyB,oEAAgD;AACzE,KAAK;AACL;AACO,mCAAmC,yEAAY;AACtD;AACA,yBAAyB,oEAA6C;AACtE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,uDAAK;AAC7C;AACA;AACA;AACA;AACA;AACA,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,iCAAiC,yEAAY;AACpD;AACA;AACA;AACA,6BAA6B,oEAA2C;AACxE;AACA,8BAA8B,sDAAI;AAClC;AACA;AACA,4CAA4C,uDAAK;AACjD;AACA;AACA;AACA;AACA,0CAA0C,sDAAI;AAC9C;AACA,6BAA6B;AAC7B,0CAA0C,sDAAI;AAC9C;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACO,+BAA+B,yEAAY;AAClD;AACA,yBAAyB,oEAAyC;AAClE;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA;AACA,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACO,gCAAgC,yEAAY;AACnD;AACA,yBAAyB,oEAA0C;AACnE,KAAK;AACL;AACO,8BAA8B,yEAAY;AACjD;AACA,yBAAyB,oEAAwC;AACjE,KAAK;AACL;AACO,sCAAsC,yEAAY;AACzD;AACA,yBAAyB,kEAAgD;AACzE,KAAK;AACL;AACO,oCAAoC,yEAAY;AACvD;AACA,yBAAyB,oEAA8C;AACvE;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA;AACA,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACO,0BAA0B,yEAAY;AAC7C;AACA,yBAAyB,oEAAoC;AAC7D,KAAK;AACL;AACO,6BAA6B,yEAAY;AAChD;AACA,yBAAyB,oEAAuC;AAChE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,6BAA6B,yEAAY;AAChD;AACA,yBAAyB,mEAAuC;AAChE,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA,yBAAyB,oEAAqC;AAC9D,KAAK;AACL;AACO,4BAA4B,yEAAY;AAC/C;AACA,yBAAyB,oEAAsC;AAC/D;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,+BAA+B,yEAAY;AAClD;AACA,yBAAyB,oEAAyC;AAClE;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA,kCAAkC,sDAAI;AACtC;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACO,oCAAoC,yEAAY;AACvD;AACA,yBAAyB,oEAA8C;AACvE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,qCAAqC,yEAAY;AACxD;AACA,yBAAyB,oEAA+C;AACxE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,iCAAiC,yEAAY;AACpD;AACA,yBAAyB,oEAA2C;AACpE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,kCAAkC,yEAAY;AACrD;AACA,yBAAyB,oEAA4C;AACrE,KAAK;AACL;AACO,gCAAgC,yEAAY;AACnD;AACA,yBAAyB,oEAA0C;AACnE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,4BAA4B,yEAAY;AAC/C;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;AACA,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA;AACA;AACA,6BAA6B,oEAAqC;AAClE;AACA,8BAA8B,uDAAK;AACnC;AACA;AACA;AACA;AACA,sCAAsC,sDAAI;AAC1C;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACO,+BAA+B,yEAAY;AAClD;AACA,yBAAyB,oEAAyC;AAClE;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA,kCAAkC,sDAAI;AACtC;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA,yBAAyB,oEAAqC;AAC9D;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,+BAA+B,yEAAY;AAClD;AACA,yBAAyB,oEAAyC;AAClE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,uDAAK;AAC7C;AACA;AACA;AACA;AACA;AACA,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,mCAAmC,yEAAY;AACtD;AACA;AACA,yBAAyB,oEAAkD;AAC3E,KAAK;AACL;AACA;AACA,yBAAyB,oEAAiD;AAC1E,KAAK;AACL;AACA;AACA,yBAAyB,oEAAmD;AAC5E,KAAK;AACL;AACO,6BAA6B,yEAAY;AAChD;AACA,yBAAyB,oEAAuC;AAChE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,iCAAiC,yEAAY;AACpD;AACA,yBAAyB,oEAA2C;AACpE;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA;AACA,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACO,+BAA+B,yEAAY;AAClD;AACA,yBAAyB,oEAAyC;AAClE,KAAK;AACL;AACO,gCAAgC,yEAAY;AACnD;AACA,yBAAyB,oEAA0C;AACnE;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA;AACA,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACO,+BAA+B,yEAAY;AAClD;AACA,yBAAyB,oEAAyC;AAClE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,gCAAgC,yEAAY;AACnD;AACA,yBAAyB,oEAA0C;AACnE;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA;AACA,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA;AACA;AACA,6BAA6B,oEAAqC;AAClE;AACA,8BAA8B,sDAAI;AAClC;AACA;AACA,4CAA4C,sDAAI;AAChD;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;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CA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA;AACA,yBAAyB,oEAA0C;AACnE,KAAK;AACL;AACA;AACA,yBAAyB,oEAA2C;AACpE,KAAK;AACL;AACO,mCAAmC,yEAAY;AACtD;AACA,yBAAyB,oEAA6C;AACtE,KAAK;AACL;AACO,4BAA4B,yEAAY;AAC/C;AACA,yBAAyB,oEAAsC;AAC/D;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,gCAAgC,yEAAY;AACnD;AACA,yBAAyB,oEAA0C;AACnE,KAAK;AACL;AACO,oCAAoC,yEAAY;AACvD;AACA,yBAAyB,oEAA8C;AACvE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,uDAAK;AAC7C;AACA;AACA,sCAAsC,sDAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,8BAA8B,yEAAY;AACjD;AACA,yBAAyB,oEAAwC;AACjE;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA;AACA,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACO,0BAA0B,yEAAY;AAC7C;AACA,yBAAyB,mEAAoC;AAC7D,KAAK;AACL;AACO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AyB,oEAAyC;AAClE,KAAK;AACL;AACO,gCAAgC,yEAAY;AACnD;AACA;AACA,yBAAyB,oEAA+C;AACxE,KAAK;AACL;AACA;AACA,yBAAyB,oEAAgD;AACzE,KAAK;AACL;AACO,iCAAiC,yEAAY;AACpD;AACA,yBAAyB,oEAA2C;AACpE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,uDAAK;AAC7C;AACA;AACA;AACA;AACA;AACA,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,gCAAgC,yEAAY;AACnD;AACA,yBAAyB,oEAA0C;AACnE;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA;AACA,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACO,yCAAyC,yEAAY;AAC5D;AACA,yBAAyB,oEAAmD;AAC5E,KAAK;AACL;AACO,2CAA2C,yEAAY;AAC9D;AACA,yBAAyB,mEAAqD;AAC9E;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,8BAA8B,yEAAY;AACjD;AACA;AACA,yBAAyB,oEAA6C;AACtE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,yBAAyB,oEAA8C;AACvE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,sCAAsC,yEAAY;AACzD;AACA,yBAAyB,oEAAgD;AACzE,KAAK;AACL;AACO,gCAAgC,yEAAY;AACnD;AACA,yBAAyB,oEAA0C;AACnE,KAAK;AACL;AACO,8BAA8B,yEAAY;AACjD;AACA,yBAAyB,oEAAwC;AACjE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,uDAAK;AAC7C;AACA;AACA;AACA;AACA,sCAAsC,sDAAI;AAC1C;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,8BAA8B,yEAAY;AACjD;AACA,yBAAyB,oEAAwC;AACjE,KAAK;AACL;AACO,sCAAsC,yEAAY;AACzD;AACA,yBAAyB,oEAAgD;AACzE,KAAK;AACL;AACO,8BAA8B,yEAAY;AACjD;AACA;AACA,yBAAyB,oEAA6C;AACtE,KAAK;AACL;AACA;AACA,yBAAyB,mEAA8C;AACvE,KAAK;AACL;AACO,4BAA4B,yEAAY;AAC/C;AACA,yBAAyB,oEAAsC;AAC/D,KAAK;AACL;AACO,iCAAiC,yEAAY;AACpD;AACA,yBAAyB,oEAA2C;AACpE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA,yBAAyB,oEAAqC;AAC9D,KAAK;AACL;AACO,6BAA6B,yEAAY;AAChD;AACA,yBAAyB,oEAAuC;AAChE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,mCAAmC,yEAAY;AACtD;AACA,yBAAyB,oEAA6C;AACtE,KAAK;AACL;AACO,sCAAsC,yEAAY;AACzD;AACA,yBAAyB,oEAAgD;AACzE,KAAK;AACL;AACO,+BAA+B,yEAAY;AAClD;AACA;AACA,yBAAyB,oEAA8C;AACvE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,uDAAK;AAC7C;AACA;AACA,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,yBAAyB,oEAA+C;AACxE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,uDAAK;AAC7C;AACA;AACA,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA,yBAAyB,oEAAqC;AAC9D;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA,yBAAyB,oEAAqC;AAC9D;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,mCAAmC,yEAAY;AACtD;AACA,yBAAyB,oEAA6C;AACtE,KAAK;AACL;AACO,8BAA8B,yEAAY;AACjD;AACA,yBAAyB,oEAAwC;AACjE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,uDAAK;AAC7C;AACA;AACA;AACA,sCAAsC,sDAAI;AAC1C;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,+BAA+B,yEAAY;AAClD;AACA,yBAAyB,oEAAyC;AAClE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,gCAAgC,yEAAY;AACnD;AACA,yBAAyB,oEAA0C;AACnE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,gCAAgC,yEAAY;AACnD;AACA,yBAAyB,oEAA0C;AACnE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,oCAAoC,yEAAY;AACvD;AACA,yBAAyB,oEAA8C;AACvE,KAAK;AACL;AACO,+BAA+B,yEAAY;AAClD;AACA,yBAAyB,oEAAyC;AAClE,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA,yBAAyB,mEAAqC;AAC9D;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,8BAA8B,yEAAY;AACjD;AACA,yBAAyB,oEAAwC;AACjE,KAAK;AACL;AACO,yCAAyC,yEAAY;AAC5D;AACA,yBAAyB,mEAAmD;AAC5E,KAAK;AACL;AACO,0BAA0B,yEAAY;AAC7C;AACA,yBAAyB,oEAAoC;AAC7D;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA,yBAAyB,oEAAqC;AAC9D,KAAK;AACL;AACO,mCAAmC,yEAAY;AACtD;AACA,yBAAyB,oEAA6C;AACtE,KAAK;AACL;AACO,iCAAiC,yEAAY;AACpD;AACA;AACA,yBAAyB,oEAAgD;AACzE,KAAK;AACL;AACA;AACA,yBAAyB,oEAAiD;AAC1E,KAAK;AACL;AACO,wCAAwC,yEAAY;AAC3D;AACA,yBAAyB,oEAAkD;AAC3E,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA,yBAAyB,oEAAqC;AAC9D,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA,yBAAyB,oEAAqC;AAC9D;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA;AACA,wCAAwC,uDAAK;AAC7C;AACA;AACA;AACA;AACA;AACA,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA,yBAAyB,oEAAqC;AAC9D,KAAK;AACL;AACO,wCAAwC,yEAAY;AAC3D;AACA,yBAAyB,oEAAkD;AAC3E,KAAK;AACL;AACO,4BAA4B,yEAAY;AAC/C;AACA;AACA;AACA,6BAA6B,oEAAsC;AACnE;AACA,8BAA8B,uDAAK;AACnC;AACA;AACA;AACA;AACA,sCAAsC,sDAAI;AAC1C;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACO,gCAAgC,yEAAY;AACnD;AACA,yBAAyB,oEAA0C;AACnE,KAAK;AACL;AACO,+BAA+B,yEAAY;AAClD;AACA,yBAAyB,mEAAyC;AAClE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,8BAA8B,yEAAY;AACjD;AACA,yBAAyB,oEAAwC;AACjE;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,oCAAoC,yEAAY;AACvD;AACA;AACA;AACA,6BAA6B,oEAA8C;AAC3E;AACA,8BAA8B,uDAAK;AACnC;AACA;AACA;AACA;AACA,sCAAsC,sDAAI;AAC1C;AACA,oDAAoD,sDAAI;AACxD;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,sCAAsC,sDAAI;AAC1C,oDAAoD,sDAAI;AACxD;AACA,wDAAwD,sDAAI;AAC5D;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACO,2BAA2B,yEAAY;AAC9C;AACA,yBAAyB,oEAAqC;AAC9D;AACA,0BAA0B,sDAAI;AAC9B;AACA;AACA,wCAAwC,sDAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACO,4BAA4B,yEAAY;AAC/C;AACA,yBAAyB,oEAAsC;AAC/D,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AACA,yBAAyB,oEAAqC;AAC9D;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA;AACA,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACO,6BAA6B,yEAAY;AAChD;AACA,yBAAyB,oEAAuC;AAChE;AACA,0BAA0B,uDAAK;AAC/B;AACA;AACA;AACA;AACA,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kCAAkC,sDAAI;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACO,0BAA0B,yEAAY;AAC7C;AACA,yBAAyB,oEAAoC;AAC7D,KAAK;AACL;AACO,2BAA2B,yEAAY;AAC9C;AAC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","sources":["webpack://mask-network/./packages/base/src/WebCrypto/JsonWebKey.ts","webpack://mask-network/./packages/base/src/WebCrypto/k256.ts","webpack://mask-network/./packages/base/src/ts-results/CheckedError.ts","webpack://mask-network/./packages/base/src/ts-results/andThenAsync.ts","webpack://mask-network/./packages/base/src/utils/parseURLs.ts","webpack://mask-network/./packages/encryption/src/encryption/DecryptionTypes.ts","webpack://mask-network/./packages/encryption/src/encryption/EncryptionTypes.ts","webpack://mask-network/./packages/encryption/src/encryption/utils.ts","webpack://mask-network/./packages/encryption/src/encryption/v38-ecdh.ts","webpack://mask-network/./packages/encryption/src/image-steganography/index.ts","webpack://mask-network/./packages/encryption/src/image-steganography/presets.ts","webpack://mask-network/./packages/encryption/src/image-steganography/utils.ts","webpack://mask-network/./packages/base/src/ts-results/OptionalResult.ts","webpack://mask-network/./packages/encryption/src/utils/index.ts","webpack://mask-network/./packages/encryption/src/payload_internal/SignatureContainer.ts","webpack://mask-network/./packages/encryption/src/payload_internal/shared.ts","webpack://mask-network/./packages/encryption/src/payload_internal/version-37.parser.ts","webpack://mask-network/./packages/encryption/src/payload_internal/version-38.parser.ts","webpack://mask-network/./packages/encryption/src/payload_internal/version-40.ts","webpack://mask-network/./packages/encryption/src/payload_internal/version-39.ts","webpack://mask-network/./packages/encryption/src/payload_internal/version-38.encoder.ts","webpack://mask-network/./packages/encryption/src/payload_internal/version-37.encoder.ts","webpack://mask-network/./packages/encryption/src/payload/index.ts","webpack://mask-network/./packages/encryption/src/payload/types.ts","webpack://mask-network/./packages/encryption/src/types/Exception.ts","webpack://mask-network/./packages/encryption/src/utils/crypto.ts","webpack://mask-network/./packages/flags/src/index.ts","webpack://mask-network/./packages/injected-script/sdk/index.ts","webpack://mask-network/./packages/mask/background/database/avatar-cache/avatar.ts","webpack://mask-network/./packages/mask/background/database/avatar-cache/db.ts","webpack://mask-network/./packages/mask/background/database/persona/helper.ts","webpack://mask-network/./packages/base/src/Identifier/map.ts","webpack://mask-network/./packages/mask/background/database/persona/consistency.ts","webpack://mask-network/./packages/mask/background/database/persona/web.ts","webpack://mask-network/./packages/mask/background/database/plugin-db/base.ts","webpack://mask-network/./packages/mask/background/database/plugin-db/wrap-plugin-database.ts","webpack://mask-network/./packages/mask/background/database/post/helper.ts","webpack://mask-network/./packages/mask/background/database/post/web.ts","webpack://mask-network/./packages/mask/background/database/utils/openDB.ts","webpack://mask-network/./packages/mask/background/initialization/async-setup.ts","webpack://mask-network/./packages/mask/background/initialization/entry.ts","webpack://mask-network/./packages/mask/background/initialization/fetch.ts","webpack://mask-network/./packages/shared-base/src/KVStorage/kv-storage/idb.ts","webpack://mask-network/./packages/shared-base/src/KVStorage/kv-storage/in-memory.ts","webpack://mask-network/./packages/mask/background/initialization/kv-storage.ts","webpack://mask-network/./packages/mask/background/initialization/post-async-setup.ts","webpack://mask-network/./packages/mask/background/initialization/storage-setup.ts","webpack://mask-network/./packages/gun-utils/src/server.ts","webpack://mask-network/./packages/gun-utils/src/instance.ts","webpack://mask-network/./packages/gun-utils/src/utils.ts","webpack://mask-network/./packages/mask/background/network/queryPostKey.ts","webpack://mask-network/./packages/mask/background/services/__utils__/convert.ts","webpack://mask-network/./packages/backup-format/src/utils/backupPreview.ts","webpack://mask-network/./packages/backup-format/src/BackupErrors.ts","webpack://mask-network/./packages/backup-format/src/version-0/index.ts","webpack://mask-network/./packages/backup-format/src/version-1/index.ts","webpack://mask-network/./packages/backup-format/src/utils/hex2buffer.ts","webpack://mask-network/./packages/backup-format/src/version-2/index.ts","webpack://mask-network/./packages/backup-format/src/normalize/index.ts","webpack://mask-network/./packages/mask/background/services/backup/internal_wallet_backup.ts","webpack://mask-network/./packages/mask/background/services/backup/internal_create.ts","webpack://mask-network/./packages/mask/background/services/backup/create.ts","webpack://mask-network/./packages/web3-shared/base/src/helpers/generateNewWalletName.ts","webpack://mask-network/./packages/mask/background/services/backup/internal_wallet_restore.ts","webpack://mask-network/./packages/mask/background/services/backup/internal_restore.ts","webpack://mask-network/./packages/mask/background/services/backup/restore.ts","webpack://mask-network/./packages/mask/background/services/backup/persona.ts","webpack://mask-network/./packages/mask/background/services/backup/index.ts","webpack://mask-network/./packages/encryption/src/network-encoding/shared.ts","webpack://mask-network/./packages/encryption/src/network-encoding/twitter.ts","webpack://mask-network/./packages/encryption/src/network-encoding/index.ts","webpack://mask-network/./packages/encryption/src/encryption/Decryption.ts","webpack://mask-network/./packages/mask/background/services/crypto/decryption.ts","webpack://mask-network/./packages/encryption/src/encryption/v37-ecdh.ts","webpack://mask-network/./packages/encryption/src/encryption/Encryption.ts","webpack://mask-network/./packages/mask/background/services/crypto/encryption.ts","webpack://mask-network/./packages/encryption/src/encryption/AppendEncryption.ts","webpack://mask-network/./packages/mask/background/services/crypto/appendEncryption.ts","webpack://mask-network/./packages/mask/background/services/crypto/comment.ts","webpack://mask-network/./packages/mask/background/services/crypto/steganography.ts","webpack://mask-network/./packages/mask/background/services/crypto/recipients.ts","webpack://mask-network/./packages/mask/background/services/crypto/index.ts","webpack://mask-network/./packages/mask/background/services/helper/short-link-resolver.ts","webpack://mask-network/./packages/mask/background/services/helper/i18n-cache-query-list.ts","webpack://mask-network/./packages/mask/background/services/helper/i18n-cache-query.ts","webpack://mask-network/./packages/mask/background/services/helper/sandboxed.ts","webpack://mask-network/./packages/mask/background/services/helper/tabs.ts","webpack://mask-network/./packages/mask/background/services/helper/index.ts","webpack://mask-network/./packages/mask/background/services/helper/popup-opener.ts","webpack://mask-network/./packages/mask/shared/definitions/routes.ts","webpack://mask-network/./packages/mask/background/services/helper/request-permission.ts","webpack://mask-network/./packages/mask/background/services/helper/telemetry-id.ts","webpack://mask-network/./packages/mask/background/services/identity/persona/utils.ts","webpack://mask-network/./packages/mask/background/services/identity/persona/create.ts","webpack://mask-network/./packages/mask/background/services/identity/persona/query.ts","webpack://mask-network/./packages/mask/background/services/identity/persona/update.ts","webpack://mask-network/./packages/mask/background/services/identity/persona/avatar.ts","webpack://mask-network/./packages/mask/background/services/identity/profile/query.ts","webpack://mask-network/./packages/mask/background/services/identity/profile/update.ts","webpack://mask-network/./packages/public-api/src/types/index.ts","webpack://mask-network/./packages/mask/background/services/identity/relation/create.ts","webpack://mask-network/./packages/mask/background/services/identity/relation/query.ts","webpack://mask-network/./packages/mask/background/services/identity/relation/update.ts","webpack://mask-network/./packages/mask/background/services/identity/avatar/query.ts","webpack://mask-network/./packages/mask/background/services/identity/index.ts","webpack://mask-network/./packages/mask/background/services/identity/persona/sign.ts","webpack://mask-network/./packages/mask/background/services/settings/kv-storage.ts","webpack://mask-network/./packages/mask/background/services/settings/index.ts","webpack://mask-network/./packages/mask/background/services/settings/old-settings-accessor.ts","webpack://mask-network/./packages/mask/background/services/setup.ts","webpack://mask-network/./packages/shared-base/src/types/SetupGuide.ts","webpack://mask-network/./packages/mask/shared/site-adaptors/implementations/facebook.com.ts","webpack://mask-network/./packages/mask/shared/site-adaptors/implementations/instagram.com.ts","webpack://mask-network/./packages/mask/shared/site-adaptors/implementations/minds.com.ts","webpack://mask-network/./packages/mask/shared/site-adaptors/implementations/mirror.xyz.ts","webpack://mask-network/./packages/mask/shared/site-adaptors/implementations/twitter.com.ts","webpack://mask-network/./packages/mask/shared/site-adaptors/definitions.ts","webpack://mask-network/./packages/mask/background/services/site-adaptors/connect.ts","webpack://mask-network/./packages/mask/background/services/site-adaptors/sdk.ts","webpack://mask-network/./packages/mask/background/services/site-adaptors/index.ts","webpack://mask-network/./packages/mask/background/services/wallet/database/Plugin.db.ts","webpack://mask-network/./packages/mask/background/services/wallet/database/Wallet.db.ts","webpack://mask-network/./packages/mask-sdk/shared/error.ts","webpack://mask-network/./packages/mask-sdk/server/index.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/connect.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/select.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/rpc.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/send.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/index.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/helpers.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/legacyWallet.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/wallet/database/locker.ts","webpack://mask-network/./packages/shared-base/src/onDemandWorker/index.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/maskwallet/index.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/wallet/database/wallet.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/wallet/index.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/wallet/locker.ts","webpack://mask-network/./packages/shared-base/src/helpers/getDefaultWalletPassword.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/wallet/database/secret.ts","webpack://mask-network/./packages/mask/background/services/wallet/services/wallet/password.ts","webpack://mask-network/./packages/mask/background/database/avatar-cache/cleanup.ts","webpack://mask-network/./packages/mask/background/tasks/Cancellable/CleanProfileAndAvatar.ts","webpack://mask-network/./packages/mask/background/tasks/Cancellable/InjectContentScripts_declarative.ts","webpack://mask-network/./packages/mask/background/tasks/Cancellable/InjectContentScripts_imperative.ts","webpack://mask-network/./packages/mask/shared/legacy-settings/listener.ts","webpack://mask-network/./packages/mask/background/tasks/Cancellable/SettingsListener.ts","webpack://mask-network/./packages/mask/background/tasks/Cancellable/StartPluginHost.ts","webpack://mask-network/./packages/sandboxed-plugin-runtime/src/background/index.ts","webpack://mask-network/./packages/mask/background/tasks/Cancellable/StartSandboxedPluginHost.ts","webpack://mask-network/./packages/mask/background/tasks/Cancellable/WalletAutoLock.ts","webpack://mask-network/./packages/mask/background/tasks/NotCancellable/OnInstall.ts","webpack://mask-network/./packages/mask/background/tasks/NotCancellable/PendingTasks.ts","webpack://mask-network/./packages/mask/background/tasks/NotCancellable/PrintBuildFlags.ts","webpack://mask-network/./packages/mask/background/tasks/setup.hmr.ts","webpack://mask-network/./packages/mask/background/tasks/setup.ts","webpack://mask-network/./packages/mask/background/utils/deprecated-storage.ts","webpack://mask-network/./packages/mask/background/utils/injectScript.ts","webpack://mask-network/./packages/mask/utils-pure/crypto/index.ts","webpack://mask-network/./packages/plugin-infra/src/manager/worker.ts","webpack://mask-network/./packages/plugin-infra/src/utils/message.ts","webpack://mask-network/./packages/plugin-infra/src/utils/rpc.ts","webpack://mask-network/./packages/public-api/src/web.ts","webpack://mask-network/./packages/shared-base/src/LegacySettings/createSettings.ts","webpack://mask-network/./packages/shared-base/src/LegacySettings/settings.ts","webpack://mask-network/./packages/shared-base/src/constants.ts","webpack://mask-network/./packages/shared-base/src/helpers/getLocalImplementation.tsx","webpack://mask-network/./packages/shared-base/src/helpers/pvtutils.ts","webpack://mask-network/./packages/shared-base/src/helpers/subscription.ts","webpack://mask-network/./packages/shared-base/src/i18n/instance.ts","webpack://mask-network/./packages/shared-base/src/types/Observable.ts","webpack://mask-network/./packages/shared-base/src/types/Persona.ts","webpack://mask-network/./packages/shared-base/src/types/Routes.ts","webpack://mask-network/./packages/web3-providers/src/Chainbase/helpers.ts","webpack://mask-network/./packages/web3-providers/src/Manager/index.ts","webpack://mask-network/./packages/web3-shared/evm/src/helpers/signTransaction.ts","webpack://mask-network/./packages/web3-providers/src/Web3/EVM/apis/SignerAPI.ts","webpack://mask-network/./packages/web3-providers/src/Web3/EVM/apis/Web3StateAPI.ts","webpack://mask-network/./packages/web3-providers/src/Web3/Flow/apis/Web3StateAPI.ts","webpack://mask-network/./packages/web3-providers/src/Web3/Solana/apis/Web3StateAPI.ts","webpack://mask-network/./packages/web3-providers/src/entry.ts","webpack://mask-network/./packages/web3-providers/src/helpers/fetchBlob.ts","webpack://mask-network/./packages/web3-providers/src/helpers/fetchText.ts","webpack://mask-network/./packages/web3-shared/base/src/helpers/HD_PATH_WITHOUT_INDEX_ETHEREUM.ts","webpack://mask-network/./packages/web3-shared/base/src/helpers/number.ts","webpack://mask-network/./packages/web3-shared/base/src/helpers/resolver.ts","webpack://mask-network/./packages/web3-shared/base/src/specs/index.ts","webpack://mask-network/./packages/web3-shared/evm/src/constants/constants.ts","webpack://mask-network/./packages/web3-shared/evm/src/helpers/formatter.ts","webpack://mask-network/./packages/web3-shared/evm/src/helpers/isReadonlyMethodType.ts","webpack://mask-network/./node_modules/.pnpm/@rgba-image+copy@0.1.3/node_modules/@rgba-image/copy/dist/index.js","webpack://mask-network/./node_modules/.pnpm/@rgba-image+create-image@0.1.1/node_modules/@rgba-image/create-image/dist/index.js","webpack://mask-network/./node_modules/.pnpm/@rgba-image+lanczos@0.1.1/node_modules/@rgba-image/lanczos/dist/convolve.js","webpack://mask-network/./node_modules/.pnpm/@rgba-image+lanczos@0.1.1/node_modules/@rgba-image/lanczos/dist/filters.js","webpack://mask-network/./node_modules/.pnpm/@rgba-image+lanczos@0.1.1/node_modules/@rgba-image/lanczos/dist/index.js","webpack://mask-network/./node_modules/.pnpm/case@1.6.3/node_modules/case/dist/Case.js","webpack://mask-network/./node_modules/.pnpm/clsx@1.2.1/node_modules/clsx/dist/clsx.m.js","webpack://mask-network/./node_modules/.pnpm/ethereum-cryptography@1.2.0/node_modules/ethereum-cryptography/keccak.js","webpack://mask-network/./node_modules/.pnpm/ethereum-cryptography@1.2.0/node_modules/ethereum-cryptography/secp256k1.js","webpack://mask-network/./node_modules/.pnpm/ethereum-cryptography@1.2.0/node_modules/ethereum-cryptography/utils.js","webpack://mask-network/./node_modules/.pnpm/ethjs-util@0.1.6/node_modules/ethjs-util/lib/index.js","webpack://mask-network/./node_modules/.pnpm/react@0.0.0-experimental-0a360642d-20230711/node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://mask-network/./node_modules/.pnpm/react@0.0.0-experimental-0a360642d-20230711/node_modules/react/index.js","webpack://mask-network/./node_modules/.pnpm/react@0.0.0-experimental-0a360642d-20230711/node_modules/react/jsx-runtime.js","webpack://mask-network/./node_modules/.pnpm/tweetnacl-util@0.15.1/node_modules/tweetnacl-util/nacl-util.js","webpack://mask-network/ignored|/Users/macbook/Documents/projects/mask/node_modules/.pnpm/@noble+secp256k1@1.7.1/node_modules/@noble/secp256k1/lib|crypto","webpack://mask-network/ignored|/Users/macbook/Documents/projects/mask/node_modules/.pnpm/tweetnacl-util@0.15.1/node_modules/tweetnacl-util|buffer","webpack://mask-network/./node_modules/.pnpm/@masknet+kit@0.1.2/node_modules/@masknet/kit/esm/web/encode-text-arraybuffer.js","webpack://mask-network/./node_modules/.pnpm/@masknet+kit@0.1.2/node_modules/@masknet/kit/esm/index.js","webpack://mask-network/./node_modules/.pnpm/@masknet+kit@0.1.2/node_modules/@masknet/kit/esm/typescript/nonNull.js","webpack://mask-network/./node_modules/.pnpm/@masknet+kit@0.1.2/node_modules/@masknet/kit/esm/web/blob.js","webpack://mask-network/./node_modules/.pnpm/@masknet+kit@0.1.2/node_modules/@masknet/kit/esm/web/document.readyState.js","webpack://mask-network/./node_modules/.pnpm/@masknet+secp256k1-webcrypto@1.0.0/node_modules/@masknet/secp256k1-webcrypto/dist/key.js","webpack://mask-network/./node_modules/.pnpm/@masknet+secp256k1-webcrypto@1.0.0/node_modules/@masknet/secp256k1-webcrypto/dist/memory.js","webpack://mask-network/./node_modules/.pnpm/@masknet+secp256k1-webcrypto@1.0.0/node_modules/@masknet/secp256k1-webcrypto/dist/helper.js","webpack://mask-network/./node_modules/.pnpm/@masknet+secp256k1-webcrypto@1.0.0/node_modules/@masknet/secp256k1-webcrypto/dist/ec/sign.js","webpack://mask-network/./node_modules/.pnpm/@masknet+secp256k1-webcrypto@1.0.0/node_modules/@masknet/secp256k1-webcrypto/dist/ec/key.js","webpack://mask-network/./node_modules/.pnpm/@masknet+secp256k1-webcrypto@1.0.0/node_modules/@masknet/secp256k1-webcrypto/dist/ec/derive.js","webpack://mask-network/./node_modules/.pnpm/@masknet+secp256k1-webcrypto@1.0.0/node_modules/@masknet/secp256k1-webcrypto/dist/core.js","webpack://mask-network/./node_modules/.pnpm/@masknet+secp256k1-webcrypto@1.0.0/node_modules/@masknet/secp256k1-webcrypto/dist/web.js","webpack://mask-network/./node_modules/.pnpm/idb@7.1.1/node_modules/idb/build/wrap-idb-value.js","webpack://mask-network/./node_modules/.pnpm/idb@7.1.1/node_modules/idb/build/index.js","webpack://mask-network/./node_modules/.pnpm/idb@7.1.1/node_modules/idb/build/async-iterators.js","webpack://mask-network/./node_modules/.pnpm/idb@7.1.1/node_modules/idb/with-async-ittr.js","webpack://mask-network/./node_modules/.pnpm/ts-results-es@4.0.0/node_modules/ts-results-es/dist/esm/index.js","webpack://mask-network/./node_modules/.pnpm/ts-results-es@4.0.0/node_modules/ts-results-es/dist/esm/option.js","webpack://mask-network/./node_modules/.pnpm/ts-results-es@4.0.0/node_modules/ts-results-es/dist/esm/result.js","webpack://mask-network/./packages/icons/icon-generated-as-jsx.js"],"sourcesContent":["export type JsonWebKeyPair<Pub extends JsonWebKey & Nominal<unknown>, Priv extends JsonWebKey & Nominal<unknown>> = {\n    publicKey: Pub\n    privateKey: Priv\n}\n// Create nominal typing interfaces for different JsonWebKey type\n// So they will no longer assignable to each other\n\nexport type EC_JsonWebKey = EC_Private_JsonWebKey | EC_Public_JsonWebKey\nexport interface EC_Public_JsonWebKey extends JsonWebKey, Nominal<'EC public'> {}\nexport interface EC_Private_JsonWebKey extends JsonWebKey, Nominal<'EC private'> {}\nexport interface AESJsonWebKey extends JsonWebKey, Nominal<'AES'> {}\n\nexport function isAESJsonWebKey(x: unknown): x is AESJsonWebKey {\n    if (typeof x !== 'object' || x === null) return false\n    const { alg, k, key_ops, kty } = x as JsonWebKey\n    if (!alg || !k || !Array.isArray(key_ops) || kty !== 'oct') return false\n    return true\n}\nexport function isEC_JsonWebKey(o: unknown): o is EC_JsonWebKey {\n    if (typeof o !== 'object' || o === null) return false\n    const { crv, key_ops, kty, x, y } = o as JsonWebKey\n    if (!crv || !Array.isArray(key_ops) || !kty || !x || !y) return false\n    return true\n}\nexport function isEC_Public_JsonWebKey(o: unknown): o is EC_Public_JsonWebKey {\n    if (!isEC_JsonWebKey(o)) return false\n    return !o.d\n}\nexport function isEC_Private_JsonWebKey(o: unknown): o is EC_Private_JsonWebKey {\n    if (!isEC_JsonWebKey(o)) return false\n    return !!o.d\n}\ndeclare class Nominal<T> {\n    /** Ghost property, don't use it! */\n    private __brand: T\n}\n","import { encodeArrayBuffer, decodeArrayBuffer, concatArrayBuffer } from '@masknet/kit'\nimport type { EC_JsonWebKey, EC_Public_JsonWebKey } from './JsonWebKey.js'\nimport { Convert } from 'pvtsutils'\n\n/**\n * Compress x & y into a single x\n */\nexport async function compressK256Point(x: string, y: string): Promise<Uint8Array> {\n    const { isPoint, pointCompress } = await import('tiny-secp256k1')\n    const xb = new Uint8Array(Convert.FromBase64Url(x))\n    const yb = new Uint8Array(Convert.FromBase64Url(y))\n    const point = new Uint8Array(concatArrayBuffer(new Uint8Array([0x04]), xb, yb))\n    if (isPoint(point)) {\n        return pointCompress(point, true)\n    } else {\n        throw new TypeError('Not a point on secp256k1.')\n    }\n}\n/**\n * Decompress x into x & y\n */\nexport async function decompressK256Point(point: Uint8Array): Promise<{ x: string; y: string }> {\n    const { isPoint, isPointCompressed, pointCompress } = await import('tiny-secp256k1')\n    if (!isPoint(point)) throw new TypeError('Not a point on secp256k1.')\n    const uncompressed = isPointCompressed(point) ? pointCompress(point, false) : point\n    const len = (uncompressed.length - 1) / 2\n    const x = uncompressed.slice(1, len + 1)\n    const y = uncompressed.slice(len + 1)\n    return { x: Convert.ToBase64Url(x), y: Convert.ToBase64Url(y) }\n}\n\nexport async function compressK256KeyRaw(point: Uint8Array) {\n    const { isPoint, isPointCompressed, pointCompress } = await import('tiny-secp256k1')\n    if (!isPoint(point)) throw new TypeError('Not a point on secp256k1.')\n    if (isPointCompressed(point)) return point\n    return pointCompress(point, true)\n}\nexport async function decompressK256Raw(point: Uint8Array) {\n    const { isPoint, isPointCompressed, pointCompress } = await import('tiny-secp256k1')\n    if (!isPoint(point)) throw new TypeError('Not a point on secp256k1.')\n    if (!isPointCompressed(point)) return point\n    return pointCompress(point, false)\n}\n\nexport async function compressK256Key(key: EC_JsonWebKey): Promise<string> {\n    const arr = await compressK256Point(key.x!, key.y!)\n    return encodeArrayBuffer(arr)\n}\nexport async function decompressK256Key(compressedPublic: string): Promise<EC_Public_JsonWebKey> {\n    const arr = decodeArrayBuffer(compressedPublic)\n    const key = await decompressK256Point(new Uint8Array(arr))\n    const jwk: JsonWebKey = {\n        crv: 'K-256',\n        ext: true,\n        x: key.x,\n        y: key.y,\n        key_ops: ['deriveKey', 'deriveBits'],\n        kty: 'EC',\n    }\n    return jwk as EC_Public_JsonWebKey\n}\n\nexport async function isK256Point(x: Uint8Array) {\n    const { isPoint } = await import('tiny-secp256k1')\n    return isPoint(x)\n}\n\nexport async function isK256PrivateKey(d: Uint8Array) {\n    const { isPrivate } = await import('tiny-secp256k1')\n    return isPrivate(d)\n}\n","import { Err, type Result } from 'ts-results-es'\n\nexport class CheckedError<T> extends Error {\n    constructor(\n        private kind: T,\n        private reason: any,\n    ) {\n        super(kind + '', { cause: reason })\n    }\n    override toString() {\n        if (this.reason) return `${this.kind}\\n${this.reason}`\n        return super.toString()\n    }\n    static mapErr<E>(r: E) {\n        return (e: unknown) => new CheckedError(r, e)\n    }\n    static withErr<P extends any[], T, E>(\n        f: (...args: P) => Result<T, unknown>,\n        o: E,\n    ): (...args: P) => Result<T, CheckedError<E>>\n    static withErr<P extends any[], T, E>(\n        f: (...args: P) => Promise<Result<T, unknown>>,\n        o: E,\n    ): (...args: P) => Promise<Result<T, CheckedError<E>>>\n    static withErr<P extends any[], T, E>(\n        f: (...args: P) => Result<T, unknown> | Promise<Result<T, unknown>>,\n        o: E,\n    ): (...args: P) => Result<T, CheckedError<E>> | Promise<Result<T, CheckedError<E>>> {\n        return (...args: P) => {\n            const r = f(...args)\n            if ('then' in r) return r.then((r) => r.mapErr(CheckedError.mapErr(o)))\n            return r.mapErr(CheckedError.mapErr(o))\n        }\n    }\n    toErr() {\n        return Err(this)\n    }\n}\n","import type { Result } from 'ts-results-es'\n\nexport async function andThenAsync<T, E, Q, E2>(\n    op: Result<T, E> | Promise<Result<T, E>>,\n    mapper: (t: T) => Result<Q, E2> | Promise<Result<Q, E2>>,\n): Promise<Result<Q, E | E2>> {\n    op = await op\n    if (op.isErr()) return op\n    return mapper(op.value)\n}\n","import * as parser from /* webpackDefer: true */ 'anchorme'\nexport function parseURLs(text: string, requireProtocol = true) {\n    // CJS-ESM compatibility\n    const lib = parser.default.default || parser.default\n    return lib\n        .list(text)\n        .map((x) => x.string)\n        .filter((y) => {\n            if (!requireProtocol) return true\n            // See https://github.com/alexcorvi/anchorme.js/issues/109\n            return URL.canParse(y)\n        })\n}\n","import type { TypedMessage } from '@masknet/typed-message'\nimport type { ProfileIdentifier, AESCryptoKey, EC_Public_CryptoKey } from '@masknet/base'\nimport type { PayloadParseResult, SupportedPayloadVersions } from '../payload/index.js'\n\nexport interface DecryptOptions {\n    message: PayloadParseResult.Payload\n    onDecrypted?(message: TypedMessage): void\n    signal?: AbortSignal\n}\nexport interface DecryptIO {\n    /** Return the cached post key for this payload. */\n    getPostKeyCache(): Promise<AESCryptoKey | null>\n    /**\n     * Store the post key into the cache so next time it will be much faster.\n     * @param key Post AES key\n     */\n    setPostKeyCache(key: AESCryptoKey): Promise<void>\n    /**\n     * Checkout if the host has the local key of the given ProfileIdentifier.\n     * @param author Author of this payload\n     */\n    hasLocalKeyOf(author: ProfileIdentifier): Promise<boolean>\n    /**\n     * Try to decrypt message by someone's localKey.\n     *\n     * Host must try authorHint's localKey if they have access to.\n     *\n     * Host may try other localKeys they owned even not listed in the authorHint.\n     *\n     * @param authorHint A hint for searching the localKey.\n     * @param data Encrypted data\n     * @param iv\n     * @returns The decrypted data\n     */\n    decryptByLocalKey(\n        authorHint: ProfileIdentifier | null,\n        data: Uint8Array,\n        iv: Uint8Array,\n    ): Promise<Uint8Array | ArrayBuffer>\n    /**\n     * If the author is null, the host should use some heuristic approach (e.g. where they found the post).\n     * @param author ProfileIdentifier of the author. Might be empty.\n     */\n    queryAuthorPublicKey(author: ProfileIdentifier | null, signal?: AbortSignal): Promise<EC_Public_CryptoKey | null>\n    /**\n     * Query the key from the gun.\n     *\n     * Error from this function will become a fatal error.\n     */\n    queryPostKey_version40(iv: Uint8Array): Promise<DecryptStaticECDH_PostKey | null>\n    /**\n     * Query the key from the gun.\n     *\n     * This should be an infinite async iterator that listen to the gun network until the AbortSignal is triggered.\n     *\n     * Error from this function will become a fatal error.\n     */\n    queryPostKey_version39(iv: Uint8Array, signal?: AbortSignal): AsyncIterableIterator<DecryptStaticECDH_PostKey>\n    /**\n     * Query the key from the gun.\n     *\n     * This should be an infinite async iterator that listen to the gun network until the AbortSignal is triggered.\n     *\n     * Error from this function will become a fatal error.\n     */\n    queryPostKey_version38(iv: Uint8Array, signal?: AbortSignal): AsyncIterableIterator<DecryptStaticECDH_PostKey>\n    /**\n     * Query the key from the gun.\n     *\n     * This should be an infinite async iterator that listen to the gun network until the AbortSignal is triggered.\n     *\n     * Error from this function will become a fatal error.\n     */\n    queryPostKey_version37(iv: Uint8Array, signal?: AbortSignal): AsyncIterableIterator<DecryptEphemeralECDH_PostKey>\n    /**\n     * Derive a group of AES key by ECDH(selfPriv, targetPub).\n     *\n     * Host should derive a new AES-GCM key for each private key they have access to.\n     *\n     * If the provided key cannot derive AES with any key (e.g. The given key is ED25519 but there is only P-256 private keys)\n     * please return an empty array.\n     *\n     * Error from this function will become a fatal error.\n     * @param publicKey The public key used in ECDH\n     */\n    deriveAESKey(publicKey: EC_Public_CryptoKey): Promise<AESCryptoKey[]>\n}\nexport interface DecryptStaticECDH_PostKey {\n    encryptedPostKey: Uint8Array\n    postKeyIV: Uint8Array\n}\nexport interface DecryptEphemeralECDH_PostKey {\n    encryptedPostKey: Uint8Array\n    /** For the first time encryption, it might be included in the post payload. */\n    ephemeralPublicKey?: EC_Public_CryptoKey\n    ephemeralPublicKeySignature?: Uint8Array\n}\nexport enum DecryptProgressKind {\n    Success = 'success',\n    Error = 'error',\n    Info = 'info',\n    Progress = 'progress',\n}\nexport interface DecryptIntermediateProgress {\n    type: DecryptProgressKind.Progress\n    event: DecryptIntermediateProgressKind\n}\nexport type DecryptProgress = DecryptSuccess | DecryptError | DecryptIntermediateProgress | DecryptReportedInfo\nexport interface DecryptReportedInfo {\n    type: DecryptProgressKind.Info\n    iv?: Uint8Array\n    claimedAuthor?: ProfileIdentifier\n    publicShared?: boolean\n    version?: SupportedPayloadVersions\n    isAuthorOfPost?: boolean\n}\nexport interface DecryptIntermediateProgress {\n    type: DecryptProgressKind.Progress\n    event: DecryptIntermediateProgressKind\n}\nexport enum DecryptIntermediateProgressKind {\n    TryDecryptByE2E = 'E2E',\n}\nexport interface DecryptSuccess {\n    type: DecryptProgressKind.Success\n    content: TypedMessage\n}\n// TODO: rename as DecryptErrorReasons\nexport enum DecryptErrorReasons {\n    PayloadBroken = '[@masknet/encryption] Payload is broken.',\n    PayloadDecryptedButTypedMessageBroken = \"[@masknet/encryption] Payload decrypted, but it's inner TypedMessage is broken.\",\n    CannotDecryptAsAuthor = '[@masknet/encryption] Failed decrypt as the author of this payload.',\n    DecryptFailed = '[@masknet/encryption] Post key found, but decryption failed.',\n    AuthorPublicKeyNotFound = \"[@masknet/encryption] Cannot found author's public key\",\n    PrivateKeyNotFound = '[@masknet/encryption] Cannot continue to decrypt because there is no private key found.',\n    NotShareTarget = '[@masknet/encryption] No valid key is found. Likely this post is not shared with you',\n    // Not used in this library.\n    UnrecognizedAuthor = '[@masknet/encryption] No author is recognized which is required for the image steganography decoding.',\n    CurrentProfileDoesNotConnectedToPersona = '[@masknet/encryption] Cannot decrypt by E2E because no persona is linked with the current profile.',\n    NoPayloadFound = '[@masknet/encryption] No payload found in this material.',\n}\nexport class DecryptError extends Error {\n    static Reasons = DecryptErrorReasons\n    readonly type = DecryptProgressKind.Error\n    constructor(\n        public override message: DecryptErrorReasons,\n        cause: any,\n        public recoverable = false,\n    ) {\n        super(message, { cause })\n    }\n}\n","import type {\n    ProfileIdentifier,\n    EC_Public_CryptoKey,\n    AESCryptoKey,\n    EC_Private_CryptoKey,\n    PostIVIdentifier,\n} from '@masknet/base'\nimport type { SerializableTypedMessages } from '@masknet/typed-message'\nimport type { EC_Key, EC_KeyCurve } from '../payload/index.js'\nimport type { Option } from 'ts-results-es'\n\nexport interface EncryptOptions {\n    /** Payload version to use. */\n    version: -38 | -37\n    /** Current author who started the encryption. */\n    author: Option<ProfileIdentifier>\n    /** Public key of the current author. */\n    authorPublicKey: Option<EC_Key<EC_Public_CryptoKey>>\n    /** Network of the encryption */\n    network: string\n    /** The message to be encrypted. */\n    message: SerializableTypedMessages\n    /** Encryption target. */\n    target: EncryptTargetPublic | EncryptTargetE2E\n}\nexport interface EncryptTargetPublic {\n    type: 'public'\n}\nexport interface EncryptTargetE2E {\n    type: 'E2E'\n    target: ReadonlyArray<EC_Key<EC_Public_CryptoKey>>\n}\nexport interface EncryptIO {\n    /**\n     * This is only used in v38.\n     *\n     * Note: Due to historical reason (misconfiguration), some user may not have localKey.\n     *\n     * Throw in this case.\n     */\n    encryptByLocalKey(content: Uint8Array, iv: Uint8Array): Promise<Uint8Array | ArrayBuffer>\n    /**\n     * Derive a group of AES key by ECDH(selfPriv, targetPub).\n     *\n     * Host should derive a new AES-GCM key for each private key they have access to.\n     *\n     * If the provided key cannot derive AES with any key (e.g. The given key is ED25519 but there is only P-256 private keys)\n     * please throw an error.\n     *\n     * Error from this function will become a fatal error.\n     * This is only used in v38 or older\n     *\n     * @param publicKey The public key used in ECDH\n     */\n    deriveAESKey(publicKey: EC_Public_CryptoKey): Promise<AESCryptoKey>\n    /**\n     * Fill the arr with random values.\n     * This should be only provided in the test environment to create a deterministic result.\n     */\n    getRandomValues?(arr: Uint8Array): Uint8Array\n    /**\n     * Generate a new AES Key.\n     * This should be only provided in the test environment to create a deterministic result.\n     */\n    getRandomAESKey?(): Promise<AESCryptoKey>\n    /**\n     * Generate a pair of new EC key used for ECDH.\n     * This should be only provided in the test environment to create a deterministic result.\n     */\n    getRandomECKey?(algr: EC_KeyCurve): Promise<readonly [EC_Public_CryptoKey, EC_Private_CryptoKey]>\n}\nexport interface EncryptResult {\n    postKey: AESCryptoKey\n    output: string | Uint8Array\n    identifier: PostIVIdentifier\n    author?: ProfileIdentifier\n    e2e?: EncryptionResultE2EMap\n}\n/** Additional information that need to be send to the internet in order to allow recipients to decrypt */\nexport type EncryptionResultE2EMap = Map<EC_Key<EC_Public_CryptoKey>, PromiseSettledResult<EncryptionResultE2E>>\nexport interface EncryptionResultE2E {\n    target: EC_Key<EC_Public_CryptoKey>\n    encryptedPostKey: Uint8Array\n    /** This is used in v38. */\n    ivToBePublished?: Uint8Array\n    /** This feature is supported since v37. */\n    ephemeralPublicKey?: EC_Public_CryptoKey\n}\nexport enum EncryptErrorReasons {\n    ComplexTypedMessageNotSupportedInPayload38 = '[@masknet/encryption] Complex TypedMessage is not supported in payload v38.',\n    PublicKeyNotFound = '[@masknet/encryption] Target public key not found.',\n    AESKeyUsageError = \"[@masknet/encryption] AES key generated by IO doesn't have the correct usages or extractable property.\",\n}\nexport class EncryptError extends Error {\n    static Reasons = EncryptErrorReasons\n    constructor(\n        public override message: EncryptErrorReasons,\n        cause?: any,\n    ) {\n        super(message, { cause })\n    }\n}\n","import type { EC_Public_CryptoKey, EC_Private_CryptoKey } from '@masknet/base'\nimport { EC_KeyCurve } from '../payload/index.js'\nimport type { EncryptIO } from './Encryption.js'\n\ntype EphemeralKeys = Map<\n    EC_KeyCurve,\n    readonly [EC_Public_CryptoKey, EC_Private_CryptoKey] | Promise<readonly [EC_Public_CryptoKey, EC_Private_CryptoKey]>\n>\n/** @internal */\nexport function createEphemeralKeysMap(io: Pick<EncryptIO, 'getRandomECKey'>) {\n    const ephemeralKeys: EphemeralKeys = new Map()\n\n    // get ephemeral keys, generate one if not found\n    async function getEphemeralKey(curve: EC_KeyCurve) {\n        if (ephemeralKeys.has(curve)) return ephemeralKeys.get(curve)!\n        ephemeralKeys.set(curve, generateEC_KeyPair(io, curve))\n        return ephemeralKeys.get(curve)!\n    }\n    return { ephemeralKeys, getEphemeralKey }\n}\n\n/** @internal */\nexport function fillIV(io: Pick<EncryptIO, 'getRandomValues'>): Uint8Array {\n    if (io.getRandomValues) return io.getRandomValues(new Uint8Array(16))\n    return crypto.getRandomValues(new Uint8Array(16))\n}\n\nasync function generateEC_KeyPair(io: Pick<EncryptIO, 'getRandomECKey'>, kind: EC_KeyCurve) {\n    if (io.getRandomECKey) return io.getRandomECKey(kind)\n    const namedCurve: Record<EC_KeyCurve, string> = {\n        [EC_KeyCurve.secp256p1]: 'P-256',\n        [EC_KeyCurve.secp256k1]: 'K-256',\n    }\n    const { privateKey, publicKey } = await crypto.subtle.generateKey(\n        { name: 'ECDH', namedCurve: namedCurve[kind] },\n        true,\n        ['deriveKey'],\n    )\n    return [publicKey as EC_Public_CryptoKey, privateKey as EC_Private_CryptoKey] as const\n}\n","import { concatArrayBuffer, decodeArrayBuffer } from '@masknet/kit'\nimport type { AESCryptoKey, EC_Public_CryptoKey } from '@masknet/base'\nimport { encryptWithAES } from '../utils/index.js'\nimport {\n    type EncryptIO,\n    type EncryptionResultE2E,\n    type EncryptionResultE2EMap,\n    type EncryptResult,\n    type EncryptTargetE2E,\n} from './EncryptionTypes.js'\nimport { fillIV } from './utils.js'\n\nconst KEY = decodeArrayBuffer('KEY')\nconst IV = decodeArrayBuffer('IV')\n/**\n * Derive a group of AES key for ECDH.\n *\n * !! For the compatibility, you should refer to the original implementation:\n *\n * !! https://github.com/DimensionDev/Maskbook/blob/f3d83713d60dd0aad462e0648c4d38586c106edc/packages/mask/src/crypto/crypto-alpha-40.ts#L29-L58\n *\n * @internal\n */\nexport async function deriveAESByECDH_version38OrOlderExtraSteps(\n    deriveAESByECDH: (key: EC_Public_CryptoKey) => Promise<AESCryptoKey[]>,\n    pub: EC_Public_CryptoKey,\n    iv: Uint8Array,\n): Promise<Array<readonly [key: AESCryptoKey, iv: Uint8Array]>> {\n    const deriveResult = await deriveAESByECDH(pub)\n    const extraSteps = deriveResult.map(async (key) => {\n        const derivedKeyRaw = await crypto.subtle.exportKey('raw', key)\n        const _a = concatArrayBuffer(derivedKeyRaw, iv)\n        const nextAESKeyMaterial = await crypto.subtle.digest('SHA-256', concatArrayBuffer(_a, iv, KEY))\n        const iv_pre = new Uint8Array(await crypto.subtle.digest('SHA-256', concatArrayBuffer(_a, iv, IV)))\n        const nextIV = new Uint8Array(16)\n        for (let i = 0; i <= 16; i += 1) {\n            // eslint-disable-next-line no-bitwise\n            nextIV[i] = iv_pre[i] ^ iv_pre[16 + i]\n        }\n        const nextAESKey = await crypto.subtle.importKey(\n            'raw',\n            nextAESKeyMaterial,\n            { name: 'AES-GCM', length: 256 },\n            true,\n            ['encrypt', 'decrypt'],\n        )\n        return [nextAESKey as AESCryptoKey, nextIV] as const\n    })\n    return Promise.all(extraSteps)\n}\n\n/** @internal */\nexport async function v38_addReceiver(\n    postKeyEncoded: Promise<Uint8Array>,\n    target: EncryptTargetE2E,\n    io: Pick<EncryptIO, 'deriveAESKey' | 'getRandomValues'>,\n): Promise<EncryptionResultE2EMap> {\n    // For every receiver R,\n    //     1. Let R_pub = R.publicKey\n    //     2. Let Internal_AES be the result of ECDH with the sender's private key and R_pub\n    //     Note: To keep compatibility, here we use the algorithm in\n    //     https://github.com/DimensionDev/Maskbook/blob/f3d83713d60dd0aad462e0648c4d38586c106edc/packages/mask/src/crypto/crypto-alpha-40.ts#L29-L58\n    //     3. Let ivToBePublish be a new generated IV. This should be sent to the receiver.\n    //     4. Calculate new AES key and IV based on Internal_AES and ivToBePublish.\n    //     Note: Internal_AES is not returned by io.deriveAESKey_version38_or_older, it is internal algorithm of that method.\n    const ecdh = Promise.allSettled(\n        target.target.map(async (receiverPublicKey): Promise<EncryptionResultE2E> => {\n            const ivToBePublished = fillIV(io)\n            const [[aes, iv]] = await deriveAESByECDH_version38OrOlderExtraSteps(\n                async (e) => [await io.deriveAESKey(e)],\n                receiverPublicKey.key,\n                ivToBePublished,\n            )\n            const encryptedPostKey = await encryptWithAES(aes, iv, await postKeyEncoded)\n            return {\n                ivToBePublished,\n                encryptedPostKey: encryptedPostKey.unwrap(),\n                target: receiverPublicKey,\n            }\n        }),\n    ).then((x) => x.entries())\n\n    const ecdhResult: EncryptResult['e2e'] = new Map()\n    for (const [index, result] of await ecdh) {\n        ecdhResult.set(target.target[index], result)\n    }\n    return ecdhResult\n}\n","import { encode, decode, type GrayscaleAlgorithm, DEFAULT_MASK, type EncodeOptions } from '@masknet/stego-js'\nimport { getDimension } from './utils.js'\nimport { getPreset, findPreset } from './presets.js'\nimport { decodeArrayBuffer, encodeArrayBuffer } from '@masknet/kit'\n\nexport { GrayscaleAlgorithm } from '@masknet/stego-js'\n\nexport interface SteganographyIO {\n    downloadImage: (url: string) => Promise<ArrayBuffer>\n}\nexport interface EncodeImageOptions extends SteganographyIO {\n    data: string | Uint8Array\n    password: string\n    grayscaleAlgorithm?: GrayscaleAlgorithm\n    preset: SteganographyPreset\n}\nexport enum SteganographyPreset {\n    Preset2021 = '2021',\n    Preset2022 = '2022',\n    Preset2023 = '2023',\n}\n\nexport async function steganographyEncodeImage(buf: ArrayBuffer, options: EncodeImageOptions) {\n    const { downloadImage, data, password, grayscaleAlgorithm } = options\n    const preset = getPreset(options.preset)\n    if (!preset) throw new Error('Failed to find preset.')\n\n    const optionalOptions: Partial<Readwrite<EncodeOptions>> = {}\n    if (grayscaleAlgorithm) optionalOptions.grayscaleAlgorithm = grayscaleAlgorithm\n\n    if (preset.type === 'string' && typeof data !== 'string')\n        throw new TypeError('The chosen preset must be used with string')\n    if (preset.type === 'raw' && typeof data === 'string')\n        throw new TypeError('The chosen preset must be used with Uint8Array')\n\n    const text = typeof data === 'string' ? data : encodeArrayBuffer(data)\n\n    return new Uint8Array(\n        await encode(buf, preset.mask ? await downloadImage(preset.mask) : new Uint8Array(DEFAULT_MASK), {\n            ...preset.options,\n            ...optionalOptions,\n            text,\n            pass: password,\n        }),\n    )\n}\n\nexport interface DecodeImageOptions extends SteganographyIO {\n    password: string\n}\nexport async function steganographyDecodeImage(image: Blob | string, options: DecodeImageOptions) {\n    const buffer = typeof image === 'string' ? await options.downloadImage(image) : await image.arrayBuffer()\n    const dimension = getDimension(buffer)\n    const preset = findPreset(dimension)\n    if (!preset) return null\n    const result = decode(\n        buffer,\n        preset.mask ? await options.downloadImage(preset.mask) : new Uint8Array(DEFAULT_MASK),\n        {\n            ...preset.options,\n            pass: options.password,\n        },\n    )\n    if (preset.type === 'raw') return new Uint8Array(decodeArrayBuffer(await result))\n    return result\n}\n","import { unreachable } from '@masknet/kit'\nimport { AlgorithmVersion, GrayscaleAlgorithm, TransformAlgorithm, type EncodeOptions } from '@masknet/stego-js'\nimport { SteganographyPreset } from './index.js'\n\n/** @internal */\nexport interface Dimension {\n    width: number\n    height: number\n}\n\ninterface Preset extends Dimension {\n    mask: string | null\n    type: 'string' | 'raw'\n    description: string\n    options: Omit<EncodeOptions, 'text'>\n}\n\nconst libV1AlgrDefaults: Omit<EncodeOptions, 'text'> = {\n    size: 8,\n    narrow: 0,\n    copies: 3,\n    tolerance: 128,\n    exhaustPixels: true,\n    cropEdgePixels: false,\n    fakeMaskPixels: false,\n    grayscaleAlgorithm: GrayscaleAlgorithm.NONE,\n    transformAlgorithm: TransformAlgorithm.FFT1D,\n    version: AlgorithmVersion.V1,\n}\nconst libV2AlgrDefaults: Omit<EncodeOptions, 'text'> = {\n    size: 8,\n    narrow: 0,\n    copies: 3,\n    tolerance: 400,\n    exhaustPixels: false,\n    cropEdgePixels: false,\n    fakeMaskPixels: false,\n    grayscaleAlgorithm: GrayscaleAlgorithm.NONE,\n    transformAlgorithm: TransformAlgorithm.FFT2D,\n    version: AlgorithmVersion.V2,\n}\n\nconst Preset2021: Preset = {\n    type: 'string',\n    description: 'the preset we used for payload V38 with v1 algorithm',\n    width: 1200,\n    height: 681,\n    mask: new URL('../../assets/mask-v2.png', import.meta.url).toString(),\n    options: libV1AlgrDefaults,\n}\n\nconst Preset2022: Preset = {\n    type: 'string',\n    description: 'the preset we used for payload V38',\n    width: 1200,\n    height: 682,\n    mask: null,\n    options: libV2AlgrDefaults,\n}\n\nconst Preset2023: Preset = {\n    type: 'raw',\n    description: 'the preset we used for payload V37',\n    width: 1200,\n    height: 671,\n    mask: null,\n    options: libV2AlgrDefaults,\n}\n\nconst dimensionPreset: readonly Preset[] = [\n    Preset2023,\n    Preset2022,\n    Preset2021,\n    {\n        type: 'string',\n        description: 'legacy post',\n        width: 1024,\n        height: 1240,\n        mask: new URL('../../assets/mask-v1.png', import.meta.url).toString(),\n        options: libV1AlgrDefaults,\n    },\n    {\n        type: 'string',\n        description: 'legacy post',\n        width: 1200,\n        height: 680,\n        mask: new URL('../../assets/mask-transparent.png', import.meta.url).toString(),\n        options: {\n            ...libV1AlgrDefaults,\n            cropEdgePixels: true,\n        },\n    },\n    {\n        type: 'string',\n        description: 'used in event election 2020',\n        width: 1000,\n        height: 558,\n        mask: new URL('../../assets/mask-transparent.png', import.meta.url).toString(),\n        options: libV1AlgrDefaults,\n    },\n    {\n        type: 'string',\n        description: 'old NFT',\n        width: 1000,\n        height: 560,\n        mask: new URL('../../assets/mask-v4.png', import.meta.url).toString(),\n        options: libV1AlgrDefaults,\n    },\n]\n\n/** @internal */\nexport function findPreset(dimension: Dimension) {\n    return dimensionPreset.find((d) => isSameDimension(d, dimension))\n}\nexport function getPreset(preset: SteganographyPreset): Preset {\n    if (preset === SteganographyPreset.Preset2021) return Preset2021\n    if (preset === SteganographyPreset.Preset2022) return Preset2022\n    if (preset === SteganographyPreset.Preset2023) return Preset2023\n    unreachable(preset)\n}\nfunction isSameDimension(dimension: Dimension, otherDimension: Dimension) {\n    return dimension.width === otherDimension.width && dimension.height === otherDimension.height\n}\n","import { getImageType } from '@masknet/stego-js'\nimport type { Dimension } from './presets.js'\n\n/** @internal */\nexport function getDimension(buf: ArrayBuffer): Dimension {\n    const fallback = {\n        width: 0,\n        height: 0,\n    }\n    switch (getImageType(new Uint8Array(buf))) {\n        case 'image/jpeg':\n            return getDimensionAsJPEG(buf) ?? fallback\n        case 'image/png':\n            return getDimensionAsPNG(buf)\n        default:\n            return fallback\n    }\n}\n\nfunction getDimensionAsPNG(buf: ArrayBuffer) {\n    const dataView = new DataView(buf, 0, 28)\n    return {\n        width: dataView.getInt32(16),\n        height: dataView.getInt32(20),\n    }\n}\n\n/**\n * Get dimension of a JPEG image\n *\n * @see http://vip.sugovica.hu/Sardi/kepnezo/JPEG%20File%20Layout%20and%20Format.htm\n */\nfunction getDimensionAsJPEG(buf: ArrayBuffer) {\n    const dataView = new DataView(buf)\n    let i = 0\n    if (\n        dataView.getUint8(i) === 0xff &&\n        dataView.getUint8(i + 1) === 0xd8 && // SOI marker\n        dataView.getUint8(i + 2) === 0xff &&\n        dataView.getUint8(i + 3) === 0xe0 // APP0 marker\n    ) {\n        i += 4\n        if (\n            dataView.getUint8(i + 2) === 'J'.charCodeAt(0) &&\n            dataView.getUint8(i + 3) === 'F'.charCodeAt(0) &&\n            dataView.getUint8(i + 4) === 'I'.charCodeAt(0) &&\n            dataView.getUint8(i + 5) === 'F'.charCodeAt(0) &&\n            dataView.getUint8(i + 6) === 0x00\n        ) {\n            let block_length = dataView.getUint8(i) * 256 + dataView.getUint8(i + 1)\n            while (i < dataView.byteLength) {\n                i += block_length\n                if (i >= dataView.byteLength) return\n                if (dataView.getUint8(i) !== 0xff) return\n                if (\n                    dataView.getUint8(i + 1) === 0xc0 || // SOF0 marker\n                    dataView.getUint8(i + 1) === 0xc2 // SOF2 marker\n                ) {\n                    return {\n                        height: dataView.getUint8(i + 5) * 256 + dataView.getUint8(i + 6),\n                        width: dataView.getUint8(i + 7) * 256 + dataView.getUint8(i + 8),\n                    }\n                } else {\n                    i += 2\n                    block_length = dataView.getUint8(i) * 256 + dataView.getUint8(i + 1)\n                }\n            }\n        }\n    }\n    return\n}\n","import { type Result, type Option, Ok, None, Some } from 'ts-results-es'\nimport type { CheckedError } from './CheckedError.js'\nexport type OptionalResult<T, E> = Result<Option<T>, CheckedError<E>>\nexport const OptionalResult = {\n    Some<T>(x: T): OptionalResult<T, any> {\n        return Ok(Some(x))\n    },\n    None: Ok(None) as OptionalResult<any, any>,\n    fromResult<T, E>(x: Result<T, CheckedError<E>>): OptionalResult<T, E> {\n        if (x.isErr()) return x\n        return Ok(Some(x.value))\n    },\n}\n","import { CheckedError } from '@masknet/base'\nimport { Result } from 'ts-results-es'\nimport { decodeArrayBuffer, decodeText } from '@masknet/kit'\nimport { decode as decodeMessagePack, encode } from '@msgpack/msgpack'\nexport * from './crypto.js'\n\nconst firstArgString = (e: unknown) => typeof e === 'string'\nconst firstArgUint8Array = (e: unknown) => e instanceof Uint8Array\nexport const decodeUint8ArrayF = wrap((x: string) => new Uint8Array(decodeArrayBuffer(x)), firstArgString)\nexport const decodeTextF = wrap(decodeText, firstArgUint8Array)\nexport const JSONParseF = wrap(JSON.parse, firstArgString)\nexport const decodeMessagePackF = wrap((u8: Uint8Array) => decodeMessagePack(u8), firstArgUint8Array)\n\nexport function encodeMessagePack(data: any) {\n    // The returned buffer is a slice of a larger ArrayBuffer\n    return encode(data).slice()\n}\n\nfunction wrap<P extends any[], T>(f: (...args: P) => T, valid: (...args: P) => boolean) {\n    return <E>(invalidE: E, throwsE: E) =>\n        (...args: P) => {\n            const isValid = valid(...args)\n            if (!isValid) return new CheckedError(invalidE, null).toErr()\n            return Result.wrap(() => f(...args)).mapErr(CheckedError.mapErr(throwsE))\n        }\n}\n","import { Ok, type Result } from 'ts-results-es'\nimport type { Signature } from '../index.js'\nimport { PayloadException } from '../types/index.js'\nimport { CheckedError, OptionalResult } from '@masknet/base'\nimport { concatArrayBuffer } from '@masknet/kit'\n\nconst enum SignaturePayloadFirstByte {\n    NoSignature = 0,\n    Signature = 1,\n}\nexport function encodeSignatureContainer(payload: Uint8Array, signature: Uint8Array | null): Uint8Array {\n    if (signature)\n        return new Uint8Array(\n            concatArrayBuffer(new Uint8Array([SignaturePayloadFirstByte.Signature]), signature, payload),\n        )\n    return new Uint8Array(concatArrayBuffer(new Uint8Array([SignaturePayloadFirstByte.NoSignature]), payload))\n}\nexport interface SignatureContainer {\n    payload: Uint8Array\n    signature: OptionalResult<Signature, PayloadException>\n}\n\nexport function parseSignatureContainer(\n    signatureContainer: Uint8Array,\n): Result<SignatureContainer, CheckedError<PayloadException>> {\n    if (signatureContainer[0] === SignaturePayloadFirstByte.NoSignature) {\n        return Ok({ payload: signatureContainer.slice(1), signature: OptionalResult.None })\n    } else if (signatureContainer[0] === SignaturePayloadFirstByte.Signature) {\n        const signature = signatureContainer.slice(1, 33)\n        const payload = signatureContainer.slice(33)\n        return Ok({ payload, signature: OptionalResult.Some<Signature>({ signature, signee: payload }) })\n    } else return new CheckedError(PayloadException.InvalidPayload, 'Invalid signature container').toErr()\n}\n","import { ProfileIdentifier, CheckedError, OptionalResult } from '@masknet/base'\nimport { Ok } from 'ts-results-es'\nimport { type PayloadParseResult, EncryptPayloadNetwork } from '../payload/index.js'\nimport { CryptoException, PayloadException } from '../types/index.js'\nimport { importAES } from '../utils/index.js'\n\nconst import_AES_GCM_256 = CheckedError.withErr(importAES, CryptoException.InvalidCryptoKey)\n\n/**\n * @internal\n * In payload version 38, the AES key is encrypted by this key.\n */\nconst v38PublicSharedJwk: JsonWebKey = {\n    alg: 'A256GCM',\n    ext: true,\n    /* cspell:disable-next-line */\n    k: '3Bf8BJ3ZPSMUM2jg2ThODeLuRRD_-_iwQEaeLdcQXpg',\n    key_ops: ['encrypt', 'decrypt'],\n    kty: 'oct',\n}\n\nlet v38PublicSharedCryptoKey: CryptoKey\n\nexport async function get_v38PublicSharedCryptoKey() {\n    if (v38PublicSharedCryptoKey) return Ok(v38PublicSharedCryptoKey)\n\n    const imported = await import_AES_GCM_256(v38PublicSharedJwk)\n    if (imported.isErr()) return imported\n    v38PublicSharedCryptoKey = imported.value\n    return Ok(v38PublicSharedCryptoKey)\n}\n\nexport function parseAuthor(network: unknown, id: unknown): PayloadParseResult.Payload['author'] {\n    if (network === null || network === undefined) return OptionalResult.None\n    if (id === '' || id === null || id === undefined) return OptionalResult.None\n    if (typeof id !== 'string') return new CheckedError(PayloadException.InvalidPayload, 'Invalid user id').toErr()\n\n    let net = ''\n    if (network === EncryptPayloadNetwork.Facebook) net = 'facebook.com'\n    else if (network === EncryptPayloadNetwork.Twitter) net = 'twitter.com'\n    else if (network === EncryptPayloadNetwork.Instagram) net = 'instagram.com'\n    else if (network === EncryptPayloadNetwork.Minds) net = 'minds.com'\n    else if (typeof network === 'string') net = network\n    else if (typeof network !== 'number')\n        return new CheckedError(PayloadException.InvalidPayload, 'Invalid network').toErr()\n    else return new CheckedError(PayloadException.UnknownEnumMember, 'unknown network').toErr()\n\n    if (net.includes('/')) return new CheckedError(PayloadException.InvalidPayload, 'Invalid network').toErr()\n\n    const identifier = ProfileIdentifier.of(net, id)\n    if (identifier.isSome()) return OptionalResult.Some(identifier.value)\n    return OptionalResult.None\n}\n","import type { PayloadParserResult } from './index.js'\nimport type { PayloadParseResult } from '../payload/index.js'\nimport { CryptoException, PayloadException, assertArray, assertUint8Array } from '../types/index.js'\nimport { andThenAsync, CheckedError, decompressK256Raw, OptionalResult } from '@masknet/base'\nimport { Ok, type Result } from 'ts-results-es'\nimport { type EC_Key, EC_KeyCurve } from '../payload/types.js'\nimport { decodeMessagePackF, assertIVLengthEq16, importAES, importEC_Key } from '../utils/index.js'\nimport { safeUnreachable } from '@masknet/kit'\nimport { parseSignatureContainer } from './SignatureContainer.js'\nimport { parseAuthor } from './shared.js'\n// ? Payload format: (binary format)\n// ? See: docs/rfc/000-Payload-37.md\n\nconst decode = decodeMessagePackF(PayloadException.InvalidPayload, PayloadException.DecodeFailed)\nconst InvalidPayload = (msg?: string) => new CheckedError(PayloadException.InvalidPayload, msg).toErr()\nconst importAES256 = CheckedError.withErr(importAES, CryptoException.InvalidCryptoKey)\nconst importEC = CheckedError.withErr(importEC_Key, CryptoException.InvalidCryptoKey)\nexport async function parse37(input: Uint8Array): PayloadParserResult {\n    const signatureContainer = parseSignatureContainer(input)\n    if (signatureContainer.isErr()) return signatureContainer\n    const { payload, signature } = signatureContainer.value\n    return parsePayload37(payload, signature)\n}\n\nfunction parsePayload37(payload: Uint8Array, signature: PayloadParseResult.Payload['signature']) {\n    const _ = decode(payload).andThen(assertArray('Payload', PayloadException.InvalidPayload))\n    return andThenAsync(_, async (item) => {\n        const [version, authorNetwork, authorID, authorPublicKeyAlg, authorPublicKey, encryption, data] = item\n        // 0 in payload means -37, 1 means -36, ...etc\n        if (version !== 0) return new CheckedError(PayloadException.UnknownVersion, null).toErr()\n\n        const normalized: PayloadParseResult.Payload = {\n            version: -37,\n            author: parseAuthor(authorNetwork, authorID),\n            authorPublicKey: authorPublicKey\n                ? OptionalResult.fromResult(\n                      await importAsymmetryKey(authorPublicKeyAlg, authorPublicKey, 'authorPublicKey'),\n                  )\n                : OptionalResult.None,\n            encryption: await parseEncryption(encryption),\n            encrypted: assertUint8Array(data, 'encrypted', PayloadException.InvalidPayload),\n            signature,\n        }\n        return Ok(normalized)\n    })\n}\n\nasync function parseEncryption(encryption: unknown): Promise<PayloadParseResult.Payload['encryption']> {\n    if (!Array.isArray(encryption)) return InvalidPayload('Invalid encryption')\n    const kind: EncryptionKind = encryption[0]\n    if (kind === EncryptionKind.PeerToPeer) {\n        const [, ownersAESKeyEncrypted, iv, authorEphemeralPublicKeys] = encryption\n        const e: PayloadParseResult.EndToEndEncryption = {\n            type: 'E2E',\n            iv: assertUint8Array(iv, 'iv', PayloadException.InvalidPayload).andThen(assertIVLengthEq16),\n            ownersAESKeyEncrypted: assertUint8Array(\n                ownersAESKeyEncrypted,\n                'ownersAESKeyEncrypted',\n                PayloadException.InvalidPayload,\n            ),\n            ephemeralPublicKey: await parseAuthorEphemeralPublicKeys(authorEphemeralPublicKeys),\n        }\n        return Ok(e)\n    } else if (kind === EncryptionKind.Public) {\n        const [, AESKey, iv] = encryption\n        const e: PayloadParseResult.PublicEncryption = {\n            type: 'public',\n            iv: assertUint8Array(iv, 'iv', PayloadException.InvalidPayload).andThen(assertIVLengthEq16),\n            AESKey: await parseAES(AESKey),\n        }\n        return Ok(e)\n    } else {\n        safeUnreachable(kind)\n    }\n\n    return InvalidPayload('Invalid encryption')\n\n    async function parseAuthorEphemeralPublicKeys(item: unknown) {\n        if (typeof item !== 'object' || item === null) return {}\n        return Object.fromEntries(await Promise.all(Object.entries(item).map(parseAuthorEphemeralPublicKey)))\n    }\n}\nasync function parseAuthorEphemeralPublicKey([key, value]: [string | number, unknown]) {\n    const isEnumLike = Number.parseInt(key.toString(), 10)\n    if (!Number.isNaN(isEnumLike)) key = isEnumLike\n    const result = await importAsymmetryKey(key, value, 'authorEphemeralPublicKey')\n    return [key, result] as const\n}\nasync function parseAES(aes: unknown) {\n    return andThenAsync(assertUint8Array(aes, 'aes', CryptoException.InvalidCryptoKey), importAES256)\n}\nfunction importAsymmetryKey(algr: unknown, key: unknown, name: string) {\n    type T = Promise<Result<EC_Key, CheckedError<CryptoException>>>\n    return andThenAsync(assertUint8Array(key, name, CryptoException.InvalidCryptoKey), async (pubKey): T => {\n        if (typeof algr === 'number') {\n            if (algr in EC_KeyCurve) {\n                if (algr === EC_KeyCurve.secp256k1) {\n                    pubKey = await decompressK256Raw(pubKey)\n                }\n                const key = await importEC(pubKey, algr)\n                if (key.isErr()) return key\n                return Ok<EC_Key>({ algr, key: key.value })\n            }\n        }\n        return new CheckedError(CryptoException.UnsupportedAlgorithm, null).toErr()\n    })\n}\nenum EncryptionKind {\n    Public = 0,\n    PeerToPeer = 1,\n}\n","/* eslint @masknet/unicode-specific-set: [\"error\", { \"only\": \"code\" }] */\nimport { type EC_Key, type PayloadParseResult, EC_KeyCurve, type Signature } from '../payload/index.js'\nimport { CryptoException, PayloadException } from '../types/index.js'\nimport { Result, Ok, Some } from 'ts-results-es'\nimport {\n    decodeUint8ArrayF,\n    decodeTextF,\n    decryptWithAES,\n    assertIVLengthEq16,\n    importAES,\n    importEC_Key,\n    JSONParseF,\n} from '../utils/index.js'\nimport type { PayloadParserResult } from './index.js'\nimport { get_v38PublicSharedCryptoKey } from './shared.js'\nimport { encodeText } from '@masknet/kit'\nimport { andThenAsync, CheckedError, OptionalResult, ProfileIdentifier, decompressK256Point } from '@masknet/base'\n\nconst decodeUint8Array = decodeUint8ArrayF(PayloadException.InvalidPayload, PayloadException.DecodeFailed)\nconst decodeUint8ArrayCrypto = decodeUint8ArrayF(CryptoException.InvalidCryptoKey, CryptoException.InvalidCryptoKey)\nconst decodeTextCrypto = decodeTextF(CryptoException.InvalidCryptoKey, CryptoException.InvalidCryptoKey)\nconst JSONParse = JSONParseF(CryptoException.InvalidCryptoKey, CryptoException.InvalidCryptoKey)\nconst importEC = CheckedError.withErr(importEC_Key, CryptoException.InvalidCryptoKey)\n\nexport async function parse38(payload: string): PayloadParserResult {\n    // #region Parse text\n    const header = '\\u{1F3BC}4/4'\n    if (!payload.startsWith(header)) return new CheckedError(PayloadException.InvalidPayload, 'Unknown version').toErr()\n    let rest = payload.slice(header.length)\n    // cut the tail\n    rest = rest.slice(0, rest.lastIndexOf(':||'))\n\n    const { AESKeyEncrypted, encryptedText, iv, signature, authorPublicKey, authorUserID, isPublic } = splitFields(rest)\n    // #endregion\n\n    // #region Normalization\n    const raw_iv = decodeUint8ArrayCrypto(iv).andThen(assertIVLengthEq16)\n    const raw_aes = decodeUint8ArrayCrypto(AESKeyEncrypted)\n    const encryption: PayloadParseResult.EndToEndEncryption | PayloadParseResult.PublicEncryption = isPublic\n        ? {\n              type: 'public',\n              iv: raw_iv,\n              AESKey: await decodePublicSharedAESKey(raw_iv, raw_aes),\n          }\n        : {\n              type: 'E2E',\n              iv: raw_iv,\n              ephemeralPublicKey: {},\n              ownersAESKeyEncrypted: raw_aes,\n          }\n    const normalized: Readwrite<PayloadParseResult.Payload> = {\n        version: -38,\n        author: OptionalResult.None,\n        authorPublicKey: OptionalResult.None,\n        signature: OptionalResult.None,\n        encryption: Ok(encryption),\n        encrypted: decodeUint8Array(encryptedText),\n    }\n    if (authorUserID.isErr()) {\n        normalized.author = authorUserID.mapErr(CheckedError.mapErr(PayloadException.DecodeFailed))\n    } else if (authorUserID.value.isSome()) {\n        normalized.author = ProfileIdentifier.from(`person:${authorUserID.value.value}`)\n            .map((x) => Some(x))\n            .toResult(undefined)\n            .mapErr(CheckedError.mapErr(PayloadException.DecodeFailed))\n    }\n    if (authorPublicKey) {\n        normalized.authorPublicKey = await decodeECDHPublicKey(authorPublicKey)\n    }\n    if (signature && raw_iv.isOk() && raw_aes.isOk() && normalized.encrypted.isOk()) {\n        const message = encodeText(`4/4|${AESKeyEncrypted}|${iv}|${encryptedText}`)\n        const sig = decodeUint8Array(signature)\n        if (sig.isOk()) {\n            normalized.signature = OptionalResult.Some<Signature>({ signee: message, signature: sig.value })\n        } else {\n            normalized.signature = sig\n        }\n    }\n    return Ok(normalized)\n    // #endregion\n}\n\n// ? Version 38:🎼4/4|AESKeyEncrypted|iv|encryptedText|signature|authorPublicKey?|publicShared?|authorIdentifier?:||\nfunction splitFields(raw: string) {\n    const [, AESKeyEncrypted = '', iv = '', encryptedText = '', signature, authorPublicKey, isPublic, authorUserIDRaw] =\n        raw.split('|')\n    const authorUserID: OptionalResult<string, any> = authorUserIDRaw\n        ? Result.wrap(() => Some(atob(authorUserIDRaw)))\n        : OptionalResult.None\n    return {\n        AESKeyEncrypted,\n        encryptedText,\n        iv,\n        // \"_\" is used as placeholder\n        signature: signature === '_' ? undefined : signature,\n        authorPublicKey: authorPublicKey as string | undefined,\n        authorUserID,\n        isPublic: isPublic === '1',\n    }\n}\n\nasync function decodePublicSharedAESKey(\n    iv: Result<Uint8Array, CheckedError<CryptoException>>,\n    encryptedKey: Result<Uint8Array, CheckedError<CryptoException>>,\n): Promise<PayloadParseResult.PublicEncryption['AESKey']> {\n    if (iv.isErr()) return iv\n    if (encryptedKey.isErr()) return encryptedKey\n    const publicSharedKey = await get_v38PublicSharedCryptoKey()\n    if (publicSharedKey.isErr()) return publicSharedKey\n\n    const import_AES_GCM_256 = CheckedError.withErr(importAES, CryptoException.InvalidCryptoKey)\n    const decrypt = CheckedError.withErr(decryptWithAES, CryptoException.InvalidCryptoKey)\n\n    const jwk_in_u8arr = await decrypt(publicSharedKey.value, iv.value, encryptedKey.value)\n    const jwk_in_text = await andThenAsync(jwk_in_u8arr, decodeTextCrypto)\n    const jwk = await andThenAsync(jwk_in_text, JSONParse)\n    const aes = await andThenAsync(jwk, import_AES_GCM_256)\n\n    return aes\n}\n\nasync function decodeECDHPublicKey(compressedPublic: string): Promise<OptionalResult<EC_Key, CryptoException>> {\n    const key = await andThenAsync(decodeUint8ArrayCrypto(compressedPublic), async (val) =>\n        (await Result.wrapAsync(() => decompressK256Point(val))).mapErr(\n            (e) => new CheckedError(CryptoException.InvalidCryptoKey, e),\n        ),\n    )\n\n    if (key.isErr()) return key\n    const { x, y } = key.value\n    const jwk: JsonWebKey = {\n        crv: 'K-256',\n        ext: true,\n        x,\n        y,\n        key_ops: ['deriveKey', 'deriveBits'],\n        kty: 'EC',\n    }\n    const imported = await importEC(jwk, EC_KeyCurve.secp256k1)\n    if (imported.isErr()) return imported\n    return OptionalResult.Some<EC_Key>({\n        algr: EC_KeyCurve.secp256k1,\n        key: imported.value,\n    })\n}\n","/* eslint @masknet/unicode-specific-set: [\"error\", { \"only\": \"code\" }] */\nimport type { PayloadParseResult, Signature } from '../payload/index.js'\nimport { Ok } from 'ts-results-es'\nimport { PayloadException } from '../types/index.js'\nimport { decodeUint8ArrayF, assertIVLengthEq16 } from '../utils/index.js'\nimport type { PayloadParserResult } from './index.js'\nimport { encodeText } from '@masknet/kit'\nimport { CheckedError, OptionalResult } from '@masknet/base'\n\nconst decodeUint8Array = decodeUint8ArrayF(PayloadException.InvalidPayload, PayloadException.DecodeFailed)\n// ? Payload format: (text format)\n// ? Version 40:🎼2/4|ownersAESKeyEncrypted|iv|encryptedText|signature:||\n// ? Older version is lacking of signature, like:\n// ? Version 40:🎼2/4|ownersAESKeyEncrypted|iv|encryptedText:||\nexport async function parse40(payload: string): PayloadParserResult {\n    // #region Parse string\n    const header = '\\u{1F3BC}2/4|'\n    if (!payload.startsWith(header)) return new CheckedError(PayloadException.DecodeFailed, 'Unknown version').toErr()\n    let rest = payload.slice(header.length)\n    // cut the tail\n    rest = rest.slice(0, rest.lastIndexOf(':||'))\n\n    const [ownersAESKeyEncrypted, iv, encryptedText, signature] = rest.split('|')\n    // #endregion\n\n    // #region Normalization\n    const encryption: PayloadParseResult.EndToEndEncryption = {\n        type: 'E2E',\n        ephemeralPublicKey: {},\n        iv: decodeUint8Array(iv).andThen(assertIVLengthEq16),\n        ownersAESKeyEncrypted: decodeUint8Array(ownersAESKeyEncrypted),\n    }\n    const normalized: Readwrite<PayloadParseResult.Payload> = {\n        version: -40,\n        author: OptionalResult.None,\n        authorPublicKey: OptionalResult.None,\n        signature: OptionalResult.None,\n        encryption: Ok(encryption),\n        encrypted: decodeUint8Array(encryptedText),\n    }\n    if (signature && encryption.iv.isOk() && encryption.ownersAESKeyEncrypted.isOk() && normalized.encrypted.isOk()) {\n        const message = encodeText(`4/4|${ownersAESKeyEncrypted}|${iv}|${encryptedText}`)\n        const sig = decodeUint8Array(signature)\n        if (sig.isOk()) {\n            normalized.signature = OptionalResult.Some<Signature>({ signee: message, signature: sig.value })\n        } else {\n            normalized.signature = sig\n        }\n    }\n    return Ok(normalized)\n    // #endregion\n}\n","/* eslint @masknet/unicode-specific-set: [\"error\", { \"only\": \"code\" }] */\nimport { parse40 } from './version-40.js'\nimport { PayloadException } from '../types/index.js'\nimport type { PayloadParserResult } from './index.js'\nimport { CheckedError } from '@masknet/base'\n\n// -39 payload is totally the same as -40.\n// -40 uses unstable JSON stringify in E2E encryption, -39 fixes that.\n// We can reuse the payload parser here.\n// ? Payload format: (text format)\n// ? Version 40:🎼2/4|ownersAESKeyEncrypted|iv|encryptedText|signature:||\n// ? Version 39:🎼3/4|ownersAESKeyEncrypted|iv|encryptedText|signature:||\n\n// ? Older version is lacking of signature, like:\n// ? Version 40:🎼2/4|ownersAESKeyEncrypted|iv|encryptedText:||\n// ? Version 39:🎼3/4|ownersAESKeyEncrypted|iv|encryptedText:||\nexport async function parse39(payload: string): PayloadParserResult {\n    const v_40 = '\\u{1F3BC}2/4'\n    const v_39 = '\\u{1F3BC}3/4'\n    if (!payload.startsWith(v_39)) return new CheckedError(PayloadException.UnknownVersion, null).toErr()\n\n    const result = await parse40(payload.replace(v_39, v_40))\n    return result.map((x) => ({ ...x, version: -39 }))\n}\n","/* eslint @masknet/unicode-specific-set: [\"error\", { \"only\": \"code\" }] */\nimport { encodeText, encodeArrayBuffer } from '@masknet/kit'\nimport { Ok, type Option, Result } from 'ts-results-es'\nimport type { PayloadWellFormed, Signature } from '../index.js'\nimport { CryptoException, PayloadException } from '../types/index.js'\nimport { encryptWithAES, exportCryptoKeyToJWK } from '../utils/index.js'\nimport { get_v38PublicSharedCryptoKey } from './shared.js'\nimport { CheckedError, compressK256Point } from '@masknet/base'\n\nconst enum Index {\n    authorPublicKey = 5,\n    publicShared = 6,\n    authorIdentifier = 7,\n}\n// ? Version 38:🎼4/4|AESKeyEncrypted|iv|encryptedText|signature|authorPublicKey?|publicShared?|authorIdentifier?:||\nexport async function encode38(payload: PayloadWellFormed.Payload) {\n    if (payload.version !== -38) {\n        return new CheckedError(PayloadException.UnknownVersion, null).toErr()\n    }\n\n    const AESKeyEncrypted = await encodeAESKeyEncrypted(payload.encryption)\n    if (AESKeyEncrypted.isErr()) return AESKeyEncrypted\n    const iv: string = encodeArrayBuffer(payload.encryption.iv.slice())\n    const encrypted: string = encodeArrayBuffer(payload.encrypted.slice())\n    const signature: string = encodeSignature(payload.signature)\n\n    const fields: string[] = ['\\u{1F3BC}4/4', AESKeyEncrypted.value, iv, encrypted, signature]\n\n    if (payload.authorPublicKey.isSome()) {\n        const compressed = await compressK256Key(payload.authorPublicKey.value.key)\n        if (compressed.isErr()) {\n            console.error(\n                '[@masknet/encryption] An error happened when compressing a secp256k1 key.',\n                compressed.isErr(),\n            )\n        }\n        fields[Index.authorPublicKey] = compressed.unwrapOr('_')\n    }\n    fields[Index.publicShared] = String(payload.encryption.type === 'public' ? 1 : 0)\n    if (payload.author.isSome()) {\n        const id = payload.author.value.toText().slice('people:'.length)\n        fields[Index.authorIdentifier] = btoa(id)\n    }\n    return Ok(fields.join('|') + ':||')\n}\n\nasync function encodeAESKeyEncrypted(\n    encryption: PayloadWellFormed.PublicEncryption | PayloadWellFormed.EndToEndEncryption,\n) {\n    if (encryption.type === 'E2E') {\n        return Ok(encodeArrayBuffer(encryption.ownersAESKeyEncrypted.slice()))\n    } else {\n        const { AESKey, iv } = encryption\n        const publicSharedKey = await get_v38PublicSharedCryptoKey()\n        if (publicSharedKey.isErr()) return publicSharedKey\n\n        const jwk = await exportCryptoKeyToJWK(AESKey)\n        if (jwk.isErr()) return jwk.mapErr((e) => new CheckedError(CryptoException.InvalidCryptoKey, e))\n\n        // There is no reason that these two steps will fail.\n        // Use non-CE version so they're fatal error.\n        // ? The original implementation uses JSON.stringify\n        // ? and JsonWebKey key order returned by WebCrypto by browsers and NodeJS are different.\n        // ? We use the Chrome order to keep the result stable.\n        const text = `{\"alg\":\"A256GCM\",\"ext\":true,\"k\":\"${jwk.value.k}\",\"key_ops\":[\"decrypt\",\"encrypt\"],\"kty\":\"oct\"}`\n        const ab = encodeText(text)\n\n        const encryptedKey = await encryptWithAES(publicSharedKey.value, iv, ab)\n        if (encryptedKey.isErr()) return encryptedKey.mapErr((e) => new CheckedError(CryptoException.EncryptFailed, e))\n        return Ok(encodeArrayBuffer(encryptedKey.value.slice()))\n    }\n}\n\nfunction encodeSignature(sig: Option<Signature>) {\n    if (sig.isNone()) return '_'\n    // TODO: should we validate the signee to make sure that it produce a backward compatible signature of the content?\n    return encodeArrayBuffer(sig.value.signature.slice())\n}\n\nasync function compressK256Key(key: CryptoKey) {\n    const jwk = await exportCryptoKeyToJWK(key)\n    if (jwk.isErr()) return jwk.mapErr((e) => new CheckedError(CryptoException.InvalidCryptoKey, e))\n    const arr = (await Result.wrapAsync(() => compressK256Point(jwk.value.x!, jwk.value.y!))).mapErr(\n        (e) => new CheckedError(CryptoException.InvalidCryptoKey, e),\n    )\n    if (arr.isErr()) return arr\n    return Ok(encodeArrayBuffer(arr.value.slice()))\n}\n","import { compressK256KeyRaw } from '@masknet/base'\nimport { Ok } from 'ts-results-es'\nimport type { PayloadWellFormed } from '../index.js'\nimport { EC_KeyCurve } from '../payload/types.js'\nimport { encodeMessagePack, exportCryptoKeyToRaw } from '../utils/index.js'\n\nconst enum Index {\n    version = 0,\n    authorNetwork = 1,\n    authorID = 2,\n    authorPublicKeyAlgorithm = 3,\n    authorPublicKey = 4,\n    encryption = 5,\n    data = 6,\n}\nexport async function encode37(payload: PayloadWellFormed.Payload) {\n    type KeyMaterials = Partial<Record<EC_KeyCurve, Uint8Array>>\n    type AcceptableArray = Array<number | string | Uint8Array | null | Array<KeyMaterials | number | Uint8Array>>\n\n    const payload_arr: AcceptableArray = [0]\n\n    if (payload.author.isSome()) {\n        const { network, userId } = payload.author.value\n        payload_arr[Index.authorNetwork] = network\n        payload_arr[Index.authorID] = userId\n    }\n    if (payload.authorPublicKey.isSome()) {\n        const { algr, key } = payload.authorPublicKey.value\n        payload_arr[Index.authorPublicKeyAlgorithm] = algr\n        const raw = await exportCryptoKeyToRaw(key)\n        if (raw.isOk()) {\n            if (algr === EC_KeyCurve.secp256k1) payload_arr[Index.authorPublicKey] = await compressK256KeyRaw(raw.value)\n            else payload_arr[Index.authorPublicKey] = raw.value\n        } else {\n            payload_arr[Index.authorPublicKey] = null\n            warn(key, raw.isErr())\n        }\n    }\n    if (payload.encryption.type === 'E2E') {\n        const { ephemeralPublicKey, iv, ownersAESKeyEncrypted } = payload.encryption\n        const keyMaterials: Partial<Record<EC_KeyCurve, Uint8Array>> = {}\n        const subArr: Array<KeyMaterials | number | Uint8Array> = [1, ownersAESKeyEncrypted, iv, keyMaterials]\n        for (const [alg, key] of ephemeralPublicKey.entries()) {\n            const k = await exportCryptoKeyToRaw(key)\n            if (k.isErr()) warn(key, k.isErr())\n            else {\n                if (alg === EC_KeyCurve.secp256k1) keyMaterials[alg] = await compressK256KeyRaw(k.value)\n                else keyMaterials[alg] = k.value\n            }\n        }\n        payload_arr[Index.encryption] = subArr\n    } else {\n        const { AESKey, iv } = payload.encryption\n        const subArr = [0, new Uint8Array(await crypto.subtle.exportKey('raw', AESKey)), iv]\n        payload_arr[Index.encryption] = subArr\n    }\n    payload_arr[Index.data] = payload.encrypted\n    return Ok(encodeMessagePack(payload_arr))\n}\nfunction warn(key: CryptoKey, err: any) {\n    console.warn('[@masknet/encryption] Failed to export public key. key is', key, 'and the error is', err)\n}\n","import { Ok, type Result } from 'ts-results-es'\nimport type { PayloadWellFormed } from '../index.js'\nimport {\n    encode37,\n    encode38,\n    parse37,\n    parse38,\n    parse39,\n    parse40,\n    type PayloadParserResult,\n} from '../payload_internal/index.js'\nimport { encodeSignatureContainer } from '../payload_internal/SignatureContainer.js'\nimport { PayloadException, type CryptoException } from '../types/index.js'\nimport { CheckedError, OptionalResult } from '@masknet/base'\nexport * from './types.js'\n\nexport async function parsePayload(payload: unknown): PayloadParserResult {\n    if (payload instanceof Uint8Array) {\n        return parse37(payload.slice())\n    }\n    if (typeof payload === 'string') {\n        if (payload.startsWith('\\u{1F3BC}4/4')) return parse38(payload)\n        if (payload.startsWith('\\u{1F3BC}3/4')) return parse39(payload)\n        if (payload.startsWith('\\u{1F3BC}2/4')) return parse40(payload)\n    }\n    return new CheckedError(PayloadException.UnknownVersion, null).toErr()\n}\n\nasync function encodePayloadWithoutSignatureContainer(\n    payload: PayloadWellFormed.Payload,\n): Promise<Result<string | Uint8Array, CheckedError<CryptoException | PayloadException>>> {\n    if (payload.version === -38) return encode38(payload)\n    else if (payload.version === -37) return encode37(payload)\n\n    const decodeOnly = payload.version === -39 || payload.version === -40 || payload.version === -41\n    const errorMessage = decodeOnly ? `version ${payload.version} only supports decode.` : null\n    return new CheckedError(PayloadException.UnknownVersion, errorMessage).toErr()\n}\n\nexport async function encodePayload<E>(\n    payload: PayloadWellFormed.Payload,\n    sign: (payload: PayloadWellFormed.Payload, payloadToBeSigned: Uint8Array) => Promise<OptionalResult<Uint8Array, E>>,\n): Promise<Result<string | Uint8Array, CheckedError<CryptoException | PayloadException | E>>> {\n    if (payload.version === -37) {\n        const bin = await encodePayloadWithoutSignatureContainer(payload)\n        if (bin.isErr()) return bin\n\n        if (typeof bin.value === 'string') throw new TypeError('This should never be string')\n        const sig = await sign(payload, bin.value)\n        if (sig.isErr()) return sig\n        return Ok(encodeSignatureContainer(bin.value, sig.value.unwrapOr(null)))\n    }\n    const val = await encodePayloadWithoutSignatureContainer(payload)\n    if (val.isOk() && typeof val.value !== 'string')\n        throw new TypeError('This should always be a string for version < -37')\n    return val\n}\nencodePayload.NoSign = ((payload: PayloadWellFormed.Payload) =>\n    encodePayload(payload, async () => OptionalResult.None)) as typeof encodePayloadWithoutSignatureContainer\n","// This file contains normalized Payload.\n// Internal payload should not be exported\nimport type {\n    ProfileIdentifier,\n    CheckedError,\n    OptionalResult,\n    EC_CryptoKey,\n    AESCryptoKey,\n    EC_Public_CryptoKey,\n} from '@masknet/base'\nimport type { Result, Option } from 'ts-results-es'\nimport type { CryptoException, PayloadException } from '../types/index.js'\n\n/** A parse result, that try to preserve as many info as possible. */\nexport declare namespace PayloadParseResult {\n    export type OptionalField<\n        T,\n        E extends CryptoException | PayloadException = CryptoException | PayloadException,\n    > = OptionalResult<T, E>\n    export type RequiredField<\n        T,\n        E extends CryptoException | PayloadException = CryptoException | PayloadException,\n    > = Result<T, CheckedError<E>>\n    export interface Payload {\n        readonly version: SupportedPayloadVersions\n        readonly signature: OptionalField<Signature>\n        /**\n         * The claimed author of this payload.\n         */\n        readonly author: OptionalField<ProfileIdentifier, PayloadException>\n        /**\n         * The claimed public key of author.\n         */\n        readonly authorPublicKey: OptionalField<EC_Key, CryptoException>\n        /** The encryption method this payload used. */\n        readonly encryption: RequiredField<PublicEncryption | EndToEndEncryption>\n        /** The encrypted content. */\n        readonly encrypted: RequiredField<Uint8Array>\n    }\n    /**\n     * A publicly encrypted payload.\n     */\n    export interface PublicEncryption {\n        readonly type: 'public'\n        readonly AESKey: RequiredField<AESCryptoKey, CryptoException>\n        readonly iv: RequiredField<Uint8Array>\n    }\n    /**\n     * An E2E encrypted payload.\n     */\n    export interface EndToEndEncryption {\n        readonly type: 'E2E'\n        readonly ownersAESKeyEncrypted: RequiredField<Uint8Array>\n        readonly iv: RequiredField<Uint8Array>\n        readonly ephemeralPublicKey: Record<string, RequiredField<EC_Key, CryptoException>>\n    }\n}\n/** Well formed payload that can be encoded into the latest version */\nexport declare namespace PayloadWellFormed {\n    export interface Payload {\n        readonly version: SupportedPayloadVersions\n        readonly signature: Option<Signature>\n        /**\n         * The claimed author of this payload.\n         */\n        readonly author: Option<ProfileIdentifier>\n        /**\n         * The claimed public key of author.\n         */\n        readonly authorPublicKey: Option<EC_Key<EC_Public_CryptoKey>>\n        /** The encryption method this payload used. */\n        readonly encryption: PublicEncryption | EndToEndEncryption\n        /** The encrypted content. */\n        readonly encrypted: Uint8Array\n    }\n    /**\n     * A publicly encrypted payload.\n     */\n    export interface PublicEncryption {\n        readonly type: 'public'\n        /** The key used to encrypt the payload. It should be AES-256-GCM */\n        readonly AESKey: AESCryptoKey\n        readonly iv: Uint8Array\n    }\n    /**\n     * An E2E encrypted payload.\n     */\n    export interface EndToEndEncryption {\n        readonly type: 'E2E'\n        readonly ownersAESKeyEncrypted: Uint8Array\n        readonly iv: Uint8Array\n        readonly ephemeralPublicKey: Map<EC_KeyCurve, CryptoKey>\n    }\n}\nexport interface Signature {\n    readonly signee: Uint8Array\n    readonly signature: Uint8Array\n}\nexport interface EC_Key<K extends EC_CryptoKey = EC_CryptoKey> {\n    readonly algr: EC_KeyCurve\n    readonly key: K\n}\nexport enum EC_KeyCurve {\n    // ed25519 = 0, Ed25519 is not supported by WebCrypto. Don't have a standard name, but maybe \"Ed25519\"\n    // https://github.com/tQsW/webcrypto-curve25519/blob/master/explainer.md\n    secp256p1 = 1, // P-256\n    secp256k1 = 2, // K-256\n}\nexport enum EncryptPayloadNetwork {\n    Unknown = -1,\n    Facebook = 0,\n    Twitter = 1,\n    Instagram = 2,\n    Minds = 3,\n}\n/**\n * Version starts from -42 but -42 and -41 are dropped.\n *\n * The latest version is -37.\n */\nexport type SupportedPayloadVersions = -37 | -38 | -39 | -40\nconst map: Record<EncryptPayloadNetwork, string> = {\n    [EncryptPayloadNetwork.Unknown]: 'localhost',\n    [EncryptPayloadNetwork.Facebook]: 'facebook.com',\n    [EncryptPayloadNetwork.Minds]: 'minds.com',\n    [EncryptPayloadNetwork.Twitter]: 'twitter.com',\n    [EncryptPayloadNetwork.Instagram]: 'instagram.com',\n}\nexport function encryptPayloadNetworkToDomain(x: EncryptPayloadNetwork) {\n    return map[x]\n}\n","import { CheckedError } from '@masknet/base'\nimport { Ok } from 'ts-results-es'\n\nexport enum CryptoException {\n    InvalidCryptoKey = '[@masknet/encryption] Encountered an invalid CryptoKey.',\n    EncryptFailed = '[@masknet/encryption] Failed to encrypt.',\n    DecryptFailed = '[@masknet/encryption] Failed to decrypt.',\n    UnsupportedAlgorithm = '[@masknet/encryption] Unsupported crypto algorithm.',\n    InvalidIVLength = '[@masknet/encryption] IV length must be 16.',\n}\nexport enum PayloadException {\n    EncodeFailed = '[@masknet/encryption] Failed to encode the payload.',\n    DecodeFailed = '[@masknet/encryption] Failed to decode the payload.',\n    InvalidPayload = '[@masknet/encryption] Payload decoded, but it violates the schema.',\n    UnknownEnumMember = '[@masknet/encryption] Payload includes an unknown enum member.',\n    UnknownVersion = '[@masknet/encryption] Unsupported payload version.',\n}\n\nexport function assertUint8Array<T>(x: unknown, name: string, kinds: T) {\n    if (x instanceof Uint8Array) return Ok(x)\n    if (x instanceof ArrayBuffer) return Ok(new Uint8Array(x))\n    return new CheckedError(kinds, `${name} is not a Binary`).toErr()\n}\nexport function assertArray<T>(name: string, kinds: T) {\n    return (x: unknown) => {\n        if (Array.isArray(x)) return Ok(x)\n        return new CheckedError(kinds, `${name} is no an Array`).toErr()\n    }\n}\n","import { type AESCryptoKey, CheckedError, type EC_CryptoKey, type EC_Public_CryptoKey } from '@masknet/base'\nimport { Result, Ok } from 'ts-results-es'\nimport { EC_KeyCurve } from '../payload/index.js'\nimport { CryptoException } from '../types/index.js'\nexport function importAES(key: JsonWebKey | Uint8Array): Promise<Result<AESCryptoKey, unknown>> {\n    return Result.wrapAsync(() => {\n        if (key instanceof Uint8Array) {\n            return crypto.subtle.importKey('raw', key, { name: 'AES-GCM', length: 256 }, true, [\n                'encrypt',\n                'decrypt',\n            ]) as any\n        }\n        return crypto.subtle.importKey('jwk', key, { name: 'AES-GCM', length: 256 }, true, [\n            'encrypt',\n            'decrypt',\n        ]) as any\n    })\n}\n\nexport function exportCryptoKeyToJWK(key: CryptoKey) {\n    return Result.wrapAsync(() => crypto.subtle.exportKey('jwk', key))\n}\nexport function exportCryptoKeyToRaw(key: CryptoKey) {\n    return Result.wrapAsync(() => crypto.subtle.exportKey('raw', key).then((x) => new Uint8Array(x)))\n}\n\nexport function importEC_Key(key: Uint8Array, kind: EC_KeyCurve): Promise<Result<EC_Public_CryptoKey, unknown>>\nexport function importEC_Key(key: JsonWebKey | Uint8Array, kind: EC_KeyCurve): Promise<Result<EC_CryptoKey, unknown>>\nexport function importEC_Key(key: JsonWebKey | Uint8Array, kind: EC_KeyCurve): Promise<Result<EC_CryptoKey, unknown>> {\n    const DeriveKeyUsage: KeyUsage[] = ['deriveKey', 'deriveBits']\n    const ImportParamsMap = {\n        [EC_KeyCurve.secp256k1]: { name: 'ECDH', namedCurve: 'K-256' } as EcKeyImportParams,\n        [EC_KeyCurve.secp256p1]: { name: 'ECDH', namedCurve: 'P-256' } as EcKeyImportParams,\n    } as const\n    return Result.wrapAsync(async () => {\n        const args = [ImportParamsMap[kind], true, DeriveKeyUsage] as const\n        if (key instanceof Uint8Array) {\n            return crypto.subtle.importKey('raw', key, ...args) as Promise<EC_CryptoKey>\n        } else {\n            return crypto.subtle.importKey('jwk', key, ...args) as Promise<EC_CryptoKey>\n        }\n    })\n}\n\nexport function encryptWithAES(key: CryptoKey, iv: Uint8Array, message: Uint8Array) {\n    return Result.wrapAsync(async () => {\n        const x = await crypto.subtle.encrypt({ name: 'AES-GCM', iv }, key, message)\n        return new Uint8Array(x)\n    })\n}\nexport function decryptWithAES(key: CryptoKey, iv: Uint8Array, message: Uint8Array) {\n    return Result.wrapAsync(async () => {\n        return new Uint8Array(await crypto.subtle.decrypt({ name: 'AES-GCM', iv }, key, message))\n    })\n}\nexport function assertIVLengthEq16(arrayBuffer: Uint8Array) {\n    if (arrayBuffer.byteLength === 16) return Ok(arrayBuffer)\n    return new CheckedError(CryptoException.InvalidIVLength, null).toErr()\n}\n\nexport function getEcKeyCurve(key: EC_CryptoKey) {\n    const algr = key.algorithm as EcKeyAlgorithm\n    if (algr.namedCurve === 'K-256') return EC_KeyCurve.secp256k1\n    if (algr.namedCurve === 'P-256') return EC_KeyCurve.secp256p1\n    throw new Error('Unknown curve')\n}\n","import { flags as defaultFlags } from './flags/index.js'\nimport { RemoteFlags } from './libs/RemoteFlags.js'\n\nconst flags = new RemoteFlags('https://mask-flags.r2d2.to/', defaultFlags)\n\n// fetch each time starts the app, updates will be enabled\nflags.fetchAndActive()\n\nexport const Flags = flags.accessor\nexport { env, type BuildInfoFile } from './flags/buildInfo.js'\n","import { BrowserProvider } from './Browser.js'\nimport { Coin98Provider, Coin98ProviderType } from './Coin98.js'\nimport { CoinbaseProvider } from './Coinbase.js'\nimport { OKXProvider } from './OKX.js'\nimport { PhantomProvider } from './Phantom.js'\nimport { SolflareProvider } from './Solflare.js'\nimport { OperaProvider } from './Opera.js'\nimport { CloverProvider } from './Clover.js'\nimport { MetaMaskProvider } from './MetaMask.js'\nimport { sendEvent, rejectPromise, resolvePromise } from './utils.js'\nimport { CustomEventId, decodeEvent } from '../shared/index.js'\n\nexport type { EthereumProvider, InternalEvents } from '../shared/index.js'\nexport { BaseProvider } from './Base.js'\nexport { BaseInjectedProvider as InjectedProvider } from './BaseInjected.js'\n\nexport const injectedCoin98EVMProvider = new Coin98Provider(Coin98ProviderType.EVM)\nexport const injectedCoin98SolanaProvider = new Coin98Provider(Coin98ProviderType.Solana)\nexport const injectedPhantomProvider = new PhantomProvider()\nexport const injectedSolflareProvider = new SolflareProvider()\nexport const injectedBrowserProvider = new BrowserProvider()\nexport const injectedMetaMaskProvider = new MetaMaskProvider()\nexport const injectedCoinbaseProvider = new CoinbaseProvider()\nexport const injectedOKXProvider = new OKXProvider()\nexport const injectedOperaProvider = new OperaProvider()\nexport const injectedCloverProvider = new CloverProvider()\n\n// Please keep this list update to date\nconst Providers = [\n    injectedCoinbaseProvider,\n    injectedOKXProvider,\n    injectedOperaProvider,\n    injectedCloverProvider,\n    injectedBrowserProvider,\n    injectedCoin98EVMProvider,\n    injectedCoin98SolanaProvider,\n    injectedPhantomProvider,\n]\n\nexport function pasteText(text: string) {\n    sendEvent('paste', text)\n}\nexport function pasteImage(image: Uint8Array) {\n    sendEvent('pasteImage', Array.from(image))\n}\nexport function pasteInstagram(image: Uint8Array) {\n    sendEvent('instagramUpload', Array.from(image))\n}\nexport function inputText(text: string) {\n    sendEvent('input', text)\n}\nexport function hookInputUploadOnce(\n    format: string,\n    fileName: string,\n    image: Uint8Array,\n    triggerOnActiveElementNow = false,\n) {\n    sendEvent('hookInputUploadOnce', format, fileName, Array.from(image), triggerOnActiveElementNow)\n}\n\nif (typeof location === 'object' && location.protocol.includes('extension')) {\n    console.warn(\n        'This package is not expected to be imported in background script or the extension script. Please check your code.',\n    )\n}\n\nglobalThis.document?.addEventListener?.(CustomEventId, (e) => {\n    const r = decodeEvent((e as CustomEvent).detail)\n    if (r[1].length < 1) return\n\n    switch (r[0]) {\n        case 'resolvePromise':\n            return resolvePromise(...r[1])\n        case 'rejectPromise':\n            return rejectPromise(...r[1])\n\n        // web3\n        case 'web3BridgeEmitEvent': {\n            const [pathname, eventName, data] = r[1]\n            Providers.filter((x) => x.pathname === pathname).forEach((x) => x?.emit(eventName, data))\n            break\n        }\n        case 'web3BridgeBindEvent':\n        case 'web3BridgeSendRequest':\n        case 'web3BridgeExecute':\n        case 'web3UntilBridgeOnline':\n        case 'web3BridgePrimitiveAccess':\n            break\n\n        // misc\n        case 'input':\n        case 'paste':\n        case 'pasteImage':\n        case 'instagramUpload':\n        case 'hookInputUploadOnce':\n            break\n        default:\n            const neverEvent: never = r[0]\n            console.log('[@masknet/injected-script]', neverEvent, 'not handled')\n    }\n})\n","import {\n    queryAvatarDB,\n    isAvatarOutdatedDB,\n    storeAvatarDB,\n    type IdentifierWithAvatar,\n    createAvatarDBAccess,\n    queryAvatarMetaDataDB,\n} from './db.js'\nimport { blobToDataURL, memoizePromise } from '@masknet/kit'\nimport { createTransaction } from '../utils/openDB.js'\nimport { memoize } from 'lodash-es'\nimport type { PersonaIdentifier } from '@masknet/shared-base'\n\nconst impl = memoizePromise(\n    memoize,\n    async function (identifiers: readonly IdentifierWithAvatar[]): Promise<Map<IdentifierWithAvatar, string>> {\n        const promises: Array<Promise<unknown>> = []\n\n        const map = new Map<IdentifierWithAvatar, string>()\n        const t = createTransaction(await createAvatarDBAccess(), 'readonly')('avatars')\n        for (const id of identifiers) {\n            // Must not await here. Because we insert non-idb async operation (blobToDataURL).\n            promises.push(\n                queryAvatarDB(t, id)\n                    .then((avatar) => {\n                        if (!avatar) return\n                        return typeof avatar === 'string'\n                            ? avatar\n                            : blobToDataURL(new Blob([avatar], { type: 'image/png' }))\n                    })\n                    .then((url) => url && map.set(id, url)),\n            )\n        }\n\n        await Promise.allSettled(promises)\n        return map\n    },\n    (id: IdentifierWithAvatar[]) => id.flatMap((x) => x.toText()).join(';'),\n)\n\nconst queryAvatarLastUpdateTimeImpl = memoizePromise(\n    memoize,\n    async (identifier: IdentifierWithAvatar) => {\n        const t = createTransaction(await createAvatarDBAccess(), 'readonly')('metadata')\n        const metadata = await queryAvatarMetaDataDB(t, identifier)\n        return metadata?.lastUpdateTime\n    },\n    (x) => x,\n)\n\nexport const queryAvatarsDataURL: (\n    identifiers: readonly IdentifierWithAvatar[],\n) => Promise<Map<IdentifierWithAvatar, string>> = impl\n\nexport const queryAvatarLastUpdateTime: (identifier: PersonaIdentifier) => Promise<Date | undefined> =\n    queryAvatarLastUpdateTimeImpl\n\n/**\n * Store an avatar with a url for an identifier.\n * @param identifier - This avatar belongs to.\n * @param avatar - Avatar to store. If it is a string, will try to fetch it.\n */\n\nexport async function storeAvatar(identifier: IdentifierWithAvatar, avatar: ArrayBuffer | string): Promise<void> {\n    try {\n        if (typeof avatar === 'string') {\n            if (avatar.startsWith('https') === false) return\n            const isOutdated = await isAvatarOutdatedDB(\n                createTransaction(await createAvatarDBAccess(), 'readonly')('metadata'),\n                identifier,\n                'lastUpdateTime',\n            )\n            if (isOutdated) {\n                // ! must fetch before create the transaction\n                const buffer = await fetch(avatar).then(\n                    (r) => r.arrayBuffer(),\n                    () => avatar,\n                )\n                {\n                    const t = createTransaction(await createAvatarDBAccess(), 'readwrite')('avatars', 'metadata')\n                    await storeAvatarDB(t, identifier, buffer)\n                }\n            }\n            // else do nothing\n        } else {\n            const t = createTransaction(await createAvatarDBAccess(), 'readwrite')('avatars', 'metadata')\n            await storeAvatarDB(t, identifier, avatar)\n        }\n    } catch (error) {\n        console.error('[AvatarDB] Store avatar failed', error)\n    } finally {\n        queryAvatarLastUpdateTimeImpl.cache.clear()\n        impl.cache.clear()\n    }\n}\n","import { openDB, type DBSchema } from 'idb/with-async-ittr'\nimport { ECKeyIdentifier, Identifier, type PersonaIdentifier, ProfileIdentifier } from '@masknet/shared-base'\nimport { createDBAccess, createTransaction, type IDBPSafeTransaction } from '../utils/openDB.js'\n\nconst pendingUpdate = new Map<IdentifierWithAvatar, Partial<AvatarMetadataRecord>>()\nlet pendingUpdateTimer: ReturnType<typeof setTimeout> | null\n\n// #region Schema\nexport type IdentifierWithAvatar = ProfileIdentifier | PersonaIdentifier\ntype AvatarRecord = ArrayBuffer | string\ninterface AvatarMetadataRecord {\n    identifier: string\n    lastUpdateTime: Date\n    lastAccessTime: Date\n}\ninterface AvatarDBSchema extends DBSchema {\n    /** Use out-of-line keys */\n    avatars: {\n        value: AvatarRecord\n        key: string\n    }\n    /** Key is value.identifier */\n    metadata: {\n        value: AvatarMetadataRecord\n        key: string\n    }\n}\n// #endregion\nexport const createAvatarDBAccess = createDBAccess(() => {\n    return openDB<AvatarDBSchema>('maskbook-avatar-cache', 1, {\n        upgrade(db, oldVersion, newVersion, transaction) {\n            // Out line keys\n            db.createObjectStore('avatars')\n            db.createObjectStore('metadata', { keyPath: 'identifier' })\n        },\n    })\n})\n/**\n * Store avatar into database\n */\nexport async function storeAvatarDB(\n    t: IDBPSafeTransaction<AvatarDBSchema, ['metadata', 'avatars'], 'readwrite'>,\n    id: IdentifierWithAvatar,\n    avatar: ArrayBuffer | string,\n): Promise<void> {\n    const meta: AvatarMetadataRecord = {\n        identifier: id.toText(),\n        lastUpdateTime: new Date(),\n        lastAccessTime: new Date(),\n    }\n    await t.objectStore('avatars').put(avatar, id.toText())\n    await t.objectStore('metadata').put(meta)\n}\n/**\n * Read avatar out\n */\nexport async function queryAvatarDB(\n    t: IDBPSafeTransaction<AvatarDBSchema, ['avatars']>,\n    id: IdentifierWithAvatar,\n): Promise<AvatarRecord | null> {\n    const result = await t.objectStore('avatars').get(id.toText())\n    if (result) scheduleAvatarMetaUpdate(id, { lastAccessTime: new Date() })\n    return result || null\n}\n\nexport async function queryAvatarMetaDataDB(\n    t: IDBPSafeTransaction<AvatarDBSchema, ['metadata']>,\n    id: IdentifierWithAvatar,\n) {\n    return t.objectStore('metadata').get(id.toText())\n}\nfunction scheduleAvatarMetaUpdate(id: IdentifierWithAvatar, meta: Partial<AvatarMetadataRecord>) {\n    pendingUpdate.set(id, meta)\n\n    if (pendingUpdateTimer) return\n    const _1_minute = 60 * 1000\n    pendingUpdateTimer = setTimeout(async () => {\n        try {\n            const t = createTransaction(await createAvatarDBAccess(), 'readwrite')('metadata')\n            for (const [id, meta] of pendingUpdate) {\n                const old = await t.objectStore('metadata').get(id.toText())\n                await t.objectStore('metadata').put({ ...old, ...meta } as AvatarMetadataRecord)\n            }\n        } finally {\n            pendingUpdateTimer = null\n            pendingUpdate.clear()\n        }\n    }, _1_minute)\n}\n\n/**\n * Find avatar lastUpdateTime or lastAccessTime out-of-date\n * @param attribute - Which attribute want to query\n * @param deadline - Select all identifiers before a date\n * defaults to 14 days for lastAccessTime\n * defaults to 7 days for lastUpdateTime\n * @internal\n */\nexport async function queryAvatarOutdatedDB(\n    t: IDBPSafeTransaction<AvatarDBSchema, ['metadata']>,\n    attribute: 'lastUpdateTime' | 'lastAccessTime',\n    deadline: Date = new Date(Date.now() - 1000 * 60 * 60 * 24 * (attribute === 'lastAccessTime' ? 14 : 7)),\n) {\n    const outdated: IdentifierWithAvatar[] = []\n    for await (const { value } of t.objectStore('metadata')) {\n        if (deadline > value[attribute]) {\n            const id = Identifier.from(value.identifier)\n            if (id.isNone()) continue\n            if (id.value instanceof ProfileIdentifier || id.value instanceof ECKeyIdentifier) outdated.push(id.value)\n        }\n    }\n    return outdated\n}\n/**\n * Query if the avatar is outdated\n * @param attribute - Which attribute want to query\n * @param deadline - Select all identifiers before a date\n * defaults to 30 days for lastAccessTime\n * defaults to 7 days for lastUpdateTime\n * @internal\n */\nexport async function isAvatarOutdatedDB(\n    t: IDBPSafeTransaction<AvatarDBSchema, ['metadata']>,\n    identifier: IdentifierWithAvatar,\n    attribute: 'lastUpdateTime' | 'lastAccessTime',\n    deadline: Date = new Date(Date.now() - 1000 * 60 * 60 * 24 * (attribute === 'lastAccessTime' ? 30 : 7)),\n): Promise<boolean> {\n    const meta = await t.objectStore('metadata').get(identifier.toText())\n    if (!meta) return true\n    if (deadline > meta[attribute]) return true\n    return false\n}\n/**\n * Batch delete avatars\n * @internal\n */\nexport async function deleteAvatarsDB(\n    t: IDBPSafeTransaction<AvatarDBSchema, ['metadata', 'avatars'], 'readwrite'>,\n    ids: IdentifierWithAvatar[],\n): Promise<void> {\n    for (const id of ids) {\n        t.objectStore('avatars').delete(id.toText())\n        t.objectStore('metadata').delete(id.toText())\n    }\n}\n","import { safeUnreachable } from '@masknet/kit'\nimport {\n    type AESCryptoKey,\n    type AESJsonWebKey,\n    ECKeyIdentifier,\n    type EC_Private_JsonWebKey,\n    type EC_Public_CryptoKey,\n    type EC_Public_JsonWebKey,\n    type PersonaIdentifier,\n    ProfileIdentifier,\n} from '@masknet/shared-base'\nimport {\n    attachProfileDB,\n    consistentPersonaDBWriteAccess,\n    createOrUpdatePersonaDB,\n    createPersonaDB,\n    createPersonaDBReadonlyAccess,\n    type FullPersonaDBTransaction,\n    type LinkedProfileDetails,\n    type PersonaRecord,\n    queryPersonaByProfileDB,\n    queryPersonasWithPrivateKey,\n    queryProfileDB,\n} from './db.js'\nimport { noop } from 'lodash-es'\n\n// #region Local key helpers\n/**\n * If has local key of a profile in the database.\n * @param id Profile Identifier\n */\nexport async function hasLocalKeyOf(id: ProfileIdentifier) {\n    let has = false\n    await createPersonaDBReadonlyAccess(async (tx) => {\n        const result = await getLocalKeyOf(id, tx)\n        has = !!result\n    })\n    return has\n}\n\n/**\n * Try to decrypt data using local key.\n *\n * @param authorHint Author of the local key\n * @param data Data to be decrypted\n * @param iv IV\n */\nexport async function decryptByLocalKey(\n    authorHint: ProfileIdentifier | null,\n    data: Uint8Array,\n    iv: Uint8Array,\n): Promise<ArrayBuffer> {\n    const candidateKeys: AESJsonWebKey[] = []\n\n    if (authorHint) {\n        await createPersonaDBReadonlyAccess(async (tx) => {\n            const key = await getLocalKeyOf(authorHint, tx)\n            key && candidateKeys.push(key)\n        })\n        // TODO: We may push every local key we owned to the candidate list so we can also decrypt when authorHint is null, but that might be a performance pitfall when localKey field is not indexed.\n    }\n\n    let check = noop\n    return Promise.any(\n        candidateKeys.map(async (key): Promise<ArrayBuffer> => {\n            const k = await crypto.subtle.importKey('jwk', key, { name: 'AES-GCM', length: 256 }, false, ['decrypt'])\n            check()\n\n            const result = await crypto.subtle.decrypt({ iv, name: 'AES-GCM' }, k, data)\n            check = abort\n            return result\n        }),\n    )\n}\n\nexport async function encryptByLocalKey(who: ProfileIdentifier, content: Uint8Array, iv: Uint8Array) {\n    let key: AESCryptoKey | undefined\n    await createPersonaDBReadonlyAccess(async (tx) => {\n        const jwk = await getLocalKeyOf(who, tx)\n        if (!jwk) return\n        const k = await crypto.subtle.importKey('jwk', jwk, { name: 'AES-GCM', length: 256 }, false, ['encrypt'])\n        key = k as AESCryptoKey\n    })\n    if (!key) throw new Error('No local key found')\n    const result = await crypto.subtle.encrypt({ iv, name: 'AES-GCM' }, key, content)\n    return result as Uint8Array\n}\n\nasync function getLocalKeyOf(id: ProfileIdentifier, tx: FullPersonaDBTransaction<'readonly'>) {\n    const profile = await queryProfileDB(id, tx)\n    if (!profile) return\n    if (profile.localKey) return profile.localKey\n    if (!profile.linkedPersona) return\n\n    const persona = await queryPersonaByProfileDB(id, tx)\n    return persona?.localKey\n}\n// #endregion\n\n// #region ECDH\nexport async function deriveAESByECDH(pub: EC_Public_CryptoKey, of?: ProfileIdentifier | PersonaIdentifier) {\n    // Note: the correct type should be EcKeyAlgorithm but it is missing in worker dts\n    const curve = (pub.algorithm as EcKeyImportParams).namedCurve || ''\n    const sameCurvePrivateKeys = new Map<ECKeyIdentifier, EC_Private_JsonWebKey>()\n\n    await createPersonaDBReadonlyAccess(async (tx) => {\n        const personas = await queryPersonasWithPrivateKey(tx)\n        for (const persona of personas) {\n            if (!persona.privateKey) continue\n            if (persona.privateKey.crv !== curve) continue\n            if (of) {\n                if (of instanceof ProfileIdentifier) {\n                    if (!persona.linkedProfiles.has(of)) continue\n                } else if (of instanceof ECKeyIdentifier) {\n                    if (persona.identifier !== of) continue\n                } else safeUnreachable(of)\n            }\n            sameCurvePrivateKeys.set(persona.identifier, persona.privateKey)\n        }\n    })\n\n    const deriveResult = new Map<ECKeyIdentifier, AESCryptoKey>()\n    const result = await Promise.allSettled(\n        [...sameCurvePrivateKeys].map(async ([id, key]) => {\n            const privateKey = await crypto.subtle.importKey(\n                'jwk',\n                key,\n                { name: 'ECDH', namedCurve: key.crv! },\n                false,\n                ['deriveKey'],\n            )\n            const derived = await crypto.subtle.deriveKey(\n                { name: 'ECDH', public: pub },\n                privateKey,\n                { name: 'AES-GCM', length: 256 },\n                true,\n                ['encrypt', 'decrypt'],\n            )\n            deriveResult.set(id, derived as AESCryptoKey)\n        }),\n    )\n    const failed = result.filter((x): x is PromiseRejectedResult => x.status === 'rejected')\n    if (failed.length) {\n        console.warn('Failed to ECDH', ...failed.map((x) => x.reason))\n    }\n    return deriveResult\n}\n// #endregion\n\n// #region normal functions\nexport async function createPersonaByJsonWebKey(options: {\n    publicKey: EC_Public_JsonWebKey\n    privateKey: EC_Private_JsonWebKey\n    localKey?: AESJsonWebKey\n    nickname?: string\n    mnemonic?: PersonaRecord['mnemonic']\n    uninitialized?: boolean\n}): Promise<PersonaIdentifier> {\n    const identifier = (await ECKeyIdentifier.fromJsonWebKey(options.publicKey)).unwrap()\n    const record: PersonaRecord = {\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        identifier,\n        linkedProfiles: new Map(),\n        publicKey: options.publicKey,\n        privateKey: options.privateKey,\n        nickname: options.nickname,\n        mnemonic: options.mnemonic,\n        localKey: options.localKey,\n        hasLogout: false,\n        uninitialized: options.uninitialized,\n    }\n    await consistentPersonaDBWriteAccess((t) => createPersonaDB(record, t))\n    return identifier\n}\n\nexport async function createProfileWithPersona(\n    profileID: ProfileIdentifier,\n    data: LinkedProfileDetails,\n    keys: {\n        nickname?: string\n        publicKey: EC_Public_JsonWebKey\n        privateKey?: EC_Private_JsonWebKey\n        localKey?: AESJsonWebKey\n        mnemonic?: PersonaRecord['mnemonic']\n    },\n): Promise<void> {\n    const ec_id = (await ECKeyIdentifier.fromJsonWebKey(keys.publicKey)).unwrap()\n    const rec: PersonaRecord = {\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        identifier: ec_id,\n        linkedProfiles: new Map(),\n        nickname: keys.nickname,\n        publicKey: keys.publicKey,\n        privateKey: keys.privateKey,\n        localKey: keys.localKey,\n        mnemonic: keys.mnemonic,\n        hasLogout: false,\n    }\n    await consistentPersonaDBWriteAccess(async (t) => {\n        await createOrUpdatePersonaDB(rec, { explicitUndefinedField: 'ignore', linkedProfiles: 'merge' }, t)\n        await attachProfileDB(profileID, ec_id, data, t)\n    })\n}\n// #endregion\n\nexport async function queryPublicKey(author: ProfileIdentifier | null) {\n    if (!author) return null\n    const persona = await queryPersonaByProfileDB(author)\n    if (!persona) return null\n    return (await crypto.subtle.importKey(\n        'jwk',\n        persona.publicKey,\n        { name: 'ECDH', namedCurve: persona.publicKey.crv! },\n        true,\n        ['deriveKey'],\n    )) as EC_Public_CryptoKey\n}\n\nfunction abort() {\n    throw new Error('Cancelled')\n}\n","import { Identifier } from './base.js'\nimport { ProfileIdentifier as A } from './profile.js'\nimport { ECKeyIdentifier as B } from './ec-key.js'\nimport { PostIdentifier as C } from './post.js'\nimport { PostIVIdentifier as D } from './post-iv.js'\n\ntype I<T> = Iterable<readonly [string, T]>\n\n// you're free to add a new overload...\nexport function convertRawMapToIdentifierMap<T>(it: I<T>, ...of: Array<typeof A>): Map<A, T>\nexport function convertRawMapToIdentifierMap<T>(it: I<T>, ...of: Array<typeof B>): Map<B, T>\nexport function convertRawMapToIdentifierMap<T>(it: I<T>, ...of: Array<typeof C>): Map<C, T>\nexport function convertRawMapToIdentifierMap<T>(it: I<T>, ...of: Array<typeof D>): Map<D, T>\nexport function convertRawMapToIdentifierMap<T>(it: I<T>, ...of: unknown[]): Map<Identifier, T> {\n    const hasProfileIdentifier = of.includes(A)\n    const hasECKeyIdentifier = of.includes(B)\n    const hasPostIdentifier = of.includes(C)\n    const hasPostIVIdentifier = of.includes(D)\n\n    const result = new Map<Identifier, T>()\n    const droppedValues = new Map<string, T>()\n    for (const [key, value] of it) {\n        const id = Identifier.from(key)\n        if (id.isNone()) {\n            droppedValues.set(key, value)\n            continue\n        }\n\n        if (hasProfileIdentifier && id.value instanceof A) result.set(id.value, value)\n        else if (hasECKeyIdentifier && id.value instanceof B) result.set(id.value, value)\n        else if (hasPostIdentifier && id.value instanceof C) result.set(id.value, value)\n        else if (hasPostIVIdentifier && id.value instanceof D) result.set(id.value, value)\n        else droppedValues.set(key, value)\n    }\n\n    if (droppedValues.size) {\n        console.warn(\n            '[@masknet/shared-base] identifierRawMapToMap: Some value violates the constraint. Dropped values:',\n            droppedValues,\n            'constraints:',\n            of,\n        )\n    }\n\n    return result\n}\n\nexport function convertIdentifierMapToRawMap<T>(map: Iterable<[Identifier, T]>): Map<string, T> {\n    const result = new Map<string, T>()\n    for (const [key, value] of map) {\n        result.set(key.toText(), value)\n    }\n    return result\n}\n","import { unreachable } from '@masknet/kit'\nimport { ProfileIdentifier, type PersonaIdentifier, ECKeyIdentifier } from '@masknet/shared-base'\nimport type { FullPersonaDBTransaction } from './type.js'\n\ntype ReadwriteFullPersonaDBTransaction = FullPersonaDBTransaction<'readwrite'>\n\n/** @internal */\nexport async function assertPersonaDBConsistency(\n    behavior: 'fix' | 'throw',\n    ...[checkRange, t]: Parameters<typeof checkFullPersonaDBConsistency>\n): Promise<Diagnosis[]> {\n    const diag: Diagnosis[] = []\n    for await (const w of checkFullPersonaDBConsistency(checkRange, t)) {\n        diag.push(w)\n    }\n    if (diag.length) {\n        const warn = 'PersonaDB is in the inconsistency state'\n        console.warn(warn)\n        console.info(await t.objectStore('personas').getAll())\n        console.info(await t.objectStore('profiles').getAll())\n        console.error(...diag)\n        if (behavior === 'throw') {\n            t.abort()\n            throw new Error(warn)\n        } else if (t.mode === 'readwrite') {\n            console.warn('Try to fix the inconsistent db')\n            for (const each of diag) await fixDBInconsistency(each, t).catch(() => {})\n        }\n    }\n    return diag\n}\nasync function fixDBInconsistency(diagnosis: Diagnosis, t: ReadwriteFullPersonaDBTransaction) {\n    const personas = t.objectStore('personas')\n    const profiles = t.objectStore('profiles')\n    switch (diagnosis.type) {\n        case Type.Invalid_Persona:\n            return personas.delete(diagnosis.invalidPersonaKey)\n        case Type.Invalid_Profile:\n            return profiles.delete(diagnosis.invalidProfileKey)\n        case Type.One_Way_Link_In_Persona:\n        case Type.Invalid_Persona_LinkedProfiles: {\n            const rec = await personas.get(diagnosis.persona.toText())\n            const profileWantToUnlink =\n                diagnosis.type === Type.One_Way_Link_In_Persona\n                    ? diagnosis.designatedProfile.toText()\n                    : diagnosis.invalidProfile\n            rec!.linkedProfiles.delete(profileWantToUnlink)\n            return personas.put(rec!)\n        }\n        case Type.One_Way_Link_In_Profile:\n        case Type.Invalid_Profile_LinkedPersona: {\n            const rec = await profiles.get(diagnosis.profile.toText())\n            delete rec!.linkedPersona\n            return profiles.put(rec!)\n        }\n        default:\n            return unreachable(diagnosis)\n    }\n}\n\nasync function* checkFullPersonaDBConsistency(\n    checkRange: 'full check' | Map<ProfileIdentifier | PersonaIdentifier, any>,\n    t: ReadwriteFullPersonaDBTransaction,\n): AsyncGenerator<Diagnosis, void> {\n    for await (const persona of t.objectStore('personas')) {\n        const personaID = ECKeyIdentifier.from(persona.key)\n        if (personaID.isNone()) {\n            yield { type: Type.Invalid_Persona, invalidPersonaKey: persona.key, _record: persona.value }\n            continue\n        }\n        if (checkRange === 'full check' || checkRange.has(personaID.value)) {\n            yield* checkPersonaLink(personaID.value, t)\n        }\n    }\n\n    for await (const profile of t.objectStore('profiles')) {\n        const profileID = ProfileIdentifier.from(profile.key)\n        if (profileID.isNone()) {\n            yield { type: Type.Invalid_Profile, invalidProfileKey: profile.key, _record: profile.value }\n        } else if (checkRange === 'full check' || checkRange.has(profileID.value)) {\n            yield* checkProfileLink(profileID.value, t)\n        }\n    }\n}\nasync function* checkPersonaLink(\n    personaID: PersonaIdentifier,\n    t: ReadwriteFullPersonaDBTransaction,\n): AsyncGenerator<Diagnosis, void> {\n    const rec = await t.objectStore('personas').get(personaID.toText())\n    const linkedProfiles = rec?.linkedProfiles\n    if (!linkedProfiles) return\n    for (const each of linkedProfiles) {\n        const profileID = ProfileIdentifier.from(each[0])\n        if (profileID.isNone()) {\n            yield { type: Type.Invalid_Persona_LinkedProfiles, invalidProfile: each[0], persona: personaID }\n            continue\n        }\n        const profile = await t.objectStore('profiles').get(profileID.value.toText())\n        if (!profile?.linkedPersona) {\n            yield {\n                type: Type.One_Way_Link_In_Persona,\n                persona: personaID,\n                designatedProfile: profileID.value,\n                profileActuallyLinkedPersona: profile?.linkedPersona,\n            }\n        }\n    }\n}\nasync function* checkProfileLink(\n    profile: ProfileIdentifier,\n    t: ReadwriteFullPersonaDBTransaction,\n): AsyncGenerator<Diagnosis, void> {\n    const rec = await t.objectStore('profiles').get(profile.toText())\n    const invalidLinkedPersona = rec?.linkedPersona\n    if (!invalidLinkedPersona) return\n    if (invalidLinkedPersona.type !== 'ec_key') {\n        yield { type: Type.Invalid_Profile_LinkedPersona, invalidLinkedPersona, profile }\n        return\n    }\n    const designatedPersona = new ECKeyIdentifier(\n        invalidLinkedPersona.curve,\n        invalidLinkedPersona.compressedPoint || invalidLinkedPersona.encodedCompressedKey!,\n    )\n    const persona = await t.objectStore('personas').get(designatedPersona.toText())\n    if (!persona?.linkedProfiles.has(profile.toText())) {\n        yield { type: Type.One_Way_Link_In_Profile, profile, designatedPersona }\n    }\n}\n\nconst enum Type {\n    Invalid_Persona = 'invalid identifier in persona',\n    Invalid_Persona_LinkedProfiles = 'invalid identifier in persona.linkedProfiles',\n    Invalid_Profile = 'invalid identifier in profile',\n    Invalid_Profile_LinkedPersona = 'invalid identifier in profile.linkedPersona',\n    One_Way_Link_In_Persona = 'a persona linked to a profile meanwhile the profile is not linked to the persona',\n    One_Way_Link_In_Profile = 'a profile linked to a persona meanwhile it is not appeared in the persona.linkedProfiles',\n}\ntype Diagnosis =\n    | {\n          type: Type.Invalid_Persona\n          invalidPersonaKey: string\n          _record: unknown\n      }\n    | {\n          type: Type.Invalid_Persona_LinkedProfiles\n          persona: PersonaIdentifier\n          invalidProfile: string\n      }\n    | {\n          type: Type.Invalid_Profile\n          invalidProfileKey: string\n          _record: unknown\n      }\n    | {\n          type: Type.Invalid_Profile_LinkedPersona\n          profile: ProfileIdentifier\n          invalidLinkedPersona: unknown\n      }\n    | {\n          type: Type.One_Way_Link_In_Persona\n          persona: PersonaIdentifier\n          designatedProfile: ProfileIdentifier\n          profileActuallyLinkedPersona?: unknown\n      }\n    | {\n          type: Type.One_Way_Link_In_Profile\n          profile: ProfileIdentifier\n          designatedPersona: PersonaIdentifier\n      }\n","import { isEmpty } from 'lodash-es'\nimport { openDB } from 'idb/with-async-ittr'\nimport { bufferToHex, privateToPublic, publicToAddress } from '@ethereumjs/util'\nimport {\n    type AESJsonWebKey,\n    convertIdentifierMapToRawMap,\n    convertRawMapToIdentifierMap,\n    ECKeyIdentifier,\n    type PersonaIdentifier,\n    ProfileIdentifier,\n    RelationFavor,\n    fromBase64URL,\n    MaskMessages,\n} from '@masknet/shared-base'\nimport { CryptoKeyToJsonWebKey } from '../../../utils-pure/index.js'\nimport { createDBAccessWithAsyncUpgrade, createTransaction } from '../utils/openDB.js'\nimport { assertPersonaDBConsistency } from './consistency.js'\nimport type {\n    FullPersonaDBTransaction,\n    ProfileTransaction,\n    PersonasTransaction,\n    RelationTransaction,\n    PersonaRecordWithPrivateKey,\n    PersonaDB,\n    PersonaRecordDB,\n    ProfileRecord,\n    ProfileRecordDB,\n    LinkedProfileDetails,\n    RelationRecord,\n    RelationRecordDB,\n    PersonaRecord,\n} from './type.js'\n\n/**\n * Database structure:\n *\n * # ObjectStore `persona`:\n * @description Store Personas.\n * @type {PersonaRecordDB}\n * @keys inline, {@link PersonaRecordDB.identifier}\n *\n * # ObjectStore `profiles`:\n * @description Store profiles.\n * @type {ProfileRecord}\n * A persona links to 0 or more profiles.\n * Each profile links to 0 or 1 persona.\n * @keys inline, {@link ProfileRecord.identifier}\n *\n * # ObjectStore `relations`:\n * @description Store relations.\n * @type {RelationRecord}\n * Save the relationship between persona and profile.\n * @keys inline {@link RelationRecord.linked  @link RelationRecord.profile}\n */\n\nconst db = createDBAccessWithAsyncUpgrade<PersonaDB, Knowledge>(\n    1,\n    4,\n    (currentOpenVersion, knowledge) => {\n        return openDB<PersonaDB>('maskbook-persona', currentOpenVersion, {\n            upgrade(db, oldVersion, newVersion, transaction) {\n                function v0_v1() {\n                    db.createObjectStore('personas', { keyPath: 'identifier' })\n                    db.createObjectStore('profiles', { keyPath: 'identifier' })\n                    transaction.objectStore('profiles').createIndex('network', 'network', { unique: false })\n                    transaction.objectStore('personas').createIndex('hasPrivateKey', 'hasPrivateKey', { unique: false })\n                }\n                async function v1_v2() {\n                    const persona = transaction.objectStore('personas')\n                    const profile = transaction.objectStore('profiles')\n                    await update(persona)\n                    await update(profile)\n                    async function update(q: typeof persona | typeof profile) {\n                        for await (const rec of persona) {\n                            if (!rec.value.localKey) continue\n                            const jwk = knowledge?.data.get(rec.value.identifier)\n                            if (!jwk) {\n                                // !!! This should not happen\n                                // !!! Remove it will implicitly drop user's localKey\n                                delete rec.value.localKey\n                                // !!! Keep it will leave a bug, broken data in the DB\n                                // continue\n                                // !!! DON'T throw cause it will break the database upgrade\n                            }\n                            rec.value.localKey = jwk\n                            await rec.update(rec.value)\n                        }\n                    }\n                }\n                async function v2_v3() {\n                    try {\n                        db.createObjectStore('relations', { keyPath: ['linked', 'profile'] })\n                        transaction\n                            .objectStore('relations')\n                            .createIndex('linked, profile, favor', ['linked', 'profile', 'favor'], { unique: true })\n                    } catch {}\n                }\n                async function v3_v4() {\n                    try {\n                        transaction.objectStore('relations').deleteIndex('linked, profile, favor')\n                        transaction\n                            .objectStore('relations')\n                            .createIndex('favor, profile, linked', ['favor', 'profile', 'linked'], { unique: true })\n                        const relation = transaction.objectStore('relations')\n\n                        await update(relation)\n                        async function update(q: typeof relation) {\n                            for await (const rec of relation) {\n                                rec.value.favor =\n                                    rec.value.favor === RelationFavor.DEPRECATED\n                                        ? RelationFavor.UNCOLLECTED\n                                        : RelationFavor.COLLECTED\n\n                                await rec.update(rec.value)\n                            }\n                        }\n                    } catch {}\n                }\n                if (oldVersion < 1) v0_v1()\n                if (oldVersion < 2) v1_v2()\n                if (oldVersion < 3) v2_v3()\n                if (oldVersion < 4) v3_v4()\n            },\n        })\n    },\n    async (db) => {\n        if (db.version === 1) {\n            const map: V1To2 = { version: 2, data: new Map() }\n            const t = createTransaction(db, 'readonly')('personas', 'profiles')\n            const a = await t.objectStore('personas').getAll()\n            const b = await t.objectStore('profiles').getAll()\n            for (const rec of [...a, ...b]) {\n                if (!rec.localKey) continue\n                map.data.set(rec.identifier, (await CryptoKeyToJsonWebKey(rec.localKey as any)) as any)\n            }\n            return map\n        }\n        return undefined\n    },\n    'maskbook-persona',\n)\ntype V1To2 = {\n    version: 2\n    data: Map<string, AESJsonWebKey>\n}\ntype Knowledge = V1To2\n\n/** @internal */\nexport async function createRelationsTransaction() {\n    const database = await db()\n    return createTransaction(database, 'readwrite')('relations')\n}\n\n/** @internal */\nexport async function createPersonaDBReadonlyAccess(\n    action: (t: FullPersonaDBTransaction<'readonly'>) => Promise<void>,\n) {\n    const database = await db()\n    const transaction = createTransaction(database, 'readonly')('personas', 'profiles', 'relations')\n    await action(transaction)\n}\n\n/** @internal */\nexport async function consistentPersonaDBWriteAccess(\n    action: (t: FullPersonaDBTransaction<'readwrite'>) => Promise<void>,\n    tryToAutoFix = true,\n) {\n    // TODO: collect all changes on this transaction then only perform consistency check on those records.\n    const database = await db()\n    let t = createTransaction(database, 'readwrite')('profiles', 'personas', 'relations')\n    let finished = false\n    const finish = () => (finished = true)\n    t.addEventListener('abort', finish)\n    t.addEventListener('complete', finish)\n    t.addEventListener('error', finish)\n\n    // Pause those events when patching write access\n    const resumePersona = MaskMessages.events.ownPersonaChanged.pause!()\n    const resumeRelation = MaskMessages.events.relationsChanged.pause!()\n    try {\n        await action(t)\n    } finally {\n        if (finished) {\n            console.warn('The transaction ends too early! There MUST be a bug in the program!')\n            console.trace()\n            // start a new transaction to check consistency\n            t = createTransaction(database, 'readwrite')('profiles', 'personas', 'relations')\n        }\n        try {\n            await assertPersonaDBConsistency(tryToAutoFix ? 'fix' : 'throw', 'full check', t)\n            resumePersona((data) => (data.length ? [undefined] : []))\n            resumeRelation((data) => [data.flat()])\n        } finally {\n            // If the consistency check throws, we drop all pending events\n            resumePersona(() => [])\n            resumeRelation(() => [])\n        }\n    }\n}\n\n// #region Plain methods\n/** @internal */\nexport async function createPersonaDB(record: PersonaRecord, t: PersonasTransaction<'readwrite'>): Promise<void> {\n    await t.objectStore('personas').add(personaRecordToDB(record))\n    record.privateKey && MaskMessages.events.ownPersonaChanged.sendToAll(undefined)\n}\n\n/** @internal */\nexport async function queryPersonaByProfileDB(\n    query: ProfileIdentifier,\n    t?: FullPersonaDBTransaction<'readonly'>,\n): Promise<PersonaRecord | null> {\n    t = t || createTransaction(await db(), 'readonly')('personas', 'profiles', 'relations')\n    const x = await t.objectStore('profiles').get(query.toText())\n    if (!x?.linkedPersona) return null\n    return queryPersonaDB(\n        new ECKeyIdentifier(\n            x.linkedPersona.curve,\n            x.linkedPersona.compressedPoint || x.linkedPersona.encodedCompressedKey!,\n        ),\n        t,\n    )\n}\n\n/** @internal */\nexport async function queryPersonaDB(\n    query: PersonaIdentifier,\n    t?: PersonasTransaction<'readonly'>,\n    isIncludeLogout?: boolean,\n): Promise<PersonaRecord | null> {\n    t = t || createTransaction(await db(), 'readonly')('personas')\n    const x = await t.objectStore('personas').get(query.toText())\n    if (x && (isIncludeLogout || !x.hasLogout)) return personaRecordOutDB(x)\n    return null\n}\n\nexport async function queryPersonasDB(\n    query?: {\n        identifiers?: PersonaIdentifier[]\n        hasPrivateKey?: boolean\n        nameContains?: string\n        initialized?: boolean\n    },\n    t?: PersonasTransaction<'readonly'>,\n    isIncludeLogout?: boolean,\n): Promise<PersonaRecord[]> {\n    t = t || createTransaction(await db(), 'readonly')('personas')\n    const records: PersonaRecord[] = []\n    for await (const each of t.objectStore('personas')) {\n        const out = personaRecordOutDB(each.value)\n        if (\n            (query?.hasPrivateKey && !out.privateKey) ||\n            (query?.nameContains && out.nickname !== query.nameContains) ||\n            (query?.identifiers && !query.identifiers.some((x) => x === out.identifier)) ||\n            (query?.initialized && out.uninitialized)\n        )\n            continue\n\n        if (isIncludeLogout || !out.hasLogout) records.push(out)\n    }\n    return records\n}\n\n/** @internal */\nexport async function queryPersonasWithPrivateKey(\n    t?: FullPersonaDBTransaction<'readonly'>,\n): Promise<PersonaRecordWithPrivateKey[]> {\n    t = t || createTransaction(await db(), 'readonly')('personas', 'profiles', 'relations')\n    const records: PersonaRecord[] = []\n    records.push(\n        ...(await t.objectStore('personas').index('hasPrivateKey').getAll(IDBKeyRange.only('yes'))).map(\n            personaRecordOutDB,\n        ),\n    )\n    return records as PersonaRecordWithPrivateKey[]\n}\n\n/**\n * Update an existing Persona record.\n * @param nextRecord The partial record to be merged\n * @param howToMerge How to merge linkedProfiles and `field: undefined`\n * @param t transaction\n * @internal\n */\nexport async function updatePersonaDB(\n    // Do a copy here. We need to delete keys from it.\n    { ...nextRecord }: Readonly<Partial<PersonaRecord> & Pick<PersonaRecord, 'identifier'>>,\n    howToMerge: {\n        linkedProfiles: 'replace' | 'merge'\n        explicitUndefinedField: 'ignore' | 'delete field'\n    },\n    t: PersonasTransaction<'readwrite'>,\n): Promise<void> {\n    const _old = await t.objectStore('personas').get(nextRecord.identifier.toText())\n    if (!_old) throw new TypeError('Update a non-exist data')\n    const old = personaRecordOutDB(_old)\n    let nextLinkedProfiles = old.linkedProfiles\n    if (nextRecord.linkedProfiles) {\n        if (howToMerge.linkedProfiles === 'merge')\n            nextLinkedProfiles = new Map([...nextLinkedProfiles, ...nextRecord.linkedProfiles])\n        else nextLinkedProfiles = nextRecord.linkedProfiles\n    }\n    if (howToMerge.explicitUndefinedField === 'ignore') {\n        const keys = Object.keys(nextRecord) as Array<keyof typeof nextRecord>\n        for (const key of keys) {\n            if (nextRecord[key] === undefined) {\n                delete nextRecord[key]\n            }\n        }\n    }\n    const next: PersonaRecordDB = personaRecordToDB({\n        ...old,\n        ...nextRecord,\n        linkedProfiles: nextLinkedProfiles,\n        updatedAt: nextRecord.updatedAt ?? new Date(),\n    })\n    await t.objectStore('personas').put(next)\n    ;(next.privateKey || old.privateKey) && MaskMessages.events.ownPersonaChanged.sendToAll(undefined)\n}\n\n/** @internal */\nexport async function createOrUpdatePersonaDB(\n    record: Partial<PersonaRecord> & Pick<PersonaRecord, 'identifier' | 'publicKey'>,\n    howToMerge: Parameters<typeof updatePersonaDB>[1],\n    t: PersonasTransaction<'readwrite'>,\n) {\n    const personaInDB = await t.objectStore('personas').get(record.identifier.toText())\n    if (personaInDB) return updatePersonaDB(record, howToMerge, t)\n    else\n        return createPersonaDB(\n            {\n                ...record,\n                address: record.privateKey?.d\n                    ? bufferToHex(publicToAddress(privateToPublic(Buffer.from(fromBase64URL(record.privateKey.d)))))\n                    : undefined,\n                createdAt: record.createdAt ?? new Date(),\n                updatedAt: record.updatedAt ?? new Date(),\n                linkedProfiles: record.linkedProfiles ?? new Map(),\n            },\n            t,\n        )\n}\n\n/** @internal */\nexport async function deletePersonaDB(\n    id: PersonaIdentifier,\n    confirm: 'delete even with private' | \"don't delete if have private key\",\n    t: PersonasTransaction<'readwrite'>,\n): Promise<void> {\n    const r = await t.objectStore('personas').get(id.toText())\n    if (!r) return\n    if (confirm !== 'delete even with private' && r.privateKey)\n        throw new TypeError('Cannot delete a persona with a private key')\n    await t.objectStore('personas').delete(id.toText())\n    r.privateKey && MaskMessages.events.ownPersonaChanged.sendToAll()\n}\n/**\n * Delete a Persona\n * @returns a boolean. true: the record no longer exists; false: the record is kept.\n * @internal\n */\nexport async function safeDeletePersonaDB(\n    id: PersonaIdentifier,\n    t?: FullPersonaDBTransaction<'readwrite'>,\n): Promise<boolean> {\n    t = t || createTransaction(await db(), 'readwrite')('personas', 'profiles', 'relations')\n    const r = await queryPersonaDB(id, t)\n    if (!r) return true\n    if (r.linkedProfiles.size !== 0) return false\n    if (r.privateKey) return false\n    await deletePersonaDB(id, \"don't delete if have private key\", t)\n    return true\n}\n\n/** @internal */\nexport async function createProfileDB(record: ProfileRecord, t: ProfileTransaction<'readwrite'>): Promise<void> {\n    await t.objectStore('profiles').add(profileToDB(record))\n}\n\n/** @internal */\nexport async function queryProfileDB(\n    id: ProfileIdentifier,\n    t?: ProfileTransaction<'readonly'>,\n): Promise<ProfileRecord | null> {\n    t = t || createTransaction(await db(), 'readonly')('profiles')\n    const result = await t.objectStore('profiles').get(id.toText())\n    if (result) return profileOutDB(result)\n    return null\n}\n\n/** @internal */\nexport async function queryProfilesDB(\n    query: {\n        network?: string\n        identifiers?: ProfileIdentifier[]\n        hasLinkedPersona?: boolean\n    },\n    t?: ProfileTransaction<'readonly'>,\n): Promise<ProfileRecord[]> {\n    t = t || createTransaction(await db(), 'readonly')('profiles')\n    const result: ProfileRecord[] = []\n\n    if (isEmpty(query)) {\n        const results = await t.objectStore('profiles').getAll()\n        results.forEach((each) => {\n            const out = profileOutDB(each)\n            result.push(out)\n        })\n    }\n\n    if (query.network) {\n        const results = await t.objectStore('profiles').index('network').getAll(IDBKeyRange.only(query.network))\n\n        results.forEach((each) => {\n            const out = profileOutDB(each)\n            if (query.hasLinkedPersona && !out.linkedPersona) return\n            result.push(out)\n        })\n    } else if (query.identifiers?.length) {\n        for await (const each of t.objectStore('profiles').iterate()) {\n            const out = profileOutDB(each.value)\n            if (query.hasLinkedPersona && !out.linkedPersona) continue\n            if (query.identifiers.some((x) => out.identifier === x)) result.push(out)\n        }\n    } else {\n        for await (const each of t.objectStore('profiles').iterate()) {\n            const out = profileOutDB(each.value)\n            if (query.hasLinkedPersona && !out.linkedPersona) continue\n            result.push(out)\n        }\n    }\n\n    return result\n}\n\nasync function updateProfileDB(\n    updating: Partial<ProfileRecord> & Pick<ProfileRecord, 'identifier'>,\n    t: FullPersonaDBTransaction<'readwrite'>,\n): Promise<void> {\n    const old = await t.objectStore('profiles').get(updating.identifier.toText())\n    if (!old) throw new Error('Updating a non exists record')\n    const oldLinkedPersona = old.linkedPersona\n        ? new ECKeyIdentifier(\n              old.linkedPersona.curve,\n              old.linkedPersona.compressedPoint || old.linkedPersona.encodedCompressedKey!,\n          )\n        : undefined\n\n    if (oldLinkedPersona && updating.linkedPersona && oldLinkedPersona !== updating.linkedPersona) {\n        const oldIdentifier = ProfileIdentifier.from(old.identifier).expect(\n            `old data in the profile database should be a valid ProfileIdentifier, but found ${old.identifier}`,\n        )\n        const oldLinkedPersona = await queryPersonaByProfileDB(oldIdentifier, t)\n\n        if (oldLinkedPersona) {\n            oldLinkedPersona.linkedProfiles.delete(oldIdentifier)\n            await updatePersonaDB(\n                oldLinkedPersona,\n                {\n                    linkedProfiles: 'replace',\n                    explicitUndefinedField: 'ignore',\n                },\n                t,\n            )\n        }\n    }\n\n    if (updating.linkedPersona && oldLinkedPersona !== updating.linkedPersona) {\n        const linkedPersona = await queryPersonaDB(updating.linkedPersona, t)\n        if (linkedPersona) {\n            linkedPersona.linkedProfiles.set(updating.identifier, { connectionConfirmState: 'confirmed' })\n            await updatePersonaDB(\n                linkedPersona,\n                {\n                    linkedProfiles: 'replace',\n                    explicitUndefinedField: 'ignore',\n                },\n                t,\n            )\n        }\n    }\n\n    const nextRecord: ProfileRecordDB = profileToDB({\n        ...profileOutDB(old),\n        ...updating,\n    })\n    await t.objectStore('profiles').put(nextRecord)\n}\n\n/** @internal */\nexport async function createOrUpdateProfileDB(rec: ProfileRecord, t: FullPersonaDBTransaction<'readwrite'>) {\n    if (await queryProfileDB(rec.identifier, t)) return updateProfileDB(rec, t)\n    else return createProfileDB(rec, t)\n}\n\n/** @internal */\nexport async function detachProfileDB(\n    identifier: ProfileIdentifier,\n    t?: FullPersonaDBTransaction<'readwrite'>,\n): Promise<void> {\n    t = t || createTransaction(await db(), 'readwrite')('personas', 'profiles', 'relations')\n    const profile = await queryProfileDB(identifier, t)\n    if (!profile?.linkedPersona) return\n\n    const linkedPersona = profile.linkedPersona\n    const persona = await queryPersonaDB(linkedPersona, t)\n    persona?.linkedProfiles.delete(identifier)\n\n    if (persona) {\n        await updatePersonaDB(persona, { linkedProfiles: 'replace', explicitUndefinedField: 'delete field' }, t)\n        if (persona.privateKey) MaskMessages.events.ownPersonaChanged.sendToAll(undefined)\n    }\n    profile.linkedPersona = undefined\n    await updateProfileDB(profile, t)\n}\n\n/** @internal */\nexport async function attachProfileDB(\n    identifier: ProfileIdentifier,\n    attachTo: PersonaIdentifier,\n    data: LinkedProfileDetails,\n    t?: FullPersonaDBTransaction<'readwrite'>,\n): Promise<void> {\n    t = t || createTransaction(await db(), 'readwrite')('personas', 'profiles', 'relations')\n    const profile =\n        (await queryProfileDB(identifier, t)) ||\n        (await createProfileDB({ identifier, createdAt: new Date(), updatedAt: new Date() }, t)) ||\n        (await queryProfileDB(identifier, t))\n    const persona = await queryPersonaDB(attachTo, t)\n    if (!persona || !profile) return\n\n    if (profile.linkedPersona !== undefined && profile.linkedPersona !== attachTo) {\n        await detachProfileDB(identifier, t)\n    }\n\n    profile.linkedPersona = attachTo\n    persona.linkedProfiles.set(identifier, data)\n\n    await updatePersonaDB(persona, { linkedProfiles: 'merge', explicitUndefinedField: 'ignore' }, t)\n    await updateProfileDB(profile, t)\n\n    if (persona.privateKey) MaskMessages.events.ownPersonaChanged.sendToAll(undefined)\n}\n\n/** @internal */\nexport async function deleteProfileDB(id: ProfileIdentifier, t: ProfileTransaction<'readwrite'>): Promise<void> {\n    await t.objectStore('profiles').delete(id.toText())\n}\n\n/** @internal */\nexport async function createRelationDB(\n    record: Omit<RelationRecord, 'network'>,\n    t: RelationTransaction<'readwrite'>,\n    silent = false,\n): Promise<void> {\n    await t.objectStore('relations').add(relationRecordToDB(record))\n    if (!silent)\n        MaskMessages.events.relationsChanged.sendToAll([{ of: record.profile, reason: 'update', favor: record.favor }])\n}\n\n/** @internal */\nexport async function queryRelations(query: (record: RelationRecord) => boolean, t?: RelationTransaction<'readonly'>) {\n    t = t || createTransaction(await db(), 'readonly')('relations')\n    const records: RelationRecord[] = []\n\n    for await (const each of t.objectStore('relations')) {\n        const out = relationRecordOutDB(each.value)\n        if (query(out)) records.push(out)\n    }\n\n    return records\n}\n\n/** @internal */\nexport async function queryRelationsPagedDB(\n    linked: PersonaIdentifier,\n    options: {\n        network: string\n        after?: RelationRecord\n        pageOffset?: number\n    },\n    count: number,\n) {\n    const t = createTransaction(await db(), 'readonly')('relations')\n    let firstRecord = true\n\n    const data: RelationRecord[] = []\n\n    for await (const cursor of t.objectStore('relations').index('favor, profile, linked').iterate()) {\n        if (cursor.value.linked !== linked.toText()) continue\n        if (options.network !== 'all' && cursor.value.network !== options.network) continue\n\n        if (firstRecord && options.after && options.after.profile.toText() !== cursor?.value.profile) {\n            cursor.continue([options.after.favor, options.after.profile.toText(), options.after.linked.toText()])\n            firstRecord = false\n            continue\n        }\n\n        firstRecord = false\n\n        // after this record\n        if (\n            options.after?.linked.toText() === cursor?.value.linked &&\n            options.after?.profile.toText() === cursor?.value.profile\n        )\n            continue\n\n        if (count <= 0) break\n        const outData = relationRecordOutDB(cursor.value)\n        count -= 1\n        data.push(outData)\n    }\n    return data\n}\n\n/** @internal */\nexport async function updateRelationDB(\n    updating: Omit<RelationRecord, 'network'>,\n    t: RelationTransaction<'readwrite'>,\n    silent = false,\n): Promise<void> {\n    const old = await t\n        .objectStore('relations')\n        .get(IDBKeyRange.only([updating.linked.toText(), updating.profile.toText()]))\n\n    if (!old) throw new Error('Updating a non exists record')\n\n    const nextRecord: RelationRecordDB = relationRecordToDB({\n        ...relationRecordOutDB(old),\n        ...updating,\n    })\n\n    await t.objectStore('relations').put(nextRecord)\n    if (!silent) {\n        MaskMessages.events.relationsChanged.sendToAll([\n            { of: updating.profile, favor: updating.favor, reason: 'update' },\n        ])\n    }\n}\n\n/** @internal */\nexport async function deletePersonaRelationDB(\n    persona: PersonaIdentifier,\n    linkedPersona: PersonaIdentifier,\n    t: RelationTransaction<'readwrite'>,\n    silent = false,\n): Promise<void> {\n    const old = await t.objectStore('relations').get(IDBKeyRange.only([linkedPersona.toText(), persona.toText()]))\n    if (!old) return\n    await t.objectStore('relations').delete(IDBKeyRange.only([linkedPersona.toText(), persona.toText()]))\n    if (!silent) MaskMessages.events.relationsChanged.sendToAll([{ of: persona, reason: 'delete', favor: old.favor }])\n}\n\n/** @internal */\nexport async function createOrUpdateRelationDB(\n    record: Omit<RelationRecord, 'network'>,\n    t: RelationTransaction<'readwrite'>,\n    silent = false,\n) {\n    const old = await t\n        .objectStore('relations')\n        .get(IDBKeyRange.only([record.linked.toText(), record.profile.toText()]))\n\n    if (old) {\n        await updateRelationDB(record, t, silent)\n    } else {\n        await createRelationDB(record, t, silent)\n    }\n}\n\n// #endregion\n\n// #region out db & to db\nfunction profileToDB(x: ProfileRecord): ProfileRecordDB {\n    return {\n        ...x,\n        identifier: x.identifier.toText(),\n        network: x.identifier.network,\n        linkedPersona: x.linkedPersona\n            ? { curve: x.linkedPersona.curve, type: 'ec_key', compressedPoint: x.linkedPersona.rawPublicKey }\n            : undefined,\n    }\n}\nfunction profileOutDB({ network, ...x }: ProfileRecordDB): ProfileRecord {\n    if (x.linkedPersona) {\n        if (x.linkedPersona.type !== 'ec_key') throw new Error('Unknown type of linkedPersona')\n    }\n    return {\n        ...x,\n        identifier: ProfileIdentifier.from(x.identifier).expect(\n            `data stored in the profile database should be a valid ProfileIdentifier, but found ${x.identifier}`,\n        ),\n        linkedPersona: x.linkedPersona\n            ? new ECKeyIdentifier(\n                  x.linkedPersona.curve,\n                  x.linkedPersona.compressedPoint || x.linkedPersona.encodedCompressedKey!,\n              )\n            : undefined,\n    }\n}\nfunction personaRecordToDB(x: PersonaRecord): PersonaRecordDB {\n    return {\n        ...x,\n        identifier: x.identifier.toText(),\n        hasPrivateKey: x.privateKey ? 'yes' : 'no',\n        linkedProfiles: convertIdentifierMapToRawMap(x.linkedProfiles),\n    }\n}\nfunction personaRecordOutDB(x: PersonaRecordDB): PersonaRecord {\n    Reflect.deleteProperty(x, 'hasPrivateKey' as keyof typeof x)\n    const identifier = ECKeyIdentifier.from(x.identifier).expect(\n        `data stored in the profile database should be a valid ECKeyIdentifier, but found ${x.identifier}`,\n    )\n\n    const obj: PersonaRecord = {\n        ...x,\n        address: x.privateKey?.d\n            ? bufferToHex(publicToAddress(privateToPublic(Buffer.from(fromBase64URL(x.privateKey.d)))))\n            : undefined,\n        identifier,\n        publicHexKey: identifier.publicKeyAsHex,\n        linkedProfiles: convertRawMapToIdentifierMap(x.linkedProfiles, ProfileIdentifier),\n    }\n    return obj\n}\n\nfunction relationRecordToDB(x: Omit<RelationRecord, 'network'>): RelationRecordDB {\n    if (x.profile instanceof ProfileIdentifier) {\n        return {\n            ...x,\n            network: x.profile.network,\n            profile: x.profile.toText(),\n            linked: x.linked.toText(),\n        }\n    } else {\n        return {\n            ...x,\n            profile: x.profile.toText(),\n            linked: x.linked.toText(),\n        }\n    }\n}\n\nfunction relationRecordOutDB(x: RelationRecordDB): RelationRecord {\n    if (x.profile.startsWith('person:')) {\n        return {\n            ...x,\n            profile: ProfileIdentifier.from(x.profile).expect(\n                `data stored in the profile database should be a valid ProfileIdentifier, but found ${x.profile}`,\n            ),\n            linked: ECKeyIdentifier.from(x.linked).expect(\n                `data stored in the profile database should be a valid ECKeyIdentifier, but found ${x.linked}`,\n            ),\n        }\n    } else {\n        return {\n            ...x,\n            profile: ECKeyIdentifier.from(x.profile).expect(\n                `data stored in the profile database should be a valid ECKeyIdentifier, but found ${x.profile}`,\n            ),\n            linked: ECKeyIdentifier.from(x.linked).expect(\n                `data stored in the profile database should be a valid ECKeyIdentifier, but found ${x.linked}`,\n            ),\n        }\n    }\n}\n\n// #endregion\n","import { openDB, type DBSchema } from 'idb/with-async-ittr'\nimport { createDBAccess } from '../utils/openDB.js'\n\ntype InStore = {\n    plugin_id: string\n    value: unknown\n}\n\n/** @internal */\nexport interface PluginDatabase extends DBSchema {\n    PluginStore: {\n        value: InStore\n        indexes: {\n            type: [string, string]\n        }\n        key: string\n    }\n}\n\nconst db = createDBAccess(() => {\n    return openDB<PluginDatabase>('maskbook-plugin-data', 2, {\n        async upgrade(db, oldVersion, newVersion, transaction) {\n            if (oldVersion < 1) db.createObjectStore('PluginStore')\n            if (oldVersion < 2) {\n                const data = await transaction.objectStore('PluginStore').getAll()\n                db.deleteObjectStore('PluginStore')\n                const os = db.createObjectStore('PluginStore', { keyPath: ['plugin_id', 'value.type', 'value.id'] })\n\n                // a compound index by \"rec.plugin_id\" + \"rec.value.type\"\n                os.createIndex('type', ['plugin_id', 'value.type'])\n                for (const each of data) {\n                    if (!each.plugin_id) continue\n                    if (!pluginDataHasValidKeyPath(each.value)) continue\n                    Reflect.deleteProperty(each, 'type')\n                    Reflect.deleteProperty(each, 'record_id')\n                    await os.add(each)\n                }\n            }\n        },\n    })\n})\n// cause key path error in \"add\" will cause transaction fail, we need to check them first\n/** @internal */\nexport function pluginDataHasValidKeyPath(value: unknown): value is InStore {\n    try {\n        if (typeof value !== 'object' || value === null) return false\n        const id = Reflect.get(value, 'id')\n        const type = Reflect.get(value, 'type')\n        if (typeof id !== 'string' && typeof id !== 'number') return false\n        if (typeof type !== 'string' && typeof type !== 'number') return false\n        return true\n    } catch {\n        return false\n    }\n}\nexport const createPluginDBAccess = db\nexport function toStore(plugin_id: string, value: unknown): InStore {\n    return { plugin_id, value }\n}\n","import type { IDBPTransaction } from 'idb/with-async-ittr'\nimport type { Plugin, IndexableTaggedUnion } from '@masknet/plugin-infra'\nimport { createPluginDBAccess, type PluginDatabase, pluginDataHasValidKeyPath, toStore } from './base.js'\n\n/**\n * Avoid calling it directly.\n *\n * You should get the instance from WorkerContext when the plugin is initialized.\n *\n * ```ts\n * let storage: Plugin.Worker.Storage<T | T2> | null = null\n * const worker: Plugin.Worker.Definition = {\n *     ...base,\n *     init(signal, context) {\n *         storage = context.getDatabaseStorage()\n *         // get it here, instance of calling this function directly.\n *     },\n * }\n * ```\n */\nexport function createPluginDatabase<Data extends IndexableTaggedUnion>(\n    plugin_id: string,\n    signal?: AbortSignal,\n): Plugin.Worker.DatabaseStorage<Data> {\n    let livingTransaction: IDBPTransaction<PluginDatabase, ['PluginStore'], 'readwrite'> | undefined = undefined\n    let ended = false\n    signal?.addEventListener('abort', () => {\n        // give some extra time after the plugin shutdown to store data.\n        setTimeout(() => (ended = true), 1500)\n    })\n    function key(data: IndexableTaggedUnion) {\n        return IDBKeyRange.only([plugin_id, data.type, data.id])\n    }\n    function ensureAlive() {\n        if (ended) throw new Error(`[@masknet/plugin-infra] Storage instance for ${plugin_id} has expired.`)\n    }\n    return {\n        async get(type, id) {\n            const t = await c('r')\n            const data = await t.store.get(key({ type, id }))\n            if (!data) return undefined\n            return data.value as any\n        },\n        async has(type, id) {\n            const t = await c('r')\n            const count = await t.store.count(key({ type, id }))\n            return count > 0\n        },\n        async add(data) {\n            const t = await c('rw')\n            if (!pluginDataHasValidKeyPath(data)) throw new TypeError(\"Data doesn't have a valid key path\")\n            if (await t.store.get(key(data))) await t.store.put(toStore(plugin_id, data))\n            else await t.store.add(toStore(plugin_id, data))\n            t.commit()\n        },\n        async remove(type, id) {\n            const t = await c('rw')\n            await t.store.delete(key({ type, id }))\n            t.commit()\n        },\n        async *iterate(type) {\n            const db = await c('r')\n            const cursor = await db\n                .objectStore('PluginStore')\n                .index('type')\n                .openCursor(IDBKeyRange.only([plugin_id, type]))\n            if (!cursor) return\n            for await (const each of cursor) {\n                const roCursor: Plugin.Worker.StorageReadonlyCursor<Data, typeof type> = {\n                    value: each.value.value as any,\n                }\n                yield roCursor\n            }\n        },\n        async *iterate_mutate(type) {\n            const cursor = await (\n                await c('rw')\n            )\n                .objectStore('PluginStore')\n                .index('type')\n                .openCursor(IDBKeyRange.only([plugin_id, type]))\n            if (!cursor) return\n            for await (const each of cursor) {\n                const rwCursor: Plugin.Worker.StorageMutableCursor<Data, typeof type> = {\n                    value: each.value.value as any,\n                    delete: () => each.delete(),\n                    update: async (data) => {\n                        await each.update(toStore(plugin_id, data))\n                    },\n                }\n                yield rwCursor\n            }\n        },\n    }\n    async function c(usage: 'r' | 'rw'): Promise<NonNullable<typeof livingTransaction>> {\n        ensureAlive()\n        if (usage === 'rw' && (livingTransaction as any)?.mode === 'readonly') invalidateTransaction()\n        try {\n            await livingTransaction?.store.openCursor()\n        } catch {\n            invalidateTransaction()\n        }\n        if (livingTransaction === undefined) {\n            const db = await createPluginDBAccess()\n            const tx = db.transaction('PluginStore', usage === 'r' ? 'readonly' : 'readwrite') as any\n            livingTransaction = tx\n            // Oops, workaround for https://bugs.webkit.org/show_bug.cgi?id=216769 or https://github.com/jakearchibald/idb/issues/201\n            try {\n                await tx.store.openCursor()\n            } catch {\n                livingTransaction = db.transaction('PluginStore', usage === 'r' ? 'readonly' : 'readwrite') as any\n                return livingTransaction as any\n            }\n            return tx\n        }\n        return livingTransaction\n    }\n    function invalidateTransaction() {\n        livingTransaction = undefined\n    }\n}\n","import type { AESCryptoKey, PostIVIdentifier } from '@masknet/shared-base'\nimport { CryptoKeyToJsonWebKey } from '../../../utils-pure/index.js'\nimport { withPostDBTransaction, queryPostDB, createPostDB, updatePostDB, type PostRecord } from './index.js'\n\nexport async function savePostKeyToDB(\n    id: PostIVIdentifier,\n    key: AESCryptoKey,\n    extraInfo: Omit<PostRecord, 'identifier' | 'foundAt' | 'postCryptoKey'>,\n): Promise<void> {\n    const jwk = await CryptoKeyToJsonWebKey(key)\n    await withPostDBTransaction(async (t) => {\n        const post = await queryPostDB(id, t)\n        if (!post) {\n            await createPostDB(\n                {\n                    identifier: id,\n                    postCryptoKey: jwk,\n                    foundAt: new Date(),\n                    ...extraInfo,\n                },\n                t,\n            )\n        } else {\n            await updatePostDB({ ...post, postCryptoKey: jwk }, 'override', t)\n        }\n    })\n}\n","import {\n    type AESCryptoKey,\n    type AESJsonWebKey,\n    ECKeyIdentifier,\n    PostIdentifier,\n    PostIVIdentifier,\n    ProfileIdentifier,\n} from '@masknet/shared-base'\nimport { openDB } from 'idb/with-async-ittr'\nimport { CryptoKeyToJsonWebKey } from '../../../utils-pure/index.js'\nimport { createDBAccessWithAsyncUpgrade, createTransaction } from '../utils/openDB.js'\nimport type { PostRecord, PostDB, PostReadOnlyTransaction, PostReadWriteTransaction } from './type.js'\nimport type { PostDB_HistoryTypes, LatestPostDBRecord, LatestRecipientDetailDB } from './dbType.js'\n\ntype UpgradeKnowledge =\n    | {\n          version: 4\n          data: Map<string, AESJsonWebKey>\n      }\n    | undefined\nconst db = createDBAccessWithAsyncUpgrade<PostDB, UpgradeKnowledge>(\n    4,\n    7,\n    (currentTryOpen, knowledge) =>\n        openDB<PostDB>('maskbook-post-v2', currentTryOpen, {\n            async upgrade(db, oldVersion, _newVersion, transaction): Promise<void> {\n                if (oldVersion < 1) {\n                    // inline keys\n                    return void db.createObjectStore('post', { keyPath: 'identifier' })\n                }\n                /**\n                 * In the version 1 we use PostIdentifier to store post that identified by post iv\n                 * After upgrade to version 2, we use PostIVIdentifier to store it.\n                 * So we transform all old data into new data.\n                 */\n                if (oldVersion <= 1) {\n                    const store = transaction.objectStore('post')\n                    const old = await store.getAll()\n                    await store.clear()\n                    for (const each of old) {\n                        const id = PostIdentifier.from(each.identifier)\n                        if (id.isSome()) {\n                            const { postId, identifier } = id.value\n                            each.identifier = new PostIVIdentifier(identifier.network, postId).toText()\n                            await store.add(each)\n                        }\n                    }\n                }\n\n                /**\n                 * In the version 2 we use `recipients?: ProfileIdentifier[]`\n                 * After upgrade to version 3, we use `recipients: Record<string, RecipientDetail>`\n                 */\n                if (oldVersion <= 2) {\n                    const store = transaction.objectStore('post')\n                    for await (const cursor of store) {\n                        const v2record: PostDB_HistoryTypes.Version2PostRecord = cursor.value as any\n                        const oldType = v2record.recipients\n                            ?.map((x) => ProfileIdentifier.of(x.network, x.userId).unwrapOr(null!))\n                            .filter(Boolean)\n                        const newType: PostDB_HistoryTypes.Version3PostRecord['recipients'] = {}\n                        if (oldType !== undefined)\n                            for (const each of oldType) {\n                                newType[each.toText()] = { reason: [{ type: 'direct', at: new Date(0) }] }\n                            }\n                        const next: PostDB_HistoryTypes.Version3PostRecord = {\n                            ...v2record,\n                            recipients: newType,\n                            postBy: undefined,\n                            foundAt: new Date(0),\n                            recipientGroups: [],\n                        }\n                        await cursor.update(next satisfies PostDB_HistoryTypes.Version3PostRecord as any)\n                    }\n                }\n\n                /**\n                 * In the version 3 we use `recipients?: Record<string, RecipientDetail>`\n                 * After upgrade to version 4, we use `recipients: Map<ProfileIdentifier, RecipientDetail>`\n                 */\n                if (oldVersion <= 3) {\n                    const store = transaction.objectStore('post')\n                    for await (const cursor of store) {\n                        const v3Record: PostDB_HistoryTypes.Version3PostRecord = cursor.value as any\n                        const newType: PostDB_HistoryTypes.Version4PostRecord['recipients'] = new Map()\n                        for (const [key, value] of Object.entries(v3Record.recipients)) {\n                            newType.set(key, value)\n                        }\n                        const v4Record: PostDB_HistoryTypes.Version4PostRecord = {\n                            ...v3Record,\n                            recipients: newType,\n                        }\n                        await cursor.update(v4Record as any)\n                    }\n                }\n                /**\n                 * In version 4 we use CryptoKey, in version 5 we use JsonWebKey\n                 */\n                if (oldVersion <= 4) {\n                    const store = transaction.objectStore('post')\n                    for await (const cursor of store) {\n                        const v4Record: PostDB_HistoryTypes.Version4PostRecord = cursor.value as any\n                        const data = knowledge?.data\n                        if (!data) {\n                            await cursor.delete()\n                            continue\n                        }\n                        if (!v4Record.postCryptoKey) continue\n                        const v5Record: PostDB_HistoryTypes.Version5PostRecord = {\n                            ...v4Record,\n                            postCryptoKey: data.get(v4Record.identifier),\n                        }\n                        if (!v5Record.postCryptoKey) delete v5Record.postCryptoKey\n                        await cursor.update(v5Record as any)\n                    }\n                }\n\n                // version 6 ships a wrong db migration.\n                // therefore need to upgrade again to fix it.\n                if (oldVersion <= 6) {\n                    const store = transaction.objectStore('post')\n                    for await (const cursor of store) {\n                        const v5Record: PostDB_HistoryTypes.Version5PostRecord = cursor.value as any\n                        const by = v5Record.encryptBy\n                        // This is the correct data type\n                        if (typeof by === 'string') continue\n                        if (!by) continue\n                        cursor.value.encryptBy = new ECKeyIdentifier(\n                            by.curve,\n                            by.compressedPoint || by.encodedCompressedKey!,\n                        ).toText()\n                        cursor.update(cursor.value)\n                    }\n                    if (!store.indexNames.contains('persona, date'))\n                        store.createIndex('persona, date', ['encryptBy', 'foundAt'], { unique: false })\n                }\n            },\n        }),\n    async (db): Promise<UpgradeKnowledge> => {\n        if (db.version === 4) {\n            const map = new Map<string, AESJsonWebKey>()\n            const knowledge: UpgradeKnowledge = { version: 4, data: map }\n            const records = await createTransaction(db, 'readonly')('post').objectStore('post').getAll()\n            for (const r of records) {\n                const x = r.postCryptoKey\n                if (!x) continue\n                try {\n                    const key = await CryptoKeyToJsonWebKey(x as any as AESCryptoKey)\n                    map.set(r.identifier, key)\n                } catch {\n                    continue\n                }\n            }\n            return knowledge\n        }\n        return undefined\n    },\n    'maskbook-post-v2',\n)\n\nconst PostDBAccess = db\n\n/** @internal */\nexport async function withPostDBTransaction(task: (t: PostReadWriteTransaction) => Promise<void>) {\n    const t = createTransaction(await PostDBAccess(), 'readwrite')('post')\n    await task(t)\n}\n\n/** @internal */\nexport async function createPostDB(record: PostRecord, t?: PostReadWriteTransaction): Promise<void> {\n    t ||= createTransaction(await db(), 'readwrite')('post')\n    const toSave = postToDB(record)\n    await t.objectStore('post').add(toSave)\n}\n\n/** @internal */\nexport async function updatePostDB(\n    updateRecord: Partial<PostRecord> & Pick<PostRecord, 'identifier'>,\n    mode: 'append' | 'override',\n    t?: PostReadWriteTransaction,\n): Promise<void> {\n    t ||= createTransaction(await db(), 'readwrite')('post')\n    const emptyRecord: PostRecord = {\n        identifier: updateRecord.identifier,\n        recipients: new Map(),\n        postBy: undefined,\n        foundAt: new Date(),\n    }\n    const currentRecord = (await queryPostDB(updateRecord.identifier, t)) || emptyRecord\n    const nextRecord: PostRecord = { ...currentRecord, ...updateRecord }\n    const nextRecipients: LatestPostDBRecord['recipients'] =\n        mode === 'override' ? postToDB(nextRecord).recipients : postToDB(currentRecord).recipients\n    if (mode === 'append') {\n        if (updateRecord.recipients) {\n            if (typeof updateRecord.recipients === 'object' && typeof nextRecipients === 'object') {\n                for (const [id, date] of updateRecord.recipients) {\n                    nextRecipients.set(id.toText(), { reason: [{ at: date, type: 'direct' }] })\n                }\n            } else {\n                nextRecord.recipients = 'everyone'\n            }\n        }\n    }\n    const nextRecordInDBType = postToDB(nextRecord)\n    await t.objectStore('post').put(nextRecordInDBType)\n}\n\n/** @internal */\nexport async function queryPostDB(record: PostIVIdentifier, t?: PostReadOnlyTransaction): Promise<PostRecord | null> {\n    t ||= createTransaction(await db(), 'readonly')('post')\n    const result = await t.objectStore('post').get(record.toText())\n    if (result) return postOutDB(result)\n    return null\n}\n\n/** @internal */\nexport async function queryPostsDB(\n    query: string | ((data: PostRecord, id: PostIVIdentifier) => boolean),\n    t?: PostReadOnlyTransaction,\n): Promise<PostRecord[]> {\n    t ||= createTransaction(await db(), 'readonly')('post')\n    const selected: PostRecord[] = []\n    for await (const { value } of t.objectStore('post')) {\n        const idResult = PostIVIdentifier.from(value.identifier)\n        if (idResult.isNone()) {\n            console.warn('Invalid identifier', value.identifier)\n            continue\n        }\n        const id = idResult.value\n        if (typeof query === 'string') {\n            if (id.network === query) selected.push(postOutDB(value))\n        } else {\n            const v = postOutDB(value)\n            if (query(v, id)) selected.push(v)\n        }\n    }\n    return selected\n}\n\nfunction postOutDB(db: LatestPostDBRecord): PostRecord {\n    const { identifier, foundAt, postBy, postCryptoKey, encryptBy, interestedMeta, summary, url } = db\n    let recipients: PostRecord['recipients']\n    if (db.recipients === true) {\n        recipients = 'everyone'\n    } else {\n        recipients = new Map()\n        for (const [id, { reason }] of db.recipients) {\n            const identifier = ProfileIdentifier.from(id)\n            if (identifier.isNone()) continue\n            const detail = reason[0]\n            if (!detail) continue\n            recipients.set(identifier.value, detail.at)\n        }\n    }\n    return {\n        identifier: PostIVIdentifier.from(identifier).expect(\n            `data stored in the post database should be a valid PostIVIdentifier, but found ${identifier}`,\n        ),\n        postBy: ProfileIdentifier.of(postBy?.network, postBy?.userId).unwrapOr(undefined),\n        recipients,\n        foundAt,\n        postCryptoKey,\n        encryptBy: ECKeyIdentifier.from(encryptBy).unwrapOr(undefined),\n        interestedMeta,\n        summary,\n        url,\n    }\n}\nfunction postToDB(out: PostRecord): LatestPostDBRecord {\n    let recipients: LatestPostDBRecord['recipients']\n    if (out.recipients === 'everyone') {\n        recipients = true\n    } else {\n        const map = new Map<string, LatestRecipientDetailDB>()\n        for (const [id, detail] of out.recipients) {\n            map.set(id.toText(), { reason: [{ at: detail, type: 'direct' }] })\n        }\n        recipients = map\n    }\n    return {\n        ...out,\n        identifier: out.identifier.toText(),\n        encryptBy: out.encryptBy?.toText(),\n        recipients,\n    }\n}\n","import type {\n    IDBPDatabase,\n    DBSchema,\n    StoreNames,\n    IDBPTransaction,\n    IDBPObjectStore,\n    TypedDOMStringList,\n    IDBPCursorWithValueIteratorValue,\n    StoreKey,\n    IndexNames,\n    IDBPIndex,\n    IDBPCursorWithValue,\n    IDBPCursor,\n} from 'idb/with-async-ittr'\nimport { assertEnvironment, Environment } from '@dimensiondev/holoflows-kit'\n\nexport function createDBAccess<DBSchema>(opener: () => Promise<IDBPDatabase<DBSchema>>) {\n    let db: IDBPDatabase<DBSchema> | undefined = undefined\n    function clean() {\n        if (db) {\n            db.close()\n            db.addEventListener('close', () => (db = undefined), { once: true })\n        }\n        db = undefined\n    }\n    return async () => {\n        assertEnvironment(Environment.ManifestBackground)\n        if (db) {\n            try {\n                // try if the db still open\n                const t = db.transaction([db.objectStoreNames[0]], 'readonly', {})\n                t.commit()\n                return db\n            } catch {\n                clean()\n            }\n        }\n        db = await opener()\n        db.addEventListener('close', clean, { once: true })\n        db.addEventListener('error', clean, { once: true })\n        return db\n    }\n}\nexport function createDBAccessWithAsyncUpgrade<DBSchema, AsyncUpgradePreparedData>(\n    firstVersionThatRequiresAsyncUpgrade: number,\n    latestVersion: number,\n    opener: (currentTryOpenVersion: number, knowledge?: AsyncUpgradePreparedData) => Promise<IDBPDatabase<DBSchema>>,\n    asyncUpgradePrepare: (db: IDBPDatabase<DBSchema>) => Promise<AsyncUpgradePreparedData | undefined>,\n    dbName: string,\n) {\n    let db: IDBPDatabase<DBSchema> | undefined = undefined\n\n    let pendingOpen: Promise<IDBPDatabase<DBSchema>> | undefined\n    async function open(): Promise<IDBPDatabase<DBSchema>> {\n        assertEnvironment(Environment.ManifestBackground)\n        if (db?.version === latestVersion) return db\n        let currentVersion = firstVersionThatRequiresAsyncUpgrade\n        let lastVersionData: AsyncUpgradePreparedData | undefined = undefined\n        while (currentVersion < latestVersion) {\n            try {\n                db = await opener(currentVersion, lastVersionData)\n                // if the open success, the stored version is small or eq than currentTryOpenVersion\n                // let's call the prepare function to do all the async jobs\n                lastVersionData = await asyncUpgradePrepare(db)\n            } catch (error) {\n                if (currentVersion >= latestVersion) throw error\n                // if the stored database version is bigger than the currentTryOpenVersion\n                // It will fail and we just move to next version\n            }\n            currentVersion += 1\n            db?.close()\n            db = undefined\n        }\n        db = await opener(currentVersion, lastVersionData)\n        db.addEventListener('close', (e) => (db = undefined), { once: true })\n        if (!db) throw new Error('Invalid state')\n        return db\n    }\n    return async () => {\n        if (indexedDB.databases) {\n            const oldDBs = await indexedDB.databases()\n            const hasNoOldVersion = !oldDBs.some((db) => db.name === dbName)\n            const hasSameLatestVersion = oldDBs.some((db) => db.name === dbName && db.version === latestVersion)\n            if (hasNoOldVersion || hasSameLatestVersion) {\n                return opener(latestVersion)\n            }\n        }\n\n        // Share a Promise to prevent async upgrade for multiple times\n        if (pendingOpen) return pendingOpen\n        const promise = (pendingOpen = open())\n        promise.catch(() => (pendingOpen = undefined))\n        return promise\n    }\n}\ninterface IDBPSafeObjectStore<\n    DBTypes extends DBSchema,\n    TxStores extends Array<StoreNames<DBTypes>> = Array<StoreNames<DBTypes>>,\n    StoreName extends StoreNames<DBTypes> = StoreNames<DBTypes>,\n    Writable extends boolean = boolean,\n> extends Pick<\n        IDBPObjectStore<DBTypes, TxStores, StoreName>,\n        'get' | 'getAll' | 'getAllKeys' | 'getKey' | 'count' | 'autoIncrement' | 'indexNames' | 'keyPath' | 'name'\n    > {\n    add: Writable extends true ? IDBPObjectStore<DBTypes, TxStores, StoreName, 'readwrite'>['add'] : unknown\n    clear: Writable extends true ? IDBPObjectStore<DBTypes, TxStores, StoreName, 'readwrite'>['clear'] : unknown\n    delete: Writable extends true ? IDBPObjectStore<DBTypes, TxStores, StoreName, 'readwrite'>['delete'] : unknown\n    put: Writable extends true ? IDBPObjectStore<DBTypes, TxStores, StoreName, 'readwrite'>['put'] : unknown\n\n    index<IndexName extends IndexNames<DBTypes, StoreName>>(\n        name: IndexName,\n    ): IDBPIndex<DBTypes, TxStores, StoreName, IndexName, Writable extends true ? 'readwrite' : 'readonly'>\n    openCursor(\n        query?: StoreKey<DBTypes, StoreName> | IDBKeyRange | null,\n        direction?: IDBCursorDirection,\n    ): Promise<IDBPCursorWithValue<\n        DBTypes,\n        TxStores,\n        StoreName,\n        unknown,\n        Writable extends true ? 'readwrite' : 'readonly'\n    > | null>\n\n    openKeyCursor(\n        query?: StoreKey<DBTypes, StoreName> | IDBKeyRange | null,\n        direction?: IDBCursorDirection,\n    ): Promise<IDBPCursor<\n        DBTypes,\n        TxStores,\n        StoreName,\n        unknown,\n        Writable extends true ? 'readwrite' : 'readonly'\n    > | null>\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<\n        IDBPCursorWithValueIteratorValue<\n            DBTypes,\n            TxStores,\n            StoreName,\n            unknown,\n            Writable extends true ? 'readwrite' : 'readonly'\n        >\n    >\n    iterate(\n        query?: StoreKey<DBTypes, StoreName> | IDBKeyRange | null,\n        direction?: IDBCursorDirection,\n    ): AsyncIterableIterator<\n        IDBPCursorWithValueIteratorValue<\n            DBTypes,\n            TxStores,\n            StoreName,\n            unknown,\n            Writable extends true ? 'readwrite' : 'readonly'\n        >\n    >\n}\nexport type IDBPSafeTransaction<\n    DBTypes extends DBSchema,\n    TxStores extends Array<StoreNames<DBTypes>>,\n    Mode extends IDBTransactionMode = 'readonly',\n> = Omit<IDBPTransaction<DBTypes, TxStores, Mode>, 'mode' | 'objectStoreNames' | 'objectStore' | 'store'> & {\n    readonly objectStoreNames: TypedDOMStringList<StoreNames<DBTypes> & string>\n    readonly mode: IDBTransactionMode\n    readonly __writable__?: Mode extends 'readwrite' ? true : boolean\n    readonly __stores__?: Record<\n        TxStores extends ReadonlyArray<infer ValueOfUsedStoreName>\n            ? ValueOfUsedStoreName extends string | number | symbol\n                ? ValueOfUsedStoreName\n                : never\n            : never,\n        never\n    >\n    objectStore<StoreName extends TxStores[number]>(\n        name: StoreName,\n    ): IDBPSafeObjectStore<DBTypes, StoreName[], StoreName, Mode extends 'readonly' ? boolean : true>\n}\n\nexport function createTransaction<DBType extends DBSchema, Mode extends 'readonly' | 'readwrite'>(\n    db: IDBPDatabase<DBType>,\n    mode: Mode,\n) {\n    // It must be a high order function to infer the type of UsedStoreName correctly.\n    return <UsedStoreName extends Array<StoreNames<DBType>> = []>(...storeNames: UsedStoreName) => {\n        return db.transaction(storeNames, mode) as IDBPSafeTransaction<DBType, UsedStoreName, Mode>\n    }\n}\n","import { polyfill } from '@masknet/secp256k1-webcrypto'\nimport { setTelemetryID } from '../services/helper/telemetry-id.js'\nimport { setupBuildInfo } from '@masknet/flags/build-info'\n\npolyfill()\nawait Promise.allSettled([setTelemetryID(false), setupBuildInfo()])\n","// The following file MUST be sync, otherwise it will miss the init event.\nimport /* webpackSync: true */ '../tasks/NotCancellable/OnInstall.js'\n\nimport './async-setup.js'\nawait import(/* webpackMode: 'eager' */ './post-async-setup.js')\n","import { fetchGlobal } from '@masknet/web3-providers/helpers'\nglobalThis.fetch = fetchGlobal\n","import { None, Some } from 'ts-results-es'\nimport { type IDBPDatabase, openDB } from 'idb/with-async-ittr'\nimport type { KVStorageBackend } from './types.js'\n\n/**\n * Create a KVStorageBackend that stores the data in the indexedDB\n * @param dbName The database name to use.\n * @param onChange When the database receives a change. onChange should broadcast this to all clients.\n * @param beforeAutoSync The promise to wait before the auto-sync starts.\n * @returns A KVStorageBackend\n */\nexport function createIndexedDB_KVStorageBackend(\n    dbName: string,\n    onChange: (key: string, value: unknown) => void,\n    beforeAutoSync = Promise.resolve(),\n): KVStorageBackend {\n    let db: IDBPDatabase | undefined\n\n    setInterval(() => {\n        if (!db) return\n        db.close()\n        db = undefined\n    }, 1000 * 60)\n\n    async function ensureDB() {\n        if (!db) db = await initDB()\n        return db\n    }\n    function initDB() {\n        return openDB(dbName, 1, {\n            upgrade(db, oldVersion, newVersion, transaction) {\n                db.createObjectStore('store')\n            },\n        })\n    }\n\n    return {\n        beforeAutoSync,\n        async getValue(key) {\n            const db = await ensureDB()\n            const t = db.transaction('store', 'readonly')\n            if ((await t.store.count(key)) === 0) return None\n            return Some(await t.store.get(key))\n        },\n        async setValue(key, value) {\n            const db = await ensureDB()\n            const t = db.transaction('store', 'readwrite')\n            await t.store.put(value, key)\n            onChange(key, value)\n        },\n    }\n}\n","import type { KVStorageBackend } from './types.js'\nimport { Some, None } from 'ts-results-es'\n\n/**\n * Create a KVStorageBackend that stores the data in the memory\n * @param onChange When the database receives a change. onChange should broadcast this to all clients.\n * @param beforeAutoSync The promise to wait before the auto-sync starts.\n * @returns A KVStorageBackend\n */\nexport function createInMemoryKVStorageBackend(\n    onChange: (key: string, value: unknown) => void,\n    beforeAutoSync = Promise.resolve(),\n): KVStorageBackend {\n    const storage = new Map<string, any>()\n    return {\n        beforeAutoSync,\n        async getValue(key) {\n            if (storage.has(key)) return Some(storage.get(key))\n            return None\n        },\n        async setValue(key, value) {\n            storage.set(key, value)\n            onChange(key, value)\n        },\n    }\n}\n","import { createIndexedDB_KVStorageBackend, createInMemoryKVStorageBackend, MaskMessages } from '@masknet/shared-base'\n\nexport const indexedDB_KVStorageBackend = createIndexedDB_KVStorageBackend('mask-kv', (k, v) =>\n    MaskMessages.events.__kv_backend_persistent__.sendByBroadcast([k, v]),\n)\nexport const inMemory_KVStorageBackend = createInMemoryKVStorageBackend((k, v) =>\n    MaskMessages.events.__kv_backend_in_memory__.sendByBroadcast([k, v]),\n)\n","import './storage-setup.js'\nimport './fetch.js'\nimport { startServices } from '../services/setup.js'\nimport '../tasks/setup.js' // Setup Tasks\n\nstartServices()\n","import { setupLegacySettingsAtBackground, setupMaskKVStorageBackend } from '@masknet/shared-base'\nimport { inMemory_KVStorageBackend, indexedDB_KVStorageBackend } from './kv-storage.js'\n\nimport { __deprecated__getStorage, __deprecated__setStorage } from '../utils/deprecated-storage.js'\n\nsetupMaskKVStorageBackend(indexedDB_KVStorageBackend, inMemory_KVStorageBackend)\nsetupLegacySettingsAtBackground(__deprecated__getStorage, __deprecated__setStorage)\n","export const gunServers = ['https://gun.r2d2.to/gun'] as const\n","import { gunServers } from './server.js'\ndeclare const Gun: typeof import('gun')\n\ntype GunRoot = ReturnType<typeof createGun>\nlet gun: GunRoot | undefined\nexport function getGunInstance(): GunRoot {\n    if (gun) return gun\n    return (gun = createGun())\n}\nexport const OnCloseEvent = new Set<() => void>()\n\nfunction createGun() {\n    class WebSocket extends globalThis.WebSocket {\n        constructor(url: string | URL) {\n            super(url)\n            const abort = (this.abort = () => {\n                gun?.off()\n                gun = undefined\n                this.close()\n                for (const each of OnCloseEvent) each()\n                console.log('[Network/gun] WebSocket of the Gun instance is killed due to inactive.')\n            })\n            const keepAlive = (this.keepAlive = () => {\n                if (this.timer) clearTimeout(this.timer)\n                this.timer = setTimeout(abort, 3 * 60 * 1000)\n            })\n            this.addEventListener(\n                'message',\n                (e) => {\n                    // if there is no meaningful data exchange, then do not keep the connection alive.\n                    if (typeof e.data === 'string' && e.data.length < 3) return\n                    keepAlive()\n                },\n                {},\n            )\n        }\n        private declare abort: () => void\n        private declare keepAlive: () => void\n        declare timer: ReturnType<typeof setTimeout> | undefined\n        override send(data: any) {\n            this.keepAlive()\n            super.send(data)\n        }\n        override get onclose() {\n            return null\n        }\n        override set onclose(f) {}\n    }\n\n    const _ = new Gun({\n        peers: [...gunServers],\n        localStorage: false,\n        radisk: true,\n        WebSocket,\n    })\n    _.opt({ retry: Number.POSITIVE_INFINITY })\n    return _\n}\n","import { EventIterator } from 'event-iterator'\nimport { getGunInstance, OnCloseEvent } from './instance.js'\n\nfunction getGunNodeFromPath(path: string[]) {\n    const resultNode = path.reduce((gun, path) => gun.get(path as never), getGunInstance())\n    return resultNode\n}\n/**\n * Get data from Gun. Equivalent as the following code:\n *\n * ```ts\n * gun.get(path[0]).get(path[1])....get(path[n]).once()\n * ```\n */\nexport function getGunData(...path: string[]) {\n    return new Promise<{ [x: string]: unknown } | string | number | undefined>((resolve) => {\n        getGunNodeFromPath(path).once(resolve)\n    })\n}\n\n/**\n * Set data on Gun. Equivalent as the following code:\n *\n * ```ts\n * gun.get(path[0]).get(path[1])....get(path[n]).put(data)\n * ```\n * @param path graph path on Gun\n * @param data data to be stored\n */\nexport function setGunData(path: string[], data: any) {\n    getGunNodeFromPath(path).put(data)\n}\n\n/**\n * Delete data on Gun. Equivalent as the following code:\n *\n * ```ts\n * gun.get(path[0]).get(path[1])....get(path[n]).put(null!)\n * ```\n * @param path graph path on Gun\n */\nexport function deleteGunData(path: string[]) {\n    getGunNodeFromPath(path).put(null!)\n}\n\n/**\n * Push data to the Gun data Set (Mathematical Set)\n * @param path graph path on Gun\n * @param value the object to be stored\n */\nexport function pushToGunDataArray(path: string[], value: object) {\n    getGunNodeFromPath(path).set(value)\n}\n\n/**\n * Subscribe future data on Gun.\n * When subscribing a Gun data Set (Mathematical Set), you will not get the immediate result back.\n *\n * @param path graph path on Gun\n * @param isT is the data type T\n * @param abortSignal the signal to stop subscribing\n */\nexport async function* subscribeGunMapData<T>(path: string[], isT: (x: unknown) => x is T, abortSignal: AbortSignal) {\n    yield* new EventIterator<T>((queue) => {\n        // gun.off() will remove ALL listener on it\n        let listenerClosed = false\n\n        function stop() {\n            queue.stop()\n            listenerClosed = true\n            OnCloseEvent.delete(stop)\n        }\n        abortSignal.addEventListener('abort', stop)\n        OnCloseEvent.add(stop)\n\n        const resultNode = getGunNodeFromPath(path)\n\n        resultNode.map().on((data) => {\n            if (listenerClosed) return\n            if (isT(data)) queue.push(data)\n        })\n    })\n}\n","import { decodeArrayBuffer, encodeArrayBuffer, isNonNull, unreachable } from '@masknet/kit'\nimport {\n    type DecryptStaticECDH_PostKey,\n    type DecryptEphemeralECDH_PostKey,\n    type EncryptionResultE2EMap,\n    EncryptPayloadNetwork,\n    EC_KeyCurve,\n    importEC_Key,\n    getEcKeyCurve,\n} from '@masknet/encryption'\nimport type { EC_Public_CryptoKey, EC_Public_JsonWebKey } from '@masknet/shared-base'\nimport { CryptoKeyToJsonWebKey } from '../../utils-pure/index.js'\nimport * as gun_utils from /* webpackDefer: true */ '@masknet/gun-utils'\nimport { EventIterator } from 'event-iterator'\nimport { isObject, noop, uniq } from 'lodash-es'\n\n// !!! Change how this file access Gun will break the compatibility of v40 payload decryption.\nexport async function GUN_queryPostKey_version40(\n    iv: Uint8Array,\n    whoAmI: string,\n): Promise<null | DecryptStaticECDH_PostKey> {\n    // PATH ON GUN: maskbook > posts > iv > userID\n    const result = await gun_utils.getGunData('maskbook', 'posts', encodeArrayBuffer(iv), whoAmI)\n    if (!isValidData(result)) return null\n    return {\n        encryptedPostKey: new Uint8Array(decodeArrayBuffer(result.encryptedKey)),\n        postKeyIV: new Uint8Array(decodeArrayBuffer(result.salt)),\n    }\n\n    type DataOnGun = {\n        encryptedKey: string\n        salt: string\n    }\n    function isValidData(x: typeof result): x is DataOnGun {\n        if (typeof x !== 'object') return false\n        if (!x) return false\n\n        const { encryptedKey, salt: encryptedKeyIV } = x\n        if (typeof encryptedKey !== 'string' || typeof encryptedKeyIV !== 'string') return false\n        return true\n    }\n}\n\nnamespace Version38Or39 {\n    export async function* GUN_queryPostKey_version39Or38(\n        version: -38 | -39,\n        iv: Uint8Array,\n        minePublicKey: EC_Public_CryptoKey,\n        network: EncryptPayloadNetwork,\n        abortSignal: AbortSignal,\n    ): AsyncGenerator<DecryptStaticECDH_PostKey, void, undefined> {\n        const minePublicKeyJWK = await CryptoKeyToJsonWebKey(minePublicKey)\n        const { keyHash, postHash } = await calculatePostKeyPartition(version, network, iv, minePublicKeyJWK)\n\n        /* cspell:disable-next-line */\n        // ? In this step we get something like [\"jzarhbyjtexiE7aB1DvQ\", \"jzarhuse6xlTAtblKRx9\"]\n        console.log(\n            `[@masknet/encryption] Reading key partition [${postHash[0]}][${keyHash}] and [${postHash[1]}][${keyHash}]`,\n        )\n        const internalNodeNames = uniq(\n            (\n                await Promise.all([\n                    //\n                    gun_utils.getGunData(postHash[0], keyHash),\n                    gun_utils.getGunData(postHash[1], keyHash),\n                ])\n            )\n                .filter(isNonNull)\n                .filter(isObject)\n                .map(Object.keys)\n                .flat()\n                .filter((x) => x !== '_'),\n        )\n        // ? In this step we get all keys in this category (gun2[postHash][keyHash])\n        const resultPromise = internalNodeNames.map((key) => gun_utils.getGunData(key))\n\n        const iter = new EventIterator<DecryptStaticECDH_PostKey>((queue) => {\n            // immediate results\n            for (const result of resultPromise) result.then(emit, noop)\n            // future results\n            Promise.all([\n                main(gun_utils.subscribeGunMapData([postHash[1]], isValidData, abortSignal)),\n                main(gun_utils.subscribeGunMapData([postHash[0]], isValidData, abortSignal)),\n            ]).then(() => queue.stop())\n\n            async function main(keyProvider: AsyncGenerator) {\n                for await (const data of keyProvider) Promise.resolve(data).then(emit, noop)\n            }\n            function emit(result: unknown) {\n                if (abortSignal.aborted) return\n                if (!isValidData(result)) return\n                queue.push({\n                    encryptedPostKey: new Uint8Array(decodeArrayBuffer(result.encryptedKey)),\n                    postKeyIV: new Uint8Array(decodeArrayBuffer(result.salt)),\n                })\n            }\n        })\n        yield* iter\n    }\n\n    /**\n     * Publish post keys on the gun\n     * @param version current payload\n     * @param postIV Post iv\n     * @param receiversKeys Keys needs to publish\n     */\n    export async function publishPostAESKey_version39Or38(\n        version: -39 | -38,\n        postIV: Uint8Array,\n        network: EncryptPayloadNetwork,\n        receiversKeys: EncryptionResultE2EMap,\n    ) {\n        const [postHash] = await hashIV(network, postIV)\n        if (version === -39) throw new Error('unreachable')\n        for (const result of receiversKeys.values()) {\n            try {\n                if (result.status === 'rejected') continue\n                const { encryptedPostKey, target, ivToBePublished } = result.value\n                if (!ivToBePublished) throw new Error('Missing salt')\n                const jwk = await CryptoKeyToJsonWebKey(target.key)\n                const keyHash = await hashKey38(jwk)\n                const post: DataOnGun = {\n                    encryptedKey: encodeArrayBuffer(encryptedPostKey),\n                    salt: encodeArrayBuffer(ivToBePublished),\n                }\n                console.log(`gun[${postHash}][${keyHash}].push(`, post, ')')\n                gun_utils.pushToGunDataArray([postHash, keyHash], post)\n            } catch (error) {\n                console.error('[@masknet/encryption] An error occurs when sending E2E keys', error)\n            }\n        }\n    }\n\n    type DataOnGun = {\n        encryptedKey: string\n        salt: string\n    }\n\n    function isValidData(data: unknown): data is DataOnGun {\n        if (!data) return false\n        if (typeof data !== 'object') return false\n        const { encryptedKey, salt } = data as DataOnGun\n        if (typeof encryptedKey !== 'string') return false\n        if (typeof salt !== 'string') return false\n        return true\n    }\n\n    async function calculatePostKeyPartition(\n        version: -38 | -39,\n        network: EncryptPayloadNetwork,\n        iv: Uint8Array,\n        key: EC_Public_JsonWebKey,\n    ) {\n        const postHash = await hashIV(network, iv)\n        // In version > -39, we will use stable hash to prevent unstable result for key hashing\n\n        const keyHash = version === -39 ? await hashKey39(key) : await hashKey38(key)\n        return { postHash, keyHash }\n    }\n\n    async function hashIV(network: EncryptPayloadNetwork, iv: Uint8Array): Promise<[string, string]> {\n        const hashPair = '9283464d-ee4e-4e8d-a7f3-cf392a88133f'\n        const N = 2\n\n        const hash = (await GUN_SEA_work(encodeArrayBuffer(iv), hashPair)).slice(0, N)\n        const networkHint = getNetworkHint(network)\n        return [`${networkHint}${hash}`, `${networkHint}-${hash}`]\n    }\n\n    function getNetworkHint(x: EncryptPayloadNetwork) {\n        if (x === EncryptPayloadNetwork.Facebook) return ''\n        if (x === EncryptPayloadNetwork.Twitter) return 'twitter-'\n        if (x === EncryptPayloadNetwork.Minds) return 'minds-'\n        if (x === EncryptPayloadNetwork.Instagram) return 'instagram-'\n        if (x === EncryptPayloadNetwork.Unknown)\n            throw new TypeError('[@masknet/encryption] Current network is not correctly configured.')\n        unreachable(x)\n    }\n\n    // The difference between V38 and V39 is: V39 is not stable (JSON.stringify)\n    // it's an implementation bug but for backward compatibility, it cannot be changed.\n    // Therefore we upgraded the version and use a stable hash.\n    async function hashKey39(key: EC_Public_JsonWebKey) {\n        const hashPair = '10198a2f-205f-45a6-9987-3488c80113d0'\n        const N = 2\n\n        const jwk = JSON.stringify(key)\n        const hash = await GUN_SEA_work(jwk, hashPair)\n        return hash.slice(0, N)\n    }\n\n    async function hashKey38(jwk: EC_Public_JsonWebKey) {\n        const hashPair = '10198a2f-205f-45a6-9987-3488c80113d0'\n        const N = 2\n\n        const hash = await GUN_SEA_work(jwk.x! + jwk.y!, hashPair)\n        return hash.slice(0, N)\n    }\n}\n\n// This is a self contained Gun.SEA.work implementation that only contains code path we used.\nasync function GUN_SEA_work(data: Uint8Array | string, salt: Uint8Array | string) {\n    if (typeof data === 'string') data = new TextEncoder().encode(data)\n    if (typeof salt === 'string') salt = new TextEncoder().encode(salt)\n    const key = await crypto.subtle.importKey('raw', data, { name: 'PBKDF2' }, false, ['deriveBits'])\n    const params: Pbkdf2Params = { name: 'PBKDF2', iterations: 100000, salt, hash: { name: 'SHA-256' } }\n    const derived = await crypto.subtle.deriveBits(params, key, 512)\n    return btoa(String.fromCharCode(...new Uint8Array(derived)))\n}\n\nnamespace Version37 {\n    export async function* GUN_queryPostKey_version37(\n        iv: Uint8Array,\n        minePublicKey: EC_Public_CryptoKey,\n        network: EncryptPayloadNetwork,\n        abortSignal: AbortSignal,\n    ): AsyncGenerator<DecryptEphemeralECDH_PostKey, void, undefined> {\n        const minePublicKeyJWK = await CryptoKeyToJsonWebKey(minePublicKey)\n        const { keyHash, postHash, networkHint } = await calculatePostKeyPartition(network, iv, minePublicKeyJWK)\n\n        /* cspell:disable-next-line */\n        // ? In this step we get something like [\"jzarhbyjtexiE7aB1DvQ\", \"jzarhuse6xlTAtblKRx9\"]\n        const keyPartition = `${networkHint}-${postHash}-${keyHash}`\n        console.log(`[@masknet/encryption] Reading key partition [${keyPartition}]`)\n        const internalNodeNames = await gun_utils.getGunData(keyPartition).then((x) => {\n            if (!x) return []\n            if (typeof x !== 'object') return []\n            return Object.keys(x)\n        })\n        // ? In this step we get all keys in this category (gun2[keyPartition])\n        const resultPromise = internalNodeNames.map((key) => gun_utils.getGunData(key))\n\n        const iter = new EventIterator<DecryptEphemeralECDH_PostKey>((queue) => {\n            // immediate results\n            for (const result of resultPromise) result.then(emit, noop)\n\n            // future results\n            main(gun_utils.subscribeGunMapData([keyPartition], isValidData, abortSignal))\n\n            async function main(keyProvider: AsyncGenerator) {\n                for await (const data of keyProvider) Promise.resolve(data).then(emit, noop)\n                queue.stop()\n            }\n            async function emit(result: unknown) {\n                if (abortSignal.aborted) return\n                if (!isValidData(result)) return\n\n                const data: DecryptEphemeralECDH_PostKey = {\n                    encryptedPostKey: new Uint8Array(decodeArrayBuffer(result.e)),\n                }\n                if (result.k && result.c) {\n                    data.ephemeralPublicKey = (\n                        await importEC_Key(new Uint8Array(decodeArrayBuffer(result.k)), result.c)\n                    ).unwrap()\n                }\n                queue.push(data)\n            }\n        })\n        yield* iter\n    }\n\n    /**\n     * Publish post keys on the gun\n     * @param postIV Post iv\n     * @param receiversKeys Keys needs to publish\n     */\n    export async function publishPostAESKey_version37(\n        postIV: Uint8Array,\n        network: EncryptPayloadNetwork,\n        receiversKeys: EncryptionResultE2EMap,\n    ) {\n        const networkPartition = getNetworkPartition(network)\n        const postHash = await hashIV(postIV)\n        for (const result of receiversKeys.values()) {\n            try {\n                if (result.status === 'rejected') continue\n                const { encryptedPostKey, target, ephemeralPublicKey } = result.value\n                const jwk = await CryptoKeyToJsonWebKey(target.key)\n                const keyPartition = `${networkPartition}-${postHash}-${await hashKey(jwk)}`\n                const post: DataOnGun = {\n                    e: encodeArrayBuffer(encryptedPostKey),\n                }\n                if (ephemeralPublicKey) {\n                    post.c = getEcKeyCurve(ephemeralPublicKey)\n                    post.k = encodeArrayBuffer(new Uint8Array(await crypto.subtle.exportKey('raw', ephemeralPublicKey)))\n                }\n                console.log(`[@masknet/encryption] gun[${keyPartition}].push(`, post, ')')\n                gun_utils.pushToGunDataArray([keyPartition], post)\n            } catch (error) {\n                console.error('[@masknet/encryption] An error occurs when sending E2E keys', error)\n            }\n        }\n    }\n\n    // we need to make it short, but looks like gun does not support storing Uint8Array?\n    type DataOnGun = {\n        /** encrypted key */\n        e: string\n        /** ephemeral public key chain */\n        c?: EC_KeyCurve\n        /** ephemeral public key */\n        k?: string\n    }\n\n    function isValidData(data: unknown): data is DataOnGun {\n        if (!data) return false\n        if (typeof data !== 'object') return false\n        const { e, c, k } = data as DataOnGun\n        if (typeof e !== 'string') return false\n        if (![EC_KeyCurve.secp256k1, EC_KeyCurve.secp256p1, undefined].includes(c)) return false\n        if (typeof k !== 'string' && k !== undefined) return false\n        return true\n    }\n\n    async function calculatePostKeyPartition(\n        network: EncryptPayloadNetwork,\n        iv: Uint8Array,\n        key: EC_Public_JsonWebKey,\n    ) {\n        const postHash = await hashIV(iv)\n        const keyHash = await hashKey(key)\n        return { postHash, keyHash, networkHint: getNetworkPartition(network) }\n    }\n\n    async function hashIV(iv: Uint8Array): Promise<string> {\n        const hashPair = '9283464d-ee4e-4e8d-a7f3-cf392a88133f'\n        const N = 2\n\n        return (await GUN_SEA_work(encodeArrayBuffer(iv), hashPair)).slice(0, N)\n    }\n\n    async function hashKey(jwk: EC_Public_JsonWebKey) {\n        const hashPair = 'ace7ab0c-5507-4bdd-9d43-e4249a48e720'\n        const N = 2\n\n        const hash = await GUN_SEA_work(jwk.x! + jwk.y!, hashPair)\n        return hash.slice(0, N)\n    }\n\n    function getNetworkPartition(x: EncryptPayloadNetwork) {\n        if (x === EncryptPayloadNetwork.Facebook) return '37-fb'\n        if (x === EncryptPayloadNetwork.Twitter) return '37-tw'\n        if (x === EncryptPayloadNetwork.Minds) return '37-minds'\n        if (x === EncryptPayloadNetwork.Instagram) return '37-ins'\n        if (x === EncryptPayloadNetwork.Unknown)\n            throw new TypeError('[@masknet/encryption] Current network is not correctly configured.')\n        unreachable(x)\n    }\n}\n\nexport const { GUN_queryPostKey_version39Or38, publishPostAESKey_version39Or38 } = Version38Or39\nexport const { GUN_queryPostKey_version37, publishPostAESKey_version37 } = Version37\n","import type { PersonaInformation, ProfileInformation } from '@masknet/shared-base'\nimport { noop } from 'lodash-es'\nimport { queryAvatarsDataURL } from '../../database/avatar-cache/avatar.js'\nimport {\n    type FullPersonaDBTransaction,\n    type PersonaRecord,\n    type ProfileRecord,\n    queryProfilesDB,\n} from '../../database/persona/db.js'\n\n/** @internal */\nexport function toProfileInformation(profiles: ProfileRecord[]) {\n    return {\n        mustNotAwaitThisWithInATransaction: (async () => {\n            const result: ProfileInformation[] = []\n            for (const profile of profiles) {\n                result.push({\n                    identifier: profile.identifier,\n                    nickname: profile.nickname,\n                    linkedPersona: profile.linkedPersona,\n                    createAt: profile.createdAt,\n                })\n            }\n\n            const avatars = await queryAvatarsDataURL(result.map((x) => x.identifier))\n            result.forEach((x) => avatars.has(x.identifier) && (x.avatar = avatars.get(x.identifier)))\n            return result\n        })(),\n    }\n}\n\n/** @internal */\nexport function toPersonaInformation(personas: PersonaRecord[], t: FullPersonaDBTransaction<'readonly'>) {\n    const personaInfo: PersonaInformation[] = []\n    const dbQueryPass2: Array<Promise<void>> = []\n    const dbQuery: Array<Promise<void>> = personas.map(async (persona) => {\n        const map: ProfileInformation[] = []\n        personaInfo.push({\n            nickname: persona.nickname,\n            identifier: persona.identifier,\n            address: persona.address,\n            linkedProfiles: map,\n        })\n\n        if (persona.linkedProfiles.size) {\n            const profiles = await queryProfilesDB({ identifiers: [...persona.linkedProfiles.keys()] }, t)\n            // we must not await toProfileInformation cause it is tx of another db.\n            dbQueryPass2.push(\n                toProfileInformation(profiles).mustNotAwaitThisWithInATransaction.then((x) => void map.push(...x)),\n            )\n        }\n    })\n    dbQueryPass2.push(\n        queryAvatarsDataURL(personas.map((x) => x.identifier))\n            .then((avatars) => {\n                for (const [id, avatar] of avatars) {\n                    const info = personaInfo.find((x) => x.identifier === id)\n                    if (info) info.avatar = avatar\n                }\n            })\n            .catch(noop),\n    )\n\n    return {\n        // we have to split two arrays for them and await them one by one, otherwise it will be race condition\n        mustNotAwaitThisWithInATransaction: Promise.all(dbQuery)\n            .then(() => Promise.all(dbQueryPass2))\n            .then(() => personaInfo),\n    }\n}\n","import type { NormalizedBackup } from '@masknet/backup-format'\nimport { compact, flatten, sumBy } from 'lodash-es'\n\nexport interface BackupSummary {\n    personas: string[]\n    accounts: number\n    posts: number\n    contacts: number\n    relations: number\n    files: number\n    wallets: string[]\n    createdAt: number\n    countOfWallets: number\n}\n\nexport function getBackupSummary(json: NormalizedBackup.Data): BackupSummary {\n    let files = 0\n\n    try {\n        files = Number((json.plugins?.['com.maskbook.fileservice'] as any)?.length || 0)\n    } catch {}\n\n    const ownerPersonas = [...json.personas.values()].filter((persona) => !persona.privateKey.isNone())\n    const ownerProfiles = flatten(ownerPersonas.map((persona) => [...persona.linkedProfiles.keys()])).map((item) =>\n        item.toText(),\n    )\n\n    const personas = compact(\n        ownerPersonas\n            .sort((p) => (p.nickname.unwrapOr(false) ? -1 : 0))\n            .map((p) => p.nickname.unwrapOr(p.identifier.rawPublicKey).trim()),\n    )\n    const contacts = [...json.profiles.values()].filter((profile) => {\n        return !ownerProfiles.includes(profile.identifier.toText()) && profile.linkedPersona.isSome()\n    })\n    return {\n        // Names or publicKeys */\n        personas,\n        accounts: sumBy(ownerPersonas, (persona) => persona.linkedProfiles.size),\n        posts: json.posts.size,\n        contacts: contacts.length,\n        relations: json.relations.length,\n        files,\n        wallets: json.wallets.map((wallet) => wallet.address),\n        createdAt: Number(json.meta.createdAt.unwrapOr(undefined)),\n        countOfWallets: 0,\n    }\n}\n","export enum BackupErrors {\n    UnknownFormat = '[@masknet/backup-format] Unknown format.',\n    WrongCheckSum = '[@masknet/backup-format] Bad checksum.',\n}\n","import {\n    type AESJsonWebKey,\n    type EC_Private_JsonWebKey,\n    type EC_Public_JsonWebKey,\n    isAESJsonWebKey,\n    isEC_Private_JsonWebKey,\n    isEC_JsonWebKey,\n    ProfileIdentifier,\n    ECKeyIdentifier,\n} from '@masknet/shared-base'\nimport { isObjectLike } from 'lodash-es'\nimport { None, Some } from 'ts-results-es'\nimport { createEmptyNormalizedBackup } from '../normalize/index.js'\nimport type { NormalizedBackup } from '../normalize/type.js'\n\nexport function isBackupVersion0(obj: unknown): obj is BackupJSONFileVersion0 {\n    if (!isObjectLike(obj)) return false\n    try {\n        const data: BackupJSONFileVersion0 = obj as any\n        if (!data.local || !data.key?.key?.privateKey || !data.key.key.publicKey) return false\n        return true\n    } catch {\n        return false\n    }\n}\nexport async function normalizeBackupVersion0(file: BackupJSONFileVersion0): Promise<NormalizedBackup.Data> {\n    const backup = createEmptyNormalizedBackup()\n    backup.meta.version = 0\n    backup.meta.maskVersion = Some('<=1.3.2')\n\n    const { local } = file\n    const { username, key } = file.key\n    const { publicKey, privateKey } = key\n\n    if (!isEC_JsonWebKey(publicKey)) return backup\n\n    const persona: NormalizedBackup.PersonaBackup = {\n        identifier: (await ECKeyIdentifier.fromJsonWebKey(publicKey)).unwrap(),\n        publicKey,\n        linkedProfiles: new Map(),\n        localKey: isAESJsonWebKey(local) ? Some(local) : None,\n        privateKey: isEC_Private_JsonWebKey(privateKey) ? Some(privateKey) : None,\n        mnemonic: None,\n        nickname: None,\n        createdAt: None,\n        updatedAt: None,\n        address: None,\n    }\n    backup.personas.set(persona.identifier, persona)\n\n    const identifier = ProfileIdentifier.of('facebook.com', username)\n    if (identifier.isSome()) {\n        const profile: NormalizedBackup.ProfileBackup = {\n            identifier: identifier.value,\n            linkedPersona: Some(persona.identifier),\n            createdAt: None,\n            updatedAt: None,\n            localKey: isAESJsonWebKey(local) ? Some(local) : None,\n            nickname: None,\n        }\n        backup.profiles.set(profile.identifier, profile)\n        persona.linkedProfiles.set(profile.identifier, void 0)\n    }\n\n    return backup\n}\ninterface BackupJSONFileVersion0 {\n    key: {\n        username: string\n        key: { publicKey: EC_Public_JsonWebKey; privateKey?: EC_Private_JsonWebKey }\n        algor: unknown\n        usages: string[]\n    }\n    local: AESJsonWebKey\n}\n","import {\n    type AESJsonWebKey,\n    type EC_Private_JsonWebKey,\n    type EC_Public_JsonWebKey,\n    isEC_Private_JsonWebKey,\n    isEC_JsonWebKey,\n    isAESJsonWebKey,\n    ProfileIdentifier,\n    ECKeyIdentifier,\n} from '@masknet/shared-base'\nimport { isObjectLike } from 'lodash-es'\nimport { None, Some } from 'ts-results-es'\nimport { createEmptyNormalizedBackup } from '../normalize/index.js'\nimport type { NormalizedBackup } from '../normalize/type.js'\n\nexport function isBackupVersion1(obj: unknown): obj is BackupJSONFileVersion1 {\n    if (!isObjectLike(obj)) return false\n    try {\n        const data: BackupJSONFileVersion1 = obj as any\n        if (data.version !== 1) return false\n        if (!Array.isArray(data.whoami)) return false\n        if (!data.whoami) return false\n        return true\n    } catch {\n        return false\n    }\n}\nexport async function normalizeBackupVersion1(file: BackupJSONFileVersion1): Promise<NormalizedBackup.Data> {\n    const backup = createEmptyNormalizedBackup()\n\n    backup.meta.version = 1\n    if (!file.grantedHostPermissions) backup.meta.maskVersion = Some('<=1.5.2')\n    else if (!file.maskbookVersion) backup.meta.maskVersion = Some('<=1.6.0')\n\n    if (file.grantedHostPermissions) {\n        backup.settings.grantedHostPermissions = file.grantedHostPermissions\n    }\n\n    const { whoami, people } = file\n    for (const { network, publicKey, userId, nickname, localKey, privateKey } of [...whoami, ...(people || [])]) {\n        const identifier = ProfileIdentifier.of(network, userId).expect(\n            `backup should not contain invalid identifier parts ${network} and ${userId}`,\n        )\n        const profile: NormalizedBackup.ProfileBackup = {\n            identifier,\n            nickname: nickname ? Some(nickname) : None,\n            createdAt: None,\n            updatedAt: None,\n            localKey: None,\n            linkedPersona: None,\n        }\n\n        if (isEC_JsonWebKey(publicKey)) {\n            const personaID = (await ECKeyIdentifier.fromJsonWebKey(publicKey)).unwrap()\n            const persona: NormalizedBackup.PersonaBackup = backup.personas.get(personaID) || {\n                identifier: personaID,\n                nickname: None,\n                linkedProfiles: new Map(),\n                publicKey,\n                privateKey: None,\n                localKey: None,\n                mnemonic: None,\n                createdAt: None,\n                updatedAt: None,\n                address: None,\n            }\n            profile.linkedPersona = Some(personaID)\n\n            if (isEC_Private_JsonWebKey(privateKey)) {\n                persona.privateKey = Some(privateKey)\n            }\n            backup.personas.set(personaID, persona)\n            persona.linkedProfiles.set(profile.identifier, void 0)\n        }\n        if (isAESJsonWebKey(localKey)) {\n            profile.localKey = Some(localKey)\n            if (profile.linkedPersona.isSome() && backup.personas.has(profile.linkedPersona.value)) {\n                backup.personas.get(profile.linkedPersona.value)!.localKey = Some(localKey)\n            }\n        }\n    }\n\n    return backup\n}\n\ninterface BackupJSONFileVersion1 {\n    maskbookVersion?: string\n    version: 1\n    whoami: Array<{\n        network: string\n        userId: string\n        publicKey: EC_Public_JsonWebKey\n        privateKey: EC_Private_JsonWebKey\n        localKey: AESJsonWebKey\n        previousIdentifiers?: Array<{ network: string; userId: string }>\n        nickname?: string\n    }>\n    people?: Array<{\n        network: string\n        userId: string\n        publicKey: EC_Public_JsonWebKey\n        previousIdentifiers?: Array<{ network: string; userId: string }>\n        nickname?: string\n        groups?: Array<{ network: string; groupID: string; virtualGroupOwner: string | null }>\n\n        // Note: those props are not existed in the backup, just to make the code more readable\n        privateKey?: EC_Private_JsonWebKey\n        localKey?: AESJsonWebKey\n    }>\n    grantedHostPermissions?: string[]\n}\n","import { sum } from 'lodash-es'\n\n/** @internal */\nexport function hex2buffer(hexString: string, padded?: boolean) {\n    if (hexString.length % 2) {\n        hexString = '0' + hexString\n    }\n    let res = new Uint8Array(hexString.length / 2)\n    for (let i = 0; i < hexString.length; i += 2) {\n        const c = hexString.slice(i, i + 2)\n        res[(i - 1) / 2] = Number.parseInt(c, 16)\n    }\n    // BN padding\n    if (padded) {\n        let len = res.length\n        len = len > 32 ? (len > 48 ? 66 : 48) : 32\n        if (res.length < len) {\n            res = concat(new Uint8Array(len - res.length), res)\n        }\n    }\n    return res\n}\n\n/** @internal */\nfunction concat(...buf: Array<Uint8Array | number[]>) {\n    const res = new Uint8Array(sum(buf.map((item) => item.length)))\n    let offset = 0\n    buf.forEach((item) => {\n        for (let i = 0; i < item.length; i += 1) {\n            res[offset + i] = item[i]\n        }\n        offset += item.length\n    })\n    return res\n}\n","import { decodeArrayBuffer, encodeArrayBuffer, safeUnreachable } from '@masknet/kit'\nimport {\n    ECKeyIdentifier,\n    isAESJsonWebKey,\n    isEC_Private_JsonWebKey,\n    isEC_Public_JsonWebKey,\n    PostIVIdentifier,\n    ProfileIdentifier,\n    type RelationFavor,\n} from '@masknet/shared-base'\nimport __ from 'elliptic'\nimport { Convert } from 'pvtsutils'\nimport { decode, encode } from '@msgpack/msgpack'\nimport { None, Some } from 'ts-results-es'\nimport { createEmptyNormalizedBackup } from '../normalize/index.js'\nimport type { NormalizedBackup } from '../normalize/type.js'\nimport { hex2buffer } from '../utils/hex2buffer.js'\n\nexport function isBackupVersion2(item: unknown): item is BackupJSONFileVersion2 {\n    try {\n        const x = item as BackupJSONFileVersion2\n        return x._meta_.version === 2\n    } catch {}\n    return false\n}\n\nexport async function normalizeBackupVersion2(item: BackupJSONFileVersion2): Promise<NormalizedBackup.Data> {\n    const backup = createEmptyNormalizedBackup()\n\n    backup.meta.version = 2\n    backup.meta.maskVersion = Some(item._meta_.maskbookVersion)\n    backup.meta.createdAt = Some(new Date(item._meta_.createdAt))\n    backup.settings.grantedHostPermissions = item.grantedHostPermissions\n\n    const { personas, posts, profiles, relations, wallets, plugin } = item\n\n    for (const persona of personas) {\n        const { publicKey } = persona\n        if (!isEC_Public_JsonWebKey(publicKey)) continue\n        const identifier = (await ECKeyIdentifier.fromJsonWebKey(publicKey)).unwrap()\n        const normalizedPersona: NormalizedBackup.PersonaBackup = {\n            identifier,\n            linkedProfiles: new Map(),\n            publicKey,\n            privateKey: isEC_Private_JsonWebKey(persona.privateKey) ? Some(persona.privateKey) : None,\n            localKey: isAESJsonWebKey(persona.localKey) ? Some(persona.localKey) : None,\n            createdAt: Some(new Date(persona.createdAt)),\n            updatedAt: Some(new Date(persona.updatedAt)),\n            nickname: persona.nickname ? Some(persona.nickname) : None,\n            mnemonic: None,\n            address: persona.address ? Some(persona.address) : None,\n        }\n        for (const [profile] of persona.linkedProfiles) {\n            const id = ProfileIdentifier.from(profile)\n            if (id.isNone()) continue\n            normalizedPersona.linkedProfiles.set(id.value, null)\n        }\n        if (persona.mnemonic) {\n            const { words, parameter } = persona.mnemonic\n            normalizedPersona.mnemonic = Some({ words, hasPassword: parameter.withPassword, path: parameter.path })\n        }\n\n        backup.personas.set(identifier, normalizedPersona)\n    }\n\n    for (const profile of profiles) {\n        const identifier = ProfileIdentifier.from(profile.identifier)\n        if (identifier.isNone()) continue\n        const normalizedProfile: NormalizedBackup.ProfileBackup = {\n            identifier: identifier.value,\n            createdAt: Some(new Date(profile.createdAt)),\n            updatedAt: Some(new Date(profile.updatedAt)),\n            nickname: profile.nickname ? Some(profile.nickname) : None,\n            linkedPersona: ECKeyIdentifier.from(profile.linkedPersona),\n            localKey: isAESJsonWebKey(profile.localKey) ? Some(profile.localKey) : None,\n        }\n        backup.profiles.set(identifier.value, normalizedProfile)\n    }\n\n    for (const persona of backup.personas.values()) {\n        const toRemove: ProfileIdentifier[] = []\n        for (const profile of persona.linkedProfiles.keys()) {\n            if (backup.profiles.get(profile)?.linkedPersona?.unwrapOr(undefined) === persona.identifier) {\n                // do nothing\n            } else toRemove.push(profile)\n        }\n        for (const profile of toRemove) persona.linkedProfiles.delete(profile)\n    }\n\n    for (const post of posts) {\n        const identifier = PostIVIdentifier.from(post.identifier)\n        const postBy = ProfileIdentifier.from(post.postBy)\n        const encryptBy = ECKeyIdentifier.from(post.encryptBy)\n\n        if (identifier.isNone()) continue\n        const interestedMeta = new Map<string, any>()\n        const normalizedPost: NormalizedBackup.PostBackup = {\n            identifier: identifier.value,\n            foundAt: new Date(post.foundAt),\n            postBy,\n            interestedMeta,\n            encryptBy,\n            summary: post.summary ? Some(post.summary) : None,\n            url: post.url ? Some(post.url) : None,\n            postCryptoKey: isAESJsonWebKey(post.postCryptoKey) ? Some(post.postCryptoKey) : None,\n            recipients: None,\n        }\n\n        if (post.recipients) {\n            if (post.recipients === 'everyone')\n                normalizedPost.recipients = Some<NormalizedBackup.PostReceiverPublic>({ type: 'public' })\n            else {\n                const map = new Map<ProfileIdentifier, NormalizedBackup.RecipientReason[]>()\n                for (const [recipient, { reason }] of post.recipients) {\n                    const id = ProfileIdentifier.from(recipient)\n                    if (id.isNone()) continue\n                    const reasons: NormalizedBackup.RecipientReason[] = []\n                    map.set(id.value, reasons)\n                    for (const r of reason) {\n                        // we ignore the original reason because we no longer support group / auto sharing\n                        reasons.push({ type: 'direct', at: new Date(r.at) })\n                    }\n                }\n                normalizedPost.recipients = Some<NormalizedBackup.PostReceiverE2E>({ type: 'e2e', receivers: map })\n            }\n        }\n        if (post.interestedMeta) normalizedPost.interestedMeta = MetaFromJson(post.interestedMeta)\n\n        backup.posts.set(identifier.value, normalizedPost)\n    }\n\n    for (const relation of relations || []) {\n        const { profile, persona, favor } = relation\n        const a = ProfileIdentifier.from(profile)\n        const b = ECKeyIdentifier.from(persona)\n        if (a.isSome() && b.isSome()) {\n            backup.relations.push({\n                profile: a.value,\n                persona: b.value,\n                favor,\n            })\n        }\n    }\n\n    for (const wallet of wallets || []) {\n        if (wallet.privateKey?.d && !wallet.publicKey) {\n            // @ts-expect-error cjs-esm interop\n            const ec = new (__.ec || __.default.ec)('secp256k1')\n            const key = ec.keyFromPrivate(wallet.privateKey.d)\n            const hexPub = key.getPublic('hex').slice(2)\n            const hexX = hexPub.slice(0, hexPub.length / 2)\n            const hexY = hexPub.slice(hexPub.length / 2, hexPub.length)\n            wallet.privateKey.x = Convert.ToBase64Url(hex2buffer(hexX))\n            wallet.privateKey.y = Convert.ToBase64Url(hex2buffer(hexY))\n        }\n        const normalizedWallet: NormalizedBackup.WalletBackup = {\n            address: wallet.address,\n            name: wallet.name,\n            passphrase: wallet.passphrase ? Some(wallet.passphrase) : None,\n            mnemonicId: wallet.mnemonicId ? Some(wallet.mnemonicId) : None,\n            derivationPath: wallet.derivationPath ? Some(wallet.derivationPath) : None,\n            publicKey: isEC_Public_JsonWebKey(wallet.publicKey) ? Some(wallet.publicKey) : None,\n            privateKey: isEC_Private_JsonWebKey(wallet.privateKey) ? Some(wallet.privateKey) : None,\n            mnemonic: wallet.mnemonic\n                ? Some({\n                      words: wallet.mnemonic.words,\n                      hasPassword: wallet.mnemonic.parameter.withPassword,\n                      path: wallet.mnemonic.parameter.path,\n                  })\n                : None,\n            createdAt: new Date(wallet.createdAt),\n            updatedAt: new Date(wallet.updatedAt),\n        }\n        backup.wallets.push(normalizedWallet)\n    }\n\n    backup.plugins = plugin || {}\n\n    return backup\n}\n\nexport function generateBackupVersion2(item: NormalizedBackup.Data): BackupJSONFileVersion2 {\n    const now = new Date()\n    const result: BackupJSONFileVersion2 = {\n        _meta_: {\n            maskbookVersion: item.meta.maskVersion.unwrapOr('>=2.5.0'),\n            createdAt: Number(item.meta.createdAt.unwrapOr(now)),\n            type: 'maskbook-backup',\n            version: 2,\n        },\n        grantedHostPermissions: item.settings.grantedHostPermissions,\n        plugin: item.plugins,\n        personas: [],\n        posts: [],\n        profiles: [],\n        relations: [],\n        wallets: [],\n        userGroups: [],\n    }\n    for (const [id, data] of item.personas) {\n        result.personas.push({\n            identifier: id.toText(),\n            createdAt: Number(data.createdAt.unwrapOr(now)),\n            updatedAt: Number(data.updatedAt.unwrapOr(now)),\n            nickname: data.nickname.unwrapOr(undefined),\n            linkedProfiles: [...data.linkedProfiles.keys()].map((id) => [\n                id.toText(),\n                { connectionConfirmState: 'confirmed' } as LinkedProfileDetails,\n            ]),\n            publicKey: data.publicKey,\n            privateKey: data.privateKey.unwrapOr(undefined),\n            mnemonic: data.mnemonic\n                .map((data) => ({\n                    words: data.words,\n                    parameter: { path: data.path, withPassword: data.hasPassword },\n                }))\n                .unwrapOr(undefined),\n            localKey: data.localKey.unwrapOr(undefined),\n        })\n    }\n\n    for (const [id, data] of item.profiles) {\n        result.profiles.push({\n            identifier: id.toText(),\n            createdAt: Number(data.createdAt.unwrapOr(now)),\n            updatedAt: Number(data.updatedAt.unwrapOr(now)),\n            nickname: data.nickname.unwrapOr(undefined),\n            linkedPersona: data.linkedPersona.unwrapOr(undefined)?.toText(),\n            localKey: data.localKey.unwrapOr(undefined),\n        })\n    }\n\n    for (const [id, data] of item.posts) {\n        const item: BackupJSONFileVersion2['posts'][0] = {\n            identifier: id.toText(),\n            foundAt: Number(data.foundAt),\n            postBy: data.postBy.isSome() ? data.postBy.value.toText() : 'person:localhost/$unknown',\n            interestedMeta: MetaToJson(data.interestedMeta),\n            encryptBy: data.encryptBy.unwrapOr(undefined)?.toText(),\n            summary: data.summary.unwrapOr(undefined),\n            url: data.url.unwrapOr(undefined),\n            postCryptoKey: data.postCryptoKey.unwrapOr(undefined),\n            recipientGroups: [],\n            recipients: [],\n        }\n        result.posts.push(item)\n        if (data.recipients.isSome()) {\n            if (data.recipients.value.type === 'public') item.recipients = 'everyone'\n            else if (data.recipients.value.type === 'e2e') {\n                item.recipients = []\n                for (const [recipient, reasons] of data.recipients.value.receivers) {\n                    if (!reasons.length) continue\n                    item.recipients.push([\n                        recipient.toText(),\n                        {\n                            reason: [\n                                {\n                                    at: Number(reasons[0].at),\n                                    type: 'direct',\n                                },\n                            ],\n                        },\n                    ])\n                }\n            } else safeUnreachable(data.recipients.value)\n        }\n    }\n\n    for (const data of item.relations) {\n        result.relations!.push({\n            profile: data.profile.toText(),\n            persona: data.persona.toText(),\n            favor: data.favor,\n        })\n    }\n\n    for (const data of item.wallets) {\n        result.wallets!.push({\n            address: data.address,\n            name: data.name,\n            passphrase: data.passphrase.unwrapOr(undefined),\n            publicKey: data.publicKey.unwrapOr(undefined),\n            privateKey: data.privateKey.unwrapOr(undefined),\n            mnemonic: data.mnemonic\n                .map((data) => ({\n                    words: data.words,\n                    parameter: { path: data.path, withPassword: data.hasPassword },\n                }))\n                .unwrapOr(undefined),\n            createdAt: Number(data.createdAt),\n            updatedAt: Number(data.updatedAt),\n            derivationPath: data.derivationPath.unwrapOr(undefined),\n            mnemonicId: data.mnemonicId.unwrapOr(undefined),\n        })\n    }\n    return result\n}\n\nfunction MetaFromJson(meta: string | undefined): Map<string, unknown> {\n    if (!meta) return new Map()\n    const raw = decode(decodeArrayBuffer(meta))\n    if (typeof raw !== 'object' || !raw) return new Map()\n    return new Map(Object.entries(raw))\n}\nfunction MetaToJson(meta: ReadonlyMap<string, unknown>) {\n    return encodeArrayBuffer(encode(Object.fromEntries(meta.entries())))\n}\n\n/**\n * @see https://github.com/DimensionDev/Maskbook/issues/194\n */\ninterface BackupJSONFileVersion2 {\n    _meta_: {\n        version: 2\n        type: 'maskbook-backup'\n        maskbookVersion: string // e.g. \"1.8.0\"\n        createdAt: number // Unix timestamp\n    }\n    personas: Array<{\n        // ? PersonaIdentifier can be infer from the publicKey\n        identifier: string // PersonaIdentifier.toText()\n        mnemonic?: {\n            words: string\n            parameter: { path: string; withPassword: boolean }\n        }\n        publicKey: JsonWebKey\n        privateKey?: JsonWebKey\n        localKey?: JsonWebKey\n        nickname?: string\n        linkedProfiles: Array<[/** ProfileIdentifier.toText() */ string, LinkedProfileDetails]>\n        createdAt: number // Unix timestamp\n        updatedAt: number // Unix timestamp\n        address?: string\n    }>\n    profiles: Array<{\n        identifier: string // ProfileIdentifier.toText()\n        nickname?: string\n        localKey?: JsonWebKey\n        linkedPersona?: string // PersonaIdentifier.toText()\n        createdAt: number // Unix timestamp\n        updatedAt: number // Unix timestamp\n    }>\n    relations?: Array<{\n        profile: string // ProfileIdentifier.toText()\n        persona: string // PersonaIdentifier.toText()\n        favor: RelationFavor\n    }>\n    /** @deprecated */\n    userGroups: never[]\n    posts: Array<{\n        postBy: string // ProfileIdentifier.toText()\n        identifier: string // PostIVIdentifier.toText()\n        postCryptoKey?: JsonWebKey\n        recipients: 'everyone' | Array<[/** ProfileIdentifier.toText() */ string, { reason: RecipientReasonJSON[] }]>\n        /** @deprecated */\n        recipientGroups: never[]\n        foundAt: number // Unix timestamp\n        encryptBy?: string // PersonaIdentifier.toText()\n        url?: string\n        summary?: string\n        interestedMeta?: string // encoded by MessagePack\n    }>\n    wallets?: Array<{\n        address: string\n        name: string\n        passphrase?: string\n        publicKey?: JsonWebKey\n        privateKey?: JsonWebKey\n        mnemonic?: {\n            words: string\n            parameter: { path: string; withPassword: boolean }\n        }\n        createdAt: number // Unix timestamp\n        updatedAt: number // Unix timestamp\n        mnemonicId?: string\n        derivationPath?: string\n    }>\n    grantedHostPermissions: string[]\n    plugin?: Record<string, unknown>\n}\n\ninterface LinkedProfileDetails {\n    connectionConfirmState: 'confirmed' | 'pending' | 'denied'\n}\n\ntype RecipientReasonJSON = (\n    | { type: 'auto-share' }\n    | { type: 'direct' }\n    | { type: 'group'; /** @deprecated */ group: unknown }\n) & {\n    at: number\n}\n","import { None } from 'ts-results-es'\nimport { BackupErrors } from '../BackupErrors.js'\nimport { isBackupVersion0, normalizeBackupVersion0 } from '../version-0/index.js'\nimport { isBackupVersion1, normalizeBackupVersion1 } from '../version-1/index.js'\nimport { generateBackupVersion2, isBackupVersion2, normalizeBackupVersion2 } from '../version-2/index.js'\nimport type { NormalizedBackup } from './type.js'\n\nexport * from './type.js'\nasync function __normalizeBackup(data: unknown): Promise<NormalizedBackup.Data> {\n    if (isBackupVersion2(data)) return normalizeBackupVersion2(data)\n    if (isBackupVersion1(data)) return normalizeBackupVersion1(data)\n    if (isBackupVersion0(data)) return normalizeBackupVersion0(data)\n    throw new TypeError(BackupErrors.UnknownFormat)\n}\n\nexport async function normalizeBackup(data: unknown): Promise<NormalizedBackup.Data> {\n    const normalized = await __normalizeBackup(data)\n\n    // fix invalid URL\n    normalized.settings.grantedHostPermissions = normalized.settings.grantedHostPermissions.filter((url) =>\n        /^(http|<all_urls>)/.test(url),\n    )\n    return normalized\n}\n\n/** It will return the internal format. DO NOT rely on the detail of it! */\nexport function generateBackupRAW(data: NormalizedBackup.Data): unknown {\n    const result = generateBackupVersion2(data)\n    return result\n}\n\nexport function createEmptyNormalizedBackup(): NormalizedBackup.Data {\n    return {\n        meta: { version: 2, createdAt: None, maskVersion: None },\n        personas: new Map(),\n        profiles: new Map(),\n        posts: new Map(),\n        relations: [],\n        settings: { grantedHostPermissions: [] },\n        wallets: [],\n        plugins: {},\n    }\n}\n","import { Some, None } from 'ts-results-es'\nimport { ec as EC } from 'elliptic'\nimport * as wallet_ts from /* webpackDefer: true */ 'wallet.ts'\nimport { isNonNull } from '@masknet/kit'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport type { NormalizedBackup } from '@masknet/backup-format'\nimport {\n    toBase64URL,\n    type EC_Public_JsonWebKey,\n    type EC_Private_JsonWebKey,\n    type LegacyWalletRecord,\n} from '@masknet/shared-base'\nimport type { WalletRecord } from '../../../shared/definitions/wallet.js'\nimport { exportMnemonicWords, exportPrivateKey, getLegacyWallets, getWallets } from '../wallet/services/index.js'\n\nexport async function internal_wallet_backup() {\n    const wallet = await Promise.all([backupAllWallets(), backupAllLegacyWallets()])\n    return wallet.flat()\n}\n\nasync function backupAllWallets(): Promise<NormalizedBackup.WalletBackup[]> {\n    const wallets = await getWallets()\n    const allSettled = await Promise.allSettled(\n        wallets.map(async (wallet) => {\n            return {\n                ...wallet,\n                mnemonic: !wallet.configurable ? await exportMnemonicWords(wallet.address) : undefined,\n                privateKey: !wallet.configurable ? undefined : await exportPrivateKey(wallet.address),\n            }\n        }),\n    )\n    const wallets_ = allSettled.map((x) => (x.status === 'fulfilled' ? WalletRecordToJSONFormat(x.value) : null))\n    if (wallets_.some((x) => !x)) throw new Error('Failed to backup wallets.')\n    return wallets_.filter(isNonNull)\n}\n\nasync function backupAllLegacyWallets(): Promise<NormalizedBackup.WalletBackup[]> {\n    const x = await getLegacyWallets()\n    return x.map(LegacyWalletRecordToJSONFormat)\n}\nfunction WalletRecordToJSONFormat(\n    wallet: Omit<WalletRecord, 'type'> & {\n        mnemonic?: string\n        privateKey?: string\n    },\n): NormalizedBackup.WalletBackup {\n    const backup: NormalizedBackup.WalletBackup = {\n        name: wallet.name ?? '',\n        address: wallet.address,\n        createdAt: wallet.createdAt,\n        updatedAt: wallet.updatedAt,\n        derivationPath: None,\n        mnemonicId: None,\n        mnemonic: None,\n        passphrase: None,\n        publicKey: None,\n        privateKey: None,\n    }\n    if (wallet.mnemonic && wallet.derivationPath) {\n        backup.mnemonic = Some<NormalizedBackup.Mnemonic>({\n            words: wallet.mnemonic,\n            path: wallet.derivationPath,\n            hasPassword: false,\n        })\n    }\n\n    if (wallet.privateKey) backup.privateKey = Some(keyToJWK(wallet.privateKey, 'private'))\n\n    if (wallet.mnemonicId) backup.mnemonicId = Some(wallet.mnemonicId)\n\n    if (wallet.derivationPath) backup.derivationPath = Some(wallet.derivationPath)\n    return backup\n}\n\nfunction LegacyWalletRecordToJSONFormat(wallet: LegacyWalletRecord): NormalizedBackup.WalletBackup {\n    const backup: NormalizedBackup.WalletBackup = {\n        name: wallet.name ?? '',\n        address: wallet.address,\n        createdAt: wallet.createdAt,\n        updatedAt: wallet.updatedAt,\n        derivationPath: None,\n        mnemonicId: None,\n        mnemonic: None,\n        passphrase: None,\n        privateKey: None,\n        publicKey: None,\n    }\n\n    // generate keys for managed wallet\n    try {\n        const wallet_ = wallet\n        backup.passphrase = Some(wallet_.passphrase)\n        if (wallet_.mnemonic?.length)\n            backup.mnemonic = Some<NormalizedBackup.Mnemonic>({\n                words: wallet_.mnemonic.join(' '),\n                path: \"m/44'/60'/0'/0/0\",\n                hasPassword: false,\n            })\n        if (wallet_._public_key_ && isSameAddress(keyToAddr(wallet_._public_key_, 'public'), wallet.address))\n            backup.publicKey = Some(keyToJWK(wallet_._public_key_, 'public'))\n        if (wallet_._private_key_ && isSameAddress(keyToAddr(wallet_._private_key_, 'private'), wallet.address))\n            backup.privateKey = Some(keyToJWK(wallet_._private_key_, 'private'))\n    } catch (error) {\n        console.error(error)\n    }\n    return backup\n}\n\nfunction keyToJWK(key: string, type: 'public'): EC_Public_JsonWebKey\nfunction keyToJWK(key: string, type: 'private'): EC_Private_JsonWebKey\nfunction keyToJWK(key: string, type: 'public' | 'private'): JsonWebKey {\n    const ec = new EC('secp256k1')\n    const key_ = key.replace(/^0x/, '')\n    const keyPair = type === 'public' ? ec.keyFromPublic(key_) : ec.keyFromPrivate(key_)\n    const pubKey = keyPair.getPublic()\n    const privKey = keyPair.getPrivate()\n    return {\n        crv: 'K-256',\n        ext: true,\n        x: base64(pubKey.getX().toArray()),\n        y: base64(pubKey.getY().toArray()),\n        key_ops: ['deriveKey', 'deriveBits'],\n        kty: 'EC',\n        d: type === 'private' ? base64(privKey.toArray()) : undefined,\n    }\n}\n\nfunction base64(nums: number[]) {\n    return toBase64URL(new Uint8Array(nums).buffer)\n}\nfunction keyToAddr(key: string, type: 'public' | 'private'): string {\n    const ec = new EC('secp256k1')\n    const key_ = key.replace(/^0x/, '')\n    const keyPair = type === 'public' ? ec.keyFromPublic(key_) : ec.keyFromPrivate(key_)\n    return wallet_ts.EthereumAddress.from(Buffer.from(keyPair.getPublic(false, 'array'))).address\n}\n","import { None, Some } from 'ts-results-es'\nimport { timeout } from '@masknet/kit'\nimport type { PersonaIdentifier } from '@masknet/shared-base'\nimport { activatedPluginsWorker, type Plugin } from '@masknet/plugin-infra/background-worker'\nimport { createEmptyNormalizedBackup, type NormalizedBackup } from '@masknet/backup-format'\nimport { queryPersonasDB, queryProfilesDB, queryRelations } from '../../database/persona/db.js'\nimport { queryPostsDB } from '../../database/post/index.js'\nimport { internal_wallet_backup } from './internal_wallet_backup.js'\n\n/** @internal */\ninterface InternalBackupOptions {\n    hasPrivateKeyOnly?: boolean\n    noPosts?: boolean\n    noWallets?: boolean\n    noPersonas?: boolean\n    noProfiles?: boolean\n    onlyForPersona?: PersonaIdentifier\n    allProfile?: boolean\n    maskVersion?: string\n}\n/**\n * @internal\n * DO NOT expose this function as a service.\n */\n// TODO: use a single readonly transaction in this operation.\nexport async function createNewBackup(options: InternalBackupOptions): Promise<NormalizedBackup.Data> {\n    const { noPersonas, noPosts, noProfiles, noWallets, onlyForPersona, allProfile } = options\n    const file = createEmptyNormalizedBackup()\n    const { meta, personas, posts, profiles, relations, settings } = file\n\n    meta.version = 2\n    meta.maskVersion = Some(options.maskVersion || '>=2.21.0')\n    meta.createdAt = Some(new Date())\n\n    settings.grantedHostPermissions = (await browser.permissions.getAll()).origins || []\n\n    await Promise.allSettled([\n        noPersonas || backupPersonas(onlyForPersona ? [onlyForPersona] : undefined),\n        noProfiles || backupProfiles(onlyForPersona, allProfile),\n        (noPersonas && noProfiles) || backupAllRelations(),\n        noPosts || backupPosts(),\n        noWallets || internal_wallet_backup().then((w) => (file.wallets = w)),\n        backupPlugins().then((p) => (file.plugins = p)),\n    ])\n\n    return file\n\n    async function backupPersonas(of?: PersonaIdentifier[]) {\n        const data = await queryPersonasDB(\n            {\n                initialized: true,\n                hasPrivateKey: options.hasPrivateKeyOnly,\n                identifiers: of,\n            },\n            undefined,\n            true,\n        )\n        for (const persona of data) {\n            personas.set(persona.identifier, {\n                identifier: persona.identifier,\n                nickname: persona.nickname ? Some(persona.nickname) : None,\n                publicKey: persona.publicKey,\n                privateKey: persona.privateKey ? Some(persona.privateKey) : None,\n                localKey: persona.localKey ? Some(persona.localKey) : None,\n                createdAt: persona.createdAt ? Some(persona.createdAt) : None,\n                updatedAt: persona.updatedAt ? Some(persona.updatedAt) : None,\n                mnemonic: persona.mnemonic\n                    ? Some({\n                          hasPassword: persona.mnemonic.parameter.withPassword,\n                          path: persona.mnemonic.parameter.path,\n                          words: persona.mnemonic.words,\n                      })\n                    : None,\n                linkedProfiles: persona.linkedProfiles,\n                address: persona.address ? Some(persona.address) : None,\n            })\n        }\n    }\n\n    async function backupPosts() {\n        const data = await queryPostsDB(() => true)\n        for (const post of data) {\n            let recipients: NormalizedBackup.PostReceiverE2E | NormalizedBackup.PostReceiverPublic = {\n                type: 'public',\n            }\n            if (post.recipients !== 'everyone') {\n                recipients = {\n                    type: 'e2e',\n                    receivers: new Map(),\n                }\n                for (const [recipient, date] of post.recipients) {\n                    recipients.receivers.set(recipient, [{ at: date, type: 'direct' }])\n                }\n            }\n            posts.set(post.identifier, {\n                identifier: post.identifier,\n                foundAt: post.foundAt,\n                interestedMeta: post.interestedMeta || new Map(),\n                postBy: post.postBy ? Some(post.postBy) : None,\n                encryptBy: post.encryptBy ? Some(post.encryptBy) : None,\n                postCryptoKey: post.postCryptoKey ? Some(post.postCryptoKey) : None,\n                summary: post.summary ? Some(post.summary) : None,\n                url: post.url ? Some(post.url) : None,\n                recipients: Some(recipients),\n            })\n        }\n    }\n\n    async function backupProfiles(of?: PersonaIdentifier, all = false) {\n        const data = await queryProfilesDB({\n            hasLinkedPersona: !all,\n        })\n        for (const profile of data) {\n            if (of) {\n                if (!profile.linkedPersona) continue\n                if (profile.linkedPersona !== of) continue\n            }\n            profiles.set(profile.identifier, {\n                identifier: profile.identifier,\n                nickname: profile.nickname ? Some(profile.nickname) : None,\n                localKey: profile.localKey ? Some(profile.localKey) : None,\n                createdAt: profile.createdAt ? Some(profile.createdAt) : None,\n                updatedAt: profile.updatedAt ? Some(profile.updatedAt) : None,\n                linkedPersona: profile.linkedPersona ? Some(profile.linkedPersona) : None,\n            })\n        }\n    }\n\n    async function backupAllRelations() {\n        const data = await queryRelations(() => true)\n        for (const relation of data) {\n            relations.push({\n                favor: relation.favor,\n                persona: relation.linked,\n                profile: relation.profile,\n            })\n        }\n    }\n\n    async function backupPlugins() {\n        const plugins = Object.create(null) as Record<string, unknown>\n        const allPlugins = [...activatedPluginsWorker]\n\n        async function backup(plugin: Plugin.Worker.Definition): Promise<void> {\n            const backupCreator = plugin.backup?.onBackup\n            if (!backupCreator) return\n\n            async function backupPlugin() {\n                const result = await timeout(backupCreator!(), 60 * 1000, 'Timeout to backup creator.')\n                if (result.isNone()) return\n                // We limit the plugin contributed backups must be simple objects.\n                // We may allow plugin to store binary if we're moving to binary backup format like MessagePack.\n                plugins[plugin.ID] = result.map(JSON.stringify).map(JSON.parse).value\n            }\n            if (process.env.NODE_ENV === 'development') return backupPlugin()\n            return backupPlugin().catch((error) =>\n                console.error(`[@masknet/plugin-infra] Plugin ${plugin.ID} failed to backup`, error),\n            )\n        }\n\n        await Promise.all(allPlugins.map(backup))\n        return plugins\n    }\n}\n","import { type BackupSummary, generateBackupRAW, getBackupSummary } from '@masknet/backup-format'\nimport { createNewBackup } from './internal_create.js'\nimport { env } from '@masknet/flags'\n\nconst maskVersion = env.VERSION\nexport async function generateBackupPreviewInfo(): Promise<BackupSummary> {\n    // can we avoid create a full backup?\n    const backup = await createNewBackup({ allProfile: true, maskVersion })\n    return getBackupSummary(backup)\n}\n\nexport interface BackupOptions {\n    excludeWallet?: boolean\n    /** Includes persona, relations, posts and profiles. */\n    excludeBase?: boolean\n}\nexport async function createBackupFile(options: BackupOptions): Promise<{\n    file: unknown\n    personaNickNames: string[]\n}> {\n    const { excludeBase, excludeWallet } = options\n    const backup = await createNewBackup({\n        noPersonas: excludeBase,\n        noPosts: excludeBase,\n        noProfiles: excludeBase,\n        noWallets: excludeWallet,\n        maskVersion,\n    })\n    const file = generateBackupRAW(backup)\n    const personaNickNames = [...backup.personas.values()].map((p) => p.nickname.unwrapOr('')).filter(Boolean)\n    return { file, personaNickNames }\n}\n","import { max } from 'lodash-es'\nimport type { Wallet } from '@masknet/shared-base'\n\nexport function generateNewWalletName(wallets: Wallet[], index = 0, preIndex?: number) {\n    const indexList = wallets.filter((x) => !x.owner).map((x) => x.name.split('Wallet ')[1])\n    const maxIndex = max(indexList.filter((x) => x && !Number.isNaN(x)).map(Number)) ?? 0\n    const preIndexNotExists = !indexList.some((x) => Number(x) === preIndex)\n    const finalIndex = preIndex && (preIndex > maxIndex || preIndexNotExists) ? preIndex : maxIndex + index + 1\n    return `Wallet ${finalIndex}`\n}\n","import type { NormalizedBackup } from '@masknet/backup-format'\nimport { concatArrayBuffer } from '@masknet/kit'\nimport { fromBase64URL, isK256Point, isK256PrivateKey, type EC_JsonWebKey } from '@masknet/shared-base'\nimport { ChainbaseDomain } from '@masknet/web3-providers'\nimport { HD_PATH_WITHOUT_INDEX_ETHEREUM, currySameAddress, generateNewWalletName } from '@masknet/web3-shared-base'\nimport { ec as EC } from 'elliptic'\nimport {\n    getDerivableAccounts,\n    createMnemonicId,\n    getWallets,\n    recoverWalletFromMnemonicWords,\n    recoverWalletFromPrivateKey,\n} from '../wallet/services/index.js'\nimport { ChainId, formatEthereumAddress } from '@masknet/web3-shared-evm'\n\nexport async function internal_wallet_restore(backup: NormalizedBackup.WalletBackup[]) {\n    const mnemonicWalletMap = new Map<\n        string,\n        {\n            mnemonicId: string\n            derivationPath: string\n        }\n    >()\n    if (backup.some((x) => !!x.mnemonic.isSome())) {\n        const mnemonicWallets = backup.filter((x) => !!x.mnemonic.isSome())\n        for (const wallet of mnemonicWallets) {\n            if (wallet.mnemonic.isSome()) {\n                const accounts = await getDerivableAccounts(wallet.mnemonic.value.words, 0, 10)\n                const mnemonicId = await createMnemonicId(wallet.mnemonic.value.words)\n                if (!mnemonicId) continue\n\n                accounts.forEach((x) => {\n                    mnemonicWalletMap.set(formatEthereumAddress(x.address), {\n                        mnemonicId,\n                        derivationPath: x.derivationPath,\n                    })\n                })\n            }\n        }\n    }\n\n    for (const wallet of backup) {\n        try {\n            const wallets = await getWallets()\n            const matchedDefaultNameFormat = wallet.name.match(/Wallet (\\d+)/)\n            const digitIndex = matchedDefaultNameFormat?.[1]\n            let name = wallet.name\n            if (!name) {\n                const ens = await ChainbaseDomain.reverse(ChainId.Mainnet, wallet.address)\n                if (ens) name = ens\n            }\n            if (!name) {\n                name = generateNewWalletName(\n                    wallets,\n                    undefined,\n                    digitIndex && !Number.isNaN(digitIndex) ? Number(digitIndex) : undefined,\n                )\n            }\n            if (wallet.privateKey.isSome()) {\n                const info = mnemonicWalletMap.get(wallet.address)\n                await recoverWalletFromPrivateKey(\n                    name,\n                    await JWKToKey(wallet.privateKey.value, 'private'),\n                    wallet.mnemonicId.unwrapOr(undefined) ?? info?.mnemonicId,\n                    wallet.derivationPath.unwrapOr(undefined) ?? info?.derivationPath,\n                )\n            } else if (wallet.mnemonic.isSome()) {\n                // fix a backup bug of pre-v2.2.2 versions\n                const accounts = await getDerivableAccounts(wallet.mnemonic.value.words, 1, 5)\n                const index = accounts.findIndex(currySameAddress(wallet.address))\n                await recoverWalletFromMnemonicWords(\n                    name,\n                    wallet.mnemonic.value.words,\n                    index > -1 ? `${HD_PATH_WITHOUT_INDEX_ETHEREUM}/${index}` : wallet.mnemonic.value.path,\n                )\n            }\n        } catch (error) {\n            console.error(error)\n            continue\n        }\n    }\n}\n\nasync function JWKToKey(jwk: EC_JsonWebKey, type: 'public' | 'private'): Promise<string> {\n    const ec = new EC('secp256k1')\n    if (type === 'public' && jwk.x && jwk.y) {\n        const xb = fromBase64URL(jwk.x)\n        const yb = fromBase64URL(jwk.y)\n        const point = new Uint8Array(concatArrayBuffer(new Uint8Array([4]), xb, yb))\n        if (await isK256Point(point)) return `0x${ec.keyFromPublic(point).getPublic(false, 'hex')}`\n    }\n    if (type === 'private' && jwk.d) {\n        const db = fromBase64URL(jwk.d)\n        if (await isK256PrivateKey(db)) return `0x${ec.keyFromPrivate(db).getPrivate('hex')}`\n    }\n    throw new Error('invalid private key')\n}\n","import { delay } from '@masknet/kit'\nimport type { NormalizedBackup } from '@masknet/backup-format'\nimport { activatedPluginsWorker, registeredPlugins } from '@masknet/plugin-infra/background-worker'\nimport { type PluginID, type ProfileIdentifier, RelationFavor, MaskMessages } from '@masknet/shared-base'\nimport {\n    consistentPersonaDBWriteAccess,\n    createOrUpdatePersonaDB,\n    createOrUpdateProfileDB,\n    createOrUpdateRelationDB,\n    type LinkedProfileDetails,\n} from '../../database/persona/db.js'\nimport {\n    withPostDBTransaction,\n    createPostDB,\n    type PostRecord,\n    queryPostDB,\n    updatePostDB,\n} from '../../database/post/index.js'\nimport type { LatestRecipientDetailDB, LatestRecipientReasonDB } from '../../database/post/dbType.js'\nimport { internal_wallet_restore } from './internal_wallet_restore.js'\n\nexport async function restoreNormalizedBackup(backup: NormalizedBackup.Data) {\n    const { plugins, posts, wallets } = backup\n\n    await restorePersonas(backup)\n    await restorePosts(posts.values())\n    if (wallets.length) {\n        await internal_wallet_restore(wallets)\n    }\n    await restorePlugins(plugins)\n\n    // Note: it looks like the restore will not immediately available to the dashboard, maybe due to\n    // serialization cost or indexedDB transaction apply cost?\n    // Here we add a delay as a workaround. It increases linearly as the scale of personas and profiles.\n    await delay(backup.personas.size + backup.profiles.size)\n\n    if (backup.personas.size || backup.profiles.size) MaskMessages.events.ownPersonaChanged.sendToAll(undefined)\n}\n\nasync function restorePersonas(backup: NormalizedBackup.Data) {\n    const { personas, profiles, relations } = backup\n\n    await consistentPersonaDBWriteAccess(async (t) => {\n        const promises: Array<Promise<unknown>> = []\n        for (const [id, persona] of personas) {\n            for (const [id] of persona.linkedProfiles) {\n                const state: LinkedProfileDetails = { connectionConfirmState: 'confirmed' }\n                persona.linkedProfiles.set(id, state)\n            }\n\n            promises.push(\n                createOrUpdatePersonaDB(\n                    {\n                        identifier: id,\n                        publicKey: persona.publicKey,\n                        privateKey: persona.privateKey.unwrapOr(undefined),\n                        createdAt: persona.createdAt.unwrapOr(undefined),\n                        updatedAt: persona.updatedAt.unwrapOr(undefined),\n                        localKey: persona.localKey.unwrapOr(undefined),\n                        nickname: persona.nickname.unwrapOr(undefined),\n                        mnemonic: persona.mnemonic\n                            .map((mnemonic) => ({\n                                words: mnemonic.words,\n                                parameter: { path: mnemonic.path, withPassword: mnemonic.hasPassword },\n                            }))\n                            .unwrapOr(undefined),\n                        linkedProfiles: persona.linkedProfiles as any,\n                        // \"login\" again because this is the restore process.\n                        // We need to explicitly set this flag because the backup may already in the database (but marked as \"logout\").\n                        hasLogout: false,\n                    },\n                    {\n                        explicitUndefinedField: 'ignore',\n                        linkedProfiles: 'merge',\n                    },\n                    t,\n                ),\n            )\n        }\n\n        for (const [id, profile] of profiles) {\n            promises.push(\n                createOrUpdateProfileDB(\n                    {\n                        identifier: id,\n                        nickname: profile.nickname.unwrapOr(undefined),\n                        localKey: profile.localKey.unwrapOr(undefined),\n                        linkedPersona: profile.linkedPersona.unwrapOr(undefined),\n                        createdAt: profile.createdAt.unwrapOr(new Date()),\n                        updatedAt: profile.updatedAt.unwrapOr(new Date()),\n                    },\n                    t,\n                ),\n            )\n        }\n\n        for (const relation of relations) {\n            promises.push(\n                createOrUpdateRelationDB(\n                    {\n                        profile: relation.profile,\n                        linked: relation.persona,\n                        favor: relation.favor,\n                    },\n                    t,\n                ),\n            )\n        }\n\n        if (!relations.length) {\n            for (const persona of personas.values()) {\n                if (persona.privateKey.isNone()) continue\n\n                for (const profile of profiles.values()) {\n                    promises.push(\n                        createOrUpdateRelationDB(\n                            {\n                                favor: RelationFavor.UNCOLLECTED,\n                                linked: persona.identifier,\n                                profile: profile.identifier,\n                            },\n                            t,\n                        ),\n                    )\n                }\n            }\n        }\n        await Promise.all(promises)\n    })\n}\n\nfunction restorePosts(backup: Iterable<NormalizedBackup.PostBackup>) {\n    return withPostDBTransaction(async (t) => {\n        const promises: Array<Promise<unknown>> = []\n        for (const post of backup) {\n            const rec: PostRecord = {\n                identifier: post.identifier,\n                foundAt: post.foundAt,\n                postBy: post.postBy.unwrapOr(undefined),\n                recipients: 'everyone',\n            }\n            if (post.encryptBy.isSome()) rec.encryptBy = post.encryptBy.value\n            if (post.postCryptoKey.isSome()) rec.postCryptoKey = post.postCryptoKey.value\n            if (post.summary.isSome()) rec.summary = post.summary.value\n            if (post.url.isSome()) rec.url = post.url.value\n            if (post.interestedMeta.size) rec.interestedMeta = post.interestedMeta\n            if (post.recipients.isSome()) {\n                const { value } = post.recipients\n                if (value.type === 'public') rec.recipients = 'everyone'\n                else {\n                    const map = new Map<ProfileIdentifier, LatestRecipientDetailDB>()\n                    for (const [id, detail] of value.receivers) {\n                        map.set(id, {\n                            reason: detail.map((x): LatestRecipientReasonDB => ({ at: x.at, type: 'direct' })),\n                        })\n                    }\n                }\n            }\n\n            // TODO: have a createOrUpdatePostDB\n            promises.push(\n                queryPostDB(post.identifier, t).then((result) =>\n                    result ? updatePostDB(rec, 'override', t) : createPostDB(rec, t),\n                ),\n            )\n        }\n        await Promise.all(promises)\n    })\n}\nasync function restorePlugins(backup: NormalizedBackup.Data['plugins']) {\n    const plugins = [...activatedPluginsWorker]\n    const works = new Set<Promise<void>>()\n    for (const [pluginID, item] of Object.entries(backup)) {\n        const plugin = plugins.find((x) => x.ID === pluginID)\n        // should we warn user here?\n        if (!plugin) {\n            if ([...registeredPlugins.getCurrentValue().map((x) => x[0])].includes(pluginID as PluginID))\n                console.warn(`[@masknet/plugin-infra] Found a backup of a not enabled plugin ${plugin}`, item)\n            else console.warn(`[@masknet/plugin-infra] Found an unknown plugin backup of ${plugin}`, item)\n            continue\n        }\n\n        const onRestore = plugin.backup?.onRestore\n        if (!onRestore) {\n            console.warn(\n                `[@masknet/plugin-infra] Found a backup of plugin ${plugin.ID} but it did not register a onRestore callback.`,\n                item,\n            )\n            continue\n        }\n        works.add(\n            (async (): Promise<void> => {\n                const result = await onRestore(item)\n                if (result.isErr()) {\n                    const msg = `[@masknet/plugin-infra] Plugin ${plugin.ID} failed to restore its backup.`\n                    throw new Error(msg, { cause: result.error })\n                }\n            })(),\n        )\n    }\n    await Promise.allSettled(works)\n}\n","import { getBackupSummary, normalizeBackup } from '@masknet/backup-format'\nimport { requestHostPermission } from '../helper/request-permission.js'\nimport { restoreNormalizedBackup } from './internal_restore.js'\nimport { Result } from 'ts-results-es'\nimport { SmartPayBundler, SmartPayOwner } from '@masknet/web3-providers'\nimport { compact, sum } from 'lodash-es'\nimport { bufferToHex, privateToPublic, publicToAddress } from '@ethereumjs/util'\nimport { fromBase64URL } from '@masknet/shared-base'\n\nexport async function generateBackupSummary(raw: string) {\n    return Result.wrapAsync(async () => {\n        const backupObj: unknown = JSON.parse(raw)\n        const backup = await normalizeBackup(backupObj)\n\n        const personas = [...backup.personas.values()].map((x) => {\n            if (!x.address.isNone()) return x.address.unwrap()\n            if (x.privateKey.isNone()) return\n            const privateKey = x.privateKey.unwrap()\n            if (!privateKey.d) return\n            const address = bufferToHex(publicToAddress(privateToPublic(Buffer.from(fromBase64URL(privateKey.d)))))\n\n            return address\n        })\n\n        const wallets = backup.wallets.map((x) => x.address)\n\n        const chainId = await SmartPayBundler.getSupportedChainId()\n        const accounts = await SmartPayOwner.getAccountsByOwners(chainId, [...compact(personas), ...wallets])\n        return {\n            ...getBackupSummary(backup),\n            countOfWallets: sum([accounts.filter((x) => x.deployed).length, wallets.length]),\n        }\n    })\n}\n\nexport async function restoreBackup(raw: string) {\n    const backupObj: unknown = JSON.parse(raw)\n    const backup = await normalizeBackup(backupObj)\n    const granted = await requestHostPermission(backup.settings.grantedHostPermissions)\n\n    if (!granted) return\n\n    await restoreNormalizedBackup(backup)\n\n    return\n}\n","import { encode } from '@msgpack/msgpack'\nimport { encodeArrayBuffer } from '@masknet/kit'\nimport type { PersonaIdentifier } from '@masknet/shared-base'\nimport { queryPersonaDB } from '../../database/persona/db.js'\n\nexport async function backupPersonaPrivateKey(identifier: PersonaIdentifier): Promise<string | undefined> {\n    const profile = await queryPersonaDB(identifier)\n    if (!profile?.privateKey) return undefined\n\n    const encodePrivateKey = encode(profile.privateKey)\n    return encodeArrayBuffer(encodePrivateKey)\n}\n","export { generateBackupPreviewInfo, createBackupFile, type BackupOptions } from './create.js'\nexport { generateBackupSummary, restoreBackup } from './restore.js'\nexport { backupPersonaPrivateKey } from './persona.js'\n","import { decodeArrayBuffer, encodeArrayBuffer } from '@masknet/kit'\nimport { None, type Option, Some } from 'ts-results-es'\n/** @internal */\nexport function sharedEncoder(input: Uint8Array): string {\n    return `\\u{1F3BC}6/8|${encodeArrayBuffer(input)}:||`\n}\n\n/** @internal */\nexport function sharedDecoder(input: string): Option<Uint8Array> {\n    const [[, payload] = []] = input.matchAll(/\\u{1F3BC}6\\/8\\|([\\w+/=]+):\\|\\|/giu)\n    if (!payload) return None\n    try {\n        return Some(new Uint8Array(decodeArrayBuffer(payload)))\n    } catch {\n        return None\n    }\n}\n","import { decodeArrayBuffer, encodeArrayBuffer } from '@masknet/kit'\nimport { parseURLs } from '@masknet/base'\nimport { Some, None, type Option } from 'ts-results-es'\n\nexport function __TwitterEncoder(data: Uint8Array | string) {\n    if (typeof data === 'string') return __TwitterEncoderText(data)\n    return __TwitterEncoderBinary(data)\n}\n/**\n * @link https://github.com/DimensionDev/Maskbook/issues/198\n */\nfunction __TwitterEncoderText(text: string) {\n    return (\n        'https://mask.io/?PostData_v1=' +\n        text\n            //\n            .replace('\\u{1F3BC}', '%20')\n            .replace(':||', '%40')\n            .replace('+', '-')\n            .replace('=', '_')\n            .replaceAll('|', '.')\n    )\n}\nfunction __TwitterEncoderBinary(data: Uint8Array) {\n    return `https://mask.io/?PostData_v2=${encodeURIComponent(encodeArrayBuffer(data))}`\n}\n\nexport function TwitterDecoder(raw: string): Option<string | Uint8Array> {\n    const newVersion = TwitterDecoderBinary(raw)\n    if (newVersion.isSome()) return newVersion\n\n    return TwitterDecoderText(raw)\n}\n\nfunction TwitterDecoderBinary(raw: string): Option<Uint8Array> {\n    if (!raw) return None\n    if (!raw.includes('PostData_v2')) return None\n\n    const payloadLink = parseURLs(raw).filter((x) => x.startsWith('https://mask.io/?PostData_v2='))\n    try {\n        for (const link of payloadLink) {\n            const url = new URL(link)\n            const payload = url.searchParams.get('PostData_v2')\n            if (!payload) continue\n            return Some(new Uint8Array(decodeArrayBuffer(payload)))\n        }\n    } catch {\n        return None\n    }\n    return None\n}\nfunction TwitterDecoderText(raw: string): Option<string> {\n    if (!raw) return None\n    if (!raw.includes('%20') || !raw.includes('%40')) return None\n    const payloadLink = parseURLs(raw)\n        .map((x) => x.replace(/\\u2026$/, ''))\n        .filter((x) => x.endsWith('%40'))[0]\n    if (!URL.canParse(payloadLink)) return None\n    const { search, pathname } = new URL(payloadLink)\n    const payload = search ? search.slice(1) : pathname.slice(1)\n    if (!payload) return None\n    return Some(\n        '\\u{1F3BC}' +\n            payload\n                // https://github.com/sindresorhus/eslint-plugin-unicorn/issues/1476\n                // eslint-disable-next-line unicorn/better-regex\n                .replace(/^PostData_v\\d=/i, '')\n                .replace(/^%20/, '')\n                .replace(/%40$/, '')\n                .replace('-', '+')\n                .replace('_', '=')\n                .replaceAll('.', '|') +\n            ':||',\n    )\n}\n","import { EncryptPayloadNetwork } from '../payload/types.js'\nimport { sharedDecoder, sharedEncoder } from './shared.js'\nimport { TwitterDecoder, __TwitterEncoder } from './twitter.js'\n\nexport function decodeByNetwork(network: EncryptPayloadNetwork, content: string): Array<string | Uint8Array> {\n    if (network === EncryptPayloadNetwork.Twitter) {\n        return TwitterDecoder(content)\n            .map((x) => [x])\n            .unwrapOr([])\n    }\n    const possiblePayload = content.match(/(\\u{1F3BC}[\\w+/=|]+:\\|\\|)/giu) || []\n\n    const result: Array<string | Uint8Array> = []\n    for (const payload of possiblePayload) {\n        const decoded = sharedDecoder(payload)\n        if (decoded.isSome()) result.push(decoded.value)\n        else result.push(payload)\n    }\n    return result\n}\nexport function encodeByNetwork(network: EncryptPayloadNetwork, content: string | Uint8Array): string {\n    // v38\n    if (typeof content === 'string') {\n        if (network === EncryptPayloadNetwork.Twitter) return __TwitterEncoder(content)\n        return content\n    }\n\n    // v37\n    if (network === EncryptPayloadNetwork.Twitter) return __TwitterEncoder(content)\n    return sharedEncoder(content)\n}\n\nexport * from './twitter.js'\n","import { unreachable } from '@masknet/kit'\nimport {\n    decodeTypedMessageFromDocument,\n    decodeTypedMessageFromDeprecatedFormat,\n    type TypedMessage,\n} from '@masknet/typed-message'\nimport { type AESCryptoKey, type EC_Public_CryptoKey, andThenAsync } from '@masknet/base'\nimport { None, Result } from 'ts-results-es'\nimport type { PayloadParseResult } from '../payload/index.js'\nimport { decryptWithAES, importAES } from '../utils/index.js'\nimport {\n    type DecryptOptions,\n    type DecryptIO,\n    type DecryptProgress,\n    DecryptProgressKind,\n    DecryptError,\n    type DecryptEphemeralECDH_PostKey,\n    type DecryptSuccess,\n    type DecryptIntermediateProgress,\n    DecryptIntermediateProgressKind,\n    type DecryptStaticECDH_PostKey,\n} from './DecryptionTypes.js'\nimport { deriveAESByECDH_version38OrOlderExtraSteps } from './v38-ecdh.js'\nexport * from './DecryptionTypes.js'\nconst ErrorReasons = DecryptError.Reasons\ntype Version = PayloadParseResult.Payload['version']\nexport async function* decrypt(options: DecryptOptions, io: DecryptIO): AsyncIterableIterator<DecryptProgress> {\n    const { author: _author, encrypted: _encrypted, encryption: _encryption, version } = options.message\n    const { authorPublicKey: _authorPublicKey } = options.message\n\n    if (_encryption.isErr()) return yield new DecryptError(ErrorReasons.PayloadBroken, _encryption.error)\n    if (_encrypted.isErr()) return yield new DecryptError(ErrorReasons.PayloadBroken, _encrypted.error)\n    const encryption = _encryption.value\n    const encrypted = _encrypted.value\n\n    // ! try decrypt by cache\n    {\n        const cacheKey = await io.getPostKeyCache().catch(() => null)\n        const iv = encryption.iv.unwrapOr(null)\n        if (cacheKey && iv) return yield* decryptWithPostAESKey(version, cacheKey, iv, encrypted, options.onDecrypted)\n    }\n\n    if (encryption.type === 'public') {\n        const { AESKey, iv } = encryption\n        if (AESKey.isErr()) return yield new DecryptError(ErrorReasons.PayloadBroken, AESKey.error)\n        if (iv.isErr()) return yield new DecryptError(ErrorReasons.PayloadBroken, iv.error)\n        // Not calling setPostCache here. It's public post and saving key is wasting storage space.\n        return yield* decryptWithPostAESKey(version, AESKey.value, iv.value, encrypted, options.onDecrypted)\n    } else if (encryption.type === 'E2E') {\n        const { iv: _iv, ownersAESKeyEncrypted } = encryption\n        if (_iv.isErr()) return yield new DecryptError(ErrorReasons.PayloadBroken, _iv.error)\n        const iv = _iv.value\n        const author = _author.unwrapOr(None)\n\n        // #region // ! decrypt by local key. This only happens in v38 or older.\n        if (options.message.version <= -38) {\n            const hasAuthorLocalKey = author.isSome()\n                ? io.hasLocalKeyOf(author.value).catch(() => false)\n                : Promise.resolve(false)\n            if (ownersAESKeyEncrypted.isOk()) {\n                try {\n                    const aes_raw = new Uint8Array(\n                        await io.decryptByLocalKey(author.unwrapOr(null), ownersAESKeyEncrypted.value, iv),\n                    )\n                    const aes = await importAESKeyFromJWKFromTextEncoder(aes_raw)\n                    io.setPostKeyCache(aes.unwrap()).catch(() => {})\n                    return yield* decryptWithPostAESKey(version, aes.unwrap(), iv, encrypted, options.onDecrypted)\n                } catch (err) {\n                    if (await hasAuthorLocalKey) {\n                        // If we fall into this branch, it means we failed to decrypt as author.\n                        // Since we will not ECDHE to myself when encrypting,\n                        // it does not make sense to try the following steps (because it will never have a result).\n                        return yield new DecryptError(ErrorReasons.CannotDecryptAsAuthor, err)\n                    }\n                    // fall through\n                }\n            } else {\n                if (await hasAuthorLocalKey) {\n                    // If the ownersAESKeyEncrypted is corrupted and we're the author, we cannot do anything to continue.\n                    return yield new DecryptError(ErrorReasons.CannotDecryptAsAuthor, ownersAESKeyEncrypted.error)\n                }\n                // fall through\n            }\n        }\n        // #endregion\n\n        // #region // ! decrypt by ECDH\n        const authorPublicKey = _authorPublicKey.unwrapOr(None)\n        yield progress(DecryptProgressKind.Progress, { event: DecryptIntermediateProgressKind.TryDecryptByE2E })\n        if (version === -37) {\n            return yield* v37ECDHE(io, encryption, encrypted, options.signal, options.onDecrypted)\n        } else {\n            // Static ECDH\n            // to do static ECDH, we need to have the authors public key first. bail if not found.\n            const authorECPub = await Result.wrapAsync(async () => {\n                if (authorPublicKey.isSome()) return authorPublicKey.value.key as EC_Public_CryptoKey\n                return io.queryAuthorPublicKey(author.unwrapOr(null), options.signal)\n            })\n            if (authorECPub.isErr())\n                return yield new DecryptError(ErrorReasons.AuthorPublicKeyNotFound, authorECPub.error)\n            if (!authorECPub.value) return yield new DecryptError(ErrorReasons.AuthorPublicKeyNotFound, undefined)\n            return yield* v38To40StaticECDH(\n                version,\n                io,\n                authorECPub.value,\n                iv,\n                encrypted,\n                options.signal,\n                options.onDecrypted,\n            )\n        }\n        // #endregion\n    }\n    unreachable(encryption)\n}\n\nasync function* v37ECDHE(\n    io: DecryptIO,\n    encryption: PayloadParseResult.EndToEndEncryption,\n    encrypted: Uint8Array,\n    signal: AbortSignal | undefined,\n    report: ((message: TypedMessage) => void) | undefined,\n) {\n    // checked before\n    const iv = encryption.iv.unwrap()\n    // for each inlinedECDHE pub, derive a set of AES key.\n    const inlinedECDHE_derived = Promise.all(\n        Object.values(encryption.ephemeralPublicKey)\n            .map((x) => x.unwrapOr(null!))\n            .filter(Boolean)\n            .map((x) => io.deriveAESKey(x.key as EC_Public_CryptoKey)),\n    ).then((x) => x.flat())\n\n    async function* postKey() {\n        if (encryption.ownersAESKeyEncrypted.isOk()) {\n            const key: DecryptEphemeralECDH_PostKey = {\n                encryptedPostKey: encryption.ownersAESKeyEncrypted.value,\n            }\n            yield key\n        }\n        yield* io.queryPostKey_version37(iv, signal)\n    }\n\n    const ecdh: EphemeralECDH = {\n        type: 'ephemeral',\n        derive: (key) => (key ? io.deriveAESKey(key) : inlinedECDHE_derived),\n    }\n    return yield* decryptByECDH(-37, io, postKey(), ecdh, importAESKeyFromRaw, iv, encrypted, report)\n}\n\nasync function* v38To40StaticECDH(\n    version: -38 | -39 | -40,\n    io: DecryptIO,\n    authorECPub: EC_Public_CryptoKey,\n    iv: Uint8Array,\n    encrypted: Uint8Array,\n    signal: AbortSignal | undefined,\n    report: ((message: TypedMessage) => void) | undefined,\n): AsyncIterableIterator<DecryptProgress> {\n    const postKey = {\n        async *'-40'(iv: Uint8Array) {\n            const val = await io.queryPostKey_version40(iv)\n            if (val) yield val\n        },\n        '-39': io.queryPostKey_version39,\n        '-38': io.queryPostKey_version38,\n    }[version](iv, signal)\n\n    const ecdh: StaticV38OrOlderECDH = {\n        type: 'static-v38-or-older',\n        derive: (postKeyIV) => deriveAESByECDH_version38OrOlderExtraSteps(io.deriveAESKey, authorECPub, postKeyIV),\n    }\n    return yield* decryptByECDH(version, io, postKey, ecdh, importAESKeyFromJWKFromTextEncoder, iv, encrypted, report)\n}\ntype StaticV38OrOlderECDH = {\n    type: 'static-v38-or-older'\n    derive: (postKeyIV: Uint8Array) => Promise<Array<readonly [key: AESCryptoKey, iv: Uint8Array]>>\n}\ntype EphemeralECDH = {\n    type: 'ephemeral'\n    // it's optional argument because the ephemeralPublicKey maybe inlined in the post payload.\n    derive: (ephemeralPublicKey?: EC_Public_CryptoKey) => Promise<AESCryptoKey[]>\n}\n\nasync function* decryptByECDH(\n    version: Version,\n    io: DecryptIO,\n    possiblePostKeyIterator: AsyncIterableIterator<DecryptEphemeralECDH_PostKey | DecryptStaticECDH_PostKey>,\n    ecdhProvider: StaticV38OrOlderECDH | EphemeralECDH,\n    postKeyDecoder: (raw: Uint8Array) => Promise<Result<AESCryptoKey, unknown>>,\n    iv: Uint8Array,\n    encrypted: Uint8Array,\n    report: ((message: TypedMessage) => void) | undefined,\n) {\n    const { derive, type } = ecdhProvider\n    for await (const _ of possiblePostKeyIterator) {\n        const { encryptedPostKey } = _\n        // TODO: how to deal with signature?\n        // TODO: what to do if provider throws?\n        const derivedKeys =\n            type === 'static-v38-or-older'\n                ? await derive((_ as DecryptStaticECDH_PostKey).postKeyIV || iv)\n                : await derive((_ as DecryptEphemeralECDH_PostKey).ephemeralPublicKey).then((aesArr) =>\n                      // TODO: we reuse iv in ephemeral mode, is that safe?\n                      aesArr.map((aes) => [aes, iv] as const),\n                  )\n        for (const [derivedKey, derivedKeyNewIV] of derivedKeys) {\n            const possiblePostKey = await andThenAsync(\n                decryptWithAES(derivedKey, derivedKeyNewIV, encryptedPostKey),\n                postKeyDecoder,\n            )\n            if (possiblePostKey.isErr()) continue\n            const decrypted = await decryptWithAES(possiblePostKey.value, iv, encrypted)\n            if (decrypted.isErr()) continue\n\n            io.setPostKeyCache(possiblePostKey.value).catch(() => {})\n            // If we'd able to decrypt the raw message, we will stop here.\n            // because try further key cannot resolve the problem of parseTypedMessage failed.\n            return yield* parseTypedMessage(version, decrypted.value, report)\n        }\n    }\n    return void (yield new DecryptError(ErrorReasons.NotShareTarget, undefined))\n}\n\nasync function* decryptWithPostAESKey(\n    version: Version,\n    postAESKey: AESCryptoKey,\n    iv: Uint8Array,\n    encrypted: Uint8Array,\n    report: ((message: TypedMessage) => void) | undefined,\n): AsyncIterableIterator<DecryptProgress> {\n    const _ = await decryptWithAES(postAESKey, iv, encrypted)\n    if (_.isErr()) return yield new DecryptError(ErrorReasons.DecryptFailed, _.error)\n    return yield* parseTypedMessage(version, _.value, report)\n}\n\nasync function* parseTypedMessage(\n    version: Version,\n    raw: Uint8Array,\n    report: ((message: TypedMessage) => void) | undefined,\n): AsyncIterableIterator<DecryptProgress> {\n    const _ =\n        version === -37 ? decodeTypedMessageFromDocument(raw) : decodeTypedMessageFromDeprecatedFormat(raw, version)\n    if (_.isErr()) return yield new DecryptError(ErrorReasons.PayloadDecryptedButTypedMessageBroken, _.error)\n    try {\n        report?.(_.value)\n    } catch {}\n    return yield progress(DecryptProgressKind.Success, { content: _.value })\n}\n\n// uint8 |> TextDecoder |> JSON.parse |> importAESKeyFromJWK\nfunction importAESKeyFromJWKFromTextEncoder(aes_raw: Uint8Array) {\n    return Result.wrapAsync(async () => {\n        const aes_text = new TextDecoder().decode(aes_raw)\n        const aes_jwk = JSON.parse(aes_text) as JsonWebKey\n        if (!aes_jwk.key_ops!.includes('decrypt')) aes_jwk.key_ops!.push('decrypt')\n        return (await importAES(aes_jwk)).unwrap()\n    })\n}\n\nfunction importAESKeyFromRaw(aes_raw: Uint8Array) {\n    return Result.wrapAsync(async () => {\n        return crypto.subtle.importKey('raw', aes_raw, { name: 'AES-GCM', length: 256 }, true, [\n            'decrypt',\n        ]) as Promise<AESCryptoKey>\n    })\n}\n\nfunction progress(kind: DecryptProgressKind.Success, rest: Omit<DecryptSuccess, 'type'>): DecryptSuccess\nfunction progress(kind: DecryptProgressKind.Progress, rest: Omit<DecryptIntermediateProgress, 'type'>): DecryptSuccess\nfunction progress(kind: DecryptProgressKind, rest?: object): DecryptProgress {\n    return { type: kind, ...rest } as any\n}\n","import { encodeArrayBuffer } from '@masknet/kit'\nimport {\n    decrypt,\n    parsePayload,\n    DecryptProgressKind,\n    EC_KeyCurve,\n    type DecryptProgress,\n    type EncryptPayloadNetwork,\n    encryptPayloadNetworkToDomain,\n    type EC_Key,\n    decodeByNetwork,\n    steganographyDecodeImage,\n    DecryptError,\n    DecryptErrorReasons,\n    type DecryptReportedInfo,\n} from '@masknet/encryption'\nimport {\n    type AESCryptoKey,\n    type EC_JsonWebKey,\n    type EC_Public_JsonWebKey,\n    PostIVIdentifier,\n    type ProfileIdentifier,\n    ECKeyIdentifier,\n} from '@masknet/shared-base'\nimport type { TypedMessage } from '@masknet/typed-message'\nimport { noop } from 'lodash-es'\nimport { queryProfileDB, queryPersonaDB } from '../../database/persona/db.js'\nimport {\n    createProfileWithPersona,\n    decryptByLocalKey,\n    deriveAESByECDH,\n    hasLocalKeyOf,\n    queryPublicKey,\n} from '../../database/persona/helper.js'\nimport { queryPostDB } from '../../database/post/index.js'\nimport { savePostKeyToDB } from '../../database/post/helper.js'\nimport {\n    GUN_queryPostKey_version37,\n    GUN_queryPostKey_version39Or38,\n    GUN_queryPostKey_version40,\n} from '../../network/queryPostKey.js'\n\nexport interface DecryptionContext {\n    encryptPayloadNetwork: EncryptPayloadNetwork\n    currentProfile: ProfileIdentifier | null\n    authorHint: ProfileIdentifier | null\n    postURL: string | undefined\n}\nexport type EncodedPayload =\n    | {\n          type: 'text'\n          text: string\n      }\n    | {\n          type: 'image'\n          image: Blob\n      }\n    | {\n          type: 'image-url'\n          image: string\n      }\nasync function downloadImage(url: string): Promise<ArrayBuffer> {\n    const x = await fetch(url)\n    return await x.arrayBuffer()\n}\n\n/**\n *\n * @param encoded If the encoded content is a text, it should only contain 1 payload. Extra payload will be ignored.\n * @param context\n */\nexport async function* decryptWithDecoding(\n    encoded: EncodedPayload,\n    context: DecryptionContext,\n): AsyncGenerator<DecryptProgress, void, undefined> {\n    let decoded: string | Uint8Array\n    if (encoded.type === 'text') {\n        decoded = decodeByNetwork(context.encryptPayloadNetwork, encoded.text)[0]\n    } else {\n        if (!context.authorHint) {\n            return yield new DecryptError(DecryptErrorReasons.UnrecognizedAuthor, undefined)\n        }\n        const result = await steganographyDecodeImage(encoded.image, {\n            password: context.authorHint.toText(),\n            downloadImage,\n        })\n        if (typeof result === 'string') {\n            decoded = decodeByNetwork(context.encryptPayloadNetwork, result)[0]\n        } else if (result === null) {\n            return yield new DecryptError(DecryptErrorReasons.NoPayloadFound, undefined)\n        } else {\n            decoded = result\n        }\n    }\n\n    if (!decoded) return yield new DecryptError(DecryptErrorReasons.NoPayloadFound, undefined)\n    yield* decryption(decoded, context)\n}\n\nconst inMemoryCache = new Map<PostIVIdentifier, TypedMessage>()\nasync function* decryption(payload: string | Uint8Array, context: DecryptionContext) {\n    const parse = await parsePayload(payload)\n    if (parse.isErr()) return null\n\n    const { encryptPayloadNetwork, postURL, currentProfile, authorHint } = context\n\n    // #region Identify the PostIdentifier\n    const iv = parse.value.encryption.unwrapOr(null)?.iv.unwrapOr(null)\n    {\n        if (!iv) return null\n        // iv is required to identify the post and it also used in comment encryption.\n        const info: DecryptReportedInfo = {\n            type: DecryptProgressKind.Info,\n            iv,\n            version: parse.value.version,\n        }\n        if (parse.value.encryption.isOk()) {\n            const val = parse.value.encryption.value\n            info.publicShared = val.type === 'public'\n            if (val.type === 'E2E') info.isAuthorOfPost = val.ownersAESKeyEncrypted.isOk()\n        }\n        yield info\n    }\n    const id = new PostIVIdentifier(\n        encryptPayloadNetworkToDomain(encryptPayloadNetwork),\n        encodeArrayBuffer(new Uint8Array(iv)),\n    )\n    // #endregion\n\n    if (inMemoryCache.has(id)) {\n        const p: DecryptProgress = { type: DecryptProgressKind.Success, content: inMemoryCache.get(id)! }\n        return void (yield p)\n    }\n\n    // #region store author public key into the database\n    try {\n        const id = parse.unwrap().author.unwrap().unwrap()\n        if (!hasStoredAuthorPublicKey.has(id)) {\n            storeAuthorPublicKey(id, authorHint, parse.unwrap().authorPublicKey.unwrap().unwrap()).catch(noop)\n            hasStoredAuthorPublicKey.add(id)\n        }\n    } catch {}\n    // #endregion\n\n    const progress = decrypt(\n        {\n            message: parse.value,\n            onDecrypted(message) {\n                inMemoryCache.set(id, message)\n            },\n        },\n        {\n            getPostKeyCache: getPostKeyCache.bind(null, id),\n            setPostKeyCache: (key) => {\n                return savePostKeyToDB(id, key, {\n                    // public post will not call this function.\n                    // and recipients only will be set when posting/appending recipients.\n                    recipients: new Map(),\n                    postBy: authorHint || parse.safeUnwrap().author.unwrapOr(undefined)?.unwrapOr(undefined),\n                    url: postURL,\n                })\n            },\n            hasLocalKeyOf,\n            decryptByLocalKey,\n            async deriveAESKey(pub) {\n                return Array.from((await deriveAESByECDH(pub)).values())\n            },\n            queryAuthorPublicKey(author, signal) {\n                // TODO: This should try to fetch publicKey from NextID\n                // but it is not urgent because all new posts has their publicKey embedded\n                return queryPublicKey(author || authorHint)\n            },\n            async *queryPostKey_version37(iv, signal) {\n                const author = await queryPublicKey(context.currentProfile)\n                if (!author)\n                    throw new DecryptError(DecryptErrorReasons.CurrentProfileDoesNotConnectedToPersona, undefined)\n                yield* GUN_queryPostKey_version37(\n                    iv,\n                    author,\n                    context.encryptPayloadNetwork,\n                    signal || new AbortController().signal,\n                )\n            },\n            async *queryPostKey_version38(iv, signal) {\n                const author = await queryPublicKey(context.currentProfile)\n                if (!author)\n                    throw new DecryptError(DecryptErrorReasons.CurrentProfileDoesNotConnectedToPersona, undefined)\n                yield* GUN_queryPostKey_version39Or38(\n                    -38,\n                    iv,\n                    author,\n                    context.encryptPayloadNetwork,\n                    signal || new AbortController().signal,\n                )\n            },\n            async *queryPostKey_version39(iv, signal) {\n                const author = await queryPublicKey(context.currentProfile)\n                if (!author)\n                    throw new DecryptError(DecryptErrorReasons.CurrentProfileDoesNotConnectedToPersona, undefined)\n                yield* GUN_queryPostKey_version39Or38(\n                    -39,\n                    iv,\n                    author,\n                    context.encryptPayloadNetwork,\n                    signal || new AbortController().signal,\n                )\n            },\n            async queryPostKey_version40(iv) {\n                if (!currentProfile) return null\n                return GUN_queryPostKey_version40(iv, currentProfile.userId)\n            },\n        },\n    )\n\n    yield* progress\n    return null\n}\n\n/** @internal */\nexport async function getPostKeyCache(id: PostIVIdentifier) {\n    const post = await queryPostDB(id)\n    if (!post?.postCryptoKey) return null\n    const k = await crypto.subtle.importKey('jwk', post.postCryptoKey, { name: 'AES-GCM', length: 256 }, true, [\n        'decrypt',\n    ])\n    return k as AESCryptoKey\n}\n\nconst hasStoredAuthorPublicKey = new Set<ProfileIdentifier>()\nasync function storeAuthorPublicKey(\n    payloadAuthor: ProfileIdentifier,\n    postAuthor: ProfileIdentifier | null,\n    pub: EC_Key,\n) {\n    if (payloadAuthor !== postAuthor) {\n        // ! Author detected is not equal to AuthorHint.\n        // ! Skip store the public key because it might be a security problem.\n        return\n    }\n    if (pub.algr !== EC_KeyCurve.secp256k1) {\n        throw new Error('TODO: support other curves')\n    }\n\n    // if privateKey, we should possibly not recreate it\n    const profile = await queryProfileDB(payloadAuthor)\n    const persona = profile?.linkedPersona ? await queryPersonaDB(profile.linkedPersona) : undefined\n    if (persona?.privateKey) return\n\n    const key = (await crypto.subtle.exportKey('jwk', pub.key)) as EC_JsonWebKey\n    const otherPersona = await queryPersonaDB((await ECKeyIdentifier.fromJsonWebKey(key)).unwrap())\n    if (otherPersona?.privateKey) return\n\n    return createProfileWithPersona(\n        payloadAuthor,\n        { connectionConfirmState: 'confirmed' },\n        {\n            publicKey: (await crypto.subtle.exportKey('jwk', pub.key)) as EC_Public_JsonWebKey,\n        },\n    )\n}\n","import { encryptWithAES } from '../utils/index.js'\nimport {\n    type EncryptTargetE2E,\n    type EncryptIO,\n    type EncryptResult,\n    type EncryptionResultE2E,\n    type EncryptionResultE2EMap,\n} from './EncryptionTypes.js'\nimport { type createEphemeralKeysMap, fillIV } from './utils.js'\n\n/** @internal */\nexport async function v37_addReceiver(\n    firstTime: boolean,\n    context: {\n        postIV: Uint8Array\n        postKeyEncoded: Promise<Uint8Array>\n        getEphemeralKey: ReturnType<typeof createEphemeralKeysMap>['getEphemeralKey']\n    },\n    target: EncryptTargetE2E,\n    io: Pick<EncryptIO, 'getRandomECKey' | 'getRandomValues'>,\n): Promise<EncryptionResultE2EMap> {\n    const { getEphemeralKey, postIV, postKeyEncoded } = context\n\n    const ecdh = Promise.allSettled(\n        target.target.map(async (receiverPublicKey): Promise<EncryptionResultE2E> => {\n            const iv = postIV || fillIV(io)\n            const [ephemeralPublicKey, ephemeralPrivateKey] = await getEphemeralKey(receiverPublicKey.algr)\n            const aes = await crypto.subtle.deriveKey(\n                { name: 'ECDH', public: receiverPublicKey.key },\n                ephemeralPrivateKey,\n                { name: 'AES-GCM', length: 256 },\n                true,\n                ['encrypt'],\n            )\n            // Note: we're reusing iv in the post encryption.\n            const encryptedPostKey = await encryptWithAES(aes, iv, await postKeyEncoded)\n            const result: EncryptionResultE2E = {\n                encryptedPostKey: encryptedPostKey.unwrap(),\n                target: receiverPublicKey,\n            }\n            if (!firstTime) result.ephemeralPublicKey = ephemeralPublicKey\n            return result\n        }),\n    ).then((x) => x.entries())\n\n    const ecdhResult: EncryptResult['e2e'] = new Map()\n    for (const [index, result] of await ecdh) {\n        ecdhResult.set(target.target[index], result)\n    }\n    return ecdhResult\n}\n","import { encodeArrayBuffer, unreachable } from '@masknet/kit'\nimport { type AESCryptoKey, type EC_Public_CryptoKey, PostIVIdentifier } from '@masknet/base'\nimport {\n    isTypedMessageText,\n    encodeTypedMessageToDeprecatedFormat,\n    encodeTypedMessageToDocument,\n    type SerializableTypedMessages,\n} from '@masknet/typed-message'\nimport { None, type Option } from 'ts-results-es'\nimport { type EC_Key, encodePayload, type PayloadWellFormed } from '../payload/index.js'\nimport { encryptWithAES } from '../utils/index.js'\n\nimport {\n    EncryptError,\n    EncryptErrorReasons,\n    type EncryptIO,\n    type EncryptOptions,\n    type EncryptResult,\n    type EncryptTargetE2E,\n} from './EncryptionTypes.js'\nimport { createEphemeralKeysMap, fillIV } from './utils.js'\nimport { v37_addReceiver } from './v37-ecdh.js'\nimport { v38_addReceiver } from './v38-ecdh.js'\n\nexport * from './EncryptionTypes.js'\nexport async function encrypt(options: EncryptOptions, io: EncryptIO): Promise<EncryptResult> {\n    const postIV = fillIV(io)\n    const postKey = await aes256GCM(io)\n    if (!postKey.usages.includes('encrypt') || !postKey.usages.includes('decrypt') || !postKey.extractable) {\n        throw new EncryptError(EncryptErrorReasons.AESKeyUsageError)\n    }\n\n    const encodedMessage = encodeMessage(options.version, options.message)\n    const encryptedMessage = encodedMessage\n        .then((message) => encryptWithAES(postKey, postIV, message))\n        .then((x) => x.unwrap())\n\n    let encryption: PayloadWellFormed.PublicEncryption | PayloadWellFormed.EndToEndEncryption\n    let ecdhResult: EncryptResult['e2e']\n\n    if (options.target.type === 'public') {\n        encryption = {\n            iv: postIV,\n            type: 'public',\n            AESKey: postKey,\n        }\n    } else {\n        const postKeyEncoded = encodePostKey(options.version, postKey)\n        const context: Context = { authorPublic: options.authorPublicKey, postKeyEncoded, postIV }\n\n        if (options.version === -38) [encryption, ecdhResult] = await e2e_v38(context, options.target, io)\n        else if (options.version === -37) [encryption, ecdhResult] = await e2e_v37(context, options.target, io)\n        else unreachable(options.version)\n    }\n\n    const payload = encodePayload\n        .NoSign({\n            version: options.version,\n            author: options.author,\n            authorPublicKey: options.authorPublicKey,\n            encryption,\n            encrypted: await encryptedMessage,\n            signature: None,\n        })\n        .then((x) => x.unwrap())\n\n    return {\n        author: options.author.unwrapOr(undefined),\n        identifier: new PostIVIdentifier(options.network, encodeArrayBuffer(postIV)),\n        postKey,\n        output: await payload,\n        e2e: ecdhResult,\n    }\n}\ntype Context = {\n    postIV: Uint8Array\n    postKeyEncoded: Promise<Uint8Array>\n    authorPublic: Option<EC_Key<EC_Public_CryptoKey>>\n}\n\n/** @internal */\nexport async function encodePostKey(version: EncryptOptions['version'], key: CryptoKey) {\n    if (version === -37) return crypto.subtle.exportKey('raw', key).then((x) => new Uint8Array(x))\n    else if (version === -38)\n        return crypto.subtle\n            .exportKey('jwk', key)\n            .then(JSON.stringify)\n            .then((x) => new TextEncoder().encode(x))\n    unreachable(version)\n}\nasync function e2e_v37(\n    context: Context,\n    target: EncryptTargetE2E,\n    io: EncryptIO,\n): Promise<[PayloadWellFormed.EndToEndEncryption, EncryptResult['e2e']]> {\n    const { authorPublic, postIV, postKeyEncoded } = context\n    if (!authorPublic.isSome()) throw new EncryptError(EncryptErrorReasons.PublicKeyNotFound)\n\n    const { ephemeralKeys, getEphemeralKey } = createEphemeralKeysMap(io)\n    const ecdhResult = v37_addReceiver(true, { ...context, getEphemeralKey }, target, io)\n\n    const ownersAESKeyEncrypted = Promise.resolve().then(async () => {\n        const [, ephemeralPrivateKey] = await getEphemeralKey(authorPublic.value.algr)\n\n        // we get rid of localKey in v38\n        const aes = await crypto.subtle.deriveKey(\n            { name: 'ECDH', public: authorPublic.value.key },\n            ephemeralPrivateKey,\n            { name: 'AES-GCM', length: 256 },\n            true,\n            ['encrypt'],\n        )\n        // Note: we're reusing iv in the post encryption.\n        const encryptedPostKey = await encryptWithAES(aes, postIV, await postKeyEncoded)\n        return encryptedPostKey.unwrap()\n    })\n\n    const encryption: PayloadWellFormed.EndToEndEncryption = {\n        type: 'E2E',\n        ephemeralPublicKey: new Map(),\n        iv: postIV,\n        ownersAESKeyEncrypted: await ownersAESKeyEncrypted,\n    }\n\n    // wait ecdh to finish write ephemeralKeys\n    await ecdhResult\n    for (const [curve, keys] of ephemeralKeys) {\n        encryption.ephemeralPublicKey.set(curve, (await keys)[0])\n    }\n    return [encryption, await ecdhResult]\n}\nasync function e2e_v38(\n    context: Context,\n    target: EncryptTargetE2E,\n    io: EncryptIO,\n): Promise<[PayloadWellFormed.EndToEndEncryption, EncryptResult['e2e']]> {\n    const { postIV, postKeyEncoded } = context\n    const ecdhResult = await v38_addReceiver(postKeyEncoded, target, io)\n    const encryption: PayloadWellFormed.EndToEndEncryption = {\n        type: 'E2E',\n        // v38 does not support ephemeral encryption.\n        ephemeralPublicKey: new Map(),\n        iv: postIV,\n        ownersAESKeyEncrypted: new Uint8Array(await io.encryptByLocalKey(await postKeyEncoded, postIV)),\n    }\n    return [encryption, ecdhResult]\n}\n\nasync function encodeMessage(version: -38 | -37, message: SerializableTypedMessages) {\n    if (version === -37) return encodeTypedMessageToDocument(message)\n    if (!isTypedMessageText(message))\n        throw new EncryptError(EncryptErrorReasons.ComplexTypedMessageNotSupportedInPayload38)\n    return encodeTypedMessageToDeprecatedFormat(message)\n}\nasync function aes256GCM(io: EncryptIO): Promise<AESCryptoKey> {\n    if (io.getRandomAESKey) return io.getRandomAESKey()\n    return (await crypto.subtle.generateKey({ name: 'AES-GCM', length: 256 }, true, [\n        'encrypt',\n        'decrypt',\n    ])) as AESCryptoKey\n}\n","import type { EC_Public_CryptoKey, PersonaIdentifier, ProfileIdentifier } from '@masknet/shared-base'\nimport { isTypedMessageText, type SerializableTypedMessages, type TypedMessageText } from '@masknet/typed-message'\nimport {\n    type EC_Key,\n    EC_KeyCurve,\n    encrypt,\n    type EncryptionResultE2EMap,\n    type EncryptTargetE2E,\n    type EncryptTargetPublic,\n    type EncryptPayloadNetwork,\n    encryptPayloadNetworkToDomain,\n} from '@masknet/encryption'\nimport { encryptByLocalKey, deriveAESByECDH, queryPublicKey } from '../../database/persona/helper.js'\nimport { savePostKeyToDB } from '../../database/post/helper.js'\nimport { noop } from 'lodash-es'\nimport { queryProfileDB } from '../../database/persona/db.js'\nimport { publishPostAESKey_version39Or38, publishPostAESKey_version37 } from '../../network/queryPostKey.js'\nimport { None, Some } from 'ts-results-es'\n\nexport interface EncryptTargetE2EFromProfileIdentifier {\n    type: 'E2E'\n    target: ReadonlyArray<{ profile: ProfileIdentifier; persona?: PersonaIdentifier }>\n}\nexport async function encryptTo(\n    version: -37 | -38,\n    content: SerializableTypedMessages,\n    target: EncryptTargetPublic | EncryptTargetE2EFromProfileIdentifier,\n    whoAmI: ProfileIdentifier | undefined,\n    network: EncryptPayloadNetwork,\n): Promise<string | Uint8Array> {\n    const [keyMap, convertedTarget] = await prepareEncryptTarget(target)\n\n    const authorPublicKey = whoAmI ? await queryPublicKey(whoAmI).catch(noop) : undefined\n    const { identifier, output, postKey, e2e } = await encrypt(\n        {\n            network: whoAmI?.network || encryptPayloadNetworkToDomain(network),\n            author: whoAmI ? Some(whoAmI) : None,\n            authorPublicKey: authorPublicKey\n                ? Some({ algr: EC_KeyCurve.secp256k1, key: authorPublicKey } satisfies EC_Key<EC_Public_CryptoKey>)\n                : None,\n            message: content,\n            target: convertedTarget,\n            version,\n        },\n        {\n            async deriveAESKey(pub) {\n                const result = Array.from((await deriveAESByECDH(pub, whoAmI)).values())\n                if (result.length === 0) throw new Error('No key found')\n                return result[0]\n            },\n            encryptByLocalKey: async (content, iv) => {\n                if (!whoAmI) throw new Error('No Profile found')\n                return encryptByLocalKey(whoAmI, content, iv)\n            },\n        },\n    )\n    ;(async () => {\n        const profile = whoAmI ? await queryProfileDB(whoAmI).catch(noop) : null\n        const usingPersona = profile?.linkedPersona\n        return savePostKeyToDB(identifier, postKey, {\n            postBy: whoAmI,\n            recipients: target.type === 'public' ? 'everyone' : e2eMapToRecipientDetails(keyMap!, e2e!),\n            encryptBy: usingPersona,\n            ...collectInterestedMeta(content),\n        })\n    })().catch((error) => console.error('[@masknet/encryption] Failed to save post key to DB', error))\n\n    if (target.type === 'E2E') {\n        if (version === -37) {\n            publishPostAESKey_version37(identifier.toIV(), network, e2e!)\n        } else {\n            publishPostAESKey_version39Or38(-38, identifier.toIV(), network, e2e!)\n        }\n    }\n    return output\n}\n\nfunction e2eMapToRecipientDetails(\n    keyMap: Map<EC_Public_CryptoKey, ProfileIdentifier>,\n    input: EncryptionResultE2EMap,\n): Map<ProfileIdentifier, Date> {\n    const result = new Map<ProfileIdentifier, Date>()\n    for (const [key] of input) {\n        const identifier = keyMap?.get(key.key)\n        if (!identifier) continue\n        result.set(identifier, new Date())\n    }\n    return result\n}\n\n/** @internal */\nexport function prepareEncryptTarget(\n    target: EncryptTargetE2EFromProfileIdentifier,\n): Promise<readonly [key_map: Map<EC_Public_CryptoKey, ProfileIdentifier>, EncryptTargetE2E]>\nexport function prepareEncryptTarget(target: EncryptTargetPublic): Promise<readonly [key_map: null, EncryptTargetE2E]>\nexport function prepareEncryptTarget(\n    target: EncryptTargetPublic | EncryptTargetE2EFromProfileIdentifier,\n): Promise<\n    readonly [key_map: Map<EC_Public_CryptoKey, ProfileIdentifier> | null, EncryptTargetPublic | EncryptTargetE2E]\n>\nexport async function prepareEncryptTarget(\n    target: EncryptTargetPublic | EncryptTargetE2EFromProfileIdentifier,\n): Promise<\n    readonly [key_map: Map<EC_Public_CryptoKey, ProfileIdentifier> | null, EncryptTargetPublic | EncryptTargetE2E]\n> {\n    if (target.type === 'public') return [null, target] as const\n    const key_map = new Map<EC_Public_CryptoKey, ProfileIdentifier>()\n    const map: Array<EC_Key<EC_Public_CryptoKey>> = []\n\n    await Promise.allSettled(\n        target.target.map(async (id) => {\n            const key = (await id.persona?.toCryptoKey('derive')) || (await queryPublicKey(id.profile))\n            if (!key) {\n                console.error('No publicKey found for profile', id.profile.toText())\n                return\n            }\n            map.push({ algr: EC_KeyCurve.secp256k1, key })\n            key_map.set(key, id.profile)\n        }),\n    )\n\n    return [key_map, { type: 'E2E', target: map } satisfies EncryptTargetE2E] as const\n}\n\nfunction collectInterestedMeta(content: SerializableTypedMessages) {\n    if (isTypedMessageText(content)) return { summary: getSummary(content), meta: content.meta }\n    return {}\n}\n\nconst SUMMARY_MAX_LENGTH = 40\nfunction getSummary(content: TypedMessageText) {\n    let result = ''\n    const sliceLength = content.content.length > SUMMARY_MAX_LENGTH ? SUMMARY_MAX_LENGTH + 1 : SUMMARY_MAX_LENGTH\n\n    // UTF-8 aware summary\n    if (Intl.Segmenter) {\n        // it seems like using \"en\" can also split the word correctly.\n        const seg = new Intl.Segmenter('en')\n        for (const word of seg.segment(content.content)) {\n            if (result.length >= sliceLength) break\n            result += word.segment\n        }\n    } else {\n        result = content.content.slice(0, sliceLength)\n    }\n    return result\n}\n","import { unreachable } from '@masknet/kit'\nimport type { AESCryptoKey, EC_Public_CryptoKey } from '@masknet/base'\nimport { encodePostKey } from './Encryption.js'\nimport type { EncryptIO, EncryptionResultE2EMap, EncryptTargetE2E } from './EncryptionTypes.js'\nimport { createEphemeralKeysMap } from './utils.js'\nimport { v37_addReceiver } from './v37-ecdh.js'\nimport { v38_addReceiver } from './v38-ecdh.js'\nimport type { EC_Key } from '../index.js'\n\nexport interface AppendEncryptionOptions {\n    version: -38 | -37\n    postAESKey: AESCryptoKey\n    iv: Uint8Array\n    target: ReadonlyArray<EC_Key<EC_Public_CryptoKey>>\n}\nexport interface AppendEncryptionIO extends Pick<EncryptIO, 'getRandomECKey' | 'deriveAESKey' | 'getRandomValues'> {}\nexport async function appendEncryptionTarget(\n    options: AppendEncryptionOptions,\n    io: AppendEncryptionIO,\n): Promise<EncryptionResultE2EMap> {\n    const target: EncryptTargetE2E = { type: 'E2E', target: options.target }\n    const postKeyEncoded = encodePostKey(options.version, options.postAESKey)\n\n    if (options.version === -38) {\n        return v38_addReceiver(postKeyEncoded, target, io)\n    } else if (options.version === -37) {\n        const { getEphemeralKey } = createEphemeralKeysMap(io)\n        return v37_addReceiver(false, { postKeyEncoded, postIV: options.iv, getEphemeralKey }, target, io)\n    }\n    unreachable(options.version)\n}\n","import { appendEncryptionTarget, type EncryptPayloadNetwork, type SupportedPayloadVersions } from '@masknet/encryption'\nimport type { PostIVIdentifier, ProfileIdentifier } from '@masknet/shared-base'\nimport { deriveAESByECDH } from '../../database/persona/helper.js'\nimport { updatePostDB, queryPostDB } from '../../database/post/index.js'\nimport { publishPostAESKey_version37, publishPostAESKey_version39Or38 } from '../../network/queryPostKey.js'\nimport { getPostKeyCache } from './decryption.js'\nimport { prepareEncryptTarget, type EncryptTargetE2EFromProfileIdentifier } from './encryption.js'\n\nexport async function appendShareTarget(\n    version: SupportedPayloadVersions,\n    post: PostIVIdentifier,\n    target: EncryptTargetE2EFromProfileIdentifier['target'],\n    whoAmI: ProfileIdentifier,\n    network: EncryptPayloadNetwork,\n): Promise<void> {\n    if (version === -39 || version === -40) throw new TypeError('invalid version')\n    const key = await getPostKeyCache(post)\n    const postRec = await queryPostDB(post)\n    const postBy = postRec?.encryptBy || postRec?.postBy || whoAmI\n\n    const [keyMap, { target: convertedTarget }] = await prepareEncryptTarget({ type: 'E2E', target })\n\n    if (!key) throw new Error('No post key found')\n    const e2e = await appendEncryptionTarget(\n        {\n            target: convertedTarget,\n            iv: post.toIV(),\n            postAESKey: key,\n            version,\n        },\n        {\n            async deriveAESKey(pub) {\n                const result = Array.from((await deriveAESByECDH(pub, postBy)).values())\n                if (result.length === 0) throw new Error('No key found')\n                return result[0]\n            },\n        },\n    )\n\n    if (version === -38) {\n        publishPostAESKey_version39Or38(-38, post.toIV(), network, e2e)\n    } else {\n        publishPostAESKey_version37(post.toIV(), network, e2e)\n    }\n\n    {\n        const recipients = new Map<ProfileIdentifier, Date>()\n        for (const [, value] of keyMap) recipients.set(value, new Date())\n        updatePostDB({ identifier: post, recipients }, 'append')\n    }\n}\n","import { encodeArrayBuffer, decodeText, decodeArrayBuffer, encodeText } from '@masknet/kit'\nimport type { AESCryptoKey } from '@masknet/shared-base'\n\n// * Payload format: 🎶2/4|encrypted_comment:||\nexport async function encryptComment(postIV: Uint8Array, postContent: string, comment: string): Promise<string> {\n    const key = await getCommentKey(postIV, postContent)\n\n    const encrypted = await crypto.subtle.encrypt({ name: 'AES-GCM', iv: postIV }, key, encodeText(comment))\n    return `\\u{1F3B6}2/4|${encodeArrayBuffer(encrypted)}:||`\n}\nexport async function decryptComment(\n    postIV: Uint8Array,\n    postContent: string,\n    encryptComment: string,\n): Promise<string | null> {\n    const payload = extractCommentPayload(encryptComment)\n    if (!payload) return null\n\n    const key = await getCommentKey(postIV, postContent)\n    const result = await crypto.subtle.decrypt({ name: 'AES-GCM', iv: postIV }, key, decodeArrayBuffer(payload))\n    return decodeText(result)\n}\n\nasync function getCommentKey(postIV: Uint8Array, postContent: string) {\n    const pbkdf = await crypto.subtle.importKey('raw', encodeText(postContent), 'PBKDF2', false, [\n        'deriveBits',\n        'deriveKey',\n    ])\n    return (await crypto.subtle.deriveKey(\n        { name: 'PBKDF2', salt: postIV, iterations: 100000, hash: 'SHA-256' },\n        pbkdf,\n        { name: 'AES-GCM', length: 256 },\n        true,\n        ['encrypt', 'decrypt'],\n    )) as AESCryptoKey\n}\n\nfunction extractCommentPayload(text: string) {\n    const [_, toEnd] = text.split('\\u{1F3B6}2/4|')\n    const [content, _2] = (toEnd || '').split(':||')\n    if (content.length) return content\n    return\n}\n","import { memoize } from 'lodash-es'\nimport { memoizePromise } from '@masknet/kit'\nimport { steganographyEncodeImage as __steganographyEncodeImage, type EncodeImageOptions } from '@masknet/encryption'\n\nasync function fetchImage(url: string) {\n    const res = await fetch(url)\n    if (!res.ok) throw new Error('Fetch failed.')\n    return res.arrayBuffer()\n}\nconst steganographyDownloadImage = memoizePromise(memoize, fetchImage, (x) => x)\nexport function steganographyEncodeImage(\n    buf: ArrayBuffer,\n    options: Omit<EncodeImageOptions, 'downloadImage'>,\n): Promise<Uint8Array> {\n    return __steganographyEncodeImage(buf, { ...options, downloadImage: steganographyDownloadImage })\n}\n","import type { PostIVIdentifier, ProfileIdentifier, ProfileInformation } from '@masknet/shared-base'\nimport { queryProfilesDB } from '../../database/persona/db.js'\nimport { queryPostDB } from '../../database/post/index.js'\nimport { toProfileInformation } from '../__utils__/convert.js'\n\nexport async function hasRecipientAvailable(whoAmI: ProfileIdentifier): Promise<boolean> {\n    const profiles = await queryProfilesDB({ hasLinkedPersona: true, network: whoAmI.network })\n\n    if (profiles.length === 0) return false\n    if (profiles.length > 1) return true\n    return profiles[0].identifier !== whoAmI\n}\n\nexport async function getRecipients(whoAmI: ProfileIdentifier): Promise<ProfileInformation[]> {\n    const profiles = (await queryProfilesDB({ network: whoAmI.network, hasLinkedPersona: true })).filter(\n        (x) => x.identifier !== whoAmI,\n    )\n    return toProfileInformation(profiles).mustNotAwaitThisWithInATransaction\n}\n\nexport async function getIncompleteRecipientsOfPost(id: PostIVIdentifier): Promise<ProfileInformation[]> {\n    const nameInDB = (await queryPostDB(id))?.recipients\n    if (nameInDB === 'everyone') return []\n    if (!nameInDB?.size) return []\n\n    const profiles = (\n        await queryProfilesDB({\n            identifiers: [...nameInDB.keys()],\n            hasLinkedPersona: true,\n        })\n    ).filter((x) => x.linkedPersona)\n    return toProfileInformation(profiles).mustNotAwaitThisWithInATransaction\n}\n","// Encrypt & decrypt (decryptWithDecoding is a generator, not included.)\nexport { encryptTo } from './encryption.js'\nexport { appendShareTarget } from './appendEncryption.js'\n\n// Comments\nexport { encryptComment, decryptComment } from './comment.js'\n\n// Steganography\nexport { steganographyEncodeImage } from './steganography.js'\n\nexport { getRecipients, hasRecipientAvailable, getIncompleteRecipientsOfPost } from './recipients.js'\n","import { memoize } from 'lodash-es'\nimport { memoizePromise } from '@masknet/kit'\nimport { fetchText } from '@masknet/web3-providers/helpers'\n\nconst cache = new Map<string, string>()\n\nasync function resolver(u: string): Promise<string | null> {\n    if (!u.startsWith('https://t.co/')) return null\n    if (cache.has(u)) return cache.get(u)!\n    const text = await fetchText(u, {\n        redirect: 'error',\n        credentials: 'omit',\n        referrerPolicy: 'no-referrer',\n    })\n    const url = text.match(/URL=(.+).><\\/noscript/)?.[1]\n    if (url) cache.set(u, url)\n    return url ?? null\n}\n/** Resolve a https://t.co/ link to it's real address. */\nexport const resolveTCOLink = memoizePromise(memoize, resolver, (x) => x)\n","// This file is auto generated. DO NOT EDIT\n// Run `npx gulp sync-languages` to regenerate.\nexport default {\n    'mask/shared-ui/locales/%locale%.json': 'mask',\n    'mask/content-script/site-adaptors/twitter.com/locales/%locale%.json': 'DO_NOT_USE',\n    'shared/src/locales/%locale%.json': 'shared',\n    'shared-base-ui/src/locales/%locale%.json': 'shareBase',\n    'mask/dashboard/locales/%locale%.json': 'dashboard',\n    'plugins/Debugger/src/locales/%locale%.json': 'io.mask.debugger',\n    'plugins/FileService/src/locales/%locale%.json': 'com.maskbook.fileservice',\n    'plugins/ScamSniffer/src/locales/%locale%.json': 'io.scamsniffer.mask-plugin',\n    'plugins/CyberConnect/src/locales/%locale%.json': 'me.cyberconnect.app',\n    'plugins/RSS3/src/locales/%locale%.json': 'bio.rss3',\n    'plugins/NextID/src/locales/%locale%.json': 'com.mask.next_id',\n    'plugins/template/src/locales/%locale%.json': '__template__',\n    'plugins/GoPlusSecurity/src/locales/%locale%.json': 'io.gopluslabs.security',\n    'plugins/CrossChainBridge/src/locales/%locale%.json': 'io.mask.cross-chain-bridge',\n    'plugins/RedPacket/src/locales/%locale%.json': 'com.maskbook.red_packet',\n    'plugins/Tips/src/locales/%locale%.json': 'com.maskbook.tip',\n    'plugins/Avatar/src/locales/%locale%.json': 'com.maskbook.avatar',\n    'plugins/Trader/src/locales/%locale%.json': 'com.maskbook.trader',\n    'plugins/Gitcoin/src/locales/%locale%.json': 'co.gitcoin',\n    'plugins/MaskBox/src/locales/%locale%.json': 'com.maskbook.box',\n    'plugins/Pets/src/locales/%locale%.json': 'com.maskbook.pets',\n    'plugins/Web3Profile/src/locales/%locale%.json': 'io.mask.web3-profile',\n    'plugins/Handle/src/locales/%locale%.json': 'com.maskbook.handle',\n    'plugins/Approval/src/locales/%locale%.json': 'com.maskbook.approval',\n    'plugins/ScamWarning/src/locales/%locale%.json': 'com.mask.scam-warning',\n    'plugins/SmartPay/src/locales/%locale%.json': 'com.mask.smart-pay',\n    'plugins/VCent/src/locales/%locale%.json': 'com.maskbook.tweet',\n    'plugins/Transak/src/locales/%locale%.json': 'com.maskbook.transak',\n    'plugins/Collectible/src/locales/%locale%.json': 'com.maskbook.collectibles',\n    'plugins/Claim/src/locales/%locale%.json': 'com.mask.claim',\n    'plugins/ArtBlocks/src/locales/%locale%.json': 'io.artblocks',\n    'plugins/Savings/src/locales/%locale%.json': 'com.savings',\n    'plugins/Snapshot/src/locales/%locale%.json': 'org.snapshot',\n    'plugins/ProfileCard/src/locales/%locale%.json': 'io.mask.web3-profile-card',\n    'plugins/SwitchLogo/src/locales/%locale%.json': 'io.mask.switch-logo',\n    'plugins/Calendar/src/locales/%locale%.json': 'io.mask.calendar',\n}\n","import list from './i18n-cache-query-list.js'\n\nexport type Bundle = [namespace: string, lang: string, json: Record<string, string>]\nexport async function queryRemoteI18NBundle(lang: string): Promise<Bundle[]> {\n    // skip fetching in development. if you need to debug this, please comment this code.\n    if (process.env.NODE_ENV === 'development') return []\n\n    const updateLang = getCurrentLanguage(lang)\n    if (!updateLang) return []\n\n    const responses = updateLang === 'en-US' ? fetchEnglishBundle() : fetchTranslatedBundle(lang)\n    const results = await Promise.allSettled(responses)\n    return results\n        .filter((x): x is PromiseFulfilledResult<Bundle | null> => x.status === 'fulfilled')\n        .map((x) => x.value!)\n        .filter(Boolean)\n}\n\nconst I18N_LOCALES_HOST = 'https://maskbook.pages.dev/'\n\nfunction fetchTranslatedBundle(lang: string) {\n    return Object.entries(list).map(async ([url, namespace]): Promise<Bundle | null> => {\n        try {\n            const path = url.replace('%locale%', lang)\n            const response = await fetch(I18N_LOCALES_HOST + path, fetchOption)\n            const json = await response.json()\n            if (!isValidTranslation(json)) return null\n            return [namespace, lang, json]\n        } catch {\n            return null\n        }\n    })\n}\nfunction fetchEnglishBundle() {\n    return Object.entries(list).map(async ([url, namespace]): Promise<Bundle | null> => {\n        try {\n            const path = url.replace('%locale%', 'en-US')\n            const response = await fetch(I18N_LOCALES_HOST + path, fetchOption)\n            const json = await response.json()\n            if (!isValidTranslation(json)) return null\n            return [namespace, 'en-US', json]\n        } catch {\n            return null\n        }\n    })\n}\nfunction isValidTranslation(obj: unknown): obj is Record<string, string> {\n    if (typeof obj !== 'object' || obj === null) return false\n    for (const key in obj) {\n        if (typeof (obj as any)[key] !== 'string') return false\n    }\n    return true\n}\n\nconst fetchOption = {\n    credentials: 'omit',\n    referrerPolicy: 'no-referrer',\n} as const\n\nfunction getCurrentLanguage(lang: string) {\n    if (['zh-CN', 'zh-TW'].includes(lang)) return lang\n    if (lang.startsWith('en')) return 'en-US'\n    if (lang.startsWith('zh')) return 'zh-TW'\n    if (lang.startsWith('ja')) return 'ja-JP'\n    if (lang.startsWith('ko')) return 'ko-KR'\n    return null\n}\n","import { fetchText } from './index.js'\n\nexport async function fetchSandboxedPluginManifest(addr: string): Promise<unknown> {\n    const text = await fetchText(addr + 'mask-manifest.json')\n\n    // TODO: verify manifest\n    return JSON.parse(\n        text\n            .split('\\n')\n            .filter((x) => !x.match(/^ +\\/\\//))\n            .join('\\n'),\n    )\n}\n","export async function getActiveTabId() {\n    const tabs = await browser.tabs.query({ currentWindow: true, active: true, windowType: 'normal' })\n    return tabs[0]?.id\n}\n","export { fetchBlob, fetchJSON, fetchText, fetchGlobal } from '@masknet/web3-providers/helpers'\nexport { resolveTCOLink } from './short-link-resolver.js'\nexport {\n    openPopupWindow,\n    removePopupWindow,\n    openDashboard,\n    queryCurrentActiveTab,\n    queryCurrentPopupWindowId,\n} from './popup-opener.js'\nexport {\n    queryExtensionPermission,\n    requestExtensionPermission,\n    hasHostPermission,\n    requestHostPermission,\n} from './request-permission.js'\nexport { queryRemoteI18NBundle, type Bundle } from './i18n-cache-query.js'\nexport { getTelemetryID, setTelemetryID } from './telemetry-id.js'\nexport { fetchSandboxedPluginManifest } from './sandboxed.js'\nexport { getActiveTabId } from './tabs.js'\n","import urlcat, { type ParamMap } from 'urlcat'\nimport { type DashboardRoutes, PopupRoutes, MaskMessages, type PopupRoutesParamsMap } from '@masknet/shared-base'\nimport { isLocked } from '../wallet/services/index.js'\n\nlet currentPopupWindowId = 0\n\nasync function openWindow(url: string): Promise<void> {\n    const windows = await browser.windows.getAll()\n    const popup = windows.find((window) => window?.type === 'popup' && window.id === currentPopupWindowId)\n    if (popup) {\n        await browser.windows.update(popup.id!, { focused: true })\n    } else {\n        let left: number\n        let top: number\n\n        try {\n            const lastFocused = await browser.windows.getLastFocused()\n            // Position window in top right corner of lastFocused window.\n            top = lastFocused.top ?? 0\n            left = (lastFocused.left ?? 0) + (lastFocused.width ?? 0) - 400\n        } catch {\n            // The following properties are more than likely 0, due to being\n            // opened from the background chrome process for the extension that\n            // has no physical dimensions\n\n            // Note: DOM is only available in MV2 or MV3 page mode.\n            const { screenX, outerWidth, screenY } = globalThis as any\n            if (typeof screenX === 'number' && typeof screenY === 'number' && typeof outerWidth === 'number') {\n                top = Math.max(screenY, 0)\n                left = Math.max(screenX + (outerWidth - 400), 0)\n            } else {\n                top = 100\n                left = 100\n            }\n        }\n\n        const { id } = await browser.windows.create({\n            url: browser.runtime.getURL(url),\n            width: 400,\n            height: 628,\n            type: 'popup',\n            state: 'normal',\n            left,\n            top,\n        })\n\n        // update currentPopupWindowId and clean event\n        if (id) {\n            currentPopupWindowId = id\n            browser.windows.onRemoved.addListener(function listener(windowID: number) {\n                if (windowID !== id) return\n                currentPopupWindowId = 0\n                browser.windows.onRemoved.removeListener(listener)\n            })\n        }\n    }\n}\nasync function openOrUpdatePopupWindow(route: PopupRoutes, params: ParamMap) {\n    if (!currentPopupWindowId) return openWindow(urlcat('popups.html#', route, params))\n\n    await browser.windows.update(currentPopupWindowId, { focused: true })\n    MaskMessages.events.popupRouteUpdated.sendToAll(\n        urlcat(route, {\n            close_after_unlock: true,\n            ...params,\n        }),\n    )\n}\n\nconst noWalletUnlockNeeded: PopupRoutes[] = [PopupRoutes.PersonaSignRequest, PopupRoutes.Personas]\n\nexport async function openPopupWindow<T extends PopupRoutes>(\n    route: T,\n    params: T extends keyof PopupRoutesParamsMap ? PopupRoutesParamsMap[T] : undefined,\n    evenWhenWalletLocked?: boolean,\n): Promise<void> {\n    if (noWalletUnlockNeeded.includes(route) || evenWhenWalletLocked || !(await isLocked())) {\n        return openOrUpdatePopupWindow(route, {\n            close_after_unlock: true,\n            ...params,\n        })\n    } else {\n        return openOrUpdatePopupWindow(PopupRoutes.Wallet, {\n            close_after_unlock: true,\n            from: urlcat(route, params as ParamMap),\n        } satisfies PopupRoutesParamsMap[PopupRoutes.Wallet])\n    }\n}\n\nexport async function queryCurrentPopupWindowId() {\n    return currentPopupWindowId\n}\n\nexport async function removePopupWindow(): Promise<void> {\n    if (!currentPopupWindowId) return\n    browser.windows.remove(currentPopupWindowId)\n    currentPopupWindowId = 0\n}\n\nexport async function openDashboard(route?: DashboardRoutes, search?: string) {\n    await browser.tabs.create({\n        active: true,\n        url: browser.runtime.getURL(`/dashboard.html#${route}${search ? `?${search}` : ''}`),\n    })\n}\n\nexport async function queryCurrentActiveTab() {\n    const [activeTab] = await browser.tabs.query({ active: true, currentWindow: true })\n    return activeTab\n}\n","import { PopupRoutes } from '@masknet/shared-base'\nimport type { Permissions } from 'webextension-polyfill'\n\nexport function getPermissionRequestURL(permission: Permissions.Permissions) {\n    const { origins = [], permissions = [] } = permission\n    const params = new URLSearchParams()\n    for (const each of origins) params.append('origins', each)\n    for (const each of permissions) params.append('permissions', each)\n    return `${browser.runtime.getURL(`/popups.html#${PopupRoutes.RequestPermission}`)}?${params.toString()}`\n}\n","import type { Permissions } from 'webextension-polyfill'\nimport { MaskMessages } from '@masknet/shared-base'\nimport { getPermissionRequestURL } from '../../../shared/definitions/routes.js'\nimport type { SiteAdaptor } from '../../../shared/site-adaptors/types.js'\n\nexport async function requestExtensionPermission(permission: Permissions.Permissions): Promise<boolean> {\n    if (await browser.permissions.contains(permission)) return true\n    try {\n        return await browser.permissions.request(permission).then(sendNotification)\n    } catch {\n        // which means we're on Firefox or Manifest V3.\n        // Chrome Manifest v2 allows permission request from the background.\n    }\n    const popup = await browser.windows.create({\n        height: 600,\n        width: 400,\n        type: 'popup',\n        url: getPermissionRequestURL(permission),\n    })\n    return new Promise((resolve) => {\n        browser.windows.onRemoved.addListener(function listener(windowID: number) {\n            if (windowID !== popup.id) return\n            browser.permissions.contains(permission).then(sendNotification).then(resolve)\n            browser.windows.onRemoved.removeListener(listener)\n        })\n    })\n}\n\nfunction sendNotification(result: boolean) {\n    if (result) MaskMessages.events.hostPermissionChanged.sendToAll()\n    return result\n}\n/** @internal */\nexport async function requestHostPermissionForActiveTab() {\n    const [{ id, url }] = await browser.tabs.query({ active: true })\n    if (!id || !url) return false\n    return requestHostPermission([new URL(url).origin + '/*'])\n}\nexport async function requestHostPermission(origins: readonly string[]) {\n    const currentOrigins = (await browser.permissions.getAll()).origins || []\n    const extra = origins.filter((i) => !currentOrigins?.includes(i))\n    if (!extra.length) return true\n    return requestExtensionPermission({ origins: extra })\n}\n\nexport function hasHostPermission(origins: readonly string[]) {\n    return browser.permissions.contains({ origins: [...origins] })\n}\n\nexport function queryExtensionPermission(permission: Permissions.AnyPermissions): Promise<boolean> {\n    return browser.permissions.contains(permission)\n}\n\n/** @internal */\nexport function requestSiteAdaptorsPermission(defines: readonly SiteAdaptor.Definition[]) {\n    return requestExtensionPermission({\n        origins: defines.map((x) => x.declarativePermissions.origins).flat(),\n    })\n}\n","// DO NOT CHANGE! import from folder instead of package directly\n// because we need as less as possible files to be imported.\n\n// All imports must be deferred. This file loads in the very early stage.\n\nimport * as base /* webpackDefer: true */ from '@masknet/shared-base'\nimport { TelemetryID } from '../../../../shared-base/src/Telemetry/index.js'\n\nimport.meta.webpackHot?.accept()\n\nexport async function getTelemetryID(): Promise<string> {\n    const { telemetry_id } = await browser.storage.local.get('telemetry_id')\n    return telemetry_id || setTelemetryID()\n}\n\nexport async function setTelemetryID(sendNotification = true): Promise<string> {\n    const id = Array.from(crypto.getRandomValues(new Uint8Array(40)), (i) => (i % 16).toString(16))\n        .join('')\n        .slice(0, 40)\n    try {\n        await browser.storage.local.set({ telemetry_id: id })\n    } catch {}\n\n    if (sendNotification) base.MaskMessages.events.telemetryIDReset.sendToAll(id)\n\n    TelemetryID.value = id\n    return id\n}\n","import * as bip39 from 'bip39'\nimport * as wallet from /* webpackDefer: true */ 'wallet.ts'\nimport { encodeArrayBuffer, encodeText } from '@masknet/kit'\nimport {\n    type EC_Private_JsonWebKey,\n    type EC_Public_JsonWebKey,\n    type JsonWebKeyPair,\n    toBase64URL,\n    decompressK256Key,\n    type AESCryptoKey,\n    type AESJsonWebKey,\n    isEC_Private_JsonWebKey,\n} from '@masknet/shared-base'\nimport { CryptoKeyToJsonWebKey } from '../../../../utils-pure/index.js'\nimport type { PersonaRecord } from '../../../database/persona/db.js'\n\n/**\n * Local key (AES key) is used to encrypt message to myself.\n * This key should never be published.\n */\n\nexport async function deriveLocalKeyFromECDHKey(\n    pub: EC_Public_JsonWebKey,\n    mnemonicWord: string,\n): Promise<AESJsonWebKey> {\n    // ? Derive method: publicKey as \"password\" and password for the mnemonicWord as hash\n    const pbkdf2 = await crypto.subtle.importKey('raw', encodeText(pub.x! + pub.y!), 'PBKDF2', false, [\n        'deriveBits',\n        'deriveKey',\n    ])\n    const aes = await crypto.subtle.deriveKey(\n        { name: 'PBKDF2', salt: encodeText(mnemonicWord), iterations: 100000, hash: 'SHA-256' },\n        pbkdf2,\n        { name: 'AES-GCM', length: 256 },\n        true,\n        ['encrypt', 'decrypt'],\n    )\n    return CryptoKeyToJsonWebKey(aes as AESCryptoKey)\n}\n\n// Private key at m/44'/coinType'/account'/change/addressIndex\n// coinType = ether\nconst path = \"m/44'/60'/0'/0/0\"\n\ntype MnemonicGenerationInformation = {\n    key: JsonWebKeyPair<EC_Public_JsonWebKey, EC_Private_JsonWebKey>\n    password: string\n    mnemonicRecord: NonNullable<PersonaRecord['mnemonic']>\n}\n\nexport async function recover_ECDH_256k1_KeyPair_ByMnemonicWord(\n    mnemonicWord: string,\n    password: string,\n): Promise<MnemonicGenerationInformation> {\n    const verify = bip39.validateMnemonic(mnemonicWord)\n    if (!verify) {\n        console.warn('Verify error')\n    }\n    const seed = await bip39.mnemonicToSeed(mnemonicWord, password)\n    const masterKey = wallet.HDKey.parseMasterSeed(seed)\n    const derivedKey = masterKey.derive(path)\n    const key = await split_ec_k256_key_pair_into_pub_priv(await HDKeyToJwk(derivedKey))\n    return {\n        key,\n        password,\n        mnemonicRecord: {\n            parameter: { path, withPassword: password.length > 0 },\n            words: mnemonicWord,\n        },\n    }\n}\n\nexport async function validateMnemonic(mnemonic: string, wordList?: string[] | undefined): Promise<boolean> {\n    return bip39.validateMnemonic(mnemonic, wordList)\n}\n\nasync function HDKeyToJwk(hdk: wallet.HDKey): Promise<JsonWebKey> {\n    const jwk = await decompressK256Key(encodeArrayBuffer(hdk.publicKey))\n    jwk.d = hdk.privateKey ? toBase64URL(hdk.privateKey) : undefined\n    return jwk\n}\n\nasync function split_ec_k256_key_pair_into_pub_priv(\n    key: Readonly<JsonWebKey>,\n): Promise<JsonWebKeyPair<EC_Public_JsonWebKey, EC_Private_JsonWebKey>> {\n    if (!isEC_Private_JsonWebKey(key)) throw new TypeError('Not a EC private key')\n    const { d, ...pub } = key\n    // @ts-expect-error Do a force transform\n    return { privateKey: { ...key }, publicKey: pub }\n}\n","import * as bip39 from 'bip39'\nimport { decodeArrayBuffer, encodeArrayBuffer } from '@masknet/kit'\nimport {\n    type EC_Public_JsonWebKey,\n    type PersonaIdentifier,\n    isEC_Private_JsonWebKey,\n    ECKeyIdentifier,\n} from '@masknet/shared-base'\nimport { createPersonaByJsonWebKey } from '../../../database/persona/helper.js'\nimport { decode, encode } from '@msgpack/msgpack'\nimport { omit } from 'lodash-es'\nimport { queryPersonasDB } from '../../../database/persona/db.js'\nimport { deriveLocalKeyFromECDHKey, recover_ECDH_256k1_KeyPair_ByMnemonicWord } from './utils.js'\n\nexport async function createPersonaByPrivateKey(\n    privateKeyString: string,\n    nickname: string,\n): Promise<PersonaIdentifier> {\n    const privateKey = decode(decodeArrayBuffer(privateKeyString))\n    if (!isEC_Private_JsonWebKey(privateKey)) throw new TypeError('Invalid private key')\n\n    return createPersonaByJsonWebKey({ privateKey, publicKey: omit(privateKey, 'd') as EC_Public_JsonWebKey, nickname })\n}\n\nexport async function createPersonaByMnemonicV2(\n    mnemonicWord: string,\n    nickname: string | undefined,\n    password: string,\n): Promise<PersonaIdentifier> {\n    const personas = await queryPersonasDB({ nameContains: nickname })\n    if (personas.length > 0) throw new Error('Nickname already exists')\n\n    const verify = bip39.validateMnemonic(mnemonicWord)\n    if (!verify) throw new Error('Verify error')\n\n    const { key, mnemonicRecord: mnemonic } = await recover_ECDH_256k1_KeyPair_ByMnemonicWord(mnemonicWord, password)\n    const { privateKey, publicKey } = key\n    const localKey = await deriveLocalKeyFromECDHKey(publicKey, mnemonic.words)\n    return createPersonaByJsonWebKey({\n        privateKey,\n        publicKey,\n        localKey,\n        mnemonic,\n        nickname,\n        uninitialized: false,\n    })\n}\n\nexport async function queryPersonaKeyByMnemonicV2(mnemonicWords: string) {\n    const { key } = await recover_ECDH_256k1_KeyPair_ByMnemonicWord(mnemonicWords, '')\n    const identifier = (await ECKeyIdentifier.fromJsonWebKey(key.publicKey)).unwrap()\n    const encodePrivateKey = encode(key.privateKey)\n    const privateKey = encodeArrayBuffer(encodePrivateKey)\n    return {\n        publicKey: identifier.toText(),\n        privateKey,\n    }\n}\n","import { first, omit, orderBy } from 'lodash-es'\nimport {\n    ECKeyIdentifier,\n    type EC_Public_JsonWebKey,\n    fromBase64URL,\n    isEC_Private_JsonWebKey,\n    type NextIDPlatform,\n    type PersonaIdentifier,\n    type PersonaInformation,\n    type ProfileIdentifier,\n    type SocialIdentity,\n} from '@masknet/shared-base'\nimport type { IdentityResolved } from '@masknet/plugin-infra'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport {\n    createPersonaDBReadonlyAccess,\n    queryPersonaDB,\n    queryPersonasDB,\n    queryProfileDB,\n} from '../../../database/persona/db.js'\nimport { toPersonaInformation } from '../../__utils__/convert.js'\nimport * as bip39 from 'bip39'\nimport { recover_ECDH_256k1_KeyPair_ByMnemonicWord } from './utils.js'\nimport { bufferToHex, privateToPublic, publicToAddress } from '@ethereumjs/util'\nimport { decode } from '@msgpack/msgpack'\nimport { decodeArrayBuffer } from '@masknet/kit'\n\nexport async function queryOwnedPersonaInformation(initializedOnly: boolean): Promise<PersonaInformation[]> {\n    let result: Promise<PersonaInformation[]>\n    await createPersonaDBReadonlyAccess(async (t) => {\n        let personas = await queryPersonasDB({ hasPrivateKey: true }, t)\n        if (initializedOnly) personas = personas.filter((x) => !x.uninitialized)\n        result = toPersonaInformation(personas, t).mustNotAwaitThisWithInATransaction\n    })\n    return result!\n}\n\nexport async function queryLastPersonaCreated(): Promise<PersonaIdentifier | undefined> {\n    const all = await queryPersonasDB({ hasPrivateKey: true })\n    return first(orderBy(all, (x) => x.createdAt, 'desc'))?.identifier\n}\n\nexport async function queryPersonaByProfile(id: ProfileIdentifier): Promise<PersonaInformation | undefined> {\n    let result: Promise<PersonaInformation> | undefined\n    await createPersonaDBReadonlyAccess(async (t) => {\n        const profile = await queryProfileDB(id, t)\n        if (!profile?.linkedPersona) return\n        const persona = await queryPersonaDB(profile.linkedPersona, t)\n        if (!persona) return\n        result = toPersonaInformation([persona], t).mustNotAwaitThisWithInATransaction.then((x) => first(x)!)\n    })\n    return result\n}\n\nexport async function queryPersona(id: PersonaIdentifier): Promise<undefined | PersonaInformation> {\n    let result: Promise<PersonaInformation> | undefined\n    await createPersonaDBReadonlyAccess(async (t) => {\n        const persona = await queryPersonaDB(id, t)\n        if (!persona) return\n        result = toPersonaInformation([persona], t).mustNotAwaitThisWithInATransaction.then((x) => first(x)!)\n    })\n    return result\n}\n\nexport async function queryPersonaEOAByMnemonic(mnemonicWord: string, password: string) {\n    const verify = bip39.validateMnemonic(mnemonicWord)\n    if (!verify) throw new Error('Verify error')\n\n    const { key } = await recover_ECDH_256k1_KeyPair_ByMnemonicWord(mnemonicWord, password)\n    const { privateKey, publicKey } = key\n\n    if (!privateKey.d) return\n    return {\n        address: bufferToHex(publicToAddress(privateToPublic(Buffer.from(fromBase64URL(privateKey.d))))),\n        identifier: (await ECKeyIdentifier.fromJsonWebKey(publicKey)).unwrap(),\n        publicKey,\n    }\n}\n\nexport async function queryPersonaEOAByPrivateKey(privateKeyString: string) {\n    const privateKey = decode(decodeArrayBuffer(privateKeyString))\n\n    if (!isEC_Private_JsonWebKey(privateKey) || !privateKey.d) throw new TypeError('Invalid private key')\n    const publicKey = omit(privateKey, 'd') as EC_Public_JsonWebKey\n    return {\n        address: bufferToHex(publicToAddress(privateToPublic(Buffer.from(fromBase64URL(privateKey.d))))),\n        identifier: (await ECKeyIdentifier.fromJsonWebKey(publicKey)).unwrap(),\n        publicKey,\n    }\n}\n\nexport async function queryPersonasFromNextID(platform: NextIDPlatform, identityResolved: IdentityResolved) {\n    if (!identityResolved.identifier) return\n    return NextIDProof.queryAllExistedBindingsByPlatform(platform, identityResolved.identifier.userId)\n}\n\nexport async function querySocialIdentity(\n    platform: NextIDPlatform,\n    identity: IdentityResolved | undefined,\n): Promise<SocialIdentity | undefined> {\n    if (!identity?.identifier) return\n    const bindings = await queryPersonasFromNextID(platform, identity)\n    const persona = await queryPersonaByProfile(identity.identifier)\n    const personaBindings =\n        bindings?.filter((x) => x.persona === persona?.identifier.publicKeyAsHex.toLowerCase()) ?? []\n    return {\n        ...identity,\n        publicKey: persona?.identifier.publicKeyAsHex,\n        hasBinding: personaBindings.length > 0,\n        binding: first(personaBindings),\n    }\n}\n\nexport { queryPersonaDB } from '../../../database/persona/db.js'\n","import { decodeArrayBuffer } from '@masknet/kit'\nimport { ECKeyIdentifier, isEC_Private_JsonWebKey, MaskMessages, type PersonaIdentifier } from '@masknet/shared-base'\nimport { decode } from '@msgpack/msgpack'\nimport {\n    consistentPersonaDBWriteAccess,\n    queryPersonaDB,\n    detachProfileDB,\n    deletePersonaDB,\n    safeDeletePersonaDB,\n    updatePersonaDB,\n    queryPersonasDB,\n} from '../../../database/persona/db.js'\nimport { recover_ECDH_256k1_KeyPair_ByMnemonicWord, validateMnemonic } from './utils.js'\n\nexport async function deletePersona(id: PersonaIdentifier, confirm: 'delete even with private' | 'safe delete') {\n    return consistentPersonaDBWriteAccess(async (t) => {\n        const d = await queryPersonaDB(id, t)\n        if (!d) return\n        for (const e of d.linkedProfiles) {\n            await detachProfileDB(e[0], t)\n        }\n        if (confirm === 'delete even with private') await deletePersonaDB(id, 'delete even with private', t)\n        else if (confirm === 'safe delete') await safeDeletePersonaDB(id, t)\n    })\n}\n\nasync function loginPersona(identifier: PersonaIdentifier) {\n    return consistentPersonaDBWriteAccess((t) =>\n        updatePersonaDB(\n            { identifier, hasLogout: false },\n            { linkedProfiles: 'merge', explicitUndefinedField: 'ignore' },\n            t,\n        ),\n    )\n}\n\nexport async function logoutPersona(identifier: PersonaIdentifier) {\n    await consistentPersonaDBWriteAccess((t) =>\n        updatePersonaDB(\n            { identifier, hasLogout: true },\n            { linkedProfiles: 'merge', explicitUndefinedField: 'ignore' },\n            t,\n        ),\n    )\n\n    MaskMessages.events.personasChanged.sendToAll()\n}\n\nexport async function setupPersona(id: PersonaIdentifier) {\n    return consistentPersonaDBWriteAccess(async (t) => {\n        const d = await queryPersonaDB(id, t)\n        if (!d) throw new Error('cannot find persona')\n        if (!d.privateKey) throw new Error('Cannot setup a persona without a private key')\n        if (d.linkedProfiles.size === 0) throw new Error('persona should link at least one profile')\n        if (d.uninitialized) {\n            await updatePersonaDB(\n                { identifier: id, uninitialized: false },\n                { linkedProfiles: 'merge', explicitUndefinedField: 'ignore' },\n                t,\n            )\n        }\n    })\n}\n\nexport async function loginExistPersonaByPrivateKey(privateKeyString: string): Promise<PersonaIdentifier | null> {\n    const privateKey = decode(decodeArrayBuffer(privateKeyString))\n    if (!isEC_Private_JsonWebKey(privateKey)) throw new TypeError('Invalid private key')\n    const identifier = (await ECKeyIdentifier.fromJsonWebKey(privateKey)).unwrap()\n\n    const persona = await queryPersonaDB(identifier, undefined, true)\n    if (persona) {\n        await loginPersona(persona.identifier)\n\n        return identifier\n    }\n\n    return null\n}\n\nexport async function renamePersona(identifier: PersonaIdentifier, nickname: string): Promise<void> {\n    const personas = await queryPersonasDB({ nameContains: nickname })\n    if (personas.length > 0) throw new Error('Nickname already exists')\n\n    return consistentPersonaDBWriteAccess((t) =>\n        updatePersonaDB({ identifier, nickname }, { linkedProfiles: 'merge', explicitUndefinedField: 'ignore' }, t),\n    )\n}\n\nexport async function queryPersonaByMnemonic(mnemonic: string, password: ''): Promise<PersonaIdentifier | null> {\n    const verified = await validateMnemonic(mnemonic)\n    if (!verified) throw new Error('Verify error')\n\n    const { key } = await recover_ECDH_256k1_KeyPair_ByMnemonicWord(mnemonic, password)\n    const identifier = (await ECKeyIdentifier.fromJsonWebKey(key.privateKey)).unwrap()\n    const persona = await queryPersonaDB(identifier, undefined, true)\n    if (persona) {\n        await loginPersona(persona.identifier)\n        return persona.identifier\n    }\n\n    return null\n}\n","import { MaskMessages, type PersonaIdentifier, type ProfileIdentifier } from '@masknet/shared-base'\nimport { queryAvatarLastUpdateTime, queryAvatarsDataURL, storeAvatar } from '../../../database/avatar-cache/avatar.js'\n\nexport async function getPersonaAvatar(identifiers: undefined | PersonaIdentifier): Promise<string | undefined>\nexport async function getPersonaAvatar(\n    identifiers: readonly PersonaIdentifier[],\n): Promise<Map<ProfileIdentifier | PersonaIdentifier, string>>\nexport async function getPersonaAvatar(\n    identifiers: undefined | PersonaIdentifier | readonly PersonaIdentifier[],\n): Promise<string | undefined | Map<ProfileIdentifier | PersonaIdentifier, string>> {\n    if (!identifiers) return undefined\n    // Array.isArray cannot guard for readonly array.\n    // eslint-disable-next-line @masknet/type-no-instanceof-wrapper\n    const map = await queryAvatarsDataURL(identifiers instanceof Array ? identifiers : [identifiers])\n    // eslint-disable-next-line @masknet/type-no-instanceof-wrapper\n    if (identifiers instanceof Array) return map\n    return map.get(identifiers)\n}\n\nexport async function getPersonaAvatarLastUpdateTime(identifier?: PersonaIdentifier | null) {\n    if (!identifier) return undefined\n    return queryAvatarLastUpdateTime(identifier)\n}\n\nexport async function updatePersonaAvatar(identifier: PersonaIdentifier | null | undefined, avatar: Blob) {\n    if (!identifier) return\n    await storeAvatar(identifier, await avatar.arrayBuffer())\n    MaskMessages.events.ownPersonaChanged.sendToAll(undefined)\n}\n","import type { ProfileIdentifier, ProfileInformation } from '@masknet/shared-base'\nimport {\n    createPersonaDBReadonlyAccess,\n    type ProfileRecord,\n    queryPersonasDB,\n    queryProfilesDB,\n    queryProfileDB,\n} from '../../../database/persona/db.js'\nimport { hasLocalKeyOf } from '../../../database/persona/helper.js'\nimport { toProfileInformation } from '../../__utils__/convert.js'\n\nexport async function queryProfilesInformation(identifiers: ProfileIdentifier[]): Promise<ProfileInformation[]> {\n    const profiles = await queryProfilesDB({ identifiers })\n    return toProfileInformation(profiles).mustNotAwaitThisWithInATransaction\n}\n\nexport async function queryProfileInformation(identifier: ProfileIdentifier): Promise<ProfileInformation[] | null> {\n    const profile = await queryProfileDB(identifier)\n    return toProfileInformation(profile ? [profile] : []).mustNotAwaitThisWithInATransaction\n}\n\n/** @deprecated */\nexport async function hasLocalKey(identifier: ProfileIdentifier) {\n    return hasLocalKeyOf(identifier)\n}\n\nexport async function queryOwnedProfilesInformation(network?: string): Promise<ProfileInformation[]> {\n    let profiles: ProfileRecord[]\n    await createPersonaDBReadonlyAccess(async (t) => {\n        const personas = (await queryPersonasDB({ hasPrivateKey: true }, t)).sort((a, b) =>\n            a.updatedAt > b.updatedAt ? 1 : -1,\n        )\n        const ids = Array.from(new Set(personas.flatMap((x) => [...x.linkedProfiles.keys()])))\n        profiles = await queryProfilesDB({ identifiers: ids, network }, t)\n    })\n    return toProfileInformation(profiles!.filter((x) => x.identifier.network === network))\n        .mustNotAwaitThisWithInATransaction\n}\n","import {\n    decompressK256Key,\n    type ECKeyIdentifier,\n    NextIDAction,\n    type PersonaIdentifier,\n    ProfileIdentifier,\n    type ProfileInformationFromNextID,\n    RelationFavor,\n    MaskMessages,\n} from '@masknet/shared-base'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { storeAvatar } from '../../../database/avatar-cache/avatar.js'\nimport {\n    attachProfileDB,\n    consistentPersonaDBWriteAccess,\n    createOrUpdateProfileDB,\n    createProfileDB,\n    deleteProfileDB,\n    detachProfileDB,\n    type LinkedProfileDetails,\n    type PersonaRecord,\n    type ProfileRecord,\n    queryProfileDB,\n    queryProfilesDB,\n} from '../../../database/persona/db.js'\nimport { createOrUpdatePersonaDB, createOrUpdateRelationDB } from '../../../database/persona/web.js'\n\ninterface UpdateProfileInfo {\n    nickname?: string | null\n    avatarURL?: ArrayBuffer | string | null\n}\nexport async function updateProfileInfo(identifier: ProfileIdentifier, data: UpdateProfileInfo): Promise<void> {\n    if (data.nickname) {\n        const rec: ProfileRecord = {\n            identifier,\n            nickname: data.nickname,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n        }\n        await consistentPersonaDBWriteAccess((t) => createOrUpdateProfileDB(rec, t))\n    }\n    if (data.avatarURL) await storeAvatar(identifier, data.avatarURL)\n}\n\nexport async function detachProfileWithNextID(\n    uuid: string,\n    personaPublicKey: string,\n    platform: string,\n    identity: string,\n    createdAt: string,\n    options?: {\n        signature?: string\n    },\n): Promise<void> {\n    await NextIDProof.bindProof(uuid, personaPublicKey, NextIDAction.Delete, platform, identity, createdAt, {\n        signature: options?.signature,\n    })\n    MaskMessages.events.ownProofChanged.sendToAll(undefined)\n}\nconst err = 'resolveUnknownLegacyIdentity should not be called on localhost'\n/**\n * In older version of Mask, identity is marked as `ProfileIdentifier(network, '$unknown')` or `ProfileIdentifier(network, '$self')`. After upgrading to the newer version of Mask, Mask will try to find the current user in that network and call this function to replace old identifier into a \"resolved\" identity.\n * @param identifier The resolved identity\n */\nexport async function resolveUnknownLegacyIdentity(identifier: ProfileIdentifier): Promise<void> {\n    const unknown = ProfileIdentifier.of(identifier.network, '$unknown').expect(err)\n    const self = ProfileIdentifier.of(identifier.network, '$self').expect(err)\n\n    const records = await queryProfilesDB({ identifiers: [unknown, self] })\n    if (!records.length) return\n    const finalRecord: ProfileRecord = Object.assign({}, ...records, { identifier })\n    try {\n        await consistentPersonaDBWriteAccess(async (t) => {\n            await createProfileDB(finalRecord, t)\n            await deleteProfileDB(unknown, t).catch(() => {})\n            await deleteProfileDB(self, t).catch(() => {})\n        })\n    } catch {\n        // the profile already exists\n    }\n}\n\n/**\n * Remove an identity.\n */\nexport async function attachProfile(\n    source: ProfileIdentifier,\n    target: ProfileIdentifier | PersonaIdentifier,\n    data: LinkedProfileDetails,\n): Promise<void> {\n    if (target instanceof ProfileIdentifier) {\n        const profile = await queryProfileDB(target)\n        if (!profile?.linkedPersona) throw new Error('target not found')\n        target = profile.linkedPersona\n    }\n    return attachProfileDB(source, target, data)\n}\nexport function detachProfile(identifier: ProfileIdentifier): Promise<void> {\n    return detachProfileDB(identifier)\n}\n\n/**\n * Set NextID profile to profileDB\n * */\n\nexport async function attachNextIDPersonaToProfile(item: ProfileInformationFromNextID, whoAmI: ECKeyIdentifier) {\n    if (!item.linkedPersona) throw new Error('LinkedPersona Not Found')\n    const now = new Date()\n    const personaRecord: PersonaRecord = {\n        createdAt: now,\n        updatedAt: now,\n        identifier: item.linkedPersona,\n        linkedProfiles: new Map(),\n        publicKey: await decompressK256Key(item.linkedPersona.rawPublicKey),\n        publicHexKey: item.linkedPersona?.publicKeyAsHex,\n        nickname: item.nickname,\n        hasLogout: false,\n        uninitialized: false,\n    }\n\n    const profileRecord: ProfileRecord = {\n        identifier: item.identifier,\n        nickname: item.nickname,\n        linkedPersona: item.linkedPersona,\n        createdAt: now,\n        updatedAt: now,\n    }\n    try {\n        await consistentPersonaDBWriteAccess(async (t) => {\n            await createOrUpdatePersonaDB(\n                personaRecord,\n                { explicitUndefinedField: 'ignore', linkedProfiles: 'merge' },\n                t,\n            )\n            await createOrUpdateProfileDB(profileRecord, t)\n            await attachProfileDB(\n                profileRecord.identifier,\n                item.linkedPersona!,\n                { connectionConfirmState: 'confirmed' },\n                t,\n            )\n            await createOrUpdateRelationDB(\n                {\n                    profile: profileRecord.identifier,\n                    linked: whoAmI,\n                    favor: RelationFavor.UNCOLLECTED,\n                },\n                t,\n            )\n        })\n    } catch {\n        // already exist\n    }\n}\n","export interface JsonRpcPayload {\n    jsonrpc: string\n    method: string\n    params?: any[]\n    id?: string | number\n}\n\nexport interface JsonRpcResponse {\n    jsonrpc: string\n    id: number\n    result?: any\n    error?: string\n}\n\nexport interface LinkedProfileDetails {\n    connectionConfirmState: 'confirmed' | 'pending'\n}\n\n// These type MUST be sync with packages/shared-base/src/crypto/JWKType\nexport interface JsonWebKey {\n    alg?: string\n    crv?: string\n    d?: string\n    dp?: string\n    dq?: string\n    e?: string\n    ext?: boolean\n    k?: string\n    key_ops?: string[]\n    kty?: string\n    n?: string\n    oth?: RsaOtherPrimesInfo[]\n    p?: string\n    q?: string\n    qi?: string\n    use?: string\n    x?: string\n    y?: string\n}\nexport interface RsaOtherPrimesInfo {\n    d?: string\n    r?: string\n    t?: string\n}\nexport interface EC_Public_JsonWebKey extends JsonWebKey, Nominal<'EC public'> {}\nexport interface EC_Private_JsonWebKey extends JsonWebKey, Nominal<'EC private'> {}\nexport interface AESJsonWebKey extends JsonWebKey, Nominal<'AES'> {}\n\ndeclare class Nominal<T> {\n    /** Ghost property, don't use it! */\n    private __brand: T\n}\n\nexport interface PersonaRecord {\n    identifier: string\n    mnemonic?: {\n        words: string\n        parameter: { path: string; withPassword: boolean }\n    }\n    publicKey: EC_Public_JsonWebKey\n    privateKey?: EC_Private_JsonWebKey\n    localKey?: AESJsonWebKey\n    nickname?: string\n    linkedProfiles: Record<string, LinkedProfileDetails>\n    createdAt: number\n    updatedAt: number\n    hasLogout?: boolean\n    uninitialized?: boolean\n}\n\nexport interface ProfileRecord {\n    identifier: string\n    nickname?: string\n    localKey?: AESJsonWebKey\n    linkedPersona?: string\n    createdAt: number\n    updatedAt: number\n}\n\nexport enum RelationFavor {\n    COLLECTED = -1,\n    UNCOLLECTED = 1,\n    DEPRECATED = 0,\n}\n\nexport interface RelationRecord {\n    profile: string\n    linked: string\n    network: string\n    favor: RelationFavor\n}\n","import { RelationFavor } from '@masknet/public-api'\nimport type { ProfileIdentifier, PersonaIdentifier } from '@masknet/shared-base'\nimport { createRelationsTransaction, createRelationDB } from '../../../database/persona/db.js'\n\nexport async function createNewRelation(\n    profile: ProfileIdentifier | PersonaIdentifier,\n    linked: PersonaIdentifier,\n    favor = RelationFavor.UNCOLLECTED,\n): Promise<void> {\n    const t = await createRelationsTransaction()\n    const relationInDB = await t.objectStore('relations').get([linked.toText(), profile.toText()])\n    if (relationInDB) return\n\n    await createRelationDB({ profile, linked, favor }, t)\n}\n","import type { PersonaIdentifier } from '@masknet/shared-base'\nimport { queryRelationsPagedDB, type RelationRecord } from '../../../database/persona/db.js'\n\ninterface QueryRelationPagedOptions {\n    network: string\n    after?: RelationRecord\n    pageOffset?: number\n}\n\nexport async function queryRelationPaged(\n    currentPersona: PersonaIdentifier | undefined | null,\n    options: QueryRelationPagedOptions,\n    count: number,\n): Promise<RelationRecord[]> {\n    if (!currentPersona) return []\n    return queryRelationsPagedDB(currentPersona, options, count)\n}\n","import type { PersonaIdentifier, ProfileIdentifier, RelationFavor } from '@masknet/shared-base'\nimport { createRelationsTransaction, deletePersonaRelationDB, updateRelationDB } from '../../../database/persona/db.js'\n\nexport async function updateRelation(\n    profile: ProfileIdentifier | PersonaIdentifier,\n    linked: PersonaIdentifier,\n    favor: RelationFavor,\n) {\n    const t = await createRelationsTransaction()\n    await updateRelationDB({ profile, linked, favor }, t)\n}\n\nexport async function deletePersonaRelation(persona: PersonaIdentifier, linked: PersonaIdentifier) {\n    const t = await createRelationsTransaction()\n    await deletePersonaRelationDB(persona, linked, t)\n}\n","export { queryAvatarsDataURL } from '../../../database/avatar-cache/avatar.js'\n","export * from './persona/create.js'\nexport * from './persona/query.js'\nexport * from './persona/update.js'\nexport * from './persona/sign.js'\nexport * from './persona/avatar.js'\n\nexport * from './profile/query.js'\nexport * from './profile/update.js'\n\nexport * from './relation/create.js'\nexport * from './relation/query.js'\nexport * from './relation/update.js'\n\nexport * from './avatar/query.js'\n\nexport { validateMnemonic } from './persona/utils.js'\n","import { v4 as uuid } from 'uuid'\nimport { timeout } from '@masknet/kit'\nimport { Signer } from '@masknet/web3-providers'\nimport {\n    type PersonaIdentifier,\n    fromBase64URL,\n    PopupRoutes,\n    type ECKeyIdentifier,\n    type SignType,\n    MaskMessages,\n} from '@masknet/shared-base'\nimport { queryPersonasWithPrivateKey } from '../../../database/persona/web.js'\nimport { openPopupWindow } from '../../helper/popup-opener.js'\n\n/**\n * Generate a signature w or w/o confirmation from user\n */\nexport async function signWithPersona(\n    type: SignType,\n    message: unknown,\n    identifier?: ECKeyIdentifier,\n    source?: string,\n    silent = false,\n): Promise<string> {\n    const getIdentifier = async () => {\n        if (!identifier || !silent) {\n            const requestID = uuid()\n            await openPopupWindow(PopupRoutes.PersonaSignRequest, {\n                message: JSON.stringify(message),\n                requestID,\n                identifier: identifier?.toText(),\n                source,\n            })\n\n            return timeout(\n                new Promise<PersonaIdentifier>((resolve, reject) => {\n                    MaskMessages.events.personaSignRequest.on((approval) => {\n                        if (approval.requestID !== requestID) return\n                        if (!approval.selectedPersona)\n                            reject(new Error('The user refused to sign message with persona.'))\n                        resolve(approval.selectedPersona!)\n                    })\n                }),\n                60 * 1000,\n                'Timeout of signing with persona.',\n            )\n        }\n        return identifier\n    }\n\n    const identifier_ = await getIdentifier()\n\n    // find the persona with the signer's identifier\n    const persona = (await queryPersonasWithPrivateKey()).find((x) => x.identifier === identifier_)\n    if (!persona?.privateKey.d) throw new Error('Persona not found')\n\n    return Signer.sign(type, Buffer.from(fromBase64URL(persona.privateKey.d)), message)\n}\n","import { indexedDB_KVStorageBackend, inMemory_KVStorageBackend } from '../../initialization/kv-storage.js'\n\nexport async function __kv_storage_write__(kind: 'indexedDB' | 'memory', key: string, value: unknown) {\n    if (kind === 'memory') {\n        return inMemory_KVStorageBackend.setValue(key, value)\n    } else {\n        return indexedDB_KVStorageBackend.setValue(key, value)\n    }\n}\n\nexport async function __kv_storage_read__(kind: 'indexedDB' | 'memory', key: string) {\n    if (kind === 'memory') {\n        return inMemory_KVStorageBackend.getValue(key)\n    } else {\n        return indexedDB_KVStorageBackend.getValue(key)\n    }\n}\n","export * from './old-settings-accessor.js'\nexport { __kv_storage_read__, __kv_storage_write__ } from './kv-storage.js'\n","import { forIn } from 'lodash-es'\nimport { telemetrySettings } from '@masknet/web3-telemetry'\nimport {\n    currentPersonaIdentifier,\n    getCurrentPluginMinimalMode,\n    languageSettings,\n    MaskMessages,\n    setCurrentPluginMinimalMode,\n    type PersonaIdentifier,\n    type ValueRefWithReady,\n    appearanceSettings,\n    BooleanPreference,\n    InjectSwitchSettings,\n    EnhanceableSite,\n} from '@masknet/shared-base'\nimport { queryPersonasDB } from '../../database/persona/web.js'\n\nfunction create<T>(settings: ValueRefWithReady<T>) {\n    async function get() {\n        await settings.readyPromise\n        return settings.value\n    }\n    async function set(val: T) {\n        await settings.readyPromise\n        settings.value = val\n    }\n    return [get, set] as const\n}\nexport const [isTelemetryEnabled, setTelemetryEnabled] = create(telemetrySettings)\nexport const [getTheme, setTheme] = create(appearanceSettings)\nexport const [getLanguage, setLanguage] = create(languageSettings)\n\nexport async function getCurrentPersonaIdentifier(): Promise<PersonaIdentifier | undefined> {\n    await currentPersonaIdentifier.readyPromise\n    const personas = (await queryPersonasDB({ hasPrivateKey: true }))\n        .sort((a, b) => (a.createdAt > b.createdAt ? 1 : 0))\n        .map((x) => x.identifier)\n    const newVal = currentPersonaIdentifier.value || personas[0]\n    if (!newVal) return\n    if (personas.find((x) => x === newVal)) return newVal\n    if (personas[0]) currentPersonaIdentifier.value = personas[0]\n    return personas[0]\n}\nexport async function setCurrentPersonaIdentifier(x?: PersonaIdentifier) {\n    await currentPersonaIdentifier.readyPromise\n    currentPersonaIdentifier.value = x\n    MaskMessages.events.ownPersonaChanged.sendToAll(undefined)\n}\nexport async function getPluginMinimalModeEnabled(id: string): Promise<BooleanPreference> {\n    return getCurrentPluginMinimalMode(id)\n}\nexport async function setPluginMinimalModeEnabled(id: string, enabled: boolean) {\n    setCurrentPluginMinimalMode(id, enabled ? BooleanPreference.True : BooleanPreference.False)\n\n    MaskMessages.events.pluginMinimalModeChanged.sendToAll([id, enabled])\n}\n\nexport async function getAllInjectSwitchSettings() {\n    const result = {} as Record<EnhanceableSite, boolean>\n    forIn(EnhanceableSite, (value) => {\n        result[value] = InjectSwitchSettings[value].value\n    })\n    return result\n}\n\nexport async function setInjectSwitchSetting(network: string, value: boolean) {\n    InjectSwitchSettings[network].value = value\n}\n\nexport { __deprecated__getStorage as getLegacySettingsInitialValue } from '../../utils/deprecated-storage.js'\n","// Notice, this module itself is not HMR ready.\n// If you change this file to add a new service, you need to reload.\n// This file should not rely on any other in-project files unless it is HMR ready.\n/// <reference path=\"../env.d.ts\" />\n\nimport { AsyncCall, AsyncGeneratorCall } from 'async-call-rpc/full'\nimport { assertEnvironment, Environment, MessageTarget, WebExtensionMessage } from '@dimensiondev/holoflows-kit'\nimport { getOrUpdateLocalImplementationHMR, serializer, setDebugObject } from '@masknet/shared-base'\nimport type { GeneratorServices, Services } from './types.js'\n\nimport { decryptWithDecoding } from './crypto/decryption.js'\nassertEnvironment(Environment.ManifestBackground)\n\nconst debugMode = process.env.NODE_ENV === 'development'\nconst message = new WebExtensionMessage<Record<string, any>>({ domain: '$' })\nconst hmr = new EventTarget()\n\nconst DebugService = Object.create(null)\nexport function startServices() {\n    setup('Crypto', () => import(/* webpackMode: 'eager' */ './crypto/index.js'))\n    setup('Identity', () => import(/* webpackMode: 'eager' */ './identity/index.js'))\n    setup('Backup', () => import(/* webpackMode: 'eager' */ './backup/index.js'))\n    setup('Helper', () => import(/* webpackMode: 'eager' */ './helper/index.js'))\n    setup('SiteAdaptor', () => import(/* webpackMode: 'eager' */ './site-adaptors/index.js'))\n    setup('Settings', () => import(/* webpackMode: 'eager' */ './settings/index.js'), false)\n    setup('Wallet', () => import(/* webpackMode: 'eager' */ './wallet/services/index.js'))\n    setDebugObject('Service', DebugService)\n\n    const GeneratorService: GeneratorServices = {\n        decrypt: decryptWithDecoding,\n    }\n    import.meta.webpackHot?.accept(['./crypto/decryption'], async () => {\n        GeneratorService.decrypt = (\n            await import(/* webpackMode: 'eager' */ './crypto/decryption.js')\n        ).decryptWithDecoding\n    })\n    const channel = message.events.GeneratorServices.bind(MessageTarget.Broadcast)\n    setDebugObject('GeneratorService', GeneratorService)\n\n    AsyncGeneratorCall(GeneratorService, {\n        key: 'GeneratorService',\n        serializer,\n        channel,\n        log: {\n            beCalled: false,\n            remoteError: false,\n            type: 'pretty',\n            requestReplay: false,\n        },\n        preferLocalImplementation: true,\n        thenable: false,\n    })\n}\n\nif (import.meta.webpackHot) {\n    import.meta.webpackHot.accept(['./crypto'], () => hmr.dispatchEvent(new Event('crypto')))\n    import.meta.webpackHot.accept(['./identity'], () => hmr.dispatchEvent(new Event('identity')))\n    import.meta.webpackHot.accept(['./backup'], () => hmr.dispatchEvent(new Event('backup')))\n    import.meta.webpackHot.accept(['./helper'], () => hmr.dispatchEvent(new Event('helper')))\n    import.meta.webpackHot.accept(['./settings'], () => hmr.dispatchEvent(new Event('settings')))\n    import.meta.webpackHot.accept(['./site-adaptors'], () => hmr.dispatchEvent(new Event('site-adaptors')))\n    import.meta.webpackHot.accept(['./wallet/services/'], () => hmr.dispatchEvent(new Event('wallet')))\n}\n\nfunction setup<K extends keyof Services>(key: K, implementation: () => Promise<Services[K]>, hasLog = true) {\n    const channel = message.events[key].bind(MessageTarget.Broadcast)\n\n    async function load() {\n        const val = await getOrUpdateLocalImplementationHMR(implementation, channel)\n        DebugService[key] = val\n        return val\n    }\n    if (import.meta.webpackHot) hmr.addEventListener(key, load)\n\n    // setup server\n    AsyncCall(load(), {\n        key,\n        serializer,\n        channel,\n        log: hasLog\n            ? {\n                  beCalled: true,\n                  remoteError: false,\n                  type: 'pretty',\n                  requestReplay: debugMode,\n              }\n            : false,\n        thenable: false,\n    })\n}\n","export interface SetupGuideContext {\n    /** The persona to be connected */\n    persona?: string\n    /**\n     * The user name given by user\n     * @todo Rename to userId\n     * */\n    username?: string\n    /** The WIP step */\n    status?: SetupGuideStep\n    /** Specified tab id to activate setup guide */\n    tabId?: string\n}\n\nexport enum SetupGuideStep {\n    FindUsername = 'find-username',\n    CheckConnection = 'check-connection',\n    VerifyOnNextID = 'next-id-verify',\n    PinExtension = 'pin-extension',\n    Close = 'close',\n}\n","import urlcat from 'urlcat'\nimport { EnhanceableSite } from '@masknet/shared-base'\nimport type { SiteAdaptor } from '../types.js'\n\nconst origins = ['https://www.facebook.com/*', 'https://m.facebook.com/*', 'https://facebook.com/*']\nexport const FacebookAdaptor: SiteAdaptor.Definition = {\n    name: 'Facebook',\n    networkIdentifier: EnhanceableSite.Facebook,\n    declarativePermissions: { origins },\n    homepage: 'https://www.facebook.com',\n    isSocialNetwork: true,\n    sortIndex: 1,\n    getProfilePage: () => new URL('https://www.facebook.com'),\n    getShareLinkURL(message) {\n        const url = urlcat('https://www.facebook.com/sharer/sharer.php', {\n            quote: message,\n            u: 'mask.io',\n        })\n        return new URL(url)\n    },\n}\n","import { EnhanceableSite } from '@masknet/shared-base'\nimport type { SiteAdaptor } from '../types.js'\n\nconst origins = ['https://www.instagram.com/*', 'https://m.instagram.com/*', 'https://instagram.com/*']\nexport const InstagramAdaptor: SiteAdaptor.Definition = {\n    name: 'Instagram',\n    networkIdentifier: EnhanceableSite.Instagram,\n    declarativePermissions: { origins },\n    homepage: 'https://www.instagram.com/',\n    isSocialNetwork: true,\n    sortIndex: 3,\n    getProfilePage: () => new URL('https://www.instagram.com/'),\n    getShareLinkURL: null,\n}\n","import { EnhanceableSite } from '@masknet/shared-base'\nimport urlcat from 'urlcat'\nimport type { SiteAdaptor } from '../types.js'\n\nconst origins = ['https://www.minds.com/*', 'https://minds.com/*', 'https://cdn.minds.com/*']\nexport const MindsAdaptor: SiteAdaptor.Definition = {\n    name: 'Minds',\n    networkIdentifier: EnhanceableSite.Minds,\n    declarativePermissions: { origins },\n    homepage: 'https://www.minds.com',\n    isSocialNetwork: true,\n    sortIndex: 4,\n    getProfilePage: () => new URL('https://www.minds.com'),\n    getShareLinkURL(message) {\n        const url = urlcat('https://www.minds.com/newsfeed/subscriptions', {\n            intentUrl: message,\n        })\n        return new URL(url)\n    },\n}\n","import { EnhanceableSite } from '@masknet/shared-base'\nimport type { SiteAdaptor } from '../types.js'\n\nconst origins = ['https://*.mirror.xyz/*']\nexport const MirrorAdaptor: SiteAdaptor.Definition = {\n    name: 'Mirror',\n    networkIdentifier: EnhanceableSite.Mirror,\n    declarativePermissions: { origins },\n    homepage: 'https://mirror.xyz',\n    isSocialNetwork: false,\n    sortIndex: 2,\n    getProfilePage: () => new URL('https://mirror.xyz/dashboard'),\n    getShareLinkURL(message) {\n        return new URL('https://mirror.xyz')\n    },\n}\n","import urlcat from 'urlcat'\nimport { EnhanceableSite } from '@masknet/shared-base'\nimport type { SiteAdaptor } from '../types.js'\n\nconst origins = ['https://mobile.twitter.com/*', 'https://twitter.com/*']\nexport const TwitterAdaptor: SiteAdaptor.Definition = {\n    name: 'Twitter',\n    networkIdentifier: EnhanceableSite.Twitter,\n    declarativePermissions: { origins },\n    homepage: 'https://twitter.com',\n    isSocialNetwork: true,\n    sortIndex: 0,\n    getProfilePage: (userId) => new URL(`https://twitter.com/${userId.userId}`),\n    getShareLinkURL(message) {\n        const url = urlcat('https://twitter.com/intent/tweet', { text: message })\n        return new URL(url)\n    },\n}\n","import { FacebookAdaptor } from './implementations/facebook.com.js'\nimport { InstagramAdaptor } from './implementations/instagram.com.js'\nimport { MindsAdaptor } from './implementations/minds.com.js'\nimport { MirrorAdaptor } from './implementations/mirror.xyz.js'\nimport { TwitterAdaptor } from './implementations/twitter.com.js'\nimport type { SiteAdaptor } from './types.js'\n\nconst defined = new Map<string, SiteAdaptor.Definition>()\nexport const definedSiteAdaptors: ReadonlyMap<string, SiteAdaptor.Definition> = defined\n\nfunction defineSiteAdaptor(UI: SiteAdaptor.Definition) {\n    defined.set(UI.networkIdentifier, UI)\n}\ndefineSiteAdaptor(FacebookAdaptor)\ndefineSiteAdaptor(InstagramAdaptor)\ndefineSiteAdaptor(MindsAdaptor)\ndefineSiteAdaptor(MirrorAdaptor)\ndefineSiteAdaptor(TwitterAdaptor)\n","import { compact, first, sortBy } from 'lodash-es'\nimport stringify from 'json-stable-stringify'\nimport { delay } from '@masknet/kit'\nimport {\n    userGuideStatus,\n    type PersonaIdentifier,\n    type ProfileIdentifier,\n    currentSetupGuideStatus,\n    SetupGuideStep,\n} from '@masknet/shared-base'\nimport { definedSiteAdaptors } from '../../../shared/site-adaptors/definitions.js'\nimport { requestSiteAdaptorsPermission } from '../helper/request-permission.js'\nimport type { SiteAdaptor } from '../../../shared/site-adaptors/types.js'\nimport type { Tabs } from 'webextension-polyfill'\n\nasync function hasPermission(origin: string): Promise<boolean> {\n    return browser.permissions.contains({\n        origins: [origin],\n    })\n}\n\ninterface SitesQueryOptions {\n    isSocialNetwork?: boolean\n}\n\nexport async function getSupportedSites(options: SitesQueryOptions = {}): Promise<\n    Array<{\n        networkIdentifier: string\n    }>\n> {\n    return sortBy(\n        [...definedSiteAdaptors.values()].filter((x) =>\n            options.isSocialNetwork === undefined ? true : x.isSocialNetwork === options.isSocialNetwork,\n        ),\n        (x) => x.sortIndex,\n    ).map((x) => ({ networkIdentifier: x.networkIdentifier }))\n}\n\nexport async function getSupportedOrigins(options: SitesQueryOptions = {}): Promise<\n    Array<{\n        networkIdentifier: string\n        origins: string[]\n    }>\n> {\n    return sortBy([...definedSiteAdaptors.values()], (x) => x.sortIndex)\n        .filter((x) => (options.isSocialNetwork === undefined ? true : x.isSocialNetwork === options.isSocialNetwork))\n        .map((x) => ({ networkIdentifier: x.networkIdentifier, origins: [...x.declarativePermissions.origins] }))\n}\nexport async function getOriginsWithoutPermission(options: SitesQueryOptions = {}): Promise<\n    Array<{\n        networkIdentifier: string\n        origins: string[]\n    }>\n> {\n    const groups = await getSupportedOrigins(options)\n    const promises = groups.map(async ({ origins, networkIdentifier }) => {\n        const unGrantedOrigins = compact(\n            await Promise.all(origins.map((origin) => hasPermission(origin).then((yes) => (yes ? null : origin)))),\n        )\n        if (!unGrantedOrigins.length) return null\n        return {\n            networkIdentifier,\n            origins: compact(unGrantedOrigins),\n        }\n    })\n    return compact(await Promise.all(promises))\n}\n\nexport async function getAllOrigins() {\n    const groups = await getSupportedOrigins()\n    const promises = groups.map(async ({ origins, networkIdentifier }) => {\n        const originsWithNoPermission = compact(\n            await Promise.all(origins.map((origin) => hasPermission(origin).then((yes) => (yes ? null : origin)))),\n        )\n        return {\n            networkIdentifier,\n            hasPermission: !originsWithNoPermission.length,\n        }\n    })\n\n    return Promise.all(promises)\n}\n\nexport async function getSitesWithoutPermission(): Promise<SiteAdaptor.Definition[]> {\n    const groups = [...definedSiteAdaptors.values()]\n    const promises = groups.map(async (x) => {\n        const origins = x.declarativePermissions.origins\n        const unGrantedOrigins = compact(\n            await Promise.all(origins.map((origin) => hasPermission(origin).then((yes) => (yes ? null : origin)))),\n        )\n        if (!unGrantedOrigins.length) return null\n        return x\n    })\n    return compact(await Promise.all(promises))\n}\n\nexport async function setupSite(network: string, newTab: boolean) {\n    const worker = definedSiteAdaptors.get(network)\n    const home = worker?.homepage\n\n    // request permission from all sites supported.\n    if (!(await requestSiteAdaptorsPermission([...definedSiteAdaptors.values()]))) return\n\n    if (!userGuideStatus[network].value) userGuideStatus[network].value = '1'\n\n    await delay(100)\n    if (!home) return\n    if (!newTab) return home\n\n    browser.tabs.create({ active: true, url: home })\n    return\n}\n\nexport async function requestPermissionBySite(network: string) {\n    const worker = definedSiteAdaptors.get(network)\n    if (!worker) return\n    return requestSiteAdaptorsPermission([worker])\n}\nexport async function connectSite(\n    identifier: PersonaIdentifier,\n    network: string,\n    profile?: ProfileIdentifier,\n    openInNewTab = true,\n) {\n    const site = definedSiteAdaptors.get(network)\n    if (!site) return\n\n    const permissionGranted = await requestSiteAdaptorsPermission([site])\n    if (!permissionGranted) return\n\n    const url = site.homepage\n    if (!url) return\n\n    let targetTab: Tabs.Tab | undefined\n    if (openInNewTab) {\n        targetTab = await browser.tabs.create({ active: true, url: site.homepage })\n    } else {\n        const openedTabs = await browser.tabs.query({ url: `${url}/*` })\n        targetTab = openedTabs.find((x: { active: boolean }) => x.active) ?? first(openedTabs)\n\n        if (!targetTab?.id || !targetTab.windowId) {\n            await browser.tabs.create({ active: true, url })\n        }\n    }\n    await delay(100)\n    if (!targetTab?.windowId) return\n    await browser.tabs.update(targetTab.id, { active: true })\n    await browser.windows.update(targetTab.windowId, { focused: true })\n    currentSetupGuideStatus[network].value = stringify({\n        status: SetupGuideStep.VerifyOnNextID,\n        persona: identifier.toText(),\n        username: profile?.userId,\n        tabId: targetTab?.id,\n    })\n}\n\nexport async function disconnectSite(network: string) {\n    const site = definedSiteAdaptors.get(network)\n    if (!site) return\n\n    const permissionGranted = await requestSiteAdaptorsPermission([site])\n    if (!permissionGranted) return\n\n    currentSetupGuideStatus[network].value = ''\n}\n","import { maskSDK_URL, injectUserScriptMV2, evaluateContentScript } from '../../utils/injectScript.js'\nimport { requestHostPermission, requestHostPermissionForActiveTab } from '../helper/request-permission.js'\n\nexport async function attachMaskSDKToCurrentActivePage(choose: 'once' | 'always' | 'always-all'): Promise<boolean> {\n    if (choose === 'always') {\n        requestHostPermissionForActiveTab()\n    } else if (choose === 'always-all') {\n        requestHostPermission(['<all_urls>'])\n    }\n    if (browser.scripting) {\n        const [{ id }] = await browser.tabs.query({ active: true })\n        if (!id) return false\n        await Promise.all([attachMaskSDK3(id), evaluateContentScript(id)])\n    } else if (browser.tabs) {\n        await Promise.all([attachMaskSDK2(), evaluateContentScript(undefined)])\n    }\n    return true\n}\n\nasync function attachMaskSDK2() {\n    await browser.tabs.executeScript(undefined, {\n        code: await injectUserScriptMV2(maskSDK_URL),\n    })\n}\nasync function attachMaskSDK3(id: number) {\n    const [{ error }] = await browser.scripting.executeScript({\n        target: { tabId: id },\n        files: [maskSDK_URL],\n        // @ts-expect-error Chrome API\n        world: 'MAIN',\n    })\n    if (error) throw error\n}\nexport async function developmentMaskSDKReload(): Promise<void> {\n    if (process.env.NODE_ENV !== 'development') return\n\n    if (browser.scripting) {\n        const [{ id }] = await browser.tabs.query({ active: true })\n        if (!id) return\n        await attachMaskSDK3(id)\n    } else if (browser.tabs) {\n        await attachMaskSDK2()\n    }\n}\n\nexport async function shouldSuggestConnectInPopup(url?: string): Promise<boolean> {\n    if (!url) {\n        const tabs = await browser.tabs.query({ active: true })\n        if (!tabs.length) return false\n        ;[{ url }] = tabs\n        if (!url) return false\n    }\n    return canInject(url) && !(await browser.permissions.contains({ origins: [new URL(url).origin + '/*'] }))\n}\n\nfunction canInject(url: string) {\n    if (url.startsWith('http://localhost:')) return true\n    if (url.startsWith('http://localhost/')) return true\n    if (url.startsWith('http://127.0.0.1')) return true\n    if (url.startsWith('https://')) return true\n    return false\n}\n","export {\n    getSupportedSites,\n    getSupportedOrigins,\n    getOriginsWithoutPermission,\n    getSitesWithoutPermission,\n    getAllOrigins,\n    requestPermissionBySite,\n    setupSite,\n    connectSite,\n    disconnectSite,\n} from './connect.js'\nexport { attachMaskSDKToCurrentActivePage, shouldSuggestConnectInPopup } from './sdk.js'\n","import type { LockerRecord } from '../services/wallet/database/locker.js'\nimport type { SecretRecord, WalletRecord } from '../services/wallet/type.js'\nimport { createPluginDatabase } from '../../../database/plugin-db/wrap-plugin-database.js'\nimport { PluginID } from '@masknet/shared-base'\nimport type { WalletGrantedPermission, InternalWalletConnectRecord } from './types.js'\n\n// Note: Wallet was a plugin in the past, but now it's a core service in Mask.\nexport const walletDatabase = createPluginDatabase<\n    WalletRecord | SecretRecord | LockerRecord | WalletGrantedPermission | InternalWalletConnectRecord\n>(PluginID.Wallet)\n","import { type DBSchema, openDB } from 'idb/with-async-ittr'\nimport { createDBAccess } from '../../../database/utils/openDB.js'\nimport type { LegacyWalletRecordInDatabase, UnconfirmedRequestChunkRecordInDatabase } from './types.js'\n\nfunction path<T>(x: T) {\n    return x\n}\n\nexport const createWalletDBAccess = createDBAccess(() => {\n    return openDB<WalletDB>('maskbook-plugin-wallet', 9, {\n        async upgrade(db, oldVersion, newVersion, tx) {\n            function v0_v1() {\n                db.createObjectStore('Wallet', { keyPath: path<keyof LegacyWalletRecordInDatabase>('address') })\n            }\n            function v8_v9() {\n                const pluginStore = 'PluginStore'\n                db.objectStoreNames.contains(pluginStore as any) && db.deleteObjectStore(pluginStore as any)\n                db.createObjectStore('UnconfirmedRequestChunk', {\n                    keyPath: path<keyof UnconfirmedRequestChunkRecordInDatabase>('record_id'),\n                })\n            }\n\n            if (oldVersion < 1) v0_v1()\n            if (oldVersion < 9) v8_v9()\n        },\n    })\n})\n\ninterface WalletDB extends DBSchema {\n    Wallet: {\n        value: LegacyWalletRecordInDatabase\n        key: string\n    }\n    UnconfirmedRequestChunk: {\n        value: UnconfirmedRequestChunkRecordInDatabase\n        key: string\n    }\n}\n","import type { Ethereum } from '../public-api/mask-wallet.js'\n\nexport interface MaskEthereumProviderRpcErrorOptions extends ErrorOptions {\n    // data?: unknown\n}\nexport class MaskEthereumProviderRpcError extends Error implements Ethereum.ProviderRpcError {\n    constructor(code: ErrorCode, message: ErrorMessages | string, options: MaskEthereumProviderRpcErrorOptions = {}) {\n        const { cause = undefined } = options\n        super(message, { cause })\n        this.code = code\n        // this.data = data\n        delete this.stack\n    }\n    code: number\n    data?: unknown\n}\nexport enum ErrorCode {\n    ParseError = -32700,\n    InvalidRequest = -32600,\n    MethodNotFound = -32601,\n    InvalidParams = -32602,\n    InternalError = -32603,\n}\n\nexport enum ErrorMessages {\n    FirstArgumentIsNotObject = 'Expected a single, non-array, object argument.',\n    FirstArgumentMethodFieldInvalid = \"'args.method' must be a non-empty string.\",\n    UnknownMethod = 'The method \"$\" does not exist / is not available.',\n    // ParamsIsNotObjectOrArray = \"'args.params' must be an object or array if provided.\",\n    ParamsIsNotArray = \"'args.params' must be an array if provided.\",\n    InvalidMethodParams = 'Invalid method parameter(s).',\n    wallet_requestPermissions_Empty = 'Permissions request for origin \"$\" contains no permissions.',\n    wallet_requestPermissions_Unknown = 'Permissions request for origin \"$\" contains invalid requested permission(s).',\n}\n","import type { MaskEthereumProviderRpcError } from '../shared/error.js'\nimport { type BridgeAPI, type UserScriptAPI, createMaskSDKChannel, serializer } from '../shared/index.js'\nimport { AsyncCall, type AsyncVersionOf } from 'async-call-rpc/full'\n\nexport type { BridgeAPI, UserScriptAPI, InitInformation } from '../shared/index.js'\nexport * from '../shared/types.js'\nexport {\n    MaskEthereumProviderRpcError,\n    ErrorCode,\n    ErrorMessages,\n    type MaskEthereumProviderRpcErrorOptions,\n} from '../shared/error.js'\nexport function createMaskSDKServer(api: BridgeAPI, signal?: AbortSignal): AsyncVersionOf<UserScriptAPI> {\n    // TODO: support AbortSignal\n    return AsyncCall<UserScriptAPI>(api, {\n        serializer,\n        channel: createMaskSDKChannel('content'),\n        log: false,\n        thenable: false,\n        mapError(error) {\n            return {\n                code: (error as MaskEthereumProviderRpcError).code,\n                message: (error as MaskEthereumProviderRpcError).message,\n                data: error,\n            }\n        },\n    })\n}\n","import {\n    type EIP2255PermissionRequest,\n    type EIP2255Permission,\n    type EIP2255RequestedPermission,\n    MaskEthereumProviderRpcError,\n    ErrorCode,\n    ErrorMessages,\n} from '@masknet/sdk'\nimport { walletDatabase } from '../database/Plugin.db.js'\nimport { produce } from 'immer'\nimport { ChainId, ProviderType } from '@masknet/web3-shared-evm'\nimport { openPopupWindow } from '../../helper/popup-opener.js'\nimport { Providers } from '@masknet/web3-providers'\nimport { PopupRoutes } from '@masknet/shared-base'\nimport { defer, type DeferTuple } from '@masknet/kit'\nimport type { WalletGrantedPermission } from '../database/types.js'\nimport { omit } from 'lodash-es'\n\n// https://eips.ethereum.org/EIPS/eip-2255\nexport async function EIP2255_wallet_getPermissions(origin: string): Promise<EIP2255Permission[]> {\n    const wallets = await getAllConnectedWallets(origin)\n    if (!wallets.size) return []\n    return EIP2255PermissionsOfWallets(origin, wallets)\n}\nconst requests = new Map<\n    string,\n    {\n        origin: string\n        request: EIP2255PermissionRequest\n        promise: DeferTuple<EIP2255RequestedPermission[], MaskEthereumProviderRpcError>\n    }\n>()\nexport async function EIP2255_wallet_requestPermissions(\n    origin: string,\n    request: EIP2255PermissionRequest,\n): Promise<EIP2255RequestedPermission[]> {\n    assertOrigin(origin)\n    for (const method in request) {\n        if (method !== 'eth_accounts') {\n            throw new MaskEthereumProviderRpcError(\n                ErrorCode.MethodNotFound,\n                ErrorMessages.UnknownMethod.replaceAll('$', method),\n            )\n        }\n    }\n    const id = Math.random().toString(36).slice(2)\n    requests.set(id, {\n        origin,\n        request,\n        promise: defer(),\n    })\n\n    if (!Providers[ProviderType.MaskWallet].wallets) {\n        await openPopupWindow(PopupRoutes.Wallet, { external_request: id })\n    } else {\n        await openPopupWindow(PopupRoutes.SelectWallet, {\n            chainId: ChainId.Mainnet,\n            external_request: id,\n        })\n    }\n    return requests.get(id)!.promise[0]\n}\nexport async function getEIP2255PermissionDetail(id: string) {\n    return omit(requests.get(id), 'promise')\n}\nexport async function grantEIP2255Permission(id: string, grantedWalletAddress: Iterable<string>) {\n    if (!requests.has(id)) throw new Error('Invalid request id')\n    const { origin, promise } = requests.get(id)!\n    for (const wallet of grantedWalletAddress) {\n        const data = await walletDatabase.get('granted_permission', wallet)\n        const newData = produce<WalletGrantedPermission>(\n            data || {\n                type: 'granted_permission',\n                id: wallet,\n                origins: new Map(),\n            },\n            (draft) => {\n                if (!draft.origins.has(origin)) draft.origins.set(origin, new Set())\n                const permissions = draft.origins.get(origin)!\n                if (Array.from(permissions).some((data) => hasEthAccountsPermission(origin, data))) return\n                permissions.add({\n                    invoker: origin,\n                    parentCapability: 'eth_accounts',\n                    caveats: [],\n                })\n            },\n        )\n        if (data !== newData) await walletDatabase.add(newData)\n    }\n    promise[1](EIP2255PermissionsOfWallets(origin, grantedWalletAddress))\n}\n\nexport async function disconnectWalletFromOrigin(wallet: string, origin: string) {\n    assertOrigin(origin)\n    const origins = new Map((await walletDatabase.get('granted_permission', wallet))?.origins)\n    if (!origins.has(origin)) return\n    origins.delete(origin)\n    if (origins.size) await walletDatabase.add({ type: 'granted_permission', id: wallet, origins })\n    else await walletDatabase.remove('granted_permission', wallet)\n}\nexport async function disconnectAllWalletsFromOrigin(origin: string) {\n    assertOrigin(origin)\n    for await (const cursor of walletDatabase.iterate_mutate('granted_permission')) {\n        if (!cursor.value.origins.has(origin)) continue\n        if (cursor.value.origins.size === 1) await cursor.delete()\n        else {\n            await cursor.update(\n                produce(cursor.value, (draft) => {\n                    draft.origins.delete(origin)\n                }),\n            )\n        }\n    }\n}\nexport async function disconnectAllOriginsConnectedFromWallet(wallet: string) {\n    await walletDatabase.remove('granted_permission', wallet)\n}\n\nexport async function internalWalletConnect(wallet: string, origin: string) {\n    assertOrigin(origin)\n    const origins = (await walletDatabase.get('internal_connected', wallet))?.origins\n\n    if (!origins) {\n        walletDatabase.add({\n            type: 'internal_connected',\n            id: wallet,\n            origins: new Set([origin]),\n        })\n    } else if (!origins.has(origin)) {\n        for await (const cursor of walletDatabase.iterate_mutate('internal_connected')) {\n            if (cursor.value.id !== wallet) continue\n            await cursor.update(\n                produce(cursor.value, (draft) => {\n                    draft.origins.add(origin)\n                }),\n            )\n        }\n    }\n}\n\nfunction hasEthAccountsPermission(origin: string, permission: EIP2255Permission) {\n    return permission.parentCapability === 'eth_accounts' && permission.invoker === origin\n}\nfunction EIP2255PermissionsOfWallets(origin: string, wallets: Iterable<string>): EIP2255Permission[] {\n    return [\n        {\n            parentCapability: 'eth_accounts',\n            invoker: origin,\n            caveats: [\n                {\n                    type: 'restrictReturnedAccounts',\n                    value: [...wallets],\n                },\n            ],\n        },\n    ]\n}\nexport async function getAllConnectedWallets(origin: string): Promise<ReadonlySet<string>> {\n    assertOrigin(origin)\n    const wallets = new Set<string>()\n    out: for await (const cursor of walletDatabase.iterate('granted_permission')) {\n        const thisOrigin = cursor.value.origins.get(origin)\n        if (!thisOrigin) continue\n        for (const permission of thisOrigin) {\n            if (hasEthAccountsPermission(origin, permission)) {\n                wallets.add(cursor.value.id)\n                continue out\n            }\n        }\n    }\n\n    for await (const cursor of walletDatabase.iterate('internal_connected')) {\n        if (!cursor.value.origins.has(origin)) continue\n        wallets.add(cursor.value.id)\n    }\n    return wallets\n}\nexport async function getAllConnectedOrigins(wallet: string): Promise<ReadonlySet<string>> {\n    const origins = (await walletDatabase.get('granted_permission', wallet))?.origins\n    const connectedOrigins = new Set<string>()\n    if (!origins) return connectedOrigins\n    out: for (const permissions of origins.values()) {\n        for (const permission of permissions) {\n            if (hasEthAccountsPermission(permission.invoker, permission)) {\n                connectedOrigins.add(permission.invoker)\n                continue out\n            }\n        }\n    }\n    return connectedOrigins\n}\n\nfunction assertOrigin(origin: string) {\n    if (!URL.canParse(origin) || new URL(origin).origin !== origin)\n        throw new TypeError(\n            'origin is not a valid origin. See https://developer.mozilla.org/en-US/docs/Glossary/Origin',\n        )\n}\n","import { defer, type DeferTuple } from '@masknet/kit'\nimport { PopupRoutes, type ECKeyIdentifier } from '@masknet/shared-base'\nimport { ProviderType, type ChainId } from '@masknet/web3-shared-evm'\nimport { Providers } from '@masknet/web3-providers'\nimport { openPopupWindow } from '../../helper/popup-opener.js'\n\nlet deferred: DeferTuple<MaskAccount[], Error> | undefined\n\ninterface MaskAccount {\n    address: string\n    owner?: string\n    identifier?: ECKeyIdentifier\n}\n/**\n * @param chainId Chain ID\n */\nexport async function selectMaskAccount(\n    chainId: ChainId,\n    defaultAddress?: string,\n    source?: string,\n): Promise<MaskAccount[]> {\n    await openPopupWindow(Providers[ProviderType.MaskWallet].wallets ? PopupRoutes.SelectWallet : PopupRoutes.Wallet, {\n        chainId,\n        address: defaultAddress,\n        source,\n    })\n    deferred = defer()\n    return deferred![0]\n}\n\nexport async function resolveMaskAccount(result: MaskAccount[] | PromiseSettledResult<MaskAccount[]>) {\n    if (Array.isArray(result)) deferred?.[1](result)\n    else if (result.status === 'fulfilled') deferred?.[1](result.value)\n    else deferred?.[2](result.reason)\n\n    deferred = undefined\n}\n","import { first } from 'lodash-es'\nimport type { JsonRpcPayload } from 'web3-core-helpers'\nimport { createWalletDBAccess } from '../database/Wallet.db.js'\nimport { createTransaction } from '../../../database/utils/openDB.js'\nimport type { RequestPayload } from '../database/types.js'\nimport { CrossIsolationMessages } from '@masknet/shared-base'\n\nconst MAX_UNCONFIRMED_REQUESTS_SIZE = 1\nconst MAIN_RECORD_ID = '0'\n\nfunction requestSorter(a: JsonRpcPayload, z: JsonRpcPayload) {\n    return ((a.id as number) ?? 0) - ((z.id as number) ?? 0)\n}\n\nasync function getUnconfirmedRequests() {\n    const t = createTransaction(await createWalletDBAccess(), 'readonly')('UnconfirmedRequestChunk')\n    const chunk = await t.objectStore('UnconfirmedRequestChunk').get(MAIN_RECORD_ID)\n    if (!chunk) return []\n    return chunk.requests.slice(0, MAX_UNCONFIRMED_REQUESTS_SIZE).sort(requestSorter)\n}\n\nexport async function topUnconfirmedRequest() {\n    return first(await getUnconfirmedRequests())\n}\n\nexport async function updateUnconfirmedRequest(payload: RequestPayload) {\n    const now = new Date()\n    const t = createTransaction(await createWalletDBAccess(), 'readwrite')('UnconfirmedRequestChunk')\n\n    const chunk_ = await t.objectStore('UnconfirmedRequestChunk').get(MAIN_RECORD_ID)\n\n    if (!chunk_?.requests.length) throw new Error('No request to update.')\n\n    const requests =\n        chunk_?.requests?.map((item) => {\n            if (item.id !== payload.id) return item\n            return payload\n        }) ?? []\n\n    const chunk = {\n        ...chunk_,\n        updatedAt: now,\n        requests,\n    }\n\n    await t.objectStore('UnconfirmedRequestChunk').put(chunk)\n    CrossIsolationMessages.events.requestsUpdated.sendToAll({ hasRequest: true })\n    return payload\n}\n","import type { JsonRpcPayload } from 'web3-core-helpers'\nimport { ECKeyIdentifier, type SignType } from '@masknet/shared-base'\nimport { RequestReadonly, SmartPayAccount, Web3Readonly } from '@masknet/web3-providers'\nimport {\n    ChainId,\n    createJsonRpcResponse,\n    ErrorEditor,\n    EthereumMethodType,\n    isValidAddress,\n    PayloadEditor,\n    type TransactionOptions,\n    Signer,\n} from '@masknet/web3-shared-evm'\nimport { signWithWallet } from './wallet/index.js'\nimport { signWithPersona } from '../../identity/persona/sign.js'\n\n/**\n * The entrance of all RPC requests to MaskWallet.\n */\nexport async function send(payload: JsonRpcPayload, options?: TransactionOptions) {\n    const { owner, paymentToken, providerURL } = options ?? {}\n    const {\n        pid = 0,\n        from,\n        chainId = options?.chainId ?? ChainId.Mainnet,\n        signableMessage,\n        signableConfig,\n    } = PayloadEditor.fromPayload(payload, options)\n    const identifier = ECKeyIdentifier.from(options?.identifier).unwrapOr(undefined)\n    const signer = identifier\n        ? new Signer(identifier, <T>(type: SignType, message: T, identifier?: ECKeyIdentifier) =>\n              signWithPersona(type, message, identifier, undefined, true),\n          )\n        : new Signer(owner || from!, signWithWallet)\n\n    switch (payload.method) {\n        case EthereumMethodType.ETH_SEND_TRANSACTION:\n        case EthereumMethodType.MASK_REPLACE_TRANSACTION:\n            if (!signableConfig) throw new Error('No transaction to be sent.')\n\n            try {\n                if (owner && paymentToken) {\n                    return createJsonRpcResponse(\n                        pid,\n                        await SmartPayAccount.sendTransaction(chainId, owner, signableConfig, signer, {\n                            paymentToken,\n                        }),\n                    )\n                } else {\n                    return createJsonRpcResponse(\n                        pid,\n                        await Web3Readonly.sendSignedTransaction(await signer.signTransaction(signableConfig), {\n                            chainId,\n                            providerURL,\n                        }),\n                    )\n                }\n            } catch (error) {\n                throw ErrorEditor.from(error, null, 'Failed to send transaction.').error\n            }\n        case EthereumMethodType.ETH_SIGN:\n        case EthereumMethodType.PERSONAL_SIGN:\n            try {\n                if (!signableMessage) throw new Error('No message to be signed.')\n                return createJsonRpcResponse(pid, await signer.signMessage(signableMessage))\n            } catch (error) {\n                throw ErrorEditor.from(error, null, 'Failed to sign message.').error\n            }\n        case EthereumMethodType.ETH_SIGN_TYPED_DATA:\n            try {\n                if (!signableMessage) throw new Error('No typed data to be signed.')\n                return createJsonRpcResponse(pid, await signer.signTypedData(signableMessage))\n            } catch (error) {\n                throw ErrorEditor.from(error, null, 'Failed to sign typed data.').error\n            }\n        case EthereumMethodType.ETH_SIGN_TRANSACTION:\n            try {\n                if (!signableConfig) throw new Error('No transaction to be signed.')\n                return createJsonRpcResponse(pid, await signer.signTransaction(signableConfig))\n            } catch (error) {\n                throw ErrorEditor.from(error, null, 'Failed to sign transaction.').error\n            }\n        case EthereumMethodType.MASK_DEPLOY:\n            try {\n                const [owner] = payload.params as [string]\n                if (!isValidAddress(owner)) throw new Error('Invalid sender address.')\n                return createJsonRpcResponse(pid, await SmartPayAccount.deploy(chainId, owner, signer))\n            } catch (error) {\n                throw ErrorEditor.from(error, null, 'Failed to deploy.').error\n            }\n        case EthereumMethodType.ETH_DECRYPT:\n            throw new Error('Method not implemented.')\n        case EthereumMethodType.ETH_GET_ENCRYPTION_PUBLIC_KEY:\n            throw new Error('Method not implemented.')\n        default:\n            try {\n                const result = await RequestReadonly.request(\n                    {\n                        method: payload.method as EthereumMethodType,\n                        params: payload.params ?? [],\n                    },\n                    {\n                        chainId,\n                        providerURL,\n                    },\n                )\n                return createJsonRpcResponse(pid, result)\n            } catch (error) {\n                throw error instanceof Error ? error : new Error('Failed to send request.')\n            }\n    }\n}\n","export * from './connect.js'\nexport * from './select.js'\nexport * from './wallet/index.js'\nexport * from './legacyWallet.js'\nexport * from './rpc.js'\nexport * from './send.js'\n","import type { LegacyWalletRecord } from '@masknet/shared-base'\nimport { formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport type { LegacyWalletRecordInDatabase } from '../database/types.js'\n\nexport function LegacyWalletRecordOutDB(x: LegacyWalletRecordInDatabase) {\n    const record = x as LegacyWalletRecord\n    record.address = formatEthereumAddress(record.address)\n    record.erc20_token_whitelist ??= new Set()\n    record.erc20_token_blacklist ??= new Set()\n    record.erc721_token_whitelist ??= new Set()\n    record.erc721_token_blacklist ??= new Set()\n    record.erc1155_token_whitelist ??= new Set()\n    record.erc1155_token_blacklist ??= new Set()\n    return record\n}\n","import * as bip39 from 'bip39'\nimport * as wallet_ts from /* webpackDefer: true */ 'wallet.ts'\nimport { BigNumber } from 'bignumber.js'\nimport { ec as EC } from 'elliptic'\nimport { fromHex, toHex, type LegacyWalletRecord } from '@masknet/shared-base'\nimport { HD_PATH_WITHOUT_INDEX_ETHEREUM } from '@masknet/web3-shared-base'\nimport { createTransaction } from '../../../database/utils/openDB.js'\nimport { createWalletDBAccess } from '../database/Wallet.db.js'\nimport { LegacyWalletRecordOutDB } from './helpers.js'\n\nfunction sortWallet(a: LegacyWalletRecord, b: LegacyWalletRecord) {\n    if (a.updatedAt > b.updatedAt) return -1\n    if (a.updatedAt < b.updatedAt) return 1\n    if (a.createdAt > b.createdAt) return -1\n    if (a.createdAt < b.createdAt) return 1\n    return 0\n}\n\nexport async function getLegacyWallets() {\n    const wallets = await getAllWalletRecords()\n    return wallets.filter((x) => x._private_key_ || x.mnemonic.length)\n}\n\nasync function getAllWalletRecords() {\n    const t = createTransaction(await createWalletDBAccess(), 'readonly')('Wallet')\n    const records = await t.objectStore('Wallet').getAll()\n    const wallets = (\n        await Promise.all<LegacyWalletRecord>(\n            records.map(async (record) => {\n                const walletRecord = LegacyWalletRecordOutDB(record)\n                return {\n                    ...walletRecord,\n                    _private_key_: await makePrivateKey(walletRecord),\n                }\n            }),\n        )\n    ).sort(sortWallet)\n    return wallets\n}\n\nasync function makePrivateKey(record: LegacyWalletRecord) {\n    // not a managed wallet\n    if (!record._private_key_ && !record.mnemonic.length) return ''\n    const { privateKey } = record._private_key_\n        ? await recoverWalletFromPrivateKey(record._private_key_)\n        : await recoverWalletFromMnemonicWords(record.mnemonic, record.passphrase, record.path)\n    return `0x${toHex(privateKey)}`\n}\n\nasync function recoverWalletFromMnemonicWords(\n    mnemonic: string[],\n    passphrase: string,\n    path = `${HD_PATH_WITHOUT_INDEX_ETHEREUM}/0`,\n) {\n    const seed = await bip39.mnemonicToSeed(mnemonic.join(' '), passphrase)\n    const masterKey = wallet_ts.HDKey.parseMasterSeed(seed)\n    const extendedPrivateKey = masterKey.derive(path).extendedPrivateKey!\n    const childKey = wallet_ts.HDKey.parseExtendedKey(extendedPrivateKey)\n    const wallet = childKey.derive('')\n    const walletPublicKey = wallet.publicKey\n    const walletPrivateKey = wallet.privateKey!\n    return {\n        address: wallet_ts.EthereumAddress.from(walletPublicKey).address,\n        privateKey: walletPrivateKey,\n        privateKeyValid: true,\n        privateKeyInHex: `0x${toHex(walletPrivateKey)}`,\n        path,\n        mnemonic,\n        passphrase,\n    }\n}\n\nasync function recoverWalletFromPrivateKey(privateKey: string) {\n    const ec = new EC('secp256k1')\n    const privateKey_ = privateKey.replace(/^0x/, '').trim() // strip 0x\n    const key = ec.keyFromPrivate(privateKey_)\n    return {\n        address: wallet_ts.EthereumAddress.from(key.getPublic(false, 'array') as any).address,\n        privateKey: fromHex(privateKey_),\n        privateKeyValid: privateKeyVerify(privateKey_),\n        privateKeyInHex: privateKey.startsWith('0x') ? privateKey : `0x${privateKey}`,\n        mnemonic: [],\n    }\n}\n\nfunction privateKeyVerify(key: string) {\n    if (!/[\\da-f]{64}/i.test(key)) return false\n    const k = new BigNumber(key, 16)\n    const n = new BigNumber('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16)\n    return !k.isZero() && k.isLessThan(n)\n}\n","import { CrossIsolationMessages } from '@masknet/shared-base'\nimport { walletDatabase } from '../../../database/Plugin.db.js'\n\nconst DEFAULT_LOCK_DURATION = 1000 * 60 * 60 * 24 // One day\n\nconst ID = 'locker'\n\nexport interface LockerRecord {\n    type: 'locker'\n    id: string\n    duration: number // ms\n}\n\nasync function getAutoLockerRecord() {\n    return walletDatabase.get('locker', ID)\n}\n\nexport async function getAutoLockerDuration() {\n    const record = await getAutoLockerRecord()\n    return record?.duration ?? DEFAULT_LOCK_DURATION\n}\n\nexport async function setAutoLockerTime(duration: number) {\n    await walletDatabase.add({ type: 'locker', id: ID, duration })\n    CrossIsolationMessages.events.walletLockTimeUpdated.sendToAll()\n}\n","export interface OnDemandWorkerEventMap extends WorkerEventMap {\n    terminated: Event\n}\n\n/**\n * A Worker-like class that create/destroy Worker on demand.\n *\n * The worker passed in MUST post a message \"Alive\" to notify the OnDemandWorker it is ready to receive message.\n * This \"Alive\" MUST be the first message.\n */\nexport class OnDemandWorker extends EventTarget {\n    protected readonly __init: WorkerConstructorParameters\n    protected worker?: Worker = undefined\n    protected inactiveTimeToTerminate = 15 * 60 * 1000\n    /**\n     * A Worker-like class that create/destroy Worker on demand.\n     *\n     * The worker passed in MUST post a message \"Alive\" to notify the OnDemandWorker it is ready to receive message.\n     * This \"Alive\" MUST be the first message.\n     */\n    constructor(...init: WorkerConstructorParameters) {\n        super()\n        this.__init = init\n        this.log(init[1]?.name ?? 'anonymous Worker', 'created with', ...init)\n    }\n    protected watchUsage() {\n        const i = setInterval(\n            () => {\n                if (!this.worker) {\n                    clearInterval(i)\n                    return\n                }\n                if (Date.now() - this.lastUsed > this.inactiveTimeToTerminate) {\n                    this.log('inactive for', this.inactiveTimeToTerminate / 1000, 'sec')\n                    this.terminate()\n                    clearInterval(i)\n                }\n            },\n            Math.min(this.inactiveTimeToTerminate, 60 * 1000),\n        )\n    }\n    protected log(...args: any[]) {\n        // console.log(`OnDemandWorker ${this.init[1]?.name}`, ...args)\n    }\n    protected lastUsed = Date.now()\n    protected use(onReady: () => void) {\n        this.keepAlive()\n        if (this.worker) return onReady()\n        this.worker = new Worker(...this.__init)\n        // TODO: what if the worker does not start successfully?\n        this.worker.addEventListener(\n            'message',\n            () => {\n                this.worker!.addEventListener('message', (e) => this.dispatchEvent(cloneEvent(e)))\n                onReady()\n            },\n            { once: true },\n        )\n        this.worker.addEventListener('error', (e) => this.dispatchEvent(cloneEvent(e)))\n        this.worker.addEventListener('messageerror', (e) => this.dispatchEvent(cloneEvent(e)))\n        this.watchUsage()\n    }\n    terminate() {\n        this.worker?.terminate()\n        this.worker = undefined\n        this.log('terminated')\n        this.dispatchEvent(new Event('terminated'))\n    }\n    keepAlive() {\n        this.log('keep alive')\n        this.lastUsed = Date.now()\n    }\n    onTerminated(callback: () => void) {\n        this.addEventListener('terminated', callback, { once: true })\n        return () => this.removeEventListener('terminated', callback)\n    }\n\n    override addEventListener<K extends keyof OnDemandWorkerEventMap>(\n        type: K,\n        listener: (this: OnDemandWorker, ev: OnDemandWorkerEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions,\n    ): void {\n        super.addEventListener(type, listener as any, options)\n    }\n    override removeEventListener<K extends keyof OnDemandWorkerEventMap>(\n        type: K,\n        listener: (this: OnDemandWorker, ev: OnDemandWorkerEventMap[K]) => any,\n        options?: boolean | EventListenerOptions,\n    ): void {\n        super.removeEventListener(type, listener as any, options)\n    }\n    postMessage(message: any, transfer: Transferable[]): void\n    postMessage(message: any, options?: StructuredSerializeOptions): void\n    postMessage(...args: [any, any]) {\n        this.use(() => this.worker?.postMessage(...args))\n    }\n    set onmessage(_: never) {\n        throws()\n    }\n    set onerror(_: never) {\n        throws()\n    }\n    set onmessageerror(_: never) {\n        throws()\n    }\n}\n\nfunction throws() {\n    throw new TypeError('Please use addEventListener')\n}\n\nfunction cloneEvent(e: MessageEvent | ErrorEvent) {\n    if (e instanceof MessageEvent) return new MessageEvent(e.type, { data: e.data })\n    return new ErrorEvent(e.type, e)\n}\ntype WorkerConstructorParameters = [stringUrl: string | URL, options?: WorkerOptions]\n","import type { MaskBaseAPI } from '@masknet/web3-providers/types'\nimport { type api } from '@dimensiondev/mask-wallet-core/proto'\nimport { OnDemandWorker } from '@masknet/shared-base'\n\ntype Request = InstanceType<typeof api.MWRequest>\ntype Response = InstanceType<typeof api.MWResponse>\n\nconst worker = new OnDemandWorker(new URL('../../../../../web-workers/wallet.ts', import.meta.url), {\n    name: 'MaskWallet',\n})\n\nenum ErrorCode {\n    KdfParamsInvalid = '-3001',\n    PasswordIncorrect = '-3002',\n    InvalidKeyIvLength = '-3003',\n    InvalidCiphertext = '-3004',\n    InvalidPrivateKey = '-3005',\n    InvalidPublicKey = '-3006',\n    InvalidMnemonic = '-3007',\n    InvalidSeed = '-3008',\n    InvalidDerivationPath = '-3009',\n    InvalidKeyStoreJSON = '-3010',\n    NotSupportedPublicKeyType = '-3011',\n    NotSupportedCurve = '-3012',\n    NotSupportedCipher = '-3013',\n}\n\nconst ErrorMessage = {\n    [ErrorCode.KdfParamsInvalid]: 'Invalid kdf parameters.',\n    [ErrorCode.PasswordIncorrect]: 'Incorrect payment password.',\n    [ErrorCode.InvalidKeyIvLength]: 'Invalid key IV length.',\n    [ErrorCode.InvalidCiphertext]: 'Invalid cipher text.',\n    [ErrorCode.InvalidPrivateKey]: 'Invalid private key.',\n    [ErrorCode.InvalidPublicKey]: 'Invalid public key.',\n    [ErrorCode.InvalidMnemonic]: 'Invalid mnemonic words.',\n    [ErrorCode.InvalidSeed]: 'Invalid seed.',\n    [ErrorCode.InvalidDerivationPath]: 'Invalid derivation path.',\n    [ErrorCode.InvalidKeyStoreJSON]: 'Invalid keystore JSON.',\n    [ErrorCode.NotSupportedPublicKeyType]: 'Not supported public key type.',\n    [ErrorCode.NotSupportedCurve]: 'Not supported curve.',\n    [ErrorCode.NotSupportedCipher]: 'Not supported cipher.',\n}\n\nfunction send<I extends keyof Request, O extends keyof Response>(input: I, output: O) {\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1219164\n    if (typeof Worker !== 'function') {\n        return async (value: Request[I]): Promise<Response[O]> => {\n            const { request } = await import('@dimensiondev/mask-wallet-core/bundle')\n            const { api } = await import('@dimensiondev/mask-wallet-core/proto')\n\n            const payload = api.MWRequest.encode({ [input]: value }).finish()\n            const wasmResult = request(payload)\n            return api.MWResponse.decode(wasmResult)[output]\n        }\n    }\n    return (value: Request[I]) => {\n        return new Promise<Response[O]>((resolve, reject) => {\n            const req: MaskBaseAPI.Input = { id: Math.random(), data: { [input]: value } }\n            worker.postMessage(req)\n            worker.addEventListener('message', function f(message) {\n                if (message.data.id !== req.id) return\n\n                worker.removeEventListener('message', f)\n                const data: MaskBaseAPI.Output = message.data\n                if (data.response.error)\n                    return reject(\n                        new Error(ErrorMessage[data.response.error.errorCode as ErrorCode] || 'Unknown Error'),\n                    )\n                resolve(data.response[output])\n            })\n        })\n    }\n}\nexport const importPrivateKey = send('param_import_private_key', 'resp_import_private_key')\nexport const importMnemonic = send('param_import_mnemonic', 'resp_import_mnemonic')\nexport const importJSON = send('param_import_json', 'resp_import_json')\nexport const createAccountOfCoinAtPath = send(\n    'param_create_account_of_coin_at_path',\n    'resp_create_account_of_coin_at_path',\n)\nexport const exportPrivateKey = send('param_export_private_key', 'resp_export_private_key')\nexport const exportPrivateKeyOfPath = send('param_export_private_key_of_path', 'resp_export_private_key')\nexport const exportMnemonic = send('param_export_mnemonic', 'resp_export_mnemonic')\nexport const exportKeyStoreJSONOfAddress = send('param_export_key_store_json_of_address', 'resp_export_key_store_json')\nexport const exportKeyStoreJSONOfPath = send('param_export_key_store_json_of_path', 'resp_export_key_store_json')\n","import { omit } from 'lodash-es'\nimport { api } from '@dimensiondev/mask-wallet-core/proto'\nimport { CrossIsolationMessages, type ImportSource, asyncIteratorToArray } from '@masknet/shared-base'\nimport { formatEthereumAddress, isValidAddress } from '@masknet/web3-shared-evm'\nimport { walletDatabase } from '../../../database/Plugin.db.js'\nimport type { WalletRecord } from '../type.js'\n\nfunction WalletRecordOutDB(record: WalletRecord) {\n    return {\n        ...omit(record, 'type'),\n        configurable: record.storedKeyInfo?.type ? record.storedKeyInfo.type !== api.StoredKeyType.Mnemonic : true,\n        hasStoredKeyInfo: !!record.storedKeyInfo,\n        hasDerivationPath: !!record.derivationPath,\n    }\n}\n\nexport async function getWallet(address: string) {\n    if (!address) return null\n    if (!isValidAddress(address)) throw new Error('Not a valid address.')\n    const wallet = (await walletDatabase.get('wallet', formatEthereumAddress(address))) ?? null\n    return wallet ? WalletRecordOutDB(wallet) : null\n}\n\nexport async function getWalletRequired(address: string) {\n    const wallet = await getWallet(address)\n    if (!wallet) throw new Error('The wallet does not exist.')\n    return wallet\n}\n\nexport async function hasWallet(address: string) {\n    return walletDatabase.has('wallet', formatEthereumAddress(address))\n}\n\nexport async function hasStoredKeyInfo(storedKeyInfo?: api.IStoredKeyInfo) {\n    const wallets = await getWallets()\n    if (!storedKeyInfo) return false\n    return wallets.filter((x) => x.storedKeyInfo?.hash).some((x) => x.storedKeyInfo?.hash === storedKeyInfo?.hash)\n}\n\nasync function getWalletRecords() {\n    return (await asyncIteratorToArray(walletDatabase.iterate('wallet'))).map((x) => x.value)\n}\n\nexport async function getWallets() {\n    const wallets = await getWalletRecords()\n\n    return wallets\n        .sort((a, z) => {\n            if (a.updatedAt > z.updatedAt) return -1\n            if (a.updatedAt < z.updatedAt) return 1\n            if (a.createdAt > z.createdAt) return -1\n            if (a.createdAt < z.createdAt) return 1\n            return 0\n        })\n        .map(WalletRecordOutDB)\n}\n\nexport async function addWallet(\n    source: ImportSource,\n    address: string,\n    updates?: {\n        name?: string\n        derivationPath?: string\n        storedKeyInfo?: api.IStoredKeyInfo\n        mnemonicId?: string\n    },\n) {\n    const wallet = await getWallet(address)\n    if (wallet?.storedKeyInfo?.data) throw new Error('The wallet already exists.')\n\n    const now = new Date()\n    const address_ = formatEthereumAddress(address)\n    await walletDatabase.add({\n        id: address_,\n        type: 'wallet',\n        source,\n        address: address_,\n        name: updates?.name?.trim() ?? `Account ${(await getWallets()).length + 1}`,\n        derivationPath: updates?.derivationPath,\n        storedKeyInfo: updates?.storedKeyInfo,\n        mnemonicId: updates?.mnemonicId,\n        createdAt: now,\n        updatedAt: now,\n    })\n    CrossIsolationMessages.events.walletsUpdated.sendToAll(undefined)\n    return address_\n}\n\nexport async function updateWallet(\n    address: string,\n    updates: Partial<{\n        name: string\n        derivationPath?: string\n        latestDerivationPath?: string\n        mnemonicId?: string\n    }>,\n) {\n    const wallet = await getWallet(address)\n    if (!wallet) throw new Error('The wallet does not exist')\n\n    await walletDatabase.add({\n        type: 'wallet',\n        ...wallet,\n        name: updates.name ?? wallet.name,\n        derivationPath: updates?.derivationPath ?? wallet.derivationPath,\n        latestDerivationPath: updates?.latestDerivationPath ?? wallet.latestDerivationPath,\n        mnemonicId: updates?.mnemonicId ?? wallet.mnemonicId,\n        updatedAt: new Date(),\n    })\n    CrossIsolationMessages.events.walletsUpdated.sendToAll(undefined)\n}\n\nexport async function deleteWallet(address: string) {\n    await walletDatabase.remove('wallet', address)\n    CrossIsolationMessages.events.walletsUpdated.sendToAll(undefined)\n}\n\nexport async function resetAllWallets() {\n    for await (const x of walletDatabase.iterate_mutate('wallet')) {\n        await x.delete()\n    }\n    CrossIsolationMessages.events.walletsUpdated.sendToAll(undefined)\n}\n","import * as bip39 from 'bip39'\nimport { first, last, omit } from 'lodash-es'\nimport { sha3 } from 'web3-utils'\nimport { toBuffer } from '@ethereumjs/util'\nimport { api } from '@dimensiondev/mask-wallet-core/proto'\nimport { Signer } from '@masknet/web3-providers'\nimport { ImportSource, type SignType, type Wallet } from '@masknet/shared-base'\nimport { HD_PATH_WITHOUT_INDEX_ETHEREUM } from '@masknet/web3-shared-base'\nimport * as Mask from '../maskwallet/index.js'\nimport * as database from './database/index.js'\nimport * as password from './password.js'\n\nconst MAX_DERIVE_COUNT = 99\n\nfunction bumpDerivationPath(path = `${HD_PATH_WITHOUT_INDEX_ETHEREUM}/0`) {\n    const splitted = path.split('/')\n    const index = Number.parseInt(last(splitted) ?? '', 10)\n    if (Number.isNaN(index) || index < 0 || splitted.length !== 6) throw new Error('Invalid derivation path.')\n    return [...splitted.slice(0, -1), index + 1].join('/')\n}\n\nfunction sanitizeWallet(wallet: Wallet): Wallet {\n    return omit(wallet, ['storedKeyInfo'])\n}\n\n// db\nexport { hasWallet, addWallet, updateWallet } from './database/wallet.js'\n\n// password\nexport {\n    setPassword,\n    hasPassword,\n    hasPasswordWithDefaultOne,\n    verifyPassword,\n    changePassword,\n    resetPassword,\n    setDefaultPassword,\n    validatePassword,\n    clearPassword,\n} from './password.js'\n\nexport { getAutoLockerDuration, setAutoLockerTime } from './database/locker.js'\n\n// locker\nexport { isLocked, lockWallet, unlockWallet, setAutoLockTimer } from './locker.js'\n\nexport async function getWallet(address: string) {\n    const wallet = await database.getWallet(address)\n    if (!wallet?.hasStoredKeyInfo) return null\n    return sanitizeWallet(wallet)\n}\n\nexport async function getWallets(): Promise<Wallet[]> {\n    const wallets = await database.getWallets()\n    return wallets.filter((x) => x.hasStoredKeyInfo).map(sanitizeWallet)\n}\n\nexport async function createMnemonicWords() {\n    return bip39.generateMnemonic().split(' ')\n}\n\nexport async function createMnemonicId(mnemonic: string) {\n    const id = sha3(mnemonic)\n    if (!id) throw new Error('Failed to create mnemonic id.')\n    return id\n}\n\nexport async function getPrimaryWalletByMnemonicId(mnemonicId?: string) {\n    if (!mnemonicId) return\n    const wallets = await database.getWallets()\n\n    return (\n        wallets.find((x) => x.mnemonicId === mnemonicId && x.storedKeyInfo?.type === api.StoredKeyType.Mnemonic) ?? null\n    )\n}\n\nexport async function getWalletPrimary(mnemonicId?: string) {\n    const wallets = await database.getWallets()\n    const { Mnemonic } = api.StoredKeyType\n    const list = wallets\n        .filter((x) => x.storedKeyInfo?.type === Mnemonic && (mnemonicId ? mnemonicId === x.mnemonicId : true))\n        .sort((a, z) => a.createdAt.getTime() - z.createdAt.getTime())\n    return first(list) ?? null\n}\n\nexport async function getDerivableAccounts(mnemonic: string, page: number, pageSize = 10) {\n    const oneTimePassword = 'MASK'\n    const imported = await Mask.importMnemonic({\n        mnemonic,\n        password: oneTimePassword,\n    })\n    if (!imported?.StoredKey) throw new Error('Failed to import the wallet.')\n\n    const accounts: Array<{\n        index: number\n        address: string\n        derivationPath: string\n    }> = []\n\n    for (let i = pageSize * page; i < pageSize * (page + 1); i += 1) {\n        const derivationPath = `${HD_PATH_WITHOUT_INDEX_ETHEREUM}/${i}`\n        const created = await Mask.createAccountOfCoinAtPath({\n            coin: api.Coin.Ethereum,\n            password: oneTimePassword,\n            derivationPath,\n            StoredKeyData: imported.StoredKey.data,\n        })\n        if (!created?.account?.address) throw new Error(`Failed to create account at path: ${derivationPath}.`)\n        accounts.push({\n            index: i,\n            address: created.account.address,\n            derivationPath,\n        })\n    }\n    return accounts\n}\n\nexport async function deriveWallet(name: string, defaultMnemonicId?: string) {\n    const masterPassword = await password.INTERNAL_getMasterPasswordRequired()\n\n    // derive wallet base on the primary wallet\n    const primaryWallet = await getWalletPrimary(defaultMnemonicId)\n    if (!primaryWallet?.storedKeyInfo) throw new Error('Cannot find the primary wallet.')\n\n    let derivedTimes = 0\n    let latestDerivationPath = primaryWallet.latestDerivationPath ?? primaryWallet.derivationPath\n    if (!latestDerivationPath) throw new Error('Failed to derive wallet without derivation path.')\n\n    let mnemonicId = defaultMnemonicId\n    if (!mnemonicId) {\n        const mnemonic = await exportMnemonicWords(primaryWallet.address, masterPassword)\n        mnemonicId = await createMnemonicId(mnemonic)\n    }\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        derivedTimes += 1\n\n        // protect from endless looping\n        if (derivedTimes >= MAX_DERIVE_COUNT) {\n            await database.updateWallet(primaryWallet.address, {\n                latestDerivationPath,\n            })\n            throw new Error('Exceed the max derivation times.')\n        }\n\n        // bump index\n        latestDerivationPath = bumpDerivationPath(latestDerivationPath)\n\n        // derive a new wallet\n        const created = await Mask.createAccountOfCoinAtPath({\n            coin: api.Coin.Ethereum,\n            name,\n            password: masterPassword,\n            derivationPath: latestDerivationPath,\n            StoredKeyData: primaryWallet.storedKeyInfo.data,\n        })\n        if (!created?.account?.address) throw new Error(`Failed to create account at path: ${latestDerivationPath}.`)\n\n        // check its existence in DB\n        if (await database.hasWallet(created.account.address)) {\n            const localWallet = await database.getWallet(created.account.address)\n            if (localWallet?.mnemonicId)\n                await database.updateWallet(localWallet.address, {\n                    mnemonicId,\n                })\n            continue\n        }\n\n        // update the primary wallet\n        await database.updateWallet(primaryWallet.address, {\n            latestDerivationPath,\n        })\n\n        // found a valid candidate, get the private key of it\n        const exported = await Mask.exportPrivateKeyOfPath({\n            coin: api.Coin.Ethereum,\n            password: masterPassword,\n            derivationPath: latestDerivationPath,\n            StoredKeyData: primaryWallet.storedKeyInfo.data,\n        })\n        if (!exported?.privateKey) throw new Error(`Failed to export private key at path: ${latestDerivationPath}`)\n\n        // import the candidate by the private key\n        return createWalletFromPrivateKey(name, exported.privateKey, mnemonicId, latestDerivationPath)\n    }\n}\n\nexport async function generateNextDerivationAddress() {\n    const masterPassword = await password.INTERNAL_getMasterPasswordRequired()\n\n    // derive wallet base on the primary wallet\n    const primaryWallet = await getWalletPrimary()\n    if (!primaryWallet?.storedKeyInfo) throw new Error('Cannot find the primary wallet.')\n\n    let derivedTimes = 0\n    let latestDerivationPath = primaryWallet.latestDerivationPath ?? primaryWallet.derivationPath\n    if (!latestDerivationPath) throw new Error('Failed to derive wallet without derivation path.')\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        derivedTimes += 1\n\n        // protect from endless looping\n        if (derivedTimes >= MAX_DERIVE_COUNT) throw new Error('Exceed the max derivation times.')\n\n        // bump index\n        latestDerivationPath = bumpDerivationPath(latestDerivationPath)\n\n        // derive a new wallet\n        const created = await Mask.createAccountOfCoinAtPath({\n            coin: api.Coin.Ethereum,\n            name: '',\n            password: masterPassword,\n            derivationPath: latestDerivationPath,\n            StoredKeyData: primaryWallet.storedKeyInfo.data,\n        })\n        if (!created?.account?.address) throw new Error(`Failed to create account at path: ${latestDerivationPath}.`)\n\n        // check its existence in DB\n        if (await database.hasWallet(created.account.address)) continue\n\n        // found a valid candidate, get the private key of it\n        const exported = await Mask.exportPrivateKeyOfPath({\n            coin: api.Coin.Ethereum,\n            password: masterPassword,\n            derivationPath: latestDerivationPath,\n            StoredKeyData: primaryWallet.storedKeyInfo.data,\n        })\n        if (!exported?.privateKey) throw new Error(`Failed to export private key at path: ${latestDerivationPath}`)\n\n        return generateAddressFromPrivateKey(exported.privateKey)\n    }\n}\n\nexport async function renameWallet(address: string, name: string) {\n    const name_ = name.trim()\n    if (name_.length <= 0) throw new Error('Invalid wallet name.')\n    await database.updateWallet(address, {\n        name: name_,\n    })\n}\n\nexport async function removeWallet(address: string, unverifiedPassword: string) {\n    await password.verifyPasswordRequired(unverifiedPassword)\n    const wallet = await database.getWalletRequired(address)\n    await database.deleteWallet(wallet.address)\n}\n\nexport async function resetAllWallets() {\n    await database.resetAllWallets()\n}\n\nexport async function signWithWallet<T>(type: SignType, message: T, address: string) {\n    return Signer.sign(type, toBuffer(`0x${await exportPrivateKey(address)}`), message)\n}\n\nexport async function exportMnemonicWords(address: string, unverifiedPassword?: string) {\n    if (unverifiedPassword) await password.verifyPasswordRequired(unverifiedPassword)\n    const masterPassword = await password.INTERNAL_getMasterPasswordRequired()\n    const wallet = await database.getWalletRequired(address)\n    if (wallet.storedKeyInfo?.type !== api.StoredKeyType.Mnemonic)\n        throw new Error(`Cannot export mnemonic words of ${address}.`)\n    const exported = await Mask.exportMnemonic({\n        password: masterPassword,\n        StoredKeyData: wallet.storedKeyInfo.data,\n    })\n    if (!exported?.mnemonic) throw new Error(`Failed to export mnemonic words of ${address}.`)\n    return exported.mnemonic\n}\n\nexport async function exportPrivateKey(address: string, unverifiedPassword?: string) {\n    if (unverifiedPassword) await password.verifyPasswordRequired(unverifiedPassword)\n    const masterPassword = await password.INTERNAL_getMasterPasswordRequired()\n    const wallet = await database.getWalletRequired(address)\n    if (!wallet.storedKeyInfo) throw new Error(`Cannot export private key of ${address}.`)\n    const exported =\n        wallet.derivationPath && !wallet.configurable\n            ? await Mask.exportPrivateKeyOfPath({\n                  coin: api.Coin.Ethereum,\n                  derivationPath: wallet.derivationPath ?? `${HD_PATH_WITHOUT_INDEX_ETHEREUM}/0`,\n                  password: masterPassword,\n                  StoredKeyData: wallet.storedKeyInfo.data,\n              })\n            : await Mask.exportPrivateKey({\n                  coin: api.Coin.Ethereum,\n                  password: masterPassword,\n                  StoredKeyData: wallet.storedKeyInfo.data,\n              })\n\n    if (!exported?.privateKey) throw new Error(`Failed to export private key of ${address}.`)\n    return exported.privateKey\n}\n\nexport async function exportKeyStoreJSON(address: string, unverifiedPassword?: string) {\n    if (unverifiedPassword) await password.verifyPasswordRequired(unverifiedPassword)\n    const masterPassword = await password.INTERNAL_getMasterPasswordRequired()\n    const wallet = await database.getWalletRequired(address)\n    if (!wallet.storedKeyInfo) throw new Error(`Cannot export private key of ${address}.`)\n\n    const exported =\n        wallet.derivationPath && !wallet.configurable\n            ? await Mask.exportKeyStoreJSONOfPath({\n                  coin: api.Coin.Ethereum,\n                  derivationPath: wallet.derivationPath ?? `${HD_PATH_WITHOUT_INDEX_ETHEREUM}/0`,\n                  password: masterPassword,\n                  newPassword: unverifiedPassword,\n                  StoredKeyData: wallet.storedKeyInfo.data,\n              })\n            : await Mask.exportKeyStoreJSONOfAddress({\n                  coin: api.Coin.Ethereum,\n                  password: masterPassword,\n                  newPassword: unverifiedPassword,\n                  StoredKeyData: wallet.storedKeyInfo.data,\n              })\n    if (!exported?.json) throw new Error(`Failed to export keystore JSON of ${address}.`)\n    return exported.json\n}\n\nasync function addWalletFromMnemonicWords(\n    source: ImportSource,\n    name: string,\n    mnemonic: string,\n    derivationPath: string,\n) {\n    const masterPassword = await password.INTERNAL_getMasterPasswordRequired()\n    const imported = await Mask.importMnemonic({\n        mnemonic,\n        password: masterPassword,\n    })\n\n    if (!imported?.StoredKey) throw new Error('Failed to import the wallet.')\n\n    const mnemonicId = await createMnemonicId(mnemonic)\n    if (await database.hasStoredKeyInfo(imported.StoredKey)) {\n        const exported = await Mask.exportPrivateKeyOfPath({\n            coin: api.Coin.Ethereum,\n            derivationPath,\n            password: masterPassword,\n            StoredKeyData: imported.StoredKey.data,\n        })\n        if (!exported?.privateKey) throw new Error(`Failed to export private key at path: ${derivationPath}`)\n\n        return addWalletFromPrivateKey(source, name, exported.privateKey, mnemonicId, derivationPath)\n    } else {\n        const created = await Mask.createAccountOfCoinAtPath({\n            coin: api.Coin.Ethereum,\n            name,\n            password: masterPassword,\n            derivationPath,\n            StoredKeyData: imported.StoredKey.data,\n        })\n        if (!created?.account?.address) throw new Error('Failed to create the wallet.')\n        return database.addWallet(source, created.account.address, {\n            name,\n            derivationPath,\n            storedKeyInfo: imported.StoredKey,\n            mnemonicId,\n        })\n    }\n}\n\nasync function addWalletFromPrivateKey(\n    source: ImportSource,\n    name: string,\n    privateKey: string,\n    mnemonicId?: string,\n    derivationPath?: string,\n) {\n    const masterPassword = await password.INTERNAL_getMasterPasswordRequired()\n    const imported = await Mask.importPrivateKey({\n        coin: api.Coin.Ethereum,\n        name,\n        password: masterPassword,\n        privateKey: privateKey.replace(/^0x/, '').trim(),\n    })\n    if (!imported?.StoredKey) throw new Error('Failed to import the wallet.')\n    const created = await Mask.createAccountOfCoinAtPath({\n        coin: api.Coin.Ethereum,\n        name,\n        password: masterPassword,\n        derivationPath: null,\n        StoredKeyData: imported.StoredKey.data,\n    })\n    if (!created?.account?.address) throw new Error('Failed to create the wallet.')\n    return database.addWallet(source, created.account.address, {\n        name,\n        storedKeyInfo: imported.StoredKey,\n        mnemonicId,\n        derivationPath,\n    })\n}\n\nexport function createWalletFromMnemonicWords(\n    name: string,\n    mnemonic: string,\n    derivationPath = `${HD_PATH_WITHOUT_INDEX_ETHEREUM}/0`,\n) {\n    return addWalletFromMnemonicWords(ImportSource.LocalGenerated, name, mnemonic, derivationPath)\n}\n\nfunction createWalletFromPrivateKey(name: string, privateKey: string, mnemonicId?: string, derivationPath?: string) {\n    return addWalletFromPrivateKey(ImportSource.LocalGenerated, name, privateKey, mnemonicId, derivationPath)\n}\n\nexport function recoverWalletFromMnemonicWords(\n    name: string,\n    mnemonic: string,\n    derivationPath = `${HD_PATH_WITHOUT_INDEX_ETHEREUM}/0`,\n) {\n    return addWalletFromMnemonicWords(ImportSource.UserProvided, name, mnemonic, derivationPath)\n}\n\nexport function recoverWalletFromPrivateKey(\n    name: string,\n    privateKey: string,\n    mnemonicId?: string,\n    derivationPath?: string,\n) {\n    return addWalletFromPrivateKey(ImportSource.UserProvided, name, privateKey, mnemonicId, derivationPath)\n}\n\nexport async function recoverWalletFromKeyStoreJSON(name: string, json: string, jsonPassword: string) {\n    const masterPassword = await password.INTERNAL_getMasterPasswordRequired()\n    const imported = await Mask.importJSON({\n        coin: api.Coin.Ethereum,\n        json,\n        keyStoreJsonPassword: jsonPassword,\n        name,\n        password: masterPassword,\n    })\n    if (!imported?.StoredKey) throw new Error('Failed to import the wallet.')\n    const created = await Mask.createAccountOfCoinAtPath({\n        coin: api.Coin.Ethereum,\n        derivationPath: null,\n        name,\n        password: masterPassword,\n        StoredKeyData: imported.StoredKey.data,\n    })\n    if (!created?.account?.address) throw new Error('Failed to create the wallet.')\n\n    return database.addWallet(ImportSource.UserProvided, created.account.address, {\n        name,\n        storedKeyInfo: imported.StoredKey,\n    })\n}\n\nexport async function generateAddressFromPrivateKey(privateKey: string) {\n    const masterPassword = await password.INTERNAL_getMasterPasswordRequired()\n    const imported = await Mask.importPrivateKey({\n        coin: api.Coin.Ethereum,\n        name: '',\n        password: masterPassword,\n        privateKey: privateKey.replace(/^0x/, '').trim(),\n    })\n    if (!imported?.StoredKey) throw new Error('Failed to import the wallet.')\n    const created = await Mask.createAccountOfCoinAtPath({\n        coin: api.Coin.Ethereum,\n        name: '',\n        password: masterPassword,\n        derivationPath: null,\n        StoredKeyData: imported.StoredKey.data,\n    })\n    if (!created?.account?.address) throw new Error('Failed to create the wallet.')\n    return created.account.address\n}\n\nexport async function generateAddressFromKeyStoreJSON(json: string, jsonPassword: string) {\n    const masterPassword = await password.INTERNAL_getMasterPasswordRequired()\n    const imported = await Mask.importJSON({\n        coin: api.Coin.Ethereum,\n        json,\n        keyStoreJsonPassword: jsonPassword,\n        name: '',\n        password: masterPassword,\n    })\n    if (!imported?.StoredKey) throw new Error('Failed to import the wallet.')\n    const created = await Mask.createAccountOfCoinAtPath({\n        coin: api.Coin.Ethereum,\n        derivationPath: null,\n        name: '',\n        password: masterPassword,\n        StoredKeyData: imported.StoredKey.data,\n    })\n    if (!created?.account?.address) throw new Error('Failed to create the wallet.')\n    return created.account.address\n}\n\nexport async function generateAddressFromMnemonicWords(\n    name: string,\n    mnemonic: string,\n    derivationPath = `${HD_PATH_WITHOUT_INDEX_ETHEREUM}/0`,\n) {\n    const oneTimePassword = 'MASK'\n    const imported = await Mask.importMnemonic({\n        mnemonic,\n        password: oneTimePassword,\n    })\n    if (!imported?.StoredKey) throw new Error('Failed to import the wallet.')\n    const created = await Mask.createAccountOfCoinAtPath({\n        coin: api.Coin.Ethereum,\n        name,\n        password: oneTimePassword,\n        derivationPath,\n        StoredKeyData: imported.StoredKey.data,\n    })\n    return created?.account?.address ?? undefined\n}\n","import { CrossIsolationMessages, LockStatus, currentMaskWalletLockStatusSettings } from '@masknet/shared-base'\nimport { getAutoLockerDuration } from './database/locker.js'\nimport * as password from './password.js'\n\nexport async function isLocked() {\n    return (await password.hasPassword()) && !(await password.hasVerifiedPassword())\n}\n\nexport async function lockWallet() {\n    password.clearPassword()\n    currentMaskWalletLockStatusSettings.value = LockStatus.LOCKED\n    CrossIsolationMessages.events.walletLockStatusUpdated.sendToAll(true)\n}\n\nexport async function unlockWallet(unverifiedPassword: string) {\n    if (!isLocked()) return true\n    try {\n        await password.verifyPasswordRequired(unverifiedPassword)\n        currentMaskWalletLockStatusSettings.value = LockStatus.UNLOCK\n        CrossIsolationMessages.events.walletLockStatusUpdated.sendToAll(false)\n        await setAutoLockTimer()\n        return true\n    } catch {\n        CrossIsolationMessages.events.walletLockStatusUpdated.sendToAll(true)\n        return false\n    }\n}\n\nlet autoLockTimer: ReturnType<typeof setTimeout> | undefined\n\nexport async function setAutoLockTimer() {\n    const autoLockDuration = await getAutoLockerDuration()\n\n    clearTimeout(autoLockTimer)\n\n    if (autoLockDuration <= 0) return\n\n    autoLockTimer = setTimeout(async () => {\n        await lockWallet()\n    }, autoLockDuration)\n}\n","export function getDefaultWalletPassword() {\n    return 'MASK NETWORK'.split('').reverse().join('')\n}\n","import { v4 as uuid } from 'uuid'\nimport { decodeText, encodeText } from '@masknet/kit'\nimport { getDefaultWalletPassword } from '@masknet/shared-base'\nimport { walletDatabase } from '../../../database/Plugin.db.js'\n\nconst SECRET_ID = '0'\n\nfunction derivePBKDF2(password: string) {\n    return crypto.subtle.importKey('raw', encodeText(password).buffer, 'PBKDF2', false, ['deriveBits', 'deriveKey'])\n}\nfunction deriveAES(key: CryptoKey, iv: ArrayBuffer) {\n    return crypto.subtle.deriveKey(\n        {\n            name: 'PBKDF2',\n            salt: iv,\n            iterations: 100000,\n            hash: 'SHA-256',\n        },\n        key,\n        { name: 'AES-KW', length: 256 },\n        false,\n        ['wrapKey', 'unwrapKey'],\n    )\n}\nfunction createAES() {\n    return crypto.subtle.generateKey({ name: 'AES-GCM', length: 256 }, true, ['encrypt', 'decrypt'])\n}\nfunction encrypt(message: ArrayBuffer, key: CryptoKey, iv: ArrayBuffer) {\n    return crypto.subtle.encrypt({ name: 'AES-GCM', iv }, key, message)\n}\nfunction decrypt(message: ArrayBuffer, key: CryptoKey, iv: ArrayBuffer) {\n    return crypto.subtle.decrypt({ name: 'AES-GCM', iv }, key, message)\n}\nfunction wrapKey(key: CryptoKey, wrapKey: CryptoKey) {\n    return crypto.subtle.wrapKey('raw', key, wrapKey, 'AES-KW')\n}\nfunction unwrapKey(key: ArrayBuffer, wrapKey: CryptoKey) {\n    return crypto.subtle.unwrapKey('raw', key, wrapKey, 'AES-KW', 'AES-GCM', false, ['encrypt', 'decrypt'])\n}\nfunction getIV() {\n    return crypto.getRandomValues(new Uint8Array(16)).buffer\n}\nasync function deriveKey(iv: ArrayBuffer, password: string) {\n    return deriveAES(await derivePBKDF2(password), iv)\n}\n\nasync function getSecret() {\n    return walletDatabase.get('secret', SECRET_ID)\n}\n\n/**\n * Return true means a user password (could be the default one) has been set.\n * @returns\n */\nexport async function hasSecret() {\n    return !!(await getSecret())\n}\n\n/**\n * Return true means the user has set a password (could not be the default one).\n * @returns\n */\nexport async function hasSafeSecret() {\n    const secret = await getSecret()\n    return !!secret && (typeof secret.isUnsafe === 'undefined' || secret.isUnsafe === false)\n}\n\n/**\n * Erase the preexisting master secret by force, and create a new one with the given user password.\n * @param password\n */\nexport async function resetSecret(password: string) {\n    await walletDatabase.remove('secret', SECRET_ID)\n    const iv = getIV()\n    const key = await deriveKey(iv, password)\n    const primaryKey = await createAES()\n    const primaryKeyWrapped = await wrapKey(primaryKey, key)\n    const message = uuid() // the primary key never change\n    await walletDatabase.add({\n        id: SECRET_ID,\n        type: 'secret',\n        iv,\n        key: primaryKeyWrapped,\n        encrypted: await encrypt(encodeText(message), primaryKey, iv),\n        isUnsafe: password === getDefaultWalletPassword(),\n    })\n}\n\n/**\n * Create a master secret which will be encrypted by the given user password.\n * @param password\n */\nexport async function encryptSecret(password: string) {\n    const secret = await getSecret()\n    if (secret) throw new Error('A secret has already been set.')\n\n    const iv = getIV()\n    const key = await deriveKey(iv, password)\n    const primaryKey = await createAES()\n    const primaryKeyWrapped = await wrapKey(primaryKey, key)\n    const message = uuid() // the master secret never change\n    await walletDatabase.add({\n        id: SECRET_ID,\n        type: 'secret',\n        iv,\n        key: primaryKeyWrapped,\n        encrypted: await encrypt(encodeText(message), primaryKey, iv),\n        isUnsafe: password === getDefaultWalletPassword(),\n    })\n}\n/**\n * Update the user password which is used for encrypting the master secret.\n * @param oldPassword\n * @param newPassword\n */\nexport async function updateSecret(oldPassword: string, newPassword: string) {\n    const secret = await getSecret()\n    if (!secret) throw new Error('No secret has set before.')\n\n    if (newPassword === getDefaultWalletPassword()) throw new Error('Invalid password.')\n\n    const iv = getIV()\n    const message = await decryptSecret(oldPassword)\n    const key = await deriveKey(iv, newPassword)\n    const primaryKey = await createAES()\n    const primaryKeyWrapped = await wrapKey(primaryKey, key)\n    await walletDatabase.add({\n        id: SECRET_ID,\n        type: 'secret',\n        iv,\n        key: primaryKeyWrapped,\n        encrypted: await encrypt(encodeText(message), primaryKey, iv),\n        isUnsafe: false,\n    })\n}\n\n/**\n * Decrypt the master secret.\n * @param password\n * @returns\n */\nexport async function decryptSecret(password: string) {\n    const secret = await getSecret()\n    if (!secret) throw new Error('No secret has set before.')\n\n    try {\n        const key = await deriveKey(secret.iv, password)\n        const primaryKey = await unwrapKey(secret.key, key)\n        return decodeText(await decrypt(secret.encrypted, primaryKey, secret.iv))\n    } catch {\n        return ''\n    }\n}\n","import { validate } from 'uuid'\nimport { getDefaultWalletPassword } from '@masknet/shared-base'\nimport * as database from './database/index.js'\n\nlet inMemoryPassword = ''\n\n/** Decrypt the master password and return it. If it fails to decrypt, then return an empty string. */\nexport async function INTERNAL_getMasterPassword() {\n    const hasSafeSecret = await database.hasSafeSecret()\n    if (!hasSafeSecret) return database.decryptSecret(getDefaultWalletPassword())\n    return inMemoryPassword ? database.decryptSecret(inMemoryPassword) : ''\n}\n\n/** Decrypt the master password and return it. If it fails to decrypt, then throw an error. */\nexport async function INTERNAL_getMasterPasswordRequired() {\n    const password_ = await INTERNAL_getMasterPassword()\n    if (!password_) throw new Error('No password set yet or expired.')\n    return password_\n}\n\nfunction INTERNAL_setPassword(newPassword: string) {\n    validatePasswordRequired(newPassword)\n    inMemoryPassword = newPassword\n}\n\n/** Force erase the preexisting password and set a new one. */\nexport async function resetPassword(newPassword: string) {\n    validatePasswordRequired(newPassword)\n    await database.resetSecret(newPassword)\n    INTERNAL_setPassword(newPassword)\n}\n\n/** Set a password when no one has set it before. */\nexport async function setPassword(newPassword: string) {\n    validatePasswordRequired(newPassword)\n    await database.encryptSecret(newPassword)\n    INTERNAL_setPassword(newPassword)\n}\n\n/** Set the default password if no secret set before. */\nexport async function setDefaultPassword() {\n    const hasSecret = await database.hasSecret()\n    if (hasSecret) return\n    const password = getDefaultWalletPassword()\n    await database.encryptSecret(password)\n    INTERNAL_setPassword(password)\n}\n\n/** Clear the verified password in memory forces the user to re-enter the password. */\nexport async function clearPassword() {\n    inMemoryPassword = ''\n}\n\n/** Has set a password (could not be the default one). */\nexport async function hasPassword() {\n    return database.hasSafeSecret()\n}\n\n/** Has set a password (could be the default one). */\nexport async function hasPasswordWithDefaultOne() {\n    return database.hasSecret()\n}\n\n/** Has a verified password in memory. */\nexport async function hasVerifiedPassword() {\n    return validatePassword(inMemoryPassword)\n}\n\n/** Verify the given password. if successful, keep it in memory. */\nexport async function verifyPassword(unverifiedPassword: string) {\n    if (inMemoryPassword === unverifiedPassword) return true\n    const valid = validate(await database.decryptSecret(unverifiedPassword))\n    if (!valid) return false\n    INTERNAL_setPassword(unverifiedPassword)\n    return true\n}\n\n/** Verify the given password. if successful, keep it in memory; otherwise, throw an error. */\nexport async function verifyPasswordRequired(unverifiedPassword: string, message?: string) {\n    if (!(await verifyPassword(unverifiedPassword))) throw new Error(message ?? 'Wrong password')\n    return true\n}\n\nexport async function changePassword(oldPassword: string, newPassword: string, message?: string) {\n    validatePasswordRequired(newPassword)\n    await verifyPasswordRequired(oldPassword, message ?? 'Incorrect payment password.')\n    if (oldPassword === newPassword) throw new Error('Failed to set the same password as the old one.')\n    await database.updateSecret(oldPassword, newPassword)\n    INTERNAL_setPassword(newPassword)\n}\n\nexport async function validatePassword(unverifiedPassword: string) {\n    if (!unverifiedPassword) return false\n    if (unverifiedPassword.length < 6) return false\n    if (unverifiedPassword.length > 20) return false\n    return true\n}\n\nasync function validatePasswordRequired(unverifiedPassword: string) {\n    if (!validatePassword(unverifiedPassword)) throw new Error('The password is not satisfied the requirement.')\n    return true\n}\n","import { createTransaction } from '../utils/openDB.js'\nimport { createAvatarDBAccess, deleteAvatarsDB, type IdentifierWithAvatar, queryAvatarOutdatedDB } from './db.js'\n\nexport async function cleanAvatarDB(anotherList: Set<IdentifierWithAvatar>) {\n    const t = createTransaction(await createAvatarDBAccess(), 'readwrite')('avatars', 'metadata')\n    const outdated = await queryAvatarOutdatedDB(t, 'lastAccessTime')\n    for (const each of outdated) {\n        anotherList.add(each)\n    }\n    await deleteAvatarsDB(t, Array.from(anotherList.keys()))\n}\n","import { consistentPersonaDBWriteAccess } from '../../database/persona/db.js'\nimport { ProfileIdentifier } from '@masknet/shared-base'\nimport { cleanAvatarDB } from '../../database/avatar-cache/cleanup.js'\nimport { hmr } from '../../../utils-pure/index.js'\n\nconst { signal } = hmr(import.meta.webpackHot)\ntry {\n    cleanProfileWithNoLinkedPersona(signal)\n} catch {}\n\nasync function cleanRelationDB(anotherList: Set<ProfileIdentifier>) {\n    await consistentPersonaDBWriteAccess(async (t) => {\n        for await (const x of t.objectStore('relations')) {\n            const profileIdentifier = ProfileIdentifier.from(x.value.profile)\n            if (profileIdentifier.isSome()) {\n                if (anotherList.has(profileIdentifier.value)) x.delete()\n            }\n        }\n    })\n}\n\nasync function cleanProfileWithNoLinkedPersona(signal: AbortSignal) {\n    const timeout = setTimeout(cleanProfileWithNoLinkedPersona, 1000 * 60 * 60 * 24 /** 1 day */, signal)\n    signal.addEventListener('abort', () => clearTimeout(timeout))\n\n    const cleanedList = new Set<ProfileIdentifier>()\n    const expired = new Date(Date.now() - 1000 * 60 * 60 * 24 * 14 /** days */)\n    await consistentPersonaDBWriteAccess(async (t) => {\n        if (signal.aborted) throw new Error('Abort')\n        for await (const x of t.objectStore('profiles')) {\n            if (x.value.linkedPersona) continue\n            if (expired < x.value.updatedAt) continue\n            const id = ProfileIdentifier.from(x.value.identifier)\n            if (id.isSome()) cleanedList.add(id.value)\n            await x.delete()\n        }\n    }, false)\n    await cleanAvatarDB(cleanedList)\n    await cleanRelationDB(cleanedList)\n}\n","import { noop } from 'lodash-es'\nimport { hmr } from '../../../utils-pure/index.js'\nimport type { Scripting } from 'webextension-polyfill'\nimport { injectedScriptURL, fetchInjectContentScriptList, maskSDK_URL } from '../../utils/injectScript.js'\nimport { Sniffings } from '@masknet/shared-base'\n\nconst { signal } = hmr(import.meta.webpackHot)\nif (typeof browser.scripting?.registerContentScripts === 'function') {\n    await unregisterExistingScripts()\n    await browser.scripting.registerContentScripts([\n        ...prepareMainWorldScript(['<all_urls>']),\n        ...(await prepareContentScript(['<all_urls>'])),\n    ])\n\n    signal.addEventListener('abort', unregisterExistingScripts)\n}\n\nasync function unregisterExistingScripts() {\n    await browser.scripting.unregisterContentScripts().catch(noop)\n}\n\nfunction prepareMainWorldScript(matches: string[]): Scripting.RegisteredContentScript[] {\n    if (Sniffings.is_firefox) return []\n    const result: Scripting.RegisteredContentScript = {\n        id: 'injected',\n        allFrames: true,\n        js: [maskSDK_URL, injectedScriptURL],\n        persistAcrossSessions: false,\n        // @ts-expect-error Chrome API\n        world: 'MAIN',\n        runAt: 'document_start',\n        matches,\n    }\n    return [result]\n}\n\nasync function prepareContentScript(matches: string[]): Promise<Scripting.RegisteredContentScript[]> {\n    const xrayScript: Scripting.RegisteredContentScript = {\n        id: 'xray',\n        allFrames: true,\n        js: [injectedScriptURL],\n        persistAcrossSessions: false,\n        // @ts-expect-error Chrome API\n        world: 'ISOLATED',\n        runAt: 'document_start',\n        matches,\n    }\n    const content: Scripting.RegisteredContentScript = {\n        id: 'content',\n        allFrames: true,\n        js: await fetchInjectContentScriptList(),\n        persistAcrossSessions: false,\n        // @ts-expect-error Chrome API\n        world: 'ISOLATED',\n        runAt: 'document_idle',\n        matches,\n    }\n    if (globalThis.navigator?.userAgent.includes('Firefox')) return [xrayScript, content]\n    return [content]\n}\n","import { hmr } from '../../../utils-pure/hmr.js'\nimport type { ExtensionTypes, WebNavigation } from 'webextension-polyfill'\nimport {\n    evaluateContentScript,\n    ignoreInjectError,\n    injectUserScriptMV2,\n    injectedScriptURL,\n    maskSDK_URL,\n} from '../../utils/injectScript.js'\nimport { Sniffings } from '@masknet/shared-base'\n\nconst { signal } = hmr(import.meta.webpackHot)\nif (typeof browser.scripting?.registerContentScripts === 'undefined') InjectContentScript(signal)\n\nasync function onCommittedListener(arg: WebNavigation.OnCommittedDetailsType): Promise<void> {\n    if (!arg.url.startsWith('http')) return\n    const contains = await browser.permissions.contains({ origins: [arg.url] })\n    if (!contains) return\n\n    const detail: ExtensionTypes.InjectDetails = { runAt: 'document_start', frameId: arg.frameId }\n    const err = ignoreInjectError(arg)\n\n    // don't add await here. we don't want this to block the content script\n    if (Sniffings.is_firefox) {\n        browser.tabs.executeScript(arg.tabId, { ...detail, file: injectedScriptURL }).catch(err)\n    } else {\n        injectUserScriptMV2(injectedScriptURL)\n            .then(async (code) => browser.tabs.executeScript(arg.tabId, { ...detail, code }))\n            .catch(err)\n        injectUserScriptMV2(maskSDK_URL)\n            .then(async (code) => browser.tabs.executeScript(arg.tabId, { ...detail, code }))\n            .catch(err)\n    }\n\n    evaluateContentScript(arg.tabId, arg.frameId).catch(err)\n}\nasync function InjectContentScript(signal: AbortSignal) {\n    browser.webNavigation.onCommitted.addListener(onCommittedListener)\n    signal.addEventListener('abort', () => browser.webNavigation.onCommitted.removeListener(onCommittedListener))\n}\n","import {\n    pluginIDsSettings,\n    type MaskSettingsEvents,\n    type ValueRefWithReady,\n    languageSettings,\n    currentPersonaIdentifier,\n    appearanceSettings,\n} from '@masknet/shared-base'\nimport { telemetrySettings } from '@masknet/web3-telemetry'\n\ntype ToBeListedSettings = {\n    [key in keyof MaskSettingsEvents]: ValueRefWithReady<MaskSettingsEvents[key]>\n}\nexport function ToBeListened(): ToBeListedSettings {\n    return {\n        telemetrySettings,\n        appearanceSettings,\n        pluginIDSettings: pluginIDsSettings,\n        languageSettings,\n        currentPersonaIdentifier,\n    }\n}\n","import { MaskMessages, type MaskSettingsEvents } from '@masknet/shared-base'\nimport { hmr } from '../../../utils-pure/index.js'\nimport { ToBeListened } from '../../../shared/legacy-settings/listener.js'\n\nconst { signal } = hmr(import.meta.webpackHot)\nconst listeners = ToBeListened()\nconst keys = Object.keys(listeners) as Array<keyof MaskSettingsEvents>\nfor (const key of keys) {\n    signal.addEventListener(\n        'abort',\n        listeners[key].addListener((data) => MaskMessages.events[key].sendToAll(data as never)),\n    )\n}\n","import { startPluginWorker, type Plugin } from '@masknet/plugin-infra/background-worker'\nimport { createPluginDatabase } from '../../database/plugin-db/index.js'\nimport { createPluginHost, createSharedContext } from '../../../shared/plugin-infra/host.js'\nimport { hmr } from '../../../utils-pure/index.js'\nimport { getPluginMinimalModeEnabled } from '../../services/settings/old-settings-accessor.js'\nimport { hasHostPermission } from '../../services/helper/request-permission.js'\n\nconst { signal } = hmr(import.meta.webpackHot)\nstartPluginWorker(createPluginHost(signal, createWorkerContext, getPluginMinimalModeEnabled, hasHostPermission))\n\nfunction createWorkerContext(\n    pluginID: string,\n    def: Plugin.Worker.Definition,\n    signal: AbortSignal,\n): Plugin.__Host.WorkerContext {\n    let storage: Plugin.Worker.DatabaseStorage<any> = undefined!\n\n    return {\n        ...createSharedContext(pluginID, signal),\n        getDatabaseStorage() {\n            return storage || (storage = createPluginDatabase(pluginID, signal))\n        },\n    }\n}\n","import { PluginRuntime } from '../runtime/runtime.js'\nimport { type BasicHostHooks, type BasicHostInstance, PluginRunner } from '../runtime/runner.js'\nimport { getURL } from '../utils/url.js'\nimport { addPeerDependencies } from '../peer-dependencies/index.js'\nimport { AsyncCall, AsyncGeneratorCall } from 'async-call-rpc/full'\nimport { serializer } from '@masknet/shared-base'\nimport { isManifest } from '../utils/manifest.js'\nimport type { ExportAllBinding } from '@masknet/compartment'\nimport type { BackupHandler } from '../types/worker-api.js'\n\nexport interface BackgroundHostHooks extends BasicHostHooks {\n    // TODO: return type should be Plugin.Worker.DatabaseStorage\n    createTaggedStorage(id: string, signal: AbortSignal): unknown\n}\nexport interface BackgroundInstance extends BasicHostInstance {\n    backupHandler?: BackupHandler\n}\nexport class BackgroundPluginHost extends PluginRunner<BackgroundHostHooks, BackgroundInstance> {\n    constructor(\n        hooks: BackgroundHostHooks,\n        allowLocalOverrides: boolean,\n        signal: AbortSignal = new AbortController().signal,\n    ) {\n        super(hooks, allowLocalOverrides, signal)\n    }\n\n    protected async HostStartPlugin(id: string, isLocal: boolean, signal: AbortSignal): Promise<BackgroundInstance> {\n        const manifest = await this.hooks.fetchManifest(id, isLocal)\n        if (!isManifest(manifest)) throw new TypeError(`${id} does not have a valid manifest.`)\n\n        const runtime = new PluginRuntime(id, isLocal ? `local-plugin-${id}` : `plugin-${id}`, {}, signal)\n        addPeerDependencies(runtime)\n        runtime.addNamespaceModule('@masknet/plugin/worker', {\n            registerBackupHandler(handler: BackupHandler) {\n                if (!manifest.contributes?.backup) {\n                    throw new Error(\n                        'Refuse to register the backup handler because manifest.contributes.backup is not true.',\n                    )\n                }\n                const { onBackup, onRestore } = handler\n                if (typeof onBackup !== 'function' || typeof onRestore !== 'function')\n                    throw new TypeError('BackupHandler must have onBackup and onRestore functions.')\n\n                instance.backupHandler = { onBackup, onRestore }\n                console.debug(`${id} attached a backup handler.`)\n            },\n            taggedStorage: this.hooks.createTaggedStorage(id, signal),\n        })\n\n        const { background, rpc, rpcGenerator } = manifest.entries || {}\n        const instance: BackgroundInstance = {\n            id,\n            isLocal,\n            runtime,\n        }\n        await this.bindRPC(instance, rpc, rpcGenerator)\n        if (background) await runtime.imports(getURL(id, background, isLocal))\n        await this.startService(instance, !!rpc, !!rpcGenerator)\n        return instance\n    }\n\n    private async bindRPC(instance: BackgroundInstance, rpc: string | undefined, rpcGenerator: string | undefined) {\n        if (!rpc && !rpcGenerator) return\n\n        const rpcReExports: ExportAllBinding[] = []\n        if (rpc) rpcReExports.push({ exportAllFrom: getURL(instance.id, rpc, instance.isLocal), as: 'worker' })\n        if (rpcGenerator)\n            rpcReExports.push({\n                exportAllFrom: getURL(instance.id, rpcGenerator, instance.isLocal),\n                as: 'workerGenerator',\n            })\n        instance.runtime.addReExportModule('@masknet/plugin/utils/rpc', ...rpcReExports)\n    }\n    private async startService(instance: BackgroundInstance, hasRPC: boolean, hasRPCGenerator: boolean) {\n        const rpcReExport = await instance.runtime.imports('@masknet/plugin/utils/rpc')\n        if (hasRPC) {\n            AsyncCall(rpcReExport.worker, {\n                channel: this.hooks.createRpcChannel(instance.id, this.signal),\n                serializer,\n                log: true,\n                thenable: false,\n            })\n        }\n        if (hasRPCGenerator) {\n            AsyncGeneratorCall(rpcReExport.workerGenerator, {\n                channel: this.hooks.createRpcGeneratorChannel(instance.id, this.signal),\n                serializer,\n                log: true,\n                thenable: false,\n            })\n        }\n    }\n}\n","import { None, Result, Some } from 'ts-results-es'\nimport { Flags } from '@masknet/flags'\nimport type { PluginID } from '@masknet/shared-base'\nimport { type Plugin, registerPlugin } from '@masknet/plugin-infra'\nimport { type BackgroundInstance, BackgroundPluginHost } from '@masknet/sandboxed-plugin-runtime/background'\nimport { hmr } from '../../../utils-pure/index.js'\nimport { createPluginDatabase } from '../../database/plugin-db/index.js'\nimport { createHostAPIs } from '../../../shared/sandboxed-plugin/host-api.js'\n\nconst { signal } = hmr(import.meta.webpackHot)\nlet hot:\n    | Map<\n          string,\n          (\n              hot: Promise<{\n                  default: Plugin.Worker.Definition\n              }>,\n          ) => void\n      >\n    | undefined\nif (process.env.NODE_ENV === 'development') {\n    const sym = Symbol.for('sandboxed plugin bridge hot map')\n    hot = (globalThis as any)[sym] ??= new Map()\n}\n\nif (Flags.sandboxedPluginRuntime) {\n    const host = new BackgroundPluginHost(\n        {\n            ...createHostAPIs(true),\n            createTaggedStorage: createPluginDatabase,\n        },\n        process.env.NODE_ENV === 'development',\n        signal,\n    )\n    host.__builtInPluginInfraBridgeCallback__ = __builtInPluginInfraBridgeCallback__\n    host.onPluginListUpdate()\n}\nfunction __builtInPluginInfraBridgeCallback__(this: BackgroundPluginHost, id: string) {\n    let instance: BackgroundInstance | undefined\n\n    const base: Plugin.Shared.Definition = {\n        enableRequirement: {\n            supports: { type: 'opt-out', sites: {} },\n            target: 'beta',\n        },\n        ID: id as PluginID,\n        // TODO: read i18n files\n        // TODO: read the name from the manifest\n        name: { fallback: '__generated__bridge__plugin__' + id },\n        experimentalMark: true,\n    }\n    const def: Plugin.DeferredDefinition = {\n        ...base,\n        Worker: {\n            hotModuleReload: (reload) => hot?.set(id, reload),\n            async load() {\n                return { default: worker }\n            },\n        },\n    }\n    const worker: Plugin.Worker.Definition = {\n        ...base,\n        init: async (signal, context) => {\n            const [i] = await this.startPlugin_bridged(id, signal)\n            instance = i\n        },\n        backup: {\n            async onBackup() {\n                if (!instance?.backupHandler) return None\n                const data = await instance.backupHandler.onBackup()\n                if (data === None) return None\n                if (!(data instanceof Some)) throw new TypeError('Backup handler must return Some(data) or None')\n                return data as Some<any>\n            },\n            onRestore(data) {\n                return Result.wrapAsync(async () => {\n                    await instance?.backupHandler?.onRestore(data)\n                })\n            },\n        },\n    }\n    if (hot?.has(id)) hot.get(id)!(def.Worker!.load())\n    else registerPlugin(def)\n}\n","import { CrossIsolationMessages } from '@masknet/shared-base'\nimport { hmr } from '../../../utils-pure/index.js'\nimport { setAutoLockTimer } from '../../services/wallet/services/index.js'\n\nconst { signal } = hmr(import.meta.webpackHot)\n// Reset timer\nCrossIsolationMessages.events.walletLockStatusUpdated.on(setAutoLockTimer, { signal })\n","// ALL IMPORTS MUST BE DEFERRED\nimport type { DashboardRoutes } from '@masknet/shared-base'\nimport * as base from /* webpackDefer: true */ '@masknet/shared-base'\n\ntype DashboardRoutes_Welcome = DashboardRoutes.Welcome extends `${infer T}` ? T : never\nfunction openWelcome() {\n    const welcome: DashboardRoutes_Welcome = '/setup/welcome'\n    browser.tabs.create({\n        url: browser.runtime.getURL(`dashboard.html#${welcome}`),\n    })\n}\n\nbrowser.runtime.onInstalled.addListener(async (detail) => {\n    if (detail.reason === 'install') {\n        openWelcome()\n    } else if (detail.reason === 'update') {\n        const connect = await import('../../services/site-adaptors/connect.js')\n        const groups = await connect.getOriginsWithoutPermission()\n        if (groups.length) openWelcome()\n        if ((globalThis as any).localStorage) {\n            const localStorage = (globalThis as any).localStorage\n            const backupPassword = localStorage.getItem('backupPassword')\n            if (backupPassword) {\n                const backupMethod = localStorage.getItem('backupMethod')\n                base.PersistentStorages.Settings.storage.backupConfig.setValue({\n                    backupPassword,\n                    email: localStorage.getItem('email'),\n                    phone: localStorage.getItem('phone'),\n                    cloudBackupAt: backupMethod && backupMethod === 'cloud' ? localStorage.getItem('backupAt') : null,\n                    localBackupAt: backupMethod && backupMethod === 'local' ? localStorage.getItem('backupAt') : null,\n                    cloudBackupMethod: null,\n                })\n            }\n            // remove old data after migrate\n            localStorage.removeItem('backupPassword')\n            localStorage.removeItem('backupMethod')\n            localStorage.removeItem('email')\n            localStorage.removeItem('phone')\n            localStorage.removeItem('backupAt')\n        }\n    }\n})\n","import { NetworkPluginID, PersistentStorages } from '@masknet/shared-base'\nimport { MessageStateType, type ReasonableMessage } from '@masknet/web3-shared-base'\n\nfunction checkMessages(messages: Array<ReasonableMessage<Request, Response>>) {\n    const pendingTasks = messages\n        .filter((x) => x.state === MessageStateType.NOT_DEPEND)\n        .sort((a, z) => a.createdAt.getTime() - z.createdAt.getTime())\n    const length = Math.min(pendingTasks.length, 99)\n    const action = browser.action || browser.browserAction\n    action.setBadgeBackgroundColor({\n        color: '#D92F0E',\n    })\n    action.setBadgeText({\n        text: length ? length.toString() : '',\n    })\n}\n\nasync function watchTasks() {\n    const { storage } = PersistentStorages.Web3.createSubScope(`${NetworkPluginID.PLUGIN_EVM}_Message`, {\n        messages: {} as Record<string, ReasonableMessage<Request, Response>>,\n    })\n    await storage.messages.initializedPromise\n    checkMessages(Object.values(storage.messages.value))\n    storage.messages.subscription.subscribe(() => {\n        const messages = Object.values(storage.messages.value)\n        checkMessages(messages)\n    })\n}\n\nwatchTasks()\n","import { env } from '@masknet/flags'\nconsole.log(env)\n","import './Cancellable/InjectContentScripts_imperative.js'\nimport './Cancellable/InjectContentScripts_declarative.js'\nimport './Cancellable/CleanProfileAndAvatar.js'\nimport './Cancellable/SettingsListener.js'\nimport './Cancellable/StartPluginHost.js'\nimport './Cancellable/StartSandboxedPluginHost.js'\nimport './Cancellable/WalletAutoLock.js'\n\nimport.meta.webpackHot?.accept()\n","import './setup.hmr.js'\n\n// NotCancellable tasks here\nimport './NotCancellable/PrintBuildFlags.js'\nimport './NotCancellable/PendingTasks.js'\n","import { timeout } from '@masknet/kit'\nimport { None, type Option, Some } from 'ts-results-es'\n\n/**\n * Make sure that the storage is used serially.\n */\nclass MutexStorage<T> {\n    private tasks: Array<() => void> = []\n    private locked = false\n\n    private lock() {\n        this.locked = true\n    }\n    private unlock() {\n        this.locked = false\n    }\n    private async continue() {\n        if (!this.locked) this.tasks.shift()?.()\n    }\n    public async getStorage(key: string) {\n        return new Promise<T | undefined>(async (resolve, reject) => {\n            const callback = (e: unknown, storage?: T) => {\n                if (e) reject(e)\n                else resolve(storage)\n                this.unlock()\n                this.continue()\n            }\n            const run = async () => {\n                try {\n                    this.lock()\n                    const stored = await timeout(\n                        browser.storage.local.get(key),\n                        5000,\n                        `Get ${key} timeout in mutex storage.`,\n                    )\n                    callback(null, stored?.[key] as T)\n                } catch (error) {\n                    callback(error)\n                }\n            }\n            if (this.locked) this.tasks.push(run)\n            else run()\n        })\n    }\n    public async setStorage(key: string, value: T) {\n        return new Promise<void>(async (resolve, reject) => {\n            const callback = (e: unknown) => {\n                if (e) reject(e)\n                else resolve()\n                this.unlock()\n                this.continue()\n            }\n            const run = async () => {\n                try {\n                    this.lock()\n                    await timeout(\n                        browser.storage.local.set({ [key]: value }),\n                        5000,\n                        `Set ${key} to ${value} timeout in mutex storage.`,\n                    )\n                    callback(null)\n                } catch (error) {\n                    callback(error)\n                }\n            }\n            if (this.locked) this.tasks.push(run)\n            else run()\n        })\n    }\n}\n\nconst storage = new MutexStorage()\n\n/**\n * Avoid using this.\n * @deprecated\n * @internal\n */\nexport async function __deprecated__getStorage<T>(key: string): Promise<Option<T>> {\n    if (typeof browser === 'undefined') return None\n    if (!browser.storage) return None\n    const value = await storage.getStorage(key)\n    if (value === undefined) return None\n    return Some(value as any)\n}\n\n/**\n * Avoid using this.\n * @deprecated\n * @internal\n */\nexport async function __deprecated__setStorage<T>(key: string, value: T): Promise<void> {\n    if (typeof browser === 'undefined') return\n    if (!browser.storage) return\n    return storage.setStorage(key, value)\n}\n","import { memoize } from 'lodash-es'\n\nexport const injectedScriptURL = '/js/injected-script.js'\nexport const maskSDK_URL = '/js/mask-sdk.js'\nconst contentScriptURL = '/generated__content__script.html'\n\nexport async function evaluateContentScript(tabId: number | undefined, frameId?: number) {\n    if (browser.scripting) {\n        if (tabId === undefined) {\n            const activeTab = await browser.tabs.query({ active: true })\n            if (!activeTab.length) return\n            tabId = activeTab[0].id\n        }\n        if (!tabId) return\n        await browser.scripting.executeScript({\n            target: { tabId, frameIds: frameId ? [frameId] : undefined },\n            files: await fetchInjectContentScriptList(),\n            world: 'ISOLATED',\n        })\n    } else {\n        for (const script of await fetchInjectContentScriptList()) {\n            await browser.tabs.executeScript(tabId, {\n                file: script,\n                frameId,\n                runAt: 'document_idle',\n            })\n        }\n    }\n}\nasync function fetchInjectContentScriptList_raw() {\n    const contentScripts: string[] = []\n    const html = await fetch(contentScriptURL).then((x) => x.text())\n    // We're not going to use DOMParser because it is not available in MV3.\n    Array.from(html.matchAll(/<script src=\"([\\w./-]+)\"><\\/script>/g)).forEach((script) =>\n        contentScripts.push(new URL(script[1], browser.runtime.getURL('')).pathname),\n    )\n\n    const body = html.match(/<body>(.+)<\\/body>/)![1]\n    body.replaceAll('<script defer src=\"', '')\n        .replaceAll('></script>', '')\n        .split('\"')\n        .forEach((script) => {\n            if (!script) return\n            contentScripts.push(new URL(script, browser.runtime.getURL('')).pathname)\n        })\n    return contentScripts\n}\nexport const fetchInjectContentScriptList =\n    process.env.NODE_ENV === 'development'\n        ? fetchInjectContentScriptList_raw\n        : memoize(fetchInjectContentScriptList_raw)\n\nasync function injectUserScriptMV2_raw(url: string) {\n    try {\n        const code = await fetch(url).then((x) => x.text())\n        return `{\n            const script = document.createElement(\"script\")\n            script.innerHTML = ${JSON.stringify(code)}\n            document.documentElement.appendChild(script)\n        }`\n    } catch (error) {\n        console.error(error)\n        return `console.log('[Mask] User script ${url} failed to load.')`\n    }\n}\nexport const injectUserScriptMV2 =\n    process.env.NODE_ENV === 'development' ? injectUserScriptMV2_raw : memoize(injectUserScriptMV2_raw)\n\nexport function ignoreInjectError(arg: unknown): (reason: Error) => void {\n    return (error) => {\n        const ignoredErrorMessages = ['non-structured-clonable data', 'No tab with id']\n        if (ignoredErrorMessages.some((x) => error.message.includes(x))) return\n        console.error('[Mask] Inject error', error.message, arg, error)\n    }\n}\n","import type {\n    AESCryptoKey,\n    AESJsonWebKey,\n    EC_CryptoKey,\n    EC_JsonWebKey,\n    EC_Public_CryptoKey,\n    EC_Private_CryptoKey,\n    EC_Private_JsonWebKey,\n    EC_Public_JsonWebKey,\n} from '@masknet/shared-base'\nexport function CryptoKeyToJsonWebKey(key: EC_Public_CryptoKey): Promise<EC_Public_JsonWebKey>\nexport function CryptoKeyToJsonWebKey(key: EC_Private_CryptoKey): Promise<EC_Private_JsonWebKey>\nexport function CryptoKeyToJsonWebKey(key: AESCryptoKey): Promise<AESJsonWebKey>\nexport function CryptoKeyToJsonWebKey(key: EC_CryptoKey): Promise<EC_JsonWebKey>\nexport function CryptoKeyToJsonWebKey(key: CryptoKey): Promise<JsonWebKey> {\n    return crypto.subtle.exportKey('jwk', key)\n}\n","import type { Plugin } from '../types.js'\nimport { startPluginGeneratorRPC, startPluginRPC } from '../utils/rpc.js'\nimport { createManager } from './manage.js'\n\nconst { startDaemon, activated } = createManager<\n    Plugin.Worker.Definition,\n    Plugin.Worker.WorkerContext,\n    'startService' | 'startGeneratorService'\n>(\n    (def) => def.Worker,\n    (id, signal) => ({\n        startGeneratorService(impl) {\n            startPluginGeneratorRPC(id, signal, impl)\n        },\n        startService(impl) {\n            startPluginRPC(id, signal, impl)\n        },\n    }),\n)\n\nexport function startPluginWorker(host: Plugin.__Host.Host<Plugin.Worker.Definition, Plugin.__Host.WorkerContext>) {\n    startDaemon(host)\n}\nexport const activatedPluginsWorker = activated.plugins\n","import { WebExtensionMessage } from '@dimensiondev/holoflows-kit'\nimport type { PluginMessageEmitterItem } from '@masknet/plugin-infra'\nimport { serializer } from '@masknet/shared-base'\n\n/** @internal */\nexport const DOMAIN_RPC = Symbol('create RPC instead of normal message')\n/**\n * Create a plugin message emitter\n * @param pluginID The plugin ID\n *\n * @example\n * export const MyPluginMessage = getPluginMessage(PLUGIN_ID)\n */\nexport let getPluginMessage = <T>(pluginID: string, type?: typeof DOMAIN_RPC): PluginMessageEmitter<T> => {\n    const domain = (type === DOMAIN_RPC ? '@plugin-rpc/' : '@plugin/') + pluginID\n    if (cache.has(domain)) return cache.get(domain) as any\n\n    const messageCenter = new WebExtensionMessage<T>({ domain })\n    const events = messageCenter.events\n    messageCenter.serialization = serializer\n    cache.set(domain, events)\n    return events\n}\n\nexport function __workaround__replaceImplementationOfCreatePluginMessage__(\n    newImpl: (pluginID: string) => PluginMessageEmitter<any>,\n) {\n    getPluginMessage = newImpl\n}\nexport type PluginMessageEmitter<T> = { readonly [key in keyof T]: PluginMessageEmitterItem<T[key]> }\nconst cache = new Map<string, PluginMessageEmitter<unknown>>()\n\n// TODO: this type should be defined here, not shared-base\nexport type { PluginMessageEmitterItem } from '@masknet/shared-base'\n","import { Environment, isEnvironment } from '@dimensiondev/holoflows-kit'\nimport { AsyncCall, type AsyncCallLogLevel, AsyncGeneratorCall } from 'async-call-rpc/full'\nimport { serializer, getOrUpdateLocalImplementationHMR } from '@masknet/shared-base'\nimport { getPluginMessage } from '@masknet/plugin-infra'\nimport { DOMAIN_RPC } from './message.js'\n\nconst log: AsyncCallLogLevel = {\n    type: 'pretty',\n    requestReplay: process.env.NODE_ENV === 'development',\n    sendLocalStack: process.env.NODE_ENV === 'development',\n}\nlet isBackground = () => isEnvironment(Environment.ManifestBackground)\nexport function __workaround__replaceIsBackground__(f: () => boolean) {\n    isBackground = f\n}\n\nfunction getPluginRPCInternal(\n    cache: Map<string, object>,\n    pluginID: string,\n    starter: typeof AsyncCall | typeof AsyncGeneratorCall,\n    entry: keyof RPCMessage,\n) {\n    if (cache.has(pluginID)) return cache.get(pluginID)\n    const message = getPluginMessage<RPCMessage>(pluginID, DOMAIN_RPC)\n    const rpc = starter(Object.create(null), {\n        key: `@plugin/${pluginID}`,\n        channel: {\n            on: message[entry].on,\n            send: message[entry].sendToBackgroundPage,\n        },\n        serializer,\n        log,\n        thenable: false,\n    })\n    cache.set(pluginID, rpc)\n    return rpc\n}\nconst cache = new Map<string, object>()\nconst cacheGenerator = new Map<string, object>()\nexport function getPluginRPC<T>(pluginID: string): T {\n    if (isBackground()) startPluginRPC(pluginID, new AbortController().signal, Object.create(null))\n    return getPluginRPCInternal(cache, pluginID, AsyncCall, '_') as T\n}\nexport function getPluginRPCGenerator<T>(pluginID: string): T {\n    if (isBackground()) startPluginGeneratorRPC(pluginID, new AbortController().signal, Object.create(null))\n    return getPluginRPCInternal(cacheGenerator, pluginID, AsyncGeneratorCall, '$') as T\n}\n\nfunction startPluginRPCInternal(\n    cache: Map<string, object>,\n    pluginID: string,\n    signal: AbortSignal,\n    impl: object,\n    starter: typeof AsyncCall | typeof AsyncGeneratorCall,\n    entry: keyof RPCMessage,\n) {\n    if (!isBackground()) throw new Error('Cannot start RPC in the UI.')\n    const message = getPluginMessage<RPCMessage>(pluginID, DOMAIN_RPC)\n    const delegate = getOrUpdateLocalImplementationHMR(() => impl, message[entry])\n    if (cache.has(pluginID)) return\n    cache.set(pluginID, delegate)\n    starter(delegate, {\n        key: pluginID,\n        channel: {\n            on: message[entry].on,\n            send: message[entry].sendByBroadcast,\n        },\n        serializer,\n        log,\n        thenable: false,\n    })\n}\n/** @internal */\nexport function startPluginRPC(pluginID: string, signal: AbortSignal, impl: object) {\n    startPluginRPCInternal(cache, pluginID, signal, impl, AsyncCall, '_')\n}\n/** @internal */\nexport function startPluginGeneratorRPC(pluginID: string, signal: AbortSignal, impl: object) {\n    startPluginRPCInternal(cacheGenerator, pluginID, signal, impl, AsyncGeneratorCall, '$')\n}\n\ninterface RPCMessage {\n    // RPC\n    _: unknown\n    // Generator\n    $: unknown\n}\n","export interface WalletInfo {\n    address: string\n    name?: string\n    path?: string\n    mnemonic: string[]\n    passphrase: string\n    private_key?: string\n    /** Unix timestamp */\n    createdAt: number\n    /** Unix timestamp */\n    updatedAt: number\n}\n\nexport interface ProfileState {\n    [key: string]: 'pending' | 'confirmed'\n}\n\nexport interface BackupOptions {\n    noPosts: boolean\n    noWallets: boolean\n    noPersonas: boolean\n    noProfiles: boolean\n    hasPrivateKeyOnly: boolean\n}\n\nexport interface BackupPreview {\n    personas: number\n    accounts: number\n    posts: number\n    contacts: number\n    relations: number\n    files: number\n    wallets: number\n    createdAt: number\n}\n\nexport enum Appearance {\n    default = 'default',\n    light = 'light',\n    dark = 'dark',\n}\n\nexport enum TradeProvider {\n    UNISWAP_V2 = 0,\n    ZRX = 1,\n    SUSHISWAP = 2,\n    QUICKSWAP = 5,\n    PANCAKESWAP = 6,\n    DODO = 7,\n    UNISWAP_V3 = 8,\n    BANCOR = 9,\n    OPENOCEAN = 10,\n    WANNASWAP = 11,\n    TRISOLARIS = 12,\n    TRADERJOE = 13,\n    PANGOLIN = 14,\n    MDEX = 15,\n    ARTHSWAP = 19,\n    VERSA = 20,\n    ASTAREXCHANGE = 21,\n    YUMISWAP = 22,\n}\n\n/** Supported language settings */\nexport enum LanguageOptions {\n    __auto__ = 'auto',\n    enUS = 'en-US',\n    zhCN = 'zh-CN',\n    zhTW = 'zh-TW',\n    koKR = 'ko-KR',\n    jaJP = 'ja-JP',\n}\n\n/** Supported display languages */\nexport enum SupportedLanguages {\n    enUS = 'en-US',\n    zhCN = 'zh-CN',\n    zhTW = 'zh-TW',\n    koKR = 'ko-KR',\n    jaJP = 'ja-JP',\n}\n\nexport interface PriceRecord {\n    [currency: string]: number\n}\n\n/** Base on response of coingecko's token price API */\nexport interface CryptoPrice {\n    [token: string]: PriceRecord\n}\n","import { type Option, None } from 'ts-results-es'\nimport { MaskMessages } from '../Messages/index.js'\nimport { type ValueRef, ValueRefJSON, ValueRefWithReady, type ValueComparer } from '../helpers/index.js'\n\nlet getValue: (key: string) => Promise<Option<any>> = async () => {\n    return None\n}\nexport function setupLegacySettingsAtBackground(\n    getStorage: (key: string) => Promise<any>,\n    setStorage: (key: string, val: unknown) => Promise<void>,\n) {\n    getValue = getStorage\n    MaskMessages.events.legacySettings_set.on(async (payload) => {\n        const { key, value } = payload\n        await setStorage(key, value)\n        MaskMessages.events.legacySettings_broadcast.sendToAll({ key, value })\n    })\n}\nexport function setupLegacySettingsAtNonBackground(getStorage: (key: string) => Promise<Option<any>>) {\n    getValue = getStorage\n}\n\nfunction setupValueRef<T>(settings: ValueRef<T>, key: string) {\n    let duringInitialValueSet = false\n    let duringBroadcastSet = false\n    Promise.resolve()\n        .then(() => getValue(key))\n        .then((value) => {\n            duringInitialValueSet = true\n            if (value.isSome()) settings.value = value.value\n            else if (settings instanceof ValueRefWithReady) settings.nowReady?.()\n        })\n        .finally(() => (duringInitialValueSet = false))\n\n    MaskMessages.events.legacySettings_broadcast.on((payload) => {\n        if (key !== payload.key) return\n        duringBroadcastSet = true\n        settings.value = payload.value\n        duringBroadcastSet = false\n    })\n\n    settings.addListener((newVal) => {\n        if (duringInitialValueSet || duringBroadcastSet) return\n        MaskMessages.events.legacySettings_set.sendToAll({\n            key,\n            value: newVal,\n        })\n    })\n    return settings\n}\n\n/** @deprecated */\nexport function createNSSettingsJSON<T extends object>(ns: string, key: string, value: T): ValueRefJSON<T> {\n    const settings = new ValueRefJSON(value)\n    setupValueRef(settings, `${ns}+${key}`)\n    return settings\n}\n\n/** @deprecated */\nexport function createGlobalSettings<T>(key: string, value: T, comparer?: ValueComparer<T>) {\n    const settings = new ValueRefWithReady(value, comparer)\n    setupValueRef(settings, `settings+${key}`)\n    return settings\n}\n\n/** @deprecated */\nexport function createBulkSettings<T>(settingsKey: string, defaultValue: T, comparer?: ValueComparer<T>) {\n    const item: Record<string, ValueRefWithReady<T>> = { __proto__: null! }\n    MaskMessages.events.legacySettings_bulkDiscoverNS.on((ns) => {\n        if (ns.startsWith('plugin:') || settingsKey === 'pluginsEnabled') return\n        setup(ns)\n    })\n    function setup(ns: string) {\n        if (ns in item) return false\n        const settings = new ValueRefWithReady(defaultValue, comparer)\n        setupValueRef(settings, `${ns}+${settingsKey}`)\n        item[ns] = settings\n        return true\n    }\n    return new Proxy(item, {\n        get(target, ns) {\n            if (typeof ns !== 'string') return undefined\n            // if we're the first one to access this property, notify all others to create this property too.\n            if (setup(ns)) {\n                target[ns].readyPromise.then(() => MaskMessages.events.legacySettings_bulkDiscoverNS.sendToAll(ns))\n            }\n            return target[ns]\n        },\n    })\n}\n","import { isEqual } from 'lodash-es'\nimport { Appearance, LanguageOptions } from '@masknet/public-api'\nimport { createGlobalSettings, createBulkSettings } from './createSettings.js'\nimport { updateLanguage } from '../i18n/index.js'\nimport { BooleanPreference } from '../types.js'\nimport { NetworkPluginID, PluginID } from '../types/PluginID.js'\nimport { LockStatus } from '../types/Wallet.js'\nimport { EnhanceableSite, ExtensionSite } from '../Site/types.js'\nimport { SwitchLogoType } from '../types/SwitchLogo.js'\nimport { ValueRefWithReady, type PersonaIdentifier, ECKeyIdentifier } from '../index.js'\n\nexport const languageSettings = createGlobalSettings<LanguageOptions>('language', LanguageOptions.__auto__)\nlanguageSettings.addListener(updateLanguage)\n\nexport const pluginIDsSettings = createGlobalSettings<Record<EnhanceableSite | ExtensionSite, NetworkPluginID>>(\n    'PluginIdBySite',\n    {\n        [EnhanceableSite.Twitter]: NetworkPluginID.PLUGIN_EVM,\n        [EnhanceableSite.Facebook]: NetworkPluginID.PLUGIN_EVM,\n        [EnhanceableSite.Instagram]: NetworkPluginID.PLUGIN_EVM,\n        [EnhanceableSite.OpenSea]: NetworkPluginID.PLUGIN_EVM,\n        [EnhanceableSite.Minds]: NetworkPluginID.PLUGIN_EVM,\n        [EnhanceableSite.Localhost]: NetworkPluginID.PLUGIN_EVM,\n        [EnhanceableSite.Mirror]: NetworkPluginID.PLUGIN_EVM,\n        [EnhanceableSite.App]: NetworkPluginID.PLUGIN_EVM,\n        [ExtensionSite.Popup]: NetworkPluginID.PLUGIN_EVM,\n        [ExtensionSite.Dashboard]: NetworkPluginID.PLUGIN_EVM,\n    },\n    isEqual,\n)\n\nexport const InjectSwitchSettings = createBulkSettings<boolean>('InjectSwitchBySite', true)\n\nexport const currentMaskWalletLockStatusSettings = createGlobalSettings<LockStatus>(\n    `${PluginID.Wallet}+maskWalletLockStatus`,\n    LockStatus.INIT,\n)\n\nexport const currentSetupGuideStatus = createBulkSettings('currentSetupGuideStatus', '')\nexport const userGuideStatus = createBulkSettings('userGuideStatus', '')\nexport const userGuideFinished = createBulkSettings('userGuideFinished', false)\nexport const sayHelloShowed = createBulkSettings('sayHelloShowed', false)\nexport const userPinExtension = createGlobalSettings('userPinExtension', false)\nexport const dismissVerifyNextID = createBulkSettings<Record<string, boolean>>('dismissVerifyNextID', {}, isEqual)\nexport const decentralizedSearchSettings = createGlobalSettings('decentralizedSearchSettings', true)\nexport const appearanceSettings = createGlobalSettings<Appearance>('appearance', Appearance.default)\n\n/**\n * ! DO NOT use this directly to query the plugin status !\n *\n * use `useActivatedPluginsSiteAdaptor().find((x) => x.ID === PLUGIN_ID)` or\n * `useActivatedPluginsExtensionPage().find((x) => x.ID === PLUGIN_ID)` instead\n * @deprecated DO NOT EXPORT THIS\n */\n// This was \"currentPluginEnabled\" before, but we used it to represent minimal mode now to make the settings be able to migrate.\nconst pluginMinimalModeReversed = createBulkSettings<boolean | 'enabled'>('pluginsEnabled', true)\nexport function getCurrentPluginMinimalMode(id: string) {\n    if (pluginMinimalModeReversed['plugin:' + id].value === 'enabled') return BooleanPreference.False\n    if (pluginMinimalModeReversed['plugin:' + id].value === false) return BooleanPreference.True\n    return BooleanPreference.Default\n}\nexport function setCurrentPluginMinimalMode(id: string, value: BooleanPreference) {\n    if (value === BooleanPreference.Default) pluginMinimalModeReversed['plugin:' + id].value = true\n    else if (value === BooleanPreference.True) pluginMinimalModeReversed['plugin:' + id].value = false\n    else if (value === BooleanPreference.False) pluginMinimalModeReversed['plugin:' + id].value = 'enabled'\n}\nexport const currentPersonaIdentifier = new ValueRefWithReady<PersonaIdentifier | undefined>(undefined)\n{\n    const currentPersonaIdentifier_raw = createGlobalSettings('currentPersonaIdentifier', '')\n    currentPersonaIdentifier.addListener((newVal) => {\n        currentPersonaIdentifier_raw.value = newVal?.toText() ?? ''\n    })\n    currentPersonaIdentifier_raw.addListener((newVal) => {\n        currentPersonaIdentifier.value = newVal ? ECKeyIdentifier.from(newVal).unwrap() : undefined\n    })\n    currentPersonaIdentifier_raw.readyPromise.then(() => {\n        const value = currentPersonaIdentifier_raw.value\n        currentPersonaIdentifier.value = value ? ECKeyIdentifier.from(value).unwrap() : undefined\n    })\n}\n\ntry {\n    // Migrate language settings\n    const lng: string = languageSettings.value\n    if (lng === 'en') languageSettings.value = LanguageOptions.enUS\n    else if (lng === 'zh') languageSettings.value = LanguageOptions.zhCN\n    else if (lng === 'ja') languageSettings.value = LanguageOptions.jaJP\n    else if (lng === 'ko') languageSettings.value = LanguageOptions.koKR\n    else languageSettings.value = LanguageOptions.__auto__\n} catch {}\n\nexport const switchLogoSettings = createBulkSettings('SwitchLogo', SwitchLogoType.New)\n","import { NextIDPlatform } from './NextID/types.js'\nimport { EnhanceableSite } from './Site/types.js'\n\nexport const SOCIAL_MEDIA_NAME: Record<EnhanceableSite | string, string> = {\n    [EnhanceableSite.Twitter]: 'X',\n    [EnhanceableSite.Facebook]: 'Facebook',\n    [EnhanceableSite.Minds]: 'Minds',\n    [EnhanceableSite.Instagram]: 'Instagram',\n    [EnhanceableSite.OpenSea]: 'OpenSea',\n    [EnhanceableSite.Localhost]: 'Localhost',\n    [EnhanceableSite.Mirror]: 'Mirror',\n}\n\nexport const NEXT_ID_PLATFORM_SOCIAL_MEDIA_MAP: Record<string, string> = {\n    [NextIDPlatform.Twitter]: EnhanceableSite.Twitter,\n}\n\nexport const SOCIAL_MEDIA_SUPPORTING_NEXT_DOT_ID = [EnhanceableSite.Twitter]\n\nexport const MEDIA_VIEWER_URL = 'https://media-viewer.r2d2.to/index.html'\n\nexport const MAX_WALLET_LIMIT = 100\n\n// Not allow 0000.1, 000100\nexport const NUMERIC_INPUT_REGEXP_PATTERN = '^[1-9]|^0(?![0-9])[.,]?[0-9]*$'\n\nexport const UNIT_TEST_ADDRESS = '0x732b8e42455f79F3072fe18222A7E926588B4747'\nexport const UNIT_TEST_ERC20_ADDRESS = '0xdAC17F958D2ee523a2206206994597C13D831ec7'\n\nexport const EMPTY_LIST = Object.freeze([]) as never[]\nexport const EMPTY_OBJECT = Object.freeze({}) as Record<string, never>\n\nexport const DEFAULT_PLUGIN_PUBLISHER = { name: { fallback: 'Mask Network' }, link: 'https://mask.io/' }\n","const cache = new WeakMap<object, object>()\n/**\n * This function provides a localImplementation that has HMR support.\n * To update, call this function with the SAME key object.\n * @param impl The implementation. Can be an async function.\n * @param key The reference object that must be the same if you're updating.\n */\nexport async function getOrUpdateLocalImplementationHMR<T extends object>(impl: () => T | Promise<T>, key: object) {\n    if (!import.meta.webpackHot) return impl()\n\n    const result: any = await impl()\n    if (!cache.has(key)) cache.set(key, Object.create(null))\n    const localImpl = cache.get(key)\n    Object.setPrototypeOf(localImpl, result)\n    return localImpl\n}\n","import { Convert } from 'pvtsutils'\n\nexport function fromBase64URL(x: string) {\n    return new Uint8Array(Convert.FromBase64Url(x))\n}\n\nexport function toBase64URL(x: BufferSource) {\n    return Convert.ToBase64Url(x)\n}\n\nexport function toBase64(x: BufferSource) {\n    return Convert.ToBase64(x)\n}\n\nexport function toHex(x: BufferSource) {\n    return Convert.ToHex(x)\n}\n\nexport function fromHex(x: string) {\n    if (x.startsWith('0x')) x = x.slice(2)\n    return new Uint8Array(Convert.FromHex(x))\n}\n","import { noop } from 'lodash-es'\nimport type { Subscription } from 'use-subscription'\nimport { None, type Option, Some } from 'ts-results-es'\nimport type { ValueRef } from '@masknet/shared-base'\n\nexport async function getSubscriptionCurrentValue<T>(\n    getSubscription: () => Subscription<T> | undefined,\n    retries = 3,\n): Promise<T | undefined> {\n    const getValue = () => {\n        return getSubscription()?.getCurrentValue()\n    }\n\n    const createReader = async () => {\n        try {\n            return getValue()\n        } catch (error: unknown) {\n            if (!(error instanceof Promise)) return\n            await error\n            return getValue()\n        }\n    }\n\n    const createReaders = Array.from<() => Promise<T | undefined>>({ length: retries }).fill(() => createReader())\n\n    for (const createReader of createReaders) {\n        try {\n            return await createReader()\n        } catch {\n            continue\n        }\n    }\n    return\n}\n\nexport function createConstantSubscription<T>(value: T): Subscription<T> {\n    return {\n        getCurrentValue: () => value,\n        subscribe: () => noop,\n    }\n}\n\nexport function createSubscriptionFromAsync<T>(\n    f: () => Promise<T>,\n    defaultValue: T,\n    onChange: (callback: () => void) => () => void,\n    signal?: AbortSignal,\n): Subscription<T> {\n    const { getCurrentValue, subscribe } = createSubscriptionFromAsyncSuspense(f, onChange, signal)\n    return {\n        subscribe,\n        getCurrentValue: () => {\n            try {\n                return getCurrentValue()\n            } catch {\n                return defaultValue\n            }\n        },\n    }\n}\n\nexport function createSubscriptionFromAsyncSuspense<T>(\n    f: () => Promise<T>,\n    onChange: (callback: () => void) => () => void,\n    signal?: AbortSignal,\n): Subscription<T> {\n    const { subscribe, trigger } = getEventTarget()\n\n    let value: Option<T> = None\n    const setter = (v: T) => {\n        value = Some(v)\n        trigger()\n    }\n    // initial request\n    const promise = f().then(setter)\n\n    // follow-up updating\n    const listen = onChange(() => f().then(setter))\n    signal?.addEventListener('abort', listen, { once: true })\n\n    return {\n        getCurrentValue: () => {\n            // TODO: suspense\n            if (value.isNone()) throw promise\n            return value.value\n        },\n        subscribe: (sub: () => void) => {\n            if (signal?.aborted) return noop\n\n            const undo = subscribe(sub)\n            signal?.addEventListener('abort', undo, { once: true })\n            return () => {\n                undo()\n            }\n        },\n    }\n}\n\nfunction getEventTarget() {\n    const event = new EventTarget()\n    const EVENT = 'event'\n    let timer: ReturnType<typeof setTimeout>\n    function trigger() {\n        clearTimeout(timer)\n        // delay to update state to ensure that all data to be synced globally\n        timer = setTimeout(() => event.dispatchEvent(new Event(EVENT)), 500)\n    }\n    function subscribe(f: () => void) {\n        event.addEventListener(EVENT, f)\n        return () => event.removeEventListener(EVENT, f)\n    }\n    return { trigger, subscribe }\n}\n\nexport function mapSubscription<T, Q>(sub: Subscription<T>, mapper: (val: T) => Q): Subscription<Q> {\n    let value: Option<Q> = None\n    sub.subscribe(() => (value = None))\n    return {\n        getCurrentValue() {\n            if (value.isNone()) value = Some(mapper(sub.getCurrentValue()))\n            return value.value\n        },\n        subscribe: sub.subscribe,\n    }\n}\n\nexport function mergeSubscription<T extends Array<Subscription<unknown>>>(\n    ...subscriptions: T\n): Subscription<{\n    [key in keyof T]: T[key] extends Subscription<infer U> ? U : never\n}> {\n    let values: any[] | undefined\n    const f = () => (values = undefined)\n    subscriptions.forEach((x) => x.subscribe(f))\n    return {\n        getCurrentValue() {\n            return (values ??= subscriptions.map((x) => x.getCurrentValue())) as any\n        },\n        subscribe: (callback: () => void) => {\n            const removeListeners = subscriptions.map((x) => x.subscribe(callback))\n            return () => removeListeners.forEach((x) => x())\n        },\n    }\n}\n\nexport function createSubscriptionFromValueRef<T>(ref: ValueRef<T>, signal?: AbortSignal): Subscription<T> {\n    return SubscriptionDebug({\n        getCurrentValue: () => ref.value,\n        subscribe: (sub) => {\n            if (signal?.aborted) return noop\n            const f = ref.addListener(sub)\n            signal?.addEventListener('abort', f, { once: true })\n            return f\n        },\n    })\n}\nexport function SubscriptionDebug<T>(x: Subscription<T>): Subscription<T> {\n    Object.defineProperty(x, '_value', {\n        configurable: true,\n        get: () => x.getCurrentValue(),\n    })\n    return x\n}\n","import { LanguageOptions } from '@masknet/public-api'\nimport i18n from 'i18next'\nimport Detector from 'i18next-browser-languagedetector'\nimport { debounce, type DebouncedFunc } from 'lodash-es'\n\nexport const i18NextInstance = i18n.default || i18n\nif (process.env.NODE_ENV === 'development') {\n    if (Reflect.get(globalThis, '__mask_shared_base__')) {\n        throw new Error('@masknet/shared-base initialized twice. Please check your code.')\n    }\n\n    Reflect.defineProperty(globalThis, '__mask_shared_base__', { value: true })\n}\n\nif (!i18NextInstance.isInitialized) {\n    i18NextInstance.use(Detector.default || Detector).init({\n        keySeparator: false,\n        interpolation: { escapeValue: true },\n        contextSeparator: '$',\n        fallbackLng: {\n            'zh-CN': ['zh-TW', 'en'],\n            'zh-TW': ['zh-CN', 'en'],\n            default: ['en'],\n        },\n        defaultNS: 'mask',\n        nonExplicitSupportedLngs: true,\n        detection: {\n            order: ['navigator'],\n        },\n        react: {\n            bindI18n: 'languageChanged loaded',\n            // We'll be getting bundles in different languages from the remote, and we'll need to trigger re-rendering.\n            // https://react.i18next.com/latest/i18next-instance\n            bindI18nStore: 'added removed',\n        },\n    })\n}\nexport function updateLanguage(next: LanguageOptions) {\n    if (next === LanguageOptions.__auto__) {\n        const result: string[] = i18NextInstance.services.languageDetector.detect()\n        i18n.changeLanguage(result[0] || LanguageOptions.enUS)\n    } else {\n        i18n.changeLanguage(next)\n    }\n}\n\nconst cache = Symbol('shared-base i18n cache')\nconst interpolationLike = /({{.+?}})/g\nfunction getInterpolations(string: string) {\n    return [...string.matchAll(interpolationLike)]\n        .map((arr) => arr[0])\n        .sort(undefined)\n        .join('')\n}\nexport function queryRemoteI18NBundle(\n    _updater: (lang: string) => Promise<Array<[namespace: string, lang: string, json: Record<string, string>]>>,\n) {\n    const updater: typeof _updater & { [cache]?: DebouncedFunc<() => Promise<void>> } = _updater as any\n    const update = (updater[cache] ??= debounce(async () => {\n        const result = await updater(i18NextInstance.language)\n        for (const [ns, lang, json] of result) {\n            const next = { ...i18NextInstance.getResourceBundle(lang, ns) }\n            for (const key in json) {\n                const value = json[key]\n                if (typeof value !== 'string') continue\n                if (!next[key]) next[key] = value\n                // we only accept i18n hot update if and only if the interpolations are the same, otherwise the translation will be broken.\n                else if (getInterpolations(value) === next[key]) {\n                    next[key] = value\n                }\n            }\n            i18NextInstance.addResourceBundle(lang, ns, next, true, true)\n        }\n    }, 1500))\n    update()\n    i18NextInstance.on('languageChanged', update)\n    return () => i18NextInstance.off('languageChanged', update)\n}\n\nexport type { TOptions as TranslateOptions } from 'i18next'\n","import { Emitter, ALL_EVENTS } from '@servie/events'\nimport { EMPTY_LIST } from '../constants.js'\n\nfunction tick(callback: () => void) {\n    Promise.resolve().then(callback)\n}\n\nexport class ObservableWeakMap<K extends object, V> extends WeakMap<K, V> {\n    readonly ALL_EVENTS: typeof ALL_EVENTS = ALL_EVENTS\n\n    declare __brand: 'Map'\n\n    event = new Emitter<{ delete: [K]; set: [K, V]; [ALL_EVENTS]: [] }>()\n    override delete(key: K) {\n        const _ = super.delete(key)\n        tick(() => this.event.emit('delete', key))\n        return _\n    }\n    override set(key: K, value: V) {\n        const _ = super.set(key, value)\n        tick(() => this.event.emit('set', key, value))\n        return _\n    }\n}\nexport class ObservableMap<K, V> extends Map<K, V> {\n    readonly ALL_EVENTS: typeof ALL_EVENTS = ALL_EVENTS\n\n    declare __brand: 'Map'\n\n    event = new Emitter<{ delete: [K]; set: [K, V]; clear: []; [ALL_EVENTS]: [] }>()\n    private _asValues: V[] | undefined\n    get asValues() {\n        return (this._asValues ??= this.size ? [...this.values()] : EMPTY_LIST)\n    }\n    override clear() {\n        super.clear()\n        this._asValues = undefined\n        tick(() => this.event.emit('clear'))\n    }\n    override delete(key: K) {\n        const _ = super.delete(key)\n        this._asValues = undefined\n        tick(() => this.event.emit('delete', key))\n        return _\n    }\n    override set(key: K, value: V) {\n        const _ = super.set(key, value)\n        this._asValues = undefined\n        tick(() => this.event.emit('set', key, value))\n        this.event.emit('set', key, value)\n        return _\n    }\n}\nexport class ObservableSet<T> extends Set<T> {\n    readonly ALL_EVENTS: typeof ALL_EVENTS = ALL_EVENTS\n    declare __brand: 'ObservableSet'\n\n    event = new Emitter<{ delete: [T]; add: [T[]]; clear: []; [ALL_EVENTS]: [] }>()\n    private _asValues: T[] | undefined\n    get asValues() {\n        return (this._asValues ??= this.size ? [...this.values()] : EMPTY_LIST)\n    }\n    override clear() {\n        super.clear()\n        this._asValues = undefined\n        tick(() => this.event.emit('clear'))\n    }\n    override delete(key: T) {\n        const _ = super.delete(key)\n        this._asValues = undefined\n        tick(() => this.event.emit('delete', key))\n        return _\n    }\n    override add(...value: T[]) {\n        value.forEach((x) => super.add(x))\n        this._asValues = undefined\n        this.event.emit('add', value)\n        tick(() => this.event.emit('add', value))\n        return this\n    }\n}\n","import type { PersonaIdentifier, ProfileIdentifier } from '@masknet/base'\nimport type { NextIDPersonaBindings, NextIDPlatform } from '../NextID/types.js'\n/**\n * This interface contains the minimal information for UI display\n */\nexport interface PersonaInformation {\n    avatar?: string\n    proof?: NextIDPersonaBindings\n    /** The nickname of the persona. Should use profile.nickname if it presents. */\n    nickname?: string\n    /** The evm address of persona */\n    address?: string\n    identifier: PersonaIdentifier\n    linkedProfiles: ProfileInformation[]\n}\n\nexport interface ProfileInformation {\n    /** The nickname of the profile. Should be used in prior. */\n    nickname?: string\n    avatar?: string\n    identifier: ProfileIdentifier\n    linkedPersona?: PersonaIdentifier\n    createAt?: Date\n}\n\nexport interface ProfileAccount extends ProfileInformation {\n    is_valid?: boolean\n    identity?: string\n    platform?: NextIDPlatform\n    last_checked_at?: string\n}\n\nexport interface ProfileInformationFromNextID extends ProfileInformation {\n    fromNextID: boolean\n    linkedTwitterNames?: string[]\n    walletAddress?: string\n    createdAt?: Date\n    updatedAt?: Date\n}\n\nexport enum RelationFavor {\n    COLLECTED = -1,\n    UNCOLLECTED = 1,\n    DEPRECATED = 0,\n}\nexport interface RelationProfile {\n    favorite?: boolean\n    avatar?: string\n    name: string\n    fingerprint?: string\n    identifier: ProfileIdentifier\n}\n\nexport interface Relation {\n    profile: ProfileIdentifier | PersonaIdentifier\n    linked: PersonaIdentifier\n    favor: RelationFavor\n    network?: string\n}\n\nexport enum ProofType {\n    Persona = 'persona',\n    EOA = 'eoa',\n}\n\nexport interface ProofPayload {\n    ownerAddress: string\n    nonce?: number\n}\n\nexport interface Proof {\n    publicKey: string\n    type: ProofType\n    payload: string // JSON.stringify(payload)\n    signature: string\n}\n","export enum DashboardRoutes {\n    Setup = '/setup',\n    Welcome = '/setup/welcome',\n    SignUpPersona = '/setup/sign-up',\n    RecoveryPersona = '/setup/recovery',\n    SignUpPersonaMnemonic = '/setup/sign-up/mnemonic',\n    SignUpPersonaOnboarding = '/setup/sign-up/onboarding',\n    LocalBackup = '/setup/local-backup',\n    CloudBackup = '/setup/cloud-backup',\n    CloudBackupPreview = '/setup/cloud-backup-preview',\n    SignUp = '/sign-up',\n    SignIn = '/sign-in',\n    PrivacyPolicy = '/privacy-policy',\n    Personas = '/personas',\n    CreateMaskWallet = '/create-mask-wallet',\n    CreateMaskWalletForm = '/create-mask-wallet/form',\n    RecoveryMaskWallet = '/create-mask-wallet/recovery',\n    CreateMaskWalletMnemonic = '/create-mask-wallet/mnemonic',\n    AddDeriveWallet = '/create-mask-wallet/add-derive-wallet',\n    SignUpMaskWalletOnboarding = '/create-mask-wallet/onboarding',\n}\n\nexport enum PopupModalRoutes {\n    ChooseCurrency = '/modal/choose-currency',\n    ChooseNetwork = '/modal/choose-network',\n    SwitchWallet = '/modal/switch-wallet',\n    ConnectSocialAccount = '/modal/connect-social-account',\n    SelectProvider = '/modal/select-provider',\n    ConnectProvider = '/modal/connect-provider',\n    SwitchPersona = '/modal/switch-persona',\n    PersonaSettings = '/modal/persona-setting',\n    PersonaRename = '/modal/persona-rename',\n    SetBackupPassword = '/modal/set-backup-password',\n    verifyBackupPassword = '/modal/verify-backup-password',\n    WalletAccount = '/modal/wallet-accounts',\n    SelectLanguage = '/modal/select-language',\n    SelectAppearance = '/modal/select-appearance',\n    SupportedSitesModal = '/modal/supported-sites',\n    ChangeBackupPassword = '/modal/change-backup-password',\n}\n\nexport enum PopupRoutes {\n    Root = '/',\n    Wallet = '/wallet',\n    WalletStartUp = '/wallet/startup',\n    AddDeriveWallet = '/wallet/addDerive',\n    WalletSettings = '/wallet/settings',\n    WalletRename = '/wallet/rename',\n    DeleteWallet = '/wallet/delete',\n    CreateWallet = '/wallet/create',\n    DeriveWallet = '/wallet/derive',\n    SelectWallet = '/wallet/select',\n    BackupWallet = '/wallet/backup',\n    AddToken = '/wallet/addToken',\n    GasSetting = '/wallet/gas',\n    TokenDetail = '/wallet/token-detail',\n    TransactionDetail = '/wallet/transaction-detail',\n    CollectibleDetail = '/wallet/collectible-detail',\n    ContractInteraction = '/wallet/contract-interaction',\n    ConfirmTransaction = '/wallet/confirm-transaction',\n    ResetWallet = '/wallet/reset-wallet',\n    Transfer = '/wallet/transfer',\n    Contacts = '/wallet/contacts',\n    SetPaymentPassword = '/wallet/password',\n    ReplaceTransaction = '/wallet/replace',\n    NetworkManagement = '/wallet/network-management',\n    EditNetwork = '/wallet/edit-network',\n    AddNetwork = '/wallet/add-network',\n    Receive = '/wallet/receive',\n    ExportWalletPrivateKey = '/wallet/export-private-key',\n    ConnectedSites = '/wallet/connected-sites',\n    Personas = '/personas',\n    Logout = '/personas/logout',\n    SocialAccounts = '/personas/accounts',\n    AccountDetail = '/personas/accounts/detail',\n    ConnectedWallets = '/personas/connected-wallets',\n    ConnectWallet = '/personas/connect-wallet',\n    PersonaSignRequest = '/personas/sign-request',\n    PermissionAwareRedirect = '/redirect',\n    RequestPermission = '/request-permission',\n    SignRequest = '/sign-request',\n    Swap = '/swap',\n    VerifyWallet = '/personas/verify',\n    ChangeOwner = '/wallet/change-owner',\n    Friends = '/friends',\n    FriendsDetail = '/friends/detail',\n    Settings = '/settings',\n    WalletConnect = '/personas/wallet-connect',\n    ExportPrivateKey = '/personas/export-private-key',\n    PersonaAvatarSetting = '/personas/avatar-setting',\n}\nexport interface PopupRoutesParamsMap {\n    [PopupRoutes.PersonaSignRequest]: {\n        message: string\n        requestID: string\n        identifier: string | undefined\n        source: string | undefined\n    }\n    [PopupRoutes.SelectWallet]: {\n        chainId?: number\n        address?: string\n        external_request?: string\n        source?: string\n    }\n    [PopupRoutes.Personas]: {\n        providerType?: string\n        tab: string\n        from?: PopupModalRoutes\n    }\n    [PopupRoutes.SetPaymentPassword]: {\n        isCreating?: boolean\n        source?: string\n    }\n    [PopupRoutes.ContractInteraction]: {\n        source?: string\n    }\n    [PopupRoutes.Wallet]: {\n        isCreating?: boolean\n        external_request?: string\n        // Unlock\n        close_after_unlock?: boolean\n        from?: string | null\n    }\n    [PopupRoutes.ChangeOwner]: { contractAccount: string | undefined }\n    [PopupRoutes.Contacts]: { selectedToken: string | undefined }\n}\n","import urlcat from 'urlcat'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport { TransactionStatusType, type Transaction } from '@masknet/web3-shared-base'\nimport type { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { CHAINBASE_API_URL } from './constants.js'\nimport type { Tx, TxStatus } from './types.js'\nimport { fetchCachedJSON } from '../helpers/fetchJSON.js'\n\nexport async function fetchFromChainbase<T>(pathname: string) {\n    const data = await fetchCachedJSON<\n        | {\n              code: 0 | Omit<number, 0>\n              message: 'ok' | Omit<string, 'ok'>\n              data: T\n          }\n        | undefined\n    >(urlcat(CHAINBASE_API_URL, pathname))\n    return data?.code === 0 ? data.data : undefined\n}\n\nexport function toTransaction(chainId: ChainId, tx: Tx): Transaction<ChainId, SchemaType> {\n    return {\n        id: tx.transaction_hash,\n        hash: tx.transaction_hash,\n        chainId,\n        status: normalizeTxStatus(tx.status),\n        timestamp: new Date(tx.block_timestamp).getTime(),\n        from: tx.from_address,\n        to: tx.to_address,\n        assets: EMPTY_LIST,\n        blockNumber: Number.parseInt(tx.block_number, 10),\n        nonce: tx.nonce,\n    }\n}\n\n/** 0 is fail, 1 is succeed */\nexport function normalizeTxStatus(status: TxStatus) {\n    const map = {\n        0: TransactionStatusType.FAILED,\n        1: TransactionStatusType.SUCCEED,\n    }\n    return map[status]\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { evm, flow, solana } from './registry.js'\n\nexport { initWallet } from './io.js'\nconst all = {\n    [NetworkPluginID.PLUGIN_EVM]: evm,\n    [NetworkPluginID.PLUGIN_FLOW]: flow,\n    [NetworkPluginID.PLUGIN_SOLANA]: solana,\n} as const\n/**\n * Get Web3 providers, for example, WalletConnect, MetaMask, etc.\n * @param ID Network name\n */\nexport function getRegisteredWeb3Providers<T extends NetworkPluginID>(\n    ID: T,\n): ReadonlyArray<Web3Helper.Web3ProviderDescriptor<T>>\nexport function getRegisteredWeb3Providers(\n    ID: NetworkPluginID,\n): ReadonlyArray<Web3Helper.Web3ProviderDescriptor<NetworkPluginID>> {\n    return all[ID].provider\n}\n\n/**\n * Get Web3 Networks, for example, mainnet, testnet, Optimism, etc.\n * @param ID Network name\n */\nexport function getRegisteredWeb3Networks<T extends NetworkPluginID>(\n    ID: T,\n): ReadonlyArray<Web3Helper.Web3NetworkDescriptor<T>>\nexport function getRegisteredWeb3Networks(\n    ID: NetworkPluginID,\n): ReadonlyArray<Web3Helper.Web3NetworkDescriptor<NetworkPluginID>> {\n    return all[ID].network\n}\n\nexport function getRegisteredWeb3Chains<T extends NetworkPluginID>(\n    ID: T,\n): ReadonlyArray<Web3Helper.ChainDescriptorScope<void, T>> {\n    return all[ID].chain\n}\nexport function getAllPluginsWeb3State(): {\n    [key in NetworkPluginID]: Web3Helper.Web3State<key>\n} {\n    return {\n        [NetworkPluginID.PLUGIN_EVM]: evm.state,\n        [NetworkPluginID.PLUGIN_FLOW]: flow.state,\n        [NetworkPluginID.PLUGIN_SOLANA]: solana.state,\n    }\n}\n\nexport function getActivatedPluginWeb3State<T extends NetworkPluginID>(pluginID: T): Web3Helper.Web3State<T>\nexport function getActivatedPluginWeb3State(pluginID: NetworkPluginID): Web3Helper.Web3State<NetworkPluginID> {\n    return all[pluginID].state\n}\n","import Web3Accounts, { type Accounts } from 'web3-eth-accounts'\nimport type { Transaction } from '../types/index.js'\n\nexport function signTransaction(transaction: Transaction, privateKey: string) {\n    if (typeof transaction.nonce === 'undefined') throw new Error('Nonce is required.')\n    const Accounts_ = Web3Accounts as unknown as typeof Accounts\n    const accounts = new Accounts_()\n    return accounts.signTransaction(transaction, privateKey)\n}\n","import * as _metamask_eth_sig_util from /* webpackDefer: true */ '@metamask/eth-sig-util'\nimport { signTransaction, type Transaction } from '@masknet/web3-shared-evm'\nimport { SignType, toHex } from '@masknet/shared-base'\nimport { unreachable } from '@masknet/kit'\n\nexport class Signer {\n    static async sign(type: SignType, key: Buffer, message: unknown): Promise<string> {\n        switch (type) {\n            case SignType.Message:\n                return _metamask_eth_sig_util.personalSign({\n                    privateKey: key,\n                    data: message as string,\n                })\n            case SignType.TypedData:\n                return _metamask_eth_sig_util.signTypedData({\n                    privateKey: key,\n                    data: JSON.parse(message as string),\n                    version: _metamask_eth_sig_util.SignTypedDataVersion.V4,\n                })\n            case SignType.Transaction:\n                const transaction = message as Transaction\n\n                const chainId = transaction.chainId\n                if (!chainId) throw new Error('Invalid chain id.')\n\n                const { rawTransaction } = await signTransaction(transaction, toHex(key))\n                if (!rawTransaction) throw new Error('Failed to sign transaction.')\n                return rawTransaction\n\n            default:\n                unreachable(type)\n        }\n    }\n}\n","import type { Web3State } from '@masknet/web3-shared-evm'\nimport { AddressBook } from '../state/AddressBook.js'\nimport { RiskWarning } from '../state/RiskWarning.js'\nimport { Token } from '../state/Token.js'\nimport { Transaction } from '../state/Transaction.js'\nimport { NameService } from '../state/NameService.js'\nimport { Provider } from '../state/Provider.js'\nimport { Settings } from '../state/Settings.js'\nimport { TransactionFormatter } from '../state/TransactionFormatter.js'\nimport { TransactionWatcher } from '../state/TransactionWatcher.js'\nimport { IdentityService } from '../state/IdentityService.js'\nimport { BalanceNotifier } from '../state/BalanceNotifier.js'\nimport { BlockNumberNotifier } from '../state/BlockNumberNotifier.js'\nimport { Message } from '../state/Message.js'\nimport { Network } from '../state/Network.js'\nimport type { WalletAPI } from '../../../entry-types.js'\nimport { evm } from '../../../Manager/registry.js'\n\nexport const Web3StateRef = {\n    get value() {\n        return evm.state\n    },\n}\nexport async function createEVMState(context: WalletAPI.IOContext): Promise<Web3State> {\n    const Provider_ = await Provider.new(context)\n\n    const Transaction_ = new Transaction(context, {\n        chainId: Provider_.chainId,\n        account: Provider_.account,\n    })\n\n    return {\n        Settings: new Settings(context),\n        Provider: Provider_,\n        BalanceNotifier: new BalanceNotifier(),\n        BlockNumberNotifier: new BlockNumberNotifier(),\n        Network: new Network(context),\n        AddressBook: new AddressBook(context),\n        IdentityService: new IdentityService(context),\n        NameService: new NameService(context),\n        RiskWarning: new RiskWarning(context, {\n            account: Provider_.account,\n        }),\n        Message: new Message(context),\n        Token: new Token(context, {\n            account: Provider_.account,\n            chainId: Provider_.chainId,\n        }),\n        Transaction: Transaction_,\n        TransactionFormatter: new TransactionFormatter(context),\n        TransactionWatcher: new TransactionWatcher(context, {\n            chainId: Provider_.chainId!,\n            transactions: Transaction_.transactions!,\n        }),\n    }\n}\n","import type { Web3State } from '@masknet/web3-shared-flow'\nimport { AddressBook } from '../state/AddressBook.js'\nimport { Provider } from '../state/Provider.js'\nimport { Settings } from '../state/Settings.js'\nimport { Transaction } from '../state/Transaction.js'\nimport { IdentityService } from '../state/IdentityService.js'\nimport { Network } from '../state/Network.js'\nimport type { WalletAPI } from '../../../entry-types.js'\nimport { flow } from '../../../Manager/registry.js'\n\nexport const FlowWeb3StateRef = {\n    get value() {\n        return flow.state\n    },\n}\nexport async function createFlowState(context: WalletAPI.IOContext): Promise<Web3State> {\n    const Provider_ = await Provider.new(context)\n\n    return {\n        AddressBook: new AddressBook(context),\n        IdentityService: new IdentityService(context),\n        Settings: new Settings(context),\n        Network: new Network(context),\n        Transaction: new Transaction(context, {\n            chainId: Provider_.chainId,\n            account: Provider_.account,\n        }),\n        Provider: Provider_,\n    }\n}\n","import type { Web3State } from '@masknet/web3-shared-solana'\nimport { AddressBook } from '../state/AddressBook.js'\nimport { Provider } from '../state/Provider.js'\nimport { Settings } from '../state/Settings.js'\nimport { Transaction } from '../state/Transaction.js'\nimport { IdentityService } from '../state/IdentityService.js'\nimport { Network } from '../state/Network.js'\nimport type { WalletAPI } from '../../../entry-types.js'\nimport { solana } from '../../../Manager/registry.js'\n\nexport const SolanaWeb3StateRef = {\n    get value() {\n        return solana.state\n    },\n}\nexport async function createSolanaState(context: WalletAPI.IOContext): Promise<Web3State> {\n    const Provider_ = await Provider.new(context)\n\n    return {\n        AddressBook: new AddressBook(context),\n        IdentityService: new IdentityService(context),\n        Settings: new Settings(context),\n        Network: new Network(context),\n        Transaction: new Transaction(context, {\n            chainId: Provider_.chainId,\n            account: Provider_.account,\n        }),\n        Provider: Provider_,\n    }\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport { SmartPayAccountAPI, SmartPayFunderAPI } from './SmartPay/index.js'\nimport { DSearchAPI } from './DSearch/index.js'\nimport { MulticallAPI } from './Multicall/index.js'\nimport { RedPacketAPI } from './RedPacket/index.js'\nimport { SmartPayOwnerAPI } from './SmartPay/apis/OwnerAPI.js'\nimport { AirdropAPI } from './Airdrop/index.js'\nimport { ContractAPI } from './Web3/EVM/apis/ContractAPI.js'\nimport { ContractReadonlyAPI } from './Web3/EVM/apis/ContractReadonlyAPI.js'\nimport { ConnectionReadonlyAPI } from './Web3/EVM/apis/ConnectionReadonlyAPI.js'\nimport { RequestAPI } from './Web3/EVM/apis/RequestAPI.js'\nimport { RequestReadonlyAPI } from './Web3/EVM/apis/RequestReadonlyAPI.js'\nimport { AllHubAPI } from './Web3/Router/apis/AllHubAPI.js'\nimport { AllConnectionAPI } from './Web3/Router/apis/AllConnectionAPI.js'\nimport { AllOthersAPI } from './Web3/Router/apis/AllOthersAPI.js'\n\nexport {\n    getRegisteredWeb3Chains,\n    getRegisteredWeb3Networks,\n    getRegisteredWeb3Providers,\n    initWallet,\n    getActivatedPluginWeb3State,\n    getAllPluginsWeb3State,\n} from './Manager/index.js'\nexport { evm as Web3State } from './Manager/registry.js'\n\nexport { Lido } from './Lido/index.js'\nexport { Twitter } from './Twitter/index.js'\nexport { Minds } from './Minds/index.js'\nexport { Instagram } from './Instagram/index.js'\nexport const DSearch = new DSearchAPI()\nexport { CoinMarketCap } from './CoinMarketCap/index.js'\nexport { Mirror } from './Mirror/index.js'\nexport { CryptoScamDB } from './CryptoScamDB/index.js'\nexport const Multicall = new MulticallAPI()\nexport { Lens } from './Lens/index.js'\nexport const RedPacket = new RedPacketAPI()\nexport { TheGraphRedPacket } from './TheGraph/index.js'\nexport { SimpleHashEVM, SPAM_SCORE } from './SimpleHash/index.js'\nexport { SnapshotSearch } from './Snapshot/index.js'\nexport { Snapshot } from './Snapshot/index.js'\n\nexport { Providers } from './Web3/EVM/providers/index.js'\nexport { FlowProviders } from './Web3/Flow/providers/index.js'\nexport { SolanaProviders } from './Web3/Solana/providers/index.js'\nexport { BaseContractWalletProvider } from './Web3/EVM/providers/BaseContractWallet.js'\n\n// Web3\nexport const HubAll = new AllHubAPI()\nexport const Web3All = new AllConnectionAPI()\nexport const OthersAll = new AllOthersAPI()\n\nexport { ChainResolver, ExplorerResolver, ProviderResolver, NetworkResolver } from './Web3/EVM/apis/ResolverAPI.js'\nexport const Contract = new ContractAPI()\nexport const ContractReadonly = new ContractReadonlyAPI()\nexport { Signer } from './Web3/EVM/apis/SignerAPI.js'\nexport { Web3Storage } from './Storage/apis/Storage.js'\nexport const Web3 = Web3All.use(NetworkPluginID.PLUGIN_EVM)!\nexport const Web3Readonly = new ConnectionReadonlyAPI()\nexport const Request = new RequestAPI()\nexport const RequestReadonly = new RequestReadonlyAPI()\nexport const Hub = HubAll.use(NetworkPluginID.PLUGIN_EVM)!\nexport const Others = OthersAll.use(NetworkPluginID.PLUGIN_EVM)!\n\nexport const FlowWeb3 = Web3All.use(NetworkPluginID.PLUGIN_FLOW)!\nexport const FlowHub = HubAll.use(NetworkPluginID.PLUGIN_FLOW)!\nexport const FlowOthers = OthersAll.use(NetworkPluginID.PLUGIN_FLOW)!\n\nexport const SolanaWeb3 = Web3All.use(NetworkPluginID.PLUGIN_SOLANA)!\nexport const SolanaHub = HubAll.use(NetworkPluginID.PLUGIN_SOLANA)!\nexport const SolanaOthers = OthersAll.use(NetworkPluginID.PLUGIN_SOLANA)!\n\n// Smart Pay\nexport { DepositPaymaster } from './SmartPay/libs/DepositPaymaster.js'\nexport { ContractWallet } from './SmartPay/libs/ContractWallet.js'\nexport { Create2Factory } from './SmartPay/libs/Create2Factory.js'\nexport { UserTransaction } from './SmartPay/libs/UserTransaction.js'\n\n// NextID\nexport { NextIDProof, NextIDStorageProvider } from './NextID/index.js'\n\n// Web3Bio\nexport { Web3Bio } from './Web3Bio/index.js'\n\n// GoPlusLabs\nexport { GoPlusLabs } from './GoPlusLabs/index.js'\n\n// CoinGecko\nexport { CoinGeckoTrending } from './CoinGecko/index.js'\n\n// R2D2\nexport { R2D2TokenList } from './R2D2/index.js'\n\n// Name Service\nexport { ENS } from './ENS/index.js'\n\n// Debank\nexport { DeBankHistory } from './DeBank/index.js'\n\n// NFTScan\nexport {\n    NFTScanTrending_EVM,\n    NFTScanTrending_Solana,\n    NFTScanNonFungibleTokenEVM,\n    NFTScanNonFungibleTokenSolana,\n} from './NFTScan/index.js'\n\n// Chainbase\nexport { ChainbaseHistory, ChainbaseDomain } from './Chainbase/index.js'\n\n// Zerion\nexport { Zerion, ZerionGas, ZerionNonFungibleToken, ZerionTrending } from './Zerion/index.js'\n\n// Fuse\nexport { Fuse, FuseCoin } from './Fuse/index.js'\nexport { FuseNonFungibleCollection } from './Fuse/apis/NonFungibleCollection.js'\n\n// Smart Pay\nexport { SmartPayBundler } from './SmartPay/index.js'\nexport const SmartPayFunder = new SmartPayFunderAPI()\nexport const SmartPayOwner = new SmartPayOwnerAPI()\nexport const SmartPayAccount = new SmartPayAccountAPI()\n\n// RSS3\nexport { RSS3 } from './RSS3/index.js'\n\n// Airdrop\nexport const Airdrop = new AirdropAPI()\n\n// Firefly\n\nexport { Firefly } from './Firefly/index.js'\n\n// FiatCurrencyRate\nexport { FiatCurrencyRate } from './FiatCurrencyRate/index.js'\n\n// Calendar\nexport { Calendar } from './Calendar/index.js'\n\n// NFT Spam\nexport { NFTSpam } from './NFTSpam/index.js'\n","import { fetch } from './fetch.js'\nimport { getNextFetchers, type NextFetchersOptions } from './getNextFetchers.js'\n\nexport async function fetchBlob(\n    input: RequestInfo | URL,\n    init?: RequestInit,\n    options?: NextFetchersOptions,\n): Promise<Blob> {\n    const response = await fetch(input, init, getNextFetchers(options))\n    if (!response.ok) throw new Error('Failed to fetch as Blob.')\n    return response.blob()\n}\n","import { fetch } from './fetch.js'\nimport { getNextFetchers, type NextFetchersOptions } from './getNextFetchers.js'\n\nexport async function fetchText(\n    input: RequestInfo | URL,\n    init?: RequestInit,\n    options?: NextFetchersOptions,\n): Promise<string> {\n    const response = await fetch(input, init, getNextFetchers(options))\n    if (!response.ok) throw new Error('Failed to fetch as Text.')\n    return response.text()\n}\n","export const HD_PATH_WITHOUT_INDEX_ETHEREUM = \"m/44'/60'/0'/0\"\n","import { BigNumber } from 'bignumber.js'\nimport { isUndefined, trimEnd } from 'lodash-es'\n\nexport const ZERO = new BigNumber('0')\nexport const ONE = new BigNumber('1')\n\n/** if abs(n) < m then return 0 */\nexport function toZero(n?: BigNumber.Value, m = 1e-6) {\n    if (!n) return ZERO\n    const n_ = new BigNumber(n)\n    return n_.abs().isLessThanOrEqualTo(m) ? ZERO : n_\n}\n\n/** n === 0 */\nexport function isZero(n: BigNumber.Value) {\n    return n === 0 || n === '0' || n === '0x0' || new BigNumber(n).isZero()\n}\n\n/** n === 1 */\nexport function isOne(n: BigNumber.Value) {\n    return n === 1 || n === '1' || new BigNumber(n).isEqualTo(ONE)\n}\n\n/** n === m */\nexport function isEqual(n: BigNumber.Value, m: BigNumber.Value) {\n    return new BigNumber(n).isEqualTo(m)\n}\n\n/** a > b */\nexport function isGreaterThan(a: BigNumber.Value, b: BigNumber.Value) {\n    return new BigNumber(a).isGreaterThan(b)\n}\n\n/** a >= b */\nfunction isGreaterThanOrEqualTo(a: BigNumber.Value, b: BigNumber.Value) {\n    return new BigNumber(a).isGreaterThanOrEqualTo(b)\n}\nexport { isGreaterThanOrEqualTo, isGreaterThanOrEqualTo as isGte }\n\n/** a < b */\nexport function isLessThan(a: BigNumber.Value, b: BigNumber.Value) {\n    return new BigNumber(a).isLessThan(b)\n}\n\n/** a <= b */\nexport function isLessThanOrEqualTo(a: BigNumber.Value, b: BigNumber.Value) {\n    return new BigNumber(a).isLessThanOrEqualTo(b)\n}\nexport { isLessThanOrEqualTo as isLte }\n\n/** a > 0 */\nexport function isPositive(n: BigNumber.Value) {\n    return new BigNumber(n).isPositive()\n}\n\n/** a * b */\nexport function multipliedBy(a: BigNumber.Value, b: BigNumber.Value) {\n    return new BigNumber(a).multipliedBy(b)\n}\n\n/** a + b */\nexport function plus(a: BigNumber.Value, b: BigNumber.Value) {\n    return new BigNumber(a).plus(b)\n}\n\n/** a - b */\nexport function minus(a: BigNumber.Value, b: BigNumber.Value) {\n    return new BigNumber(a).minus(b)\n}\n\n/** 10 ** n */\n/** @deprecated use scale10 */\nexport function pow10(n: BigNumber.Value) {\n    return new BigNumber(10).pow(n)\n}\n\n/** scale 10 ** n * m */\nexport function scale10(m: BigNumber.Value, n = 1) {\n    const x = new BigNumber(1).shiftedBy(n)\n    return n === 1 ? x : x.multipliedBy(m)\n}\n\n/** n * (10 ** m) */\nexport function rightShift(n: BigNumber.Value, m: number | undefined | null) {\n    return new BigNumber(n).shiftedBy(+(m ?? 0))\n}\n\n/** n / (10 ** m) */\nexport function leftShift(n: BigNumber.Value, m: number | undefined | null) {\n    return new BigNumber(n).shiftedBy(-(m ?? 0))\n}\n\n/** a / b */\nexport function dividedBy(a: BigNumber.Value, b: BigNumber.Value) {\n    return new BigNumber(a).dividedBy(b)\n}\n\n/** new BigNumber(n).toNumber() */\nexport function toNumber(value?: BigNumber.Value, fallback = 0) {\n    return new BigNumber(value ?? fallback).toNumber()\n}\n\nexport function toFixed(value: BigNumber.Value | undefined): string\nexport function toFixed(value: BigNumber.Value | undefined, decimalPlaces: number): string\nexport function toFixed(value: BigNumber.Value = 0, decimalPlaces?: number) {\n    const n = new BigNumber(value)\n    return !isUndefined(decimalPlaces) ? n.toFixed(decimalPlaces) : n.toFixed()\n}\n\n/** Trim ending zeros of decimals */\nexport function trimZero(digit: string) {\n    const result = digit.replaceAll(/\\.([1-9]*)?0+$/g, (_, p1) => {\n        return p1 ? `.${p1}` : ''\n    })\n\n    if (isLessThan(result, 1)) {\n        return trimEnd(result, '0')\n    }\n\n    return result\n}\n\nexport function addThousandSeparators(num: string | number) {\n    return num.toString().replaceAll(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, ',')\n}\n","import urlcat from 'urlcat'\nimport { NetworkPluginID, createLookupTableResolver, NextIDPlatform, SocialAddressType } from '@masknet/shared-base'\nimport { CurrencyType, SourceType } from '../specs/index.js'\nimport { memoize } from 'lodash-es'\n\nexport const resolveSocialAddressLink = createLookupTableResolver<SocialAddressType, string>(\n    {\n        [SocialAddressType.Address]: '',\n        [SocialAddressType.ARBID]: 'https://arb.id/',\n        [SocialAddressType.ENS]: 'https://ens.domains/',\n        [SocialAddressType.SPACE_ID]: 'https://space.id/',\n        [SocialAddressType.RSS3]: 'https://rss3.bio/',\n        [SocialAddressType.Crossbell]: 'https://crossbell.io/',\n        [SocialAddressType.Firefly]: '',\n        [SocialAddressType.SOL]: 'https://naming.bonfida.org/',\n        [SocialAddressType.NEXT_ID]: 'https://next.id/',\n        [SocialAddressType.CyberConnect]: 'https://cyberconnect.me/',\n        [SocialAddressType.Leaderboard]: 'https://ethleaderboard.xyz/',\n        [SocialAddressType.Sybil]: 'https://sybil.org/',\n        [SocialAddressType.TwitterBlue]: '',\n        [SocialAddressType.Mask]: '',\n        [SocialAddressType.Lens]: '',\n        [SocialAddressType.OpenSea]: '',\n    },\n    () => '',\n)\n\nexport const resolveSourceTypeName = createLookupTableResolver<SourceType, string>(\n    {\n        [SourceType.DeBank]: 'DeBank',\n        [SourceType.Zerion]: 'Zerion',\n        [SourceType.RSS3]: 'RSS3',\n        [SourceType.CoinMarketCap]: 'CoinMarketCap',\n        [SourceType.UniswapInfo]: 'UniswapInfo',\n        [SourceType.OpenSea]: 'OpenSea',\n        [SourceType.Rarible]: 'Rarible',\n        [SourceType.LooksRare]: 'LooksRare',\n        [SourceType.NFTScan]: 'NFTScan',\n        [SourceType.Zora]: 'Zora',\n        [SourceType.Gem]: 'Gem',\n        [SourceType.Alchemy_EVM]: 'Alchemy_EVM',\n        [SourceType.Alchemy_FLOW]: 'Alchemy_FLOW',\n        [SourceType.RaritySniper]: 'RaritySniper',\n        [SourceType.TraitSniper]: 'TraitSniper',\n        [SourceType.Chainbase]: 'Chainbase',\n        [SourceType.X2Y2]: 'X2Y2',\n        [SourceType.MagicEden]: 'MagicEden',\n        [SourceType.Element]: 'Element',\n        [SourceType.Flow]: 'Flow',\n        [SourceType.Solana]: 'Solana',\n        [SourceType.Solsea]: 'Solsea',\n        [SourceType.Solanart]: 'Solanart',\n        [SourceType.R2D2]: 'R2D2',\n        [SourceType.Rabby]: 'Rabby',\n        [SourceType.CoinGecko]: 'CoinGecko',\n        [SourceType.CF]: 'CloudFlare',\n        [SourceType.GoPlus]: 'GoPlus',\n        [SourceType.OKX]: 'OKX',\n        [SourceType.Uniswap]: 'Uniswap',\n        [SourceType.NFTX]: 'NFTX',\n        [SourceType.Etherscan]: 'Etherscan',\n        [SourceType.CryptoPunks]: 'CryptoPunks',\n        [SourceType.SimpleHash]: 'SimpleHash',\n        [SourceType.Approval]: 'Approval',\n    },\n    (providerType) => {\n        throw new Error(`Unknown source type: ${providerType}.`)\n    },\n)\n\nexport const resolveCurrencyName = createLookupTableResolver<CurrencyType, string>(\n    {\n        [CurrencyType.BTC]: 'BTC',\n        [CurrencyType.ETH]: 'ETH',\n        [CurrencyType.NATIVE]: 'ETH',\n        [CurrencyType.USD]: 'USD',\n        [CurrencyType.CNY]: 'CNY',\n        [CurrencyType.JPY]: 'JPY',\n        [CurrencyType.HKD]: 'HKD',\n        [CurrencyType.EUR]: 'EUR',\n    },\n    (CurrencyType) => {\n        throw new Error(`Unknown currency type: ${CurrencyType}.`)\n    },\n)\nexport const resolveCurrencyFullName = createLookupTableResolver<CurrencyType, string>(\n    {\n        [CurrencyType.BTC]: 'Bitcoin',\n        [CurrencyType.ETH]: 'Ethereum',\n        [CurrencyType.NATIVE]: 'Ethereum',\n        [CurrencyType.USD]: 'United States Dollar',\n        [CurrencyType.CNY]: 'Chinese Yuan',\n        [CurrencyType.JPY]: 'Japanese Yen',\n        [CurrencyType.HKD]: 'Hong Kong Dollar',\n        [CurrencyType.EUR]: 'Euro',\n    },\n    (CurrencyType) => {\n        throw new Error(`Unknown currency type: ${CurrencyType}.`)\n    },\n)\n\nexport const resolveNetworkWalletName = createLookupTableResolver<NetworkPluginID, string>(\n    {\n        [NetworkPluginID.PLUGIN_EVM]: 'ETH Wallet',\n        [NetworkPluginID.PLUGIN_SOLANA]: 'Solana Wallet',\n        [NetworkPluginID.PLUGIN_FLOW]: 'Flow Wallet',\n    },\n    (network) => {\n        throw new Error(`Unknown network plugin-id: ${network}`)\n    },\n)\n\nexport const resolveNextIDPlatformWalletName: (platform: NextIDPlatform) => string = memoize(function (\n    platform: NextIDPlatform,\n) {\n    const pluginId = resolveNextID_NetworkPluginID(platform)\n    if (!pluginId) return `${platform} wallet`\n    return resolveNetworkWalletName(pluginId)\n})\n\nexport const resolveNextID_NetworkPluginID = createLookupTableResolver<NextIDPlatform, NetworkPluginID | undefined>(\n    {\n        [NextIDPlatform.Ethereum]: NetworkPluginID.PLUGIN_EVM,\n        [NextIDPlatform.NextID]: undefined,\n        [NextIDPlatform.GitHub]: undefined,\n        [NextIDPlatform.Keybase]: undefined,\n        [NextIDPlatform.Twitter]: undefined,\n        [NextIDPlatform.ENS]: undefined,\n        [NextIDPlatform.RSS3]: undefined,\n        [NextIDPlatform.LENS]: undefined,\n        [NextIDPlatform.REDDIT]: undefined,\n        [NextIDPlatform.SYBIL]: undefined,\n        [NextIDPlatform.EthLeaderboard]: undefined,\n        [NextIDPlatform.SpaceId]: NetworkPluginID.PLUGIN_EVM,\n        [NextIDPlatform.Farcaster]: undefined,\n        [NextIDPlatform.Bit]: undefined,\n        [NextIDPlatform.Unstoppable]: undefined,\n        [NextIDPlatform.CyberConnect]: undefined,\n    },\n    () => {\n        return undefined\n    },\n)\n\nexport const resolveNextIDPlatformName = createLookupTableResolver<NextIDPlatform, string>(\n    {\n        [NextIDPlatform.Ethereum]: 'Ethereum',\n        [NextIDPlatform.NextID]: 'NEXT.ID',\n        [NextIDPlatform.GitHub]: 'Github',\n        [NextIDPlatform.Keybase]: 'Keybase',\n        [NextIDPlatform.Twitter]: 'Twitter',\n        [NextIDPlatform.ENS]: 'ENS',\n        [NextIDPlatform.RSS3]: 'RSS3',\n        [NextIDPlatform.LENS]: 'Lens',\n        [NextIDPlatform.REDDIT]: 'Reddit',\n        [NextIDPlatform.SYBIL]: 'Sybil',\n        [NextIDPlatform.EthLeaderboard]: 'EthLeaderboard',\n        [NextIDPlatform.SpaceId]: 'Space ID',\n        [NextIDPlatform.Farcaster]: 'Farcaster',\n        [NextIDPlatform.Bit]: '.bit',\n        [NextIDPlatform.Unstoppable]: 'Unstoppable Domains',\n        [NextIDPlatform.CyberConnect]: 'CyberConnect',\n    },\n    () => {\n        return ''\n    },\n)\n\nexport const resolveNextIDPlatformLink = (networkPlatform: NextIDPlatform, identifier: string, name: string) => {\n    switch (networkPlatform) {\n        case NextIDPlatform.Ethereum:\n            return `https://etherscan.io/address/${identifier}`\n        case NextIDPlatform.NextID:\n            return 'https://next.id/'\n        case NextIDPlatform.GitHub:\n            return `https://github.com/${identifier}`\n        case NextIDPlatform.Keybase:\n            return `https://keybase.io/${name}`\n        case NextIDPlatform.Twitter:\n            return `https://twitter.com/${identifier}`\n        case NextIDPlatform.ENS:\n            return `https://app.ens.domains/name/${identifier}`\n        case NextIDPlatform.RSS3:\n            return `https://rss3.io/result?search=${identifier}`\n        case NextIDPlatform.LENS:\n            return `https://www.lensfrens.xyz/${identifier}`\n        case NextIDPlatform.REDDIT:\n            return `https://www.reddit.com/user/${identifier}`\n        case NextIDPlatform.SYBIL:\n            return 'https://sybil.org/'\n        case NextIDPlatform.EthLeaderboard:\n            return 'https://ethleaderboard.xyz/'\n        case NextIDPlatform.SpaceId:\n            return `https://bscscan.com/address/${identifier}`\n        case NextIDPlatform.Farcaster:\n            return `https://warpcast.com/${identifier}`\n        case NextIDPlatform.Bit:\n            return `https://bit.cc/${name}`\n        case NextIDPlatform.Unstoppable:\n            return `https://ud.me/${name}`\n        default:\n            return ''\n    }\n}\n\n// https://stackoverflow.com/a/67176726\nconst MATCH_IPFS_CID_RAW =\n    'Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[2-7A-Za-z]{58,}|B[2-7A-Z]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[\\\\dA-F]{50,}'\nconst MATCH_IPFS_DATA_RE = /ipfs\\/(data:.*)$/\nconst MATCH_IPFS_CID_RE = new RegExp(`(${MATCH_IPFS_CID_RAW})`)\nconst MATCH_IPFS_CID_STRICT_RE = new RegExp(`^(?:${MATCH_IPFS_CID_RAW})$`)\nconst MATCH_IPFS_CID_AT_STARTS_RE = new RegExp(`^https://(?:${MATCH_IPFS_CID_RAW})`)\nconst MATCH_IPFS_CID_AND_PATHNAME_RE = new RegExp(`(?:${MATCH_IPFS_CID_RAW})\\\\/?.*`)\nconst MATCH_LOCAL_RESOURCE_URL_RE = /^(data|blob:|\\w+-extension:\\/\\/|<svg\\s)/\nconst CORS_HOST = 'https://cors-next.r2d2.to'\nconst IPFS_GATEWAY_HOST = 'https://hoot.it'\n\nexport function isIPFS_CID(cid: string) {\n    return MATCH_IPFS_CID_STRICT_RE.test(cid)\n}\n\nexport function isIPFS_Resource(str: string) {\n    return MATCH_IPFS_CID_RE.test(str)\n}\n\nexport function isArweaveResource(str: string) {\n    return str.startsWith('ar:')\n}\n\nexport function isLocaleResource(url: string) {\n    return MATCH_LOCAL_RESOURCE_URL_RE.test(url)\n}\n\nexport function resolveLocalURL(url: string) {\n    if (url.startsWith('<svg ')) return `data:image/svg+xml;base64,${btoa(url)}`\n    return url\n}\n\n/**\n * Remove query from IPFS url, as it is not needed\n * and will increase requests sometimes.\n * For example https://ipfs.io/ipfs/<same-cid>?id=67891 and https://ipfs.io/ipfs/<same-cid>?id=67892\n * are set to two different NFTs, but according to the same CID,\n * they are exactly the same.\n */\nexport function trimQuery(url: string) {\n    return url.replace(/\\?.+$/, '')\n}\n\nexport function resolveIPFS_CID(str: string) {\n    return str.match(MATCH_IPFS_CID_RE)?.[1]\n}\n\nexport function resolveIPFS_URL(cidOrURL: string | undefined): string | undefined {\n    if (!cidOrURL) return cidOrURL\n\n    // eliminate cors proxy\n    if (cidOrURL.startsWith(CORS_HOST)) {\n        return trimQuery(resolveIPFS_URL(decodeURIComponent(cidOrURL.replace(new RegExp(`^${CORS_HOST}??`), '')))!)\n    }\n\n    // a ipfs.io host\n    if (cidOrURL.startsWith(IPFS_GATEWAY_HOST)) {\n        // base64 data string\n        const [_, data] = cidOrURL.match(MATCH_IPFS_DATA_RE) ?? []\n        if (data) return decodeURIComponent(data)\n\n        // plain\n        return trimQuery(decodeURIComponent(cidOrURL))\n    }\n\n    // a ipfs hash fragment\n    if (isIPFS_Resource(cidOrURL)) {\n        // starts with a cid\n        if (MATCH_IPFS_CID_AT_STARTS_RE.test(cidOrURL)) {\n            try {\n                const u = new URL(cidOrURL)\n                const cid = resolveIPFS_CID(cidOrURL)\n\n                if (cid) {\n                    if (u.pathname === '/') {\n                        return resolveIPFS_URL(\n                            urlcat('https://ipfs.io/ipfs/:cid', {\n                                cid,\n                            }),\n                        )\n                    } else {\n                        return resolveIPFS_URL(\n                            urlcat('https://ipfs.io/ipfs/:cid/:path', {\n                                cid,\n                                path: u.pathname.slice(1),\n                            }),\n                        )\n                    }\n                }\n            } catch (error) {\n                console.log({\n                    error,\n                })\n                // do nothing\n            }\n        }\n\n        const pathname = cidOrURL.match(MATCH_IPFS_CID_AND_PATHNAME_RE)?.[0]\n        if (pathname) return trimQuery(`${IPFS_GATEWAY_HOST}/ipfs/${pathname}`)\n    }\n\n    return cidOrURL\n}\n\nexport function resolveArweaveURL<T extends string | undefined>(url: T) {\n    if (!url) return url\n    if (url.startsWith('https://')) return url\n    return urlcat('https://arweave.net/:str', { str: url })\n}\n\n/**\n * Please do not use to resolve an image or an video resource, because that's\n * not allowed by the cors agent server\n */\nexport function resolveCrossOriginURL<T extends string | undefined>(url: T) {\n    if (!url) return url\n    if (isLocaleResource(url)) return url\n    if (url.startsWith(CORS_HOST)) return url\n    return `${CORS_HOST}?${encodeURIComponent(url)}`\n}\n\nexport function resolveResourceURL<T extends string | undefined>(url: T) {\n    if (!url) return url\n    if (isLocaleResource(url)) return resolveLocalURL(url)\n    if (isArweaveResource(url)) return resolveArweaveURL(url)\n    return resolveIPFS_URL(url)\n}\n","import type { ReactNode } from 'react'\nimport type { Subscription } from 'use-subscription'\nimport type { JsonRpcPayload } from 'web3-core-helpers'\nimport type { Emitter } from '@servie/events'\nimport type {\n    ECKeyIdentifier,\n    EnhanceableSite,\n    ExtensionSite,\n    NetworkPluginID,\n    BindingProof,\n    Account,\n    Color,\n    SocialAddress,\n    SocialIdentity,\n    SocialAccount,\n    Startable,\n    SignType,\n} from '@masknet/shared-base'\n\nexport enum CurrencyType {\n    NATIVE = 'native',\n    BTC = 'btc',\n    ETH = 'eth',\n    USD = 'usd',\n    CNY = 'cny',\n    HKD = 'hkd',\n    JPY = 'jpy',\n    EUR = 'eur',\n}\n\nexport enum OrderSide {\n    Buy = 0,\n    Sell = 1,\n}\n\nexport enum GasOptionType {\n    FAST = 'fast',\n    NORMAL = 'normal',\n    SLOW = 'slow',\n    CUSTOM = 'custom',\n}\n\nexport enum TokenType {\n    Fungible = 'Fungible',\n    NonFungible = 'NonFungible',\n}\n\nexport enum SourceType {\n    // FT assets\n    DeBank = 'DeBank',\n    Zerion = 'Zerion',\n    Flow = 'Flow',\n    Solana = 'Solana',\n    CoinGecko = 'CoinGecko',\n    CoinMarketCap = 'CoinMarketCap',\n    UniswapInfo = 'UniswapInfo',\n    CF = 'CloudFlare',\n    GoPlus = 'GoPlus',\n\n    // NFT assets\n    Rabby = 'Rabby',\n    Gem = 'Gem',\n    RSS3 = 'RSS3',\n    Zora = 'zora',\n    OpenSea = 'opensea',\n    Rarible = 'rarible',\n    LooksRare = 'looksrare',\n    NFTScan = 'NFTScan',\n    Alchemy_EVM = 'Alchemy_EVM',\n    Alchemy_FLOW = 'Alchemy_FLOW',\n    Chainbase = 'Chainbase',\n    X2Y2 = 'X2Y2',\n    MagicEden = 'MagicEden',\n    Element = 'Element',\n    Solsea = 'Solsea',\n    Solanart = 'Solanart',\n    OKX = 'OKX',\n    Uniswap = 'Uniswap',\n    NFTX = 'NFTX',\n    Etherscan = 'Etherscan',\n    CryptoPunks = 'CryptoPunks',\n    SimpleHash = 'SimpleHash',\n\n    // Rarity\n    RaritySniper = 'RaritySniper',\n    TraitSniper = 'TraitSniper',\n\n    // Token List\n    R2D2 = 'R2D2',\n\n    Approval = 'Approval',\n}\n\nexport enum SearchResultType {\n    // e.g., 0x6a7122B831c2B79c508A978f73f2ee23171279B3\n    EOA = 'EOA',\n    // e.g., vitalik.eth or vitalik.bnb\n    Domain = 'Domain',\n    // e.g., $MASK #MASK or its address 0x69af81e73a73b40adf4f3d4223cd9b1ece623074\n    FungibleToken = 'FungibleToken',\n    // e.g., #APE\n    NonFungibleToken = 'NonFungibleToken',\n    // e.g., #punks\n    NonFungibleCollection = 'NonFungibleCollection',\n    // e.g., realMaskNetwork\n    CollectionListByTwitterHandler = 'CollectionListByTwitterHandler',\n    // e.g., PancakeSwap\n    DAO = 'DAO',\n}\n\nexport enum ActivityType {\n    Transfer = 'Transfer',\n    Mint = 'Mint',\n    Sale = 'Sale',\n    Offer = 'Offer',\n    Burn = 'Burn',\n    List = 'List',\n    CancelOffer = 'CancelOffer',\n}\n\nexport enum MessageStateType {\n    NOT_DEPEND = 1,\n    APPROVED = 2,\n    DENIED = 3,\n}\n\nexport enum TransactionStatusType {\n    NOT_DEPEND = 1,\n    SUCCEED = 2,\n    FAILED = 3,\n}\n\nexport enum TransactionReceiptStatusType {\n    FAILED = 0,\n    SUCCEED = 1,\n    NOT_DEPEND = 2,\n}\n\nexport enum TransactionDescriptorType {\n    /** Transfer on chain value. */\n    TRANSFER = 'transfer',\n    /** A transaction to operate state mutations. */\n    INTERACTION = 'interaction',\n    /** A transaction to deploy programs. */\n    DEPLOYMENT = 'deployment',\n    /** A transaction to cancel a previous transaction. */\n    CANCEL = 'cancel',\n    /** A transaction to modify a previous transaction. */\n    RETRY = 'retry',\n}\n\nexport enum FontSize {\n    X_Small = 'xSmall',\n    Small = 'small',\n    Normal = 'normal',\n    Large = 'large',\n    X_Large = 'xLarge',\n}\n\nexport enum ThemeMode {\n    Light = 'light',\n    Dark = 'dark',\n}\n\nexport enum ThemeColor {\n    Blue = 'rgb(37, 99, 235)',\n}\n\nexport interface ThemeSettings {\n    size: FontSize\n    color: string\n    mode: ThemeMode\n    isDim: boolean\n}\n\nexport interface Identity {\n    address?: string\n    nickname?: string\n    avatarURL?: string\n    link?: string\n}\n\nexport type Price = Partial<Record<CurrencyType, string>>\n\nexport interface Contact {\n    name: string\n    address: string\n}\n\nexport interface ChainDescriptor<ChainId, SchemaType, NetworkType> {\n    ID: string\n    type: NetworkType\n    chainId: ChainId\n    coinMarketCapChainId?: string\n    coinGeckoChainId?: string\n    coinGeckoPlatformId?: string\n    name: string\n    color?: string\n    fullName?: string\n    shortName?: string\n    network: LiteralUnion<'mainnet' | 'testnet'>\n    nativeCurrency: FungibleToken<ChainId, SchemaType>\n    rpcUrl: string\n    iconUrl?: string\n    // EIP3091\n    explorerUrl: {\n        url: string\n        parameters?: Record<string, string | number | boolean>\n    }\n    features?: string[]\n    // Indicate a built-in chain or customized one.\n    isCustomized: boolean\n}\n\nexport type ReasonableNetwork<ChainId, SchemaType, NetworkType> = ChainDescriptor<ChainId, SchemaType, NetworkType> & {\n    createdAt: Date\n    updatedAt: Date\n}\n\nexport type TransferableNetwork<ChainId, SchemaType, NetworkType> = Omit<\n    ChainDescriptor<ChainId, SchemaType, NetworkType>,\n    'ID'\n>\n\nexport interface MessageDescriptor<Request, Response> {\n    ID: string\n    state: MessageStateType\n    request: Request\n    response?: Response\n}\n\nexport type ReasonableMessage<Request, Response> = MessageDescriptor<Request, Response> & {\n    createdAt: Date\n    updatedAt: Date\n}\n\nexport type TransferableMessage<Request, Response> = Omit<MessageDescriptor<Request, Response>, 'ID'>\n\nexport interface NetworkDescriptor<ChainId, NetworkType> {\n    /** An unique ID for each network */\n    ID: string\n    /** The ID of the plugin that provides the functionality of the network. */\n    networkSupporterPluginID: NetworkPluginID\n    /** The chain id */\n    chainId: ChainId\n    /** The network type */\n    type: NetworkType\n    /** The network icon */\n    icon: string\n    /** The network icon in fixed color */\n    iconColor: Color\n    /** The average time for mining a block (unit: seconds). */\n    averageBlockDelay: number\n    /** The background gradient color for relative network bar */\n    backgroundGradient?: string\n    /** The network name. e.g. Ethereum */\n    name: string\n    /** The network short name. e.g. 'ETH' */\n    shortName?: string\n    /** Is a mainnet network */\n    isMainnet: boolean\n}\n\nexport interface ProviderDescriptor<ChainId, ProviderType> {\n    /** An unique ID for each wallet provider */\n    ID: string\n    /** The ID of a plugin that provides the adoption of this provider. */\n    providerAdaptorPluginID: NetworkPluginID\n    /** The provider type */\n    type: ProviderType\n    /** The provider icon */\n    icon: string\n    /** The provider name */\n    name: string\n    /** The provider bar background gradient color */\n    backgroundGradient?: string\n    /** The provider icon filter color */\n    iconFilterColor?: string\n    /** Enable requirements */\n    enableRequirements?: {\n        supportedChainIds?: ChainId[]\n        supportedEnhanceableSites?: EnhanceableSite[]\n        supportedExtensionSites?: ExtensionSite[]\n    }\n    /** A link to provider's home website */\n    homeLink: string\n    /** A link only contains domain name */\n    shortenLink: string\n    /** A link to download the client application */\n    downloadLink?: string\n}\n\nexport interface Token<ChainId, SchemaType> {\n    /** For NFT, it could be `${chainId}.${contractAddress}.${tokenId}` */\n    id: string\n    chainId: ChainId\n    type: TokenType\n    schema: SchemaType\n    address: string\n    /** NFT has tokenId */\n    tokenId?: string\n    /** Added by user */\n    isCustomToken?: boolean\n}\n\nexport interface FungibleToken<ChainId, SchemaType> extends Token<ChainId, SchemaType> {\n    name: string\n    symbol: string\n    decimals: number\n    logoURL?: string\n    // Sorted by market cap.\n    rank?: number\n}\n\nexport interface NonFungibleTokenStats {\n    volume24h: number\n    count24h: number\n    floorPrice: number\n}\n\nexport interface NonFungibleTokenRarity<ChainId> {\n    chainId: ChainId\n    rank: number\n    url: string\n    status?: 'verified' | 'unverified'\n    /** source type */\n    source?: SourceType\n}\n\nexport interface NonFungibleTokenContract<ChainId, SchemaType> {\n    chainId: ChainId\n    name: string\n    symbol?: string\n    address: string\n    schema: SchemaType\n    owner?: string\n    balance?: number\n    logoURL?: string\n    iconURL?: string\n    /** @example 2.5% */\n    creatorEarning?: string\n    /** source type */\n    source?: SourceType\n}\n\nexport interface NonFungibleTokenMetadata<ChainId> {\n    chainId: ChainId\n    /** Might be the format `TheName #42` */\n    name: string\n    tokenId?: string\n    symbol?: string\n    description?: string\n    /** image url */\n    imageURL?: string\n    previewImageURL?: string\n    /** Useful for progress loading */\n    blurhash?: string\n    /** source media url */\n    mediaURL?: string\n    /** source media type */\n    mediaType?: string\n    /** project url */\n    projectURL?: string\n    /** source type */\n    source?: SourceType\n}\n\nexport interface SocialLinks {\n    website?: string\n    email?: string\n    twitter?: string\n    discord?: string\n    telegram?: string\n    github?: string\n    instagram?: string\n    medium?: string\n}\n\nexport interface NonFungibleCollection<ChainId, SchemaType> {\n    chainId: ChainId\n    name: string\n    slug: string\n    symbol?: string | null\n    description?: string\n    /** some providers define id, while others don't. For those don't, we will fallback to contract address */\n    id?: string\n    address?: string\n    schema?: SchemaType\n    iconURL?: string | null\n    /** the balance of the current owner */\n    balance?: number\n    /** the amount of holders */\n    ownersTotal?: number\n    /** verified by provider */\n    verified?: boolean\n    verifiedBy?: string[]\n    /** unix timestamp */\n    createdAt?: number\n    /** source type */\n    source?: SourceType\n    assets?: Array<NonFungibleAsset<ChainId, SchemaType>>\n    socialLinks?: SocialLinks\n    floorPrices?: Array<{\n        marketplace_id: LiteralUnion<'blur' | 'looksrare' | 'opensea' | 'x2y2'>\n        marketplace_name: LiteralUnion<'Blur' | 'LooksRare' | 'OpenSea' | 'X2Y2'>\n        value: number\n        payment_token: {\n            payment_token_id: LiteralUnion<'ethereum.native'>\n            name: string\n            symbol: string\n            address: string | null\n            decimals: number\n        }\n    }>\n}\n\nexport interface NonFungibleCollectionOverview {\n    // collection name\n    collection?: string\n    market_cap?: string\n    highest_price?: string\n    volume_24h?: string\n    average_price_24h?: string\n    average_price_change_1d?: string\n    average_price_change?: string\n    average_price_change_7d?: string\n    sales_24h?: number\n    owners_total?: number\n    total_volume?: string\n    items_total?: number\n    sales?: number\n    volume?: number\n    average_price?: string\n}\n\nexport interface NonFungibleTokenActivity<ChainId, SchemaType> {\n    hash: string\n    event_type: ActivityType\n    transaction_link?: string\n    timestamp: number\n    imageURL: string\n    trade_price?: number\n    // The param `from` of the transaction\n    from: string\n    // The param `to` of the transaction\n    to: string\n    // The user address who received the NFT\n    receive: string\n    // The user address who sent the NFT\n    send: string\n    contract_address: string\n    token_id?: string\n    trade_token?: FungibleToken<ChainId, SchemaType>\n    trade_symbol?: string\n    // #region solana\n    source?: string\n    destination?: string\n    fee?: number\n    tx_interact_program?: string\n    token_address?: string\n    // #endregion\n}\n\nexport interface NonFungibleToken<ChainId, SchemaType> extends Token<ChainId, SchemaType> {\n    /** the token id */\n    tokenId: string\n    /** the address or uid of the token owner */\n    ownerId?: string\n    /** the contract info */\n    contract?: NonFungibleTokenContract<ChainId, SchemaType>\n    /** the media metadata */\n    metadata?: NonFungibleTokenMetadata<ChainId>\n    /** the collection info */\n    collection?: NonFungibleCollection<ChainId, SchemaType>\n    traits?: NonFungibleTokenTrait[]\n}\n\nexport interface NonFungibleTokenTrait {\n    /** The type of trait. */\n    type: string\n    /** The value of trait. */\n    value: string\n    /** The rarity of trait in percentage. */\n    rarity?: string\n    displayType?: LiteralUnion<'date' | 'string' | 'number'> | null\n}\n\nexport interface NonFungibleTokenAuction<ChainId, SchemaType> {\n    /** unix timestamp */\n    startAt?: number\n    /** unix timestamp */\n    endAt?: number\n    /** tokens available to make an order */\n    orderTokens?: Array<FungibleToken<ChainId, SchemaType>>\n    /** tokens available to make an offer */\n    offerTokens?: Array<FungibleToken<ChainId, SchemaType>>\n}\n\nexport interface NonFungibleTokenOrder<ChainId, SchemaType> {\n    id: string\n    /** chain Id */\n    chainId: ChainId\n    /** permalink of asset */\n    assetPermalink: string\n    /** token amount */\n    quantity: string\n    /** transaction hash */\n    hash?: string\n    /** buy or sell */\n    side?: OrderSide\n    /** the account make the order */\n    maker?: Identity\n    /** the account fullfil the order */\n    taker?: Identity\n    /** unix timestamp */\n    createdAt?: number\n    /** unix timestamp */\n    expiredAt?: number\n    /** calculated current price */\n    price?: Price\n    /** the payment token and corresponding price */\n    priceInToken?: PriceInToken<ChainId, SchemaType>\n    /** source type */\n    source?: SourceType\n}\n\nexport interface NonFungibleTokenEvent<ChainId, SchemaType> {\n    id: string\n    /** chain Id */\n    chainId: ChainId\n    /** event type */\n    type: ActivityType\n    /** permalink of asset */\n    assetPermalink?: string\n    /** name of asset */\n    assetName?: string\n    /** symbol of asset */\n    assetSymbol?: string\n    /** token amount */\n    quantity: string\n    /** transaction hash */\n    hash?: string\n    /** the account make the order */\n    from?: Identity\n    /** the account fullfil the order */\n    to?: Identity\n    /** the account who send the token */\n    send?: Identity\n    /** the account who receive the token */\n    receive?: Identity\n    /** unix timestamp */\n    timestamp: number\n    /** relate token price */\n    price?: Price\n    /** the payment token and corresponding price */\n    priceInToken?: PriceInToken<ChainId, SchemaType>\n    /** the payment token */\n    paymentToken?: FungibleToken<ChainId, SchemaType>\n    /** source type */\n    source?: SourceType\n}\n\n/**\n * A fungible token but with more metadata\n */\nexport interface FungibleAsset<ChainId, SchemaType> extends FungibleToken<ChainId, SchemaType> {\n    /** currently balance */\n    balance: string\n    /** estimated price */\n    price?: Price\n    /** estimated value */\n    value?: Price\n}\n\nexport interface PriceInToken<ChainId, SchemaType> {\n    amount: string\n    token: FungibleToken<ChainId, SchemaType>\n}\n\n/**\n * A non-fungible token but with more metadata\n */\nexport interface NonFungibleAsset<ChainId, SchemaType> extends NonFungibleToken<ChainId, SchemaType> {\n    /** permalink */\n    link?: string\n    /** the creator data */\n    creator?: Identity\n    /** the owner data */\n    owner?: Identity\n    /** estimated price */\n    price?: Price\n    /** rarity */\n    rarity?: Record<SourceType, NonFungibleTokenRarity<ChainId>>\n    /** traits of the digital asset */\n    traits?: NonFungibleTokenTrait[]\n    /** token on auction */\n    auction?: NonFungibleTokenAuction<ChainId, SchemaType>\n    /** related orders */\n    orders?: Array<NonFungibleTokenOrder<ChainId, SchemaType>>\n    /** related events */\n    events?: Array<NonFungibleTokenEvent<ChainId, SchemaType>>\n    /** all payment tokens */\n    paymentTokens?: Array<FungibleToken<ChainId, SchemaType>>\n    /** the payment token and corresponding price */\n    priceInToken?: PriceInToken<ChainId, SchemaType>\n    /** source type */\n    source?: SourceType\n}\n\n/**\n * Authorization about a fungible token.\n */\nexport interface FungibleTokenSpender<ChainId, SchemaType> {\n    tokenInfo: Pick<FungibleToken<ChainId, SchemaType>, 'address' | 'logoURL' | 'symbol' | 'name'> & {\n        decimals?: number\n    }\n    /** spender address */\n    address: string\n    /** spender name */\n    name: string | undefined\n    /** spender logo */\n    logo: ReactNode | undefined\n    /** allowance token amount of this spender */\n    amount?: number\n    /** allowance token amount(not formatted by token decimals) of this spender */\n    rawAmount?: number\n}\n\n/**\n * Authorization about a non-fungible contract.\n */\nexport interface NonFungibleContractSpender<ChainId, SchemaType> {\n    amount: string\n    contract: Pick<NonFungibleTokenContract<ChainId, SchemaType>, 'name' | 'address'>\n    address: string\n    name: string | undefined\n    logo: ReactNode | undefined\n}\n\nexport interface Result<ChainId> {\n    pluginID: NetworkPluginID\n    chainId: ChainId\n    type: SearchResultType\n    /** The original searched keyword */\n    keyword: string\n    /** alias name list, e.g. binance for bnb. */\n    alias?: Array<{\n        value: string\n        // If pin this to top of results\n        isPin?: boolean\n    }>\n}\n\nexport interface EOAResult<ChainId> extends Result<ChainId> {\n    type: SearchResultType.EOA\n    domain?: string\n    bindingProofs?: BindingProof[]\n    address: string\n}\n\nexport interface DAOResult<ChainId> extends Result<ChainId> {\n    type: SearchResultType.DAO\n    keyword: string\n    spaceId: string\n    spaceName: string\n    twitterHandler: string\n    avatar: string\n    followersCount: number\n    strategyName?: string\n    isVerified: boolean\n    alias?: Array<{\n        value: string\n        isPin?: boolean\n    }>\n}\n\nexport interface DomainResult<ChainId> extends Result<ChainId> {\n    type: SearchResultType.Domain\n    domain?: string\n    address?: string\n}\n\nexport interface FungibleTokenResult<ChainId, SchemaType> extends Result<ChainId> {\n    type: SearchResultType.FungibleToken\n    /** The id of token on the provider platform */\n    id?: string\n    address?: string\n    rank?: number\n    logoURL?: string\n    name: string\n    symbol: string\n    source: SourceType\n    token?: FungibleToken<ChainId, SchemaType>\n    socialLinks?: SocialLinks\n}\n\nexport interface NonFungibleTokenResult<ChainId, SchemaType> extends Result<ChainId> {\n    type: SearchResultType.NonFungibleToken | SearchResultType.NonFungibleCollection\n    id?: string\n    address: string\n    rank?: number\n    logoURL?: string\n    name: string\n    symbol?: string\n    tokenId?: string\n    source: SourceType\n    token?: NonFungibleToken<ChainId, SchemaType>\n}\n\nexport type TokenResult<ChainId, SchemaType> =\n    | FungibleTokenResult<ChainId, SchemaType>\n    | NonFungibleTokenResult<ChainId, SchemaType>\n    | NonFungibleCollectionResult<ChainId, SchemaType>\n\nexport interface NonFungibleCollectionResult<ChainId, SchemaType> extends Result<ChainId> {\n    type: SearchResultType.CollectionListByTwitterHandler\n    address: string\n    id?: string\n    rank?: number\n    logoURL?: string\n    name: string\n    symbol?: string\n    source: SourceType\n    collection?: NonFungibleCollection<ChainId, SchemaType>\n}\n\nexport type SearchResult<ChainId, SchemaType> =\n    | EOAResult<ChainId>\n    | DomainResult<ChainId>\n    | FungibleTokenResult<ChainId, SchemaType>\n    | NonFungibleTokenResult<ChainId, SchemaType>\n    | NonFungibleCollectionResult<ChainId, SchemaType>\n    | DAOResult<ChainId>\n\nexport interface TransactionDescriptor<ChainId, Transaction, Parameter = string | undefined> {\n    chainId: ChainId\n    /** The transaction type */\n    type: TransactionDescriptorType\n    /** a transaction title. */\n    title: string\n    context?: TransactionContext<ChainId, Parameter>\n    /** The original transaction object */\n    _tx: Transaction\n    /** The address of the token leveraged to swap other tokens */\n    tokenInAddress?: string\n    /** The amount of the token leveraged to swap other tokens */\n    tokenInAmount?: string\n    /** a human-readable description. */\n    description?: string\n    snackbar?: {\n        /** a human-readable description for successful transaction. */\n        successfulDescription?: string\n        /** a human-readable title for successful transaction. */\n        successfulTitle?: string\n        /** a human-readable description for failed transaction. */\n        failedDescription?: string\n        /** a human-readable title for failed transaction. */\n        failedTitle?: string\n    }\n    popup?: {\n        /** The spender address of erc20 approve */\n        spender?: string\n        /** The spender address of erc721 approve */\n        erc721Spender?: string\n        /** The method name of contract function */\n        method?: string\n        /** The Non-Fungible token description */\n        tokenId?: string\n        /** The custom token description */\n        tokenDescription?: string\n    }\n}\n\nexport interface TransactionContext<ChainId, Parameter = string | undefined> {\n    /** the descriptor type */\n    type: TransactionDescriptorType\n    /** chain id */\n    chainId: ChainId\n    /** the from address. */\n    from: string\n    /** the to address */\n    to: string\n    /** the value amount (polyfill to 0x0 if absent in the original transaction) */\n    value: string\n    /** code to deploy */\n    code?: string\n    /** transaction hash */\n    hash?: string\n    /** methods */\n    methods?: Array<{\n        /** name */\n        name?: string\n        /** actual parameters */\n        parameters?: {\n            [key: string]: Parameter\n        }\n    }>\n    /** nested children contexts */\n    children?: Array<TransactionContext<ChainId, Parameter>>\n}\n\ntype TransactionAsset<ChainId, SchemaType> = Token<ChainId, SchemaType> & {\n    name: string\n    symbol: string\n    amount: string\n    direction: string\n}\n\nexport interface Transaction<ChainId, SchemaType> {\n    id: string\n    chainId: ChainId\n    type?: LiteralUnion<'burn' | 'contract interaction' | 'transfer'>\n    cateType?: LiteralUnion<'approve' | 'receive' | 'send'>\n    cateName?: string\n    /** address */\n    from: string\n    /** address */\n    to: string\n    /** unix timestamp */\n    timestamp: number\n    status: TransactionStatusType\n    /** transferred assets */\n    assets: Array<TransactionAsset<ChainId, SchemaType>>\n    /** estimated tx fee */\n    fee?: Price\n    input?: string\n    hash?: string\n    methodId?: string\n    blockNumber?: number\n    isScam?: boolean\n    nonce?: number\n}\n\nexport interface RecentTransaction<ChainId, Transaction> {\n    /** the initial transaction id */\n    id: string\n    /** the id for accessing tx from candidates */\n    indexId: string\n    /** the chain id */\n    chainId: ChainId\n    /** status type */\n    status: TransactionStatusType\n    /** all available tx candidates */\n    candidates: Record<string, Transaction>\n    /** record drafted at */\n    draftedAt: Date\n    /** record created at */\n    createdAt: Date\n    /** record updated at */\n    updatedAt: Date\n    type?: LiteralUnion<'burn' | 'contract interaction'>\n}\n\nexport type RecentTransactionComputed<ChainId, Transaction> = RecentTransaction<ChainId, Transaction> & {\n    /** a dynamically computed field in the hook which means the minted (initial) transaction */\n    _tx: Transaction\n}\n\nexport interface BalanceEvent<ChainId> {\n    /** Emit if the balance of the account updated. */\n    update: [Account<ChainId>]\n}\n\nexport interface BlockNumberEvent<ChainId> {\n    /** Emit if the balance of the chain updated. */\n    update: [ChainId]\n}\n\nexport interface RecognizableError extends Error {\n    isRecognized?: boolean\n}\n\nexport interface WatchEvents<ChainId, Transaction> {\n    /** Emit when error occur */\n    error: [RecognizableError, JsonRpcPayload]\n    /** Emit when the watched transaction status updated. */\n    progress: [ChainId, string, TransactionStatusType, Transaction | undefined]\n}\n\nexport interface TransactionChecker<ChainId, Transaction> {\n    getStatus(chainId: ChainId, id: string, transaction: Transaction): Promise<TransactionStatusType>\n}\n\nexport interface SettingsState extends Startable {\n    /** Is testnets valid */\n    allowTestnet?: Subscription<boolean>\n    /** The currency of estimated values and prices. */\n    currencyType?: Subscription<CurrencyType>\n    /** The gas options type */\n    gasOptionType?: Subscription<GasOptionType>\n    /** The source type of fungible assets */\n    fungibleAssetSourceType?: Subscription<SourceType>\n    /** The source type of non-fungible assets */\n    nonFungibleAssetSourceType?: Subscription<SourceType>\n    /** Set the default fiat currency. */\n    setDefaultCurrencyType: (type: CurrencyType) => Promise<void>\n}\n\nexport interface AddressBookState extends Startable {\n    /** The tracked addresses of currently chosen sub-network */\n    contacts?: Subscription<Contact[]>\n\n    /** Add a contact into address book. */\n    addContact: (contact: Contact) => Promise<void>\n    /** Remove a contact from address book. */\n    removeContact: (address: string) => Promise<void>\n    /** Rename an name of contact from address book. */\n    renameContact: (contact: Contact) => Promise<void>\n}\n\nexport interface NetworkState<ChainId, SchemaType, NetworkType> extends Startable {\n    /** The id of the used network. */\n    networkID?: Subscription<string>\n    /** The used network. */\n    network?: Subscription<ReasonableNetwork<ChainId, SchemaType, NetworkType>>\n    /** All available networks. */\n    networks?: Subscription<Array<ReasonableNetwork<ChainId, SchemaType, NetworkType>>>\n\n    /** Add a new network. */\n    addNetwork: (descriptor: TransferableNetwork<ChainId, SchemaType, NetworkType>) => Promise<void>\n    /** Use the network RPC to build a connection. */\n    switchNetwork: (id: string) => Promise<void>\n    /** Update a network. */\n    updateNetwork: (\n        id: string,\n        updates: Partial<TransferableNetwork<ChainId, SchemaType, NetworkType>>,\n    ) => Promise<void>\n    /** Remove a network */\n    removeNetwork: (id: string) => Promise<void>\n}\n\nexport interface RiskWarningState extends Startable {\n    /** Is approved */\n    approved?: Subscription<boolean>\n\n    /** Detect if an account is approved the statement */\n    isApproved?: (address: string) => Promise<boolean>\n    /** Approve statement of designate account */\n    approve?: (address: string, pluginID?: string) => Promise<void>\n    /** Revoke statement of designate account */\n    revoke?: (address: string, pluginID?: string) => Promise<void>\n}\n\nexport interface IdentityServiceState<ChainId> {\n    /** Merge many social addresses into a social account. Don't overwrite it in sub-classes. */\n    __mergeSocialAddressesAll__(socialAddresses: Array<SocialAddress<ChainId>>): Array<SocialAccount<ChainId>>\n    /** Find all social addresses related to the given identity. */\n    lookup(identity: SocialIdentity): Promise<Array<SocialAddress<ChainId>>>\n}\n\nexport interface NameServiceState extends Startable {\n    /** get address of domain name */\n    lookup?: (domain: string) => Promise<string | undefined>\n    /** get domain name of address */\n    reverse?: (address: string, domainOnly?: boolean) => Promise<string | undefined>\n    /** safely get domain name of address */\n    safeReverse?: (address: string, domainOnly?: boolean) => Promise<string | undefined>\n}\n\nexport interface TokenState<ChainId, SchemaType> extends Startable {\n    /** The user trusted fungible tokens. */\n    trustedFungibleTokens?: Subscription<Array<FungibleToken<ChainId, SchemaType>>>\n    /** The user trusted non-fungible tokens. */\n    trustedNonFungibleTokens?: Subscription<Array<NonFungibleToken<ChainId, SchemaType>>>\n    /** The user blocked fungible tokens. */\n    blockedFungibleTokens?: Subscription<Array<FungibleToken<ChainId, SchemaType>>>\n    /** The user blocked non-fungible tokens. */\n    blockedNonFungibleTokens?: Subscription<Array<NonFungibleToken<ChainId, SchemaType>>>\n    /** Credible fungible tokens */\n    credibleFungibleTokens?: Subscription<Array<FungibleToken<ChainId, SchemaType>>>\n    /** Credible non-fungible tokens */\n    credibleNonFungibleTokens?: Subscription<Array<NonFungibleToken<ChainId, SchemaType>>>\n\n    /** Add a token */\n    addToken?: (address: string, token: Token<ChainId, SchemaType>) => Promise<void>\n    /** Remove a token */\n    removeToken?: (address: string, token: Token<ChainId, SchemaType>) => Promise<void>\n    /** Unblock a token */\n    trustToken?: (\n        address: string,\n        token: Token<ChainId, SchemaType> | NonFungibleToken<ChainId, SchemaType>,\n    ) => Promise<void>\n    /** Block a token */\n    blockToken?: (\n        address: string,\n        token: Token<ChainId, SchemaType> | NonFungibleToken<ChainId, SchemaType>,\n    ) => Promise<void>\n    /** Create a credible fungible token */\n    createFungibleToken?: (\n        chainId: ChainId,\n        address: string,\n        token?: FungibleToken<ChainId, SchemaType>,\n    ) => Promise<FungibleToken<ChainId, SchemaType> | undefined>\n    /** Create a credible non-fungible token */\n    createNonFungibleToken?: (\n        chainId: ChainId,\n        address: string,\n        token?: NonFungibleToken<ChainId, SchemaType>,\n    ) => Promise<NonFungibleToken<ChainId, SchemaType> | undefined>\n    nonFungibleCollectionMap?: Subscription<\n        Record<\n            string,\n            Array<{\n                contract: NonFungibleTokenContract<ChainId, SchemaType>\n                tokenIds: string[]\n            }>\n        >\n    >\n    addNonFungibleTokens?(\n        owner: string,\n        contract: NonFungibleTokenContract<ChainId, SchemaType>,\n        tokenIds: string[],\n    ): Promise<void>\n    removeNonFungibleTokens?(\n        owner: string,\n        contract: NonFungibleTokenContract<ChainId, SchemaType>,\n        tokenIds: string[],\n    ): Promise<void>\n}\n\nexport interface MessageState<Request, Response> extends Startable {\n    /** All unresolved requests. */\n    messages?: Subscription<Array<ReasonableMessage<Request, Response>>>\n    /** Updates a request. */\n    updateMessage(id: string, updates: Partial<TransferableMessage<Request, Response>>): Promise<void>\n    /** Applies a request. */\n    applyRequest(message: TransferableMessage<Request, Response>): Promise<ReasonableMessage<Request, Response>>\n    /** Applies a request and waits for confirmation from the user. */\n    applyAndWaitResponse<T>(\n        message: TransferableMessage<Request, Response>,\n    ): Promise<ReasonableMessage<Request, Response>>\n    /** Approves a request. */\n    approveRequest(id: string, updates?: Request): Promise<Response | void>\n    /** Rejects a request. */\n    denyRequest(id: string): Promise<void>\n    /** Rejects all requests. */\n    denyAllRequests(): Promise<void>\n}\n\nexport interface TransactionState<ChainId, Transaction> extends Startable {\n    /** The tracked transactions of currently chosen sub-network */\n    transactions?: Subscription<Array<RecentTransaction<ChainId, Transaction>>>\n\n    /** Get a transaction record. */\n    getTransaction?: (chainId: ChainId, address: string, id: string) => Promise<Transaction | undefined>\n    /** Add a transaction record. */\n    addTransaction?: (\n        chainId: ChainId,\n        address: string,\n        id: string,\n        transaction: Transaction & { draftedAt: Date },\n    ) => Promise<void>\n    /** Replace a transaction with new record. */\n    replaceTransaction?: (\n        chainId: ChainId,\n        address: string,\n        id: string,\n        newId: string,\n        transaction: Transaction,\n    ) => Promise<void>\n    /** Update transaction status. */\n    updateTransaction?: (\n        chainId: ChainId,\n        address: string,\n        id: string,\n        status: Exclude<TransactionStatusType, TransactionStatusType.NOT_DEPEND>,\n    ) => Promise<void>\n    /** Remove a transaction record. */\n    removeTransaction?: (chainId: ChainId, address: string, id: string) => Promise<void>\n    /** Get all transaction records. */\n    getTransactions?: (chainId: ChainId, address: string) => Promise<Array<RecentTransaction<ChainId, Transaction>>>\n    /** Clear all transactions of the account under given chain */\n    clearTransactions?: (chainId: ChainId, address: string) => Promise<void>\n}\nexport interface TransactionFormatterState<ChainId, Parameters, Transaction> {\n    /** Step 1: Create a transaction formatting context. */\n    createContext: (chainId: ChainId, transaction: Transaction) => Promise<TransactionContext<ChainId, Parameters>>\n    /** Step 2: Create a transaction descriptor */\n    createDescriptor: (\n        chainId: ChainId,\n        transaction: Transaction,\n        context: TransactionContext<ChainId, Parameters>,\n    ) => Promise<TransactionDescriptor<ChainId, Transaction, Parameters>>\n    /** Elaborate a transaction in a human-readable format. */\n    formatTransaction: (\n        chainId: ChainId,\n        transaction: Transaction,\n        txHash?: string,\n    ) => Promise<TransactionDescriptor<ChainId, Transaction, Parameters>>\n}\nexport interface TransactionWatcherState<ChainId, Transaction> {\n    emitter: Emitter<WatchEvents<ChainId, Transaction>>\n\n    /** Notify error */\n    notifyError: (error: Error, request: JsonRpcPayload) => Promise<void>\n    /** Notify transaction status */\n    notifyTransaction: (\n        chainId: ChainId,\n        id: string,\n        transaction: Transaction,\n        status: TransactionStatusType,\n    ) => Promise<void>\n}\n\nexport interface ProviderState<ChainId, ProviderType, NetworkType> extends Startable {\n    /** The account of the currently visiting site. */\n    account?: Subscription<string>\n    /** The chain id of the currently visiting site. */\n    chainId?: Subscription<ChainId>\n    /** The network type of the currently visiting site. */\n    networkType?: Subscription<NetworkType>\n    /** The provider type of the currently visiting site. */\n    providerType?: Subscription<ProviderType>\n\n    /** Detect if a provider is ready */\n    isReady: (providerType: ProviderType) => boolean\n    /** Wait until a provider ready */\n    untilReady: (providerType: ProviderType) => Promise<void>\n\n    /** Connect with the provider and set chain id. */\n    connect: (\n        providerType: ProviderType,\n        chainId: ChainId,\n        account?: string,\n        owner?: {\n            account: string\n            identifier?: ECKeyIdentifier\n        },\n        silent?: boolean,\n    ) => Promise<Account<ChainId>>\n    /** Disconnect with the provider. */\n    disconnect: (providerType: ProviderType) => Promise<void>\n    /** Sign a message with persona (w or w/o popups) */\n    // TODO: this is not the best place to put this signature, but to avoid IOContext leaked as a global variable, we'll put it here for now.\n    signWithPersona(type: SignType, message: unknown, identifier?: ECKeyIdentifier, silent?: boolean): Promise<string>\n}\n\nexport interface BalanceNotifierState<ChainId> {\n    emitter: Emitter<BalanceEvent<ChainId>>\n}\n\nexport interface BlockNumberNotifierState<ChainId> {\n    emitter: Emitter<BlockNumberEvent<ChainId>>\n}\n\nexport interface Web3State<\n    ChainId,\n    SchemaType,\n    ProviderType,\n    NetworkType,\n    MessageRequest,\n    MessageResponse,\n    Transaction,\n    TransactionParameter,\n> {\n    AddressBook?: AddressBookState\n    Network?: NetworkState<ChainId, SchemaType, NetworkType>\n    BalanceNotifier?: BalanceNotifierState<ChainId>\n    BlockNumberNotifier?: BlockNumberNotifierState<ChainId>\n    IdentityService?: IdentityServiceState<ChainId>\n    NameService?: NameServiceState\n    RiskWarning?: RiskWarningState\n    Message?: MessageState<MessageRequest, MessageResponse>\n    Settings?: SettingsState\n    Token?: TokenState<ChainId, SchemaType>\n    Transaction?: TransactionState<ChainId, Transaction>\n    TransactionFormatter?: TransactionFormatterState<ChainId, TransactionParameter, Transaction>\n    TransactionWatcher?: TransactionWatcherState<ChainId, Transaction>\n    Provider?: ProviderState<ChainId, ProviderType, NetworkType>\n}\n","import Ethereum from '@masknet/web3-constants/evm/ethereum.json'\nimport DeBank from '@masknet/web3-constants/evm/debank.json'\nimport CoinGecko from '@masknet/web3-constants/evm/coingecko.json'\nimport Gitcoin from '@masknet/web3-constants/evm/gitcoin.json'\nimport OpenOcean from '@masknet/web3-constants/evm/openocean.json'\nimport RedPacket from '@masknet/web3-constants/evm/red-packet.json'\nimport NftRedPacket from '@masknet/web3-constants/evm/nft-red-packet.json'\nimport Token from '@masknet/web3-constants/evm/token.json'\nimport Trader from '@masknet/web3-constants/evm/trader.json'\nimport Trending from '@masknet/web3-constants/evm/trending.json'\nimport MaskBox from '@masknet/web3-constants/evm/mask-box.json'\nimport RPC from '@masknet/web3-constants/evm/rpc.json'\nimport Etherscan from '@masknet/web3-constants/evm/etherscan.json'\nimport TokenList from '@masknet/web3-constants/evm/token-list.json'\nimport TokenAssetBaseURL from '@masknet/web3-constants/evm/token-asset-base-url.json'\nimport ArtBlocks from '@masknet/web3-constants/evm/artblocks.json'\nimport Aave from '@masknet/web3-constants/evm/aave.json'\nimport Lido from '@masknet/web3-constants/evm/lido.json'\nimport Pet from '@masknet/web3-constants/evm/pet.json'\nimport SmartPay from '@masknet/web3-constants/evm/smart-pay.json'\nimport ENS from '@masknet/web3-constants/evm/ens.json'\nimport Arb from '@masknet/web3-constants/evm/arb.json'\nimport SpaceId from '@masknet/web3-constants/evm/space-id.json'\nimport LensProfile from '@masknet/web3-constants/evm/lens-profile.json'\nimport GoPlusLabs from '@masknet/web3-constants/evm/gopluslabs.json'\nimport Lens from '@masknet/web3-constants/evm/lens.json'\nimport CryptoPunks from '@masknet/web3-constants/evm/cryptopunks.json'\nimport Airdrop from '@masknet/web3-constants/evm/airdrop.json'\n\nimport {\n    transformAllHook,\n    transformHook,\n    transformAll,\n    transform,\n    transformAllFromJSON,\n    transformFromJSON,\n} from '@masknet/web3-shared-base'\nimport { getEnumAsArray } from '@masknet/kit'\nimport { ChainId } from '../types/index.js'\n\nfunction getEnvConstants(key: 'WEB3_CONSTANTS_RPC') {\n    try {\n        const map = {\n            WEB3_CONSTANTS_RPC: process.env.WEB3_CONSTANTS_RPC,\n        }\n        return map[key] ?? ''\n    } catch {\n        return ''\n    }\n}\n\nexport const ChainIdList = getEnumAsArray(ChainId).map((x) => x.value)\n\nexport const getEthereumConstant = transform(ChainId, Ethereum)\nexport const getEthereumConstants = transformAll(ChainId, Ethereum)\nexport const useEthereumConstant = transformHook(getEthereumConstants)\nexport const useEthereumConstants = transformAllHook(getEthereumConstants)\n\nexport const getDeBankConstant = transform(ChainId, DeBank)\nexport const getDeBankConstants = transformAll(ChainId, DeBank)\nexport const useDeBankConstant = transformHook(getDeBankConstants)\nexport const useDeBankConstants = transformAllHook(getDeBankConstants)\n\nexport const getCoinGeckoConstant = transform(ChainId, CoinGecko)\nexport const getCoinGeckoConstants = transformAll(ChainId, CoinGecko)\nexport const useCoinGeckoConstant = transformHook(getCoinGeckoConstants)\nexport const useCoinGeckoConstants = transformAllHook(getCoinGeckoConstants)\n\nexport const getGitcoinConstant = transform(ChainId, Gitcoin)\nexport const getGitcoinConstants = transformAll(ChainId, Gitcoin)\nexport const useGitcoinConstant = transformHook(getGitcoinConstants)\nexport const useGitcoinConstants = transformAllHook(getGitcoinConstants)\n\nexport const getOpenOceanConstant = transform(ChainId, OpenOcean)\nexport const getOpenOceanConstants = transformAll(ChainId, OpenOcean)\nexport const useOpenOceanConstant = transformHook(getOpenOceanConstants)\nexport const useOpenOceanConstants = transformAllHook(getOpenOceanConstants)\n\nexport const getRedPacketConstant = transform(ChainId, RedPacket)\nexport const getRedPacketConstants = transformAll(ChainId, RedPacket)\nexport const useRedPacketConstant = transformHook(getRedPacketConstants)\nexport const useRedPacketConstants = transformAllHook(getRedPacketConstants)\n\nexport const getTokenConstant = transform(ChainId, Token)\nexport const getTokenConstants = transformAll(ChainId, Token)\nexport const useTokenConstant = transformHook(getTokenConstants)\nexport const useTokenConstants = transformAllHook(getTokenConstants)\n\nexport const getTraderConstant = transform(ChainId, Trader)\nexport const getTraderConstants = transformAll(ChainId, Trader)\nexport const useTraderConstant = transformHook(getTraderConstants)\nexport const useTraderConstants = transformAllHook(getTraderConstants)\n\nexport const getTrendingConstant = transform(ChainId, Trending)\nexport const getTrendingConstants = transformAll(ChainId, Trending)\nexport const useTrendingConstant = transformHook(getTrendingConstants)\nexport const useTrendingConstants = transformAllHook(getTrendingConstants)\n\nexport const getMaskBoxConstant = transform(ChainId, MaskBox)\nexport const getMaskBoxConstants = transformAll(ChainId, MaskBox)\nexport const useMaskBoxConstant = transformHook(getMaskBoxConstants)\nexport const useMaskBoxConstants = transformAllHook(getMaskBoxConstants)\n\nexport const getRPCConstants = transformAllFromJSON(ChainId, getEnvConstants('WEB3_CONSTANTS_RPC'), RPC)\nexport const getRPCConstant = transformFromJSON(ChainId, getEnvConstants('WEB3_CONSTANTS_RPC'), RPC)\nexport const useRPCConstant = transformHook(getRPCConstants)\nexport const useRPCConstants = transformAllHook(getRPCConstants)\n\nexport const getEtherscanConstant = transform(ChainId, Etherscan)\nexport const getEtherscanConstants = transformAll(ChainId, Etherscan)\nexport const useEtherscanConstant = transformHook(getEtherscanConstants)\nexport const useEtherscanConstants = transformAllHook(getEtherscanConstants)\n\nexport const getTokenListConstant = transform(ChainId, TokenList)\nexport const getTokenListConstants = transformAll(ChainId, TokenList)\nexport const useTokenListConstant = transformHook(getTokenListConstants)\nexport const useTokenListConstants = transformAllHook(getTokenListConstants)\n\nexport const getTokenAssetBaseURLConstant = transform(ChainId, TokenAssetBaseURL)\nexport const getTokenAssetBaseURLConstants = transformAll(ChainId, TokenAssetBaseURL)\nexport const useTokenAssetBaseURLConstant = transformHook(getTokenAssetBaseURLConstants)\nexport const useTokenAssetBaseURLConstants = transformAllHook(getTokenAssetBaseURLConstants)\n\nexport const getArtBlocksConstant = transform(ChainId, ArtBlocks)\nexport const getArtBlocksConstants = transformAll(ChainId, ArtBlocks)\nexport const useArtBlocksConstant = transformHook(getArtBlocksConstants)\nexport const useArtBlocksConstants = transformAllHook(getArtBlocksConstants)\n\nexport const getNftRedPacketConstant = transform(ChainId, NftRedPacket)\nexport const getNftRedPacketConstants = transformAll(ChainId, NftRedPacket)\nexport const useNftRedPacketConstant = transformHook(getNftRedPacketConstants)\nexport const useNftRedPacketConstants = transformAllHook(getNftRedPacketConstants)\n\nexport const getAaveConstant = transform(ChainId, Aave)\nexport const getAaveConstants = transformAll(ChainId, Aave)\nexport const useAaveConstant = transformHook(getAaveConstants)\nexport const useAaveConstants = transformAllHook(getAaveConstants)\n\nexport const getLidoConstant = transform(ChainId, Lido)\nexport const getLidoConstants = transformAll(ChainId, Lido)\nexport const useLidoConstant = transformHook(getLidoConstants)\nexport const useLidoConstants = transformAllHook(getLidoConstants)\n\nexport const getPetConstant = transform(ChainId, Pet)\nexport const getPetConstants = transformAll(ChainId, Pet)\nexport const usePetConstant = transformHook(getPetConstants)\nexport const usePetConstants = transformAllHook(getPetConstants)\n\nexport const getSmartPayConstant = transform(ChainId, SmartPay)\nexport const getSmartPayConstants = transformAll(ChainId, SmartPay)\nexport const useSmartPayConstant = transformHook(getSmartPayConstants)\nexport const useSmartPayConstants = transformAllHook(getSmartPayConstants)\n\nexport const getENSConstants = transformAll(ChainId, ENS)\nexport const getArbConstants = transformAll(ChainId, Arb)\nexport const getSpaceIdConstants = transformAll(ChainId, SpaceId)\nexport const getLensProfileConstants = transformAll(ChainId, LensProfile)\nexport const getGoPlusLabsConstants = transformAll(ChainId, GoPlusLabs)\n\nexport const getLensConstant = transform(ChainId, Lens)\nexport const getLensConstants = transformAll(ChainId, Lens)\nexport const useLensConstant = transformHook(getLensConstants)\nexport const useLensConstants = transformAllHook(getLensConstants)\n\nexport const getCryptoPunksConstants = transformAll(ChainId, CryptoPunks)\n\nexport const getAirdropClaimersConstant = transform(ChainId, Airdrop)\nexport const getAirdropClaimersConstants = transformAll(ChainId, Airdrop)\nexport const useAirdropClaimersConstant = transformHook(getAirdropClaimersConstants)\nexport const useAirdropClaimersConstants = transformAllHook(getAirdropClaimersConstants)\n","import { createLookupTableResolver } from '@masknet/shared-base'\nimport { isZero, type NonFungibleTokenTrait } from '@masknet/web3-shared-base'\nimport { BigNumber } from 'bignumber.js'\nimport { memoize } from 'lodash-es'\nimport { format as formatDateTime } from 'date-fns'\nimport { SchemaType } from '../types/index.js'\nimport { checksumAddress, isValidAddress } from './address.js'\nimport { isEnsSubdomain, isValidDomain } from './isValidDomain.js'\n\nexport function formatAmount(amount: BigNumber.Value = '0', decimals = 0) {\n    return new BigNumber(amount).shiftedBy(decimals).toFixed()\n}\n\nexport const formatEthereumAddress: (address: string, size?: number) => string = memoize(\n    function formatEthereumAddress(address: string, size = 0) {\n        if (!isValidAddress(address)) return address\n        const address_ = checksumAddress(address)\n        if (size === 0 || size >= 20) return address_\n        return `${address_.slice(0, Math.max(0, 2 + size))}...${address_.slice(-size)}`\n    },\n    (addr, size) => `${addr}.${size}`,\n)\n\n/**\n * timestamp in seconds or milliseconds\n */\nconst formatTimestamp = (timestamp: string) => {\n    const value = Number.parseInt(timestamp, 10) * (timestamp.length === 10 ? 1000 : 1)\n    return formatDateTime(new Date(value), 'yyyy-MM-dd HH:mm')\n}\nexport function formatTrait(trait: NonFungibleTokenTrait) {\n    if (isValidAddress(trait.value)) return formatEthereumAddress(trait.value, 4)\n    if (trait.displayType === 'date') return formatTimestamp(trait.value)\n    return trait.value\n}\n\nexport function formatHash(hash: string, size = 0) {\n    if (size === 0) return hash\n    return `${hash.slice(0, Math.max(0, 2 + size))}...${hash.slice(-size)}`\n}\n\nexport const formatSchemaType = createLookupTableResolver<SchemaType, string>(\n    {\n        [SchemaType.Native]: 'Native',\n        [SchemaType.ERC20]: 'ERC20',\n        [SchemaType.ERC721]: 'ERC721',\n        [SchemaType.ERC1155]: 'ERC1155',\n        [SchemaType.SBT]: 'SBT',\n    },\n    '',\n)\n\nexport function formatTokenId(tokenId = '', size_ = 4) {\n    const size = Math.max(2, size_)\n    const isHex = tokenId.toLowerCase().startsWith('0x')\n    const prefix = isHex ? '0x' : '#'\n    if (tokenId.length < size * 2 + prefix.length) return `#${tokenId}`\n    const head = tokenId.slice(0, isHex ? 2 + size : size)\n    const tail = tokenId.slice(-size)\n    return `${prefix}${head}...${tail}`\n}\n\nexport function formatDomainName(domain: string, size = 18, invalidIgnore?: boolean) {\n    if (!domain) return domain\n    if (!isValidDomain(domain) && !invalidIgnore) {\n        return domain\n    }\n    if (domain.length <= size) return domain\n\n    if (isEnsSubdomain(domain)) {\n        return domain.replace(/^\\[([^\\]]+?)]\\.(.*)$/, (_, hash, mainName): string => {\n            return `[${hash.slice(0, 4)}...${hash.slice(-4)}].${formatDomainName(mainName, size, invalidIgnore)}`\n        })\n    }\n\n    return domain.replace(/^(.*)\\.(\\w+)$/, (_, name, suffix): string => {\n        return `${name.slice(0, size - 6)}...${name.slice(-2)}.${suffix}`\n    })\n}\n\nexport function formatKeccakHash(hash: string, size = 0) {\n    if (!/0x\\w{64}/.test(hash)) return hash\n    if (size === 0) return hash\n    return `${hash.slice(0, Math.max(0, 2 + size))}...${hash.slice(-size)}`\n}\n\nexport function formatNumberString(input: string, size = 0) {\n    if (!/\\d+/.test(input)) return input\n    if (size === 0) return input\n    return `${input.slice(0, Math.max(0, size))}...${input.slice(-size)}`\n}\n\nexport function formatWeiToGwei(value: BigNumber.Value) {\n    return new BigNumber(value).shiftedBy(-9)\n}\n\nexport function formatWeiToEther(value: BigNumber.Value) {\n    return new BigNumber(value).shiftedBy(-18)\n}\n\nexport function formatGweiToWei(value: BigNumber.Value) {\n    return new BigNumber(value).shiftedBy(9).integerValue()\n}\n\nexport function formatEtherToGwei(value: BigNumber.Value) {\n    return new BigNumber(value).shiftedBy(9).integerValue()\n}\n\nexport function formatGas(value?: BigNumber.Value) {\n    if (!value || isZero(value)) return ''\n    const gwei = formatWeiToGwei(value)\n    if (gwei.lt('0.01')) return '<0.01 Gwei'\n    return `${gwei.toFixed(2)} Gwei`\n}\n\nexport function formatEtherToWei(value: BigNumber.Value) {\n    return new BigNumber(value).shiftedBy(18).integerValue()\n}\n\nexport function formatGweiToEther(value: BigNumber.Value) {\n    return new BigNumber(value).shiftedBy(-9)\n}\n","import { EthereumMethodType } from '../types/index.js'\n\nexport const readonlyMethodType = [\n    EthereumMethodType.ETH_GET_CODE,\n    EthereumMethodType.ETH_GAS_PRICE,\n    EthereumMethodType.ETH_BLOCK_NUMBER,\n    EthereumMethodType.ETH_GET_BALANCE,\n    EthereumMethodType.ETH_GET_BLOCK_BY_NUMBER,\n    EthereumMethodType.ETH_GET_BLOCK_BY_HASH,\n    EthereumMethodType.ETH_GET_TRANSACTION_BY_HASH,\n    EthereumMethodType.ETH_GET_TRANSACTION_RECEIPT,\n    EthereumMethodType.ETH_GET_TRANSACTION_COUNT,\n    EthereumMethodType.ETH_GET_FILTER_CHANGES,\n    EthereumMethodType.ETH_NEW_PENDING_TRANSACTION_FILTER,\n    EthereumMethodType.ETH_ESTIMATE_GAS,\n    EthereumMethodType.ETH_CALL,\n    EthereumMethodType.ETH_GET_LOGS,\n] as const\nObject.freeze(readonlyMethodType)\nexport function isReadonlyMethodType(type: EthereumMethodType) {\n    return (readonlyMethodType as readonly EthereumMethodType[]).includes(type)\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.copy = void 0;\nconst copy = (source, dest, sx = 0, sy = 0, sw = source.width - sx, sh = source.height - sy, dx = 0, dy = 0) => {\n    sx = sx | 0;\n    sy = sy | 0;\n    sw = sw | 0;\n    sh = sh | 0;\n    dx = dx | 0;\n    dy = dy | 0;\n    if (sw <= 0 || sh <= 0)\n        return;\n    const sourceData = new Uint32Array(source.data.buffer);\n    const destData = new Uint32Array(dest.data.buffer);\n    for (let y = 0; y < sh; y++) {\n        const sourceY = sy + y;\n        if (sourceY < 0 || sourceY >= source.height)\n            continue;\n        const destY = dy + y;\n        if (destY < 0 || destY >= dest.height)\n            continue;\n        for (let x = 0; x < sw; x++) {\n            const sourceX = sx + x;\n            if (sourceX < 0 || sourceX >= source.width)\n                continue;\n            const destX = dx + x;\n            if (destX < 0 || destX >= dest.width)\n                continue;\n            const sourceIndex = sourceY * source.width + sourceX;\n            const destIndex = destY * dest.width + destX;\n            destData[destIndex] = sourceData[sourceIndex];\n        }\n    }\n};\nexports.copy = copy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateImageFactory = (fill = [0, 0, 0, 0], channels = 4) => {\n    channels = Math.floor(channels);\n    if (isNaN(channels) || channels < 1) {\n        throw TypeError('channels should be a positive non-zero number');\n    }\n    if (!('length' in fill) || fill.length < channels) {\n        throw TypeError(`fill should be iterable with at least ${channels} members`);\n    }\n    fill = (new Uint8ClampedArray(fill)).slice(0, channels);\n    const allZero = fill.every(v => v === 0);\n    const createImage = (width, height, data) => {\n        if (width === undefined || height === undefined) {\n            throw TypeError('Not enough arguments');\n        }\n        width = Math.floor(width);\n        height = Math.floor(height);\n        if (isNaN(width) || width < 1 || isNaN(height) || height < 1) {\n            throw TypeError('Index or size is negative or greater than the allowed amount');\n        }\n        const length = width * height * channels;\n        if (data === undefined) {\n            data = new Uint8ClampedArray(length);\n        }\n        if (data instanceof Uint8ClampedArray) {\n            if (data.length !== length) {\n                throw TypeError('Index or size is negative or greater than the allowed amount');\n            }\n            if (!allZero) {\n                for (let y = 0; y < height; y++) {\n                    for (let x = 0; x < width; x++) {\n                        const index = (y * width + x) * channels;\n                        for (let c = 0; c < channels; c++) {\n                            data[index + c] = fill[c];\n                        }\n                    }\n                }\n            }\n            return {\n                get width() { return width; },\n                get height() { return height; },\n                get data() { return data; }\n            };\n        }\n        throw TypeError('Expected data to be Uint8ClampedArray or undefined');\n    };\n    return createImage;\n};\nexports.createImage = exports.CreateImageFactory();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convolve = void 0;\nconst fixedFracBits = 14;\nconst convolve = (source, dest, sw, sh, dw, filters) => {\n    let srcOffset = 0;\n    let destOffset = 0;\n    // For each row\n    for (let sourceY = 0; sourceY < sh; sourceY++) {\n        let filterPtr = 0;\n        // Apply precomputed filters to each destination row point\n        for (let destX = 0; destX < dw; destX++) {\n            // Get the filter that determines the current output pixel.\n            const filterShift = filters[filterPtr++];\n            let srcPtr = (srcOffset + (filterShift * 4)) | 0;\n            let r = 0;\n            let g = 0;\n            let b = 0;\n            let a = 0;\n            // Apply the filter to the row to get the destination pixel r, g, b, a\n            for (let filterSize = filters[filterPtr++]; filterSize > 0; filterSize--) {\n                const filterValue = filters[filterPtr++];\n                r = (r + filterValue * source[srcPtr]) | 0;\n                g = (g + filterValue * source[srcPtr + 1]) | 0;\n                b = (b + filterValue * source[srcPtr + 2]) | 0;\n                a = (a + filterValue * source[srcPtr + 3]) | 0;\n                srcPtr = (srcPtr + 4) | 0;\n            }\n            // Bring this value back in range. All of the filter scaling factors\n            // are in fixed point with fixedFracBits bits of fractional part.\n            //\n            // (!) Add 1/2 of value before clamping to get proper rounding. In other\n            // case brightness loss will be noticeable if you resize image with white\n            // border and place it on white background.\n            //\n            dest[destOffset] = (r + (1 << 13)) >> fixedFracBits;\n            dest[destOffset + 1] = (g + (1 << 13)) >> fixedFracBits;\n            dest[destOffset + 2] = (b + (1 << 13)) >> fixedFracBits;\n            dest[destOffset + 3] = (a + (1 << 13)) >> fixedFracBits;\n            destOffset = (destOffset + sh * 4) | 0;\n        }\n        destOffset = ((sourceY + 1) * 4) | 0;\n        srcOffset = ((sourceY + 1) * sw * 4) | 0;\n    }\n};\nexports.convolve = convolve;\n/*\n  Adapted to typescript from pica: https://github.com/nodeca/pica\n\n  (The MIT License)\n\n  Copyright (C) 2014-2017 by Vitaly Puzrin\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filters = void 0;\nconst fixedFracBits = 14;\nconst filterValue = (x, a) => {\n    if (x <= -a || x >= a)\n        return 0;\n    if (x == 0)\n        return 0;\n    // appears to do nothing?\n    // if ( x > -1.19209290e-07 && x < 1.19209290e-07 ) return 1\n    const xPi = x * Math.PI;\n    return (Math.sin(xPi) / xPi) * Math.sin(xPi / a) / (xPi / a);\n};\nconst toFixedPoint = (value) => Math.round(value * ((1 << fixedFracBits) - 1));\nconst filters = (srcSize, destSize, scale, offset, use2) => {\n    const a = use2 ? 2 : 3;\n    const scaleInverted = 1 / scale;\n    const scaleClamped = Math.min(1, scale); // For upscale\n    // Filter window (averaging interval), scaled to src image\n    const srcWindow = a / scaleClamped;\n    const maxFilterElementSize = Math.floor((srcWindow + 1) * 2);\n    const packedFilter = new Int16Array((maxFilterElementSize + 2) * destSize);\n    let packedFilterPtr = 0;\n    // For each destination pixel calculate source range and built filter values\n    for (let destPixel = 0; destPixel < destSize; destPixel++) {\n        // Scaling should be done relative to central pixel point\n        const sourcePixel = (destPixel + 0.5) * scaleInverted + offset;\n        const sourceFirst = Math.max(0, Math.floor(sourcePixel - srcWindow));\n        const sourceLast = Math.min(srcSize - 1, Math.ceil(sourcePixel + srcWindow));\n        const filterElementSize = sourceLast - sourceFirst + 1;\n        const floatFilter = new Float32Array(filterElementSize);\n        const fxpFilter = new Int16Array(filterElementSize);\n        let total = 0;\n        // Fill filter values for calculated range\n        let index = 0;\n        for (let pixel = sourceFirst; pixel <= sourceLast; pixel++) {\n            const floatValue = filterValue(((pixel + 0.5) - sourcePixel) * scaleClamped, a);\n            total += floatValue;\n            floatFilter[index] = floatValue;\n            index++;\n        }\n        // Normalize filter, convert to fixed point and accumulate conversion error\n        let filterTotal = 0;\n        for (let index = 0; index < floatFilter.length; index++) {\n            const filterValue = floatFilter[index] / total;\n            filterTotal += filterValue;\n            fxpFilter[index] = toFixedPoint(filterValue);\n        }\n        // Compensate normalization error, to minimize brightness drift\n        fxpFilter[destSize >> 1] += toFixedPoint(1 - filterTotal);\n        //\n        // Now pack filter to useable form\n        //\n        // 1. Trim heading and tailing zero values, and compensate shitf/length\n        // 2. Put all to single array in this format:\n        //\n        //    [ pos shift, data length, value1, value2, value3, ... ]\n        //\n        let leftNotEmpty = 0;\n        while (leftNotEmpty < fxpFilter.length && fxpFilter[leftNotEmpty] === 0) {\n            leftNotEmpty++;\n        }\n        let rightNotEmpty = fxpFilter.length - 1;\n        while (rightNotEmpty > 0 && fxpFilter[rightNotEmpty] === 0) {\n            rightNotEmpty--;\n        }\n        const filterShift = sourceFirst + leftNotEmpty;\n        const filterSize = rightNotEmpty - leftNotEmpty + 1;\n        packedFilter[packedFilterPtr++] = filterShift; // shift\n        packedFilter[packedFilterPtr++] = filterSize; // size\n        packedFilter.set(fxpFilter.subarray(leftNotEmpty, rightNotEmpty + 1), packedFilterPtr);\n        packedFilterPtr += filterSize;\n    }\n    return packedFilter;\n};\nexports.filters = filters;\n/*\n  Adapted to typescript from pica: https://github.com/nodeca/pica\n\n  (The MIT License)\n\n  Copyright (C) 2014-2017 by Vitaly Puzrin\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lanczos2 = exports.lanczos = void 0;\nconst copy_1 = require(\"@rgba-image/copy\");\nconst create_image_1 = require(\"@rgba-image/create-image\");\nconst filters_1 = require(\"./filters\");\nconst convolve_1 = require(\"./convolve\");\nconst resize = (source, dest, use2 = false) => {\n    const xRatio = dest.width / source.width;\n    const yRatio = dest.height / source.height;\n    const filtersX = filters_1.filters(source.width, dest.width, xRatio, 0, use2);\n    const filtersY = filters_1.filters(source.height, dest.height, yRatio, 0, use2);\n    const tmp = new Uint8ClampedArray(dest.width * source.height * 4);\n    convolve_1.convolve(source.data, tmp, source.width, source.height, dest.width, filtersX);\n    convolve_1.convolve(tmp, dest.data, source.height, dest.width, dest.height, filtersY);\n};\nconst lanczos = (source, dest, sx = 0, sy = 0, sw = source.width - sx, sh = source.height - sy, dx = 0, dy = 0, dw = dest.width - dx, dh = dest.height - dy) => {\n    sx = sx | 0;\n    sy = sy | 0;\n    sw = sw | 0;\n    sh = sh | 0;\n    dx = dx | 0;\n    dy = dy | 0;\n    dw = dw | 0;\n    dh = dh | 0;\n    if (sw <= 0 || sh <= 0 || dw <= 0 || dh <= 0)\n        return;\n    if (sx === 0 && sy === 0 && sw === source.width && sh === source.height && dx === 0 && dy === 0 && dw === dest.width && dh === dest.height) {\n        resize(source, dest);\n        return;\n    }\n    /*\n      this is more expensive than the way we do in other rgba-lib functions, but\n      I don't understand the pica code that I based this on well enough to work\n      out how to use regions without doing crops first\n  \n      however copy is pretty fast compared to lanczos, so the difference is slight\n    */\n    const croppedSource = create_image_1.createImage(sw, sh);\n    const croppedDest = create_image_1.createImage(dw, dh);\n    copy_1.copy(source, croppedSource, sx, sy);\n    resize(croppedSource, croppedDest);\n    copy_1.copy(croppedDest, dest, 0, 0, croppedDest.width, croppedDest.height, dx, dy);\n};\nexports.lanczos = lanczos;\nconst lanczos2 = (source, dest, sx = 0, sy = 0, sw = source.width - sx, sh = source.height - sy, dx = 0, dy = 0, dw = dest.width - dx, dh = dest.height - dy) => {\n    sx = sx | 0;\n    sy = sy | 0;\n    sw = sw | 0;\n    sh = sh | 0;\n    dx = dx | 0;\n    dy = dy | 0;\n    dw = dw | 0;\n    dh = dh | 0;\n    if (sw <= 0 || sh <= 0 || dw <= 0 || dh <= 0)\n        return;\n    if (sx === 0 && sy === 0 && sw === source.width && sh === source.height && dx === 0 && dy === 0 && dw === dest.width && dh === dest.height) {\n        resize(source, dest, true);\n        return;\n    }\n    /*\n      this is more expensive than the way we do in other rgba-lib functions, but\n      I don't understand the pica code that I based this on well enough to work\n      out how to use regions without doing crops first\n  \n      however copy is pretty fast compared to lanczos, so the difference is slight\n    */\n    const croppedSource = create_image_1.createImage(sw, sh);\n    const croppedDest = create_image_1.createImage(dw, dh);\n    copy_1.copy(source, croppedSource, sx, sy);\n    resize(croppedSource, croppedDest, true);\n    copy_1.copy(croppedDest, dest, 0, 0, croppedDest.width, croppedDest.height, dx, dy);\n};\nexports.lanczos2 = lanczos2;\n","/*! Case - v1.6.2 - 2020-03-24\n* Copyright (c) 2020 Nathan Bubna; Licensed MIT, GPL */\n(function() {\n    \"use strict\";\n    var unicodes = function(s, prefix) {\n        prefix = prefix || '';\n        return s.replace(/(^|-)/g, '$1\\\\u'+prefix).replace(/,/g, '\\\\u'+prefix);\n    },\n    basicSymbols = unicodes('20-26,28-2F,3A-40,5B-60,7B-7E,A0-BF,D7,F7', '00'),\n    baseLowerCase = 'a-z'+unicodes('DF-F6,F8-FF', '00'),\n    baseUpperCase = 'A-Z'+unicodes('C0-D6,D8-DE', '00'),\n    improperInTitle = 'A|An|And|As|At|But|By|En|For|If|In|Of|On|Or|The|To|Vs?\\\\.?|Via',\n    regexps = function(symbols, lowers, uppers, impropers) {\n        symbols = symbols || basicSymbols;\n        lowers = lowers || baseLowerCase;\n        uppers = uppers || baseUpperCase;\n        impropers = impropers || improperInTitle;\n        return {\n            capitalize: new RegExp('(^|['+symbols+'])(['+lowers+'])', 'g'),\n            pascal: new RegExp('(^|['+symbols+'])+(['+lowers+uppers+'])', 'g'),\n            fill: new RegExp('['+symbols+']+(.|$)','g'),\n            sentence: new RegExp('(^\\\\s*|[\\\\?\\\\!\\\\.]+\"?\\\\s+\"?|,\\\\s+\")(['+lowers+'])', 'g'),\n            improper: new RegExp('\\\\b('+impropers+')\\\\b', 'g'),\n            relax: new RegExp('([^'+uppers+'])(['+uppers+']*)(['+uppers+'])(?=[^'+uppers+']|$)', 'g'),\n            upper: new RegExp('^[^'+lowers+']+$'),\n            hole: /[^\\s]\\s[^\\s]/,\n            apostrophe: /'/g,\n            room: new RegExp('['+symbols+']')\n        };\n    },\n    re = regexps(),\n    _ = {\n        re: re,\n        unicodes: unicodes,\n        regexps: regexps,\n        types: [],\n        up: String.prototype.toUpperCase,\n        low: String.prototype.toLowerCase,\n        cap: function(s) {\n            return _.up.call(s.charAt(0))+s.slice(1);\n        },\n        decap: function(s) {\n            return _.low.call(s.charAt(0))+s.slice(1);\n        },\n        deapostrophe: function(s) {\n            return s.replace(re.apostrophe, '');\n        },\n        fill: function(s, fill, deapostrophe) {\n            if (fill != null) {\n                s = s.replace(re.fill, function(m, next) {\n                    return next ? fill + next : '';\n                });\n            }\n            if (deapostrophe) {\n                s = _.deapostrophe(s);\n            }\n            return s;\n        },\n        prep: function(s, fill, pascal, upper) {\n            s = s == null ? '' : s + '';// force to string\n            if (!upper && re.upper.test(s)) {\n                s = _.low.call(s);\n            }\n            if (!fill && !re.hole.test(s)) {\n                var holey = _.fill(s, ' ');\n                if (re.hole.test(holey)) {\n                    s = holey;\n                }\n            }\n            if (!pascal && !re.room.test(s)) {\n                s = s.replace(re.relax, _.relax);\n            }\n            return s;\n        },\n        relax: function(m, before, acronym, caps) {\n            return before + ' ' + (acronym ? acronym+' ' : '') + caps;\n        }\n    },\n    Case = {\n        _: _,\n        of: function(s) {\n            for (var i=0,m=_.types.length; i<m; i++) {\n                if (Case[_.types[i]].apply(Case, arguments) === s){ return _.types[i]; }\n            }\n        },\n        flip: function(s) {\n            return s.replace(/\\w/g, function(l) {\n                return (l == _.up.call(l) ? _.low : _.up).call(l);\n            });\n        },\n        random: function(s) {\n            return s.replace(/\\w/g, function(l) {\n                return (Math.round(Math.random()) ? _.up : _.low).call(l);\n            });\n        },\n        type: function(type, fn) {\n            Case[type] = fn;\n            _.types.push(type);\n        }\n    },\n    types = {\n        lower: function(s, fill, deapostrophe) {\n            return _.fill(_.low.call(_.prep(s, fill)), fill, deapostrophe);\n        },\n        snake: function(s) {\n            return Case.lower(s, '_', true);\n        },\n        constant: function(s) {\n            return Case.upper(s, '_', true);\n        },\n        camel: function(s) {\n            return _.decap(Case.pascal(s));\n        },\n        kebab: function(s) {\n            return Case.lower(s, '-', true);\n        },\n        upper: function(s, fill, deapostrophe) {\n            return _.fill(_.up.call(_.prep(s, fill, false, true)), fill, deapostrophe);\n        },\n        capital: function(s, fill, deapostrophe) {\n            return _.fill(_.prep(s).replace(re.capitalize, function(m, border, letter) {\n                return border+_.up.call(letter);\n            }), fill, deapostrophe);\n        },\n        header: function(s) {\n            return Case.capital(s, '-', true);\n        },\n        pascal: function(s) {\n            return _.fill(_.prep(s, false, true).replace(re.pascal, function(m, border, letter) {\n                return _.up.call(letter);\n            }), '', true);\n        },\n        title: function(s) {\n            return Case.capital(s).replace(re.improper, function(small, p, i, s) {\n                return i > 0 && i < s.lastIndexOf(' ') ? _.low.call(small) : small;\n            });\n        },\n        sentence: function(s, names, abbreviations) {\n            s = Case.lower(s).replace(re.sentence, function(m, prelude, letter) {\n                return prelude + _.up.call(letter);\n            });\n            if (names) {\n                names.forEach(function(name) {\n                    s = s.replace(new RegExp('\\\\b'+Case.lower(name)+'\\\\b', \"g\"), _.cap);\n                });\n            }\n            if (abbreviations) {\n                abbreviations.forEach(function(abbr) {\n                    s = s.replace(new RegExp('(\\\\b'+Case.lower(abbr)+'\\\\. +)(\\\\w)'), function(m, abbrAndSpace, letter) {\n                        return abbrAndSpace + _.low.call(letter);\n                    });\n                });\n            }\n            return s;\n        }\n    };\n\n    // TODO: Remove \"squish\" in a future breaking release.\n    types.squish = types.pascal;\n    \n    // Allow import default\n    Case.default = Case;\n\n    for (var type in types) {\n        Case.type(type, types[type]);\n    }\n    // export Case (AMD, commonjs, or global)\n    var define = typeof define === \"function\" ? define : function(){};\n    define(typeof module === \"object\" && module.exports ? module.exports = Case : this.Case = Case);\n\n}).call(this);\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_1 = require(\"./utils\");\nexports.keccak224 = (0, utils_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_1.wrapHash)(sha3_1.keccak_512);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.schnorr = exports.Signature = exports.Point = exports.CURVE = exports.utils = exports.getSharedSecret = exports.recoverPublicKey = exports.verify = exports.signSync = exports.sign = exports.getPublicKey = void 0;\nconst hmac_1 = require(\"@noble/hashes/hmac\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst secp256k1_1 = require(\"@noble/secp256k1\");\nvar secp256k1_2 = require(\"@noble/secp256k1\");\nObject.defineProperty(exports, \"getPublicKey\", { enumerable: true, get: function () { return secp256k1_2.getPublicKey; } });\nObject.defineProperty(exports, \"sign\", { enumerable: true, get: function () { return secp256k1_2.sign; } });\nObject.defineProperty(exports, \"signSync\", { enumerable: true, get: function () { return secp256k1_2.signSync; } });\nObject.defineProperty(exports, \"verify\", { enumerable: true, get: function () { return secp256k1_2.verify; } });\nObject.defineProperty(exports, \"recoverPublicKey\", { enumerable: true, get: function () { return secp256k1_2.recoverPublicKey; } });\nObject.defineProperty(exports, \"getSharedSecret\", { enumerable: true, get: function () { return secp256k1_2.getSharedSecret; } });\nObject.defineProperty(exports, \"utils\", { enumerable: true, get: function () { return secp256k1_2.utils; } });\nObject.defineProperty(exports, \"CURVE\", { enumerable: true, get: function () { return secp256k1_2.CURVE; } });\nObject.defineProperty(exports, \"Point\", { enumerable: true, get: function () { return secp256k1_2.Point; } });\nObject.defineProperty(exports, \"Signature\", { enumerable: true, get: function () { return secp256k1_2.Signature; } });\nObject.defineProperty(exports, \"schnorr\", { enumerable: true, get: function () { return secp256k1_2.schnorr; } });\n// Enable sync API for noble-secp256k1\nsecp256k1_1.utils.hmacSha256Sync = (key, ...messages) => {\n    const h = hmac_1.hmac.create(sha256_1.sha256, key);\n    messages.forEach(msg => h.update(msg));\n    return h.digest();\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\n// buf.toString('hex') -> toHex(buf)\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\nexports.crypto = (() => {\n    const webCrypto = typeof self === \"object\" && \"crypto\" in self ? self.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","/* (ignored) */","/* (ignored) */","export function encodeText(input) {\n    return new TextEncoder().encode(input);\n}\nexport function decodeText(input) {\n    if (input instanceof ArrayBuffer)\n        return new TextDecoder().decode(input);\n    return new TextDecoder().decode(Uint8Array.from(input));\n}\nexport function decodeArrayBuffer(input) {\n    const decoded = atob(input);\n    const buffer = new Uint8Array(decoded.length);\n    for (let i = 0; i < decoded.length; i++) {\n        buffer[i] = decoded.charCodeAt(i);\n    }\n    return buffer.buffer;\n}\nexport function encodeArrayBuffer(input) {\n    let encoded = '';\n    for (const code of input instanceof ArrayBuffer ? new Uint8Array(input) : Uint8Array.from(input)) {\n        encoded += String.fromCharCode(code);\n    }\n    return btoa(encoded);\n}\n","export { memoizePromise } from './ecmascript/memoizePromise.js';\nexport { defer } from './ecmascript/defer.js';\nexport { concatArrayBuffer } from './ecmascript/concatArrayBuffer.js';\nexport { isArrayBufferEqual } from './ecmascript/isArrayBufferEqual.js';\nexport { decodeHexString, encodeHexString } from './ecmascript/hex-string.js';\nexport { lazy } from './ecmascript/lazyDecorator.js';\nexport { detectAudioSupport, detectImageSupport, detectVideoSupport, findAvailableImageURL, } from './media/detectMediaSupport.js';\nexport { formatFileSize } from './media/file.js';\nexport { getDimensionAsJPEG, getDimensionAsPNG } from './media/image.js';\nexport { safeUnreachable, unreachable } from './typescript/control-flow.js';\nexport { getEnumAsArray } from './typescript/enum.js';\nexport { assertNonNull, isNonNull } from './typescript/nonNull.js';\nexport { blobToDataURL } from './web/blob.js';\nexport { combineAbortSignal } from './web/combineAbortSignal.js';\nexport { delay } from './web/delay.js';\nexport { waitDocumentReadyState } from './web/document.readyState.js';\nexport { decodeArrayBuffer, decodeText, encodeArrayBuffer, encodeText } from './web/encode-text-arraybuffer.js';\nexport { timeout } from './web/timeout.js';\n","export function assertNonNull(val, message = 'Unexpected nil value detected') {\n    if (val === null || val === undefined)\n        throw new Error(message);\n    return val;\n}\nexport function isNonNull(x) {\n    return x !== undefined && x !== null;\n}\n","export function blobToDataURL(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.addEventListener('error', () => {\n            reject(reader.error);\n        });\n        reader.addEventListener('load', () => {\n            resolve(reader.result);\n        });\n        reader.readAsDataURL(blob);\n    });\n}\n","import { unreachable } from '../index.js';\nexport function waitDocumentReadyState(target) {\n    if (ok(target))\n        return Promise.resolve();\n    return new Promise((resolve) => {\n        const callback = () => {\n            if (ok(target)) {\n                resolve();\n                document.removeEventListener('readystatechange', callback);\n            }\n        };\n        document.addEventListener('readystatechange', callback, { passive: true });\n    });\n}\nfunction ok(target, current = document.readyState) {\n    return score(target) <= score(current);\n}\nfunction score(x) {\n    if (x === 'loading')\n        return 0;\n    if (x === 'interactive')\n        return 1;\n    if (x === 'complete')\n        return 2;\n    unreachable(x);\n}\n","/** @internal */\nexport function createKeyMaterial(key, type, name, usage, extractable) {\n    return {\n        __proto__: null,\n        name,\n        type,\n        key,\n        extractable: !!extractable,\n        usage,\n    };\n}\n/** @internal */\nexport function usageToFlag(name, usageList, DOMException) {\n    let flag = 0 /* KeyUsages.None */;\n    for (const usage of usageList) {\n        if (name === 'ECDH') {\n            if (usage === 'deriveBits') {\n                flag |= 1 /* KeyUsages.deriveBits */;\n                continue;\n            }\n            else if (usage === 'deriveKey') {\n                flag |= 2 /* KeyUsages.deriveKey */;\n                continue;\n            }\n        }\n        else if (name === 'ECDSA') {\n            if (usage === 'sign') {\n                flag |= 4 /* KeyUsages.sign */;\n                continue;\n            }\n            else if (usage === 'verify') {\n                flag |= 8 /* KeyUsages.verify */;\n                continue;\n            }\n        }\n        throw new DOMException('Cannot create a key using the specified key usages.', 'SyntaxError');\n    }\n    if (flag === 0 /* KeyUsages.None */) {\n        throw new DOMException('Usages cannot be empty when creating a key.', 'SyntaxError');\n    }\n    // if (name === 'ECDSA' && flag !== (KeyUsages.sign | KeyUsages.verify)) {\n    //     throw new DOMException('Cannot create a key using the specified key usages.', 'SyntaxError')\n    // }\n    return flag;\n}\n/** @internal */\nexport function usageFromFlag(KeyMaterial) {\n    const { usage, name, type } = KeyMaterial;\n    if (name === 'ECDH') {\n        const result = [];\n        if (type === 'private')\n            return [];\n        if (usage & 2 /* KeyUsages.deriveKey */)\n            result.push('deriveKey');\n        if (usage & 1 /* KeyUsages.deriveBits */)\n            result.push('deriveBits');\n        return result;\n    }\n    else {\n        if (type === 'private')\n            return ['sign'];\n        return ['verify'];\n    }\n}\n","import { usageFromFlag } from './key.js';\n/** @internal */\nexport function createMemory(nativeCryptoKey) {\n    var _a;\n    const nativeCryptoKeyGetter = nativeCryptoKey\n        ? (_a = Object.getOwnPropertyDescriptor(nativeCryptoKey.prototype, 'type')) === null || _a === void 0 ? void 0 : _a.get\n        : undefined;\n    const shimKeys = new WeakMap();\n    class CryptoKey {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        [Symbol.hasInstance](instance) {\n            if (shimKeys.has(instance))\n                return true;\n            if (isNativeCryptoKey(instance))\n                return true;\n            return false;\n        }\n        get algorithm() {\n            const { name } = get(this);\n            return { name, namedCurve: 'K-256' };\n        }\n        get extractable() {\n            return get(this).extractable;\n        }\n        get type() {\n            return get(this).type;\n        }\n        get usages() {\n            return usageFromFlag(get(this));\n        }\n    }\n    Object.defineProperty(CryptoKey, Symbol.toStringTag, { configurable: true, value: 'CryptoKey' });\n    function has(object) {\n        return shimKeys.has(object);\n    }\n    function get(instance) {\n        if (!shimKeys.has(instance))\n            throw new TypeError('Illegal invocation');\n        return shimKeys.get(instance);\n    }\n    function isNativeCryptoKey(instance) {\n        if (!nativeCryptoKeyGetter)\n            return false;\n        try {\n            nativeCryptoKeyGetter.call(instance);\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    function newKey(material) {\n        const key = Object.create(CryptoKey.prototype);\n        shimKeys.set(key, material);\n        return key;\n    }\n    return { has, get, CryptoKey, newKey };\n}\n","/** @internal */\nexport function isK256Alg(alg, acceptKind) {\n    try {\n        if (typeof alg !== 'object')\n            return;\n        if (alg === null)\n            return;\n        const { name, namedCurve } = alg;\n        if (namedCurve !== 'K-256')\n            return;\n        if (acceptKind === 'any') {\n            if (name === 'ECDH' || name === 'ECDSA')\n                return name;\n        }\n        else {\n            if (name === acceptKind)\n                return name;\n        }\n        return;\n    }\n    catch (_a) {\n        return;\n    }\n}\n/** @internal */\nexport function getHashAlg(alg) {\n    try {\n        const { name } = alg.hash;\n        if (name === 'SHA-256')\n            return name;\n        if (name === 'SHA-384')\n            return name;\n        if (name === 'SHA-512')\n            return name;\n        return;\n    }\n    catch (_a) {\n        return;\n    }\n}\n// https://github.com/PeculiarVentures/webcrypto-liner/blob/3a97b53b7f187f776ea5b23889e03c3f54654811/src/mechs/ec/crypto.ts#L56\n/** @internal */\nexport function b2a(buffer) {\n    const buf = new Uint8Array(buffer);\n    const res = [];\n    for (let i = 0; i < buf.length; i++) {\n        res.push(buf[i]);\n    }\n    return res;\n}\n/** @internal */\nexport function concat(...buf) {\n    const res = new Uint8Array(buf.map((item) => item.length).reduce((prev, cur) => prev + cur));\n    let offset = 0;\n    buf.forEach((item, index) => {\n        for (let i = 0; i < item.length; i++) {\n            res[offset + i] = item[i];\n        }\n        offset += item.length;\n    });\n    return res;\n}\n/** @internal */\nexport function hex2buffer(hexString, padded) {\n    if (hexString.length % 2) {\n        hexString = '0' + hexString;\n    }\n    let res = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i++) {\n        const c = hexString.slice(i, ++i + 1);\n        res[(i - 1) / 2] = parseInt(c, 16);\n    }\n    // BN padding\n    if (padded) {\n        let len = res.length;\n        len = len > 32 ? (len > 48 ? 66 : 48) : 32;\n        if (res.length < len) {\n            res = concat(new Uint8Array(len - res.length), res);\n        }\n    }\n    return res;\n}\n/** @internal */\nexport function buffer2hex(buffer, padded) {\n    let res = '';\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < buffer.length; i++) {\n        const char = buffer[i].toString(16);\n        res += char.length % 2 ? '0' + char : char;\n    }\n    // BN padding\n    if (padded) {\n        let len = buffer.length;\n        len = len > 32 ? (len > 48 ? 66 : 48) : 32;\n        if (res.length / 2 < len) {\n            res = new Array(len * 2 - res.length + 1).join('0') + res;\n        }\n    }\n    return res;\n}\n","import { b2a, buffer2hex, hex2buffer } from '../helper.js';\nexport function signK256(key, hash) {\n    if (key.type !== 'private')\n        throw new Error();\n    if (key.name !== 'ECDSA')\n        throw new Error();\n    const array = b2a(hash);\n    const sig = key.key.sign(array);\n    const hexSignature = buffer2hex(sig.r.toArray(), true) + buffer2hex(sig.s.toArray(), true);\n    return hex2buffer(hexSignature).buffer;\n}\nexport function verifyK256(key, hash, signature) {\n    if (key.name !== 'ECDSA')\n        throw new Error();\n    const sig = {\n        r: new Uint8Array(signature.slice(0, signature.byteLength / 2)),\n        s: new Uint8Array(signature.slice(signature.byteLength / 2)),\n    };\n    const array = b2a(hash);\n    return key.key.verify(array, sig);\n}\n","import { usageToFlag, createKeyMaterial, usageFromFlag } from '../key.js';\nimport __ from 'elliptic';\nimport { Convert } from 'pvtsutils';\nimport { concat, hex2buffer } from '../helper.js';\nconst k256 = new __.ec('secp256k1');\n/** @internal */\nexport function importK256(method, name, data, extractable, usage, DOMException) {\n    if (method === 'jwk')\n        return importK256JWK(name, data, extractable, usage, DOMException);\n    return importK256Raw(name, new Uint8Array(data), extractable, usage);\n}\n/** @internal */\nexport function exportK256(format, key) {\n    if (format === 'jwk')\n        return exportK256JWK(key);\n    return exportK256Raw(key);\n}\n/** @internal */\nexport function generateK256Pair(name, extractable, usageList, DOMException) {\n    const usage = usageToFlag(name, usageList, DOMException);\n    const key = k256.genKeyPair();\n    return {\n        pub: createKeyMaterial(key, 'public', name, usage, extractable),\n        priv: createKeyMaterial(key, 'private', name, usage, extractable),\n    };\n}\n// !!! raw format can never store private key.\nfunction importK256Raw(name, buffer, extractable, usage) {\n    const key = k256.keyFromPublic(new Uint8Array(buffer));\n    return createKeyMaterial(key, 'public', name, usage, extractable);\n}\nfunction exportK256Raw(key) {\n    if (!key.extractable)\n        throw new DOMException('key is not extractable', 'InvalidAccessError');\n    return new Uint8Array(key.key.getPublic('array')).buffer;\n}\nfunction importK256JWK(name, jwk, extractable, usage, DOMException) {\n    //#region verify\n    const { d, x, y, crv, kty } = jwk;\n    const key_ops = Array.from(jwk.key_ops || []);\n    if (kty !== 'EC')\n        throw new DOMException(`The required JWK member \"kty\" was missing`, 'DataError');\n    if (crv !== 'K-256')\n        throw new DOMException(`The required JWK member \"crv\" was missing`, 'DataError');\n    if (!x)\n        throw new DOMException(`The required JWK member \"x\" was missing`, 'DataError');\n    if (!y)\n        throw new DOMException(`The required JWK member \"y\" was missing`, 'DataError');\n    let isValidKeyUsage = true;\n    if (usage & 4 /* KeyUsages.sign */)\n        if (!key_ops.includes('sign'))\n            isValidKeyUsage = false;\n    if (usage & 8 /* KeyUsages.verify */)\n        if (!key_ops.includes('verify'))\n            isValidKeyUsage = false;\n    if (!isValidKeyUsage)\n        throw new DOMException('The JWK \"key_ops\" member was inconsistent with that specified by the Web Crypto call. The JWK usage must be a superset of those requested', 'DataError');\n    //#endregion\n    // 4 is the point format.\n    const point = concat([4], new Uint8Array(Convert.FromBase64Url(x)), new Uint8Array(Convert.FromBase64Url(y)));\n    const priv = d ? Convert.FromBase64Url(d) : undefined;\n    let ecKey;\n    if (priv)\n        ecKey = k256.keyFromPrivate(new Uint8Array(priv));\n    else\n        ecKey = k256.keyFromPublic(point);\n    return createKeyMaterial(ecKey, d ? 'private' : 'public', name, usage, extractable);\n}\nfunction exportK256JWK(key) {\n    if (!key.extractable)\n        throw new DOMException('key is not extractable', 'InvalidAccessError');\n    // ignore first '04'\n    const hexPub = key.key.getPublic('hex').slice(2);\n    const hexX = hexPub.slice(0, hexPub.length / 2);\n    const hexY = hexPub.slice(hexPub.length / 2, hexPub.length);\n    if (key.type === 'public') {\n        // public\n        const jwk = {\n            crv: 'K-256',\n            ext: true,\n            x: Convert.ToBase64Url(hex2buffer(hexX)),\n            y: Convert.ToBase64Url(hex2buffer(hexY)),\n            key_ops: usageFromFlag(key),\n            kty: 'EC',\n        };\n        return jwk;\n    }\n    else {\n        const jwk = {\n            crv: 'K-256',\n            ext: true,\n            d: Convert.ToBase64Url(hex2buffer(key.key.getPrivate('hex'))),\n            x: Convert.ToBase64Url(hex2buffer(hexX)),\n            y: Convert.ToBase64Url(hex2buffer(hexY)),\n            key_ops: usageFromFlag(key),\n            kty: 'EC',\n        };\n        return jwk;\n    }\n}\n","import { concat } from '../helper.js';\n/** @internal */\nexport function deriveBitsK256(pub, priv, length) {\n    const derived = priv.key.derive(pub.key.getPublic());\n    let array = new Uint8Array(derived.toArray());\n    // Padding\n    let len = array.length;\n    len = len > 32 ? (len > 48 ? 66 : 48) : 32;\n    if (array.length < len) {\n        array = concat(new Uint8Array(len - array.length), array);\n    }\n    const buf = array.slice(0, length / 8).buffer;\n    return buf;\n}\n","import __ from 'elliptic';\nimport { createMemory } from './memory.js';\nimport { signK256, verifyK256 } from './ec/sign.js';\nimport { getHashAlg, isK256Alg } from './helper.js';\nimport { exportK256, generateK256Pair, importK256 } from './ec/key.js';\nimport { usageToFlag } from './key.js';\nimport { deriveBitsK256 } from './ec/derive.js';\nexport function createCrypto(nativeCrypto, nativeCryptoKey, DOMException) {\n    const [shimSubtle, SubtleCrypto, CryptoKey] = createSubtleClass(nativeCrypto, nativeCryptoKey, DOMException);\n    const [shimCrypto, Crypto] = createCryptoClass(nativeCrypto, shimSubtle);\n    function polyfill() {\n        Object.defineProperties(globalThis, {\n            // classes\n            Crypto: { value: Crypto, configurable: true, writable: true },\n            SubtleCrypto: { value: SubtleCrypto, configurable: true, writable: true },\n            CryptoKey: { value: CryptoKey, configurable: true, writable: true },\n            // instance\n            crypto: { value: shimCrypto, configurable: true, writable: true },\n        });\n    }\n    return [shimCrypto, { Crypto, CryptoKey, SubtleCrypto }, polyfill];\n}\nfunction createSubtleClass(nativeCrypto, nativeCryptoKey, DOMException) {\n    const nativeSubtle = nativeCrypto.subtle;\n    const { get, has, CryptoKey, newKey } = createMemory(nativeCryptoKey);\n    class SubtleCrypto {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n    }\n    const subtleCryptoPrototype = {\n        //#region Not Wrapping methods\n        decrypt(algorithm, key, data) {\n            return nativeSubtle.decrypt(algorithm, key, data);\n        },\n        digest(algorithm, data) {\n            return nativeSubtle.digest(algorithm, data);\n        },\n        encrypt(algorithm, key, data) {\n            return nativeSubtle.encrypt(algorithm, key, data);\n        },\n        unwrapKey(format, wrappedKey, unwrappingKey, unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages) {\n            return nativeSubtle.unwrapKey(format, wrappedKey, unwrappingKey, unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages);\n        },\n        async wrapKey(format, key, wrappingKey, wrapAlgorithm) {\n            if (has(key)) {\n                throw new DOMException(`Failed to execute 'wrapKey' on 'SubtleCrypto': Algorithm: K-256 key does not support wrapping.`, 'NotSupportedError');\n            }\n            return nativeSubtle.wrapKey(format, key, wrappingKey, wrapAlgorithm);\n        },\n        //#endregion\n        //#region Derive\n        async deriveBits(algorithm, baseKey, length) {\n            if (has(baseKey)) {\n                return deriveBitsK256(get(algorithm.public), get(baseKey), length);\n            }\n            return nativeSubtle.deriveBits(algorithm, baseKey, length);\n        },\n        async deriveKey(algorithm, baseKey, derivedKeyType, extractable, keyUsages) {\n            if (has(baseKey)) {\n                const alg = algorithm;\n                const aes = derivedKeyType;\n                const bits = deriveBitsK256(get(alg.public), get(baseKey), aes.length);\n                return nativeSubtle.importKey('raw', bits, derivedKeyType, extractable, keyUsages);\n            }\n            return nativeSubtle.deriveKey(algorithm, baseKey, derivedKeyType, extractable, keyUsages);\n        },\n        //#endregion\n        //#region Sign & Verify\n        async sign(algorithm, key, data) {\n            if (has(key)) {\n                const hash = getHashAlg(algorithm);\n                if (!hash) {\n                    throw new DOMException(`Failed to execute 'sign' on 'SubtleCrypto': EcdsaParams: hash: Algorithm: Unrecognized name`, 'NotSupportedError');\n                }\n                const hashed = await nativeSubtle.digest(hash, data);\n                return signK256(get(key), hashed);\n            }\n            return nativeSubtle.sign(algorithm, key, data);\n        },\n        async verify(algorithm, key, signature, data) {\n            if (has(key)) {\n                const hash = getHashAlg(algorithm);\n                if (!hash)\n                    throw new DOMException(`Failed to execute 'verify' on 'SubtleCrypto': EcdsaParams: hash: Algorithm: Unrecognized name`, 'NotSupportedError');\n                const hashed = await nativeSubtle.digest(hash, data);\n                return verifyK256(get(key), hashed, new Uint8Array(signature));\n            }\n            return nativeSubtle.verify(algorithm, key, signature, data);\n        },\n        //#endregion\n        //#region Create, Import, Export\n        async generateKey(algorithm, extractable, keyUsages) {\n            const k256Name = isK256Alg(algorithm, 'any');\n            if (k256Name) {\n                const _ = generateK256Pair(k256Name, extractable, keyUsages, DOMException);\n                return { publicKey: newKey(_.pub), privateKey: newKey(_.priv) };\n            }\n            return nativeSubtle.generateKey(algorithm, extractable, keyUsages);\n        },\n        async importKey(format, keyData, algorithm, extractable, keyUsages) {\n            const k256Name = isK256Alg(algorithm, 'any');\n            if (k256Name) {\n                const usageFlag = usageToFlag(k256Name, keyUsages, DOMException);\n                if (format === 'pkcs8') {\n                    throw new DOMException('The key is not of the expected type', 'InvalidAccessError');\n                }\n                // TODO: support spki\n                if (format === 'spki') {\n                    throw new DOMException('spki export of K-256 keys is not supported', 'NotSupportedError');\n                }\n                if (format === 'jwk' || format === 'raw') {\n                    return newKey(importK256(format, k256Name, keyData, extractable, usageFlag, DOMException));\n                }\n                throw new TypeError('Invalid keyFormat argument');\n            }\n            return nativeSubtle.importKey(format, keyData, algorithm, extractable, keyUsages);\n        },\n        async exportKey(format, key) {\n            if (has(key)) {\n                if (format === 'pkcs8') {\n                    throw new DOMException('The key is not of the expected type', 'InvalidAccessError');\n                }\n                // TODO: support spki\n                if (format === 'spki') {\n                    throw new DOMException('spki export of K-256 keys is not supported', 'NotSupportedError');\n                }\n                if (format === 'jwk' || format === 'raw')\n                    return exportK256(format, get(key));\n                throw new TypeError('Invalid keyFormat argument');\n            }\n            return nativeSubtle.exportKey(format, key);\n        },\n        //#endregion\n    };\n    Object.defineProperty(subtleCryptoPrototype, Symbol.toStringTag, { configurable: true, value: 'SubtleCrypto' });\n    Object.defineProperties(SubtleCrypto.prototype, Object.getOwnPropertyDescriptors(subtleCryptoPrototype));\n    return [Object.create(subtleCryptoPrototype), SubtleCrypto, CryptoKey];\n}\nfunction createCryptoClass(nativeCrypto, shimSubtle) {\n    class Crypto {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n    }\n    const cryptoPrototype = {\n        get subtle() {\n            return shimSubtle;\n        },\n        getRandomValues: (array) => nativeCrypto.getRandomValues(array),\n        randomUUID: () => nativeCrypto.randomUUID(),\n    };\n    Object.defineProperty(cryptoPrototype, Symbol.toStringTag, { configurable: true, value: 'Crypto' });\n    Object.defineProperties(Crypto.prototype, Object.getOwnPropertyDescriptors(cryptoPrototype));\n    return [Object.create(cryptoPrototype), Crypto];\n}\n","import { createCrypto } from './core.js';\nexport const [crypto, { Crypto, CryptoKey, SubtleCrypto }, polyfill] = createCrypto(globalThis.crypto, globalThis.CryptoKey, DOMException);\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { r as replaceTraps, a as reverseTransformCache, u as unwrap, i as instanceOfAny } from './wrap-idb-value.js';\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n","export * from './build/index.js';\nimport './build/async-iterators.js';\n","export * from './result.js';\nexport * from './option.js';\n","import { toString } from './utils.js';\nimport { Ok, Err } from './result.js';\n/**\n * Contains the None value\n */\nvar NoneImpl = /** @class */ (function () {\n    function NoneImpl() {\n    }\n    NoneImpl.prototype.isSome = function () {\n        return false;\n    };\n    NoneImpl.prototype.isNone = function () {\n        return true;\n    };\n    NoneImpl.prototype[Symbol.iterator] = function () {\n        return {\n            next: function () {\n                return { done: true, value: undefined };\n            },\n        };\n    };\n    NoneImpl.prototype.unwrapOr = function (val) {\n        return val;\n    };\n    NoneImpl.prototype.expect = function (msg) {\n        throw new Error(\"\".concat(msg));\n    };\n    NoneImpl.prototype.unwrap = function () {\n        throw new Error(\"Tried to unwrap None\");\n    };\n    NoneImpl.prototype.map = function (_mapper) {\n        return this;\n    };\n    NoneImpl.prototype.mapOr = function (default_, _mapper) {\n        return default_;\n    };\n    NoneImpl.prototype.mapOrElse = function (default_, _mapper) {\n        return default_();\n    };\n    NoneImpl.prototype.or = function (other) {\n        return other;\n    };\n    NoneImpl.prototype.orElse = function (other) {\n        return other();\n    };\n    NoneImpl.prototype.andThen = function (op) {\n        return this;\n    };\n    NoneImpl.prototype.toResult = function (error) {\n        return Err(error);\n    };\n    NoneImpl.prototype.toString = function () {\n        return 'None';\n    };\n    return NoneImpl;\n}());\n// Export None as a singleton, then freeze it so it can't be modified\nexport var None = new NoneImpl();\nObject.freeze(None);\n/**\n * Contains the success value\n */\nvar SomeImpl = /** @class */ (function () {\n    function SomeImpl(val) {\n        if (!(this instanceof SomeImpl)) {\n            return new SomeImpl(val);\n        }\n        this.value = val;\n    }\n    SomeImpl.prototype.isSome = function () {\n        return true;\n    };\n    SomeImpl.prototype.isNone = function () {\n        return false;\n    };\n    /**\n     * Helper function if you know you have an Some<T> and T is iterable\n     */\n    SomeImpl.prototype[Symbol.iterator] = function () {\n        var obj = Object(this.value);\n        return Symbol.iterator in obj\n            ? obj[Symbol.iterator]()\n            : {\n                next: function () {\n                    return { done: true, value: undefined };\n                },\n            };\n    };\n    SomeImpl.prototype.unwrapOr = function (_val) {\n        return this.value;\n    };\n    SomeImpl.prototype.expect = function (_msg) {\n        return this.value;\n    };\n    SomeImpl.prototype.unwrap = function () {\n        return this.value;\n    };\n    SomeImpl.prototype.map = function (mapper) {\n        return Some(mapper(this.value));\n    };\n    SomeImpl.prototype.mapOr = function (_default_, mapper) {\n        return mapper(this.value);\n    };\n    SomeImpl.prototype.mapOrElse = function (_default_, mapper) {\n        return mapper(this.value);\n    };\n    SomeImpl.prototype.or = function (_other) {\n        return this;\n    };\n    SomeImpl.prototype.orElse = function (_other) {\n        return this;\n    };\n    SomeImpl.prototype.andThen = function (mapper) {\n        return mapper(this.value);\n    };\n    SomeImpl.prototype.toResult = function (error) {\n        return Ok(this.value);\n    };\n    /**\n     * Returns the contained `Some` value, but never throws.\n     * Unlike `unwrap()`, this method doesn't throw and is only callable on an Some<T>\n     *\n     * Therefore, it can be used instead of `unwrap()` as a maintainability safeguard\n     * that will fail to compile if the type of the Option is later changed to a None that can actually occur.\n     *\n     * (this is the `into_Some()` in rust)\n     */\n    SomeImpl.prototype.safeUnwrap = function () {\n        return this.value;\n    };\n    SomeImpl.prototype.toString = function () {\n        return \"Some(\".concat(toString(this.value), \")\");\n    };\n    SomeImpl.EMPTY = new SomeImpl(undefined);\n    return SomeImpl;\n}());\n// This allows Some to be callable - possible because of the es5 compilation target\nexport var Some = SomeImpl;\nexport var Option;\n(function (Option) {\n    /**\n     * Parse a set of `Option`s, returning an array of all `Some` values.\n     * Short circuits with the first `None` found, if any\n     */\n    function all() {\n        var options = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            options[_i] = arguments[_i];\n        }\n        var someOption = [];\n        for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {\n            var option = options_1[_a];\n            if (option.isSome()) {\n                someOption.push(option.value);\n            }\n            else {\n                return option;\n            }\n        }\n        return Some(someOption);\n    }\n    Option.all = all;\n    /**\n     * Parse a set of `Option`s, short-circuits when an input value is `Some`.\n     * If no `Some` is found, returns `None`.\n     */\n    function any() {\n        var options = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            options[_i] = arguments[_i];\n        }\n        // short-circuits\n        for (var _a = 0, options_2 = options; _a < options_2.length; _a++) {\n            var option = options_2[_a];\n            if (option.isSome()) {\n                return option;\n            }\n            else {\n                return option;\n            }\n        }\n        // it must be None\n        return None;\n    }\n    Option.any = any;\n    function isOption(value) {\n        return value instanceof Some || value === None;\n    }\n    Option.isOption = isOption;\n})(Option || (Option = {}));\n","import { toString } from './utils.js';\nimport { None, Some } from './option.js';\n/**\n * Contains the error value\n */\nexport var ErrImpl = /** @class */ (function () {\n    function ErrImpl(val) {\n        if (!(this instanceof ErrImpl)) {\n            return new ErrImpl(val);\n        }\n        this.error = val;\n        var stackLines = new Error().stack.split('\\n').slice(2);\n        if (stackLines && stackLines.length > 0 && stackLines[0].includes('ErrImpl')) {\n            stackLines.shift();\n        }\n        this._stack = stackLines.join('\\n');\n    }\n    ErrImpl.prototype.isOk = function () {\n        return false;\n    };\n    ErrImpl.prototype.isErr = function () {\n        return true;\n    };\n    ErrImpl.prototype[Symbol.iterator] = function () {\n        return {\n            next: function () {\n                return { done: true, value: undefined };\n            },\n        };\n    };\n    /**\n     * @deprecated in favor of unwrapOr\n     * @see unwrapOr\n     */\n    ErrImpl.prototype.else = function (val) {\n        return val;\n    };\n    ErrImpl.prototype.unwrapOr = function (val) {\n        return val;\n    };\n    ErrImpl.prototype.expect = function (msg) {\n        // The cause casting required because of the current TS definition being overly restrictive\n        // (the definition says it has to be an Error while it can be anything).\n        // See https://github.com/microsoft/TypeScript/issues/45167\n        throw new Error(\"\".concat(msg, \" - Error: \").concat(toString(this.error), \"\\n\").concat(this._stack), { cause: this.error });\n    };\n    ErrImpl.prototype.expectErr = function (_msg) {\n        return this.error;\n    };\n    ErrImpl.prototype.unwrap = function () {\n        // The cause casting required because of the current TS definition being overly restrictive\n        // (the definition says it has to be an Error while it can be anything).\n        // See https://github.com/microsoft/TypeScript/issues/45167\n        throw new Error(\"Tried to unwrap Error: \".concat(toString(this.error), \"\\n\").concat(this._stack), { cause: this.error });\n    };\n    ErrImpl.prototype.unwrapErr = function () {\n        return this.error;\n    };\n    ErrImpl.prototype.map = function (_mapper) {\n        return this;\n    };\n    ErrImpl.prototype.andThen = function (op) {\n        return this;\n    };\n    ErrImpl.prototype.mapErr = function (mapper) {\n        return new Err(mapper(this.error));\n    };\n    ErrImpl.prototype.mapOr = function (default_, _mapper) {\n        return default_;\n    };\n    ErrImpl.prototype.mapOrElse = function (default_, _mapper) {\n        return default_(this.error);\n    };\n    ErrImpl.prototype.or = function (other) {\n        return other;\n    };\n    ErrImpl.prototype.orElse = function (other) {\n        return other(this.error);\n    };\n    ErrImpl.prototype.toOption = function () {\n        return None;\n    };\n    ErrImpl.prototype.toString = function () {\n        return \"Err(\".concat(toString(this.error), \")\");\n    };\n    Object.defineProperty(ErrImpl.prototype, \"stack\", {\n        get: function () {\n            return \"\".concat(this, \"\\n\").concat(this._stack);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** An empty Err */\n    ErrImpl.EMPTY = new ErrImpl(undefined);\n    return ErrImpl;\n}());\n// This allows Err to be callable - possible because of the es5 compilation target\nexport var Err = ErrImpl;\n/**\n * Contains the success value\n */\nexport var OkImpl = /** @class */ (function () {\n    function OkImpl(val) {\n        if (!(this instanceof OkImpl)) {\n            return new OkImpl(val);\n        }\n        this.value = val;\n    }\n    OkImpl.prototype.isOk = function () {\n        return true;\n    };\n    OkImpl.prototype.isErr = function () {\n        return false;\n    };\n    /**\n     * Helper function if you know you have an Ok<T> and T is iterable\n     */\n    OkImpl.prototype[Symbol.iterator] = function () {\n        var obj = Object(this.value);\n        return Symbol.iterator in obj\n            ? obj[Symbol.iterator]()\n            : {\n                next: function () {\n                    return { done: true, value: undefined };\n                },\n            };\n    };\n    /**\n     * @see unwrapOr\n     * @deprecated in favor of unwrapOr\n     */\n    OkImpl.prototype.else = function (_val) {\n        return this.value;\n    };\n    OkImpl.prototype.unwrapOr = function (_val) {\n        return this.value;\n    };\n    OkImpl.prototype.expect = function (_msg) {\n        return this.value;\n    };\n    OkImpl.prototype.expectErr = function (msg) {\n        throw new Error(msg);\n    };\n    OkImpl.prototype.unwrap = function () {\n        return this.value;\n    };\n    OkImpl.prototype.unwrapErr = function () {\n        // The cause casting required because of the current TS definition being overly restrictive\n        // (the definition says it has to be an Error while it can be anything).\n        // See https://github.com/microsoft/TypeScript/issues/45167\n        throw new Error(\"Tried to unwrap Ok: \".concat(toString(this.value)), { cause: this.value });\n    };\n    OkImpl.prototype.map = function (mapper) {\n        return new Ok(mapper(this.value));\n    };\n    OkImpl.prototype.andThen = function (mapper) {\n        return mapper(this.value);\n    };\n    OkImpl.prototype.mapErr = function (_mapper) {\n        return this;\n    };\n    OkImpl.prototype.mapOr = function (_default_, mapper) {\n        return mapper(this.value);\n    };\n    OkImpl.prototype.mapOrElse = function (_default_, mapper) {\n        return mapper(this.value);\n    };\n    OkImpl.prototype.or = function (_other) {\n        return this;\n    };\n    OkImpl.prototype.orElse = function (_other) {\n        return this;\n    };\n    OkImpl.prototype.toOption = function () {\n        return Some(this.value);\n    };\n    /**\n     * Returns the contained `Ok` value, but never throws.\n     * Unlike `unwrap()`, this method doesn't throw and is only callable on an Ok<T>\n     *\n     * Therefore, it can be used instead of `unwrap()` as a maintainability safeguard\n     * that will fail to compile if the error type of the Result is later changed to an error that can actually occur.\n     *\n     * (this is the `into_ok()` in rust)\n     */\n    OkImpl.prototype.safeUnwrap = function () {\n        return this.value;\n    };\n    OkImpl.prototype.toString = function () {\n        return \"Ok(\".concat(toString(this.value), \")\");\n    };\n    OkImpl.EMPTY = new OkImpl(undefined);\n    return OkImpl;\n}());\n// This allows Ok to be callable - possible because of the es5 compilation target\nexport var Ok = OkImpl;\nexport var Result;\n(function (Result) {\n    /**\n     * Parse a set of `Result`s, returning an array of all `Ok` values.\n     * Short circuits with the first `Err` found, if any\n     */\n    function all() {\n        var results = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            results[_i] = arguments[_i];\n        }\n        var okResult = [];\n        for (var _a = 0, results_1 = results; _a < results_1.length; _a++) {\n            var result = results_1[_a];\n            if (result.isOk()) {\n                okResult.push(result.value);\n            }\n            else {\n                return result;\n            }\n        }\n        return new Ok(okResult);\n    }\n    Result.all = all;\n    /**\n     * Parse a set of `Result`s, short-circuits when an input value is `Ok`.\n     * If no `Ok` is found, returns an `Err` containing the collected error values\n     */\n    function any() {\n        var results = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            results[_i] = arguments[_i];\n        }\n        var errResult = [];\n        // short-circuits\n        for (var _a = 0, results_2 = results; _a < results_2.length; _a++) {\n            var result = results_2[_a];\n            if (result.isOk()) {\n                return result;\n            }\n            else {\n                errResult.push(result.error);\n            }\n        }\n        // it must be a Err\n        return new Err(errResult);\n    }\n    Result.any = any;\n    /**\n     * Wrap an operation that may throw an Error (`try-catch` style) into checked exception style\n     * @param op The operation function\n     */\n    function wrap(op) {\n        try {\n            return new Ok(op());\n        }\n        catch (e) {\n            return new Err(e);\n        }\n    }\n    Result.wrap = wrap;\n    /**\n     * Wrap an async operation that may throw an Error (`try-catch` style) into checked exception style\n     * @param op The operation function\n     */\n    function wrapAsync(op) {\n        try {\n            return op()\n                .then(function (val) { return new Ok(val); })\n                .catch(function (e) { return new Err(e); });\n        }\n        catch (e) {\n            return Promise.resolve(new Err(e));\n        }\n    }\n    Result.wrapAsync = wrapAsync;\n    function isResult(val) {\n        return val instanceof Err || val instanceof Ok;\n    }\n    Result.isResult = isResult;\n})(Result || (Result = {}));\n","import { jsx as _jsx, jsxs as _jsxs } from 'react/jsx-runtime'\nimport { __createIcon } from './utils/internal.js'\nexport const Aave = /*#__PURE__*/ __createIcon('Aave', [\n    {\n        u: () => new URL('./brands/Aave.svg', import.meta.url),\n    },\n])\nexport const Algorand = /*#__PURE__*/ __createIcon('Algorand', [\n    {\n        u: () => new URL('./brands/Algorand.svg', import.meta.url),\n    },\n])\nexport const Arbitrum = /*#__PURE__*/ __createIcon('Arbitrum', [\n    {\n        u: () => new URL('./brands/Arbitrum.svg', import.meta.url),\n    },\n])\nexport const Arweave = /*#__PURE__*/ __createIcon('Arweave', [\n    {\n        u: () => new URL('./brands/Arweave.png', import.meta.url),\n    },\n])\nexport const Avalanche = /*#__PURE__*/ __createIcon('Avalanche', [\n    {\n        u: () => new URL('./brands/Avalanche.svg', import.meta.url),\n    },\n])\nexport const BSC = /*#__PURE__*/ __createIcon('BSC', [\n    {\n        u: () => new URL('./brands/BSC.svg', import.meta.url),\n    },\n])\nexport const Celo = /*#__PURE__*/ __createIcon('Celo', [\n    {\n        u: () => new URL('./brands/Celo.svg', import.meta.url),\n    },\n])\nexport const Coincarp = /*#__PURE__*/ __createIcon('Coincarp', [\n    {\n        u: () => new URL('./brands/Coincarp.svg', import.meta.url),\n    },\n])\nexport const CoinGecko = /*#__PURE__*/ __createIcon('CoinGecko', [\n    {\n        u: () => new URL('./brands/CoinGecko.svg', import.meta.url),\n    },\n])\nexport const CoinMarketCap = /*#__PURE__*/ __createIcon('CoinMarketCap', [\n    {\n        u: () => new URL('./brands/CoinMarketCap.svg', import.meta.url),\n    },\n])\nexport const Cosmos = /*#__PURE__*/ __createIcon('Cosmos', [\n    {\n        u: () => new URL('./brands/Cosmos.svg', import.meta.url),\n    },\n])\nexport const Crossbell = /*#__PURE__*/ __createIcon('Crossbell', [\n    {\n        u: () => new URL('./brands/Crossbell.svg', import.meta.url),\n    },\n])\nexport const CrossSync = /*#__PURE__*/ __createIcon('CrossSync', [\n    {\n        u: () => new URL('./brands/CrossSync.svg', import.meta.url),\n    },\n])\nexport const CyberConnect = /*#__PURE__*/ __createIcon('CyberConnect', [\n    {\n        u: () => new URL('./brands/CyberConnect.svg', import.meta.url),\n    },\n    {\n        c: ['dark'],\n        u: () => new URL('./plugins/CyberConnect.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./plugins/CyberConnect.light.svg', import.meta.url),\n    },\n])\nexport const Danger = /*#__PURE__*/ __createIcon('Danger', [\n    {\n        u: () => new URL('./brands/Danger.svg', import.meta.url),\n    },\n])\nexport const Debank = /*#__PURE__*/ __createIcon('Debank', [\n    {\n        u: () => new URL('./brands/Debank.svg', import.meta.url),\n    },\n])\nexport const Discord = /*#__PURE__*/ __createIcon('Discord', [\n    {\n        u: () => new URL('./brands/Discord.svg', import.meta.url),\n    },\n])\nexport const DiscordRound = /*#__PURE__*/ __createIcon('DiscordRound', [\n    {\n        u: () => new URL('./brands/DiscordRound.svg', import.meta.url),\n    },\n])\nexport const DiscordRoundBlack = /*#__PURE__*/ __createIcon('DiscordRoundBlack', [\n    {\n        c: ['dark'],\n        u: () => new URL('./brands/DiscordRoundBlack.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./brands/DiscordRoundBlack.light.svg', import.meta.url),\n    },\n])\nexport const DiscordRoundGray = /*#__PURE__*/ __createIcon('DiscordRoundGray', [\n    {\n        u: () => new URL('./brands/DiscordRoundGray.svg', import.meta.url),\n    },\n])\nexport const EIP1577 = /*#__PURE__*/ __createIcon('EIP1577', [\n    {\n        u: () => new URL('./brands/EIP1577.svg', import.meta.url),\n    },\n])\nexport const ETH = /*#__PURE__*/ __createIcon('ETH', [\n    {\n        u: () => new URL('./brands/ETH.svg', import.meta.url),\n    },\n])\nexport const EtherScan = /*#__PURE__*/ __createIcon('EtherScan', [\n    {\n        u: () => new URL('./brands/EtherScan.svg', import.meta.url),\n    },\n])\nexport const FacebookColored = /*#__PURE__*/ __createIcon('FacebookColored', [\n    {\n        u: () => new URL('./brands/FacebookColored.svg', import.meta.url),\n    },\n])\nexport const FacebookRound = /*#__PURE__*/ __createIcon('FacebookRound', [\n    {\n        u: () => new URL('./brands/FacebookRound.svg', import.meta.url),\n    },\n])\nexport const FacebookRoundGray = /*#__PURE__*/ __createIcon('FacebookRoundGray', [\n    {\n        u: () => new URL('./brands/FacebookRoundGray.svg', import.meta.url),\n    },\n])\nexport const Fantom = /*#__PURE__*/ __createIcon('Fantom', [\n    {\n        u: () => new URL('./brands/Fantom.svg', import.meta.url),\n    },\n])\nexport const Farcaster = /*#__PURE__*/ __createIcon('Farcaster', [\n    {\n        u: () => new URL('./brands/Farcaster.svg', import.meta.url),\n    },\n])\nexport const Firefly = /*#__PURE__*/ __createIcon('Firefly', [\n    {\n        c: ['dark'],\n        u: () => new URL('./brands/Firefly.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./brands/Firefly.light.svg', import.meta.url),\n    },\n])\nexport const Flow = /*#__PURE__*/ __createIcon('Flow', [\n    {\n        u: () => new URL('./brands/Flow.svg', import.meta.url),\n    },\n])\nexport const Gem = /*#__PURE__*/ __createIcon('Gem', [\n    {\n        u: () => new URL('./brands/Gem.svg', import.meta.url),\n    },\n])\nexport const GitHub = /*#__PURE__*/ __createIcon('GitHub', [\n    {\n        u: () => new URL('./brands/GitHub.svg', import.meta.url),\n    },\n])\nexport const GitHubGray = /*#__PURE__*/ __createIcon('GitHubGray', [\n    {\n        u: () => new URL('./brands/GitHubGray.svg', import.meta.url),\n    },\n])\nexport const Gnosis = /*#__PURE__*/ __createIcon('Gnosis', [\n    {\n        u: () => new URL('./brands/Gnosis.svg', import.meta.url),\n    },\n])\nexport const Instagram = /*#__PURE__*/ __createIcon('Instagram', [\n    {\n        u: () => new URL('./brands/Instagram.svg', import.meta.url),\n    },\n])\nexport const InstagramColored = /*#__PURE__*/ __createIcon('InstagramColored', [\n    {\n        u: () => new URL('./brands/InstagramColored.svg', import.meta.url),\n    },\n])\nexport const InstagramRoundColored = /*#__PURE__*/ __createIcon('InstagramRoundColored', [\n    {\n        u: () => new URL('./brands/InstagramRoundColored.svg', import.meta.url),\n    },\n])\nexport const InstagramRoundGray = /*#__PURE__*/ __createIcon('InstagramRoundGray', [\n    {\n        u: () => new URL('./brands/InstagramRoundGray.svg', import.meta.url),\n    },\n])\nexport const IPFS = /*#__PURE__*/ __createIcon('IPFS', [\n    {\n        u: () => new URL('./brands/IPFS.svg', import.meta.url),\n    },\n])\nexport const Keybase = /*#__PURE__*/ __createIcon('Keybase', [\n    {\n        u: () => new URL('./brands/Keybase.svg', import.meta.url),\n    },\n])\nexport const Kusama = /*#__PURE__*/ __createIcon('Kusama', [\n    {\n        u: () => new URL('./brands/Kusama.svg', import.meta.url),\n    },\n])\nexport const Leaderboard = /*#__PURE__*/ __createIcon('Leaderboard', [\n    {\n        u: () => new URL('./brands/Leaderboard.png', import.meta.url),\n    },\n])\nexport const Lens = /*#__PURE__*/ __createIcon('Lens', [\n    {\n        u: () => new URL('./brands/Lens.svg', import.meta.url),\n    },\n])\nexport const Link3 = /*#__PURE__*/ __createIcon('Link3', [\n    {\n        u: () => new URL('./brands/Link3.svg', import.meta.url),\n    },\n])\nexport const LooksRare = /*#__PURE__*/ __createIcon('LooksRare', [\n    {\n        u: () => new URL('./brands/LooksRare.svg', import.meta.url),\n    },\n])\nexport const Mask = /*#__PURE__*/ __createIcon('Mask', [\n    {\n        c: ['dark'],\n        u: () => new URL('./brands/Mask.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./brands/Mask.light.svg', import.meta.url),\n    },\n])\nexport const MaskBanner = /*#__PURE__*/ __createIcon('MaskBanner', [\n    {\n        u: () => new URL('./brands/MaskBanner.svg', import.meta.url),\n    },\n])\nexport const MaskBlue = /*#__PURE__*/ __createIcon('MaskBlue', [\n    {\n        u: () => new URL('./brands/MaskBlue.svg', import.meta.url),\n    },\n])\nexport const MaskGrey = /*#__PURE__*/ __createIcon('MaskGrey', [\n    {\n        c: ['dark'],\n        u: () => new URL('./brands/MaskGrey.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./brands/MaskGrey.light.svg', import.meta.url),\n    },\n])\nexport const MaskPlaceholder = /*#__PURE__*/ __createIcon('MaskPlaceholder', [\n    {\n        c: ['dark'],\n        u: () => new URL('./brands/MaskPlaceholder.dark.svg', import.meta.url),\n    },\n    {\n        c: ['dim'],\n        u: () => new URL('./brands/MaskPlaceholder.dim.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./brands/MaskPlaceholder.light.svg', import.meta.url),\n    },\n])\nexport const MaskSquare = /*#__PURE__*/ __createIcon('MaskSquare', [\n    {\n        c: ['dark'],\n        u: () => new URL('./brands/MaskSquare.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./brands/MaskSquare.light.svg', import.meta.url),\n    },\n])\nexport const MaskText = /*#__PURE__*/ __createIcon('MaskText', [\n    {\n        u: () => new URL('./brands/MaskText.svg', import.meta.url),\n    },\n])\nexport const MaskTextNightly = /*#__PURE__*/ __createIcon('MaskTextNightly', [\n    {\n        u: () => new URL('./brands/MaskTextNightly.svg', import.meta.url),\n    },\n])\nexport const MaskWallet = /*#__PURE__*/ __createIcon('MaskWallet', [\n    {\n        u: () => new URL('./brands/MaskWallet.png', import.meta.url),\n    },\n])\nexport const Medium = /*#__PURE__*/ __createIcon('Medium', [\n    {\n        u: () => new URL('./brands/Medium.svg', import.meta.url),\n    },\n])\nexport const MediumGray = /*#__PURE__*/ __createIcon('MediumGray', [\n    {\n        u: () => new URL('./brands/MediumGray.svg', import.meta.url),\n    },\n])\nexport const MetaMask = /*#__PURE__*/ __createIcon('MetaMask', [\n    {\n        u: () => new URL('./brands/MetaMask.svg', import.meta.url),\n    },\n])\nexport const Minds = /*#__PURE__*/ __createIcon('Minds', [\n    {\n        u: () => new URL('./brands/Minds.svg', import.meta.url),\n    },\n])\nexport const MindsRound = /*#__PURE__*/ __createIcon('MindsRound', [\n    {\n        u: () => new URL('./brands/MindsRound.svg', import.meta.url),\n    },\n])\nexport const MiniMask = /*#__PURE__*/ __createIcon('MiniMask', [\n    {\n        c: ['dark'],\n        u: () => new URL('./brands/MiniMask.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./brands/MiniMask.light.svg', import.meta.url),\n    },\n])\nexport const Mirror = /*#__PURE__*/ __createIcon('Mirror', [\n    {\n        u: () => new URL('./brands/Mirror.svg', import.meta.url),\n    },\n])\nexport const Momoka = /*#__PURE__*/ __createIcon('Momoka', [\n    {\n        u: () => new URL('./brands/Momoka.svg', import.meta.url),\n    },\n])\nexport const NextIDMini = /*#__PURE__*/ __createIcon('NextIDMini', [\n    {\n        c: ['dark'],\n        u: () => new URL('./brands/NextIDMini.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./brands/NextIDMini.light.svg', import.meta.url),\n    },\n])\nexport const Nftgo = /*#__PURE__*/ __createIcon('Nftgo', [\n    {\n        u: () => new URL('./brands/Nftgo.svg', import.meta.url),\n    },\n])\nexport const NFTScan = /*#__PURE__*/ __createIcon('NFTScan', [\n    {\n        u: () => new URL('./brands/NFTScan.svg', import.meta.url),\n    },\n])\nexport const OpenSea = /*#__PURE__*/ __createIcon('OpenSea', [\n    {\n        u: () => new URL('./brands/OpenSea.svg', import.meta.url),\n    },\n])\nexport const OpenSeaColored = /*#__PURE__*/ __createIcon('OpenSeaColored', [\n    {\n        u: () => new URL('./brands/OpenSeaColored.svg', import.meta.url),\n    },\n])\nexport const Optimism = /*#__PURE__*/ __createIcon('Optimism', [\n    {\n        u: () => new URL('./brands/Optimism.svg', import.meta.url),\n    },\n])\nexport const PancakeSwap = /*#__PURE__*/ __createIcon('PancakeSwap', [\n    {\n        u: () => new URL('./brands/PancakeSwap.png', import.meta.url),\n    },\n])\nexport const Pets = /*#__PURE__*/ __createIcon('Pets', [\n    {\n        u: () => new URL('./brands/Pets.svg', import.meta.url),\n    },\n])\nexport const Planet = /*#__PURE__*/ __createIcon('Planet', [\n    {\n        u: () => new URL('./brands/Planet.png', import.meta.url),\n    },\n])\nexport const PolkaDot = /*#__PURE__*/ __createIcon('PolkaDot', [\n    {\n        u: () => new URL('./brands/PolkaDot.svg', import.meta.url),\n    },\n])\nexport const Polygon = /*#__PURE__*/ __createIcon('Polygon', [\n    {\n        u: () => new URL('./brands/Polygon.svg', import.meta.url),\n    },\n])\nexport const PolygonScan = /*#__PURE__*/ __createIcon('PolygonScan', [\n    {\n        u: () => new URL('./brands/PolygonScan.svg', import.meta.url),\n    },\n])\nexport const Rarible = /*#__PURE__*/ __createIcon('Rarible', [\n    {\n        u: () => new URL('./brands/Rarible.svg', import.meta.url),\n    },\n])\nexport const RedditRound = /*#__PURE__*/ __createIcon('RedditRound', [\n    {\n        u: () => new URL('./brands/RedditRound.svg', import.meta.url),\n    },\n])\nexport const RedditRoundGray = /*#__PURE__*/ __createIcon('RedditRoundGray', [\n    {\n        u: () => new URL('./brands/RedditRoundGray.svg', import.meta.url),\n    },\n])\nexport const Rsk = /*#__PURE__*/ __createIcon('Rsk', [\n    {\n        u: () => new URL('./brands/Rsk.svg', import.meta.url),\n    },\n])\nexport const RSS3 = /*#__PURE__*/ __createIcon('RSS3', [\n    {\n        u: () => new URL('./brands/RSS3.svg', import.meta.url),\n    },\n])\nexport const SimpleHash = /*#__PURE__*/ __createIcon('SimpleHash', [\n    {\n        u: () => new URL('./brands/SimpleHash.png', import.meta.url),\n    },\n])\nexport const Solana = /*#__PURE__*/ __createIcon('Solana', [\n    {\n        u: () => new URL('./brands/Solana.svg', import.meta.url),\n    },\n])\nexport const SushiSwap = /*#__PURE__*/ __createIcon('SushiSwap', [\n    {\n        u: () => new URL('./brands/SushiSwap.png', import.meta.url),\n    },\n])\nexport const Sybil = /*#__PURE__*/ __createIcon('Sybil', [\n    {\n        u: () => new URL('./brands/Sybil.png', import.meta.url),\n    },\n])\nexport const TelegramRound = /*#__PURE__*/ __createIcon('TelegramRound', [\n    {\n        u: () => new URL('./brands/TelegramRound.svg', import.meta.url),\n    },\n])\nexport const TwitterColored = /*#__PURE__*/ __createIcon('TwitterColored', [\n    {\n        u: () => new URL('./brands/TwitterColored.svg', import.meta.url),\n    },\n])\nexport const TwitterOtherColored = /*#__PURE__*/ __createIcon('TwitterOtherColored', [\n    {\n        u: () => new URL('./brands/TwitterOtherColored.svg', import.meta.url),\n    },\n])\nexport const TwitterRound = /*#__PURE__*/ __createIcon('TwitterRound', [\n    {\n        u: () => new URL('./brands/TwitterRound.svg', import.meta.url),\n    },\n])\nexport const TwitterRoundGray = /*#__PURE__*/ __createIcon('TwitterRoundGray', [\n    {\n        u: () => new URL('./brands/TwitterRoundGray.svg', import.meta.url),\n    },\n])\nexport const TwitterX = /*#__PURE__*/ __createIcon('TwitterX', [\n    {\n        c: ['dark'],\n        u: () => new URL('./brands/TwitterX.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./brands/TwitterX.light.svg', import.meta.url),\n    },\n])\nexport const TwitterXRound = /*#__PURE__*/ __createIcon('TwitterXRound', [\n    {\n        c: ['dark'],\n        u: () => new URL('./brands/TwitterXRound.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./brands/TwitterXRound.light.svg', import.meta.url),\n    },\n])\nexport const Uniswap = /*#__PURE__*/ __createIcon('Uniswap', [\n    {\n        u: () => new URL('./brands/Uniswap.svg', import.meta.url),\n    },\n])\nexport const WETH = /*#__PURE__*/ __createIcon('WETH', [\n    {\n        u: () => new URL('./brands/WETH.svg', import.meta.url),\n    },\n])\nexport const X2Y2 = /*#__PURE__*/ __createIcon('X2Y2', [\n    {\n        u: () => new URL('./brands/X2Y2.svg', import.meta.url),\n    },\n])\nexport const XLog = /*#__PURE__*/ __createIcon('XLog', [\n    {\n        u: () => new URL('./brands/XLog.svg', import.meta.url),\n    },\n    {\n        c: ['dark'],\n        u: () => new URL('./brands/XLog.dark.svg', import.meta.url),\n    },\n])\nexport const YouTube = /*#__PURE__*/ __createIcon('YouTube', [\n    {\n        u: () => new URL('./brands/YouTube.svg', import.meta.url),\n    },\n])\nexport const YouTubeGray = /*#__PURE__*/ __createIcon('YouTubeGray', [\n    {\n        u: () => new URL('./brands/YouTubeGray.svg', import.meta.url),\n    },\n])\nexport const Zerion = /*#__PURE__*/ __createIcon('Zerion', [\n    {\n        u: () => new URL('./brands/Zerion.svg', import.meta.url),\n    },\n])\nexport const ZeroX = /*#__PURE__*/ __createIcon('ZeroX', [\n    {\n        u: () => new URL('./brands/ZeroX.svg', import.meta.url),\n    },\n    {\n        c: ['dark'],\n        u: () => new URL('./brands/ZeroX.dark.svg', import.meta.url),\n    },\n])\nexport const Zilliqa = /*#__PURE__*/ __createIcon('Zilliqa', [\n    {\n        u: () => new URL('./brands/Zilliqa.svg', import.meta.url),\n    },\n])\nexport const ZkScan = /*#__PURE__*/ __createIcon('zkScan', [\n    {\n        u: () => new URL('./brands/zkScan.svg', import.meta.url),\n    },\n])\nexport const Zora = /*#__PURE__*/ __createIcon('Zora', [\n    {\n        u: () => new URL('./brands/Zora.svg', import.meta.url),\n    },\n])\nexport const Add = /*#__PURE__*/ __createIcon('Add', [\n    {\n        u: () => new URL('./general/Add.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M12 4.8a7.2 7.2 0 1 0 0 14.4 7.2 7.2 0 0 0 0-14.4ZM3.2 12a8.8 8.8 0 1 1 17.6 0 8.8 8.8 0 0 1-17.6 0Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M12 8a.8.8 0 0 1 .8.8v6.4a.8.8 0 0 1-1.6 0V8.8A.8.8 0 0 1 12 8Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M8 12a.8.8 0 0 1 .8-.8h6.4a.8.8 0 0 1 0 1.6H8.8A.8.8 0 0 1 8 12Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const AddNoBorder = /*#__PURE__*/ __createIcon(\n    'AddNoBorder',\n    [\n        {\n            u: () => new URL('./general/AddNoBorder.svg', import.meta.url),\n            j: () =>\n                /*#__PURE__*/ _jsxs('svg', {\n                    xmlns: 'http://www.w3.org/2000/svg',\n                    fill: 'none',\n                    viewBox: '0 0 13 12',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            fillRule: 'evenodd',\n                            d: 'M1.6 6a.4.4 0 0 1 .4-.4h9a.4.4 0 0 1 0 .8H2a.4.4 0 0 1-.4-.4Z',\n                            clipRule: 'evenodd',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            fillRule: 'evenodd',\n                            d: 'M6.5 1.1a.4.4 0 0 1 .4.4v9a.4.4 0 0 1-.8 0v-9a.4.4 0 0 1 .4-.4Z',\n                            clipRule: 'evenodd',\n                        }),\n                    ],\n                }),\n            s: true,\n        },\n    ],\n    [13, 12],\n)\nexport const AddUser = /*#__PURE__*/ __createIcon('AddUser', [\n    {\n        u: () => new URL('./general/AddUser.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 18 18',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    clipRule: 'evenodd',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M15.5 12.159a.6.6 0 0 1 .6.6v4.062a.6.6 0 0 1-1.2 0v-4.062a.6.6 0 0 1 .6-.6Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M18.132 14.79a.6.6 0 0 1-.6.6h-4.065a.6.6 0 0 1 0-1.2h4.065a.6.6 0 0 1 .6.6ZM9.298 2.41a2.992 2.992 0 1 0 0 5.984 2.992 2.992 0 0 0 0-5.983ZM5.106 5.403a4.192 4.192 0 1 1 8.384 0 4.192 4.192 0 0 1-8.384 0Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M6.519 8.988a7.797 7.797 0 0 1 8.497 1.69.6.6 0 0 1-.848.848 6.597 6.597 0 0 0-11.263 4.666.6.6 0 0 1-1.2 0A7.798 7.798 0 0 1 6.52 8.988Z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const America = /*#__PURE__*/ __createIcon('America', [\n    {\n        u: () => new URL('./general/America.svg', import.meta.url),\n    },\n])\nexport const Appearance = /*#__PURE__*/ __createIcon('Appearance', [\n    {\n        u: () => new URL('./general/Appearance.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'm10.09 13.908-4.7-2.286 3.707-3.503L9.692 3l4.576 2.538 5.072-.878-.879 5.071L21 14.307l-5.118.598-3.504 3.705-2.286-4.702Zm-2.262.658 1.608 1.609-4.825 4.826-1.609-1.609 4.826-4.826Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Appendices = /*#__PURE__*/ __createIcon('Appendices', [\n    {\n        u: () => new URL('./general/Appendices.svg', import.meta.url),\n    },\n])\nexport const ApplicationNFT = /*#__PURE__*/ __createIcon('ApplicationNFT', [\n    {\n        u: () => new URL('./general/ApplicationNFT.svg', import.meta.url),\n    },\n])\nexport const Approve = /*#__PURE__*/ __createIcon('Approve', [\n    {\n        u: () => new URL('./general/Approve.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 18 18',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M9.502.936c.456 0 .94.063 1.338.208l.005.002 3.742 1.403c.56.209 1.038.63 1.373 1.114.335.484.56 1.08.56 1.677v5.573c0 .554-.18 1.153-.441 1.675-.263.522-.637 1.023-1.082 1.356l-3.224 2.406c-.644.484-1.468.71-2.265.71-.798 0-1.622-.226-2.265-.71l-3.224-2.406c-.445-.333-.82-.834-1.082-1.356-.263-.522-.442-1.12-.442-1.675V5.34c0-.595.226-1.188.56-1.671.335-.483.813-.903 1.372-1.113h.001l3.741-1.41h.002c.393-.147.875-.21 1.331-.21ZM8.565 2.2 4.821 3.61c-.302.113-.609.364-.842.7-.233.336-.36.71-.36 1.03v5.573c0 .33.113.755.322 1.17.208.413.482.759.75.96m0 0 3.226 2.408c.414.311.989.483 1.59.483.6 0 1.175-.172 1.59-.483v-.001l3.225-2.408c.268-.2.542-.546.75-.96.209-.414.322-.838.322-1.17V5.34c0-.324-.127-.7-.36-1.037-.233-.337-.54-.588-.842-.7L10.453 2.2c-.24-.087-.583-.14-.951-.14-.37 0-.708.053-.937.139',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M12.118 6.487c.22.22.22.576 0 .796l-3.225 3.224a.562.562 0 0 1-.796 0L6.89 9.3a.562.562 0 1 1 .795-.795l.81.81 2.827-2.828c.22-.22.576-.22.796 0Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const ArrowBack = /*#__PURE__*/ __createIcon('ArrowBack', [\n    {\n        u: () => new URL('./general/ArrowBack.svg', import.meta.url),\n    },\n])\nexport const ArrowDownRound = /*#__PURE__*/ __createIcon('ArrowDownRound', [\n    {\n        u: () => new URL('./general/ArrowDownRound.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 16 16',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'none',\n                    stroke: 'currentColor',\n                    strokeLinecap: 'round',\n                    strokeLinejoin: 'round',\n                    strokeWidth: '1.25',\n                    d: 'm4 5.6 4 4 4-4',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const ArrowDownward = /*#__PURE__*/ __createIcon('ArrowDownward', [\n    {\n        u: () => new URL('./general/ArrowDownward.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    clipRule: 'evenodd',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M12 4.135a1 1 0 0 1 1 1v14a1 1 0 1 1-2 0v-14a1 1 0 0 1 1-1Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M4.293 11.428a1 1 0 0 1 1.414 0L12 17.72l6.293-6.293a1 1 0 1 1 1.414 1.414l-7 7a1 1 0 0 1-1.414 0l-7-7a1 1 0 0 1 0-1.414Z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const ArrowDrop = /*#__PURE__*/ __createIcon('ArrowDrop', [\n    {\n        u: () => new URL('./general/ArrowDrop.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'm11.434 15.434-5.068-5.068A.8.8 0 0 1 6.93 9h10.14a.8.8 0 0 1 .565 1.366l-5.068 5.068a.8.8 0 0 1-1.132 0Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const ArrowRight = /*#__PURE__*/ __createIcon('ArrowRight', [\n    {\n        u: () => new URL('./general/ArrowRight.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsx('path', {\n                    stroke: 'currentColor',\n                    strokeMiterlimit: '10',\n                    d: 'm7.708 4.792 5.209 5.416-5.209 5.417',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const ArrowUp = /*#__PURE__*/ __createIcon('ArrowUp', [\n    {\n        u: () => new URL('./general/ArrowUp.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'm12.566 9.066 5.068 5.068a.8.8 0 0 1-.566 1.366H6.931a.8.8 0 0 1-.565-1.366l5.068-5.068a.8.8 0 0 1 1.132 0Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const ArrowUpRound = /*#__PURE__*/ __createIcon('ArrowUpRound', [\n    {\n        u: () => new URL('./general/ArrowUpRound.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 28 28',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'none',\n                    stroke: 'currentColor',\n                    strokeLinecap: 'round',\n                    strokeLinejoin: 'round',\n                    strokeWidth: '1.25',\n                    d: 'm18 15.6-4-4-4 4',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const BackUp = /*#__PURE__*/ __createIcon('BackUp', [\n    {\n        u: () => new URL('./general/BackUp.svg', import.meta.url),\n    },\n])\nexport const BaseClose = /*#__PURE__*/ __createIcon('BaseClose', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/BaseClose.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/BaseClose.light.svg', import.meta.url),\n    },\n])\nexport const BaseContacts = /*#__PURE__*/ __createIcon('BaseContacts', [\n    {\n        u: () => new URL('./general/BaseContacts.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    id: 'BaseContacts_svg__base/Contacts-1',\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    clipRule: 'evenodd',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            id: 'BaseContacts_svg__Vector (Stroke)',\n                            d: 'M6 2.809c-1.225 0-2.2.979-2.2 2.17v10.91c0 1.191.975 2.17 2.2 2.17h.75c.996 0 1.97.39 2.684 1.102l.002.002 1.706 1.687a1.222 1.222 0 0 0 1.706 0l1.707-1.687.001-.002a3.788 3.788 0 0 1 2.684-1.102H18c1.224 0 2.2-.987 2.2-2.17V4.979c0-1.191-.975-2.17-2.2-2.17H6Zm-3.8 2.17c0-2.089 1.705-3.77 3.8-3.77h12c2.095 0 3.8 1.681 3.8 3.77v10.91c0 2.077-1.703 3.77-3.8 3.77h-.76c-.592 0-1.147.229-1.554.636l-.004.003-1.71 1.69a2.823 2.823 0 0 1-3.954 0l-1.71-1.69-.003-.003a2.205 2.205 0 0 0-1.555-.636H6c-2.095 0-3.8-1.681-3.8-3.77V4.979Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            id: 'BaseContacts_svg__Vector (Stroke)_2',\n                            d: 'M12 6.14a1.53 1.53 0 1 0 0 3.059 1.53 1.53 0 0 0 0-3.06ZM8.87 7.668a3.13 3.13 0 1 1 6.26 0 3.13 3.13 0 0 1-6.26 0Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            id: 'BaseContacts_svg__Vector (Stroke)_3',\n                            d: 'M7.2 15.66c0-2.387 2.309-4.06 4.8-4.06 2.492 0 4.8 1.673 4.8 4.06a.8.8 0 0 1-1.6 0c0-1.214-1.271-2.46-3.2-2.46-1.928 0-3.2 1.246-3.2 2.46a.8.8 0 0 1-1.6 0Z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const BaseUpload = /*#__PURE__*/ __createIcon(\n    'BaseUpload',\n    [\n        {\n            u: () => new URL('./general/BaseUpload.svg', import.meta.url),\n            j: () =>\n                /*#__PURE__*/ _jsx('svg', {\n                    xmlns: 'http://www.w3.org/2000/svg',\n                    viewBox: '0 0 24 25',\n                    children: /*#__PURE__*/ _jsxs('g', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        clipRule: 'evenodd',\n                        children: [\n                            /*#__PURE__*/ _jsx('path', {\n                                d: 'm12 5.12 4.566 4.565a.8.8 0 0 1-1.131 1.131L12.8 8.182v7.569a.8.8 0 0 1-1.6 0V8.18l-2.634 2.635a.8.8 0 0 1-1.131-1.131L12 5.119Z',\n                            }),\n                            /*#__PURE__*/ _jsx('path', {\n                                d: 'M5.8 15.45v3h12.4v-3h1.6v3.6a1 1 0 0 1-1 1H5.2a1 1 0 0 1-1-1v-3.6h1.6Z',\n                            }),\n                        ],\n                    }),\n                }),\n            s: true,\n        },\n    ],\n    [24, 25],\n)\nexport const BaseUser = /*#__PURE__*/ __createIcon('BaseUser', [\n    {\n        u: () => new URL('./general/BaseUser.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M6.786 21.02c.637.12 1.37.18 2.215.18h6c.844 0 1.577-.06 2.214-.18-.536-1.776-2.565-3.25-5.214-3.25-2.65 0-4.679 1.474-5.215 3.25Zm-1.723.532c.266-3.141 3.413-5.382 6.938-5.382 3.524 0 6.67 2.241 6.937 5.382a.8.8 0 0 1-.57.835c-.978.289-2.1.413-3.367.413H9c-1.268 0-2.39-.124-3.367-.413a.8.8 0 0 1-.57-.835Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M3.06 3.059C4.408 1.71 6.42 1.199 9 1.199h6c2.58 0 4.592.511 5.94 1.86 1.35 1.348 1.86 3.361 1.86 5.94v6c0 1.955-.292 3.578-1.016 4.838-.744 1.292-1.895 2.119-3.426 2.552a.8.8 0 0 1-1.015-.702c-.174-2.059-2.367-3.918-5.343-3.918-2.975 0-5.168 1.86-5.343 3.918a.8.8 0 0 1-1.015.702c-1.53-.433-2.682-1.26-3.425-2.552-.725-1.26-1.017-2.883-1.017-4.838V9c0-2.579.511-4.592 1.86-5.94Zm1.13 1.13C3.29 5.092 2.8 6.58 2.8 9v6c0 1.825.278 3.127.804 4.04a3.61 3.61 0 0 0 1.65 1.506C6.029 17.943 8.865 16.17 12 16.17c3.135 0 5.971 1.773 6.747 4.376a3.615 3.615 0 0 0 1.65-1.506c.525-.913.803-2.215.803-4.04V9c0-2.42-.489-3.908-1.39-4.81-.902-.9-2.389-1.39-4.81-1.39H9c-2.42 0-3.908.49-4.81 1.39ZM12 7.8a2.776 2.776 0 0 0-2.78 2.78A2.785 2.785 0 0 0 12 13.37a2.785 2.785 0 0 0 2.78-2.79A2.776 2.776 0 0 0 12 7.8Zm-4.38 2.78A4.376 4.376 0 0 1 12 6.2a4.376 4.376 0 0 1 4.38 4.38A4.385 4.385 0 0 1 12 14.97a4.385 4.385 0 0 1-4.38-4.39Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M12 7.8a2.776 2.776 0 0 0-2.78 2.78A2.785 2.785 0 0 0 12 13.37a2.785 2.785 0 0 0 2.78-2.79A2.776 2.776 0 0 0 12 7.8Zm-4.38 2.78A4.376 4.376 0 0 1 12 6.2a4.376 4.376 0 0 1 4.38 4.38A4.385 4.385 0 0 1 12 14.97a4.385 4.385 0 0 1-4.38-4.39Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const BestTrade = /*#__PURE__*/ __createIcon('BestTrade', [\n    {\n        u: () => new URL('./general/BestTrade.svg', import.meta.url),\n    },\n])\nexport const BluePin = /*#__PURE__*/ __createIcon('BluePin', [\n    {\n        u: () => new URL('./general/BluePin.svg', import.meta.url),\n    },\n])\nexport const BorderedSuccess = /*#__PURE__*/ __createIcon('BorderedSuccess', [\n    {\n        u: () => new URL('./general/BorderedSuccess.svg', import.meta.url),\n    },\n])\nexport const BusyWalletNav = /*#__PURE__*/ __createIcon('BusyWalletNav', [\n    {\n        u: () => new URL('./general/BusyWalletNav.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M17.77 9.873h3.484c.412 0 .746.326.746.728v2.53a.746.746 0 0 1-.746.729h-3.405c-.994.013-1.863-.651-2.089-1.595a1.982 1.982 0 0 1 .433-1.652 2.092 2.092 0 0 1 1.576-.74Zm.15 2.66h.33a.755.755 0 0 0 .764-.745.755.755 0 0 0-.764-.745h-.33a.766.766 0 0 0-.54.213.728.728 0 0 0-.224.524c0 .413.341.749.765.754Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M22 8.382h-4.231v.034c-1.964 0-3.556 1.552-3.556 3.467s1.592 3.467 3.556 3.467H22v.312C22 19.015 19.964 21 16.516 21H7.484C4.036 21 2 19.015 2 15.662V8.338C2 4.985 4.036 3 7.484 3h9.032C19.964 3 22 4.985 22 8.382Zm-15.262 0h5.644a.755.755 0 0 0 .765-.746.755.755 0 0 0-.764-.745H6.738a.755.755 0 0 0-.764.736c0 .413.34.75.764.754Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: '#FF3545',\n                        d: 'M23 3.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0Z',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: '#fff',\n                        fillRule: 'evenodd',\n                        d: 'M24 3.5a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0ZM20.5 6a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const Buy = /*#__PURE__*/ __createIcon('Buy', [\n    {\n        u: () => new URL('./general/Buy.svg', import.meta.url),\n    },\n])\nexport const Cached = /*#__PURE__*/ __createIcon('Cached', [\n    {\n        u: () => new URL('./general/Cached.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 25 25',\n                children: /*#__PURE__*/ _jsx('path', {\n                    d: 'm19.617 8.902-4 4h3c0 3.31-2.69 6-6 6a5.87 5.87 0 0 1-2.8-.7l-1.46 1.46a7.93 7.93 0 0 0 4.26 1.24c4.42 0 8-3.58 8-8h3l-4-4Zm-13 4c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46a7.93 7.93 0 0 0-4.26-1.24c-4.42 0-8 3.58-8 8h-3l4 4 4-4h-3Z',\n                    style: {\n                        '--default-color': '#1C68F3',\n                        fill: 'var(--icon-color, var(--default-color, currentColor))',\n                    },\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Candle = /*#__PURE__*/ __createIcon('candle', [\n    {\n        u: () => new URL('./general/candle.svg', import.meta.url),\n    },\n])\nexport const Card = /*#__PURE__*/ __createIcon('Card', [\n    {\n        u: () => new URL('./general/Card.svg', import.meta.url),\n    },\n])\nexport const Check = /*#__PURE__*/ __createIcon('Check', [\n    {\n        u: () => new URL('./general/Check.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    d: 'M21.066 6.434a.8.8 0 0 1 0 1.13l-10 10a.8.8 0 0 1-1.131 0l-5-5a.8.8 0 0 1 1.13-1.13l4.435 4.434 9.434-9.434a.8.8 0 0 1 1.132 0Z',\n                    clipRule: 'evenodd',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Checkbox = /*#__PURE__*/ __createIcon('Checkbox', [\n    {\n        u: () => new URL('./general/Checkbox.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 18 18',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        d: 'M0 4a4 4 0 0 1 4-4h10a4 4 0 0 1 4 4v10a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V4Z',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: '#fff',\n                        fillRule: 'evenodd',\n                        d: 'M14.03 5.47a.75.75 0 0 1 0 1.06l-6 6a.75.75 0 0 1-1.06 0l-3-3a.75.75 0 0 1 1.06-1.06l2.47 2.47 5.47-5.47a.75.75 0 0 1 1.06 0Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const CheckboxBlank = /*#__PURE__*/ __createIcon('CheckboxBlank', [\n    {\n        u: () => new URL('./general/CheckboxBlank.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsx('rect', {\n                    width: '18',\n                    height: '18',\n                    x: '1',\n                    y: '1',\n                    stroke: 'currentColor',\n                    strokeWidth: '2',\n                    rx: '3',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const CheckboxBorder = /*#__PURE__*/ __createIcon('CheckboxBorder', [\n    {\n        u: () => new URL('./general/CheckboxBorder.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 18 18',\n                children: /*#__PURE__*/ _jsx('rect', {\n                    width: '17',\n                    height: '17',\n                    x: '.5',\n                    y: '.5',\n                    fill: '#fff',\n                    stroke: 'currentColor',\n                    rx: '3.5',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const CheckboxNo = /*#__PURE__*/ __createIcon('CheckboxNo', [\n    {\n        u: () => new URL('./general/CheckboxNo.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 16 16',\n                children: /*#__PURE__*/ _jsx('rect', {\n                    width: '14',\n                    height: '14',\n                    x: '1',\n                    y: '1',\n                    stroke: 'currentColor',\n                    strokeWidth: '2',\n                    rx: '3',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const CheckCircle = /*#__PURE__*/ __createIcon('CheckCircle', [\n    {\n        u: () => new URL('./general/CheckCircle.svg', import.meta.url),\n    },\n])\nexport const ChevronUp = /*#__PURE__*/ __createIcon('ChevronUp', [\n    {\n        u: () => new URL('./general/ChevronUp.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'none',\n                    stroke: 'currentColor',\n                    strokeLinecap: 'round',\n                    strokeLinejoin: 'round',\n                    strokeWidth: '1.25',\n                    d: 'M5.833 10.833 10 15l4.167-4.167M5.833 5 10 9.167 14.167 5',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const China = /*#__PURE__*/ __createIcon('China', [\n    {\n        u: () => new URL('./general/China.svg', import.meta.url),\n    },\n])\nexport const CircleClose = /*#__PURE__*/ __createIcon('CircleClose', [\n    {\n        u: () => new URL('./general/CircleClose.svg', import.meta.url),\n    },\n])\nexport const CircleLoading = /*#__PURE__*/ __createIcon('CircleLoading', [\n    {\n        u: () => new URL('./general/CircleLoading.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 36 36',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'currentColor',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M34.5 18c0 9.113-7.387 16.5-16.5 16.5S1.5 27.113 1.5 18 8.887 1.5 18 1.5 34.5 8.887 34.5 18ZM4.8 18c0 7.29 5.91 13.2 13.2 13.2 7.29 0 13.2-5.91 13.2-13.2 0-7.29-5.91-13.2-13.2-13.2-7.29 0-13.2 5.91-13.2 13.2Z',\n                            opacity: '.5',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M18 32.85c0 .911-.74 1.658-1.647 1.568A16.5 16.5 0 1 1 31.595 8.65c.517.751.218 1.76-.58 2.199-.799.439-1.794.14-2.33-.598a13.2 13.2 0 1 0-12.33 20.846c.903.114 1.645.842 1.645 1.753Z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const CircleWarning = /*#__PURE__*/ __createIcon('CircleWarning', [\n    {\n        u: () => new URL('./general/CircleWarning.svg', import.meta.url),\n    },\n])\nexport const Clear = /*#__PURE__*/ __createIcon('Clear', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/Clear.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/Clear.light.svg', import.meta.url),\n    },\n])\nexport const Close = /*#__PURE__*/ __createIcon('Close', [\n    {\n        u: () => new URL('./general/Close.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsx('path', {\n                    stroke: 'currentColor',\n                    strokeLinecap: 'round',\n                    strokeLinejoin: 'round',\n                    strokeWidth: '1.25',\n                    d: 'M15 5 5 15M5 5l10 10',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Cloud = /*#__PURE__*/ __createIcon('Cloud', [\n    {\n        u: () => new URL('./general/Cloud.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 18 18',\n                children: [\n                    /*#__PURE__*/ _jsxs('g', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        clipPath: \"url('#Cloud_svg__cloud_a')\",\n                        clipRule: 'evenodd',\n                        children: [\n                            /*#__PURE__*/ _jsx('path', {\n                                d: 'M4.924 7.633a.6.6 0 0 1-.536.658 2.576 2.576 0 1 0 .726 5.097.6.6 0 0 1 .217 1.18 3.776 3.776 0 1 1-1.065-7.471.6.6 0 0 1 .658.536Z',\n                            }),\n                            /*#__PURE__*/ _jsx('path', {\n                                d: 'M13.515 7.313a.6.6 0 0 1-.737-.422 4.253 4.253 0 1 0-8.107 2.55.6.6 0 0 1-1.129.406 5.453 5.453 0 1 1 10.395-3.27.6.6 0 0 1-.422.736Z',\n                            }),\n                            /*#__PURE__*/ _jsx('path', {\n                                d: 'M12.574 13.412a2.889 2.889 0 1 0-1.734-4.951.6.6 0 0 1-.835-.862 4.088 4.088 0 1 1 2.455 7.008.6.6 0 0 1 .114-1.195Zm-3.948-2.038a.6.6 0 0 1 .6.6v4.01l1.282-1.28a.6.6 0 1 1 .848.848L9.05 17.858a.6.6 0 0 1-.848 0l-2.306-2.306a.6.6 0 1 1 .848-.849l1.282 1.282v-4.011a.6.6 0 0 1 .6-.6Z',\n                            }),\n                        ],\n                    }),\n                    /*#__PURE__*/ _jsx('defs', {\n                        children: /*#__PURE__*/ _jsx('clipPath', {\n                            id: 'Cloud_svg__cloud_a',\n                            children: /*#__PURE__*/ _jsx('path', {\n                                fill: 'currentColor',\n                                d: 'M.043.933h18v18h-18z',\n                            }),\n                        }),\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const CloudBackup = /*#__PURE__*/ __createIcon('CloudBackup', [\n    {\n        u: () => new URL('./general/CloudBackup.png', import.meta.url),\n    },\n])\nexport const CloudBackup2 = /*#__PURE__*/ __createIcon('CloudBackup2', [\n    {\n        u: () => new URL('./general/CloudBackup2.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 19 19',\n                children: [\n                    /*#__PURE__*/ _jsxs('g', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        clipPath: \"url('#CloudBackup2_svg__cloud_backup_a')\",\n                        clipRule: 'evenodd',\n                        children: [\n                            /*#__PURE__*/ _jsx('path', {\n                                d: 'M4.924 7.633a.6.6 0 0 1-.536.658 2.576 2.576 0 1 0 .726 5.097.6.6 0 0 1 .217 1.18 3.776 3.776 0 1 1-1.065-7.471.6.6 0 0 1 .658.536Z',\n                            }),\n                            /*#__PURE__*/ _jsx('path', {\n                                d: 'M13.515 7.313a.6.6 0 0 1-.737-.422 4.253 4.253 0 1 0-8.107 2.55.6.6 0 0 1-1.129.406 5.453 5.453 0 1 1 10.395-3.27.6.6 0 0 1-.422.736Z',\n                            }),\n                            /*#__PURE__*/ _jsx('path', {\n                                d: 'M12.574 13.412a2.889 2.889 0 1 0-1.734-4.951.6.6 0 0 1-.835-.862 4.088 4.088 0 1 1 2.455 7.008.6.6 0 0 1 .114-1.195Z',\n                            }),\n                            /*#__PURE__*/ _jsx('path', {\n                                d: 'M8.626 16.535a.6.6 0 0 1-.6-.6v-4.011l-1.282 1.282a.6.6 0 0 1-.849-.849l2.306-2.306a.6.6 0 0 1 .849 0l2.306 2.306a.6.6 0 0 1-.848.849l-1.282-1.282v4.01a.6.6 0 0 1-.6.6Z',\n                            }),\n                        ],\n                    }),\n                    /*#__PURE__*/ _jsx('defs', {\n                        children: /*#__PURE__*/ _jsx('clipPath', {\n                            id: 'CloudBackup2_svg__cloud_backup_a',\n                            children: /*#__PURE__*/ _jsx('path', {\n                                fill: 'currentColor',\n                                d: 'M.043.933h18v18h-18z',\n                            }),\n                        }),\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const CloudLink = /*#__PURE__*/ __createIcon('CloudLink', [\n    {\n        u: () => new URL('./general/CloudLink.png', import.meta.url),\n    },\n])\nexport const CNY = /*#__PURE__*/ __createIcon('CNY', [\n    {\n        u: () => new URL('./general/CNY.svg', import.meta.url),\n    },\n])\nexport const Collectible = /*#__PURE__*/ __createIcon(\n    'Collectible',\n    [\n        {\n            u: () => new URL('./general/Collectible.svg', import.meta.url),\n            j: () =>\n                /*#__PURE__*/ _jsx('svg', {\n                    xmlns: 'http://www.w3.org/2000/svg',\n                    viewBox: '0 0 13 12',\n                    children: /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M6.5 0c-3.307 0-6 2.69-6 6s2.693 6 6 6 6-2.693 6-6-2.69-6-6-6Zm5.223 6a5.19 5.19 0 0 1-.92 2.96 2.705 2.705 0 0 0-.026-.067V8.89c-.156-.384-.468-.844-.905-1.367v-.001c-.09-.106-.175-.205-.252-.291a.617.617 0 0 0 .11-.352V3.975A3.255 3.255 0 0 0 7.299.838 5.233 5.233 0 0 1 11.723 6ZM1.277 6A5.233 5.233 0 0 1 5.805.823a2.85 2.85 0 0 0-1.287.739 2.972 2.972 0 0 0-.883 2.098v3.4c-.39.423-.843 1.015-1.117 1.61a6.888 6.888 0 0 0-.192.458A5.184 5.184 0 0 1 1.277 6Zm1.637 3.793c.062-.197.135-.397.224-.605.017.112.04.226.07.337l.001.002c.102.356.306.66.481.874a5.335 5.335 0 0 1-.776-.608Zm1.554-2.47c.023-.021.047-.042.073-.063a3.02 3.02 0 0 0-.009.233c0 .28.045.589.2.841a.97.97 0 0 0 .715.47c.09.016.173.02.249.02.45 0 .852-.183 1.167-.393.23-.154.423-.327.567-.474a.636.636 0 0 0 .486.02l.682-.245a2.694 2.694 0 0 0-.824.774c-.281.406-.443 1.019-.54 1.56-.077.432-.116.843-.136 1.116-.194.025-.389.04-.585.041-.063-.3-.236-.745-.726-1.013a1.97 1.97 0 0 0-1.406-.204c-.143-.154-.342-.41-.422-.691-.152-.533-.057-1.184-.013-1.423a6.11 6.11 0 0 1 .522-.569Zm1.016 1.254-.035.228h-.004l.04-.228Zm2.35-4.3h-.002V3.054c0-.825-.672-1.493-1.493-1.493h-.126a1.5 1.5 0 0 0-.23.018c.173-.046.354-.069.54-.067a2.47 2.47 0 0 1 2.43 2.463v2.8l-1.118.405V4.277ZM4.417 3.66c0-.545.215-1.085.594-1.487-.182.247-.29.552-.29.882v1.454c0 .443.196.836.498 1.108a.714.714 0 0 1-.128.247c-.107.14-.314.28-.566.45a6.006 6.006 0 0 0-.108.072V3.66Zm1.92 2.348c.26 0 .504-.068.715-.186v1.393a3.274 3.274 0 0 1-.454.444c-.31.247-.678.433-1.034.379h-.001a.22.22 0 0 1-.172-.108c-.081-.136-.104-.384-.074-.681.025-.248.08-.49.126-.644a1.513 1.513 0 0 0 .469-.63c.095.02.195.033.299.033h.126Zm-.839-2.953c0-.396.322-.716.716-.716h.126c.396 0 .716.322.716.716v1.454a.716.716 0 0 1-.716.716h-.126a.716.716 0 0 1-.716-.716V3.054Zm2.915 5.894a1.923 1.923 0 0 1 1.011-.741c.318.399.533.734.633.978.052.127.1.294.139.499a5.244 5.244 0 0 1-2.305 1.35c.022-.248.059-.56.117-.878.088-.484.22-.94.405-1.208Zm-3.95 1.857a.188.188 0 0 1 .01-.018c.12-.041.495-.137.94.106a.638.638 0 0 1 .258.262 5.25 5.25 0 0 1-1.208-.35Z',\n                        clipRule: 'evenodd',\n                    }),\n                }),\n            s: true,\n        },\n    ],\n    [13, 12],\n)\nexport const Comeback = /*#__PURE__*/ __createIcon('Comeback', [\n    {\n        u: () => new URL('./general/Comeback.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'M20 11H7.414l4.293-4.293a1 1 0 0 0-1.414-1.414l-6 6a1 1 0 0 0 0 1.414l6 6a.996.996 0 0 0 1.415 0 1 1 0 0 0 0-1.414L7.413 13H20a1 1 0 1 0 0-2Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Connect = /*#__PURE__*/ __createIcon('Connect', [\n    {\n        u: () => new URL('./general/Connect.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'currentColor',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M6.39 8.988a.6.6 0 0 1 .6-.6h4.02a.6.6 0 1 1 0 1.2H6.99a.6.6 0 0 1-.6-.6Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M1.986 9a3.961 3.961 0 0 1 3.96-3.96h2.015v1.2H5.947a2.761 2.761 0 1 0 0 5.521H7.96v1.2H5.947a3.961 3.961 0 0 1-3.961-3.96Zm14.028 0a3.961 3.961 0 0 0-3.96-3.96H9.288v1.2h2.764a2.761 2.761 0 0 1 0 5.521H9.29v1.2h2.764a3.961 3.961 0 0 0 3.961-3.96Z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Contacts = /*#__PURE__*/ __createIcon('Contacts', [\n    {\n        u: () => new URL('./general/Contacts.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    d: 'M17.294 7.291A5.274 5.274 0 0 1 12 12.583a5.275 5.275 0 0 1-5.294-5.292A5.274 5.274 0 0 1 12 2a5.273 5.273 0 0 1 5.294 5.291ZM12 22c-4.338 0-8-.705-8-3.425 0-2.721 3.685-3.401 8-3.401 4.339 0 8 .705 8 3.425 0 2.72-3.685 3.4-8 3.4Zm3.644-8.014a.8.8 0 0 1 .8-.8h5.112a.8.8 0 0 1 0 1.6h-5.112a.8.8 0 0 1-.8-.8Zm1.289-2.45a.8.8 0 0 1 .8-.8h3.823a.8.8 0 0 1 0 1.6h-3.823a.8.8 0 0 1-.8-.8Zm1.203-2.449a.8.8 0 0 1 .8-.8h2.62a.8.8 0 0 1 0 1.6h-2.62a.8.8 0 0 1-.8-.8Z',\n                    clipRule: 'evenodd',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Copy = /*#__PURE__*/ __createIcon(\n    'Copy',\n    [\n        {\n            u: () => new URL('./general/Copy.svg', import.meta.url),\n            j: () =>\n                /*#__PURE__*/ _jsxs('svg', {\n                    xmlns: 'http://www.w3.org/2000/svg',\n                    fill: 'none',\n                    viewBox: '0 0 16 17',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            fillRule: 'evenodd',\n                            d: 'M7.736 12.923c-.898 0-1.68-.268-2.244-.794-.566-.53-.858-1.272-.858-2.117V5.267c0-.84.29-1.58.851-2.11.559-.525 1.336-.794 2.227-.8h4.386c.898 0 1.68.267 2.243.793.567.53.859 1.272.859 2.117v4.745c0 .84-.29 1.58-.852 2.109-.558.525-1.335.795-2.226.8h-.003l-4.383.002v-.534.534Zm0-1.067c-.689 0-1.19-.203-1.516-.506-.32-.3-.52-.746-.52-1.338V5.267c0-.589.198-1.033.516-1.332.322-.303.82-.507 1.5-.51h.002l4.38-.002c.689 0 1.19.203 1.515.506.321.3.52.746.52 1.338v4.745c0 .589-.197 1.032-.516 1.332-.322.303-.818.506-1.5.51l-4.381.002Z',\n                            clipRule: 'evenodd',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            fillRule: 'evenodd',\n                            d: 'M5.41 15c-.898 0-1.68-.268-2.243-.794-.567-.53-.86-1.272-.86-2.117V7.344c0-1.084.484-1.987 1.37-2.49a.533.533 0 0 1 .526.928c-.514.292-.828.817-.828 1.562v4.745c0 .592.199 1.037.52 1.338.325.303.826.506 1.515.506l4.382-.002c.763-.005 1.295-.258 1.612-.627a.533.533 0 0 1 .81.694c-.563.654-1.418.994-2.418 1h-.003L5.41 15v-.534V15Z',\n                            clipRule: 'evenodd',\n                        }),\n                    ],\n                }),\n            s: true,\n        },\n    ],\n    [16, 17],\n)\nexport const Currency = /*#__PURE__*/ __createIcon('Currency', [\n    {\n        u: () => new URL('./general/Currency.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 25 25',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        d: 'M3.36 8.49v9h15v-9h-15Zm14.25 2.128a2.265 2.265 0 0 1-1.377-1.378h1.377v1.378Zm-2.133 6.122H6.245a2.975 2.975 0 0 0-2.135-2.133v-3.23A2.978 2.978 0 0 0 6.244 9.24h9.232a2.979 2.979 0 0 0 2.134 2.138v3.227a2.978 2.978 0 0 0-2.133 2.135Zm-9.99-7.5a2.258 2.258 0 0 1-1.377 1.371v-1.37h1.377ZM4.11 15.373a2.255 2.255 0 0 1 1.372 1.367H4.11v-1.367Zm12.132 1.367a2.26 2.26 0 0 1 1.368-1.376v1.376h-1.368Z',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        d: 'M14.985 11.865a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25Zm0 1.5a.376.376 0 0 1 0-.75.376.376 0 0 1 0 .75ZM10.86 9.99c-1.242 0-2.25 1.344-2.25 3 0 1.657 1.008 3 2.25 3 1.243 0 2.25-1.343 2.25-3 0-1.656-1.007-3-2.25-3Zm0 5.25c-.813 0-1.5-1.03-1.5-2.25s.687-2.25 1.5-2.25 1.5 1.03 1.5 2.25-.687 2.25-1.5 2.25Zm-4.125-3.375a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25Zm0 1.5a.375.375 0 0 1 0-.75.376.376 0 0 1 0 .75ZM5.28 6.48H6v1.56h-.72zm14.76 0v.72H6v-.72z',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: '#111418',\n                        d: 'M20.04 14.76v.72h-.96v-.72z',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        stroke: 'currentColor',\n                        strokeWidth: '.36',\n                        d: 'M20.22 6.66h.36v8.64h-.36z',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const Dark = /*#__PURE__*/ __createIcon('Dark', [\n    {\n        u: () => new URL('./general/Dark.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 16 16',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'M9.266 1.878a3.979 3.979 0 0 0 1.007 7.827 3.979 3.979 0 0 0 3.849-2.971 6.25 6.25 0 1 1-4.855-4.855Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Decrease = /*#__PURE__*/ __createIcon('decrease', [\n    {\n        u: () => new URL('./general/decrease.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    id: 'decrease_svg__base/decrease',\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    clipRule: 'evenodd',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            id: 'decrease_svg__Vector (Stroke)',\n                            d: 'M10 4a6 6 0 1 0 0 12 6 6 0 0 0 0-12Zm-7.333 6a7.333 7.333 0 1 1 14.666 0 7.333 7.333 0 0 1-14.666 0Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            id: 'decrease_svg__Vector (Stroke)_2',\n                            d: 'M6.667 10c0-.369.298-.667.666-.667h5.334a.667.667 0 1 1 0 1.333H7.333a.667.667 0 0 1-.666-.667Z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const DefaultToken = /*#__PURE__*/ __createIcon('DefaultToken', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/DefaultToken.dark.svg', import.meta.url),\n    },\n    {\n        c: ['dim'],\n        u: () => new URL('./general/DefaultToken.dim.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/DefaultToken.light.svg', import.meta.url),\n    },\n])\nexport const Delete = /*#__PURE__*/ __createIcon('Delete', [\n    {\n        u: () => new URL('./general/Delete.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 16 16',\n                children: /*#__PURE__*/ _jsx('path', {\n                    stroke: 'currentColor',\n                    strokeLinecap: 'round',\n                    strokeLinejoin: 'round',\n                    strokeWidth: '1.25',\n                    d: 'M2 4h12M5.333 4V2.667a1.333 1.333 0 0 1 1.334-1.334h2.666a1.334 1.334 0 0 1 1.334 1.334V4m2 0v9.333a1.334 1.334 0 0 1-1.334 1.334H4.667a1.333 1.333 0 0 1-1.334-1.334V4h9.334zm-6 3.333v4m2.666-4v4',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Disconnect = /*#__PURE__*/ __createIcon('Disconnect', [\n    {\n        u: () => new URL('./general/Disconnect.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M16.348 4.455a.8.8 0 0 1 .293 1.093L8.746 19.223a.8.8 0 0 1-1.386-.8l7.895-13.675a.8.8 0 0 1 1.093-.293Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M2.647 12A5.281 5.281 0 0 1 7.93 6.72h3.316v1.6H7.929a3.681 3.681 0 1 0 0 7.362h1.163v1.6H7.93a5.281 5.281 0 0 1-5.282-5.28Zm18.705 0a5.281 5.281 0 0 0-5.28-5.281h-1.66v1.6h1.66a3.681 3.681 0 0 1 0 7.362H12.35v1.6h3.72a5.281 5.281 0 0 0 5.281-5.28Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const Document = /*#__PURE__*/ __createIcon('Document', [\n    {\n        u: () => new URL('./general/Document.svg', import.meta.url),\n    },\n])\nexport const Documents = /*#__PURE__*/ __createIcon('Documents', [\n    {\n        u: () => new URL('./general/Documents.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 16 16',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M3.98 2.61c-.42.45-.65 1.14-.65 2.06v6.66c0 .92.23 1.6.65 2.06.42.44 1.09.74 2.15.74h5.34c1.06 0 1.74-.3 2.15-.74.42-.46.65-1.14.65-2.06V4.67c0-.92-.23-1.6-.65-2.06-.41-.44-1.09-.74-2.15-.74H6.13c-1.06 0-1.73.3-2.15.74ZM3.2 1.9C3.87 1.17 4.87.8 6.13.8h5.34c1.27 0 2.26.37 2.93 1.1.66.71.93 1.7.93 2.78v6.66c0 1.08-.27 2.07-.93 2.78-.67.72-1.66 1.09-2.93 1.09H6.13c-1.26 0-2.26-.37-2.93-1.09a3.98 3.98 0 0 1-.93-2.78V4.67c0-1.09.27-2.07.93-2.78Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M11.46 1.33c.29 0 .53.24.53.54V3.2c0 .44.36.8.8.8h1.33a.53.53 0 0 1 0 1.07H12.8a1.87 1.87 0 0 1-1.87-1.87V1.87c0-.3.24-.54.54-.54ZM5.6 8c0-.3.24-.53.53-.53h4a.53.53 0 1 1 0 1.06h-4A.53.53 0 0 1 5.6 8Zm0 2.14c0-.3.24-.54.53-.54h5.33a.53.53 0 0 1 0 1.07H6.13a.53.53 0 0 1-.53-.53Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const Download = /*#__PURE__*/ __createIcon('Download', [\n    {\n        u: () => new URL('./general/Download.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 16 16',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'none',\n                    stroke: 'currentColor',\n                    strokeLinecap: 'round',\n                    strokeLinejoin: 'round',\n                    strokeWidth: '1.25',\n                    d: 'M14 10v2.667A1.334 1.334 0 0 1 12.667 14H3.333A1.334 1.334 0 0 1 2 12.667V10m2.667-3.333L8 10l3.333-3.333M8 10V2',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Download2 = /*#__PURE__*/ __createIcon('Download2', [\n    {\n        u: () => new URL('./general/Download2.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M11.694 9.779a.8.8 0 0 1-.494-.74v-6a.8.8 0 0 1 1.6 0v4.07l.634-.635a.8.8 0 0 1 1.132 1.132l-2 2a.8.8 0 0 1-.872.173Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M12.566 9.606a.8.8 0 0 1-1.132 0l-2-2a.8.8 0 1 1 1.132-1.132l2 2a.8.8 0 0 1 0 1.132Zm-9.724 3.11c.731-1.058 2.083-1.517 4.158-1.517.552 0 .982.057 1.37.209.364.141.642.35.88.529l.03.022a.8.8 0 0 1 .104.094l1.01 1.078a2.198 2.198 0 0 0 3.202.001l.003-.002 1.02-1.08a.803.803 0 0 1 .101-.09l.03-.023c.239-.18.516-.388.88-.53.388-.15.818-.208 1.37-.208 2.076 0 3.427.459 4.158 1.517.35.505.502 1.075.573 1.622.07.53.07 1.101.07 1.633v1.028c0 1.451-.259 2.928-1.185 4.046-.951 1.148-2.468 1.754-4.616 1.754H8c-2.576 0-4.177-.57-5.033-1.81-.412-.596-.595-1.274-.682-1.94-.085-.65-.085-1.352-.085-2.02V15.97c0-.532 0-1.102.07-1.633.07-.547.223-1.117.572-1.622Zm1.014 1.83c-.055.417-.056.888-.056 1.453v1c0 .703.001 1.306.072 1.842.069.53.198.93.411 1.239.395.57 1.293 1.12 3.717 1.12h8c1.852 0 2.836-.514 3.384-1.176.574-.693.816-1.716.816-3.025v-1c0-.565-.001-1.036-.056-1.454-.053-.41-.151-.702-.302-.92-.269-.39-.917-.826-2.842-.826-.448 0-.658.048-.79.1-.131.05-.24.124-.475.3l-.97 1.027-.002.001a3.799 3.799 0 0 1-5.534.002l-.003-.003-.962-1.029c-.235-.175-.343-.247-.474-.299-.132-.05-.342-.099-.79-.099-1.924 0-2.573.437-2.842.826-.15.218-.249.51-.302.92Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M8.797 5.961a.8.8 0 0 1-.72.874c-1.355.13-1.796.54-1.996.915-.261.49-.28 1.179-.28 2.248v2a.8.8 0 1 1-1.6 0V9.894c-.001-.92-.002-2.015.469-2.897.55-1.03 1.609-1.596 3.253-1.755a.8.8 0 0 1 .874.72Zm6.407 0a.8.8 0 0 1 .873-.719c1.645.159 2.704.725 3.254 1.755.47.882.47 1.977.47 2.897v2.104a.8.8 0 1 1-1.6 0v-2c0-1.07-.02-1.759-.282-2.248-.2-.375-.64-.784-1.996-.915a.8.8 0 0 1-.719-.874Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const Drop = /*#__PURE__*/ __createIcon(\n    'Drop',\n    [\n        {\n            u: () => new URL('./general/Drop.svg', import.meta.url),\n            j: () =>\n                /*#__PURE__*/ _jsx('svg', {\n                    xmlns: 'http://www.w3.org/2000/svg',\n                    viewBox: '0 0 20 24',\n                    children: /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        d: 'M9.46 14.845a.7.7 0 0 0 1.08 0l2.845-3.45a.7.7 0 0 0-.54-1.145h-5.69a.7.7 0 0 0-.54 1.145l2.845 3.45Z',\n                    }),\n                }),\n            s: true,\n        },\n    ],\n    [20, 24],\n)\nexport const Dump = /*#__PURE__*/ __createIcon('Dump', [\n    {\n        u: () => new URL('./general/Dump.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M3.566 4.565C3.07 5.06 2.8 5.993 2.8 7.999v8c0 2.006.27 2.939.766 3.434.495.496 1.428.766 3.434.766h10c2.006 0 2.939-.27 3.434-.766.496-.495.766-1.428.766-3.434v-4c0-2.006-.27-2.939-.765-3.434-.496-.496-1.43-.766-3.435-.766h-3c-.572 0-1.043-.084-1.446-.328-.359-.216-.592-.525-.759-.746l-.032-.042-.003-.004-1.5-2c-.304-.405-.44-.569-.623-.679-.165-.099-.456-.2-1.137-.2H7c-2.006 0-2.939.27-3.434.765ZM2.435 3.434C3.439 2.429 5.005 2.199 7 2.199h1.5c.82 0 1.443.118 1.96.43.478.286.787.699 1.046 1.045l.034.045 1.499 1.998c.21.277.27.341.343.385.051.031.19.097.618.097h3c1.994 0 3.561.23 4.566 1.235 1.004 1.004 1.234 2.57 1.234 4.565v4c0 1.995-.23 3.562-1.234 4.566-1.005 1.004-2.572 1.234-4.566 1.234H7c-1.994 0-3.561-.23-4.565-1.234C1.43 19.56 1.2 17.993 1.2 15.999V8c0-1.994.23-3.561 1.235-4.565Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M7.2 3a.8.8 0 0 1 .8-.8h9c1.123 0 2.113.28 2.816.984.703.702.984 1.692.984 2.815v1.38a.8.8 0 0 1-1.6 0V6c0-.876-.218-1.387-.515-1.684-.297-.297-.808-.516-1.685-.516H8a.8.8 0 0 1-.8-.8Zm8.339 11.106a.8.8 0 0 1-.74.494h-6a.8.8 0 0 1 0-1.6h4.07l-.635-.634a.8.8 0 0 1 1.131-1.132l2 2a.8.8 0 0 1 .174.872Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M15.365 13.234a.8.8 0 0 1 0 1.132l-2 2a.8.8 0 0 1-1.131-1.132l2-2a.8.8 0 0 1 1.131 0Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const Edit = /*#__PURE__*/ __createIcon('Edit', [\n    {\n        u: () => new URL('./general/Edit.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsx('path', {\n                    stroke: 'currentColor',\n                    strokeLinecap: 'round',\n                    strokeLinejoin: 'round',\n                    strokeWidth: '1.25',\n                    d: 'M10 17.596h7.5m-3.75-13.75a1.768 1.768 0 0 1 2.5 2.5L5.833 16.763l-3.333.833.833-3.333L13.75 3.846z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Edit2 = /*#__PURE__*/ __createIcon('Edit2', [\n    {\n        u: () => new URL('./general/Edit2.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'M20 19.25a.75.75 0 1 1 0 1.5H4a.75.75 0 1 1 0-1.5h16ZM16.76 2.81l2.304 2.303a1.2 1.2 0 0 1 0 1.697l-9.8 9.8a1.2 1.2 0 0 1-.849.352H5.512a.6.6 0 0 1-.6-.6V13.46a1.2 1.2 0 0 1 .352-.849l9.8-9.8a1.2 1.2 0 0 1 1.697 0l-.001.001Zm-.848 1.273-9.5 9.5v1.88h1.879l9.5-9.5-1.879-1.88Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Empty = /*#__PURE__*/ __createIcon('Empty', [\n    {\n        u: () => new URL('./general/Empty.png', import.meta.url),\n    },\n])\nexport const EmptySimple = /*#__PURE__*/ __createIcon('EmptySimple', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/EmptySimple.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/EmptySimple.light.svg', import.meta.url),\n    },\n])\nexport const EncryptedFiles = /*#__PURE__*/ __createIcon('EncryptedFiles', [\n    {\n        u: () => new URL('./general/EncryptedFiles.svg', import.meta.url),\n    },\n])\nexport const Europe = /*#__PURE__*/ __createIcon('Europe', [\n    {\n        u: () => new URL('./general/Europe.svg', import.meta.url),\n    },\n])\nexport const Eye = /*#__PURE__*/ __createIcon('Eye', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/Eye.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/Eye.light.svg', import.meta.url),\n    },\n])\nexport const EyeColor = /*#__PURE__*/ __createIcon('EyeColor', [\n    {\n        u: () => new URL('./general/EyeColor.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 21 21',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M10.58 8.1a2.31 2.31 0 1 0 0 4.63 2.31 2.31 0 0 0 0-4.62Zm-3.65 2.32a3.65 3.65 0 1 1 7.3 0 3.65 3.65 0 0 1-7.3 0Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M2.43 7.9c2-3.14 4.93-5.04 8.15-5.04 3.22 0 6.16 1.9 8.15 5.04.46.72.67 1.64.67 2.52 0 .88-.2 1.8-.67 2.52-2 3.14-4.93 5.04-8.15 5.04-3.22 0-6.16-1.9-8.15-5.04a4.76 4.76 0 0 1-.67-2.52c0-.88.2-1.8.67-2.52Zm8.15-3.71c-2.66 0-5.21 1.56-7.03 4.42-.29.46-.46 1.11-.46 1.8 0 .7.17 1.36.46 1.81 1.82 2.86 4.37 4.43 7.03 4.43s5.21-1.57 7.03-4.43c.29-.45.46-1.1.46-1.8s-.17-1.35-.46-1.8c-1.82-2.87-4.37-4.43-7.03-4.43Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const EyeOff = /*#__PURE__*/ __createIcon('EyeOff', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/EyeOff.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/EyeOff.light.svg', import.meta.url),\n    },\n])\nexport const Facebook = /*#__PURE__*/ __createIcon('Facebook', [\n    {\n        u: () => new URL('./general/Facebook.svg', import.meta.url),\n    },\n])\nexport const File = /*#__PURE__*/ __createIcon('File', [\n    {\n        u: () => new URL('./general/File.svg', import.meta.url),\n    },\n])\nexport const FileMessage = /*#__PURE__*/ __createIcon('FileMessage', [\n    {\n        u: () => new URL('./general/FileMessage.svg', import.meta.url),\n    },\n])\nexport const FillSuccess = /*#__PURE__*/ __createIcon('FillSuccess', [\n    {\n        u: () => new URL('./general/FillSuccess.svg', import.meta.url),\n    },\n])\nexport const Filter = /*#__PURE__*/ __createIcon('Filter', [\n    {\n        u: () => new URL('./general/Filter.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    d: 'M2.535 16.26a.8.8 0 0 1 .8-.8h7.234a.8.8 0 0 1 0 1.6H3.335a.8.8 0 0 1-.8-.8Zm15.249-2.08a2.08 2.08 0 1 0-.002 4.159 2.08 2.08 0 0 0 .002-4.159Zm-3.68 2.08a3.68 3.68 0 1 1 7.36 0 3.68 3.68 0 0 1-7.36 0Zm-1.475-8.523a.8.8 0 0 1 .8-.8h7.235a.8.8 0 0 1 0 1.6H13.43a.8.8 0 0 1-.8-.8Zm-10.094 0a3.68 3.68 0 1 1 7.36 0 3.68 3.68 0 0 1-7.36 0Zm3.68-2.08a2.08 2.08 0 1 0 0 4.16 2.08 2.08 0 0 0 0-4.16Z',\n                    clipRule: 'evenodd',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Flag = /*#__PURE__*/ __createIcon('Flag', [\n    {\n        u: () => new URL('./general/Flag.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    clipRule: 'evenodd',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M4.89 1.2a.8.8 0 0 1 .8.8v20a.8.8 0 0 1-1.6 0V2a.8.8 0 0 1 .8-.8Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M4.09 4a.8.8 0 0 1 .8-.8h11.2c.74 0 1.398.102 1.934.326.542.228 1.005.603 1.232 1.16.226.554.16 1.146-.064 1.687-.222.537-.616 1.072-1.137 1.593l-1.2 1.2c-.51.51-.452 1.27-.038 1.632a.79.79 0 0 1 .038.037l1.2 1.2c.99.99 1.63 2.191 1.158 3.293-.467 1.09-1.766 1.472-3.123 1.472H4.89a.8.8 0 0 1 0-1.6h11.2c1.243 0 1.594-.367 1.652-.502.053-.124.092-.622-.818-1.532l-1.183-1.183c-1.164-1.042-1.1-2.865-.017-3.948l1.2-1.2c.43-.43.674-.794.79-1.074.113-.274.084-.413.06-.471-.023-.057-.098-.175-.369-.288-.276-.116-.705-.202-1.315-.202H4.89a.8.8 0 0 1-.8-.8Z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Folder = /*#__PURE__*/ __createIcon('Folder', [\n    {\n        u: () => new URL('./general/Folder.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M3.566 4.565C3.07 5.06 2.8 5.993 2.8 7.999v8c0 2.006.27 2.939.766 3.434.495.496 1.428.766 3.434.766h10c2.006 0 2.939-.27 3.434-.766.496-.495.766-1.428.766-3.434v-4c0-2.006-.27-2.939-.765-3.434-.496-.496-1.43-.766-3.435-.766h-3c-.572 0-1.043-.084-1.446-.328-.359-.216-.592-.525-.759-.746l-.032-.042-.003-.004-1.5-2c-.304-.405-.44-.569-.623-.679-.165-.099-.456-.2-1.137-.2H7c-2.006 0-2.939.27-3.434.765ZM2.435 3.434C3.439 2.429 5.005 2.199 7 2.199h1.5c.82 0 1.443.118 1.96.43.478.286.787.699 1.046 1.045l.034.045 1.499 1.998c.21.277.27.341.343.385.051.031.19.097.618.097h3c1.994 0 3.561.23 4.566 1.235 1.004 1.004 1.234 2.57 1.234 4.565v4c0 1.995-.23 3.562-1.234 4.566-1.005 1.004-2.572 1.234-4.566 1.234H7c-1.994 0-3.561-.23-4.565-1.234C1.43 19.56 1.2 17.993 1.2 15.999V8c0-1.994.23-3.561 1.235-4.565Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M7.2 3a.8.8 0 0 1 .8-.8h9c1.123 0 2.113.28 2.816.984.703.702.984 1.692.984 2.815v1.38a.8.8 0 0 1-1.6 0V6c0-.876-.218-1.387-.515-1.684-.297-.297-.808-.516-1.685-.516H8a.8.8 0 0 1-.8-.8Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const Gas = /*#__PURE__*/ __createIcon('Gas', [\n    {\n        u: () => new URL('./general/Gas.svg', import.meta.url),\n    },\n])\nexport const GasStation = /*#__PURE__*/ __createIcon('GasStation', [\n    {\n        u: () => new URL('./general/GasStation.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M4.92 3.338c-.354.327-.62.85-.62 1.662v16.2h12.4V5c0-.811-.265-1.335-.62-1.662-.364-.336-.906-.538-1.58-.538h-8c-.674 0-1.215.202-1.58.538ZM3.836 2.162C4.556 1.498 5.514 1.2 6.5 1.2h8c.986 0 1.945.298 2.665.962.73.674 1.135 1.65 1.135 2.838v17a.8.8 0 0 1-.8.8h-14a.8.8 0 0 1-.8-.8V5c0-1.188.405-2.164 1.136-2.838Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M1.2 22a.8.8 0 0 1 .8-.8h17a.8.8 0 0 1 0 1.6H2a.8.8 0 0 1-.8-.8ZM6.53 4.811c.538-.47 1.226-.62 1.86-.62h4.23c.635 0 1.323.15 1.861.62.558.487.83 1.205.83 2.07v1.23c0 .864-.272 1.582-.83 2.069-.538.47-1.226.62-1.86.62H8.39c-.635 0-1.323-.15-1.862-.62-.558-.487-.829-1.205-.829-2.07V6.88c0-.864.271-1.582.83-2.069Zm1.05 1.206c-.127.11-.28.338-.28.863v1.23c0 .526.153.753.28.864.147.128.404.226.81.226h4.23c.405 0 .662-.098.808-.226.127-.11.281-.338.281-.864V6.88c0-.525-.154-.752-.28-.863-.147-.128-.404-.227-.81-.227H8.39c-.405 0-.662.1-.809.227Zm4.258 6.187a.8.8 0 0 1 0 1.131l-1.741 1.741h2.738a.8.8 0 0 1 .584 1.346l-3.134 3.355a.8.8 0 1 1-1.169-1.092l1.876-2.009H8.165A.8.8 0 0 1 7.6 15.31l3.107-3.107a.8.8 0 0 1 1.131 0Zm7.447-3.561a.8.8 0 0 1 1.073-.358l2 1A.8.8 0 0 1 22.8 10v6a.8.8 0 0 1-.798.8l-4.5.01a.8.8 0 0 1-.004-1.6l3.702-.008v-4.707l-1.558-.78a.8.8 0 0 1-.357-1.072Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const Gear = /*#__PURE__*/ __createIcon('Gear', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/Gear.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/Gear.light.svg', import.meta.url),\n    },\n])\nexport const GearSettings = /*#__PURE__*/ __createIcon('GearSettings', [\n    {\n        u: () => new URL('./general/GearSettings.svg', import.meta.url),\n    },\n])\nexport const Globe = /*#__PURE__*/ __createIcon('Globe', [\n    {\n        u: () => new URL('./general/Globe.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'M12 1.5C6.2 1.5 1.5 6.2 1.5 12S6.2 22.5 12 22.5 22.5 17.8 22.5 12 17.8 1.5 12 1.5ZM9.047 5.9c-.878.484-1.22.574-1.486.858-.263.284-.663 1.597-.84 1.712-.177.115-1.462.154-1.462.154s2.148 1.674 2.853 1.832c.706.158 2.43-.21 2.77-.142.342.07 2.116 1.67 2.324 2.074.208.404.166 1.748-.038 1.944-.204.196-1.183 1.09-1.393 1.39-.21.3-1.894 4.078-2.094 4.08-.2 0-.62-.564-.73-.848-.11-.284-.427-4.012-.59-4.263-.163-.25-1.126-.82-1.276-1.026-.15-.207-.552-1.387-.527-1.617.024-.23.492-1.007.374-1.214-.117-.207-2.207-1.033-2.61-1.18a38.524 38.524 0 0 0-.983-.332 9.077 9.077 0 0 1 8.52-6.38s.125-.018.186.14c.11.286.256 1.078.092 1.345-.143.23-2.21.99-3.088 1.474L9.047 5.9Zm11.144 8.24c-.21-.383-1.222-2.35-1.593-2.684-.23-.208-2.2-.912-2.55-1.09-.352-.177-1.258-.997-1.267-1.213-.01-.216 1.115-1.204 1.15-1.524.056-.49-1.882-1.835-1.897-2.054-.015-.22.147-.66.31-.81.403-.36 3.19.04 3.556.36 2 1.757 3.168 4.126 3.168 6.873 0 .776-.18 1.912-.282 2.18-.08.21-.443.232-.595-.04v.002Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const GrayMasks = /*#__PURE__*/ __createIcon('GrayMasks', [\n    {\n        u: () => new URL('./general/GrayMasks.svg', import.meta.url),\n    },\n])\nexport const HamburgerMenu = /*#__PURE__*/ __createIcon('HamburgerMenu', [\n    {\n        u: () => new URL('./general/HamburgerMenu.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'currentColor',\n                    children: [\n                        /*#__PURE__*/ _jsx('rect', {\n                            width: '15.383',\n                            height: '2',\n                            x: '4.309',\n                            y: '6.539',\n                            rx: '1',\n                        }),\n                        /*#__PURE__*/ _jsx('rect', {\n                            width: '15.383',\n                            height: '2',\n                            x: '4.309',\n                            y: '11',\n                            rx: '1',\n                        }),\n                        /*#__PURE__*/ _jsx('rect', {\n                            width: '15.383',\n                            height: '2',\n                            x: '4.309',\n                            y: '15.461',\n                            rx: '1',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const History = /*#__PURE__*/ __createIcon('History', [\n    {\n        u: () => new URL('./general/History.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M3.743 3.919c-.63.677-.974 1.703-.974 3.08v10c0 1.378.344 2.403.974 3.08.619.668 1.628 1.12 3.226 1.12h7.375a.8.8 0 1 1 0 1.6H6.969c-1.903 0-3.393-.547-4.399-1.63-.996-1.073-1.401-2.547-1.401-4.17V7c0-1.622.405-3.097 1.401-4.17C3.576 1.748 5.066 1.2 6.97 1.2h8c1.902 0 3.393.548 4.399 1.63.995 1.073 1.4 2.548 1.4 4.17v4.205a.8.8 0 1 1-1.6 0V6.999c0-1.377-.343-2.403-.973-3.08-.62-.667-1.628-1.12-3.226-1.12h-8c-1.598 0-2.607.453-3.226 1.12Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M18.95 14.418a3.442 3.442 0 1 0 0 6.884 3.442 3.442 0 0 0 0-6.884Zm-4.842 3.442a4.842 4.842 0 1 1 9.684 0 4.842 4.842 0 0 1-9.684 0Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M18.949 14.895a.7.7 0 0 1 .7.7v2.278a.7.7 0 1 1-1.4 0v-2.279a.7.7 0 0 1 .7-.7Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M18.343 17.522a.7.7 0 0 1 .957-.256l1.668.963a.7.7 0 1 1-.7 1.213l-1.668-.963a.7.7 0 0 1-.257-.957ZM14.95 2a.8.8 0 0 1 .8.8v2c0 .658.542 1.2 1.2 1.2h2a.8.8 0 0 1 0 1.6h-2a2.806 2.806 0 0 1-2.8-2.8v-2a.8.8 0 0 1 .8-.8Zm-8.783 8.388a.8.8 0 0 1 .8-.8h6a.8.8 0 0 1 0 1.6h-6a.8.8 0 0 1-.8-.8Zm0 4.85a.8.8 0 0 1 .8-.8h4.814a.8.8 0 0 1 0 1.6H6.967a.8.8 0 0 1-.8-.8Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const HKD = /*#__PURE__*/ __createIcon('HKD', [\n    {\n        u: () => new URL('./general/HKD.svg', import.meta.url),\n    },\n])\nexport const HongKong = /*#__PURE__*/ __createIcon('HongKong', [\n    {\n        u: () => new URL('./general/HongKong.svg', import.meta.url),\n    },\n])\nexport const Identity = /*#__PURE__*/ __createIcon('Identity', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/Identity.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/Identity.light.svg', import.meta.url),\n    },\n])\nexport const Info = /*#__PURE__*/ __createIcon('Info', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/Info.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/Info.light.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'none',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            d: 'M17.5 10a7.5 7.5 0 1 1-15 0 7.5 7.5 0 0 1 15 0Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: '#fff',\n                            fillRule: 'evenodd',\n                            d: 'M10 8.61a.75.75 0 0 1 .75.75v4.516a.75.75 0 1 1-1.5 0V9.359a.75.75 0 0 1 .75-.75Zm0-2.5a.75.75 0 0 1 .75.75v.019a.75.75 0 0 1-1.5 0v-.02a.75.75 0 0 1 .75-.75Z',\n                            clipRule: 'evenodd',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Interaction = /*#__PURE__*/ __createIcon('Interaction', [\n    {\n        u: () => new URL('./general/Interaction.svg', import.meta.url),\n    },\n])\nexport const InteractionCircle = /*#__PURE__*/ __createIcon('InteractionCircle', [\n    {\n        u: () => new URL('./general/InteractionCircle.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    stroke: 'currentColor',\n                    strokeLinecap: 'round',\n                    strokeLinejoin: 'round',\n                    strokeWidth: '1.25',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M10.833 18.667a8.333 8.333 0 1 0 0-16.667 8.333 8.333 0 0 0 0 16.667z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'm12.75 6 1.5 1.5-1.5 1.5',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M7.5 9.75V9A1.5 1.5 0 0 1 9 7.5h5.25M9 14.25l-1.5-1.5 1.5-1.5',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M14.25 10.5v.75a1.5 1.5 0 0 1-1.5 1.5H7.5',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Japan = /*#__PURE__*/ __createIcon('Japan', [\n    {\n        u: () => new URL('./general/Japan.svg', import.meta.url),\n    },\n])\nexport const JPY = /*#__PURE__*/ __createIcon('JPY', [\n    {\n        u: () => new URL('./general/JPY.svg', import.meta.url),\n    },\n])\nexport const KeySquare = /*#__PURE__*/ __createIcon(\n    'KeySquare',\n    [\n        {\n            u: () => new URL('./general/KeySquare.svg', import.meta.url),\n            j: () =>\n                /*#__PURE__*/ _jsxs('svg', {\n                    xmlns: 'http://www.w3.org/2000/svg',\n                    fill: 'none',\n                    viewBox: '0 0 25 24',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            stroke: 'currentColor',\n                            strokeLinecap: 'round',\n                            strokeLinejoin: 'round',\n                            strokeWidth: '1.5',\n                            d: 'M9.8 22h6c5 0 7-2 7-7V9c0-5-2-7-7-7h-6c-5 0-7 2-7 7v6c0 5 2 7 7 7Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            stroke: 'currentColor',\n                            strokeLinecap: 'round',\n                            strokeLinejoin: 'round',\n                            strokeMiterlimit: '10',\n                            strokeWidth: '1.5',\n                            d: 'M17.08 13.61a4.147 4.147 0 0 1-4.18 1.03l-2.59 2.58c-.18.19-.55.31-.82.27l-1.2-.16c-.4-.05-.76-.43-.82-.82l-.16-1.2c-.04-.26.09-.63.27-.82l2.58-2.58c-.44-1.43-.1-3.05 1.03-4.18 1.62-1.62 4.26-1.62 5.89 0 1.62 1.61 1.62 4.25 0 5.88Zm-5.83 2.67-.85-.86',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            stroke: 'currentColor',\n                            strokeLinecap: 'round',\n                            strokeLinejoin: 'round',\n                            strokeWidth: '2',\n                            d: 'M14.195 10.7h.009',\n                        }),\n                    ],\n                }),\n            s: true,\n        },\n    ],\n    [25, 24],\n)\nexport const LeftArrow = /*#__PURE__*/ __createIcon('LeftArrow', [\n    {\n        u: () => new URL('./general/LeftArrow.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 25 25',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    d: 'M16.566 4.937a.8.8 0 0 1 0 1.132l-6.435 6.434 6.434 6.434a.8.8 0 0 1-1.13 1.132l-7-7a.8.8 0 0 1 0-1.132l7-7a.8.8 0 0 1 1.13 0Z',\n                    clipRule: 'evenodd',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const LinearCalendar = /*#__PURE__*/ __createIcon('LinearCalendar', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/LinearCalendar.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/LinearCalendar.light.svg', import.meta.url),\n    },\n])\nexport const Link = /*#__PURE__*/ __createIcon('Link', [\n    {\n        u: () => new URL('./general/Link.svg', import.meta.url),\n    },\n])\nexport const LinkOut = /*#__PURE__*/ __createIcon('LinkOut', [\n    {\n        u: () => new URL('./general/LinkOut.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 12 12',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    d: 'M1.6 2.1a.5.5 0 0 1 .5-.5h3.529v.8H2.4v7.2h7.2V6.235h.8V9.9a.5.5 0 0 1-.5.5H2.1a.5.5 0 0 1-.5-.5V2.1ZM6.832 2c0-.22.18-.4.4-.4H10c.22 0 .4.18.4.4v2.747a.4.4 0 0 1-.8 0v-1.77l-4.935 5.02a.4.4 0 0 1-.57-.56L9.045 2.4H7.233a.4.4 0 0 1-.4-.4Z',\n                    clipRule: 'evenodd',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Loader = /*#__PURE__*/ __createIcon('Loader', [\n    {\n        u: () => new URL('./general/Loader.svg', import.meta.url),\n    },\n])\nexport const LoadingBase = /*#__PURE__*/ __createIcon('LoadingBase', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/LoadingBase.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/LoadingBase.light.svg', import.meta.url),\n    },\n])\nexport const LocalBackup = /*#__PURE__*/ __createIcon('LocalBackup', [\n    {\n        u: () => new URL('./general/LocalBackup.png', import.meta.url),\n    },\n])\nexport const Lock = /*#__PURE__*/ __createIcon(\n    'Lock',\n    [\n        {\n            u: () => new URL('./general/Lock.svg', import.meta.url),\n            j: () =>\n                /*#__PURE__*/ _jsx('svg', {\n                    xmlns: 'http://www.w3.org/2000/svg',\n                    fill: 'none',\n                    viewBox: '0 0 24 25',\n                    children: /*#__PURE__*/ _jsxs('g', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        clipRule: 'evenodd',\n                        children: [\n                            /*#__PURE__*/ _jsx('path', {\n                                d: 'M7.748 5.01c-.697.866-.948 2.132-.948 3.74v2a.8.8 0 0 1-1.6 0v-2c0-1.704.25-3.438 1.302-4.744C7.585 2.662 9.363 1.95 12 1.95s4.416.713 5.498 2.057C18.55 5.312 18.8 7.046 18.8 8.75v2a.8.8 0 0 1-1.6 0v-2c0-1.607-.25-2.873-.948-3.74-.667-.828-1.889-1.46-4.252-1.46s-3.584.632-4.252 1.46zM12 15.05a1.7 1.7 0 1 0 0 3.4 1.7 1.7 0 0 0 0-3.4zm-3.3 1.7a3.3 3.3 0 1 1 6.6 0 3.3 3.3 0 0 1-6.6 0z',\n                            }),\n                            /*#__PURE__*/ _jsx('path', {\n                                d: 'M3.566 12.315c-.496.495-.766 1.428-.766 3.434v2c0 2.006.27 2.939.766 3.434.495.496 1.428.766 3.434.766h10c2.006 0 2.939-.27 3.434-.766.496-.495.766-1.428.766-3.434v-2c0-2.006-.27-2.939-.765-3.434-.496-.496-1.43-.766-3.435-.766H7c-2.006 0-2.939.27-3.434.766zm-1.131-1.131C3.439 10.178 5.005 9.949 7 9.949h10c1.994 0 3.561.23 4.566 1.235 1.004 1.004 1.234 2.57 1.234 4.565v2c0 1.995-.23 3.562-1.234 4.566-1.005 1.004-2.572 1.234-4.566 1.234H7c-1.994 0-3.561-.23-4.565-1.234C1.43 21.31 1.2 19.743 1.2 17.749v-2c0-1.994.23-3.561 1.235-4.566z',\n                            }),\n                        ],\n                    }),\n                }),\n            s: true,\n        },\n    ],\n    [24, 25],\n)\nexport const MaskAvatar = /*#__PURE__*/ __createIcon('MaskAvatar', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/MaskAvatar.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/MaskAvatar.light.svg', import.meta.url),\n    },\n])\nexport const MaskInMinds = /*#__PURE__*/ __createIcon('MaskInMinds', [\n    {\n        u: () => new URL('./general/MaskInMinds.svg', import.meta.url),\n    },\n])\nexport const MaskMe = /*#__PURE__*/ __createIcon('MaskMe', [\n    {\n        u: () => new URL('./general/MaskMe.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 25 25',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    d: 'M17.794 7.397a5.274 5.274 0 0 1-5.294 5.292 5.275 5.275 0 0 1-5.294-5.292A5.274 5.274 0 0 1 12.5 2.105a5.273 5.273 0 0 1 5.294 5.292ZM12.5 22.105c-4.338 0-8-.705-8-3.425 0-2.72 3.685-3.4 8-3.4 4.339 0 8 .704 8 3.424 0 2.721-3.685 3.401-8 3.401Z',\n                    clipRule: 'evenodd',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Masks = /*#__PURE__*/ __createIcon('Masks', [\n    {\n        u: () => new URL('./general/Masks.svg', import.meta.url),\n    },\n])\nexport const Message = /*#__PURE__*/ __createIcon('Message', [\n    {\n        u: () => new URL('./general/Message.svg', import.meta.url),\n    },\n])\nexport const Mnemonic = /*#__PURE__*/ __createIcon(\n    'Mnemonic',\n    [\n        {\n            u: () => new URL('./general/Mnemonic.svg', import.meta.url),\n            j: () =>\n                /*#__PURE__*/ _jsxs('svg', {\n                    xmlns: 'http://www.w3.org/2000/svg',\n                    viewBox: '0 0 24 25',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            fillRule: 'evenodd',\n                            d: 'M2.865 5.878a2.8 2.8 0 0 1 2.8-2.8h13.69a.8.8 0 0 1 0 1.6H5.665a1.2 1.2 0 0 0-1.2 1.2v.803h13.87a2.8 2.8 0 0 1 2.8 2.8v10.138a2.8 2.8 0 0 1-2.8 2.8H5.665a2.8 2.8 0 0 1-2.8-2.8V5.88Zm1.6 2.403v11.338a1.2 1.2 0 0 0 1.2 1.2h12.67a1.2 1.2 0 0 0 1.2-1.2V9.481a1.2 1.2 0 0 0-1.2-1.2H4.465Z',\n                            clipRule: 'evenodd',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            fillRule: 'evenodd',\n                            d: 'M12.285 9.23a.8.8 0 0 1 .463 1.032l-3.484 9.155a.8.8 0 1 1-1.496-.569l3.484-9.155a.8.8 0 0 1 1.033-.463Z',\n                            clipRule: 'evenodd',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            fillRule: 'evenodd',\n                            d: 'M15.769 19.881a.8.8 0 0 0 .463-1.032l-3.484-9.155a.8.8 0 0 0-1.495.569l3.484 9.155a.8.8 0 0 0 1.032.463Z',\n                            clipRule: 'evenodd',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            fillRule: 'evenodd',\n                            d: 'M9.458 15.546a.8.8 0 0 1 .8-.8H13.9a.8.8 0 0 1 0 1.6h-3.642a.8.8 0 0 1-.8-.8Z',\n                            clipRule: 'evenodd',\n                        }),\n                    ],\n                }),\n            s: true,\n        },\n    ],\n    [24, 25],\n)\nexport const More = /*#__PURE__*/ __createIcon('More', [\n    {\n        u: () => new URL('./general/More.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2Zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2Zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const NextIdAvatar = /*#__PURE__*/ __createIcon('NextIdAvatar', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/NextIdAvatar.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/NextIdAvatar.light.svg', import.meta.url),\n    },\n])\nexport const NextIdPersonaWarning = /*#__PURE__*/ __createIcon('NextIdPersonaWarning', [\n    {\n        u: () => new URL('./general/NextIdPersonaWarning.svg', import.meta.url),\n    },\n])\nexport const NFTRedPacket = /*#__PURE__*/ __createIcon('NFTRedPacket', [\n    {\n        u: () => new URL('./general/NFTRedPacket.svg', import.meta.url),\n    },\n])\nexport const OutlinedMask = /*#__PURE__*/ __createIcon('OutlinedMask', [\n    {\n        u: () => new URL('./general/OutlinedMask.svg', import.meta.url),\n    },\n])\nexport const PersonasOutline = /*#__PURE__*/ __createIcon(\n    'PersonasOutline',\n    [\n        {\n            u: () => new URL('./general/PersonasOutline.svg', import.meta.url),\n            j: () =>\n                /*#__PURE__*/ _jsx('svg', {\n                    xmlns: 'http://www.w3.org/2000/svg',\n                    fill: 'none',\n                    viewBox: '0 0 20 21',\n                    children: /*#__PURE__*/ _jsx('g', {\n                        id: 'PersonasOutline_svg__base/me',\n                        children: /*#__PURE__*/ _jsx('path', {\n                            id: 'PersonasOutline_svg__Profile',\n                            fillRule: 'evenodd',\n                            stroke: 'currentColor',\n                            strokeOpacity: '.78',\n                            strokeWidth: '1.6',\n                            d: 'M14.412 6.577A4.395 4.395 0 0 1 10 10.987a4.396 4.396 0 0 1-4.412-4.41A4.395 4.395 0 0 1 10 2.167a4.394 4.394 0 0 1 4.412 4.41ZM10 18.834c-3.615 0-6.667-.587-6.667-2.854 0-2.268 3.071-2.834 6.667-2.834 3.616 0 6.667.587 6.667 2.854 0 2.267-3.072 2.834-6.667 2.834Z',\n                            clipRule: 'evenodd',\n                        }),\n                    }),\n                }),\n            s: true,\n        },\n    ],\n    [20, 21],\n)\nexport const Pin = /*#__PURE__*/ __createIcon('Pin', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/Pin.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/Pin.light.svg', import.meta.url),\n    },\n])\nexport const Play = /*#__PURE__*/ __createIcon('Play', [\n    {\n        u: () => new URL('./general/Play.svg', import.meta.url),\n    },\n    {\n        c: ['dark'],\n        u: () => new URL('./general/Play.dark.svg', import.meta.url),\n    },\n])\nexport const Plugin = /*#__PURE__*/ __createIcon('Plugin', [\n    {\n        u: () => new URL('./general/Plugin.svg', import.meta.url),\n    },\n])\nexport const Plugins = /*#__PURE__*/ __createIcon('Plugins', [\n    {\n        u: () => new URL('./general/Plugins.svg', import.meta.url),\n    },\n])\nexport const PopupClose = /*#__PURE__*/ __createIcon('PopupClose', [\n    {\n        u: () => new URL('./general/PopupClose.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    stroke: 'currentColor',\n                    strokeLinecap: 'round',\n                    strokeLinejoin: 'round',\n                    strokeWidth: '1.25',\n                    d: 'm6 6 12 12M6 18 18 6',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const PopupLink = /*#__PURE__*/ __createIcon('PopupLink', [\n    {\n        u: () => new URL('./general/PopupLink.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 12 12',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    d: 'M1.6 2.1a.5.5 0 0 1 .5-.5h3.529v.8H2.4v7.2h7.2V6.235h.8V9.9a.5.5 0 0 1-.5.5H2.1a.5.5 0 0 1-.5-.5V2.1ZM6.832 2c0-.22.18-.4.4-.4H10c.22 0 .4.18.4.4v2.747a.4.4 0 0 1-.8 0v-1.77l-4.935 5.02a.4.4 0 0 1-.57-.56L9.045 2.4H7.233a.4.4 0 0 1-.4-.4Z',\n                    clipRule: 'evenodd',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const PopupRestore = /*#__PURE__*/ __createIcon('PopupRestore', [\n    {\n        u: () => new URL('./general/PopupRestore.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 18 18',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'currentColor',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'm13.777 8.974-3.636 1.02a.323.323 0 0 0-.213.458.38.38 0 0 0 .023.042l1.942 3.17a.46.46 0 0 0 .554.18.33.33 0 0 0 .177-.173l.501-.743c.863.446 1.46.842 1.802 1.673l.527 1.28a.457.457 0 0 0 .516.27.33.33 0 0 0 .27-.29l.115-1c.208-1.655-.805-3.351-2.512-4.207l.474-1.174c.074-.182-.037-.4-.249-.485a.452.452 0 0 0-.29-.021Zm-2.892 1.6 2.37-.667-.303.752c-.074.183.037.4.248.485 1.376.556 2.287 1.74 2.372 3.016-.514-1.052-1.464-1.911-2.629-2.38-.21-.085-.442-.006-.516.177l-.277.686-1.265-2.07Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fillRule: 'evenodd',\n                            d: 'M5.998 3.895c-.907.417-1.19.873-1.19 1.165 0 .292.283.747 1.19 1.165.856.394 2.08.654 3.465.654 1.384 0 2.609-.26 3.464-.654.908-.418 1.19-.873 1.19-1.165 0-.292-.283-.748-1.19-1.165-.855-.394-2.08-.654-3.464-.654-1.385 0-2.61.26-3.465.654Zm-.502-1.09c1.046-.482 2.45-.764 3.967-.764s2.92.282 3.966.764c.995.457 1.888 1.211 1.888 2.255 0 1.044-.893 1.797-1.888 2.255-1.046.482-2.449.764-3.966.764-1.518 0-2.92-.282-3.967-.764-.994-.458-1.888-1.211-1.888-2.255 0-1.044.894-1.798 1.888-2.255Zm.279 6.487c.708.375 1.738.655 2.942.738l-.082 1.197c-1.325-.091-2.529-.401-3.422-.875-.859-.455-1.605-1.165-1.605-2.115h1.2c0 .262.224.661.967 1.055Zm0 2.948c.708.374 1.738.654 2.942.737l-.082 1.197c-1.325-.091-2.529-.401-3.422-.875-.859-.455-1.605-1.165-1.605-2.115h1.2c0 .263.224.661.967 1.055Zm-.097 2.7c.755.4 2.1.713 4.374.713v1.2c-2.347 0-3.924-.318-4.935-.852-1.053-.557-1.509-1.365-1.509-2.223h1.2c0 .355.156.784.87 1.162Z',\n                            clipRule: 'evenodd',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fillRule: 'evenodd',\n                            d: 'M14.717 4.358a.6.6 0 0 1 .6.6v2.548a.6.6 0 1 1-1.2 0V4.958a.6.6 0 0 1 .6-.6Zm-10.509 0a.6.6 0 0 1 .6.6v8.82a.6.6 0 0 1-1.2 0v-8.82a.6.6 0 0 1 .6-.6Z',\n                            clipRule: 'evenodd',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const PopupTrash = /*#__PURE__*/ __createIcon('PopupTrash', [\n    {\n        u: () => new URL('./general/PopupTrash.svg', import.meta.url),\n    },\n])\nexport const PrimaryInfo = /*#__PURE__*/ __createIcon('PrimaryInfo', [\n    {\n        u: () => new URL('./general/PrimaryInfo.svg', import.meta.url),\n    },\n])\nexport const Provider = /*#__PURE__*/ __createIcon('Provider', [\n    {\n        u: () => new URL('./general/Provider.svg', import.meta.url),\n    },\n])\nexport const PublicKey = /*#__PURE__*/ __createIcon('PublicKey', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/PublicKey.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/PublicKey.light.svg', import.meta.url),\n    },\n])\nexport const PublicKey2 = /*#__PURE__*/ __createIcon('PublicKey2', [\n    {\n        u: () => new URL('./general/PublicKey2.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    id: 'PublicKey2_svg__base/key',\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    clipRule: 'evenodd',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            id: 'PublicKey2_svg__Ellipse 85 (Stroke)',\n                            d: 'M11.856 4.691a3.244 3.244 0 1 0 3.996 5.111 3.244 3.244 0 0 0-3.996-5.11Zm-1.608 5.375a4.577 4.577 0 1 1 7.212-5.638 4.577 4.577 0 0 1-7.212 5.638Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            id: 'PublicKey2_svg__Ellipse 86 (Stroke)',\n                            d: 'M13.433 6.71a.684.684 0 1 0 .842 1.076.684.684 0 0 0-.842-1.077Zm-1.168 1.78a2.017 2.017 0 1 1 3.178-2.484 2.017 2.017 0 0 1-3.178 2.484Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            id: 'PublicKey2_svg__Vector 11 (Stroke)',\n                            d: 'M1.924 16.573a.667.667 0 0 1 .114-.935l3.776-2.953 4.494-3.494a.667.667 0 0 1 .819 1.053L7.16 13.328l.95 1.215a.667.667 0 0 1-1.05.821l-.952-1.216-1.043.815 1.556 1.99a.667.667 0 1 1-1.05.82l-1.556-1.99-1.157.905a.667.667 0 0 1-.935-.115Z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Questions = /*#__PURE__*/ __createIcon('Questions', [\n    {\n        u: () => new URL('./general/Questions.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M12 4.8a7.2 7.2 0 1 0 0 14.4 7.2 7.2 0 0 0 0-14.4ZM3.2 12a8.8 8.8 0 1 1 17.6 0 8.8 8.8 0 0 1-17.6 0Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        d: 'M11.9 16.787a.69.69 0 1 1-.057-1.38.69.69 0 0 1 .056 1.38Zm2.956-6.713c-.04.738-.267 1.317-1.397 2.448-.571.573-.932 1.004-.97 1.38a.574.574 0 0 1-1.14-.112c.076-.795.66-1.437 1.3-2.08 1.027-1.024 1.046-1.35 1.063-1.697a1.475 1.475 0 0 0-.421-1.1 1.79 1.79 0 0 0-1.293-.55h-.003a1.714 1.714 0 0 0-1.707 1.711.574.574 0 0 1-1.147 0c0-.762.295-1.478.833-2.019a2.838 2.838 0 0 1 2.018-.838 2.947 2.947 0 0 1 2.13.906c.513.537.772 1.23.734 1.951Z',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M14.052 8.19a2.85 2.85 0 0 0-2.06-.876 2.74 2.74 0 0 0-1.948.81 2.744 2.744 0 0 0-.806 1.95.476.476 0 1 0 .952 0 1.811 1.811 0 0 1 1.804-1.809h.004a1.887 1.887 0 0 1 1.363.58 1.572 1.572 0 0 1 .449 1.172c-.01.18-.02.365-.165.636-.142.266-.411.612-.927 1.127-.644.646-1.2 1.264-1.272 2.02a.475.475 0 1 0 .947.092c.02-.213.132-.432.302-.664a7.27 7.27 0 0 1 .694-.775c.563-.563.895-.982 1.09-1.348a2.31 2.31 0 0 0 .28-1.036 2.507 2.507 0 0 0-.707-1.879Zm-2.06-1.07a3.044 3.044 0 0 1 2.2.935 2.7 2.7 0 0 1 .761 2.025c-.02.38-.09.723-.301 1.117-.21.39-.556.826-1.124 1.394a7.08 7.08 0 0 0-.675.753c-.163.22-.25.405-.266.568a.67.67 0 0 1-1.31.13m-.026-.261c.081-.835.692-1.5 1.329-2.14.512-.51.765-.84.893-1.08.125-.233.133-.385.142-.553a1.376 1.376 0 0 0-.394-1.027V8.98a1.692 1.692 0 0 0-1.223-.52h-.003a1.616 1.616 0 0 0-1.61 1.614.67.67 0 1 1-1.342 0c0-.788.306-1.529.862-2.088a2.936 2.936 0 0 1 2.087-.867v.098-.098m-.74 6.662.096.01-.097-.01m.644 1.723a.594.594 0 0 0-.234 1.147.592.592 0 1 0 .234-1.147Zm-.303-.145a.787.787 0 1 1 .558 1.473.787.787 0 0 1-.558-1.473Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const RadioButtonChecked = /*#__PURE__*/ __createIcon('RadioButtonChecked', [\n    {\n        u: () => new URL('./general/RadioButtonChecked.svg', import.meta.url),\n    },\n])\nexport const RadioButtonUnChecked = /*#__PURE__*/ __createIcon('RadioButtonUnChecked', [\n    {\n        u: () => new URL('./general/RadioButtonUnChecked.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 21 21',\n                children: /*#__PURE__*/ _jsx('circle', {\n                    cx: '10.166',\n                    cy: '10.131',\n                    r: '9',\n                    stroke: 'currentColor',\n                    strokeWidth: '2',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const RadioNo = /*#__PURE__*/ __createIcon('RadioNo', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/RadioNo.dark.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                stroke: 'currentColor',\n                viewBox: '0 0 21 21',\n                children: /*#__PURE__*/ _jsx('circle', {\n                    cx: '10.166',\n                    cy: '10.437',\n                    r: '9',\n                    stroke: '#6F6F6F',\n                    strokeWidth: '2',\n                }),\n            }),\n        s: true,\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/RadioNo.light.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                stroke: 'currentColor',\n                viewBox: '0 0 21 21',\n                children: /*#__PURE__*/ _jsx('circle', {\n                    cx: '10.166',\n                    cy: '10.911',\n                    r: '9',\n                    stroke: '#E6E7E8',\n                    strokeWidth: '2',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const ReceiveColorful = /*#__PURE__*/ __createIcon('ReceiveColorful', [\n    {\n        u: () => new URL('./general/ReceiveColorful.svg', import.meta.url),\n    },\n])\nexport const RedPacket = /*#__PURE__*/ __createIcon('RedPacket', [\n    {\n        u: () => new URL('./general/RedPacket.svg', import.meta.url),\n    },\n])\nexport const Refresh = /*#__PURE__*/ __createIcon('Refresh', [\n    {\n        u: () => new URL('./general/Refresh.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    clipRule: 'evenodd',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M12 4.934a7.198 7.198 0 0 0-6.283 3.68.8.8 0 1 1-1.395-.783A8.8 8.8 0 1 1 3.2 12.134a.8.8 0 0 1 1.6 0 7.2 7.2 0 1 0 7.2-7.2Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M4.797 3.47a.8.8 0 0 1 .8.8v3.2h3.2a.8.8 0 0 1 0 1.6h-4a.8.8 0 0 1-.8-.8v-4a.8.8 0 0 1 .8-.8Z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Restore = /*#__PURE__*/ __createIcon('Restore', [\n    {\n        u: () => new URL('./general/Restore.svg', import.meta.url),\n    },\n])\nexport const RestoreColorful = /*#__PURE__*/ __createIcon('RestoreColorful', [\n    {\n        u: () => new URL('./general/RestoreColorful.svg', import.meta.url),\n    },\n])\nexport const Retweet = /*#__PURE__*/ __createIcon('Retweet', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/Retweet.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/Retweet.light.svg', import.meta.url),\n    },\n])\nexport const Right = /*#__PURE__*/ __createIcon('Right', [\n    {\n        u: () => new URL('./general/Right.svg', import.meta.url),\n    },\n])\nexport const RightArrow = /*#__PURE__*/ __createIcon('RightArrow', [\n    {\n        u: () => new URL('./general/RightArrow.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 25 25',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    d: 'M8.935 20.063a.8.8 0 0 1 0-1.132l6.434-6.434-6.434-6.434a.8.8 0 1 1 1.13-1.132l7 7a.8.8 0 0 1 0 1.132l-7 7a.8.8 0 0 1-1.13 0Z',\n                    clipRule: 'evenodd',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Risk = /*#__PURE__*/ __createIcon('Risk', [\n    {\n        u: () => new URL('./general/Risk.svg', import.meta.url),\n    },\n])\nexport const Search = /*#__PURE__*/ __createIcon('Search', [\n    {\n        u: () => new URL('./general/Search.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    d: 'M4.271 9.41a4.93 4.93 0 1 1 8.478 3.424.617.617 0 0 0-.122.123A4.93 4.93 0 0 1 4.272 9.41zm8.837 4.79a6.18 6.18 0 1 1 .884-.884l2.596 2.596a.625.625 0 1 1-.884.884L13.108 14.2z',\n                    clipRule: 'evenodd',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const SecurityRisk = /*#__PURE__*/ __createIcon('SecurityRisk', [\n    {\n        u: () => new URL('./general/SecurityRisk.svg', import.meta.url),\n    },\n])\nexport const SecurityWarning = /*#__PURE__*/ __createIcon('SecurityWarning', [\n    {\n        u: () => new URL('./general/SecurityWarning.svg', import.meta.url),\n    },\n])\nexport const Selected = /*#__PURE__*/ __createIcon('Selected', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/Selected.dark.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 16 16',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'none',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: '#101010',\n                            d: 'M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            d: 'M8 14.667A6.667 6.667 0 1 0 8 1.333a6.667 6.667 0 0 0 0 13.334Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: '#fff',\n                            fillRule: 'evenodd',\n                            d: 'M11.115 5.507c.272.247.293.67.045.941l-3.333 3.667a.667.667 0 0 1-.928.058l-2.333-2a.667.667 0 1 1 .868-1.012l1.842 1.578 2.897-3.187a.667.667 0 0 1 .942-.045Z',\n                            clipRule: 'evenodd',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/Selected.light.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 16 16',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'none',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: '#F5F5F5',\n                            d: 'M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            d: 'M8 14.667A6.667 6.667 0 1 0 8 1.333a6.667 6.667 0 0 0 0 13.334Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: '#fff',\n                            fillRule: 'evenodd',\n                            d: 'M11.115 5.507c.272.247.293.67.045.941l-3.333 3.667a.667.667 0 0 1-.928.058l-2.333-2a.667.667 0 1 1 .868-1.012l1.842 1.578 2.897-3.187a.667.667 0 0 1 .942-.045Z',\n                            clipRule: 'evenodd',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Self = /*#__PURE__*/ __createIcon('Self', [\n    {\n        u: () => new URL('./general/Self.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 25 25',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    d: 'M17.794 7.397a5.274 5.274 0 0 1-5.294 5.292 5.275 5.275 0 0 1-5.294-5.292A5.274 5.274 0 0 1 12.5 2.105a5.273 5.273 0 0 1 5.294 5.292ZM12.5 22.105c-4.338 0-8-.705-8-3.425 0-2.72 3.685-3.4 8-3.4 4.339 0 8 .704 8 3.424 0 2.721-3.685 3.401-8 3.401Z',\n                    clipRule: 'evenodd',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Send = /*#__PURE__*/ __createIcon('Send', [\n    {\n        u: () => new URL('./general/Send.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 18 18',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    d: 'M16.345 3.382 2.425 7.926l3.397 2.032a.75.75 0 0 1 .365.643v2.277l2.3-.933a.75.75 0 0 1 .648.041l5.208 2.92 2.002-11.524Zm.339-1.372a.75.75 0 0 1 .971.84l-2.239 12.89a.75.75 0 0 1-1.106.525L8.737 13.14l-2.718 1.1a.75.75 0 0 1-1.032-.695v-2.69L.96 8.45a.75.75 0 0 1 .152-1.357l15.57-5.082ZM14.18 5.656a.6.6 0 0 1-.06.846l-4.234 3.679a.6.6 0 0 1-.787-.906l4.234-3.679a.6.6 0 0 1 .847.06Z',\n                    clipRule: 'evenodd',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const SendColorful = /*#__PURE__*/ __createIcon('SendColorful', [\n    {\n        u: () => new URL('./general/SendColorful.svg', import.meta.url),\n    },\n])\nexport const Setting = /*#__PURE__*/ __createIcon('Setting', [\n    {\n        u: () => new URL('./general/Setting.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 18 18',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'none',\n                    stroke: 'currentColor',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M9 11.25a2.25 2.25 0 1 0 0-4.5 2.25 2.25 0 0 0 0 4.5z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M14.55 11.25a1.238 1.238 0 0 0 .247 1.365l.045.045a1.5 1.5 0 0 1-1.06 2.562 1.5 1.5 0 0 1-1.062-.44l-.045-.044a1.238 1.238 0 0 0-1.365-.248 1.238 1.238 0 0 0-.75 1.133v.127a1.5 1.5 0 1 1-3 0v-.068a1.238 1.238 0 0 0-.81-1.132 1.238 1.238 0 0 0-1.365.247l-.045.045a1.5 1.5 0 1 1-2.123-2.122l.046-.045a1.238 1.238 0 0 0 .247-1.365 1.238 1.238 0 0 0-1.132-.75H2.25a1.5 1.5 0 1 1 0-3h.067a1.237 1.237 0 0 0 1.133-.81 1.237 1.237 0 0 0-.248-1.365l-.044-.045A1.5 1.5 0 1 1 5.28 3.217l.045.046a1.237 1.237 0 0 0 1.365.247h.06a1.237 1.237 0 0 0 .75-1.132V2.25a1.5 1.5 0 0 1 3 0v.067a1.238 1.238 0 0 0 .75 1.133 1.237 1.237 0 0 0 1.365-.248l.045-.044a1.5 1.5 0 1 1 2.123 2.122l-.045.045a1.237 1.237 0 0 0-.248 1.365v.06a1.237 1.237 0 0 0 1.133.75h.127a1.5 1.5 0 0 1 0 3h-.068a1.238 1.238 0 0 0-1.132.75z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Settings = /*#__PURE__*/ __createIcon('Settings', [\n    {\n        u: () => new URL('./general/Settings.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'm12 23-9.5-5.5v-11L12 1l9.5 5.5v11L12 23zm0-19.688L4.5 7.653v8.694l7.5 4.342 7.5-4.342V7.653L12 3.311v.001zM12 16a4 4 0 1 1 2.828-1.172A4.027 4.027 0 0 1 12 16zm0-6a2 2 0 1 0-.001 4A2 2 0 0 0 12 10z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Settings2 = /*#__PURE__*/ __createIcon('Settings2', [\n    {\n        u: () => new URL('./general/Settings2.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    d: 'm17.808 3.606 4.345 7.528c.31.537.31 1.205 0 1.744l-4.345 7.526c-.312.537-.89.872-1.512.872h-8.69c-.624 0-1.2-.333-1.512-.872l-4.346-7.526a1.743 1.743 0 0 1 0-1.744l4.299-7.441c.34-.59.977-.959 1.66-.959h8.59c.62 0 1.2.333 1.51.872Zm-9.415 8.4a3.562 3.562 0 0 1 3.557-3.559 3.564 3.564 0 0 1 3.558 3.56 3.56 3.56 0 0 1-3.558 3.556 3.562 3.562 0 0 1-3.557-3.558Zm1.64.001a1.92 1.92 0 0 0 1.917 1.918 1.92 1.92 0 0 0 1.918-1.918 1.92 1.92 0 0 0-1.918-1.917 1.92 1.92 0 0 0-1.917 1.917Z',\n                    clipRule: 'evenodd',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const SharpMask = /*#__PURE__*/ __createIcon('SharpMask', [\n    {\n        u: () => new URL('./general/SharpMask.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'M3.2 1.5H16.8C17.0232 1.5 17.2443 1.54397 17.4506 1.6294C17.6568 1.71484 17.8442 1.84006 18.0021 1.99792C18.1599 2.15578 18.2852 2.34318 18.3706 2.54944C18.456 2.75569 18.5 2.97675 18.5 3.2V16.8C18.5 17.2509 18.3209 17.6833 18.0021 18.0021C17.6833 18.3209 17.2509 18.5 16.8 18.5H3.2C2.74913 18.5 2.31673 18.3209 1.99792 18.0021C1.67911 17.6833 1.5 17.2509 1.5 16.8V3.2C1.5 2.74913 1.67911 2.31673 1.99792 1.99792C2.31673 1.67911 2.74913 1.5 3.2 1.5ZM17.1999 11.1998V7.20037H2.80005V15.7599C2.79999 15.949 2.8372 16.1363 2.90954 16.3111C2.98189 16.4859 3.08795 16.6447 3.22168 16.7784C3.35541 16.9122 3.51419 17.0183 3.68893 17.0907C3.86368 17.1631 4.05098 17.2004 4.24013 17.2004H15.7599C15.949 17.2004 16.1363 17.1631 16.3111 17.0907C16.4858 17.0183 16.6446 16.9122 16.7783 16.7784C16.912 16.6447 17.0181 16.4859 17.0905 16.3111C17.1628 16.1363 17.2 15.949 17.1999 15.7599V12.4001H14.8741C14.4255 13.3125 13.7303 14.0809 12.8672 14.6182C12.0041 15.1555 11.0077 15.4402 9.99105 15.44C7.39855 15.44 5.23016 13.6273 4.68347 11.2003L17.1999 11.1998ZM9.99105 14.2491C10.6812 14.2496 11.3611 14.0813 11.9714 13.7591C12.5818 13.4368 13.1041 12.9703 13.4931 12.4001H6.48816C6.87711 12.9704 7.39953 13.4369 8.00997 13.7592C8.6204 14.0814 9.30078 14.2496 9.99105 14.2491ZM4.70271 10.0796C4.77976 9.5465 5.04632 9.05898 5.45355 8.70637C5.86078 8.35377 6.38142 8.15969 6.92009 8.15969C7.45876 8.15969 7.9794 8.35377 8.38663 8.70637C8.79386 9.05898 9.06042 9.5465 9.13747 10.0796H7.90989C7.84206 9.87052 7.70975 9.68827 7.53193 9.55902C7.35411 9.42976 7.13993 9.36014 6.92009 9.36014C6.70026 9.36014 6.48607 9.42976 6.30825 9.55902C6.13044 9.68827 5.99812 9.87052 5.93029 10.0796H4.70271ZM10.863 10.0796C10.9404 9.54682 11.207 9.05969 11.6142 8.70741C12.0213 8.35512 12.5417 8.16123 13.0801 8.16123C13.6185 8.16123 14.1389 8.35512 14.5461 8.70741C14.9532 9.05969 15.2199 9.54682 15.2973 10.0796H14.0697C14.0019 9.87052 13.8696 9.68827 13.6917 9.55902C13.5139 9.42976 13.2997 9.36014 13.0799 9.36014C12.8601 9.36014 12.6459 9.42976 12.4681 9.55902C12.2903 9.68827 12.1579 9.87052 12.0901 10.0796H10.863ZM17.1995 4.24058C17.1996 4.05143 17.1624 3.86412 17.09 3.68935C17.0177 3.51458 16.9116 3.35577 16.7779 3.222C16.6441 3.08823 16.4854 2.98211 16.3106 2.90971C16.1359 2.83732 15.9486 2.80005 15.7594 2.80005H4.24013C4.05094 2.79999 3.8636 2.83721 3.6888 2.90959C3.514 2.98196 3.35517 3.08807 3.22139 3.22184C3.08762 3.35562 2.98151 3.51444 2.90914 3.68924C2.83677 3.86404 2.79955 4.05139 2.79961 4.24058V6.00053H17.1999L17.1995 4.24058Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const SignUpAccount = /*#__PURE__*/ __createIcon('SignUpAccount', [\n    {\n        u: () => new URL('./general/SignUpAccount.png', import.meta.url),\n    },\n])\nexport const SmartPay = /*#__PURE__*/ __createIcon('SmartPay', [\n    {\n        u: () => new URL('./general/SmartPay.svg', import.meta.url),\n    },\n])\nexport const Star = /*#__PURE__*/ __createIcon('Star', [\n    {\n        u: () => new URL('./general/Star.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'M11.742 17.426a.5.5 0 0 1 .516 0l4.908 2.962a.5.5 0 0 0 .745-.542l-1.302-5.582a.5.5 0 0 1 .16-.492l4.337-3.758a.5.5 0 0 0-.284-.876l-5.712-.492a.5.5 0 0 1-.418-.303L12.46 3.084a.5.5 0 0 0-.92 0l-2.232 5.26a.5.5 0 0 1-.418.302l-5.713.493a.5.5 0 0 0-.285.875l4.33 3.759a.5.5 0 0 1 .16.49l-1.295 5.585a.5.5 0 0 0 .746.54l4.909-2.962z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Success = /*#__PURE__*/ __createIcon('Success', [\n    {\n        u: () => new URL('./general/Success.svg', import.meta.url),\n    },\n])\nexport const SuccessForSnackBar = /*#__PURE__*/ __createIcon('SuccessForSnackBar', [\n    {\n        u: () => new URL('./general/SuccessForSnackBar.svg', import.meta.url),\n    },\n])\nexport const Sun = /*#__PURE__*/ __createIcon('Sun', [\n    {\n        u: () => new URL('./general/Sun.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 16 16',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'M8 12.992c.254 0 .466.183.51.425l.008.093v.972a.518.518 0 0 1-1.027.093l-.009-.093v-.972c0-.286.232-.518.518-.518Zm4.181-1.528.081.066.688.688a.518.518 0 0 1-.651.798l-.081-.066-.688-.688a.518.518 0 0 1 .651-.798Zm-7.711.066c.177.177.199.45.066.651l-.066.081-.688.688a.518.518 0 0 1-.798-.651l.066-.081.688-.688a.518.518 0 0 1 .732 0ZM8 4.296a3.704 3.704 0 1 1 0 7.408 3.704 3.704 0 0 1 0-7.408Zm6.482 3.186a.518.518 0 0 1 .093 1.027l-.093.009h-.972a.518.518 0 0 1-.093-1.027l.093-.009h.972Zm-11.992 0a.518.518 0 0 1 .093 1.027l-.093.009h-.972a.518.518 0 0 1-.093-1.027l.093-.009h.972ZM12.95 3.05c.177.177.199.45.066.651l-.066.081-.688.688a.518.518 0 0 1-.798-.651l.066-.081.688-.688a.518.518 0 0 1 .732 0ZM3.7 2.984l.081.066.688.688a.518.518 0 0 1-.651.798l-.081-.066-.688-.688a.518.518 0 0 1 .651-.798ZM8 1c.254 0 .466.183.51.425l.008.093v.972a.518.518 0 0 1-1.027.093l-.009-.093v-.972C7.482 1.232 7.714 1 8 1Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Swap = /*#__PURE__*/ __createIcon('Swap', [\n    {\n        u: () => new URL('./general/Swap.svg', import.meta.url),\n    },\n])\nexport const SwapColorful = /*#__PURE__*/ __createIcon('SwapColorful', [\n    {\n        u: () => new URL('./general/SwapColorful.svg', import.meta.url),\n    },\n])\nexport const SwitchLogo = /*#__PURE__*/ __createIcon('SwitchLogo', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/SwitchLogo.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/SwitchLogo.light.svg', import.meta.url),\n    },\n])\nexport const TelegramRoundGray = /*#__PURE__*/ __createIcon('TelegramRoundGray', [\n    {\n        u: () => new URL('./general/TelegramRoundGray.svg', import.meta.url),\n    },\n])\nexport const Tick = /*#__PURE__*/ __createIcon('Tick', [\n    {\n        u: () => new URL('./general/Tick.svg', import.meta.url),\n    },\n])\nexport const Time = /*#__PURE__*/ __createIcon('Time', [\n    {\n        u: () => new URL('./general/Time.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    id: 'Time_svg__base/time',\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    clipRule: 'evenodd',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            id: 'Time_svg__Vector (Stroke)',\n                            d: 'M10 3.166a6.833 6.833 0 1 0 0 13.667 6.833 6.833 0 0 0 0-13.667ZM1.834 9.999a8.167 8.167 0 1 1 16.333 0 8.167 8.167 0 0 1-16.334 0Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            id: 'Time_svg__Vector (Stroke)_2',\n                            d: 'M10 5.233c.368 0 .667.298.667.666v4.125a.667.667 0 1 1-1.333 0V5.9c0-.368.298-.666.666-.666Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            id: 'Time_svg__Vector (Stroke)_3',\n                            d: 'M9.423 9.69a.667.667 0 0 1 .91-.244l3.021 1.745a.667.667 0 0 1-.666 1.154l-3.021-1.744a.667.667 0 0 1-.244-.91Z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Tips = /*#__PURE__*/ __createIcon('Tips', [\n    {\n        u: () => new URL('./general/Tips.svg', import.meta.url),\n    },\n])\nexport const TransactionFailed = /*#__PURE__*/ __createIcon('TransactionFailed', [\n    {\n        u: () => new URL('./general/TransactionFailed.svg', import.meta.url),\n    },\n])\nexport const Trash = /*#__PURE__*/ __createIcon(\n    'Trash',\n    [\n        {\n            u: () => new URL('./general/Trash.svg', import.meta.url),\n            j: () =>\n                /*#__PURE__*/ _jsxs('svg', {\n                    xmlns: 'http://www.w3.org/2000/svg',\n                    fill: 'none',\n                    viewBox: '0 0 25 24',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            fillRule: 'evenodd',\n                            d: 'M2.5 6a1 1 0 0 1 1-1h18a1 1 0 1 1 0 2h-18a1 1 0 0 1-1-1Z',\n                            clipRule: 'evenodd',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            fillRule: 'evenodd',\n                            d: 'M10.5 3a1 1 0 0 0-1 1v1h6V4a1 1 0 0 0-1-1h-4Zm7 2V4a3 3 0 0 0-3-3h-4a3 3 0 0 0-3 3v1h-2a1 1 0 0 0-1 1v14a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V6a1 1 0 0 0-1-1h-2Zm-11 2v13a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V7h-12Z',\n                            clipRule: 'evenodd',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            fill: 'currentColor',\n                            fillRule: 'evenodd',\n                            d: 'M10.5 10a1 1 0 0 1 1 1v6a1 1 0 1 1-2 0v-6a1 1 0 0 1 1-1Zm4 0a1 1 0 0 1 1 1v6a1 1 0 1 1-2 0v-6a1 1 0 0 1 1-1Z',\n                            clipRule: 'evenodd',\n                        }),\n                    ],\n                }),\n            s: true,\n        },\n    ],\n    [25, 24],\n)\nexport const TrashLine = /*#__PURE__*/ __createIcon('TrashLine', [\n    {\n        u: () => new URL('./general/TrashLine.svg', import.meta.url),\n    },\n])\nexport const Tutorial = /*#__PURE__*/ __createIcon('Tutorial', [\n    {\n        u: () => new URL('./general/Tutorial.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'M18.227 10.117v-2.44c.27-.285.284-.57.27-.732-.067-.637-.772-.895-1.002-.99-1.681-.636-4.799-1.897-6.52-2.602-1.044-.515-1.382-.42-2.399-.013-.271.108-4.758 1.775-6.492 2.494-.95.393-1.085.976-1.085 1.3 0 .543.38 1.03 1.071 1.316l2.074.84v5.449l.176.176c.081.081 1.938 1.952 5.34 1.952 3.186 0 5.002-1.884 5.083-1.966l.163-.176v-5.38l.772-.326-.027 1.111-.623 1.044 1.884 1.79 2.087-1.817-.772-1.03Zm-4.541 4.12A6.337 6.337 0 0 1 9.66 15.66c-2.358 0-3.808-1.03-4.296-1.423V9.791l3.063 1.247h.013c.976.366 1.722.34 2.657-.067l2.589-1.098v4.364Zm3.267-2.928-.38-.352.285-.474.054-2.169a.615.615 0 0 0-.176-.678.632.632 0 0 0-.773-.054L10.61 9.846c-.637.284-1.057.298-1.735.054l-6.33-2.575c-.162-.068-.257-.136-.298-.19.04-.04.136-.109.312-.19 1.735-.718 6.411-2.467 6.465-2.48h.014c.813-.326.813-.326 1.423-.014l.04.014c1.709.69 4.799 1.951 6.507 2.602v3.456l.339.448-.393.338Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Twitter = /*#__PURE__*/ __createIcon('Twitter', [\n    {\n        u: () => new URL('./general/Twitter.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 16 16',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'M13.33 4.459a2.867 2.867 0 0 0 1.258-1.583 5.728 5.728 0 0 1-1.816.694 2.867 2.867 0 0 0-4.878 2.61 8.123 8.123 0 0 1-5.896-2.99 2.867 2.867 0 0 0 .886 3.82 2.85 2.85 0 0 1-1.296-.358v.036c0 1.362.96 2.535 2.296 2.805a2.867 2.867 0 0 1-1.292.05 2.867 2.867 0 0 0 2.672 1.986 5.74 5.74 0 0 1-3.553 1.225c-.228 0-.457-.013-.683-.04A8.099 8.099 0 0 0 5.414 14a8.085 8.085 0 0 0 8.13-8.51 5.812 5.812 0 0 0 1.429-1.482 5.72 5.72 0 0 1-1.643.45Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const TwitterStroke = /*#__PURE__*/ __createIcon(\n    'TwitterStroke',\n    [\n        {\n            u: () => new URL('./general/TwitterStroke.svg', import.meta.url),\n            j: () =>\n                /*#__PURE__*/ _jsxs('svg', {\n                    xmlns: 'http://www.w3.org/2000/svg',\n                    fill: 'none',\n                    viewBox: '0 0 21 20',\n                    children: [\n                        /*#__PURE__*/ _jsx('g', {\n                            clipPath: \"url('#TwitterStroke_svg__twitter-stroke')\",\n                            children: /*#__PURE__*/ _jsx('path', {\n                                fill: 'currentColor',\n                                fillRule: 'evenodd',\n                                d: 'M12.664 2.113a4.4 4.4 0 0 1 4.575.898 8.416 8.416 0 0 0 2.043-1.057.667.667 0 0 1 1.033.703 7.101 7.101 0 0 1-1.674 3.127c.017.154.025.308.026.463v.002c0 5.025-2.416 8.696-5.875 10.537-3.441 1.832-7.848 1.815-11.782-.37a.667.667 0 0 1 .35-1.25 9.034 9.034 0 0 0 4.42-.957c-1.371-.793-2.336-1.75-2.992-2.785-.817-1.291-1.127-2.66-1.183-3.894-.056-1.232.14-2.342.346-3.14a10.736 10.736 0 0 1 .396-1.223l.03-.074.01-.02.002-.007.015-.032.596.299.546-.384a8.217 8.217 0 0 0 6.287 3.483V6.28a4.4 4.4 0 0 1 2.831-4.166ZM3.248 4.7l-.006.023a9.42 9.42 0 0 0-.305 2.746c.048 1.058.311 2.188.978 3.241.664 1.049 1.754 2.06 3.523 2.847a.667.667 0 0 1 .103 1.16 10.365 10.365 0 0 1-3.547 1.537c2.875.896 5.804.615 8.172-.645 3-1.597 5.167-4.8 5.168-9.358a3.178 3.178 0 0 0-.055-.568.666.666 0 0 1 .186-.6c.326-.321.61-.678.85-1.063a9.753 9.753 0 0 1-1.073.393.667.667 0 0 1-.695-.201 3.066 3.066 0 0 0-5.38 2.053v.843a.667.667 0 0 1-.65.666A9.55 9.55 0 0 1 3.248 4.7Z',\n                                clipRule: 'evenodd',\n                            }),\n                        }),\n                        /*#__PURE__*/ _jsx('defs', {\n                            children: /*#__PURE__*/ _jsx('clipPath', {\n                                id: 'TwitterStroke_svg__twitter-stroke',\n                                children: /*#__PURE__*/ _jsx('path', {\n                                    fill: 'currentColor',\n                                    d: 'M.5 0h20v20H.5z',\n                                }),\n                            }),\n                        }),\n                    ],\n                }),\n            s: true,\n        },\n    ],\n    [21, 20],\n)\nexport const TxIn = /*#__PURE__*/ __createIcon('TxIn', [\n    {\n        u: () => new URL('./general/TxIn.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 16 16',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'none',\n                    stroke: 'currentColor',\n                    strokeLinecap: 'round',\n                    strokeLinejoin: 'round',\n                    strokeWidth: '1.25',\n                    d: 'M14 10v2.667A1.334 1.334 0 0 1 12.667 14H3.333A1.334 1.334 0 0 1 2 12.667V10m2.667-3.333L8 10l3.333-3.333M8 10V2',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const TxOut = /*#__PURE__*/ __createIcon('TxOut', [\n    {\n        u: () => new URL('./general/TxOut.svg', import.meta.url),\n    },\n])\nexport const Undo = /*#__PURE__*/ __createIcon('Undo', [\n    {\n        u: () => new URL('./general/Undo.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        stroke: 'currentColor',\n                        strokeLinecap: 'round',\n                        strokeLinejoin: 'round',\n                        strokeMiterlimit: '10',\n                        strokeWidth: '1.6',\n                        d: 'M7.13 18.31h8c2.76 0 5-2.24 5-5s-2.24-5-5-5h-11',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        stroke: 'currentColor',\n                        strokeLinecap: 'round',\n                        strokeLinejoin: 'round',\n                        strokeWidth: '1.6',\n                        d: 'M6.43 10.81 3.87 8.25l2.56-2.56',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const Upload = /*#__PURE__*/ __createIcon('Upload', [\n    {\n        u: () => new URL('./general/Upload.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M12.306 1.26A.8.8 0 0 1 12.8 2v6a.8.8 0 0 1-1.6 0V3.93l-.634.635a.8.8 0 0 1-1.131-1.131l2-2a.8.8 0 0 1 .871-.174Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M11.434 1.434a.8.8 0 0 1 1.132 0l2 2a.8.8 0 0 1-1.132 1.13l-2-2a.8.8 0 0 1 0-1.13ZM2.842 12.716c.731-1.058 2.083-1.517 4.158-1.517.552 0 .982.057 1.37.209.364.141.642.35.88.529l.03.022a.8.8 0 0 1 .104.094l1.01 1.078a2.198 2.198 0 0 0 3.202.001l.003-.002 1.02-1.08a.803.803 0 0 1 .101-.09l.03-.023c.239-.18.516-.388.88-.53.388-.15.818-.208 1.37-.208 2.076 0 3.427.459 4.158 1.517.35.505.502 1.075.573 1.622.07.53.07 1.101.07 1.633v1.028c0 1.451-.259 2.928-1.185 4.046-.951 1.148-2.468 1.754-4.616 1.754H8c-2.576 0-4.177-.57-5.033-1.81-.412-.596-.595-1.274-.682-1.94-.085-.65-.085-1.352-.085-2.02V15.97c0-.532 0-1.102.07-1.633.07-.547.223-1.117.572-1.622Zm1.014 1.83c-.055.417-.056.888-.056 1.453v1c0 .703.001 1.306.072 1.842.069.53.198.93.411 1.239.395.57 1.293 1.12 3.717 1.12h8c1.852 0 2.836-.514 3.384-1.176.574-.693.816-1.716.816-3.025v-1c0-.565-.001-1.036-.056-1.454-.053-.41-.151-.702-.302-.92-.269-.39-.917-.826-2.842-.826-.448 0-.658.048-.79.1-.131.05-.24.124-.475.3l-.97 1.027-.002.001a3.799 3.799 0 0 1-5.534.002l-.003-.003-.962-1.029c-.235-.175-.343-.247-.474-.299-.132-.05-.342-.099-.79-.099-1.924 0-2.573.437-2.842.826-.15.218-.249.51-.302.92Z',\n                        clipRule: 'evenodd',\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        fillRule: 'evenodd',\n                        d: 'M8.797 5.961a.8.8 0 0 1-.72.874c-1.355.13-1.796.54-1.996.915-.261.49-.28 1.179-.28 2.248v2a.8.8 0 1 1-1.6 0V9.894c-.001-.92-.002-2.015.469-2.897.55-1.03 1.609-1.596 3.253-1.755a.8.8 0 0 1 .874.72Zm6.407 0a.8.8 0 0 1 .873-.719c1.645.159 2.704.725 3.254 1.755.47.882.47 1.977.47 2.897v2.104a.8.8 0 1 1-1.6 0v-2c0-1.07-.02-1.759-.282-2.248-.2-.375-.64-.784-1.996-.915a.8.8 0 0 1-.719-.874Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const USD = /*#__PURE__*/ __createIcon('USD', [\n    {\n        u: () => new URL('./general/USD.svg', import.meta.url),\n    },\n])\nexport const User = /*#__PURE__*/ __createIcon('User', [\n    {\n        u: () => new URL('./general/User.svg', import.meta.url),\n    },\n])\nexport const Verification = /*#__PURE__*/ __createIcon('Verification', [\n    {\n        u: () => new URL('./general/Verification.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsxs('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: [\n                    /*#__PURE__*/ _jsx('path', {\n                        d: 'M10.705 1.603A1.699 1.699 0 0 1 12 1a1.691 1.691 0 0 1 1.295.603l.816.968a1.695 1.695 0 0 0 1.698.555l1.229-.302a1.7 1.7 0 0 1 2.095 1.53l.094 1.265a1.705 1.705 0 0 0 1.05 1.45l1.168.48c.97.4 1.353 1.58.8 2.476l-.665 1.079a1.71 1.71 0 0 0 0 1.793l.666 1.08c.552.895.17 2.074-.8 2.472l-1.17.483a1.703 1.703 0 0 0-1.05 1.45l-.093 1.265a1.712 1.712 0 0 1-.695 1.252 1.695 1.695 0 0 1-1.4.277l-1.229-.302a1.69 1.69 0 0 0-1.697.555l-.817.968A1.699 1.699 0 0 1 12 23a1.691 1.691 0 0 1-1.295-.603l-.816-.968a1.698 1.698 0 0 0-1.698-.555l-1.229.302a1.7 1.7 0 0 1-2.095-1.53l-.094-1.265a1.71 1.71 0 0 0-1.05-1.45l-1.168-.482a1.706 1.706 0 0 1-.8-2.472l.665-1.08a1.71 1.71 0 0 0 0-1.793l-.665-1.08a1.71 1.71 0 0 1 .8-2.473l1.17-.481a1.707 1.707 0 0 0 1.05-1.451l.092-1.266a1.71 1.71 0 0 1 .695-1.252 1.694 1.694 0 0 1 1.4-.277l1.229.302a1.694 1.694 0 0 0 1.698-.555l.816-.968Z',\n                        style: {\n                            '--default-color': '#1C68F3',\n                            fill: 'var(--icon-color, var(--default-color, currentColor))',\n                        },\n                    }),\n                    /*#__PURE__*/ _jsx('path', {\n                        fill: '#fff',\n                        fillRule: 'evenodd',\n                        d: 'M17.698 8.776a.75.75 0 0 1 0 1.06l-6.867 6.866a.75.75 0 0 1-1.06 0l-3.21-3.209a.75.75 0 1 1 1.061-1.06l2.679 2.678 6.336-6.335a.75.75 0 0 1 1.06 0Z',\n                        clipRule: 'evenodd',\n                    }),\n                ],\n            }),\n        s: true,\n    },\n])\nexport const Wallet = /*#__PURE__*/ __createIcon('Wallet', [\n    {\n        u: () => new URL('./general/Wallet.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    clipRule: 'evenodd',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M6.2 11.15a.8.8 0 0 1 .8-.8h6a.8.8 0 0 1 0 1.6H7a.8.8 0 0 1-.8-.8Zm-.51-7.51A2.887 2.887 0 0 0 2.8 6.53v4.62a.8.8 0 0 1-1.6 0V6.53a4.487 4.487 0 0 1 4.49-4.49h5.62c1.182 0 2.298.367 3.131 1.082.845.724 1.36 1.774 1.36 3.027a.8.8 0 0 1-1.6 0c0-.787-.311-1.392-.802-1.813-.501-.43-1.23-.697-2.089-.697H5.69Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M6 6.95a3.199 3.199 0 0 0-3.2 3.2v7a3.2 3.2 0 0 0 3.2 3.2h10a3.2 3.2 0 0 0 3.2-3.2v-.65h-.13c-1.254 0-2.542-.772-2.902-2.113l-.002-.004a2.813 2.813 0 0 1 .75-2.751 2.793 2.793 0 0 1 2.004-.832h.28v-.65c0-1.759-1.442-3.2-3.2-3.2H6Zm-4.8 3.2c0-2.652 2.148-4.8 4.8-4.8h10c2.642 0 4.8 2.158 4.8 4.8v1.45a.8.8 0 0 1-.8.8h-1.08a1.193 1.193 0 0 0-.886.377 1.214 1.214 0 0 0-.32 1.197c.14.518.691.926 1.356.926H20a.8.8 0 0 1 .8.8v1.45a4.8 4.8 0 0 1-4.8 4.8H6a4.799 4.799 0 0 1-4.8-4.8v-7Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M18.92 12.399c-.345 0-.648.134-.866.358l-.015.014c-.256.25-.398.605-.362.982v.01c.051.605.636 1.136 1.363 1.136h1.93c.134 0 .23-.107.23-.22v-2.06a.227.227 0 0 0-.23-.22h-2.05Zm-2.006-.765a2.793 2.793 0 0 1 2.006-.835h2.05c1.007 0 1.83.813 1.83 1.82v2.06c0 1.007-.823 1.82-1.83 1.82h-1.93c-1.431 0-2.824-1.047-2.956-2.599a2.808 2.808 0 0 1 .83-2.267Z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const WalletNav = /*#__PURE__*/ __createIcon('WalletNav', [\n    {\n        u: () => new URL('./general/WalletNav.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'currentColor',\n                    fillRule: 'evenodd',\n                    clipRule: 'evenodd',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M17.77 9.873h3.484c.412 0 .746.326.746.728v2.53a.746.746 0 0 1-.746.729h-3.405c-.994.013-1.863-.651-2.089-1.595a1.982 1.982 0 0 1 .433-1.652 2.092 2.092 0 0 1 1.576-.74Zm.15 2.66h.33a.755.755 0 0 0 .764-.745.755.755 0 0 0-.764-.745h-.33a.766.766 0 0 0-.54.213.728.728 0 0 0-.224.524c0 .413.341.749.765.754Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M22 8.382h-4.231v.034c-1.964 0-3.556 1.552-3.556 3.467s1.592 3.467 3.556 3.467H22v.312C22 19.015 19.964 21 16.516 21H7.484C4.036 21 2 19.015 2 15.662V8.338C2 4.985 4.036 3 7.484 3h9.032C19.964 3 22 4.985 22 8.382Zm-15.262 0h5.644a.755.755 0 0 0 .765-.746.755.755 0 0 0-.764-.745H6.738a.755.755 0 0 0-.764.736c0 .413.34.75.764.754Z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const WalletSetting = /*#__PURE__*/ __createIcon('WalletSetting', [\n    {\n        u: () => new URL('./general/WalletSetting.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsxs('g', {\n                    fill: 'currentColor',\n                    children: [\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'm18.46 9.279-3.62-6.274a1.458 1.458 0 0 0-1.26-.726H6.42c-.568 0-1.1.306-1.382.799l-3.582 6.2c-.26.45-.26 1.006 0 1.454l3.62 6.271c.26.45.74.727 1.26.727h7.243c.517 0 1-.28 1.26-.727l3.62-6.271a1.461 1.461 0 0 0 0-1.453Zm-1.185.77-3.621 6.27a.086.086 0 0 1-.074.044H6.337a.084.084 0 0 1-.074-.043l-3.62-6.272a.085.085 0 0 1 0-.086l3.58-6.199a.232.232 0 0 1 .198-.115h7.159c.03 0 .058.015.074.043l3.62 6.271a.085.085 0 0 1 0 .086Z',\n                        }),\n                        /*#__PURE__*/ _jsx('path', {\n                            d: 'M9.959 7.04a2.968 2.968 0 0 0-2.965 2.964A2.968 2.968 0 0 0 9.96 12.97a2.967 2.967 0 0 0 2.965-2.963A2.97 2.97 0 0 0 9.959 7.04Zm0 4.564a1.6 1.6 0 0 1-1.598-1.598A1.6 1.6 0 0 1 9.96 8.41a1.6 1.6 0 0 1 1.598 1.597 1.6 1.6 0 0 1-1.598 1.598Z',\n                        }),\n                    ],\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Warning = /*#__PURE__*/ __createIcon('Warning', [\n    {\n        u: () => new URL('./general/Warning.svg', import.meta.url),\n    },\n])\nexport const WarningTriangle = /*#__PURE__*/ __createIcon('WarningTriangle', [\n    {\n        u: () => new URL('./general/WarningTriangle.svg', import.meta.url),\n    },\n])\nexport const Web = /*#__PURE__*/ __createIcon('Web', [\n    {\n        u: () => new URL('./general/Web.svg', import.meta.url),\n    },\n])\nexport const WebBlack = /*#__PURE__*/ __createIcon('WebBlack', [\n    {\n        c: ['dark'],\n        u: () => new URL('./general/WebBlack.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./general/WebBlack.light.svg', import.meta.url),\n    },\n])\nexport const MenuPersonas = /*#__PURE__*/ __createIcon('MenuPersonas', [\n    {\n        u: () => new URL('./menus/MenuPersonas.png', import.meta.url),\n    },\n])\nexport const MenuPersonasActive = /*#__PURE__*/ __createIcon('MenuPersonasActive', [\n    {\n        u: () => new URL('./menus/MenuPersonasActive.png', import.meta.url),\n    },\n])\nexport const MenuSettings = /*#__PURE__*/ __createIcon('MenuSettings', [\n    {\n        u: () => new URL('./menus/MenuSettings.png', import.meta.url),\n    },\n])\nexport const MenuSettingsActive = /*#__PURE__*/ __createIcon('MenuSettingsActive', [\n    {\n        u: () => new URL('./menus/MenuSettingsActive.png', import.meta.url),\n    },\n])\nexport const MenuWallets = /*#__PURE__*/ __createIcon('MenuWallets', [\n    {\n        u: () => new URL('./menus/MenuWallets.png', import.meta.url),\n    },\n])\nexport const MenuWalletsActive = /*#__PURE__*/ __createIcon('MenuWalletsActive', [\n    {\n        u: () => new URL('./menus/MenuWalletsActive.png', import.meta.url),\n    },\n])\nexport const Approval = /*#__PURE__*/ __createIcon('Approval', [\n    {\n        u: () => new URL('./plugins/Approval.svg', import.meta.url),\n    },\n])\nexport const ArtBlocks = /*#__PURE__*/ __createIcon('ArtBlocks', [\n    {\n        u: () => new URL('./plugins/ArtBlocks.png', import.meta.url),\n    },\n])\nexport const Avatar = /*#__PURE__*/ __createIcon('Avatar', [\n    {\n        u: () => new URL('./plugins/Avatar.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 20 20',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'M7.413 2.721c1.191-.96 2.814-1.23 4.293-.95 1.346.322 2.551 1.228 3.204 2.453.453.805.593 1.738.599 2.65l-.001 7.089c-.04.308.204.528.359.764.735 1.054 1.078 2.332 1.139 3.605-.442.002-.884.001-1.326 0-.067-.822-.212-1.644-.597-2.382-1.206-.006-2.41.02-3.617.008-.007-.895-.003-1.79-.005-2.686-1.028-.24-2.115-.061-3.081.338-1.846.778-3.096 2.727-3.089 4.723H4c-.061-1.578.593-3.132 1.626-4.307.145-.137.093-.352.108-.53-.013-1.811.008-3.624-.01-5.436-.045-.902-.017-1.806.024-2.708.108-1.08.77-2.041 1.666-2.63Zm4.23.365c.148.42.554.684.715 1.102.504.938.361 2.023.378 3.044.008 2.481.006 4.962.007 7.443.495.001.99.004 1.486-.006-.004-2.598-.003-5.198 0-7.796-.006-.627-.069-1.273-.349-1.845-.414-.933-1.265-1.646-2.238-1.942Zm-3.712.848c-.653.427-.977 1.227-.952 1.99 1.498.015 2.994.005 4.492.006.053-.995-.59-2.006-1.576-2.261-.656-.233-1.369-.046-1.964.265Zm-.913 3.268c-.007.533.012 1.093.293 1.564.418.793 1.285 1.28 2.172 1.306v1.27a3.986 3.986 0 0 1-2.493-.973c.013.825 0 1.651.01 2.478a6.488 6.488 0 0 1 4.465-.941c-.008-1.568-.001-3.136-.005-4.704H7.018Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const Bit = /*#__PURE__*/ __createIcon('Bit', [\n    {\n        u: () => new URL('./plugins/Bit.svg', import.meta.url),\n    },\n])\nexport const Calendar = /*#__PURE__*/ __createIcon('Calendar', [\n    {\n        u: () => new URL('./plugins/Calendar.svg', import.meta.url),\n    },\n])\nexport const Collectibles = /*#__PURE__*/ __createIcon('Collectibles', [\n    {\n        u: () => new URL('./plugins/Collectibles.svg', import.meta.url),\n    },\n])\nexport const CrossBridge = /*#__PURE__*/ __createIcon('CrossBridge', [\n    {\n        u: () => new URL('./plugins/CrossBridge.png', import.meta.url),\n    },\n])\nexport const DecentralizedSearch = /*#__PURE__*/ __createIcon('DecentralizedSearch', [\n    {\n        u: () => new URL('./plugins/DecentralizedSearch.svg', import.meta.url),\n    },\n])\nexport const ENS = /*#__PURE__*/ __createIcon('ENS', [\n    {\n        u: () => new URL('./plugins/ENS.png', import.meta.url),\n    },\n])\nexport const ENSCover = /*#__PURE__*/ __createIcon('ENSCover', [\n    {\n        u: () => new URL('./plugins/ENSCover.svg', import.meta.url),\n    },\n])\nexport const FileService = /*#__PURE__*/ __createIcon('FileService', [\n    {\n        u: () => new URL('./plugins/FileService.svg', import.meta.url),\n    },\n])\nexport const FindTruman = /*#__PURE__*/ __createIcon('FindTruman', [\n    {\n        u: () => new URL('./plugins/FindTruman.png', import.meta.url),\n    },\n])\nexport const Gitcoin = /*#__PURE__*/ __createIcon('Gitcoin', [\n    {\n        c: ['dark'],\n        u: () => new URL('./plugins/Gitcoin.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./plugins/Gitcoin.light.svg', import.meta.url),\n    },\n])\nexport const GoodGhosting = /*#__PURE__*/ __createIcon('GoodGhosting', [\n    {\n        c: ['dark'],\n        u: () => new URL('./plugins/GoodGhosting.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./plugins/GoodGhosting.light.svg', import.meta.url),\n    },\n])\nexport const Markets = /*#__PURE__*/ __createIcon('Markets', [\n    {\n        u: () => new URL('./plugins/Markets.png', import.meta.url),\n    },\n])\nexport const MarketsClaim = /*#__PURE__*/ __createIcon('MarketsClaim', [\n    {\n        u: () => new URL('./plugins/MarketsClaim.svg', import.meta.url),\n    },\n])\nexport const MaskBox = /*#__PURE__*/ __createIcon('MaskBox', [\n    {\n        u: () => new URL('./plugins/MaskBox.svg', import.meta.url),\n    },\n])\nexport const NFTAvatar = /*#__PURE__*/ __createIcon('NFTAvatar', [\n    {\n        u: () => new URL('./plugins/NFTAvatar.svg', import.meta.url),\n    },\n])\nexport const PoolTogether = /*#__PURE__*/ __createIcon('PoolTogether', [\n    {\n        u: () => new URL('./plugins/PoolTogether.png', import.meta.url),\n    },\n])\nexport const Savings = /*#__PURE__*/ __createIcon('Savings', [\n    {\n        u: () => new URL('./plugins/Savings.svg', import.meta.url),\n    },\n])\nexport const ScamSniffer = /*#__PURE__*/ __createIcon('ScamSniffer', [\n    {\n        u: () => new URL('./plugins/ScamSniffer.svg', import.meta.url),\n    },\n])\nexport const SecurityChecker = /*#__PURE__*/ __createIcon('SecurityChecker', [\n    {\n        u: () => new URL('./plugins/SecurityChecker.svg', import.meta.url),\n    },\n])\nexport const SettingInfo = /*#__PURE__*/ __createIcon('SettingInfo', [\n    {\n        c: ['dark'],\n        u: () => new URL('./plugins/SettingInfo.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./plugins/SettingInfo.light.svg', import.meta.url),\n    },\n])\nexport const Shared = /*#__PURE__*/ __createIcon('shared', [\n    {\n        u: () => new URL('./plugins/shared.svg', import.meta.url),\n    },\n])\nexport const Snapshot = /*#__PURE__*/ __createIcon('Snapshot', [\n    {\n        u: () => new URL('./plugins/Snapshot.svg', import.meta.url),\n    },\n])\nexport const SpaceId = /*#__PURE__*/ __createIcon('SpaceId', [\n    {\n        u: () => new URL('./plugins/SpaceId.svg', import.meta.url),\n    },\n])\nexport const TipCoin = /*#__PURE__*/ __createIcon('TipCoin', [\n    {\n        u: () => new URL('./plugins/TipCoin.svg', import.meta.url),\n    },\n])\nexport const Transak = /*#__PURE__*/ __createIcon('Transak', [\n    {\n        u: () => new URL('./plugins/Transak.png', import.meta.url),\n    },\n])\nexport const Unstoppable = /*#__PURE__*/ __createIcon('Unstoppable', [\n    {\n        u: () => new URL('./plugins/Unstoppable.svg', import.meta.url),\n    },\n])\nexport const Valuables = /*#__PURE__*/ __createIcon('Valuables', [\n    {\n        c: ['dark'],\n        u: () => new URL('./plugins/Valuables.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./plugins/Valuables.light.svg', import.meta.url),\n    },\n])\nexport const Web3Profile = /*#__PURE__*/ __createIcon('Web3Profile', [\n    {\n        u: () => new URL('./plugins/Web3Profile.svg', import.meta.url),\n    },\n])\nexport const Web3ProfileCard = /*#__PURE__*/ __createIcon('Web3ProfileCard', [\n    {\n        u: () => new URL('./plugins/Web3ProfileCard.svg', import.meta.url),\n    },\n])\nexport const AchievementBurn = /*#__PURE__*/ __createIcon('AchievementBurn', [\n    {\n        u: () => new URL('./rss3/AchievementBurn.svg', import.meta.url),\n    },\n])\nexport const AchievementReceive = /*#__PURE__*/ __createIcon('AchievementReceive', [\n    {\n        u: () => new URL('./rss3/AchievementReceive.svg', import.meta.url),\n    },\n])\nexport const ApprovalApprove = /*#__PURE__*/ __createIcon('ApprovalApprove', [\n    {\n        u: () => new URL('./rss3/ApprovalApprove.svg', import.meta.url),\n    },\n])\nexport const CollectibleApprove = /*#__PURE__*/ __createIcon('CollectibleApprove', [\n    {\n        u: () => new URL('./rss3/CollectibleApprove.svg', import.meta.url),\n    },\n])\nexport const CollectibleBurn = /*#__PURE__*/ __createIcon('CollectibleBurn', [\n    {\n        u: () => new URL('./rss3/CollectibleBurn.svg', import.meta.url),\n    },\n])\nexport const CollectibleIn = /*#__PURE__*/ __createIcon('CollectibleIn', [\n    {\n        u: () => new URL('./rss3/CollectibleIn.svg', import.meta.url),\n    },\n])\nexport const CollectibleMint = /*#__PURE__*/ __createIcon('CollectibleMint', [\n    {\n        u: () => new URL('./rss3/CollectibleMint.svg', import.meta.url),\n    },\n])\nexport const CollectibleOut = /*#__PURE__*/ __createIcon('CollectibleOut', [\n    {\n        u: () => new URL('./rss3/CollectibleOut.svg', import.meta.url),\n    },\n])\nexport const DonationDonate = /*#__PURE__*/ __createIcon('DonationDonate', [\n    {\n        u: () => new URL('./rss3/DonationDonate.svg', import.meta.url),\n    },\n])\nexport const DonationLaunch = /*#__PURE__*/ __createIcon('DonationLaunch', [\n    {\n        u: () => new URL('./rss3/DonationLaunch.svg', import.meta.url),\n    },\n])\nexport const Follow = /*#__PURE__*/ __createIcon('Follow', [\n    {\n        u: () => new URL('./rss3/Follow.svg', import.meta.url),\n    },\n])\nexport const GovernancePropose = /*#__PURE__*/ __createIcon('GovernancePropose', [\n    {\n        u: () => new URL('./rss3/GovernancePropose.svg', import.meta.url),\n    },\n])\nexport const GovernanceVote = /*#__PURE__*/ __createIcon('GovernanceVote', [\n    {\n        u: () => new URL('./rss3/GovernanceVote.svg', import.meta.url),\n    },\n])\nexport const NoteBurn = /*#__PURE__*/ __createIcon('NoteBurn', [\n    {\n        u: () => new URL('./rss3/NoteBurn.svg', import.meta.url),\n    },\n])\nexport const NoteCreate = /*#__PURE__*/ __createIcon('NoteCreate', [\n    {\n        u: () => new URL('./rss3/NoteCreate.svg', import.meta.url),\n    },\n])\nexport const NoteEdit = /*#__PURE__*/ __createIcon('NoteEdit', [\n    {\n        u: () => new URL('./rss3/NoteEdit.svg', import.meta.url),\n    },\n])\nexport const NoteLink = /*#__PURE__*/ __createIcon('NoteLink', [\n    {\n        u: () => new URL('./rss3/NoteLink.svg', import.meta.url),\n    },\n])\nexport const NoteMint = /*#__PURE__*/ __createIcon('NoteMint', [\n    {\n        u: () => new URL('./rss3/NoteMint.svg', import.meta.url),\n    },\n])\nexport const ProfileBurn = /*#__PURE__*/ __createIcon('ProfileBurn', [\n    {\n        u: () => new URL('./rss3/ProfileBurn.svg', import.meta.url),\n    },\n])\nexport const ProfileCreate = /*#__PURE__*/ __createIcon('ProfileCreate', [\n    {\n        u: () => new URL('./rss3/ProfileCreate.svg', import.meta.url),\n    },\n])\nexport const ProfileLink = /*#__PURE__*/ __createIcon('ProfileLink', [\n    {\n        u: () => new URL('./rss3/ProfileLink.svg', import.meta.url),\n    },\n])\nexport const ProfileProxy = /*#__PURE__*/ __createIcon('ProfileProxy', [\n    {\n        u: () => new URL('./rss3/ProfileProxy.svg', import.meta.url),\n    },\n])\nexport const ProfileUpdate = /*#__PURE__*/ __createIcon('ProfileUpdate', [\n    {\n        u: () => new URL('./rss3/ProfileUpdate.svg', import.meta.url),\n    },\n])\nexport const RSS3Link = /*#__PURE__*/ __createIcon(\n    'RSS3Link',\n    [\n        {\n            u: () => new URL('./rss3/RSS3Link.svg', import.meta.url),\n            j: () =>\n                /*#__PURE__*/ _jsx('svg', {\n                    xmlns: 'http://www.w3.org/2000/svg',\n                    fill: 'none',\n                    viewBox: '0 0 9 2',\n                    children: /*#__PURE__*/ _jsx('path', {\n                        fill: 'currentColor',\n                        d: 'M.848 1.872a.83.83 0 0 1-.608-.256A.879.879 0 0 1 0 .992C0 .747.08.544.24.384A.83.83 0 0 1 .848.128a.83.83 0 0 1 .608.256.8.8 0 0 1 .256.608.85.85 0 0 1-.256.624.83.83 0 0 1-.608.256Zm3.391 0a.83.83 0 0 1-.608-.256.879.879 0 0 1-.24-.624c0-.245.08-.448.24-.608a.83.83 0 0 1 .608-.256.83.83 0 0 1 .608.256.8.8 0 0 1 .256.608.85.85 0 0 1-.256.624.83.83 0 0 1-.608.256Zm3.391 0a.83.83 0 0 1-.609-.256.879.879 0 0 1-.24-.624c0-.245.08-.448.24-.608A.83.83 0 0 1 7.63.128a.83.83 0 0 1 .608.256.8.8 0 0 1 .256.608.85.85 0 0 1-.256.624.83.83 0 0 1-.608.256Z',\n                    }),\n                }),\n            s: true,\n        },\n    ],\n    [9, 2],\n)\nexport const TokenBridge = /*#__PURE__*/ __createIcon('TokenBridge', [\n    {\n        u: () => new URL('./rss3/TokenBridge.svg', import.meta.url),\n    },\n])\nexport const TokenBurn = /*#__PURE__*/ __createIcon('TokenBurn', [\n    {\n        u: () => new URL('./rss3/TokenBurn.svg', import.meta.url),\n    },\n])\nexport const TokenIn = /*#__PURE__*/ __createIcon('TokenIn', [\n    {\n        u: () => new URL('./rss3/TokenIn.svg', import.meta.url),\n    },\n])\nexport const TokenLiquidity = /*#__PURE__*/ __createIcon('TokenLiquidity', [\n    {\n        u: () => new URL('./rss3/TokenLiquidity.svg', import.meta.url),\n    },\n])\nexport const TokenMint = /*#__PURE__*/ __createIcon('TokenMint', [\n    {\n        u: () => new URL('./rss3/TokenMint.svg', import.meta.url),\n    },\n])\nexport const TokenOut = /*#__PURE__*/ __createIcon('TokenOut', [\n    {\n        u: () => new URL('./rss3/TokenOut.svg', import.meta.url),\n    },\n])\nexport const TokenStake = /*#__PURE__*/ __createIcon('TokenStake', [\n    {\n        u: () => new URL('./rss3/TokenStake.svg', import.meta.url),\n    },\n])\nexport const TokenSwap = /*#__PURE__*/ __createIcon('TokenSwap', [\n    {\n        u: () => new URL('./rss3/TokenSwap.svg', import.meta.url),\n    },\n])\nexport const TokenUnstake = /*#__PURE__*/ __createIcon('TokenUnstake', [\n    {\n        u: () => new URL('./rss3/TokenUnstake.svg', import.meta.url),\n    },\n])\nexport const Unfollow = /*#__PURE__*/ __createIcon('Unfollow', [\n    {\n        u: () => new URL('./rss3/Unfollow.svg', import.meta.url),\n    },\n])\nexport const UnknownBurn = /*#__PURE__*/ __createIcon('UnknownBurn', [\n    {\n        u: () => new URL('./rss3/UnknownBurn.svg', import.meta.url),\n    },\n])\nexport const UnknownCancel = /*#__PURE__*/ __createIcon('UnknownCancel', [\n    {\n        u: () => new URL('./rss3/UnknownCancel.svg', import.meta.url),\n    },\n])\nexport const UnknownIn = /*#__PURE__*/ __createIcon('UnknownIn', [\n    {\n        u: () => new URL('./rss3/UnknownIn.svg', import.meta.url),\n    },\n])\nexport const UnknownOut = /*#__PURE__*/ __createIcon('UnknownOut', [\n    {\n        u: () => new URL('./rss3/UnknownOut.svg', import.meta.url),\n    },\n])\nexport const CN = /*#__PURE__*/ __createIcon('CN', [\n    {\n        u: () => new URL('./settings/CN.svg', import.meta.url),\n    },\n])\nexport const Email = /*#__PURE__*/ __createIcon('Email', [\n    {\n        u: () => new URL('./settings/Email.svg', import.meta.url),\n        j: () =>\n            /*#__PURE__*/ _jsx('svg', {\n                xmlns: 'http://www.w3.org/2000/svg',\n                fill: 'none',\n                viewBox: '0 0 24 24',\n                children: /*#__PURE__*/ _jsx('path', {\n                    fill: 'currentColor',\n                    d: 'M16.192 14.725c1.238.944 2.07 1.14 2.597.905.346-.156.595-.521.74-.925a8.002 8.002 0 0 0-3.53-9.633A8 8 0 1 0 12.015 20l.006 2A9.957 9.957 0 0 1 7 20.66C2.22 17.897.58 11.781 3.341 7a10 10 0 0 1 18.07 8.383 4.033 4.033 0 0 1-.471.925c-.337.494-.775.895-1.332 1.145-1.327.595-2.945.19-4.83-1.297a5 5 0 1 1 1.414-1.432ZM12.001 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z',\n                }),\n            }),\n        s: true,\n    },\n])\nexport const JP = /*#__PURE__*/ __createIcon('JP', [\n    {\n        u: () => new URL('./settings/JP.svg', import.meta.url),\n    },\n])\nexport const KR = /*#__PURE__*/ __createIcon('KR', [\n    {\n        u: () => new URL('./settings/KR.svg', import.meta.url),\n    },\n])\nexport const SettingsAppearance = /*#__PURE__*/ __createIcon('SettingsAppearance', [\n    {\n        c: ['dark'],\n        u: () => new URL('./settings/SettingsAppearance.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./settings/SettingsAppearance.light.svg', import.meta.url),\n    },\n])\nexport const SettingsBackup = /*#__PURE__*/ __createIcon('SettingsBackup', [\n    {\n        c: ['dark'],\n        u: () => new URL('./settings/SettingsBackup.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./settings/SettingsBackup.light.svg', import.meta.url),\n    },\n])\nexport const SettingsEmail = /*#__PURE__*/ __createIcon('SettingsEmail', [\n    {\n        c: ['dark'],\n        u: () => new URL('./settings/SettingsEmail.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./settings/SettingsEmail.light.svg', import.meta.url),\n    },\n])\nexport const SettingsLanguage = /*#__PURE__*/ __createIcon('SettingsLanguage', [\n    {\n        c: ['dark'],\n        u: () => new URL('./settings/SettingsLanguage.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./settings/SettingsLanguage.light.svg', import.meta.url),\n    },\n])\nexport const SettingsPassword = /*#__PURE__*/ __createIcon('SettingsPassword', [\n    {\n        c: ['dark'],\n        u: () => new URL('./settings/SettingsPassword.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./settings/SettingsPassword.light.svg', import.meta.url),\n    },\n])\nexport const SettingsPhone = /*#__PURE__*/ __createIcon('SettingsPhone', [\n    {\n        c: ['dark'],\n        u: () => new URL('./settings/SettingsPhone.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./settings/SettingsPhone.light.svg', import.meta.url),\n    },\n])\nexport const SettingsRestore = /*#__PURE__*/ __createIcon('SettingsRestore', [\n    {\n        c: ['dark'],\n        u: () => new URL('./settings/SettingsRestore.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./settings/SettingsRestore.light.svg', import.meta.url),\n    },\n])\nexport const SettingsSync = /*#__PURE__*/ __createIcon('SettingsSync', [\n    {\n        c: ['dark'],\n        u: () => new URL('./settings/SettingsSync.dark.svg', import.meta.url),\n    },\n    {\n        c: ['light'],\n        u: () => new URL('./settings/SettingsSync.light.svg', import.meta.url),\n    },\n])\nexport const UK = /*#__PURE__*/ __createIcon('UK', [\n    {\n        u: () => new URL('./settings/UK.svg', import.meta.url),\n    },\n])\n"],"names":["isAESJsonWebKey","x","alg","k","key_ops","kty","Array","isArray","isEC_JsonWebKey","o","crv","y","isEC_Public_JsonWebKey","d","isEC_Private_JsonWebKey","encodeArrayBuffer","decodeArrayBuffer","concatArrayBuffer","Convert","compressK256Point","isPoint","pointCompress","xb","Uint8Array","FromBase64Url","yb","point","TypeError","decompressK256Point","isPointCompressed","uncompressed","len","length","slice","ToBase64Url","compressK256KeyRaw","decompressK256Raw","compressK256Key","key","arr","decompressK256Key","compressedPublic","jwk","ext","isK256Point","isK256PrivateKey","isPrivate","Err","CheckedError","Error","kind","reason","constructor","cause","toString","mapErr","r","e","withErr","f","args","then","toErr","andThenAsync","op","mapper","isErr","value","parser","parseURLs","text","requireProtocol","lib","default","list","map","string","filter","URL","canParse","DecryptProgressKind","Success","Info","Progress","DecryptIntermediateProgressKind","TryDecryptByE2E","DecryptErrorReasons","PayloadBroken","PayloadDecryptedButTypedMessageBroken","CannotDecryptAsAuthor","DecryptFailed","AuthorPublicKeyNotFound","PrivateKeyNotFound","NotShareTarget","UnrecognizedAuthor","CurrentProfileDoesNotConnectedToPersona","NoPayloadFound","DecryptError","message","recoverable","Reasons","type","EncryptErrorReasons","ComplexTypedMessageNotSupportedInPayload38","PublicKeyNotFound","AESKeyUsageError","EncryptError","EC_KeyCurve","createEphemeralKeysMap","io","ephemeralKeys","Map","getEphemeralKey","curve","has","get","set","generateEC_KeyPair","fillIV","getRandomValues","crypto","getRandomECKey","namedCurve","secp256p1","secp256k1","privateKey","publicKey","subtle","generateKey","name","encryptWithAES","KEY","IV","deriveAESByECDH_version38OrOlderExtraSteps","deriveAESByECDH","pub","iv","deriveResult","extraSteps","derivedKeyRaw","exportKey","_a","nextAESKeyMaterial","digest","iv_pre","nextIV","i","nextAESKey","importKey","Promise","all","v38_addReceiver","postKeyEncoded","target","ecdh","allSettled","receiverPublicKey","ivToBePublished","aes","deriveAESKey","encryptedPostKey","unwrap","entries","ecdhResult","index","result","encode","decode","DEFAULT_MASK","getDimension","getPreset","findPreset","GrayscaleAlgorithm","SteganographyPreset","Preset2021","Preset2022","Preset2023","steganographyEncodeImage","buf","options","downloadImage","data","password","grayscaleAlgorithm","preset","optionalOptions","mask","pass","steganographyDecodeImage","image","buffer","arrayBuffer","dimension","unreachable","AlgorithmVersion","TransformAlgorithm","libV1AlgrDefaults","size","narrow","copies","tolerance","exhaustPixels","cropEdgePixels","fakeMaskPixels","NONE","transformAlgorithm","FFT1D","version","V1","libV2AlgrDefaults","FFT2D","V2","description","width","height","url","dimensionPreset","find","isSameDimension","otherDimension","getImageType","fallback","getDimensionAsJPEG","getDimensionAsPNG","dataView","DataView","getInt32","getUint8","charCodeAt","block_length","byteLength","Ok","None","Some","OptionalResult","fromResult","Result","decodeText","decodeMessagePack","firstArgString","firstArgUint8Array","decodeUint8ArrayF","wrap","decodeTextF","JSONParseF","JSON","parse","decodeMessagePackF","u8","encodeMessagePack","valid","invalidE","throwsE","isValid","PayloadException","SignaturePayloadFirstByte","NoSignature","Signature","encodeSignatureContainer","payload","signature","parseSignatureContainer","signatureContainer","signee","InvalidPayload","ProfileIdentifier","EncryptPayloadNetwork","CryptoException","importAES","import_AES_GCM_256","InvalidCryptoKey","v38PublicSharedJwk","v38PublicSharedCryptoKey","get_v38PublicSharedCryptoKey","imported","parseAuthor","network","id","undefined","net","Facebook","Twitter","Instagram","Minds","UnknownEnumMember","includes","identifier","of","isSome","assertArray","assertUint8Array","assertIVLengthEq16","importEC_Key","safeUnreachable","DecodeFailed","msg","importAES256","importEC","parse37","input","parsePayload37","_","andThen","item","authorNetwork","authorID","authorPublicKeyAlg","authorPublicKey","encryption","UnknownVersion","normalized","author","importAsymmetryKey","parseEncryption","encrypted","EncryptionKind","PeerToPeer","ownersAESKeyEncrypted","authorEphemeralPublicKeys","ephemeralPublicKey","parseAuthorEphemeralPublicKeys","Public","AESKey","parseAES","Object","fromEntries","parseAuthorEphemeralPublicKey","isEnumLike","Number","parseInt","isNaN","algr","pubKey","UnsupportedAlgorithm","decryptWithAES","encodeText","decodeUint8Array","decodeUint8ArrayCrypto","decodeTextCrypto","JSONParse","parse38","header","startsWith","rest","lastIndexOf","AESKeyEncrypted","encryptedText","authorUserID","isPublic","splitFields","raw_iv","raw_aes","decodePublicSharedAESKey","from","toResult","decodeECDHPublicKey","isOk","sig","raw","authorUserIDRaw","split","atob","encryptedKey","publicSharedKey","decrypt","jwk_in_u8arr","jwk_in_text","val","wrapAsync","parse40","parse39","v_40","v_39","replace","exportCryptoKeyToJWK","Index","publicShared","authorIdentifier","encode38","encodeAESKeyEncrypted","encodeSignature","fields","compressed","console","error","unwrapOr","String","toText","btoa","join","ab","EncryptFailed","isNone","exportCryptoKeyToRaw","authorPublicKeyAlgorithm","encode37","payload_arr","userId","warn","keyMaterials","subArr","err","parsePayload","encodePayloadWithoutSignatureContainer","decodeOnly","errorMessage","encodePayload","sign","bin","NoSign","Unknown","encryptPayloadNetworkToDomain","InvalidIVLength","EncodeFailed","kinds","ArrayBuffer","DeriveKeyUsage","ImportParamsMap","encrypt","getEcKeyCurve","algorithm","flags","defaultFlags","RemoteFlags","fetchAndActive","Flags","accessor","env","BrowserProvider","Coin98Provider","Coin98ProviderType","CoinbaseProvider","OKXProvider","PhantomProvider","SolflareProvider","OperaProvider","CloverProvider","MetaMaskProvider","sendEvent","rejectPromise","resolvePromise","CustomEventId","decodeEvent","BaseProvider","BaseInjectedProvider","InjectedProvider","injectedCoin98EVMProvider","EVM","injectedCoin98SolanaProvider","Solana","injectedPhantomProvider","injectedSolflareProvider","injectedBrowserProvider","injectedMetaMaskProvider","injectedCoinbaseProvider","injectedOKXProvider","injectedOperaProvider","injectedCloverProvider","Providers","pasteText","pasteImage","pasteInstagram","inputText","hookInputUploadOnce","format","fileName","triggerOnActiveElementNow","location","protocol","globalThis","document","addEventListener","detail","pathname","eventName","forEach","emit","neverEvent","log","queryAvatarDB","isAvatarOutdatedDB","storeAvatarDB","createAvatarDBAccess","queryAvatarMetaDataDB","blobToDataURL","memoizePromise","createTransaction","memoize","impl","identifiers","promises","t","push","avatar","Blob","flatMap","queryAvatarLastUpdateTimeImpl","metadata","lastUpdateTime","queryAvatarsDataURL","queryAvatarLastUpdateTime","storeAvatar","isOutdated","fetch","cache","clear","openDB","ECKeyIdentifier","Identifier","createDBAccess","pendingUpdate","pendingUpdateTimer","upgrade","db","oldVersion","newVersion","transaction","createObjectStore","keyPath","meta","Date","lastAccessTime","objectStore","put","scheduleAvatarMetaUpdate","_1_minute","setTimeout","old","queryAvatarOutdatedDB","attribute","deadline","now","outdated","deleteAvatarsDB","ids","delete","attachProfileDB","consistentPersonaDBWriteAccess","createOrUpdatePersonaDB","createPersonaDB","createPersonaDBReadonlyAccess","queryPersonaByProfileDB","queryPersonasWithPrivateKey","queryProfileDB","noop","hasLocalKeyOf","tx","getLocalKeyOf","decryptByLocalKey","authorHint","candidateKeys","check","any","abort","encryptByLocalKey","who","content","profile","localKey","linkedPersona","persona","sameCurvePrivateKeys","personas","linkedProfiles","derived","deriveKey","public","failed","status","createPersonaByJsonWebKey","fromJsonWebKey","record","createdAt","updatedAt","nickname","mnemonic","hasLogout","uninitialized","createProfileWithPersona","profileID","keys","ec_id","rec","explicitUndefinedField","queryPublicKey","A","B","PostIdentifier","C","PostIVIdentifier","D","convertRawMapToIdentifierMap","it","hasProfileIdentifier","hasECKeyIdentifier","hasPostIdentifier","hasPostIVIdentifier","droppedValues","convertIdentifierMapToRawMap","assertPersonaDBConsistency","behavior","checkRange","diag","w","checkFullPersonaDBConsistency","info","getAll","mode","each","fixDBInconsistency","catch","diagnosis","profiles","invalidPersonaKey","invalidProfileKey","profileWantToUnlink","designatedProfile","invalidProfile","personaID","_record","checkPersonaLink","checkProfileLink","profileActuallyLinkedPersona","invalidLinkedPersona","designatedPersona","compressedPoint","encodedCompressedKey","Type","Invalid_Persona","Invalid_Persona_LinkedProfiles","Invalid_Profile","Invalid_Profile_LinkedPersona","One_Way_Link_In_Persona","One_Way_Link_In_Profile","isEmpty","bufferToHex","privateToPublic","publicToAddress","RelationFavor","fromBase64URL","MaskMessages","CryptoKeyToJsonWebKey","createDBAccessWithAsyncUpgrade","currentOpenVersion","knowledge","v0_v1","createIndex","unique","v1_v2","update","q","v2_v3","v3_v4","deleteIndex","relation","favor","DEPRECATED","UNCOLLECTED","COLLECTED","a","b","createRelationsTransaction","database","action","tryToAutoFix","finished","finish","resumePersona","events","ownPersonaChanged","pause","resumeRelation","relationsChanged","trace","flat","add","personaRecordToDB","sendToAll","query","queryPersonaDB","isIncludeLogout","personaRecordOutDB","queryPersonasDB","records","out","hasPrivateKey","nameContains","some","initialized","IDBKeyRange","only","updatePersonaDB","nextRecord","howToMerge","_old","nextLinkedProfiles","next","personaInDB","address","Buffer","deletePersonaDB","confirm","safeDeletePersonaDB","createProfileDB","profileToDB","profileOutDB","queryProfilesDB","results","hasLinkedPersona","iterate","updateProfileDB","updating","oldLinkedPersona","oldIdentifier","expect","connectionConfirmState","createOrUpdateProfileDB","detachProfileDB","attachTo","deleteProfileDB","createRelationDB","silent","relationRecordToDB","queryRelations","relationRecordOutDB","queryRelationsPagedDB","linked","count","firstRecord","cursor","after","continue","outData","updateRelationDB","deletePersonaRelationDB","createOrUpdateRelationDB","rawPublicKey","Reflect","deleteProperty","obj","publicHexKey","publicKeyAsHex","deleteObjectStore","os","plugin_id","pluginDataHasValidKeyPath","createPluginDBAccess","toStore","createPluginDatabase","signal","livingTransaction","ended","ensureAlive","c","store","commit","remove","openCursor","roCursor","iterate_mutate","rwCursor","usage","invalidateTransaction","withPostDBTransaction","queryPostDB","createPostDB","updatePostDB","savePostKeyToDB","extraInfo","post","postCryptoKey","foundAt","currentTryOpen","_newVersion","postId","v2record","oldType","recipients","Boolean","newType","at","postBy","recipientGroups","v3Record","v4Record","v5Record","by","encryptBy","indexNames","contains","PostDBAccess","task","toSave","postToDB","updateRecord","emptyRecord","currentRecord","nextRecipients","date","nextRecordInDBType","postOutDB","queryPostsDB","selected","idResult","v","interestedMeta","summary","assertEnvironment","Environment","opener","clean","close","once","ManifestBackground","objectStoreNames","firstVersionThatRequiresAsyncUpgrade","latestVersion","asyncUpgradePrepare","dbName","pendingOpen","open","currentVersion","lastVersionData","indexedDB","databases","oldDBs","hasNoOldVersion","hasSameLatestVersion","promise","storeNames","polyfill","setTelemetryID","setupBuildInfo","fetchGlobal","createIndexedDB_KVStorageBackend","onChange","beforeAutoSync","resolve","setInterval","ensureDB","initDB","getValue","setValue","createInMemoryKVStorageBackend","storage","indexedDB_KVStorageBackend","__kv_backend_persistent__","sendByBroadcast","inMemory_KVStorageBackend","__kv_backend_in_memory__","startServices","setupLegacySettingsAtBackground","setupMaskKVStorageBackend","__deprecated__getStorage","__deprecated__setStorage","gunServers","gun","getGunInstance","createGun","OnCloseEvent","Set","WebSocket","off","keepAlive","timer","clearTimeout","send","onclose","Gun","peers","localStorage","radisk","opt","retry","POSITIVE_INFINITY","EventIterator","getGunNodeFromPath","path","resultNode","reduce","getGunData","setGunData","deleteGunData","pushToGunDataArray","subscribeGunMapData","isT","abortSignal","queue","listenerClosed","stop","on","isNonNull","gun_utils","isObject","uniq","GUN_queryPostKey_version40","whoAmI","isValidData","postKeyIV","salt","encryptedKeyIV","Version38Or39","GUN_queryPostKey_version39Or38","minePublicKey","minePublicKeyJWK","keyHash","postHash","calculatePostKeyPartition","internalNodeNames","resultPromise","iter","main","keyProvider","aborted","publishPostAESKey_version39Or38","postIV","receiversKeys","hashIV","values","hashKey38","hashKey39","hashPair","N","hash","GUN_SEA_work","networkHint","getNetworkHint","stringify","TextEncoder","params","iterations","deriveBits","fromCharCode","Version37","GUN_queryPostKey_version37","keyPartition","publishPostAESKey_version37","networkPartition","getNetworkPartition","hashKey","toProfileInformation","mustNotAwaitThisWithInATransaction","createAt","avatars","toPersonaInformation","personaInfo","dbQueryPass2","dbQuery","compact","flatten","sumBy","getBackupSummary","json","files","plugins","ownerPersonas","ownerProfiles","sort","p","trim","contacts","accounts","posts","relations","wallets","wallet","countOfWallets","BackupErrors","UnknownFormat","WrongCheckSum","isObjectLike","createEmptyNormalizedBackup","isBackupVersion0","local","normalizeBackupVersion0","file","backup","maskVersion","username","isBackupVersion1","whoami","normalizeBackupVersion1","grantedHostPermissions","maskbookVersion","settings","people","sum","hex2buffer","hexString","padded","res","concat","offset","__","isBackupVersion2","_meta_","normalizeBackupVersion2","plugin","normalizedPersona","words","parameter","hasPassword","withPassword","normalizedProfile","toRemove","normalizedPost","recipient","reasons","receivers","MetaFromJson","ec","keyFromPrivate","hexPub","getPublic","hexX","hexY","normalizedWallet","passphrase","mnemonicId","derivationPath","generateBackupVersion2","userGroups","MetaToJson","__normalizeBackup","normalizeBackup","test","generateBackupRAW","EC","wallet_ts","isSameAddress","toBase64URL","exportMnemonicWords","exportPrivateKey","getLegacyWallets","getWallets","internal_wallet_backup","backupAllWallets","backupAllLegacyWallets","configurable","wallets_","WalletRecordToJSONFormat","LegacyWalletRecordToJSONFormat","keyToJWK","wallet_","_public_key_","keyToAddr","_private_key_","key_","keyPair","keyFromPublic","privKey","getPrivate","base64","getX","toArray","getY","nums","EthereumAddress","timeout","activatedPluginsWorker","createNewBackup","noPersonas","noPosts","noProfiles","noWallets","onlyForPersona","allProfile","browser","permissions","origins","backupPersonas","backupProfiles","backupAllRelations","backupPosts","backupPlugins","hasPrivateKeyOnly","create","allPlugins","backupCreator","onBackup","backupPlugin","ID","process","NODE_ENV","VERSION","generateBackupPreviewInfo","createBackupFile","excludeBase","excludeWallet","personaNickNames","max","generateNewWalletName","preIndex","indexList","owner","maxIndex","preIndexNotExists","finalIndex","ChainbaseDomain","HD_PATH_WITHOUT_INDEX_ETHEREUM","currySameAddress","getDerivableAccounts","createMnemonicId","recoverWalletFromMnemonicWords","recoverWalletFromPrivateKey","ChainId","formatEthereumAddress","internal_wallet_restore","mnemonicWalletMap","mnemonicWallets","matchedDefaultNameFormat","match","digitIndex","ens","reverse","Mainnet","JWKToKey","findIndex","delay","registeredPlugins","restoreNormalizedBackup","restorePersonas","restorePosts","restorePlugins","state","works","pluginID","getCurrentValue","onRestore","requestHostPermission","SmartPayBundler","SmartPayOwner","generateBackupSummary","backupObj","chainId","getSupportedChainId","getAccountsByOwners","deployed","restoreBackup","granted","backupPersonaPrivateKey","encodePrivateKey","sharedEncoder","sharedDecoder","matchAll","__TwitterEncoder","__TwitterEncoderText","__TwitterEncoderBinary","replaceAll","encodeURIComponent","TwitterDecoder","TwitterDecoderBinary","TwitterDecoderText","payloadLink","link","searchParams","endsWith","search","decodeByNetwork","possiblePayload","decoded","encodeByNetwork","decodeTypedMessageFromDocument","decodeTypedMessageFromDeprecatedFormat","ErrorReasons","_author","_encrypted","_encryption","_authorPublicKey","cacheKey","getPostKeyCache","decryptWithPostAESKey","onDecrypted","_iv","hasAuthorLocalKey","aes_raw","importAESKeyFromJWKFromTextEncoder","setPostKeyCache","progress","event","v37ECDHE","authorECPub","queryAuthorPublicKey","v38To40StaticECDH","report","inlinedECDHE_derived","postKey","queryPostKey_version37","derive","decryptByECDH","importAESKeyFromRaw","queryPostKey_version40","queryPostKey_version39","queryPostKey_version38","possiblePostKeyIterator","ecdhProvider","postKeyDecoder","derivedKeys","aesArr","derivedKey","derivedKeyNewIV","possiblePostKey","decrypted","parseTypedMessage","postAESKey","aes_text","TextDecoder","aes_jwk","decryptWithDecoding","encoded","context","encryptPayloadNetwork","decryption","inMemoryCache","postURL","currentProfile","isAuthorOfPost","hasStoredAuthorPublicKey","storeAuthorPublicKey","bind","safeUnwrap","AbortController","payloadAuthor","postAuthor","otherPersona","v37_addReceiver","firstTime","ephemeralPrivateKey","isTypedMessageText","encodeTypedMessageToDeprecatedFormat","encodeTypedMessageToDocument","aes256GCM","usages","extractable","encodedMessage","encodeMessage","encryptedMessage","encodePostKey","authorPublic","e2e_v38","e2e_v37","output","e2e","getRandomAESKey","encryptTo","keyMap","convertedTarget","prepareEncryptTarget","usingPersona","e2eMapToRecipientDetails","collectInterestedMeta","toIV","key_map","toCryptoKey","getSummary","SUMMARY_MAX_LENGTH","sliceLength","Intl","Segmenter","seg","word","segment","appendEncryptionTarget","appendShareTarget","postRec","encryptComment","postContent","comment","getCommentKey","decryptComment","extractCommentPayload","pbkdf","toEnd","_2","__steganographyEncodeImage","fetchImage","ok","steganographyDownloadImage","hasRecipientAvailable","getRecipients","getIncompleteRecipientsOfPost","nameInDB","fetchText","resolver","u","redirect","credentials","referrerPolicy","resolveTCOLink","queryRemoteI18NBundle","lang","updateLang","getCurrentLanguage","responses","fetchEnglishBundle","fetchTranslatedBundle","I18N_LOCALES_HOST","namespace","response","fetchOption","isValidTranslation","fetchSandboxedPluginManifest","addr","getActiveTabId","tabs","currentWindow","active","windowType","fetchBlob","fetchJSON","openPopupWindow","removePopupWindow","openDashboard","queryCurrentActiveTab","queryCurrentPopupWindowId","queryExtensionPermission","requestExtensionPermission","hasHostPermission","getTelemetryID","urlcat","PopupRoutes","isLocked","currentPopupWindowId","openWindow","windows","popup","window","focused","left","top","lastFocused","getLastFocused","screenX","outerWidth","screenY","Math","runtime","getURL","onRemoved","addListener","listener","windowID","removeListener","openOrUpdatePopupWindow","route","popupRouteUpdated","close_after_unlock","noWalletUnlockNeeded","PersonaSignRequest","Personas","evenWhenWalletLocked","Wallet","activeTab","getPermissionRequestURL","permission","URLSearchParams","append","RequestPermission","request","sendNotification","hostPermissionChanged","requestHostPermissionForActiveTab","origin","currentOrigins","extra","requestSiteAdaptorsPermission","defines","declarativePermissions","base","TelemetryID","webpackHot","accept","telemetry_id","telemetryIDReset","bip39","deriveLocalKeyFromECDHKey","mnemonicWord","pbkdf2","recover_ECDH_256k1_KeyPair_ByMnemonicWord","verify","validateMnemonic","seed","mnemonicToSeed","masterKey","HDKey","parseMasterSeed","split_ec_k256_key_pair_into_pub_priv","HDKeyToJwk","mnemonicRecord","wordList","hdk","omit","createPersonaByPrivateKey","privateKeyString","createPersonaByMnemonicV2","queryPersonaKeyByMnemonicV2","mnemonicWords","first","orderBy","NextIDProof","queryOwnedPersonaInformation","initializedOnly","queryLastPersonaCreated","queryPersonaByProfile","queryPersona","queryPersonaEOAByMnemonic","queryPersonaEOAByPrivateKey","queryPersonasFromNextID","platform","identityResolved","queryAllExistedBindingsByPlatform","querySocialIdentity","identity","bindings","personaBindings","toLowerCase","hasBinding","binding","deletePersona","loginPersona","logoutPersona","personasChanged","setupPersona","loginExistPersonaByPrivateKey","renamePersona","queryPersonaByMnemonic","verified","getPersonaAvatar","getPersonaAvatarLastUpdateTime","updatePersonaAvatar","queryProfilesInformation","queryProfileInformation","hasLocalKey","queryOwnedProfilesInformation","NextIDAction","updateProfileInfo","avatarURL","detachProfileWithNextID","uuid","personaPublicKey","bindProof","Delete","ownProofChanged","resolveUnknownLegacyIdentity","unknown","self","finalRecord","assign","attachProfile","source","detachProfile","attachNextIDPersonaToProfile","personaRecord","profileRecord","createNewRelation","relationInDB","queryRelationPaged","currentPersona","updateRelation","deletePersonaRelation","v4","Signer","signWithPersona","getIdentifier","requestID","reject","personaSignRequest","approval","selectedPersona","identifier_","__kv_storage_write__","__kv_storage_read__","forIn","telemetrySettings","currentPersonaIdentifier","getCurrentPluginMinimalMode","languageSettings","setCurrentPluginMinimalMode","appearanceSettings","BooleanPreference","InjectSwitchSettings","EnhanceableSite","readyPromise","isTelemetryEnabled","setTelemetryEnabled","getTheme","setTheme","getLanguage","setLanguage","getCurrentPersonaIdentifier","newVal","setCurrentPersonaIdentifier","getPluginMinimalModeEnabled","setPluginMinimalModeEnabled","enabled","True","False","pluginMinimalModeChanged","getAllInjectSwitchSettings","setInjectSwitchSetting","getLegacySettingsInitialValue","AsyncCall","AsyncGeneratorCall","MessageTarget","WebExtensionMessage","getOrUpdateLocalImplementationHMR","serializer","setDebugObject","debugMode","domain","hmr","EventTarget","DebugService","setup","GeneratorService","channel","GeneratorServices","Broadcast","beCalled","remoteError","requestReplay","preferLocalImplementation","thenable","dispatchEvent","Event","implementation","hasLog","load","SetupGuideStep","FindUsername","CheckConnection","VerifyOnNextID","PinExtension","Close","FacebookAdaptor","networkIdentifier","homepage","isSocialNetwork","sortIndex","getProfilePage","getShareLinkURL","quote","InstagramAdaptor","MindsAdaptor","intentUrl","MirrorAdaptor","Mirror","TwitterAdaptor","defined","definedSiteAdaptors","defineSiteAdaptor","UI","sortBy","userGuideStatus","currentSetupGuideStatus","hasPermission","getSupportedSites","getSupportedOrigins","getOriginsWithoutPermission","groups","unGrantedOrigins","yes","getAllOrigins","originsWithNoPermission","getSitesWithoutPermission","setupSite","newTab","worker","home","requestPermissionBySite","connectSite","openInNewTab","site","permissionGranted","targetTab","openedTabs","windowId","tabId","disconnectSite","maskSDK_URL","injectUserScriptMV2","evaluateContentScript","attachMaskSDKToCurrentActivePage","choose","scripting","attachMaskSDK3","attachMaskSDK2","executeScript","code","world","developmentMaskSDKReload","shouldSuggestConnectInPopup","canInject","PluginID","walletDatabase","createWalletDBAccess","v8_v9","pluginStore","MaskEthereumProviderRpcError","stack","ErrorCode","ParseError","InvalidRequest","MethodNotFound","InvalidParams","InternalError","ErrorMessages","FirstArgumentIsNotObject","FirstArgumentMethodFieldInvalid","UnknownMethod","ParamsIsNotArray","InvalidMethodParams","wallet_requestPermissions_Empty","wallet_requestPermissions_Unknown","createMaskSDKChannel","createMaskSDKServer","api","mapError","produce","ProviderType","defer","EIP2255_wallet_getPermissions","getAllConnectedWallets","EIP2255PermissionsOfWallets","requests","EIP2255_wallet_requestPermissions","assertOrigin","method","random","MaskWallet","external_request","SelectWallet","getEIP2255PermissionDetail","grantEIP2255Permission","grantedWalletAddress","newData","draft","hasEthAccountsPermission","invoker","parentCapability","caveats","disconnectWalletFromOrigin","disconnectAllWalletsFromOrigin","disconnectAllOriginsConnectedFromWallet","internalWalletConnect","thisOrigin","getAllConnectedOrigins","connectedOrigins","deferred","selectMaskAccount","defaultAddress","resolveMaskAccount","CrossIsolationMessages","MAX_UNCONFIRMED_REQUESTS_SIZE","MAIN_RECORD_ID","requestSorter","z","getUnconfirmedRequests","chunk","topUnconfirmedRequest","updateUnconfirmedRequest","chunk_","requestsUpdated","hasRequest","RequestReadonly","SmartPayAccount","Web3Readonly","createJsonRpcResponse","ErrorEditor","EthereumMethodType","isValidAddress","PayloadEditor","signWithWallet","paymentToken","providerURL","pid","signableMessage","signableConfig","fromPayload","signer","ETH_SEND_TRANSACTION","MASK_REPLACE_TRANSACTION","sendTransaction","sendSignedTransaction","signTransaction","ETH_SIGN","PERSONAL_SIGN","signMessage","ETH_SIGN_TYPED_DATA","signTypedData","ETH_SIGN_TRANSACTION","MASK_DEPLOY","deploy","ETH_DECRYPT","ETH_GET_ENCRYPTION_PUBLIC_KEY","LegacyWalletRecordOutDB","erc20_token_whitelist","erc20_token_blacklist","erc721_token_whitelist","erc721_token_blacklist","erc1155_token_whitelist","erc1155_token_blacklist","BigNumber","fromHex","toHex","sortWallet","getAllWalletRecords","walletRecord","makePrivateKey","extendedPrivateKey","childKey","parseExtendedKey","walletPublicKey","walletPrivateKey","privateKeyValid","privateKeyInHex","privateKey_","privateKeyVerify","n","isZero","isLessThan","DEFAULT_LOCK_DURATION","getAutoLockerRecord","getAutoLockerDuration","duration","setAutoLockerTime","walletLockTimeUpdated","OnDemandWorker","__init","inactiveTimeToTerminate","init","watchUsage","clearInterval","lastUsed","terminate","min","use","onReady","Worker","cloneEvent","onTerminated","callback","removeEventListener","postMessage","onmessage","throws","onerror","onmessageerror","MessageEvent","ErrorEvent","KdfParamsInvalid","PasswordIncorrect","InvalidKeyIvLength","InvalidCiphertext","InvalidPrivateKey","InvalidPublicKey","InvalidMnemonic","InvalidSeed","InvalidDerivationPath","InvalidKeyStoreJSON","NotSupportedPublicKeyType","NotSupportedCurve","NotSupportedCipher","ErrorMessage","MWRequest","wasmResult","MWResponse","req","errorCode","importPrivateKey","importMnemonic","importJSON","createAccountOfCoinAtPath","exportPrivateKeyOfPath","exportMnemonic","exportKeyStoreJSONOfAddress","exportKeyStoreJSONOfPath","asyncIteratorToArray","WalletRecordOutDB","storedKeyInfo","StoredKeyType","Mnemonic","hasStoredKeyInfo","hasDerivationPath","getWallet","getWalletRequired","hasWallet","getWalletRecords","addWallet","updates","address_","walletsUpdated","updateWallet","latestDerivationPath","deleteWallet","resetAllWallets","last","sha3","toBuffer","ImportSource","Mask","MAX_DERIVE_COUNT","bumpDerivationPath","splitted","sanitizeWallet","setPassword","hasPasswordWithDefaultOne","verifyPassword","changePassword","resetPassword","setDefaultPassword","validatePassword","clearPassword","lockWallet","unlockWallet","setAutoLockTimer","createMnemonicWords","generateMnemonic","getPrimaryWalletByMnemonicId","getWalletPrimary","getTime","page","pageSize","oneTimePassword","StoredKey","created","coin","Coin","Ethereum","StoredKeyData","account","deriveWallet","defaultMnemonicId","masterPassword","INTERNAL_getMasterPasswordRequired","primaryWallet","derivedTimes","localWallet","exported","createWalletFromPrivateKey","generateNextDerivationAddress","generateAddressFromPrivateKey","renameWallet","name_","removeWallet","unverifiedPassword","verifyPasswordRequired","exportKeyStoreJSON","newPassword","addWalletFromMnemonicWords","addWalletFromPrivateKey","createWalletFromMnemonicWords","LocalGenerated","UserProvided","recoverWalletFromKeyStoreJSON","jsonPassword","keyStoreJsonPassword","generateAddressFromKeyStoreJSON","generateAddressFromMnemonicWords","LockStatus","currentMaskWalletLockStatusSettings","hasVerifiedPassword","LOCKED","walletLockStatusUpdated","UNLOCK","autoLockTimer","autoLockDuration","getDefaultWalletPassword","SECRET_ID","derivePBKDF2","deriveAES","createAES","wrapKey","unwrapKey","getIV","getSecret","hasSecret","hasSafeSecret","secret","isUnsafe","resetSecret","primaryKey","primaryKeyWrapped","encryptSecret","updateSecret","oldPassword","decryptSecret","validate","inMemoryPassword","INTERNAL_getMasterPassword","password_","INTERNAL_setPassword","validatePasswordRequired","cleanAvatarDB","anotherList","cleanProfileWithNoLinkedPersona","cleanRelationDB","profileIdentifier","cleanedList","expired","injectedScriptURL","fetchInjectContentScriptList","Sniffings","registerContentScripts","unregisterExistingScripts","prepareMainWorldScript","prepareContentScript","unregisterContentScripts","matches","is_firefox","allFrames","js","persistAcrossSessions","runAt","xrayScript","navigator","userAgent","ignoreInjectError","InjectContentScript","onCommittedListener","arg","frameId","webNavigation","onCommitted","pluginIDsSettings","ToBeListened","pluginIDSettings","listeners","startPluginWorker","createPluginHost","createSharedContext","createWorkerContext","def","getDatabaseStorage","PluginRuntime","PluginRunner","addPeerDependencies","isManifest","BackgroundPluginHost","hooks","allowLocalOverrides","HostStartPlugin","isLocal","manifest","fetchManifest","addNamespaceModule","registerBackupHandler","handler","contributes","instance","backupHandler","debug","taggedStorage","createTaggedStorage","background","rpc","rpcGenerator","bindRPC","imports","startService","rpcReExports","exportAllFrom","as","addReExportModule","hasRPC","hasRPCGenerator","rpcReExport","createRpcChannel","workerGenerator","createRpcGeneratorChannel","registerPlugin","createHostAPIs","hot","sym","Symbol","for","sandboxedPluginRuntime","host","__builtInPluginInfraBridgeCallback__","onPluginListUpdate","enableRequirement","supports","sites","experimentalMark","hotModuleReload","reload","startPlugin_bridged","openWelcome","welcome","onInstalled","connect","backupPassword","getItem","backupMethod","PersistentStorages","Settings","backupConfig","email","phone","cloudBackupAt","localBackupAt","cloudBackupMethod","removeItem","NetworkPluginID","MessageStateType","checkMessages","messages","pendingTasks","NOT_DEPEND","browserAction","setBadgeBackgroundColor","color","setBadgeText","watchTasks","Web3","createSubScope","PLUGIN_EVM","initializedPromise","subscription","subscribe","MutexStorage","tasks","locked","lock","unlock","shift","getStorage","run","stored","setStorage","contentScriptURL","frameIds","script","fetchInjectContentScriptList_raw","contentScripts","html","body","injectUserScriptMV2_raw","ignoredErrorMessages","startPluginGeneratorRPC","startPluginRPC","createManager","startDaemon","activated","startGeneratorService","DOMAIN_RPC","getPluginMessage","messageCenter","serialization","__workaround__replaceImplementationOfCreatePluginMessage__","newImpl","isEnvironment","sendLocalStack","isBackground","__workaround__replaceIsBackground__","getPluginRPCInternal","starter","entry","sendToBackgroundPage","cacheGenerator","getPluginRPC","getPluginRPCGenerator","startPluginRPCInternal","delegate","Appearance","light","dark","TradeProvider","UNISWAP_V2","ZRX","SUSHISWAP","QUICKSWAP","PANCAKESWAP","DODO","UNISWAP_V3","BANCOR","OPENOCEAN","WANNASWAP","TRISOLARIS","TRADERJOE","PANGOLIN","MDEX","ARTHSWAP","VERSA","ASTAREXCHANGE","YUMISWAP","LanguageOptions","__auto__","enUS","zhCN","zhTW","koKR","jaJP","SupportedLanguages","ValueRefJSON","ValueRefWithReady","legacySettings_set","legacySettings_broadcast","setupLegacySettingsAtNonBackground","setupValueRef","duringInitialValueSet","duringBroadcastSet","nowReady","finally","createNSSettingsJSON","ns","createGlobalSettings","comparer","createBulkSettings","settingsKey","defaultValue","__proto__","legacySettings_bulkDiscoverNS","Proxy","isEqual","updateLanguage","ExtensionSite","SwitchLogoType","OpenSea","Localhost","App","Popup","Dashboard","INIT","userGuideFinished","sayHelloShowed","userPinExtension","dismissVerifyNextID","decentralizedSearchSettings","pluginMinimalModeReversed","Default","currentPersonaIdentifier_raw","lng","switchLogoSettings","New","NextIDPlatform","SOCIAL_MEDIA_NAME","NEXT_ID_PLATFORM_SOCIAL_MEDIA_MAP","SOCIAL_MEDIA_SUPPORTING_NEXT_DOT_ID","MEDIA_VIEWER_URL","MAX_WALLET_LIMIT","NUMERIC_INPUT_REGEXP_PATTERN","UNIT_TEST_ADDRESS","UNIT_TEST_ERC20_ADDRESS","EMPTY_LIST","freeze","EMPTY_OBJECT","DEFAULT_PLUGIN_PUBLISHER","WeakMap","localImpl","setPrototypeOf","toBase64","ToBase64","ToHex","FromHex","getSubscriptionCurrentValue","getSubscription","retries","createReader","createReaders","fill","createConstantSubscription","createSubscriptionFromAsync","createSubscriptionFromAsyncSuspense","trigger","getEventTarget","setter","listen","sub","undo","EVENT","mapSubscription","mergeSubscription","subscriptions","removeListeners","createSubscriptionFromValueRef","ref","SubscriptionDebug","defineProperty","i18n","Detector","debounce","i18NextInstance","isInitialized","keySeparator","interpolation","escapeValue","contextSeparator","fallbackLng","defaultNS","nonExplicitSupportedLngs","detection","order","react","bindI18n","bindI18nStore","services","languageDetector","detect","changeLanguage","interpolationLike","getInterpolations","_updater","updater","language","getResourceBundle","addResourceBundle","Emitter","ALL_EVENTS","tick","ObservableWeakMap","ObservableMap","_asValues","asValues","ObservableSet","ProofType","Persona","EOA","DashboardRoutes","Setup","Welcome","SignUpPersona","RecoveryPersona","SignUpPersonaMnemonic","SignUpPersonaOnboarding","LocalBackup","CloudBackup","CloudBackupPreview","SignUp","SignIn","PrivacyPolicy","CreateMaskWallet","CreateMaskWalletForm","RecoveryMaskWallet","CreateMaskWalletMnemonic","AddDeriveWallet","SignUpMaskWalletOnboarding","PopupModalRoutes","ChooseCurrency","ChooseNetwork","SwitchWallet","ConnectSocialAccount","SelectProvider","ConnectProvider","SwitchPersona","PersonaSettings","PersonaRename","SetBackupPassword","verifyBackupPassword","WalletAccount","SelectLanguage","SelectAppearance","SupportedSitesModal","ChangeBackupPassword","Root","WalletStartUp","WalletSettings","WalletRename","DeleteWallet","CreateWallet","DeriveWallet","BackupWallet","AddToken","GasSetting","TokenDetail","TransactionDetail","CollectibleDetail","ContractInteraction","ConfirmTransaction","ResetWallet","Transfer","Contacts","SetPaymentPassword","ReplaceTransaction","NetworkManagement","EditNetwork","AddNetwork","Receive","ExportWalletPrivateKey","ConnectedSites","Logout","SocialAccounts","AccountDetail","ConnectedWallets","ConnectWallet","PermissionAwareRedirect","SignRequest","Swap","VerifyWallet","ChangeOwner","Friends","FriendsDetail","WalletConnect","ExportPrivateKey","PersonaAvatarSetting","TransactionStatusType","CHAINBASE_API_URL","fetchCachedJSON","fetchFromChainbase","toTransaction","transaction_hash","normalizeTxStatus","timestamp","block_timestamp","from_address","to","to_address","assets","blockNumber","block_number","nonce","FAILED","SUCCEED","evm","flow","solana","initWallet","PLUGIN_FLOW","PLUGIN_SOLANA","getRegisteredWeb3Providers","provider","getRegisteredWeb3Networks","getRegisteredWeb3Chains","chain","getAllPluginsWeb3State","getActivatedPluginWeb3State","Web3Accounts","Accounts_","_metamask_eth_sig_util","SignType","Message","personalSign","TypedData","SignTypedDataVersion","V4","Transaction","rawTransaction","AddressBook","RiskWarning","Token","NameService","Provider","TransactionFormatter","TransactionWatcher","IdentityService","BalanceNotifier","BlockNumberNotifier","Network","Web3StateRef","createEVMState","Provider_","new","Transaction_","transactions","FlowWeb3StateRef","createFlowState","SolanaWeb3StateRef","createSolanaState","SmartPayAccountAPI","SmartPayFunderAPI","DSearchAPI","MulticallAPI","RedPacketAPI","SmartPayOwnerAPI","AirdropAPI","ContractAPI","ContractReadonlyAPI","ConnectionReadonlyAPI","RequestAPI","RequestReadonlyAPI","AllHubAPI","AllConnectionAPI","AllOthersAPI","Web3State","Lido","DSearch","CoinMarketCap","CryptoScamDB","Multicall","Lens","RedPacket","TheGraphRedPacket","SimpleHashEVM","SPAM_SCORE","SnapshotSearch","Snapshot","FlowProviders","SolanaProviders","BaseContractWalletProvider","HubAll","Web3All","OthersAll","ChainResolver","ExplorerResolver","ProviderResolver","NetworkResolver","Contract","ContractReadonly","Web3Storage","Request","Hub","Others","FlowWeb3","FlowHub","FlowOthers","SolanaWeb3","SolanaHub","SolanaOthers","DepositPaymaster","ContractWallet","Create2Factory","UserTransaction","NextIDStorageProvider","Web3Bio","GoPlusLabs","CoinGeckoTrending","R2D2TokenList","ENS","DeBankHistory","NFTScanTrending_EVM","NFTScanTrending_Solana","NFTScanNonFungibleTokenEVM","NFTScanNonFungibleTokenSolana","ChainbaseHistory","Zerion","ZerionGas","ZerionNonFungibleToken","ZerionTrending","Fuse","FuseCoin","FuseNonFungibleCollection","SmartPayFunder","RSS3","Airdrop","Firefly","FiatCurrencyRate","Calendar","NFTSpam","getNextFetchers","blob","isUndefined","trimEnd","ZERO","ONE","toZero","m","n_","abs","isLessThanOrEqualTo","isOne","isEqualTo","isGreaterThan","isGreaterThanOrEqualTo","isGte","isLte","isPositive","multipliedBy","plus","minus","pow10","pow","scale10","shiftedBy","rightShift","leftShift","dividedBy","toNumber","toFixed","decimalPlaces","trimZero","digit","p1","addThousandSeparators","num","createLookupTableResolver","SocialAddressType","CurrencyType","SourceType","resolveSocialAddressLink","Address","ARBID","SPACE_ID","Crossbell","SOL","NEXT_ID","CyberConnect","Leaderboard","Sybil","TwitterBlue","resolveSourceTypeName","DeBank","UniswapInfo","Rarible","LooksRare","NFTScan","Zora","Gem","Alchemy_EVM","Alchemy_FLOW","RaritySniper","TraitSniper","Chainbase","X2Y2","MagicEden","Element","Flow","Solsea","Solanart","R2D2","Rabby","CoinGecko","CF","GoPlus","OKX","Uniswap","NFTX","Etherscan","CryptoPunks","SimpleHash","Approval","providerType","resolveCurrencyName","BTC","ETH","NATIVE","USD","CNY","JPY","HKD","EUR","resolveCurrencyFullName","resolveNetworkWalletName","resolveNextIDPlatformWalletName","pluginId","resolveNextID_NetworkPluginID","NextID","GitHub","Keybase","LENS","REDDIT","SYBIL","EthLeaderboard","SpaceId","Farcaster","Bit","Unstoppable","resolveNextIDPlatformName","resolveNextIDPlatformLink","networkPlatform","MATCH_IPFS_CID_RAW","MATCH_IPFS_DATA_RE","MATCH_IPFS_CID_RE","RegExp","MATCH_IPFS_CID_STRICT_RE","MATCH_IPFS_CID_AT_STARTS_RE","MATCH_IPFS_CID_AND_PATHNAME_RE","MATCH_LOCAL_RESOURCE_URL_RE","CORS_HOST","IPFS_GATEWAY_HOST","isIPFS_CID","cid","isIPFS_Resource","str","isArweaveResource","isLocaleResource","resolveLocalURL","trimQuery","resolveIPFS_CID","resolveIPFS_URL","cidOrURL","decodeURIComponent","resolveArweaveURL","resolveCrossOriginURL","resolveResourceURL","OrderSide","Buy","Sell","GasOptionType","FAST","NORMAL","SLOW","CUSTOM","TokenType","Fungible","NonFungible","SearchResultType","Domain","FungibleToken","NonFungibleToken","NonFungibleCollection","CollectionListByTwitterHandler","DAO","ActivityType","Mint","Sale","Offer","Burn","List","CancelOffer","APPROVED","DENIED","TransactionReceiptStatusType","TransactionDescriptorType","TRANSFER","INTERACTION","DEPLOYMENT","CANCEL","RETRY","FontSize","X_Small","Small","Normal","Large","X_Large","ThemeMode","Light","Dark","ThemeColor","Blue","Gitcoin","OpenOcean","NftRedPacket","Trader","Trending","MaskBox","RPC","TokenList","TokenAssetBaseURL","ArtBlocks","Aave","Pet","SmartPay","Arb","LensProfile","transformAllHook","transformHook","transformAll","transform","transformAllFromJSON","transformFromJSON","getEnumAsArray","getEnvConstants","WEB3_CONSTANTS_RPC","ChainIdList","getEthereumConstant","getEthereumConstants","useEthereumConstant","useEthereumConstants","getDeBankConstant","getDeBankConstants","useDeBankConstant","useDeBankConstants","getCoinGeckoConstant","getCoinGeckoConstants","useCoinGeckoConstant","useCoinGeckoConstants","getGitcoinConstant","getGitcoinConstants","useGitcoinConstant","useGitcoinConstants","getOpenOceanConstant","getOpenOceanConstants","useOpenOceanConstant","useOpenOceanConstants","getRedPacketConstant","getRedPacketConstants","useRedPacketConstant","useRedPacketConstants","getTokenConstant","getTokenConstants","useTokenConstant","useTokenConstants","getTraderConstant","getTraderConstants","useTraderConstant","useTraderConstants","getTrendingConstant","getTrendingConstants","useTrendingConstant","useTrendingConstants","getMaskBoxConstant","getMaskBoxConstants","useMaskBoxConstant","useMaskBoxConstants","getRPCConstants","getRPCConstant","useRPCConstant","useRPCConstants","getEtherscanConstant","getEtherscanConstants","useEtherscanConstant","useEtherscanConstants","getTokenListConstant","getTokenListConstants","useTokenListConstant","useTokenListConstants","getTokenAssetBaseURLConstant","getTokenAssetBaseURLConstants","useTokenAssetBaseURLConstant","useTokenAssetBaseURLConstants","getArtBlocksConstant","getArtBlocksConstants","useArtBlocksConstant","useArtBlocksConstants","getNftRedPacketConstant","getNftRedPacketConstants","useNftRedPacketConstant","useNftRedPacketConstants","getAaveConstant","getAaveConstants","useAaveConstant","useAaveConstants","getLidoConstant","getLidoConstants","useLidoConstant","useLidoConstants","getPetConstant","getPetConstants","usePetConstant","usePetConstants","getSmartPayConstant","getSmartPayConstants","useSmartPayConstant","useSmartPayConstants","getENSConstants","getArbConstants","getSpaceIdConstants","getLensProfileConstants","getGoPlusLabsConstants","getLensConstant","getLensConstants","useLensConstant","useLensConstants","getCryptoPunksConstants","getAirdropClaimersConstant","getAirdropClaimersConstants","useAirdropClaimersConstant","useAirdropClaimersConstants","formatDateTime","SchemaType","checksumAddress","isEnsSubdomain","isValidDomain","formatAmount","amount","decimals","formatTimestamp","formatTrait","trait","displayType","formatHash","formatSchemaType","Native","ERC20","ERC721","ERC1155","SBT","formatTokenId","tokenId","size_","isHex","prefix","head","tail","formatDomainName","invalidIgnore","mainName","suffix","formatKeccakHash","formatNumberString","formatWeiToGwei","formatWeiToEther","formatGweiToWei","integerValue","formatEtherToGwei","formatGas","gwei","lt","formatEtherToWei","formatGweiToEther","readonlyMethodType","ETH_GET_CODE","ETH_GAS_PRICE","ETH_BLOCK_NUMBER","ETH_GET_BALANCE","ETH_GET_BLOCK_BY_NUMBER","ETH_GET_BLOCK_BY_HASH","ETH_GET_TRANSACTION_BY_HASH","ETH_GET_TRANSACTION_RECEIPT","ETH_GET_TRANSACTION_COUNT","ETH_GET_FILTER_CHANGES","ETH_NEW_PENDING_TRANSACTION_FILTER","ETH_ESTIMATE_GAS","ETH_CALL","ETH_GET_LOGS","isReadonlyMethodType"],"sourceRoot":"","x_google_ignoreList":[189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,219,220,221,222,223,224,225]}