{"version":3,"file":"bundled/chunk.9043.js","mappings":"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","sources":["webpack://mask-network/./packages/web3-shared/base/src/helpers/generateNewWalletName.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/CreateWallet/Derive.tsx"],"sourcesContent":["import { max } from 'lodash-es'\nimport type { Wallet } from '@masknet/shared-base'\n\nexport function generateNewWalletName(wallets: Wallet[], index = 0, preIndex?: number) {\n    const indexList = wallets.filter((x) => !x.owner).map((x) => x.name.split('Wallet ')[1])\n    const maxIndex = max(indexList.filter((x) => x && !Number.isNaN(x)).map(Number)) ?? 0\n    const preIndexNotExists = !indexList.some((x) => Number(x) === preIndex)\n    const finalIndex = preIndex && (preIndex > maxIndex || preIndexNotExists) ? preIndex : maxIndex + index + 1\n    return `Wallet ${finalIndex}`\n}\n","import Services from '#services'\nimport { Icons } from '@masknet/icons'\nimport { defer, timeout } from '@masknet/kit'\nimport { EMPTY_LIST, NetworkPluginID } from '@masknet/shared-base'\nimport { queryClient } from '@masknet/shared-base-ui'\nimport { ActionButton, makeStyles } from '@masknet/theme'\nimport { useWallet, useWeb3State } from '@masknet/web3-hooks-base'\nimport { Providers, Web3 } from '@masknet/web3-providers'\nimport { generateNewWalletName, isSameAddress } from '@masknet/web3-shared-base'\nimport { ProviderType, formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { Box, List, ListItem, Tooltip, Typography } from '@mui/material'\nimport { memo, useEffect, useRef } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useAsyncFn } from 'react-use'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { WalletBalance } from '../../../components/index.js'\nimport { useTitle } from '../../../hooks/index.js'\nimport { useWalletGroup } from '../../../hooks/useWalletGroup.js'\nimport { WalletRenameModal } from '../../../modals/modals.js'\nimport { DeriveStateContext } from './context.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    content: {\n        padding: theme.spacing(0, 2, 2),\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n    },\n    list: {\n        flexGrow: 1,\n        overflow: 'auto',\n    },\n    wallet: {\n        padding: theme.spacing(1),\n        borderRadius: 8,\n        '&:hover': {\n            backgroundColor: theme.palette.maskColor.bg,\n        },\n        position: 'relative',\n        paddingLeft: 44,\n        marginBottom: theme.spacing(2),\n    },\n    indicator: {\n        position: 'absolute',\n        left: 8,\n        top: 0,\n        bottom: 0,\n        margin: 'auto',\n    },\n    walletName: {\n        fontWeight: 700,\n        fontSize: 12,\n    },\n    walletAddress: {\n        fontWeight: 400,\n        fontSize: 12,\n    },\n    balance: {\n        fontSize: 12,\n        fontWeight: 400,\n        lineHeight: '16px',\n        color: theme.palette.maskColor.second,\n    },\n    editButton: {\n        cursor: 'pointer',\n        marginLeft: theme.spacing(2),\n    },\n}))\n\nasync function pollResult(address: string) {\n    const subscription = Providers[ProviderType.MaskWallet].subscription.wallets\n    if (subscription.getCurrentValue().find((x) => isSameAddress(x.address, address))) return\n    const [promise, resolve] = defer()\n    const unsubscribe = subscription.subscribe(() => {\n        if (subscription.getCurrentValue().find((x) => isSameAddress(x.address, address))) resolve(true)\n    })\n    return timeout(promise, 10_000, 'It takes too long to create a wallet. You might try again.').finally(unsubscribe)\n}\n\nconst DeriveWallet = memo(function DeriveWallet() {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const mnemonicId = useLocation().state?.mnemonicId as string\n\n    const walletGroup = useWalletGroup()\n    const wallets = walletGroup?.groups[mnemonicId] ?? EMPTY_LIST\n\n    const currentWallet = useWallet()\n\n    const { NameService } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n\n    const [isDeriving, setIsDeriving] = DeriveStateContext.useContainer()\n    const isDerivingRef = useRef(isDeriving)\n\n    useEffect(() => {\n        isDerivingRef.current = isDeriving\n    })\n    const [{ loading: creating }, create] = useAsyncFn(async () => {\n        if (isDerivingRef.current) return\n        setIsDeriving(true)\n        try {\n            const nextWallet = await Services.Wallet.generateNextDerivationAddress()\n            const ens = await NameService?.safeReverse?.(nextWallet, true)\n            const allWallets = Providers[ProviderType.MaskWallet].subscription.wallets.getCurrentValue()\n            queryClient.invalidateQueries(['@@mask-wallets'])\n            const name = ens || generateNewWalletName(allWallets)\n            const address = await Services.Wallet.deriveWallet(name, mnemonicId)\n            await pollResult(address)\n            await Web3.connect({\n                providerType: ProviderType.MaskWallet,\n                account: address,\n            })\n        } catch {}\n        setIsDeriving(false)\n    }, [mnemonicId])\n\n    useTitle(t.popups_add_wallet())\n\n    const loading = creating || isDeriving\n\n    return (\n        <div className={classes.content}>\n            <List dense className={classes.list} data-hide-scrollbar>\n                {wallets.map((wallet) => (\n                    <ListItem key={wallet.address} className={classes.wallet}>\n                        {isSameAddress(wallet.address, currentWallet?.address) ? (\n                            <Icons.CheckCircle className={classes.indicator} size={20} />\n                        ) : null}\n                        <Icons.MaskBlue size={24} />\n                        <Box flexGrow={1} ml={1}>\n                            <Typography className={classes.walletName}>{wallet.name}</Typography>\n                            <Box display=\"flex\" flexDirection=\"row\">\n                                <Tooltip title={wallet.address} className={classes.walletAddress}>\n                                    <Typography mr=\"auto\">{formatEthereumAddress(wallet.address, 4)}</Typography>\n                                </Tooltip>\n                                <WalletBalance\n                                    className={classes.balance}\n                                    skeletonWidth={60}\n                                    account={wallet.address}\n                                />\n                            </Box>\n                        </Box>\n                        <Icons.Edit2\n                            size={20}\n                            className={classes.editButton}\n                            onClick={() => {\n                                WalletRenameModal.open({\n                                    wallet,\n                                    title: t.rename(),\n                                })\n                            }}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n            <ActionButton loading={loading} fullWidth disabled={loading} onClick={create}>\n                {t.add()}\n            </ActionButton>\n        </div>\n    )\n})\n\nexport default DeriveWallet\n"],"names":["max","generateNewWalletName","wallets","index","preIndex","indexList","filter","x","owner","map","name","split","maxIndex","Number","isNaN","preIndexNotExists","some","finalIndex","Services","Icons","defer","timeout","EMPTY_LIST","NetworkPluginID","queryClient","ActionButton","makeStyles","useWallet","useWeb3State","Providers","Web3","isSameAddress","ProviderType","formatEthereumAddress","Box","List","ListItem","Tooltip","Typography","memo","useEffect","useRef","useLocation","useAsyncFn","useMaskSharedTrans","WalletBalance","useTitle","useWalletGroup","WalletRenameModal","DeriveStateContext","useStyles","theme","content","padding","spacing","flex","display","flexDirection","overflow","list","flexGrow","wallet","borderRadius","backgroundColor","palette","maskColor","bg","position","paddingLeft","marginBottom","indicator","left","top","bottom","margin","walletName","fontWeight","fontSize","walletAddress","balance","lineHeight","color","second","editButton","cursor","marginLeft","pollResult","address","subscription","MaskWallet","getCurrentValue","find","promise","resolve","unsubscribe","subscribe","finally","DeriveWallet","t","classes","mnemonicId","state","walletGroup","groups","currentWallet","NameService","PLUGIN_EVM","isDeriving","setIsDeriving","useContainer","isDerivingRef","current","loading","creating","create","nextWallet","Wallet","generateNextDerivationAddress","ens","safeReverse","allWallets","invalidateQueries","deriveWallet","connect","providerType","account","popups_add_wallet","div","className","dense","data-hide-scrollbar","CheckCircle","size","MaskBlue","ml","title","mr","skeletonWidth","Edit2","onClick","open","rename","fullWidth","disabled","add"],"sourceRoot":"","x_google_ignoreList":[]}