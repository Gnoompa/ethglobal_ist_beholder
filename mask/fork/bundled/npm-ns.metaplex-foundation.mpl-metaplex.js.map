{"version":3,"file":"bundled/npm-ns.metaplex-foundation.mpl-metaplex.js","mappings":";;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB,GAAG,mBAAmB;AAC7C,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;;;;;;;;AC9Ba;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB,GAAG,4BAA4B,GAAG,6BAA6B,GAAG,4BAA4B;AACpH,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,gCAAgC,mBAAO,CAAC,KAAO;AAC/C,+BAA+B,mBAAO,CAAC,KAAM;AAC7C,8BAA8B,mBAAO,CAAC,KAAuB;AAC7D,0BAA0B,mBAAO,CAAC,KAAoB;AACtD,iBAAiB,mBAAO,CAAC,IAAQ;AACjC,sBAAsB,mBAAO,CAAC,KAAkC;AAChE,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,sBAAsB;;;;;;;;ACxJT;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qCAAqC;AACrC,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,gCAAgC,mBAAO,CAAC,KAAO;AAC/C,iBAAiB,mBAAO,CAAC,IAAQ;AACjC,0BAA0B,mBAAO,CAAC,KAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;;;;;;;;AC/Da;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B,GAAG,4BAA4B;AAC1D,gCAAgC,mBAAO,CAAC,KAAO;AAC/C,+BAA+B,mBAAO,CAAC,KAAM;AAC7C,0BAA0B,mBAAO,CAAC,KAAoB;AACtD,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;;;;;;;AC9Cd;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB,GAAG,wBAAwB;AAC/C,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,+BAA+B,mBAAO,CAAC,KAAM;AAC7C,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,0BAA0B,mBAAO,CAAC,KAAoB;AACtD,iBAAiB,mBAAO,CAAC,IAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,oBAAoB;;;;;;;;ACrEP;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B,GAAG,+BAA+B;AAC7D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,0BAA0B,mBAAO,CAAC,KAAoB;AACtD,iBAAiB,mBAAO,CAAC,IAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B;;;;;;;;AC1Dd;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B,GAAG,4BAA4B,GAAG,yBAAyB,GAAG,yBAAyB;AAClH,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,gCAAgC,mBAAO,CAAC,KAAO;AAC/C,+BAA+B,mBAAO,CAAC,KAAM;AAC7C,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,0BAA0B,mBAAO,CAAC,KAAoB;AACtD,iBAAiB,mBAAO,CAAC,IAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzHa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,GAAG,iBAAiB;AACjC,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,0BAA0B,mBAAO,CAAC,KAAoB;AACtD,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,+BAA+B,mBAAO,CAAC,KAAM;AAC7C,6BAA6B,mBAAO,CAAC,KAAsB;AAC3D,yBAAyB,mBAAO,CAAC,IAAkB;AACnD,iBAAiB,mBAAO,CAAC,IAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;;;;;;;;ACnGA;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,uBAAuB;AAC7C,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,iBAAiB,mBAAO,CAAC,IAAQ;AACjC,0BAA0B,mBAAO,CAAC,KAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,sBAAsB,gCAAgC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB;;;;;;;;ACvDN;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B,GAAG,8BAA8B;AAC3D,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,0BAA0B,mBAAO,CAAC,KAAoB;AACtD,iBAAiB,mBAAO,CAAC,IAAQ;AACjC,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0BAA0B;;;;;;;;ACzDb;AACb;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,mBAAO,CAAC,IAA2B;AAChD,aAAa,mBAAO,CAAC,KAAgC;AACrD,aAAa,mBAAO,CAAC,KAAyB;AAC9C,aAAa,mBAAO,CAAC,KAAgC;AACrD,aAAa,mBAAO,CAAC,KAAgC;AACrD,aAAa,mBAAO,CAAC,KAAkB;AACvC,aAAa,mBAAO,CAAC,KAAwB;AAC7C,aAAa,mBAAO,CAAC,KAA+B;AACpD,aAAa,mBAAO,CAAC,KAA0C;AAC/D,aAAa,mBAAO,CAAC,KAAmB;AACxC,aAAa,mBAAO,CAAC,KAAgB;;;;;;;;ACtBxB;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,GAAG,oBAAoB;AACvC,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,sBAAsB,mBAAO,CAAC,KAAkC;AAChE,oBAAoB,mBAAO,CAAC,KAAmB;AAC/C,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,0BAA0B,mBAAO,CAAC,KAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB,uHAAuH;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;;;;;;;;AChGH;AACb;AACA,6CAA6C;AAC7C;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB,GAAG,sBAAsB;AAC3C,gCAAgC,mBAAO,CAAC,KAAO;AAC/C,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,sBAAsB,mBAAO,CAAC,KAAkC;AAChE,0BAA0B,mBAAO,CAAC,KAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB,0DAA0D;AAC3E;AACA;AACA;AACA;AACA,gBAAgB,2FAA2F;AAC3G,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB;;;;;;;;ACxEL;AACb;AACA,6CAA6C;AAC7C;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B,GAAG,gCAAgC;AAC/D,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,gCAAgC,mBAAO,CAAC,KAAO;AAC/C,0BAA0B,mBAAO,CAAC,KAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B,gBAAgB,yIAAyI;AACzJ,0DAA0D,mCAAmC;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B;;;;;;;;AC5Ff;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,sDAAsD,GAAG,wBAAwB,GAAG,qBAAqB;AAC7H,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,oBAAoB,mBAAO,CAAC,KAAmB;AAC/C,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,6BAA6B,mBAAO,CAAC,IAAyC;AAC9E,0BAA0B,mBAAO,CAAC,KAAsC;AACxE,0BAA0B,mBAAO,CAAC,KAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B,gBAAgB,6RAA6R;AAC7S;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB;;;;;;;;AC1KJ;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mCAAmC,GAAG,uCAAuC;AAC7E,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,oBAAoB,mBAAO,CAAC,KAAmB;AAC/C,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,6BAA6B,mBAAO,CAAC,IAAyC;AAC9E,0BAA0B,mBAAO,CAAC,KAAsC;AACxE,0BAA0B,mBAAO,CAAC,KAAoB;AACtD,oBAAoB,mBAAO,CAAC,KAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B,gBAAgB,+PAA+P;AAC/Q;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mCAAmC;;;;;;;;ACrJtB;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gCAAgC,GAAG,oCAAoC;AACvE,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,6BAA6B,mBAAO,CAAC,IAAyC;AAC9E,0BAA0B,mBAAO,CAAC,KAAsC;AACxE,oBAAoB,mBAAO,CAAC,KAAmB;AAC/C,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,0BAA0B,mBAAO,CAAC,KAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B,gBAAgB,6UAA6U;AAC7V,8DAA8D,UAAU;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gCAAgC;;;;;;;;ACrLnB;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B,GAAG,+BAA+B;AAC7D,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,0BAA0B,mBAAO,CAAC,KAAsC;AACxE,6BAA6B,mBAAO,CAAC,IAAyC;AAC9E,oBAAoB,mBAAO,CAAC,KAAmB;AAC/C,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,0BAA0B,mBAAO,CAAC,KAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B,gBAAgB,8RAA8R;AAC9S,yDAAyD,yBAAyB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B;;;;;;;;ACvKd;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,GAAG,oBAAoB;AACvC,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,oBAAoB,mBAAO,CAAC,KAAmB;AAC/C,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,6BAA6B,mBAAO,CAAC,IAAyC;AAC9E,0BAA0B,mBAAO,CAAC,KAAsC;AACxE,sBAAsB,mBAAO,CAAC,KAAkC;AAChE,0BAA0B,mBAAO,CAAC,KAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B,gBAAgB,yBAAyB;AACzC,8CAA8C,kBAAkB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kBAAkB,0EAA0E;AAC5F;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;;;;;;;;AC9EH;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB,GAAG,sBAAsB;AAC3C,oBAAoB,mBAAO,CAAC,KAAmB;AAC/C,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,0BAA0B,mBAAO,CAAC,KAAsC;AACxE,6BAA6B,mBAAO,CAAC,IAAyC;AAC9E,sBAAsB,mBAAO,CAAC,KAAkC;AAChE,0BAA0B,mBAAO,CAAC,KAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB,gCAAgC;AACtD;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B,gBAAgB,8CAA8C;AAC9D,gDAAgD,+BAA+B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kBAAkB,0EAA0E;AAC5F;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB;;;;;;;;ACpFL;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,6BAA6B,GAAG,iCAAiC;AACjE,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,0BAA0B,mBAAO,CAAC,KAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B,gBAAgB,0DAA0D;AAC1E,2DAA2D,WAAW;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6BAA6B;;;;;;;;ACpEhB;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB,GAAG,wBAAwB;AAC/C,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,sBAAsB,mBAAO,CAAC,KAAkC;AAChE,0BAA0B,mBAAO,CAAC,KAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAA0D;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;;;;;;;;AC5DP;AACb;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,mBAAO,CAAC,KAAY;AACjC,aAAa,mBAAO,CAAC,KAAc;AACnC,aAAa,mBAAO,CAAC,KAAwB;AAC7C,aAAa,mBAAO,CAAC,KAAa;AAClC,aAAa,mBAAO,CAAC,KAA+B;AACpD,aAAa,mBAAO,CAAC,KAAuB;AAC5C,aAAa,mBAAO,CAAC,KAAY;AACjC,aAAa,mBAAO,CAAC,KAAc;AACnC,aAAa,mBAAO,CAAC,KAAyB;AAC9C,aAAa,mBAAO,CAAC,IAAgB;AACrC,aAAa,mBAAO,CAAC,KAA4B","sources":["webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/MetaplexProgram.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/accounts/AuctionManager.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/accounts/AuctionWinnerTokenTypeTracker.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/accounts/BidRedemptionTicket.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/accounts/PayoutTicket.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/accounts/PrizeTrackingTicket.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/accounts/SafetyDepositConfig.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/accounts/Store.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/accounts/StoreConfig.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/accounts/WhitelistedCreator.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/mpl-metaplex.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/transactions/ClaimBid.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/transactions/EndAuction.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/transactions/InitAuctionManagerV2.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/transactions/RedeemBid.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/transactions/RedeemFullRightsTransferBid.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/transactions/RedeemParticipationBidV3.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/transactions/RedeemPrintingV2Bid.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/transactions/SetStore.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/transactions/SetStoreV2.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/transactions/SetWhitelistedCreator.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/transactions/StartAuction.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-metaplex@0.0.5/node_modules/@metaplex-foundation/mpl-metaplex/dist/src/transactions/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MetaplexProgram = exports.MetaplexKey = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nvar MetaplexKey;\n(function (MetaplexKey) {\n    MetaplexKey[MetaplexKey[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    MetaplexKey[MetaplexKey[\"OriginalAuthorityLookupV1\"] = 1] = \"OriginalAuthorityLookupV1\";\n    MetaplexKey[MetaplexKey[\"BidRedemptionTicketV1\"] = 2] = \"BidRedemptionTicketV1\";\n    MetaplexKey[MetaplexKey[\"StoreV1\"] = 3] = \"StoreV1\";\n    MetaplexKey[MetaplexKey[\"WhitelistedCreatorV1\"] = 4] = \"WhitelistedCreatorV1\";\n    MetaplexKey[MetaplexKey[\"PayoutTicketV1\"] = 5] = \"PayoutTicketV1\";\n    MetaplexKey[MetaplexKey[\"SafetyDepositValidationTicketV1\"] = 6] = \"SafetyDepositValidationTicketV1\";\n    MetaplexKey[MetaplexKey[\"AuctionManagerV1\"] = 7] = \"AuctionManagerV1\";\n    MetaplexKey[MetaplexKey[\"PrizeTrackingTicketV1\"] = 8] = \"PrizeTrackingTicketV1\";\n    MetaplexKey[MetaplexKey[\"SafetyDepositConfigV1\"] = 9] = \"SafetyDepositConfigV1\";\n    MetaplexKey[MetaplexKey[\"AuctionManagerV2\"] = 10] = \"AuctionManagerV2\";\n    MetaplexKey[MetaplexKey[\"BidRedemptionTicketV2\"] = 11] = \"BidRedemptionTicketV2\";\n    MetaplexKey[MetaplexKey[\"AuctionWinnerTokenTypeTrackerV1\"] = 12] = \"AuctionWinnerTokenTypeTrackerV1\";\n    MetaplexKey[MetaplexKey[\"StoreIndexerV1\"] = 13] = \"StoreIndexerV1\";\n    MetaplexKey[MetaplexKey[\"AuctionCacheV1\"] = 14] = \"AuctionCacheV1\";\n    MetaplexKey[MetaplexKey[\"StoreConfigV1\"] = 15] = \"StoreConfigV1\";\n})(MetaplexKey = exports.MetaplexKey || (exports.MetaplexKey = {}));\nclass MetaplexProgram extends mpl_core_1.Program {\n}\nexports.MetaplexProgram = MetaplexProgram;\nMetaplexProgram.PREFIX = 'metaplex';\nMetaplexProgram.CONFIG = 'config';\nMetaplexProgram.TOTALS = 'totals';\nMetaplexProgram.PUBKEY = new web3_js_1.PublicKey(mpl_core_1.config.programs.metaplex);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuctionManager = exports.AuctionManagerV2Data = exports.AuctionManagerStateV2 = exports.AuctionManagerStatus = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst BidRedemptionTicket_1 = require(\"./BidRedemptionTicket\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nconst buffer_1 = require(\"buffer\");\nconst mpl_auction_1 = require(\"@metaplex-foundation/mpl-auction\");\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nvar AuctionManagerStatus;\n(function (AuctionManagerStatus) {\n    AuctionManagerStatus[AuctionManagerStatus[\"Initialized\"] = 0] = \"Initialized\";\n    AuctionManagerStatus[AuctionManagerStatus[\"Validated\"] = 1] = \"Validated\";\n    AuctionManagerStatus[AuctionManagerStatus[\"Running\"] = 2] = \"Running\";\n    AuctionManagerStatus[AuctionManagerStatus[\"Disbursing\"] = 3] = \"Disbursing\";\n    AuctionManagerStatus[AuctionManagerStatus[\"Finished\"] = 4] = \"Finished\";\n})(AuctionManagerStatus = exports.AuctionManagerStatus || (exports.AuctionManagerStatus = {}));\nclass AuctionManagerStateV2 extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.status = AuctionManagerStatus.Initialized;\n        this.safetyConfigItemsValidated = new bn_js_1.default(0);\n        this.bidsPushedToAcceptPayment = new bn_js_1.default(0);\n        this.hasParticipation = false;\n    }\n}\nexports.AuctionManagerStateV2 = AuctionManagerStateV2;\n_a = AuctionManagerStateV2;\nAuctionManagerStateV2.SCHEMA = _a.struct([\n    ['status', 'u8'],\n    ['safetyConfigItemsValidated', 'u64'],\n    ['bidsPushedToAcceptPayment', 'u64'],\n    ['hasParticipation', 'u8'],\n]);\nclass AuctionManagerV2Data extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = MetaplexProgram_1.MetaplexKey.AuctionManagerV2;\n    }\n}\nexports.AuctionManagerV2Data = AuctionManagerV2Data;\n_b = AuctionManagerV2Data;\nAuctionManagerV2Data.SCHEMA = new Map([\n    ...AuctionManagerStateV2.SCHEMA,\n    ..._b.struct([\n        ['key', 'u8'],\n        ['store', 'pubkeyAsString'],\n        ['authority', 'pubkeyAsString'],\n        ['auction', 'pubkeyAsString'],\n        ['vault', 'pubkeyAsString'],\n        ['acceptPayment', 'pubkeyAsString'],\n        ['state', AuctionManagerStateV2],\n    ]),\n]);\nclass AuctionManager extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (AuctionManager.isAuctionManagerV1(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_DEPRECATED_ACCOUNT_DATA)();\n        }\n        else if (AuctionManager.isAuctionManagerV2(this.info.data)) {\n            this.data = AuctionManagerV2Data.deserialize(this.info.data);\n        }\n        else {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n    }\n    static isCompatible(data) {\n        return AuctionManager.isAuctionManagerV1(data) || AuctionManager.isAuctionManagerV2(data);\n    }\n    static isAuctionManagerV1(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.AuctionManagerV1;\n    }\n    static isAuctionManagerV2(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.AuctionManagerV2;\n    }\n    static getPDA(auction) {\n        return MetaplexProgram_1.MetaplexProgram.findProgramAddress([\n            buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX),\n            new web3_js_1.PublicKey(auction).toBuffer(),\n        ]);\n    }\n    static findMany(connection, filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n                filters: [\n                    {\n                        memcmp: {\n                            offset: 0,\n                            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.AuctionManagerV2])),\n                        },\n                    },\n                    filters.store && {\n                        memcmp: {\n                            offset: 1,\n                            bytes: new web3_js_1.PublicKey(filters.store).toBase58(),\n                        },\n                    },\n                    filters.authority && {\n                        memcmp: {\n                            offset: 33,\n                            bytes: new web3_js_1.PublicKey(filters.authority).toBase58(),\n                        },\n                    },\n                ].filter(Boolean),\n            })).map((account) => AuctionManager.from(account));\n        });\n    }\n    getAuction(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return mpl_auction_1.Auction.load(connection, this.data.auction);\n        });\n    }\n    getBidRedemptionTickets(connection, haveWinnerIndex = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n                filters: [\n                    {\n                        memcmp: {\n                            offset: 0,\n                            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.BidRedemptionTicketV2])),\n                        },\n                    },\n                    {\n                        memcmp: {\n                            offset: BidRedemptionTicket_1.WINNER_INDEX_OFFSETS[+haveWinnerIndex],\n                            bytes: this.pubkey.toBase58(),\n                        },\n                    },\n                ],\n            })).map((account) => BidRedemptionTicket_1.BidRedemptionTicket.from(account));\n        });\n    }\n}\nexports.AuctionManager = AuctionManager;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuctionWinnerTokenTypeTracker = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_1 = require(\"buffer\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass AuctionWinnerTokenTypeTracker extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!AuctionWinnerTokenTypeTracker.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.AuctionWinnerTokenTypeTrackerV1;\n    }\n    static getPDA(auctionManager) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return MetaplexProgram_1.MetaplexProgram.findProgramAddress([\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX),\n                MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(),\n                new web3_js_1.PublicKey(auctionManager).toBuffer(),\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.TOTALS),\n            ]);\n        });\n    }\n}\nexports.AuctionWinnerTokenTypeTracker = AuctionWinnerTokenTypeTracker;\nconst deserialize = (buffer) => {\n    const data = {\n        key: MetaplexProgram_1.MetaplexKey.SafetyDepositConfigV1,\n        amountType: buffer[1],\n        lengthType: buffer[2],\n        amountRanges: [],\n    };\n    const lengthOfArray = new bn_js_1.default(buffer.slice(3, 7), 'le');\n    let offset = 7;\n    for (let i = 0; i < lengthOfArray.toNumber(); i++) {\n        const amount = (0, mpl_core_1.getBNFromData)(buffer, offset, data.amountType);\n        offset += data.amountType;\n        const length = (0, mpl_core_1.getBNFromData)(buffer, offset, data.lengthType);\n        offset += data.lengthType;\n        data.amountRanges.push({ amount, length });\n    }\n    return data;\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BidRedemptionTicket = exports.WINNER_INDEX_OFFSETS = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nexports.WINNER_INDEX_OFFSETS = [2, 10];\nclass BidRedemptionTicket extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (BidRedemptionTicket.isBidRedemptionTicketV1(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_DEPRECATED_ACCOUNT_DATA)();\n        }\n        else if (BidRedemptionTicket.isBidRedemptionTicketV2(this.info.data)) {\n            const data = this.info.data.toJSON().data;\n            const winnerIndex = data[1] !== 0 && new bn_js_1.default(data.slice(1, 9), 'le');\n            const offset = exports.WINNER_INDEX_OFFSETS[+!!winnerIndex];\n            this.data = {\n                key: MetaplexProgram_1.MetaplexKey.BidRedemptionTicketV2,\n                winnerIndex,\n                data,\n                auctionManager: bs58_1.default.encode(data.slice(offset, offset + 32)),\n            };\n        }\n        else {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n    }\n    static isCompatible(data) {\n        return (BidRedemptionTicket.isBidRedemptionTicketV1(data) ||\n            BidRedemptionTicket.isBidRedemptionTicketV2(data));\n    }\n    static isBidRedemptionTicketV1(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.BidRedemptionTicketV1;\n    }\n    static isBidRedemptionTicketV2(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.BidRedemptionTicketV2;\n    }\n}\nexports.BidRedemptionTicket = BidRedemptionTicket;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PayoutTicket = exports.PayoutTicketData = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nconst buffer_1 = require(\"buffer\");\nclass PayoutTicketData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = MetaplexProgram_1.MetaplexKey.PayoutTicketV1;\n    }\n}\nexports.PayoutTicketData = PayoutTicketData;\n_a = PayoutTicketData;\nPayoutTicketData.SCHEMA = _a.struct([\n    ['key', 'u8'],\n    ['recipient', 'pubkeyAsString'],\n    ['amountPaid', 'u64'],\n]);\nclass PayoutTicket extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!PayoutTicket.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = PayoutTicketData.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.PayoutTicketV1;\n    }\n    static getPayoutTicketsByRecipient(connection, recipient) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n                filters: [\n                    {\n                        memcmp: {\n                            offset: 0,\n                            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.PayoutTicketV1])),\n                        },\n                    },\n                    {\n                        memcmp: {\n                            offset: 1,\n                            bytes: new web3_js_1.PublicKey(recipient).toBase58(),\n                        },\n                    },\n                ],\n            })).map((account) => PayoutTicket.from(account));\n        });\n    }\n}\nexports.PayoutTicket = PayoutTicket;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PrizeTrackingTicket = exports.PrizeTrackingTicketData = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nconst buffer_1 = require(\"buffer\");\nclass PrizeTrackingTicketData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = MetaplexProgram_1.MetaplexKey.PrizeTrackingTicketV1;\n        this.key = MetaplexProgram_1.MetaplexKey.PrizeTrackingTicketV1;\n    }\n}\nexports.PrizeTrackingTicketData = PrizeTrackingTicketData;\n_a = PrizeTrackingTicketData;\nPrizeTrackingTicketData.SCHEMA = _a.struct([\n    ['key', 'u8'],\n    ['metadata', 'pubkeyAsString'],\n    ['supplySnapshot', 'u64'],\n    ['expectedRedemptions', 'u64'],\n    ['redemptions', 'u64'],\n]);\nclass PrizeTrackingTicket extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!PrizeTrackingTicket.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = PrizeTrackingTicketData.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.PrizeTrackingTicketV1;\n    }\n    static getPDA(auctionManager, mint) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return MetaplexProgram_1.MetaplexProgram.findProgramAddress([\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX),\n                MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(),\n                new web3_js_1.PublicKey(auctionManager).toBuffer(),\n                new web3_js_1.PublicKey(mint).toBuffer(),\n            ]);\n        });\n    }\n}\nexports.PrizeTrackingTicket = PrizeTrackingTicket;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafetyDepositConfig = exports.NonWinningConstraint = exports.WinningConstraint = exports.WinningConfigType = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nconst buffer_1 = require(\"buffer\");\nvar WinningConfigType;\n(function (WinningConfigType) {\n    WinningConfigType[WinningConfigType[\"TokenOnlyTransfer\"] = 0] = \"TokenOnlyTransfer\";\n    WinningConfigType[WinningConfigType[\"FullRightsTransfer\"] = 1] = \"FullRightsTransfer\";\n    WinningConfigType[WinningConfigType[\"PrintingV1\"] = 2] = \"PrintingV1\";\n    WinningConfigType[WinningConfigType[\"PrintingV2\"] = 3] = \"PrintingV2\";\n    WinningConfigType[WinningConfigType[\"Participation\"] = 4] = \"Participation\";\n})(WinningConfigType = exports.WinningConfigType || (exports.WinningConfigType = {}));\nvar WinningConstraint;\n(function (WinningConstraint) {\n    WinningConstraint[WinningConstraint[\"NoParticipationPrize\"] = 0] = \"NoParticipationPrize\";\n    WinningConstraint[WinningConstraint[\"ParticipationPrizeGiven\"] = 1] = \"ParticipationPrizeGiven\";\n})(WinningConstraint = exports.WinningConstraint || (exports.WinningConstraint = {}));\nvar NonWinningConstraint;\n(function (NonWinningConstraint) {\n    NonWinningConstraint[NonWinningConstraint[\"NoParticipationPrize\"] = 0] = \"NoParticipationPrize\";\n    NonWinningConstraint[NonWinningConstraint[\"GivenForFixedPrice\"] = 1] = \"GivenForFixedPrice\";\n    NonWinningConstraint[NonWinningConstraint[\"GivenForBidPrice\"] = 2] = \"GivenForBidPrice\";\n})(NonWinningConstraint = exports.NonWinningConstraint || (exports.NonWinningConstraint = {}));\nclass SafetyDepositConfig extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!SafetyDepositConfig.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.SafetyDepositConfigV1;\n    }\n    static getPDA(auctionManager, safetyDeposit) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return MetaplexProgram_1.MetaplexProgram.findProgramAddress([\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX),\n                MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(),\n                new web3_js_1.PublicKey(auctionManager).toBuffer(),\n                new web3_js_1.PublicKey(safetyDeposit).toBuffer(),\n            ]);\n        });\n    }\n}\nexports.SafetyDepositConfig = SafetyDepositConfig;\nconst deserialize = (buffer) => {\n    const data = {\n        key: MetaplexProgram_1.MetaplexKey.SafetyDepositConfigV1,\n        auctionManager: bs58_1.default.encode(buffer.slice(1, 33)),\n        order: new bn_js_1.default(buffer.slice(33, 41), 'le'),\n        winningConfigType: buffer[41],\n        amountType: buffer[42],\n        lengthType: buffer[43],\n        amountRanges: [],\n        participationConfig: null,\n        participationState: null,\n    };\n    const lengthOfArray = new bn_js_1.default(buffer.slice(44, 48), 'le');\n    let offset = 48;\n    for (let i = 0; i < lengthOfArray.toNumber(); i++) {\n        const amount = (0, mpl_core_1.getBNFromData)(buffer, offset, data.amountType);\n        offset += data.amountType;\n        const length = (0, mpl_core_1.getBNFromData)(buffer, offset, data.lengthType);\n        offset += data.lengthType;\n        data.amountRanges.push({ amount, length });\n    }\n    if (buffer[offset] == 0) {\n        offset += 1;\n        data.participationConfig = null;\n    }\n    else {\n        const winnerConstraint = buffer[offset + 1];\n        const nonWinningConstraint = buffer[offset + 2];\n        let fixedPrice = null;\n        offset += 3;\n        if (buffer[offset] == 1) {\n            fixedPrice = new bn_js_1.default(buffer.slice(offset + 1, offset + 9), 'le');\n            offset += 9;\n        }\n        else {\n            offset += 1;\n        }\n        data.participationConfig = {\n            winnerConstraint,\n            nonWinningConstraint,\n            fixedPrice,\n        };\n    }\n    if (buffer[offset] == 0) {\n        offset += 1;\n        data.participationState = null;\n    }\n    else {\n        const collectedToAcceptPayment = new bn_js_1.default(buffer.slice(offset + 1, offset + 9), 'le');\n        offset += 9;\n        data.participationState = {\n            collectedToAcceptPayment,\n        };\n    }\n    return data;\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Store = exports.StoreData = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst WhitelistedCreator_1 = require(\"./WhitelistedCreator\");\nconst AuctionManager_1 = require(\"./AuctionManager\");\nconst buffer_1 = require(\"buffer\");\nclass StoreData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = MetaplexProgram_1.MetaplexKey.StoreV1;\n        this.public = true;\n        this.key = MetaplexProgram_1.MetaplexKey.StoreV1;\n    }\n}\nexports.StoreData = StoreData;\n_a = StoreData;\nStoreData.SCHEMA = _a.struct([\n    ['key', 'u8'],\n    ['public', 'u8'],\n    ['auctionProgram', 'pubkeyAsString'],\n    ['tokenVaultProgram', 'pubkeyAsString'],\n    ['tokenMetadataProgram', 'pubkeyAsString'],\n    ['tokenProgram', 'pubkeyAsString'],\n]);\nclass Store extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!Store.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = StoreData.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.StoreV1;\n    }\n    static getPDA(owner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return MetaplexProgram_1.MetaplexProgram.findProgramAddress([\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX),\n                MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(),\n                new web3_js_1.PublicKey(owner).toBuffer(),\n            ]);\n        });\n    }\n    getWhitelistedCreators(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n                filters: [\n                    {\n                        memcmp: {\n                            offset: 0,\n                            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.WhitelistedCreatorV1])),\n                        },\n                    },\n                ],\n            })).map((account) => WhitelistedCreator_1.WhitelistedCreator.from(account));\n        });\n    }\n    getAuctionManagers(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield MetaplexProgram_1.MetaplexProgram.getProgramAccounts(connection, {\n                filters: [\n                    {\n                        memcmp: {\n                            offset: 0,\n                            bytes: bs58_1.default.encode(buffer_1.Buffer.from([MetaplexProgram_1.MetaplexKey.AuctionManagerV2])),\n                        },\n                    },\n                    {\n                        memcmp: {\n                            offset: 1,\n                            bytes: this.pubkey.toBase58(),\n                        },\n                    },\n                ],\n            })).map((account) => AuctionManager_1.AuctionManager.from(account));\n        });\n    }\n}\nexports.Store = Store;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StoreConfig = exports.StoreConfigData = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst buffer_1 = require(\"buffer\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass StoreConfigData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = MetaplexProgram_1.MetaplexKey.StoreConfigV1;\n        this.key = MetaplexProgram_1.MetaplexKey.StoreConfigV1;\n    }\n}\nexports.StoreConfigData = StoreConfigData;\n_a = StoreConfigData;\nStoreConfigData.SCHEMA = _a.struct([\n    ['key', 'u8'],\n    ['settingsUri', { kind: 'option', type: 'string' }],\n]);\nclass StoreConfig extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!StoreConfig.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = StoreConfigData.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.StoreConfigV1;\n    }\n    static getPDA(store) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return MetaplexProgram_1.MetaplexProgram.findProgramAddress([\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX),\n                MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(),\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.CONFIG),\n                new web3_js_1.PublicKey(store).toBuffer(),\n            ]);\n        });\n    }\n}\nexports.StoreConfig = StoreConfig;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WhitelistedCreator = exports.WhitelistedCreatorData = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nconst buffer_1 = require(\"buffer\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nclass WhitelistedCreatorData extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super(args);\n        this.key = MetaplexProgram_1.MetaplexKey.WhitelistedCreatorV1;\n        this.activated = true;\n        this.key = MetaplexProgram_1.MetaplexKey.WhitelistedCreatorV1;\n    }\n}\nexports.WhitelistedCreatorData = WhitelistedCreatorData;\n_a = WhitelistedCreatorData;\nWhitelistedCreatorData.SCHEMA = _a.struct([\n    ['key', 'u8'],\n    ['address', 'pubkeyAsString'],\n    ['activated', 'u8'],\n]);\nclass WhitelistedCreator extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(MetaplexProgram_1.MetaplexProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!WhitelistedCreator.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = WhitelistedCreatorData.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data[0] === MetaplexProgram_1.MetaplexKey.WhitelistedCreatorV1;\n    }\n    static getPDA(store, creator) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return MetaplexProgram_1.MetaplexProgram.findProgramAddress([\n                buffer_1.Buffer.from(MetaplexProgram_1.MetaplexProgram.PREFIX),\n                MetaplexProgram_1.MetaplexProgram.PUBKEY.toBuffer(),\n                new web3_js_1.PublicKey(store).toBuffer(),\n                new web3_js_1.PublicKey(creator).toBuffer(),\n            ]);\n        });\n    }\n}\nexports.WhitelistedCreator = WhitelistedCreator;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./accounts/AuctionManager\"), exports);\n__exportStar(require(\"./accounts/BidRedemptionTicket\"), exports);\n__exportStar(require(\"./accounts/PayoutTicket\"), exports);\n__exportStar(require(\"./accounts/PrizeTrackingTicket\"), exports);\n__exportStar(require(\"./accounts/SafetyDepositConfig\"), exports);\n__exportStar(require(\"./accounts/Store\"), exports);\n__exportStar(require(\"./accounts/StoreConfig\"), exports);\n__exportStar(require(\"./accounts/WhitelistedCreator\"), exports);\n__exportStar(require(\"./accounts/AuctionWinnerTokenTypeTracker\"), exports);\n__exportStar(require(\"./MetaplexProgram\"), exports);\n__exportStar(require(\"./transactions\"), exports);\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClaimBid = exports.ClaimBidArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst mpl_auction_1 = require(\"@metaplex-foundation/mpl-auction\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass ClaimBidArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 6;\n    }\n}\nexports.ClaimBidArgs = ClaimBidArgs;\n_a = ClaimBidArgs;\nClaimBidArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\nclass ClaimBid extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { store, vault, auction, auctionExtended, auctionManager, bidder, bidderPot, bidderPotToken, acceptPayment, tokenMint, } = params;\n        const data = ClaimBidArgs.serialize();\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: acceptPayment,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidderPotToken,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidderPot,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auctionManager,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidder,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: tokenMint,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: vault,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_auction_1.AuctionProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: auctionExtended,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.ClaimBid = ClaimBid;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EndAuction = exports.EndAuctionArgs = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst mpl_auction_1 = require(\"@metaplex-foundation/mpl-auction\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass EndAuctionArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 20;\n    }\n}\nexports.EndAuctionArgs = EndAuctionArgs;\n_a = EndAuctionArgs;\nEndAuctionArgs.SCHEMA = _a.struct([\n    ['instruction', 'u8'],\n    ['reveal', { kind: 'option', type: [bn_js_1.default, bn_js_1.default] }],\n]);\nclass EndAuction extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { store, auction, auctionExtended, auctionManager, auctionManagerAuthority, reveal = null, } = params;\n        const data = EndAuctionArgs.serialize({ reveal });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: auctionManager,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auctionExtended,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: auctionManagerAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_auction_1.AuctionProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.EndAuction = EndAuction;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InitAuctionManagerV2 = exports.InitAuctionManagerV2Args = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass InitAuctionManagerV2Args extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 17;\n        this.amountType = mpl_core_1.TupleNumericType.U8;\n        this.lengthType = mpl_core_1.TupleNumericType.U8;\n        this.maxRanges = new bn_js_1.default(1);\n    }\n}\nexports.InitAuctionManagerV2Args = InitAuctionManagerV2Args;\n_a = InitAuctionManagerV2Args;\nInitAuctionManagerV2Args.SCHEMA = _a.struct([\n    ['instruction', 'u8'],\n    ['amountType', 'u8'],\n    ['lengthType', 'u8'],\n    ['maxRanges', 'u64'],\n]);\nclass InitAuctionManagerV2 extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { feePayer } = options;\n        const { store, vault, auction, auctionManager, auctionManagerAuthority, acceptPaymentAccount, tokenTracker, amountType, lengthType, maxRanges, } = params;\n        const data = InitAuctionManagerV2Args.serialize({ amountType, lengthType, maxRanges });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: auctionManager,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: tokenTracker,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: vault,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: auctionManagerAuthority,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: acceptPaymentAccount,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.InitAuctionManagerV2 = InitAuctionManagerV2;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RedeemBid = exports.RedeemUnusedWinningConfigItemsAsAuctioneerArgs = exports.ProxyCallAddress = exports.RedeemBidArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst mpl_token_metadata_1 = require(\"@metaplex-foundation/mpl-token-metadata\");\nconst mpl_token_vault_1 = require(\"@metaplex-foundation/mpl-token-vault\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass RedeemBidArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 2;\n    }\n}\nexports.RedeemBidArgs = RedeemBidArgs;\n_a = RedeemBidArgs;\nRedeemBidArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\nvar ProxyCallAddress;\n(function (ProxyCallAddress) {\n    ProxyCallAddress[ProxyCallAddress[\"RedeemBid\"] = 0] = \"RedeemBid\";\n    ProxyCallAddress[ProxyCallAddress[\"RedeemFullRightsTransferBid\"] = 1] = \"RedeemFullRightsTransferBid\";\n})(ProxyCallAddress = exports.ProxyCallAddress || (exports.ProxyCallAddress = {}));\nclass RedeemUnusedWinningConfigItemsAsAuctioneerArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 12;\n    }\n}\nexports.RedeemUnusedWinningConfigItemsAsAuctioneerArgs = RedeemUnusedWinningConfigItemsAsAuctioneerArgs;\n_b = RedeemUnusedWinningConfigItemsAsAuctioneerArgs;\nRedeemUnusedWinningConfigItemsAsAuctioneerArgs.SCHEMA = _b.struct([\n    ['instruction', 'u8'],\n    ['winningConfigItemIndex', 'u8'],\n    ['proxyCall', 'u8'],\n]);\nclass RedeemBid extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { feePayer } = options;\n        const { store, vault, auction, auctionExtended, auctionManager, bidRedemption, bidderMeta: bidMetadata, safetyDepositTokenStore, destination, safetyDeposit, fractionMint, bidder, isPrintingType, safetyDepositConfig, transferAuthority, masterEdition, reservationList, auctioneerReclaimIndex, } = params;\n        const data = auctioneerReclaimIndex\n            ? RedeemUnusedWinningConfigItemsAsAuctioneerArgs.serialize({\n                winningConfigItemIndex: auctioneerReclaimIndex,\n                proxyCall: ProxyCallAddress.RedeemBid,\n            })\n            : RedeemBidArgs.serialize();\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: auctionManager,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: safetyDepositTokenStore,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: destination,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidRedemption,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: safetyDeposit,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: vault,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: fractionMint,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidMetadata,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidder,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_token_vault_1.VaultProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_token_metadata_1.MetadataProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: transferAuthority,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: safetyDepositConfig,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: auctionExtended,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                ...(isPrintingType && masterEdition && reservationList\n                    ? [\n                        {\n                            pubkey: masterEdition,\n                            isSigner: false,\n                            isWritable: true,\n                        },\n                        {\n                            pubkey: reservationList,\n                            isSigner: false,\n                            isWritable: true,\n                        },\n                    ]\n                    : []),\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.RedeemBid = RedeemBid;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RedeemFullRightsTransferBid = exports.RedeemFullRightsTransferBidArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst mpl_token_metadata_1 = require(\"@metaplex-foundation/mpl-token-metadata\");\nconst mpl_token_vault_1 = require(\"@metaplex-foundation/mpl-token-vault\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nconst RedeemBid_1 = require(\"./RedeemBid\");\nclass RedeemFullRightsTransferBidArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 3;\n    }\n}\nexports.RedeemFullRightsTransferBidArgs = RedeemFullRightsTransferBidArgs;\n_a = RedeemFullRightsTransferBidArgs;\nRedeemFullRightsTransferBidArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\nclass RedeemFullRightsTransferBid extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { feePayer } = options;\n        const { store, vault, auction, auctionExtended, auctionManager, bidRedemption, bidMetadata, safetyDepositTokenStore, destination, safetyDeposit, fractionMint, bidder, safetyDepositConfig, transferAuthority, masterMetadata, newAuthority, auctioneerReclaimIndex, } = params;\n        const data = auctioneerReclaimIndex\n            ? RedeemBid_1.RedeemUnusedWinningConfigItemsAsAuctioneerArgs.serialize({\n                winningConfigItemIndex: auctioneerReclaimIndex,\n                proxyCall: RedeemBid_1.ProxyCallAddress.RedeemFullRightsTransferBid,\n            })\n            : RedeemFullRightsTransferBidArgs.serialize();\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: auctionManager,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: safetyDepositTokenStore,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: destination,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidRedemption,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: safetyDeposit,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: vault,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: fractionMint,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidMetadata,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidder,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_token_vault_1.VaultProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_token_metadata_1.MetadataProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: masterMetadata,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: newAuthority,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: transferAuthority,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: safetyDepositConfig,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: auctionExtended,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.RedeemFullRightsTransferBid = RedeemFullRightsTransferBid;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RedeemParticipationBidV3 = exports.RedeemParticipationBidV3Args = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst mpl_token_metadata_1 = require(\"@metaplex-foundation/mpl-token-metadata\");\nconst mpl_token_vault_1 = require(\"@metaplex-foundation/mpl-token-vault\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass RedeemParticipationBidV3Args extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 19;\n    }\n}\nexports.RedeemParticipationBidV3Args = RedeemParticipationBidV3Args;\n_a = RedeemParticipationBidV3Args;\nRedeemParticipationBidV3Args.SCHEMA = _a.struct([\n    ['instruction', 'u8'],\n    ['winIndex', { kind: 'option', type: 'u64' }],\n]);\nclass RedeemParticipationBidV3 extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { feePayer } = options;\n        const { store, vault, auction, auctionExtended, auctionManager, bidRedemption, bidMetadata, safetyDepositTokenStore, destination, safetyDeposit, bidder, safetyDepositConfig, metadata, prizeTrackingTicket, newMetadata, newEdition, masterEdition, newMint, editionMark, winIndex, transferAuthority, acceptPaymentAccount, tokenPaymentAccount, } = params;\n        const data = RedeemParticipationBidV3Args.serialize({ winIndex });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: auctionManager,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: safetyDepositTokenStore,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: destination,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidRedemption,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: safetyDeposit,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: vault,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: safetyDepositConfig,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidMetadata,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidder,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: true,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_token_vault_1.VaultProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_token_metadata_1.MetadataProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: transferAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: acceptPaymentAccount,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: tokenPaymentAccount,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: prizeTrackingTicket,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: newMetadata,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: newEdition,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: masterEdition,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: newMint,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: editionMark,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: metadata,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: auctionExtended,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.RedeemParticipationBidV3 = RedeemParticipationBidV3;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RedeemPrintingV2Bid = exports.RedeemPrintingV2BidArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst mpl_token_vault_1 = require(\"@metaplex-foundation/mpl-token-vault\");\nconst mpl_token_metadata_1 = require(\"@metaplex-foundation/mpl-token-metadata\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass RedeemPrintingV2BidArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 14;\n    }\n}\nexports.RedeemPrintingV2BidArgs = RedeemPrintingV2BidArgs;\n_a = RedeemPrintingV2BidArgs;\nRedeemPrintingV2BidArgs.SCHEMA = _a.struct([\n    ['instruction', 'u8'],\n    ['editionOffset', 'u64'],\n    ['winIndex', 'u64'],\n]);\nclass RedeemPrintingV2Bid extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { feePayer } = options;\n        const { store, vault, auction, auctionExtended, auctionManager, bidRedemption, bidMetadata, safetyDepositTokenStore, destination, safetyDeposit, bidder, safetyDepositConfig, metadata, prizeTrackingTicket, newMetadata, newEdition, masterEdition, newMint, editionMark, winIndex, editionOffset, } = params;\n        const data = RedeemPrintingV2BidArgs.serialize({ winIndex, editionOffset });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: auctionManager,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: safetyDepositTokenStore,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: destination,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidRedemption,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: safetyDeposit,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: vault,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: safetyDepositConfig,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidMetadata,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidder,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: true,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_token_vault_1.VaultProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_token_metadata_1.MetadataProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: prizeTrackingTicket,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: newMetadata,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: newEdition,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: masterEdition,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: newMint,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: editionMark,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: metadata,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: auctionExtended,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.RedeemPrintingV2Bid = RedeemPrintingV2Bid;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetStore = exports.SetStoreArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst mpl_token_metadata_1 = require(\"@metaplex-foundation/mpl-token-metadata\");\nconst mpl_token_vault_1 = require(\"@metaplex-foundation/mpl-token-vault\");\nconst mpl_auction_1 = require(\"@metaplex-foundation/mpl-auction\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass SetStoreArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 8;\n    }\n}\nexports.SetStoreArgs = SetStoreArgs;\n_a = SetStoreArgs;\nSetStoreArgs.SCHEMA = _a.struct([\n    ['instruction', 'u8'],\n    ['public', 'u8'],\n]);\nclass SetStore extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { feePayer } = options;\n        const { admin, store, isPublic } = params;\n        const data = SetStoreArgs.serialize({ public: isPublic });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: admin,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                { pubkey: spl_token_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n                {\n                    pubkey: mpl_token_vault_1.VaultProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_token_metadata_1.MetadataProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_auction_1.AuctionProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.SetStore = SetStore;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetStoreV2 = exports.SetStoreV2Args = void 0;\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst mpl_token_vault_1 = require(\"@metaplex-foundation/mpl-token-vault\");\nconst mpl_token_metadata_1 = require(\"@metaplex-foundation/mpl-token-metadata\");\nconst mpl_auction_1 = require(\"@metaplex-foundation/mpl-auction\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass SetStoreV2Args extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 23;\n    }\n}\nexports.SetStoreV2Args = SetStoreV2Args;\n_a = SetStoreV2Args;\nSetStoreV2Args.SCHEMA = _a.struct([\n    ['instruction', 'u8'],\n    ['public', 'u8'],\n    ['settingsUri', { kind: 'option', type: 'string' }],\n]);\nclass SetStoreV2 extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { feePayer } = options;\n        const { admin, store, config, isPublic, settingsUri } = params;\n        const data = SetStoreV2Args.serialize({ public: isPublic, settingsUri });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: config,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: admin,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                { pubkey: spl_token_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n                {\n                    pubkey: mpl_token_vault_1.VaultProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_token_metadata_1.MetadataProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_auction_1.AuctionProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.SetStoreV2 = SetStoreV2;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetWhitelistedCreator = exports.SetWhitelistedCreatorArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass SetWhitelistedCreatorArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 9;\n    }\n}\nexports.SetWhitelistedCreatorArgs = SetWhitelistedCreatorArgs;\n_a = SetWhitelistedCreatorArgs;\nSetWhitelistedCreatorArgs.SCHEMA = _a.struct([\n    ['instruction', 'u8'],\n    ['activated', 'u8'],\n]);\nclass SetWhitelistedCreator extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { feePayer } = options;\n        const { admin, whitelistedCreatorPDA, store, creator, activated } = params;\n        const data = SetWhitelistedCreatorArgs.serialize({ activated });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: whitelistedCreatorPDA,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: admin,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: creator,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.SetWhitelistedCreator = SetWhitelistedCreator;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StartAuction = exports.StartAuctionArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst mpl_auction_1 = require(\"@metaplex-foundation/mpl-auction\");\nconst MetaplexProgram_1 = require(\"../MetaplexProgram\");\nclass StartAuctionArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 5;\n    }\n}\nexports.StartAuctionArgs = StartAuctionArgs;\n_a = StartAuctionArgs;\nStartAuctionArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\nclass StartAuction extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { store, auction, auctionManager, auctionManagerAuthority } = params;\n        const data = StartAuctionArgs.serialize();\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: auctionManager,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auctionManagerAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: store,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: mpl_auction_1.AuctionProgram.PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.StartAuction = StartAuction;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./ClaimBid\"), exports);\n__exportStar(require(\"./EndAuction\"), exports);\n__exportStar(require(\"./InitAuctionManagerV2\"), exports);\n__exportStar(require(\"./RedeemBid\"), exports);\n__exportStar(require(\"./RedeemFullRightsTransferBid\"), exports);\n__exportStar(require(\"./RedeemPrintingV2Bid\"), exports);\n__exportStar(require(\"./SetStore\"), exports);\n__exportStar(require(\"./SetStoreV2\"), exports);\n__exportStar(require(\"./SetWhitelistedCreator\"), exports);\n__exportStar(require(\"./StartAuction\"), exports);\n__exportStar(require(\"./RedeemParticipationBidV3\"), exports);\n"],"names":[],"sourceRoot":"","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]}