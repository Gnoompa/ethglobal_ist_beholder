{"version":3,"file":"bundled/chunk.7987.js","mappings":"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G;IACpB;AACJ;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA,SAAS,UAAU;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,OAAO,EAAC;;;;;;;;;;;;ACtDvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,OAAO,EAAC;;;;;;;;;;;;ACRvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;ACjD5B;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAE6D;;;;;;;;;AC3ChD;;AAEb,cAAc,mBAAO,CAAC,KAAU;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;ACtG6B,2DAA2D,cAAc,OAAO,0CAA0C,aAAa,kCAAkC,oBAAoB,sDAAC,mFAAmF,0BAA0B,OAAO,+CAA+C,+BAA+B,qBAAqB,yBAAyB,2BAA2B,qEAAqE,kEAAkE,SAAS,wFAAwF,gBAAgB,eAAe,8BAA8B,oDAAoD,SAAS,uCAAuC,mCAAmC,iGAAiG,qDAAqD,OAAO,oBAAoB,QAAQ,iCAAiC,0BAA0B,uBAAuB,qBAAqB,QAAQ,8CAA8C,EAAE,iCAAiC,MAAM,8BAA8B,KAAK,+EAA+E,MAAM,WAAW,uDAAuD,kIAAkI,gDAAgD,sKAAsK,yBAAyB,oDAAoD,2DAA2D,sBAAsB,GAAG,IAAI,uBAAuB,8BAA8B,iBAAiB,OAAO,iEAAe,CAAC,EAAC;;;;;;;;;ACAtiE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;AACb;AACA,cAAc,kCAAkC,iBAAiB,UAAU,0BAA0B,mDAAmD,kCAAkC,4CAA4C,kBAAkB,kBAAkB,cAAc,gBAAgB,iBAAiB,GAAG,sBAAsB,GAAG,uBAAuB,GAAG,uBAAuB,GAAG,eAAe,GAAG,kBAAkB,GAAG,gBAAgB,GAAG,YAAY,GAAG,YAAY,GAAG,cAAc;AAC/e,gBAAgB,GAAG,kBAAkB,GAAG,gBAAgB,GAAG,mBAAmB,aAAa,uBAAuB,wBAAwB,GAAG,yBAAyB,aAAa,iBAAiB,yBAAyB,aAAa,iBAAiB,iBAAiB,aAAa,qDAAqD,oBAAoB,aAAa,iBAAiB,kBAAkB,aAAa,iBAAiB,cAAc,aAAa;AAC3c,cAAc,aAAa,iBAAiB,gBAAgB,aAAa,iBAAiB,kBAAkB,aAAa,iBAAiB,oBAAoB,aAAa,iBAAiB,kBAAkB,aAAa;AAC3N,0BAA0B,aAAa,6QAA6Q,cAAc;;;;;;;;;ACdrT;;AAEb,IAAI,IAAqC;AACzC,EAAE,2CAA4D;AAC9D,EAAE,KAAK,EAEN;;;;;;;;;ACND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa,MAAM,mBAAO,CAAC,IAA8B,EAAE,uBAAuB,aAAa;;;;;;;;;ACTlF;;AAEb,IAAI,IAAqC;AACzC,EAAE,2CAAoE;AACtE,EAAE,KAAK,EAEN;;;;;;;;;ACND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa,MAAM,mBAAO,CAAC,KAAO,EAAE,gBAAgB,+CAA+C,iHAAiH,gBAAgB,eAAe,MAAM,uBAAuB,qBAAqB,aAAa,UAAU,gBAAgB,SAAS,OAAO,EAAE,UAAU,aAAa,SAAS,OAAO,EAAE,oBAAoB,SAAS,OAAO,EAAE,EAAE,MAAM,KAAK;AAC1b,cAAc,oBAAoB,UAAU,IAAI,UAAU,cAAc,SAAS,UAAU,gBAAgB,WAAW,gIAAgI,4BAA4B;;;;;;;;;ACVrQ;;AAEb,IAAI,IAAqC;AACzC,EAAE,2CAAiF;AACnF,EAAE,KAAK,EAEN;;;;;;;;ACND;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://mask-network/./packages/plugin-infra/src/dom/usePluginWrapper.tsx","webpack://mask-network/./packages/shared-base-ui/src/hooks/useObservableMapSet.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/PostContext.ts","webpack://mask-network/./packages/plugin-infra/src/utils/message.ts","webpack://mask-network/./packages/plugin-infra/src/utils/rpc.ts","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Description.js","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Twitter.js","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Link.js","webpack://mask-network/./packages/plugins/ScamSniffer/src/messages.ts","webpack://mask-network/./packages/plugins/ScamSniffer/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/ScamSniffer/src/SiteAdaptor/ScamAlert.tsx","webpack://mask-network/./packages/plugins/ScamSniffer/src/SiteAdaptor/index.tsx","webpack://mask-network/./packages/shared-base-ui/src/bom/open-window.ts","webpack://mask-network/./packages/shared-base-ui/src/hooks/useValueRef.ts","webpack://mask-network/./packages/shared-base/src/helpers/getLocalImplementation.tsx","webpack://mask-network/./packages/theme/src/CSSVariables/constants.ts","webpack://mask-network/./packages/theme/src/CSSVariables/vars.ts","webpack://mask-network/./packages/theme/src/UIHelper/makeStyles.ts","webpack://mask-network/./packages/typed-message/base/src/core/image.ts","webpack://mask-network/./packages/typed-message/base/src/core/promise.ts","webpack://mask-network/./packages/typed-message/base/src/core/text.ts","webpack://mask-network/./packages/typed-message/base/src/core/tuple.ts","webpack://mask-network/./packages/typed-message/base/src/extension/MaskPayload.ts","webpack://mask-network/./packages/typed-message/base/src/extension/anchor.ts","webpack://mask-network/./packages/typed-message/base/src/utils/extract.ts","webpack://mask-network/./packages/typed-message/base/src/utils/index.ts","webpack://mask-network/./packages/typed-message/base/src/utils/internal.ts","webpack://mask-network/./packages/typed-message/base/src/visitor/forEachChild.ts","webpack://mask-network/./node_modules/.pnpm/@emotion+hash@0.9.0/node_modules/@emotion/hash/dist/emotion-hash.esm.js","webpack://mask-network/./node_modules/.pnpm/@emotion+memoize@0.8.0/node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","webpack://mask-network/./node_modules/.pnpm/@emotion+unitless@0.8.0/node_modules/@emotion/unitless/dist/emotion-unitless.esm.js","webpack://mask-network/./node_modules/.pnpm/@emotion+utils@1.2.0/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","webpack://mask-network/./node_modules/.pnpm/hoist-non-react-statics@3.3.2/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack://mask-network/./node_modules/.pnpm/html-parse-stringify@3.0.1/node_modules/html-parse-stringify/dist/html-parse-stringify.module.js","webpack://mask-network/./node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/cjs/react-is.production.min.js","webpack://mask-network/./node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/index.js","webpack://mask-network/./node_modules/.pnpm/use-subscription@1.8.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-subscription/cjs/use-subscription.production.min.js","webpack://mask-network/./node_modules/.pnpm/use-subscription@1.8.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-subscription/index.js","webpack://mask-network/./node_modules/.pnpm/use-sync-external-store@1.2.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","webpack://mask-network/./node_modules/.pnpm/use-sync-external-store@1.2.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-sync-external-store/shim/index.js","webpack://mask-network/./node_modules/.pnpm/void-elements@3.1.0/node_modules/void-elements/index.js"],"sourcesContent":["import { createContext, useEffect, useContext, type ForwardRefExoticComponent, type RefAttributes } from 'react'\nimport { noop } from 'lodash-es'\nimport type { Plugin } from '../types.js'\n\nexport type PluginWrapperComponent<T extends Plugin.Shared.Definition = Plugin.Shared.Definition> =\n    ForwardRefExoticComponent<\n        React.PropsWithChildren<\n            RefAttributes<PluginWrapperMethods> & {\n                definition: T\n                lackHostPermission?: boolean\n            }\n        >\n    >\n\nconst emptyPluginWrapperMethods = {\n    setWrap: noop,\n    setWrapperName: noop,\n    setWidth: noop,\n}\n/** @internal */\nexport const PluginWrapperMethodsContext = createContext<PluginWrapperMethods>(emptyPluginWrapperMethods)\nPluginWrapperMethodsContext.displayName = 'PluginWrapperMethodsContext'\nexport interface PluginWrapperMethods {\n    setWrap(open: boolean): void\n    setWrapperName(name: string | undefined): void\n    setWidth(width: number | undefined): void\n}\n\nexport function usePluginWrapper(\n    open: boolean,\n    options?: {\n        width?: number\n        name?: string\n    },\n) {\n    const { setWidth, setWrap, setWrapperName } = useContext(PluginWrapperMethodsContext)\n    const { width, name } = options || {}\n\n    useEffect(() => {\n        setWrap(open)\n        return () => setWrap(open)\n    }, [open, setWrap])\n    useEffect(() => setWidth(width), [width, setWidth])\n    useEffect(() => setWrapperName(name), [name, setWrapperName])\n}\n","import { useMemo } from 'react'\nimport { useSubscription, type Subscription } from 'use-subscription'\nimport { type ObservableMap, type ObservableSet } from '@masknet/shared-base'\n\nexport function useObservableValues<T>(map: ObservableMap<any, T> | ObservableSet<T>) {\n    const subscription = useMemo<Subscription<T[]>>(\n        () => ({\n            getCurrentValue: () => map.asValues,\n            subscribe: (callback) => {\n                return (map.event as any).on(map.ALL_EVENTS, callback)\n            },\n        }),\n        [map],\n    )\n\n    return useSubscription(subscription)\n}\n","import { createContext, createElement, useContext } from 'react'\nimport { type Subscription, useSubscription } from 'use-subscription'\nimport type { Some } from 'ts-results-es'\nimport type { LiveSelector, DOMProxy } from '@dimensiondev/holoflows-kit'\nimport {\n    ObservableMap,\n    ObservableSet,\n    type PostIVIdentifier,\n    ValueRef,\n    type PostIdentifier,\n    type ProfileIdentifier,\n} from '@masknet/shared-base'\nimport { useObservableValues, useValueRef } from '@masknet/shared-base-ui'\nimport type { TypedMessage } from '@masknet/typed-message'\nimport type { SupportedPayloadVersions } from '@masknet/encryption'\n\nexport interface PostContextActions {\n    hasPayloadLike(content: string): boolean\n    getURLFromPostIdentifier?(post: PostIdentifier): URL | null\n}\nexport interface PostContextAuthor {\n    readonly nickname: Subscription<string | null>\n    readonly avatarURL: Subscription<URL | null>\n    readonly author: Subscription<ProfileIdentifier | null>\n    /** post id on the network. */\n    readonly postID: Subscription<string | null>\n}\n\nexport interface PostContextCoAuthor {\n    nickname?: string\n    avatarURL?: URL\n    author: ProfileIdentifier\n    post: PostIdentifier\n}\n\nexport interface PostContextComment {\n    readonly commentsSelector: LiveSelector<HTMLElement>\n    readonly commentBoxSelector: LiveSelector<HTMLElement>\n}\nexport interface PostContextCreation extends PostContextAuthor {\n    readonly rootElement: DOMProxy\n    readonly actionsElement?: DOMProxy\n    readonly isFocusing?: boolean\n    readonly suggestedInjectionPoint: HTMLElement\n    readonly comments?: PostContextComment\n    readonly coAuthors: Subscription<PostContextCoAuthor[]>\n    /**\n     * The result of this subscription will be merged with `PostContext.postMentionedLinks`.\n     *\n     * You don't need to provide this to resolve links in `PostContext.postContent`.\n     */\n    readonly postMentionedLinksProvider?: Subscription<string[]>\n    /** @deprecated It should parse image into rawMessage */\n    readonly postImagesProvider?: Subscription<string[]>\n    /**\n     * The raw TypedMessage that the site gives.\n     */\n    readonly rawMessage: Subscription<TypedMessage>\n    readonly signal?: AbortSignal\n}\nexport interface PostContext extends PostContextAuthor {\n    // #region DOM knowledge\n    get rootNode(): HTMLElement | null\n    readonly rootElement: DOMProxy\n    readonly actionsElement?: DOMProxy\n    readonly isFocusing?: boolean\n    readonly suggestedInjectionPoint: HTMLElement\n    // #endregion\n    readonly comment: PostContextComment | undefined\n    // #region Metadata of a post (author, mentioned items, ...)\n    /** Auto computed */\n    readonly identifier: Subscription<PostIdentifier | null>\n    readonly url: Subscription<URL | null>\n    readonly coAuthors: Subscription<PostContextCoAuthor[] | null>\n    // Meta\n    readonly mentionedLinks: Subscription<string[]>\n    /** @deprecated It should appears in rawMessage */\n    readonly postMetadataImages: Subscription<string[]>\n    // #endregion\n    // #region Raw post content (not decrypted)\n    readonly rawMessage: Subscription<TypedMessage>\n    readonly encryptComment: ValueRef<null | ((commentToEncrypt: string) => Promise<string>)>\n    readonly decryptComment: ValueRef<null | ((commentEncrypted: string) => Promise<string | null>)>\n    // #endregion\n    // #region Post payload discovered in the rawMessage\n    readonly hasMaskPayload: Subscription<boolean>\n    readonly postIVIdentifier: Subscription<PostIVIdentifier | null>\n    /**\n     * undefined => payload not found\n     */\n    readonly publicShared: Subscription<boolean | undefined>\n    readonly isAuthorOfPost: Subscription<boolean | undefined>\n    readonly version: Subscription<SupportedPayloadVersions | undefined>\n\n    decryptedReport(content: {\n        sharedPublic?: Some<boolean>\n        iv?: string\n        isAuthorOfPost?: Some<boolean>\n        version?: SupportedPayloadVersions\n    }): void\n    // #endregion\n}\nexport type PostInfo = PostContext\n\nexport const PostInfoContext = createContext<PostContext | null>(null)\nPostInfoContext.displayName = 'PostInfoContext'\n\n/** @deprecated use <PostInfoContext.Provider value={post}> */\nexport function PostInfoProvider(props: React.PropsWithChildren<{ post: PostInfo }>) {\n    return createElement(PostInfoContext.Provider, { value: props.post, children: props.children })\n}\nexport const usePostInfoDetails: {\n    // Change to use* when https://github.com/microsoft/TypeScript/issues/44643 fixed\n    [key in keyof PostInfo]: () => PostInfo[key] extends ValueRef<infer T>\n        ? T extends (...args: any) => any\n            ? T\n            : Readonly<T>\n        : PostInfo[key] extends ObservableSet<infer T>\n        ? ReadonlyArray<Readonly<T>>\n        : PostInfo[key] extends ObservableMap<any, infer T>\n        ? ReadonlyArray<Readonly<T>>\n        : PostInfo[key] extends Subscription<infer T>\n        ? Readonly<T>\n        : PostInfo[key]\n} = {\n    __proto__: new Proxy(\n        { __proto__: null },\n        {\n            get(_, key) {\n                if (typeof key === 'symbol') return undefined\n                function usePostInfoDetails() {\n                    const postInfo = useContext(PostInfoContext)\n                    if (!postInfo) throw new TypeError('No post context')\n                    if (!(key in postInfo)) throw new TypeError('postInfo.' + (key as string) + ' is not found')\n                    const k = postInfo[key as keyof PostInfo]\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (k instanceof ValueRef) return useValueRef<any>(k)\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (k instanceof ObservableMap) return useObservableValues<any>(k)\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (k instanceof ObservableSet) return useObservableValues<any>(k)\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (isSubscription(k)) return useSubscription<any>(k)\n                    return k\n                }\n                Object.defineProperty(usePostInfoDetails, key, { value: usePostInfoDetails, configurable: true })\n                return usePostInfoDetails\n            },\n        },\n    ),\n} as any\nfunction isSubscription(x: any): x is Subscription<any> {\n    return (\n        typeof x === 'object' &&\n        x !== null &&\n        !!((x as Subscription<any>).getCurrentValue && (x as Subscription<any>).subscribe)\n    )\n}\n","import { WebExtensionMessage } from '@dimensiondev/holoflows-kit'\nimport type { PluginMessageEmitterItem } from '@masknet/plugin-infra'\nimport { serializer } from '@masknet/shared-base'\n\n/** @internal */\nexport const DOMAIN_RPC = Symbol('create RPC instead of normal message')\n/**\n * Create a plugin message emitter\n * @param pluginID The plugin ID\n *\n * @example\n * export const MyPluginMessage = getPluginMessage(PLUGIN_ID)\n */\nexport let getPluginMessage = <T>(pluginID: string, type?: typeof DOMAIN_RPC): PluginMessageEmitter<T> => {\n    const domain = (type === DOMAIN_RPC ? '@plugin-rpc/' : '@plugin/') + pluginID\n    if (cache.has(domain)) return cache.get(domain) as any\n\n    const messageCenter = new WebExtensionMessage<T>({ domain })\n    const events = messageCenter.events\n    messageCenter.serialization = serializer\n    cache.set(domain, events)\n    return events\n}\n\nexport function __workaround__replaceImplementationOfCreatePluginMessage__(\n    newImpl: (pluginID: string) => PluginMessageEmitter<any>,\n) {\n    getPluginMessage = newImpl\n}\nexport type PluginMessageEmitter<T> = { readonly [key in keyof T]: PluginMessageEmitterItem<T[key]> }\nconst cache = new Map<string, PluginMessageEmitter<unknown>>()\n\n// TODO: this type should be defined here, not shared-base\nexport type { PluginMessageEmitterItem } from '@masknet/shared-base'\n","import { Environment, isEnvironment } from '@dimensiondev/holoflows-kit'\nimport { AsyncCall, type AsyncCallLogLevel, AsyncGeneratorCall } from 'async-call-rpc/full'\nimport { serializer, getOrUpdateLocalImplementationHMR } from '@masknet/shared-base'\nimport { getPluginMessage } from '@masknet/plugin-infra'\nimport { DOMAIN_RPC } from './message.js'\n\nconst log: AsyncCallLogLevel = {\n    type: 'pretty',\n    requestReplay: process.env.NODE_ENV === 'development',\n    sendLocalStack: process.env.NODE_ENV === 'development',\n}\nlet isBackground = () => isEnvironment(Environment.ManifestBackground)\nexport function __workaround__replaceIsBackground__(f: () => boolean) {\n    isBackground = f\n}\n\nfunction getPluginRPCInternal(\n    cache: Map<string, object>,\n    pluginID: string,\n    starter: typeof AsyncCall | typeof AsyncGeneratorCall,\n    entry: keyof RPCMessage,\n) {\n    if (cache.has(pluginID)) return cache.get(pluginID)\n    const message = getPluginMessage<RPCMessage>(pluginID, DOMAIN_RPC)\n    const rpc = starter(Object.create(null), {\n        key: `@plugin/${pluginID}`,\n        channel: {\n            on: message[entry].on,\n            send: message[entry].sendToBackgroundPage,\n        },\n        serializer,\n        log,\n        thenable: false,\n    })\n    cache.set(pluginID, rpc)\n    return rpc\n}\nconst cache = new Map<string, object>()\nconst cacheGenerator = new Map<string, object>()\nexport function getPluginRPC<T>(pluginID: string): T {\n    if (isBackground()) startPluginRPC(pluginID, new AbortController().signal, Object.create(null))\n    return getPluginRPCInternal(cache, pluginID, AsyncCall, '_') as T\n}\nexport function getPluginRPCGenerator<T>(pluginID: string): T {\n    if (isBackground()) startPluginGeneratorRPC(pluginID, new AbortController().signal, Object.create(null))\n    return getPluginRPCInternal(cacheGenerator, pluginID, AsyncGeneratorCall, '$') as T\n}\n\nfunction startPluginRPCInternal(\n    cache: Map<string, object>,\n    pluginID: string,\n    signal: AbortSignal,\n    impl: object,\n    starter: typeof AsyncCall | typeof AsyncGeneratorCall,\n    entry: keyof RPCMessage,\n) {\n    if (!isBackground()) throw new Error('Cannot start RPC in the UI.')\n    const message = getPluginMessage<RPCMessage>(pluginID, DOMAIN_RPC)\n    const delegate = getOrUpdateLocalImplementationHMR(() => impl, message[entry])\n    if (cache.has(pluginID)) return\n    cache.set(pluginID, delegate)\n    starter(delegate, {\n        key: pluginID,\n        channel: {\n            on: message[entry].on,\n            send: message[entry].sendByBroadcast,\n        },\n        serializer,\n        log,\n        thenable: false,\n    })\n}\n/** @internal */\nexport function startPluginRPC(pluginID: string, signal: AbortSignal, impl: object) {\n    startPluginRPCInternal(cache, pluginID, signal, impl, AsyncCall, '_')\n}\n/** @internal */\nexport function startPluginGeneratorRPC(pluginID: string, signal: AbortSignal, impl: object) {\n    startPluginRPCInternal(cacheGenerator, pluginID, signal, impl, AsyncGeneratorCall, '$')\n}\n\ninterface RPCMessage {\n    // RPC\n    _: unknown\n    // Generator\n    $: unknown\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"\n}), 'Description');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z\"\n}), 'Twitter');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"\n}), 'Link');","import { getPluginRPC } from '@masknet/plugin-infra'\nimport { PLUGIN_ID } from './constants.js'\n\nimport.meta.webpackHot?.accept()\n\nexport const PluginScamRPC = getPluginRPC<typeof import('./Worker/rpc.js')>(PLUGIN_ID)\n","// @ts-nocheck\n/* eslint-disable */\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useScamSnifferTrans(): {\n    /**\n      * `Scam Alert`\n      */\n    alertTitle(): string;\n    /**\n      * `Similar Project`\n      */\n    similarProject(): string;\n    /**\n      * `Be careful what you visit and sign!`\n      */\n    tip(): string;\n    /**\n      * `Auto report the scam links to MetaMask`\n      */\n    report(): string;\n} { const { t } = useTranslation(\"io.scamsniffer.mask-plugin\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\n","import urlcat from 'urlcat'\nimport { useState, useEffect, useCallback } from 'react'\nimport { useAsync } from 'react-use'\nimport { makeStyles, MaskColorVar } from '@masknet/theme'\nimport { Checkbox, Typography, FormControlLabel, List, ListItemButton, ListItemIcon, ListItemText } from '@mui/material'\nimport { Twitter as TwitterIcon, Link as LinkIcon, Description as DescriptionIcon } from '@mui/icons-material'\nimport { openWindow } from '@masknet/shared-base-ui'\nimport type { ScamResult } from '@scamsniffer/detector'\nimport { PluginScamRPC } from '../messages.js'\nimport { useScamSnifferTrans } from '../locales/i18n_generated.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        overflow: 'hidden',\n        padding: theme.spacing(2),\n    },\n    list: {\n        padding: 0,\n        borderTop: '1px solid rgb(109 157 231 / 15%)',\n        borderBottom: '1px solid rgb(109 157 231 / 15%)',\n    },\n    scam: {\n        padding: theme.spacing(2),\n        background: MaskColorVar.infoBackground,\n        borderRadius: '10px',\n    },\n    reportWrapper: {\n        marginTop: '5px',\n    },\n    report: {\n        '& span': { fontSize: 13, color: '#888', lineHeight: 1.75 },\n    },\n    listIcon: {\n        width: '24px',\n        height: '24px',\n    },\n    desc: {\n        margin: '15px 0 7px',\n        color: '#777',\n        fontSize: '14px',\n        textAlign: 'center',\n    },\n    highlight: {\n        color: '#333',\n    },\n    title: {\n        fontFamily: 'Poppins',\n        fontWeight: 800,\n        margin: '10px 0 18px 0',\n        fontSize: '17px',\n        lineHeight: '17px',\n        width: '350px',\n        textAlign: 'center',\n        wordBreak: 'break-word',\n        color: MaskColorVar.redMain,\n    },\n}))\n\nfunction ScamAlert({ result }: { result: ScamResult }) {\n    const { classes } = useStyles()\n    const [autoReport, setAutoReport] = useState(false)\n    const t = useScamSnifferTrans()\n\n    useEffect(() => {\n        if (autoReport) {\n            PluginScamRPC.sendReportScam(result)\n        }\n    }, [autoReport, result])\n\n    const handleClick = useCallback((event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n        setAutoReport(checked)\n        PluginScamRPC.enableAutoReport(checked)\n    }, [])\n\n    const openTwitter = () => {\n        const link = urlcat('https://twitter.com', '/:username', { username: result.twitterUsername })\n        openWindow(link)\n    }\n\n    const openSite = () => {\n        openWindow(result.externalUrl)\n    }\n\n    useAsync(async () => {\n        const enabled = await PluginScamRPC.isAutoReportEnabled()\n        setAutoReport(enabled)\n    }, [])\n    return (\n        <div className={classes.root}>\n            <div className={classes.scam}>\n                <Typography variant=\"body2\" className={classes.title}>\n                    {t.similarProject()}\n                </Typography>\n                <List className={classes.list}>\n                    <ListItemButton>\n                        <ListItemIcon className={classes.listIcon}>\n                            <DescriptionIcon className={classes.highlight} />\n                        </ListItemIcon>\n                        <ListItemText className={classes.highlight} primary={result.name} />\n                    </ListItemButton>\n                    {result.twitterUsername ? (\n                        <ListItemButton onClick={() => openTwitter()}>\n                            <ListItemIcon className={classes.listIcon}>\n                                <TwitterIcon className={classes.highlight} />\n                            </ListItemIcon>\n                            <ListItemText className={classes.highlight} primary={result.twitterUsername} />\n                        </ListItemButton>\n                    ) : null}\n                    {result.externalUrl ? (\n                        <ListItemButton onClick={() => openSite()}>\n                            <ListItemIcon className={classes.listIcon}>\n                                <LinkIcon className={classes.highlight} />\n                            </ListItemIcon>\n                            <ListItemText className={classes.highlight} primary={result.externalUrl} />\n                        </ListItemButton>\n                    ) : null}\n                </List>\n                <Typography className={classes.desc}>{t.tip()}</Typography>\n            </div>\n            <div className={classes.reportWrapper}>\n                <FormControlLabel\n                    className={classes.report}\n                    control={<Checkbox checked={autoReport} onChange={handleClick} />}\n                    label={t.report()}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default ScamAlert\n","/* eslint @masknet/unicode-specific-set: [\"error\", { \"only\": \"code\" }] */\nimport { base } from '../base.js'\nimport { Icons } from '@masknet/icons'\nimport { EnhanceableSite } from '@masknet/shared-base'\nimport { PLUGIN_DESCRIPTION, PLUGIN_NAME } from '../constants.js'\nimport { type Plugin, usePluginWrapper, usePostInfoDetails } from '@masknet/plugin-infra/content-script'\nimport { extractTextFromTypedMessage } from '@masknet/typed-message'\nimport type { ScamResult } from '@scamsniffer/detector'\nimport ScamAlert from './ScamAlert.js'\nimport { PluginScamRPC } from '../messages.js'\nimport { useAsync } from 'react-use'\nimport { useState } from 'react'\nimport { Trans } from 'react-i18next'\n\nfunction Renderer(\n    props: React.PropsWithChildren<{\n        project: ScamResult\n    }>,\n) {\n    usePluginWrapper(true)\n    return <ScamAlert result={props.project} />\n}\n\nconst site: Plugin.SiteAdaptor.Definition = {\n    ...base,\n    init(signal) {},\n    PostInspector: function Component() {\n        const links = usePostInfoDetails.mentionedLinks()\n        const author = usePostInfoDetails.author()\n        const id = usePostInfoDetails.identifier()\n        const nickname = usePostInfoDetails.nickname()\n        const message = extractTextFromTypedMessage(usePostInfoDetails.rawMessage())\n        const network = id?.identifier.network\n        const isTwitter = network === EnhanceableSite.Twitter\n        const postDetail = {\n            id: id ? id.postID : undefined,\n            nickname,\n            userId: author?.userId,\n            links: [...links],\n            content: message.isSome() ? message.value : null,\n        }\n        const [scamProject, setScamProject] = useState<ScamResult | null>(null)\n        useAsync(async () => {\n            if (!isTwitter) return\n            const scamProject = await PluginScamRPC.detectScam(postDetail)\n            if (scamProject) {\n                setScamProject(scamProject)\n            }\n        }, [])\n\n        return isTwitter && scamProject ? <Renderer project={scamProject} /> : null\n    },\n    ApplicationEntries: [\n        (() => {\n            const icon = <Icons.ScamSniffer size={36} />\n            return {\n                ApplicationEntryID: base.ID,\n                marketListSortingPriority: 19,\n                icon,\n                category: 'dapp',\n                description: <Trans i18nKey=\"__plugin_description\" defaults={PLUGIN_DESCRIPTION} ns={base.ID} />,\n                name: <Trans i18nKey=\"__plugin_name\" defaults={PLUGIN_NAME} ns={base.ID} />,\n                tutorialLink: 'https://scamsniffer.io/?utm_source=mask-setting',\n            }\n        })(),\n    ],\n}\n\nexport default site\n","type WindowTarget = LiteralUnion<'_top' | '_self' | '_parent' | '_blank'>\n\ninterface BehaviorFlags {\n    popup?: boolean\n    toolbar?: boolean\n    status?: boolean\n    resizable?: boolean\n    scrollbars?: boolean\n}\n\ninterface WindowFeatureFlags {\n    // Behavior\n    opener?: boolean\n    referrer?: boolean\n    behaviors?: BehaviorFlags\n    // Dimension\n    width?: number\n    height?: number\n    screenX?: number\n    screenY?: number\n}\n\nexport function openWindow(\n    url: string | URL | undefined | null,\n    target: WindowTarget = '_blank',\n    features: WindowFeatureFlags = {},\n): Window | null {\n    if (!url) return null\n    const flags = []\n    for (const [name, value] of Object.entries(features.behaviors ?? {})) {\n        if (value) flags.push(`${name}=1`)\n    }\n    if (!features.opener) flags.push('noopener')\n    if (!features.referrer) flags.push('noreferrer')\n    if (Number.isFinite(features.width)) flags.push(`width=${features.width}`)\n    if (Number.isFinite(features.height)) flags.push(`height=${features.height}`)\n    if (Number.isFinite(features.screenX)) flags.push(`screenX=${features.screenX}`)\n    if (Number.isFinite(features.screenY)) flags.push(`screenY=${features.screenY}`)\n    return window.open(url, target, flags.join(' '))\n}\n","import { useSyncExternalStore } from 'react'\nimport type { ValueRef, ValueRefJSON } from '@masknet/shared-base'\n\nfunction getServerSnapshot(): never {\n    throw new Error('getServerSnapshot is not supported')\n}\nexport function useValueRef<T>(ref: ValueRef<T>): Readonly<T> {\n    return useSyncExternalStore(\n        (f) => ref.addListener(f),\n        () => ref.value,\n        getServerSnapshot,\n    )\n}\n\n/** @deprecated */\nexport function useValueRefJSON<T extends object>(ref: ValueRefJSON<T>): Readonly<T> {\n    return useSyncExternalStore(\n        (f) => ref.addListener(f),\n        () => ref.asJSON,\n    )\n}\n","const cache = new WeakMap<object, object>()\n/**\n * This function provides a localImplementation that has HMR support.\n * To update, call this function with the SAME key object.\n * @param impl The implementation. Can be an async function.\n * @param key The reference object that must be the same if you're updating.\n */\nexport async function getOrUpdateLocalImplementationHMR<T extends object>(impl: () => T | Promise<T>, key: object) {\n    if (!import.meta.webpackHot) return impl()\n\n    const result: any = await impl()\n    if (!cache.has(key)) cache.set(key, Object.create(null))\n    const localImpl = cache.get(key)\n    Object.setPrototypeOf(localImpl, result)\n    return localImpl\n}\n","export const LightColor = {\n    bg: '##F9F9F9',\n    primary: '#1c68f3',\n    primaryContrastText: '#ffffff',\n    background: '#FFFFFF',\n    secondary: '#e8f0fe',\n    secondaryContrastText: '#1c68f3',\n    input: '#F6F6F8',\n    primaryBackground: '#ffffff',\n    primaryBackground2: '#FBFBFC',\n    secondaryBackground: '#f9fafa',\n    lightBackground: '#F9FAFA',\n    mainBackground: '#ffffff',\n    suspensionBackground: 'rgba(249, 250, 250, 0.8)',\n    normalBackground: '#F3F3F4',\n    twitterBackground: '#F7F9FA',\n    twitterBackgroundHover: '#EFF1F2',\n    twitterInputBackground: '#F6F8F8',\n    twitterButton: '#111418',\n    twitterButtonText: '#ffffff',\n    twitterBlue: '#1C68F3',\n    twitterBorderLine: '#EDF1F2',\n    twitterSecond: '#7B8192',\n    twitterMain: '#0F1419',\n    twitterBottom: '#ffffff',\n    twitterInfoBackground: '#AFC3E1',\n    twitterInfo: '#8CA3C7',\n    twitterBg: '#F6F8F8',\n    twitterTooltipBg: 'rgba(0,0,0,.6)',\n    twitterInput: '#EDF1F2',\n    twitterLine: '#EBEEF0',\n    redMain: '#ff5f5f',\n    redLight: '#ffafaf',\n    redContrastText: '#ffffff',\n\n    greenMain: '#3DC233',\n    greenLight: '#e6f6f0',\n\n    orangeMain: '#ffb915',\n    orangeLight: '#faf0d8',\n\n    iconLight: '#a6a9b6',\n\n    divider: '#eff3f4',\n\n    border: '#F3F3F4',\n    borderSecondary: '#536471',\n\n    textPrimary: '#111432',\n    textSecondary: '#7b8192',\n\n    secondaryInfoText: '#AFC3E1',\n    normalText: '#7B8192',\n    normalTextLight: 'rgba(255, 255, 255, 0.8)',\n    infoBackground: 'rgba(175, 195, 225, 0.15)',\n    success: '#60DFAB',\n    warning: '#FFB915',\n    blue: '#1C68F3',\n    textLink: '#1C68F3',\n    lineLight: '#E4E8F1',\n    lineLighter: '#E9E9EA',\n    textLight: '#A6A9B6',\n    lightestBackground: '#FFFFFF',\n    linkText: '#1C68F3',\n    twitter: '#2CA4EF',\n    facebook: '#4267B2',\n    white: '#ffffff',\n    bottom: '#F9FAFA',\n    main: '#1C68F3',\n    errorBackground: 'rgba(255, 95, 95, 0.15)',\n    tooltipBackground: '#ffffff',\n    warningBackground: 'rgba(255, 185, 21, 0.1)',\n    cyberconnectPrimary: '#000000',\n    errorPlugin: '#FF3545',\n    buttonPluginBackground: '#07101B',\n    textPluginColor: '#07101B',\n    buttonPluginColor: '#FFFFFF',\n}\nexport const DarkColor: typeof LightColor = {\n    bg: '#1C1C1C',\n    primary: '#1c68f3',\n    primaryContrastText: '#ffffff',\n    background: '#15171A',\n    secondary: '#242e57',\n    secondaryContrastText: '#ffffff',\n    input: '#282B49',\n    primaryBackground: '#212442',\n    primaryBackground2: '#212442',\n    secondaryBackground: '#252846',\n    lightBackground: '#2E314F',\n    mainBackground: '#111432',\n    suspensionBackground: 'rgba(27, 30, 60, 0.8)',\n    normalBackground: '#262947',\n    twitterInputBackground: '#17191D',\n    twitterBackground: '#17191D',\n    twitterBackgroundHover: '#17191D',\n    twitterButton: '#EFF3F4',\n    twitterButtonText: '#0F1419',\n    twitterBlue: '#4989FF',\n    twitterBorderLine: '#2F3336',\n    twitterInput: '#1D2023',\n    twitterSecond: '#636B72',\n    twitterMain: '#D9D9D9',\n    twitterBottom: '#000000',\n    twitterInfoBackground: '#AFC3E1',\n    twitterInfo: '#8CA3C7',\n    twitterLine: '#2F3336',\n    twitterBg: '#15171A',\n    twitterTooltipBg: 'rgba(91,112,131,.6)',\n    redMain: '#ff5f5f',\n    redLight: '#46304a',\n    redContrastText: '#ffffff',\n\n    greenMain: '#3DC233',\n    greenLight: '#314457',\n\n    orangeMain: '#ffb915',\n    orangeLight: '#463e3f',\n\n    iconLight: '#a6a9b6',\n\n    divider: '#3e455e',\n\n    border: '#3E455E',\n    borderSecondary: '#6e767d',\n\n    // TODO: ?\n    textPrimary: '#ffffff',\n    // TODO: ?\n    textSecondary: 'ghostwhite',\n\n    secondaryInfoText: '#AFC3E1',\n    normalText: 'rgba(255, 255, 255, 0.8)',\n    normalTextLight: 'rgba(255, 255, 255, 0.8)',\n\n    infoBackground: 'rgba(175, 195, 225, 0.15)',\n    success: '#60DFAB',\n    warning: '#FFB915',\n    blue: '#1C68F3',\n    textLink: '#ffffff',\n    lineLight: '#32365B',\n    lineLighter: '#32365B',\n    textLight: '#A6A9B6',\n    lightestBackground: '#212422',\n    linkText: '#ffffff',\n    twitter: '#2CA4EF',\n    facebook: '#4267B2',\n    white: '#ffffff',\n    bottom: '#000000',\n    main: '#D4D4D4',\n    errorBackground: 'rgba(255, 95, 95, 0.1)',\n    tooltipBackground: '#1A1D20',\n    warningBackground: 'rgba(255, 185, 21, 0.1)',\n    cyberconnectPrimary: '#ffffff',\n    errorPlugin: '#FF3545',\n    buttonPluginBackground: '#07101B',\n    textPluginColor: '#07101B',\n    buttonPluginColor: '#FFFFFF',\n}\nexport type Color = typeof LightColor\n","import type { Theme } from '@mui/material'\nimport { kebabCase } from 'lodash-es'\nimport { LightColor, DarkColor } from './constants.js'\n\nexport function getMaskColor(theme: Theme) {\n    if (theme.palette.mode === 'dark') return DarkColor\n    return LightColor\n}\nexport type MaskCSSVariableColor = string & {\n    /** Append alpha channel to the original color */\n    alpha(alpha: number): string\n} & ((defaultValue?: string) => string)\n\nfunction set(key: string | symbol) {\n    if (typeof key === 'symbol') return undefined\n    const cssVar = kebabCase(key)\n    function value(defaultValue?: string) {\n        // it might be an object when used in styled components.\n        if (typeof defaultValue !== 'string') defaultValue = undefined\n        const x = `var(--mask-${cssVar}${defaultValue ? ', ' + defaultValue : ''})`\n        return x\n    }\n    Object.assign(value, {\n        [Symbol.toPrimitive]: () => `var(--mask-${cssVar})`,\n        alpha: (alpha: number) => `rgba(var(--mask-${cssVar}-fragment), ${alpha})`,\n    })\n    Object.defineProperty(MaskColorVar, key, { configurable: true, enumerable: true, value })\n    return value\n}\n/**\n * @deprecated Use theme.palette.maskColor\n */\nexport const MaskColorVar: Record<keyof typeof LightColor, MaskCSSVariableColor> = {\n    __proto__: new Proxy(\n        {},\n        {\n            get: (_, p) => set(p),\n            getOwnPropertyDescriptor: (_, p) => {\n                set(p)\n                return Object.getOwnPropertyDescriptor(MaskColorVar, p)\n            },\n        },\n    ),\n} as any\n","import { createMakeStyles, type CSSObject, type Css, type Cx } from 'tss-react'\nimport { useTheme, type Theme } from '@mui/material'\n\n// Note: type refinement, see https://github.com/garronej/tss-react/issues/128\nexport const { makeStyles } = createMakeStyles({ useTheme }) as any as {\n    makeStyles: <Params = void, RuleNameSubsetReferencedInNestedSelectors extends string = never>(params?: {\n        name?: string | Record<string, unknown>\n        uniqId?: string\n    }) => <RuleName extends string>(\n        cssObjectByRuleNameOrGetCssObjectByRuleName:\n            | Record<RuleName, CSSObject>\n            | ((\n                  theme: Theme,\n                  params: Params,\n                  classes: Record<RuleNameSubsetReferencedInNestedSelectors, string>,\n              ) => Record<RuleNameSubsetReferencedInNestedSelectors | RuleName, CSSObject>),\n    ) => <StyleOverrides extends { classes?: { [key in string]?: string | undefined } }>(\n        params: Params,\n        styleOverrides?: {\n            props: StyleOverrides\n            ownerState?: Record<string, unknown>\n        },\n    ) => {\n        classes: StyleOverrides extends { classes?: { [key in infer ExtraKeys]?: string | undefined } }\n            ? Record<string extends ExtraKeys ? RuleName : ExtraKeys | RuleName, string>\n            : Record<RuleName, string>\n        theme: Theme\n        css: Css\n        cx: Cx\n    }\n}\n","import type { NonSerializableTypedMessage, Meta } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\n/**\n * A single image\n * TODO: it should be serializable but still not decided how to do that yet.\n */\nexport interface TypedMessageImage extends NonSerializableTypedMessage {\n    readonly type: 'image'\n    readonly image: string | Blob\n    readonly width?: number\n    readonly height?: number\n}\n\nexport const isTypedMessageImage = createIsType<TypedMessageImage>('image')\n\nexport function makeTypedMessageImage(\n    image: TypedMessageImage['image'],\n    size?: { width: number; height: number },\n    meta?: Meta,\n): TypedMessageImage {\n    return {\n        type: 'image',\n        serializable: false,\n        image,\n        width: size?.width,\n        height: size?.height,\n        meta,\n    }\n}\n","import type { TypedMessage, NonSerializableTypedMessage } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\nexport interface PendingPromise<T> extends Promise<T> {\n    status: 'pending'\n}\nexport interface FulfilledPromise<T> extends Promise<T> {\n    readonly status: 'fulfilled'\n    readonly value: T\n}\nexport interface RejectedPromise<T> extends Promise<T> {\n    readonly status: 'rejected'\n    readonly reason: any\n}\nexport type StatusExposedPromise<T> = PendingPromise<T> | FulfilledPromise<T> | RejectedPromise<T>\nexport interface TypedMessagePromise<T extends TypedMessage = TypedMessage> extends NonSerializableTypedMessage {\n    readonly type: 'promise'\n    readonly promise: StatusExposedPromise<T>\n    readonly meta?: undefined\n    /** What to display when the message is not ready. */\n    readonly alt?: TypedMessage\n}\n\nexport const isTypedMessagePromise = createIsType<TypedMessagePromise>('promise')\n\nexport function makeTypedMessagePromise<T extends TypedMessage = TypedMessage>(\n    promise: Promise<T>,\n    alt?: TypedMessage,\n): TypedMessagePromise<T> {\n    const x: TypedMessagePromise<T> = {\n        type: 'promise',\n        serializable: false,\n        promise: getPromiseWithStatus(promise),\n        alt,\n        meta: undefined,\n    }\n    return x\n}\nconst seen = new WeakMap<Promise<any>, StatusExposedPromise<any>>()\nfunction getPromiseWithStatus<T>(promise: Promise<T>): StatusExposedPromise<T> {\n    // let's assume it already handle the status update\n    if ('status' in promise) return promise as StatusExposedPromise<T>\n    if (seen.has(promise)) return seen.get(promise)!\n    const _ = Promise.resolve(promise) as StatusExposedPromise<T>\n    Object.defineProperty(_, 'status', { configurable: true, value: 'pending' })\n    _.then(\n        (value) => {\n            Object.defineProperties(_, {\n                status: { value: 'fulfilled' },\n                value: { value },\n            })\n        },\n        (error) => {\n            Object.defineProperties(_, {\n                status: { value: 'rejected' },\n                reason: { value: error },\n            })\n        },\n    )\n    seen.set(promise, _)\n    return _\n}\n","import type { SerializableTypedMessage, TypedMessage, Meta } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\nexport type TypedMessageText = TypedMessageTextV1\n\n/** A text message */\nexport interface TypedMessageTextV1 extends SerializableTypedMessage<1> {\n    readonly type: 'text'\n    readonly content: string\n}\n\nexport const isTypedMessageTextV1 = createIsType<TypedMessageTextV1>('text', 1)\n\nexport const isTypedMessageText: (x: TypedMessage) => x is TypedMessageText = isTypedMessageTextV1\n\nexport function makeTypedMessageText(text: string, meta?: Meta): TypedMessageTextV1 {\n    return {\n        type: 'text',\n        version: 1,\n        serializable: true,\n        content: text,\n        meta,\n    }\n}\n","import type { SerializableTypedMessage, SerializableTypedMessages, TypedMessage, Meta } from '../base.js'\nimport { isSerializableTypedMessage } from '../utils/index.js'\nimport { composeEvery } from '../utils/internal.js'\n\n/** Multiple TypedMessages (ordered) */\nexport interface TypedMessageTuple<T extends readonly TypedMessage[] = readonly TypedMessage[]> extends TypedMessage {\n    readonly type: 'tuple'\n    readonly items: T\n}\nexport interface TypedMessageTupleSerializable<\n    T extends readonly SerializableTypedMessages[] = readonly SerializableTypedMessages[],\n> extends SerializableTypedMessage<1>,\n        TypedMessageTuple<T> {\n    readonly type: 'tuple'\n}\n\nexport function isTypedMessageTuple(x: TypedMessage): x is TypedMessageTuple | TypedMessageTupleSerializable {\n    return x.type === 'tuple'\n}\n\nexport const isTypedMessageTupleSerializable: (x: TypedMessage) => x is TypedMessageTupleSerializable = composeEvery(\n    isTypedMessageTuple,\n    isSerializableTypedMessage,\n) as any\n\nexport function makeTypedMessageTuple<T extends readonly TypedMessage[] = readonly TypedMessage[]>(\n    items: T,\n    meta?: Meta,\n): TypedMessageTuple<T> {\n    return { type: 'tuple', items, meta }\n}\nexport function makeTypedMessageTupleFromList<T extends readonly TypedMessage[] = readonly TypedMessage[]>(\n    ...args: T\n): TypedMessageTuple<T> {\n    return { type: 'tuple', items: args }\n}\n\nexport function makeTypedMessageTupleSerializable<\n    T extends readonly SerializableTypedMessages[] = readonly SerializableTypedMessages[],\n>(items: T, meta?: Meta): TypedMessageTupleSerializable<T> {\n    return { type: 'tuple', version: 1, serializable: true, items, meta }\n}\n\nexport function makeTypedMessageSerializableTupleFromList<\n    T extends readonly SerializableTypedMessages[] = readonly SerializableTypedMessages[],\n>(...args: T): TypedMessageTupleSerializable<T> {\n    return { type: 'tuple', version: 1, items: args, serializable: true }\n}\n","import type { Meta, TypedMessage } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\n/**\n * This TypedMessage represents an encrypted TypedMessage.\n */\nexport interface TypedMessageMaskPayload extends TypedMessage {\n    readonly type: 'x-mask-payload'\n    readonly message: TypedMessage\n}\nexport const isTypedMessageMaskPayload = createIsType<TypedMessageMaskPayload>('x-mask-payload')\n\nexport function makeTypedMessageMaskPayload(\n    message: TypedMessageMaskPayload['message'],\n    meta?: Meta,\n): TypedMessageMaskPayload {\n    return {\n        type: 'x-mask-payload',\n        message,\n        meta,\n    }\n}\n","import type { Meta, NonSerializableWithAltTypedMessage } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\nimport { makeTypedMessageText, type TypedMessageImage, type TypedMessageText } from '../core/index.js'\n\n/** It represents a single link. */\nexport interface TypedMessageAnchor extends NonSerializableWithAltTypedMessage {\n    readonly type: 'x-anchor'\n    readonly category: 'normal' | 'user' | 'cash' | 'hash'\n    readonly href: string\n    readonly content: string\n    readonly alt: TypedMessageText\n    /** The message that should be displayed as a decorate after the link. */\n    readonly postImage?: TypedMessageImage\n}\n\nexport const isTypedMessageAnchor = createIsType<TypedMessageAnchor>('x-anchor')\n\nexport function makeTypedMessageAnchor(\n    category: TypedMessageAnchor['category'],\n    href: TypedMessageAnchor['href'],\n    content: TypedMessageAnchor['content'],\n    postImage?: TypedMessageImage,\n    meta?: Meta | undefined,\n): TypedMessageAnchor {\n    return {\n        type: 'x-anchor',\n        serializable: false,\n        category,\n        href,\n        content,\n        alt: makeTypedMessageText(`[${content}](${href})`, meta),\n        postImage,\n        meta,\n    }\n}\n","import type { TypedMessage } from '../base.js'\nimport { isTypedMessageText, isTypedMessageImage } from '../core/index.js'\nimport { isTypedMessageAnchor } from '../extension/index.js'\nimport { type Option, Some, None } from 'ts-results-es'\nimport { forEachTypedMessageChild } from '../visitor/index.js'\n\n/**\n * Get inner text from a TypedMessage\n * @param message message\n */\nexport function extractTextFromTypedMessage(\n    message: TypedMessage | null,\n    options?: { linkAsText: boolean },\n): Option<string> {\n    if (!message) return None\n\n    const text: string[] = []\n    function visitor(message: TypedMessage) {\n        if (isTypedMessageText(message)) text.push(message.content)\n        else if (isTypedMessageAnchor(message)) {\n            text.push(message.content)\n            if (options?.linkAsText) text.push(`(${message.href})`)\n        } else forEachTypedMessageChild(message, visitor)\n    }\n    visitor(message)\n    forEachTypedMessageChild(message, visitor)\n    if (text.length) return Some(text.join(' '))\n    return None\n}\nexport function extractImageFromTypedMessage(message: TypedMessage | null): Array<string | Blob> {\n    if (!message) return []\n\n    const image: Array<string | Blob> = []\n    function visitor(message: TypedMessage): void {\n        if (isTypedMessageImage(message)) return void image.push(message.image)\n        return forEachTypedMessageChild(message, visitor)\n    }\n    visitor(message)\n    forEachTypedMessageChild(message, visitor)\n    return image\n}\n","import type {\n    TypedMessage,\n    SerializableTypedMessages,\n    SerializableTypedMessage,\n    NonSerializableWithAltTypedMessage,\n} from '../base.js'\nimport { isEqual } from 'lodash-es'\n\nexport * from './extract.js'\n\nexport function isNonSerializableTypedMessageWithAlt(x: TypedMessage): x is NonSerializableWithAltTypedMessage {\n    const y = x as NonSerializableWithAltTypedMessage\n    if (y.serializable !== false) return false\n    if (!y.alt) return false\n    return isSerializableTypedMessage(y.alt)\n}\nexport function isSerializableTypedMessage(x: TypedMessage): x is SerializableTypedMessages {\n    if ((x as SerializableTypedMessage<number>).serializable) return true\n    return isNonSerializableTypedMessageWithAlt(x)\n}\n\n/**\n * This is a tree compare algorithm, may need to find a more efficient one from NPM\n */\nexport function isTypedMessageEqual(message1: TypedMessage, message2: TypedMessage): boolean {\n    if (message1.type !== message2.type) return false\n    if (message1.meta !== message2.meta) return false\n    // perform a deep equal\n    return isEqual(message1, message2)\n}\n","import type { SerializableTypedMessage, TypedMessage } from '../base.js'\n\n/** @internal */\nexport function createIsType<T extends TypedMessage>(x: T['type'], version?: number) {\n    return (y: TypedMessage): y is T => {\n        if (version !== undefined && (y as SerializableTypedMessage<number>).version !== version) return false\n        return y.type === x\n    }\n}\n/** @internal */\nexport function composeSome<Args extends any[]>(...fns: Array<(...args: Args) => boolean>) {\n    return (...args: Args) => fns.some((f) => f(...args))\n}\n\n/** @internal */\nexport function composeEvery<Args extends any[]>(...fns: Array<(...args: Args) => boolean>) {\n    return (...args: Args) => fns.every((f) => f(...args))\n}\n","import { isTypedMessagePromise, isTypedMessageTuple } from '../core/index.js'\nimport { isNonSerializableTypedMessageWithAlt } from '../utils/index.js'\nimport type { TypedMessage } from '../base.js'\nimport { isTypedMessageMaskPayload } from '../extension/index.js'\n\nexport function forEachTypedMessageChild(node: TypedMessage, visitor: (x: TypedMessage) => void | 'stop') {\n    let stop: void | 'stop'\n    if (isTypedMessageTuple(node)) {\n        for (const each of node.items) {\n            stop = visitor(each)\n            if (stop) return\n        }\n    } else if (isTypedMessagePromise(node)) {\n        // if Promise has a resolved value, we ignore it's alt.\n        if ('value' in node.promise) visitor(node.promise.value)\n        else if (node.alt) visitor(node.alt)\n    } else if (isTypedMessageMaskPayload(node)) {\n        visitor(node.message)\n    } else if (isNonSerializableTypedMessageWithAlt(node)) {\n        visitor(node.alt)\n    }\n}\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import e from\"void-elements\";var t=/\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g;function n(n){var r={type:\"tag\",name:\"\",voidElement:!1,attrs:{},children:[]},i=n.match(/<\\/?([^\\s]+?)[/\\s>]/);if(i&&(r.name=i[1],(e[i[1]]||\"/\"===n.charAt(n.length-2))&&(r.voidElement=!0),r.name.startsWith(\"!--\"))){var s=n.indexOf(\"--\\x3e\");return{type:\"comment\",comment:-1!==s?n.slice(4,s):\"\"}}for(var a=new RegExp(t),c=null;null!==(c=a.exec(n));)if(c[0].trim())if(c[1]){var o=c[1].trim(),l=[o,\"\"];o.indexOf(\"=\")>-1&&(l=o.split(\"=\")),r.attrs[l[0]]=l[1],a.lastIndex--}else c[2]&&(r.attrs[c[2]]=c[3].trim().substring(1,c[3].length-1));return r}var r=/<[a-zA-Z0-9\\-\\!\\/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g,i=/^\\s*$/,s=Object.create(null);function a(e,t){switch(t.type){case\"text\":return e+t.content;case\"tag\":return e+=\"<\"+t.name+(t.attrs?function(e){var t=[];for(var n in e)t.push(n+'=\"'+e[n]+'\"');return t.length?\" \"+t.join(\" \"):\"\"}(t.attrs):\"\")+(t.voidElement?\"/>\":\">\"),t.voidElement?e:e+t.children.reduce(a,\"\")+\"</\"+t.name+\">\";case\"comment\":return e+\"\\x3c!--\"+t.comment+\"--\\x3e\"}}var c={parse:function(e,t){t||(t={}),t.components||(t.components=s);var a,c=[],o=[],l=-1,m=!1;if(0!==e.indexOf(\"<\")){var u=e.indexOf(\"<\");c.push({type:\"text\",content:-1===u?e:e.substring(0,u)})}return e.replace(r,function(r,s){if(m){if(r!==\"</\"+a.name+\">\")return;m=!1}var u,f=\"/\"!==r.charAt(1),h=r.startsWith(\"\\x3c!--\"),p=s+r.length,d=e.charAt(p);if(h){var v=n(r);return l<0?(c.push(v),c):((u=o[l]).children.push(v),c)}if(f&&(l++,\"tag\"===(a=n(r)).type&&t.components[a.name]&&(a.type=\"component\",m=!0),a.voidElement||m||!d||\"<\"===d||a.children.push({type:\"text\",content:e.slice(p,e.indexOf(\"<\",p))}),0===l&&c.push(a),(u=o[l-1])&&u.children.push(a),o[l]=a),(!f||a.voidElement)&&(l>-1&&(a.voidElement||a.name===r.slice(2,-1))&&(l--,a=-1===l?c:o[l]),!m&&\"<\"!==d&&d)){u=-1===l?c:o[l].children;var x=e.indexOf(\"<\",p),g=e.slice(p,-1===x?void 0:x);i.test(g)&&(g=\" \"),(x>-1&&l+u.length>=0||\" \"!==g)&&u.push({type:\"text\",content:g})}}),c},stringify:function(e){return e.reduce(function(e,t){return e+a(\"\",t)},\"\")}};export default c;\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * use-subscription.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=require(\"use-sync-external-store/shim\");exports.useSubscription=function(a){return b.useSyncExternalStore(a.subscribe,a.getCurrentValue)};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/use-subscription.production.min.js');\n} else {\n  module.exports = require('./cjs/use-subscription.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * This file automatically generated from `pre-publish.js`.\n * Do not manually edit.\n */\n\nmodule.exports = {\n  \"area\": true,\n  \"base\": true,\n  \"br\": true,\n  \"col\": true,\n  \"embed\": true,\n  \"hr\": true,\n  \"img\": true,\n  \"input\": true,\n  \"link\": true,\n  \"meta\": true,\n  \"param\": true,\n  \"source\": true,\n  \"track\": true,\n  \"wbr\": true\n};\n"],"names":["createContext","useEffect","useContext","noop","emptyPluginWrapperMethods","setWrap","setWrapperName","setWidth","PluginWrapperMethodsContext","displayName","usePluginWrapper","open","options","width","name","useMemo","useSubscription","useObservableValues","map","subscription","getCurrentValue","asValues","subscribe","callback","event","on","ALL_EVENTS","createElement","ObservableMap","ObservableSet","ValueRef","useValueRef","PostInfoContext","PostInfoProvider","props","Provider","value","post","children","usePostInfoDetails","__proto__","Proxy","get","_","key","undefined","postInfo","TypeError","k","isSubscription","Object","defineProperty","configurable","x","WebExtensionMessage","serializer","DOMAIN_RPC","Symbol","getPluginMessage","pluginID","type","domain","cache","has","messageCenter","events","serialization","set","__workaround__replaceImplementationOfCreatePluginMessage__","newImpl","Map","Environment","isEnvironment","AsyncCall","AsyncGeneratorCall","getOrUpdateLocalImplementationHMR","log","requestReplay","process","env","NODE_ENV","sendLocalStack","isBackground","ManifestBackground","__workaround__replaceIsBackground__","f","getPluginRPCInternal","starter","entry","message","rpc","create","channel","send","sendToBackgroundPage","thenable","cacheGenerator","getPluginRPC","startPluginRPC","AbortController","signal","getPluginRPCGenerator","startPluginGeneratorRPC","startPluginRPCInternal","impl","Error","delegate","sendByBroadcast","PLUGIN_ID","webpackHot","accept","PluginScamRPC","useTranslation","createProxy","initValue","define","container","getPrototypeOf","setPrototypeOf","v","getOwnPropertyDescriptor","useScamSnifferTrans","t","bind","urlcat","useState","useCallback","useAsync","makeStyles","MaskColorVar","Checkbox","Typography","FormControlLabel","List","ListItemButton","ListItemIcon","ListItemText","Twitter","TwitterIcon","Link","LinkIcon","Description","DescriptionIcon","openWindow","useStyles","theme","root","display","flexDirection","alignItems","overflow","padding","spacing","list","borderTop","borderBottom","scam","background","infoBackground","borderRadius","reportWrapper","marginTop","report","fontSize","color","lineHeight","listIcon","height","desc","margin","textAlign","highlight","title","fontFamily","fontWeight","wordBreak","redMain","ScamAlert","result","classes","autoReport","setAutoReport","sendReportScam","handleClick","checked","enableAutoReport","openTwitter","link","username","twitterUsername","openSite","externalUrl","enabled","isAutoReportEnabled","div","className","variant","similarProject","primary","onClick","tip","control","onChange","label","base","Icons","EnhanceableSite","PLUGIN_DESCRIPTION","PLUGIN_NAME","extractTextFromTypedMessage","Trans","Renderer","project","site","init","PostInspector","Component","links","mentionedLinks","author","id","identifier","nickname","rawMessage","network","isTwitter","postDetail","postID","userId","content","isSome","scamProject","setScamProject","detectScam","ApplicationEntries","icon","ScamSniffer","size","ApplicationEntryID","ID","marketListSortingPriority","category","description","i18nKey","defaults","ns","tutorialLink","url","target","features","flags","entries","behaviors","push","opener","referrer","Number","isFinite","screenX","screenY","window","join","useSyncExternalStore","getServerSnapshot","ref","addListener","useValueRefJSON","asJSON","WeakMap","localImpl","LightColor","bg","primaryContrastText","secondary","secondaryContrastText","input","primaryBackground","primaryBackground2","secondaryBackground","lightBackground","mainBackground","suspensionBackground","normalBackground","twitterBackground","twitterBackgroundHover","twitterInputBackground","twitterButton","twitterButtonText","twitterBlue","twitterBorderLine","twitterSecond","twitterMain","twitterBottom","twitterInfoBackground","twitterInfo","twitterBg","twitterTooltipBg","twitterInput","twitterLine","redLight","redContrastText","greenMain","greenLight","orangeMain","orangeLight","iconLight","divider","border","borderSecondary","textPrimary","textSecondary","secondaryInfoText","normalText","normalTextLight","success","warning","blue","textLink","lineLight","lineLighter","textLight","lightestBackground","linkText","twitter","facebook","white","bottom","main","errorBackground","tooltipBackground","warningBackground","cyberconnectPrimary","errorPlugin","buttonPluginBackground","textPluginColor","buttonPluginColor","DarkColor","kebabCase","getMaskColor","palette","mode","cssVar","defaultValue","assign","toPrimitive","alpha","enumerable","p","createMakeStyles","useTheme","createIsType","isTypedMessageImage","makeTypedMessageImage","image","meta","serializable","isTypedMessagePromise","makeTypedMessagePromise","promise","alt","getPromiseWithStatus","seen","Promise","resolve","then","defineProperties","status","error","reason","isTypedMessageTextV1","isTypedMessageText","makeTypedMessageText","text","version","isSerializableTypedMessage","composeEvery","isTypedMessageTuple","isTypedMessageTupleSerializable","makeTypedMessageTuple","items","makeTypedMessageTupleFromList","args","makeTypedMessageTupleSerializable","makeTypedMessageSerializableTupleFromList","isTypedMessageMaskPayload","makeTypedMessageMaskPayload","isTypedMessageAnchor","makeTypedMessageAnchor","href","postImage","Some","None","forEachTypedMessageChild","visitor","linkAsText","length","extractImageFromTypedMessage","isEqual","isNonSerializableTypedMessageWithAlt","y","isTypedMessageEqual","message1","message2","composeSome","fns","some","every","node","stop","each"],"sourceRoot":"","x_google_ignoreList":[5,6,7,28,29,30,31,32,33,34,35,36,37,38,39,40]}