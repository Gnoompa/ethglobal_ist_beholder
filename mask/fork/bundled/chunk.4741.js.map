{"version":3,"file":"bundled/chunk.4741.js","mappings":"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","sources":["webpack://mask-network/./packages/mask/popups/components/WalletSettingList/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Personas/AccountDetail/UI.tsx","webpack://mask-network/./packages/mask/popups/pages/Personas/AccountDetail/index.tsx","webpack://mask-network/./packages/mask/popups/components/LoadingMask/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Personas/ConnectWallet/index.tsx","webpack://mask-network/./packages/mask/popups/components/SocialAccounts/index.tsx","webpack://mask-network/./packages/mask/popups/components/ConnectedWallet/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Personas/Home/UI.tsx","webpack://mask-network/./packages/mask/popups/pages/Personas/Home/index.tsx","webpack://mask-network/./packages/mask/shared-ui/hooks/usePersonasFromDB.ts","webpack://mask-network/./packages/mask/popups/pages/Personas/PersonaSignRequest/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Personas/WalletConnect/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Personas/components/AccountAvatar/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Personas/components/PersonaHeader/UI.tsx","webpack://mask-network/./packages/mask/popups/pages/Personas/components/PersonaHeader/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Personas/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletIcon/index.tsx","webpack://mask-network/./packages/shared/src/UI/wallet/FormattedBalance.tsx","webpack://mask-network/./packages/theme/src/Components/Tabs/BaseTab.tsx","webpack://mask-network/./packages/theme/src/Components/Tabs/FlexibleTab.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/ArrowBackIosNew.js","webpack://mask-network/./packages/theme/src/Components/Tabs/RoundTab.tsx","webpack://mask-network/./packages/theme/src/Components/Tabs/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useHiddenAddressConfig.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNetworkDescriptor.ts","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/TabContext/TabContext.js","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/TabPanel/tabPanelClasses.js","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/TabPanel/TabPanel.js"],"sourcesContent":["import { Icons } from '@masknet/icons'\nimport { WalletIcon, FormattedBalance, PopupHomeTabType } from '@masknet/shared'\nimport { PopupRoutes, type BindingProof } from '@masknet/shared-base'\nimport {\n    useWallets,\n    useDefaultChainId,\n    useNetworkDescriptor,\n    useWeb3Others,\n    useReverseAddress,\n    useNativeTokenBalance,\n    useNativeToken,\n} from '@masknet/web3-hooks-base'\nimport { resolveNextID_NetworkPluginID, isSameAddress, formatBalance } from '@masknet/web3-shared-base'\nimport {\n    ListItem,\n    Switch,\n    ListItemButton,\n    ListItemIcon,\n    ListItemText,\n    Typography,\n    useTheme,\n    Link,\n    Box,\n    List,\n} from '@mui/material'\nimport { useMemo, useCallback, memo } from 'react'\nimport { Trans } from 'react-i18next'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport { LoadingBase } from '@masknet/theme'\nimport { useNavigate } from 'react-router-dom'\nimport urlcat from 'urlcat'\n\ninterface WalletItemProps {\n    proof: BindingProof\n    toggleUnlisted: (identity: string, address: string) => void\n    profileIdentity?: string\n    checked: boolean\n}\n\nfunction WalletItem({ proof, toggleUnlisted, profileIdentity, checked }: WalletItemProps) {\n    const theme = useTheme()\n    const wallets = useWallets()\n    const networkPluginId = resolveNextID_NetworkPluginID(proof.platform)\n    const chainId = useDefaultChainId(networkPluginId)\n    const networkDescriptor = useNetworkDescriptor(networkPluginId, chainId)\n    const Others = useWeb3Others(networkPluginId)\n    const { data: domain } = useReverseAddress(networkPluginId, proof.identity)\n\n    const formattedAddress = Others.formatAddress(proof.identity, 4)\n    const addressLink = Others.explorerResolver.addressLink(chainId, proof.identity)\n\n    const balance = useNativeTokenBalance(networkPluginId, { account: proof.identity, chainId })\n    const { data: nativeToken } = useNativeToken(networkPluginId, { chainId })\n\n    const walletName = useMemo(() => {\n        if (domain) return domain\n        const walletAtDB = wallets.find((x) => isSameAddress(proof.identity, x.address))\n        if (walletAtDB) return walletAtDB.name\n        return formattedAddress\n    }, [domain, wallets, proof.identity, formattedAddress])\n\n    const handleSwitch = useCallback(() => {\n        if (!profileIdentity) return\n        toggleUnlisted(profileIdentity, proof.identity)\n    }, [toggleUnlisted, profileIdentity, proof.identity])\n\n    return (\n        <ListItem sx={{ padding: 0 }} secondaryAction={<Switch checked={checked} onChange={handleSwitch} />}>\n            <ListItemButton\n                sx={{ borderRadius: 2, '&:hover': { background: theme.palette.maskColor.bg }, padding: 1.5 }}>\n                <ListItemIcon style={{ minWidth: 30 }}>\n                    <WalletIcon mainIcon={networkDescriptor?.icon} />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography fontSize={12} fontWeight={700} lineHeight=\"16px\" display=\"flex\" alignItems=\"center\">\n                            {walletName}\n                            <Link\n                                underline=\"none\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={addressLink}\n                                width={14}\n                                height={14}>\n                                <Icons.LinkOut size={14} color={theme.palette.maskColor.main} />\n                            </Link>\n                        </Typography>\n                    }\n                    secondary={\n                        <Typography fontSize={12} color={theme.palette.maskColor.second} lineHeight=\"16px\">\n                            <FormattedBalance\n                                value={balance.value}\n                                decimals={nativeToken?.decimals}\n                                formatter={formatBalance}\n                                symbol={nativeToken?.symbol}\n                            />\n                        </Typography>\n                    }\n                />\n            </ListItemButton>\n        </ListItem>\n    )\n}\n\ninterface WalletListProps {\n    isValid?: boolean\n    walletProofs?: BindingProof[]\n    listingAddresses: string[]\n    toggleUnlisted: (identity: string, address: string) => void\n    loading: boolean\n    identity?: string\n}\n\nexport const WalletList = memo<WalletListProps>(function WalletList({\n    walletProofs,\n    listingAddresses,\n    toggleUnlisted,\n    loading,\n    isValid,\n    identity,\n}) {\n    const t = useMaskSharedTrans()\n    const theme = useTheme()\n    const navigate = useNavigate()\n    if (!isValid) return null\n\n    if (loading)\n        return (\n            <Box flex={1} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n                <LoadingBase size={36} />\n                <Typography mt={1.5}>{t.loading()}</Typography>\n            </Box>\n        )\n\n    if (!walletProofs?.length)\n        return (\n            <Box flex={1} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n                <Icons.EmptySimple size={36} />\n                <Typography fontSize={14} color={theme.palette.maskColor.second} mt={1.5} textAlign=\"center\">\n                    <Trans\n                        i18nKey=\"popups_empty_wallet_proofs_tips\"\n                        components={{\n                            strong: (\n                                <strong\n                                    onClick={() =>\n                                        navigate(\n                                            urlcat(PopupRoutes.Personas, { tab: PopupHomeTabType.ConnectedWallets }),\n                                        )\n                                    }\n                                    style={{ display: 'block', color: theme.palette.maskColor.main, cursor: 'pointer' }}\n                                />\n                            ),\n                        }}\n                    />\n                </Typography>\n            </Box>\n        )\n\n    return (\n        <List>\n            {walletProofs?.map((proof, index) => (\n                <WalletItem\n                    checked={listingAddresses.includes(proof.identity)}\n                    proof={proof}\n                    key={index}\n                    toggleUnlisted={toggleUnlisted}\n                    profileIdentity={identity}\n                />\n            ))}\n        </List>\n    )\n})\n","import { memo, useCallback } from 'react'\nimport { ActionButton, makeStyles } from '@masknet/theme'\nimport { Box, Button, Typography } from '@mui/material'\nimport { AccountAvatar } from '../components/AccountAvatar/index.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useNavigate } from 'react-router-dom'\nimport { Trans } from 'react-i18next'\nimport type { BindingProof, ProfileAccount } from '@masknet/shared-base'\n\nimport { WalletList } from '../../../components/WalletSettingList/index.js'\nimport { BottomController } from '../../../components/BottomController/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    avatar: {\n        boxShadow: '0px 6px 12px 0px rgba(120, 120, 120, 0.20)',\n        backdropFilter: 'blur(8px)',\n    },\n    account: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    identity: {\n        fontSize: 14,\n        fontWeight: 700,\n        marginTop: theme.spacing(1.5),\n        lineHeight: '18px',\n    },\n    tips: {\n        fontSize: 14,\n        lineHeight: '18px',\n        marginTop: theme.spacing(2),\n    },\n}))\n\ninterface AccountDetailUIProps {\n    account: ProfileAccount\n    onVerify: () => void\n    isSupportNextDotID: boolean\n    walletProofs?: BindingProof[]\n    listingAddresses: string[]\n    toggleUnlisted: (identity: string, address: string) => void\n    loading: boolean\n    onSubmit: () => void\n    submitting: boolean\n}\n\nexport const AccountDetailUI = memo<AccountDetailUIProps>(\n    ({\n        account,\n        onVerify,\n        isSupportNextDotID,\n        walletProofs,\n        toggleUnlisted,\n        listingAddresses,\n        loading,\n        onSubmit,\n        submitting,\n    }) => {\n        const t = useMaskSharedTrans()\n        const { classes } = useStyles()\n        const navigate = useNavigate()\n        const handleBack = useCallback(() => navigate(-1), [])\n\n        return (\n            <Box height=\"100%\" pb={9}>\n                <Box pt={2} px={2} display=\"flex\" flexDirection=\"column\" height=\"100%\">\n                    <Box className={classes.account}>\n                        <AccountAvatar\n                            avatar={account.avatar}\n                            network={account.identifier.network}\n                            isValid={account.is_valid}\n                            classes={{ avatar: classes.avatar }}\n                        />\n                        <Typography className={classes.identity}>@{account.identity}</Typography>\n                    </Box>\n                    <Typography className={classes.tips}>\n                        {account.is_valid ? (\n                            t.popups_display_web3_address_tips()\n                        ) : isSupportNextDotID ? (\n                            t.popups_verify_account_tips()\n                        ) : (\n                            <Trans i18nKey=\"popups_other_social_accounts_tips\" components={{ strong: <strong /> }} />\n                        )}\n                    </Typography>\n\n                    <WalletList\n                        loading={loading}\n                        walletProofs={walletProofs}\n                        listingAddresses={listingAddresses}\n                        toggleUnlisted={toggleUnlisted}\n                        isValid={isSupportNextDotID ? account.is_valid : false}\n                        identity={account.identity}\n                    />\n                </Box>\n\n                {isSupportNextDotID ? (\n                    <BottomController>\n                        <Button variant=\"outlined\" fullWidth onClick={handleBack}>\n                            {t.back()}\n                        </Button>\n                        <ActionButton loading={submitting} fullWidth onClick={account.is_valid ? onSubmit : onVerify}>\n                            {account.is_valid ? t.save() : t.popups_verify_account()}\n                        </ActionButton>\n                    </BottomController>\n                ) : null}\n            </Box>\n        )\n    },\n)\n","import { memo, useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { Trans } from 'react-i18next'\nimport { useAsyncFn } from 'react-use'\nimport { useNavigate } from 'react-router-dom'\nimport { useTheme } from '@mui/material'\nimport {\n    type EnhanceableSite,\n    PopupRoutes,\n    SOCIAL_MEDIA_SUPPORTING_NEXT_DOT_ID,\n    PluginID,\n    EMPTY_LIST,\n    EMPTY_OBJECT,\n    NextIDAction,\n    SignType,\n    MaskMessages,\n} from '@masknet/shared-base'\nimport { ConfirmDialog, PersonaContext } from '@masknet/shared'\nimport { usePopupCustomSnackbar } from '@masknet/theme'\nimport { Icons } from '@masknet/icons'\nimport { useUnlistedAddressConfig } from '@masknet/web3-hooks-base'\nimport { useUpdateEffect } from '@react-hookz/web'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventType } from '@masknet/web3-telemetry/types'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { useTitle, PageTitleContext } from '../../../hooks/index.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { AccountDetailUI } from './UI.js'\nimport Service from '#services'\nimport { DisconnectEventMap } from '../../../../shared/definitions/event.js'\nimport { queryClient } from '@masknet/shared-base-ui'\nimport { delay } from '@masknet/kit'\n\nconst AccountDetail = memo(() => {\n    const t = useMaskSharedTrans()\n    const navigate = useNavigate()\n    const theme = useTheme()\n    const { selectedAccount, currentPersona, walletProofs } = PersonaContext.useContainer()\n    const { setExtension } = useContext(PageTitleContext)\n\n    const [pendingUnlistedConfig, setPendingUnlistedConfig] = useState<Record<string, string[]>>({})\n\n    const { showSnackbar } = usePopupCustomSnackbar()\n\n    const isSupportNextDotID = selectedAccount\n        ? SOCIAL_MEDIA_SUPPORTING_NEXT_DOT_ID.includes(selectedAccount.identifier.network as EnhanceableSite)\n        : false\n\n    const [{ data: unlistedAddressConfig = EMPTY_OBJECT, isInitialLoading, refetch }, updateConfig] =\n        useUnlistedAddressConfig(\n            {\n                identifier: currentPersona?.identifier,\n                pluginID: PluginID.Web3Profile,\n                socialIds:\n                    isSupportNextDotID && selectedAccount?.is_valid && selectedAccount.identity\n                        ? [selectedAccount.identity]\n                        : EMPTY_LIST,\n            },\n            (a, b, c, d) => Service.Identity.signWithPersona(a, b, c, location.origin, d),\n        )\n\n    const listingAddresses = useMemo(() => {\n        if (!selectedAccount?.identity) return EMPTY_LIST\n        const pendingUnlistedAddresses = pendingUnlistedConfig[selectedAccount.identity] ?? EMPTY_LIST\n        const addresses = walletProofs.map((x) => x.identity)\n        return addresses.filter((x) => !pendingUnlistedAddresses.includes(x))\n    }, [pendingUnlistedConfig, selectedAccount])\n\n    const toggleUnlisted = useCallback((identity: string, address: string) => {\n        setPendingUnlistedConfig((config) => {\n            const list = config[identity] ?? []\n            return {\n                ...config,\n                [identity]: list.includes(address) ? list.filter((x) => x !== address) : [...list, address],\n            }\n        })\n    }, [])\n\n    const handleDetachProfile = useCallback(async () => {\n        try {\n            if (!selectedAccount?.identifier) return\n            await Service.SiteAdaptor.disconnectSite(selectedAccount.identifier.network)\n            await Service.Identity.detachProfile(selectedAccount.identifier)\n            MaskMessages.events.ownPersonaChanged.sendToAll()\n            queryClient.invalidateQueries(['next-id', 'bindings-by-persona', pubkey])\n            queryClient.invalidateQueries(['my-own-persona-info'])\n            showSnackbar(t.popups_disconnect_success(), {\n                variant: 'success',\n            })\n            Telemetry.captureEvent(EventType.Access, DisconnectEventMap[selectedAccount.identifier.network])\n            await delay(300)\n            navigate(-1)\n        } catch {\n            showSnackbar(t.popups_disconnect_failed(), {\n                variant: 'error',\n            })\n        }\n    }, [selectedAccount])\n\n    const [{ loading: submitting }, handleSubmit] = useAsyncFn(async () => {\n        try {\n            await updateConfig(pendingUnlistedConfig)\n            showSnackbar(t.popups_save_successfully(), {\n                variant: 'success',\n                autoHideDuration: 2000,\n            })\n        } catch {\n            showSnackbar(t.popups_save_failed(), {\n                variant: 'error',\n            })\n        }\n\n        refetch()\n    }, [pendingUnlistedConfig, t, updateConfig])\n\n    const pubkey = currentPersona?.identifier.publicKeyAsHex\n    const releaseBinding = useCallback(async () => {\n        try {\n            if (!pubkey || !selectedAccount?.identity || !selectedAccount?.platform) return\n\n            const result = await NextIDProof.createPersonaPayload(\n                pubkey,\n                NextIDAction.Delete,\n                selectedAccount.identity,\n                selectedAccount.platform,\n            )\n\n            if (!result) return\n\n            const signature = await Service.Identity.signWithPersona(\n                SignType.Message,\n                result.signPayload,\n                currentPersona.identifier,\n                location.origin,\n                true,\n            )\n\n            if (!signature) return\n\n            await Service.Identity.detachProfileWithNextID(\n                result.uuid,\n                pubkey,\n                selectedAccount.platform,\n                selectedAccount.identity,\n                result.createdAt,\n                { signature },\n            )\n\n            await Service.Identity.detachProfile(selectedAccount.identifier)\n            await Service.SiteAdaptor.disconnectSite(selectedAccount.identifier.network)\n            await delay(1000)\n\n            // Broadcast updates\n            MaskMessages.events.ownProofChanged.sendToAll()\n            MaskMessages.events.ownPersonaChanged.sendToAll()\n            await queryClient.refetchQueries(['next-id', 'bindings-by-persona', pubkey])\n            await queryClient.refetchQueries(['my-own-persona-info'])\n\n            showSnackbar(t.popups_disconnect_success(), {\n                variant: 'success',\n            })\n            navigate(-1)\n        } catch {\n            showSnackbar(t.popups_disconnect_failed(), {\n                variant: 'error',\n            })\n        }\n    }, [selectedAccount, currentPersona])\n\n    const [, onVerify] = useAsyncFn(async () => {\n        if (!selectedAccount?.identifier || !currentPersona?.identifier) return\n        await Service.SiteAdaptor.connectSite(\n            currentPersona.identifier,\n            selectedAccount.identifier.network,\n            selectedAccount.identifier,\n        )\n        window.close()\n    }, [selectedAccount, currentPersona])\n\n    useTitle(t.popups_social_account())\n\n    useEffect(() => {\n        if (!selectedAccount) navigate(PopupRoutes.Personas, { replace: true })\n        setExtension(\n            !selectedAccount?.is_valid && selectedAccount?.linkedPersona ? (\n                <Icons.Trash size={24} onClick={handleDetachProfile} />\n            ) : (\n                <Icons.Disconnect\n                    size={24}\n                    onClick={async () => {\n                        if (!currentPersona) return\n                        const confirmed = await ConfirmDialog.openAndWaitForClose({\n                            title: t.popups_disconnect_persona(),\n                            confirmVariant: 'warning',\n                            message: (\n                                <Trans\n                                    i18nKey=\"popups_persona_disconnect_tips\"\n                                    components={{\n                                        strong: (\n                                            <strong\n                                                style={{ color: theme.palette.maskColor.main, wordBreak: 'keep-all' }}\n                                            />\n                                        ),\n                                    }}\n                                    values={{\n                                        identity: selectedAccount?.identifier.userId,\n                                        personaName: currentPersona.nickname,\n                                    }}\n                                />\n                            ),\n                        })\n                        if (confirmed) {\n                            await releaseBinding()\n                        }\n                    }}\n                />\n            ),\n        )\n        return () => setExtension(undefined)\n    }, [selectedAccount, handleDetachProfile, currentPersona, releaseBinding])\n\n    useUpdateEffect(() => {\n        setPendingUnlistedConfig(unlistedAddressConfig)\n    }, [JSON.stringify(unlistedAddressConfig)])\n\n    if (!selectedAccount) return null\n\n    return (\n        <AccountDetailUI\n            account={selectedAccount}\n            onVerify={onVerify}\n            isSupportNextDotID={isSupportNextDotID}\n            walletProofs={walletProofs}\n            toggleUnlisted={toggleUnlisted}\n            listingAddresses={listingAddresses}\n            loading={isInitialLoading}\n            onSubmit={handleSubmit}\n            submitting={submitting}\n        />\n    )\n})\n\nexport default AccountDetail\n","import { LoadingBase } from '@masknet/theme'\nimport { Box, Typography, alpha, useTheme } from '@mui/material'\nimport { memo } from 'react'\n\nexport const LoadingMask = memo(function LoadingMask({ text }: { text: string }) {\n    const theme = useTheme()\n\n    return (\n        <Box\n            width={180}\n            height={140}\n            sx={{ background: theme.palette.maskColor.tips }}\n            borderRadius=\"14px\"\n            display=\"flex\"\n            justifyContent=\"center\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            rowGap=\"10px\"\n            position=\"fixed\"\n            top=\"calc(50% - 70px)\"\n            left=\"calc(50% - 90px)\">\n            <LoadingBase size={30} color={theme.palette.maskColor.bottom} />\n            <Typography\n                fontSize={14}\n                lineHeight=\"18px\"\n                fontWeight={700}\n                color={alpha(theme.palette.maskColor.bottom, 0.8)}>\n                {text}\n            </Typography>\n        </Box>\n    )\n})\n","import { memo, useCallback, useMemo } from 'react'\nimport urlcat from 'urlcat'\nimport { useAsync, useAsyncFn } from 'react-use'\nimport { useNavigate } from 'react-router-dom'\nimport { Avatar, Box, Button, Link, Typography } from '@mui/material'\nimport { ActionButton, makeStyles, usePopupCustomSnackbar } from '@masknet/theme'\nimport {\n    NextIDPlatform,\n    type NetworkPluginID,\n    NextIDAction,\n    SignType,\n    type NextIDPayload,\n    PopupRoutes,\n    PopupModalRoutes,\n    MaskMessages,\n} from '@masknet/shared-base'\nimport { formatDomainName, formatEthereumAddress, ProviderType } from '@masknet/web3-shared-evm'\nimport { FormattedAddress, PersonaContext, PopupHomeTabType, WalletIcon } from '@masknet/shared'\nimport { ExplorerResolver, NextIDProof, ProviderResolver, Web3 } from '@masknet/web3-providers'\nimport {\n    useChainContext,\n    useNetworkContext,\n    useProviderDescriptor,\n    useReverseAddress,\n    useWallets,\n} from '@masknet/web3-hooks-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { Icons } from '@masknet/icons'\n\nimport { useTitle } from '../../../hooks/index.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { BottomController } from '../../../components/BottomController/index.js'\nimport { LoadingMask } from '../../../components/LoadingMask/index.js'\nimport Services from '#services'\nimport { useModalNavigate } from '../../../components/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    provider: {\n        background: theme.palette.maskColor.bg,\n        borderRadius: 8,\n        padding: theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    accountInfo: {\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 4,\n    },\n    address: {\n        color: theme.palette.maskColor.second,\n        fontSize: 10,\n        lineHeight: '10px',\n        display: 'flex',\n        alignItems: 'center',\n    },\n    link: {\n        color: theme.palette.maskColor.second,\n        height: 10,\n    },\n    description: {\n        marginTop: theme.spacing(1.5),\n        fontSize: 12,\n        lineHeight: '16px',\n        color: theme.palette.maskColor.second,\n    },\n    bounded: {\n        fontSize: 14,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.danger,\n        marginTop: theme.spacing(1.5),\n    },\n    congratulation: {\n        fontSize: 14,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.second,\n        fontWeight: 700,\n    },\n    info: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 160,\n        rowGap: 4,\n    },\n    name: {\n        fontSize: 14,\n        lineHeight: '18px',\n        fontWeight: 700,\n    },\n}))\n\nconst ConnectWalletPage = memo(function ConnectWalletPage() {\n    const t = useMaskSharedTrans()\n\n    const { classes } = useStyles()\n    const navigate = useNavigate()\n    const modalNavigate = useModalNavigate()\n    const { showSnackbar } = usePopupCustomSnackbar()\n\n    const { pluginID } = useNetworkContext<NetworkPluginID.PLUGIN_EVM>()\n\n    const { providerType, chainId, account } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const wallets = useWallets()\n\n    const providerDescriptor = useProviderDescriptor(pluginID, providerType)\n    const { data: domain } = useReverseAddress(pluginID, account)\n    const { currentPersona } = PersonaContext.useContainer()\n\n    const { value: isBound } = useAsync(async () => {\n        if (!account || !currentPersona?.identifier.publicKeyAsHex) return false\n        return NextIDProof.queryIsBound(currentPersona.identifier.publicKeyAsHex, NextIDPlatform.Ethereum, account)\n    }, [account, currentPersona?.identifier.publicKeyAsHex])\n\n    const walletAlias = useMemo(() => {\n        if (domain) return formatDomainName(domain)\n        if (providerType !== ProviderType.MaskWallet) return `${ProviderResolver.providerName(providerType)} Wallet`\n        return wallets.find((x) => isSameAddress(x.address, account))?.name ?? formatEthereumAddress(account, 4)\n    }, [JSON.stringify(wallets), account, domain, providerType])\n\n    const walletName = useMemo(() => {\n        if (providerType === ProviderType.MaskWallet)\n            return (\n                wallets.find((x) => isSameAddress(x.address, account))?.name ??\n                (domain || formatEthereumAddress(account, 4))\n            )\n\n        return domain || formatEthereumAddress(account, 4)\n    }, [providerType, account, domain, JSON.stringify(wallets)])\n\n    const bindProof = useCallback(\n        async (payload: NextIDPayload, walletSignature: string, signature: string) => {\n            if (!currentPersona) return\n            try {\n                await NextIDProof.bindProof(\n                    payload.uuid,\n                    currentPersona.identifier.publicKeyAsHex,\n                    NextIDAction.Create,\n                    NextIDPlatform.Ethereum,\n                    account,\n                    payload.createdAt,\n                    {\n                        walletSignature,\n                        signature,\n                    },\n                )\n\n                return true\n            } catch {\n                showSnackbar(t.popups_verify_wallet_bind_fail_tips(), {\n                    variant: 'error',\n                })\n                return false\n            }\n        },\n        [account, currentPersona],\n    )\n\n    const [{ value: signResult, loading }, handleSign] = useAsyncFn(async () => {\n        try {\n            if (!currentPersona?.identifier || !account) return\n            const payload = await NextIDProof.createPersonaPayload(\n                currentPersona.identifier.publicKeyAsHex,\n                NextIDAction.Create,\n                account,\n                NextIDPlatform.Ethereum,\n                'default',\n            )\n\n            if (!payload) return\n            const personaSignature = await Services.Identity.signWithPersona(\n                SignType.Message,\n                payload.signPayload,\n                currentPersona.identifier,\n                location.origin,\n                true,\n            )\n\n            const walletSignature = await Web3.signMessage('message', payload.signPayload, {\n                chainId,\n                account,\n                providerType,\n                silent: providerType === ProviderType.MaskWallet,\n            })\n\n            const result = await bindProof(payload, walletSignature, personaSignature)\n\n            if (result) showSnackbar(t.popups_verify_wallet_sign_success_tips())\n\n            // Broadcast updates\n            MaskMessages.events.ownProofChanged.sendToAll()\n            return true\n        } catch (error) {\n            showSnackbar(t.popups_verify_wallet_sign_fail_tips(), {\n                variant: 'error',\n            })\n            return false\n        }\n    }, [currentPersona, account, chainId, account, providerType, bindProof])\n\n    const handleCancel = useCallback(async () => {\n        if (providerType === ProviderType.MaskWallet || providerType === ProviderType.WalletConnect) {\n            navigate(-1)\n            return\n        }\n        await Services.Helper.removePopupWindow()\n    }, [signResult])\n\n    const handleChooseAnotherWallet = useCallback(() => {\n        modalNavigate(PopupModalRoutes.SelectProvider)\n    }, [modalNavigate])\n\n    const handleDone = useCallback(async () => {\n        if (providerType !== ProviderType.MaskWallet) await Web3.disconnect({ providerType })\n        if (providerType === ProviderType.MaskWallet) {\n            navigate(-1)\n            return\n        }\n        if (providerType === ProviderType.WalletConnect) {\n            navigate(urlcat(PopupRoutes.Personas, { tab: PopupHomeTabType.ConnectedWallets }), {\n                replace: true,\n            })\n        }\n        await Services.Helper.removePopupWindow()\n    }, [providerType, navigate])\n\n    const handleBack = useCallback(() => {\n        navigate(urlcat(PopupRoutes.Personas, { tab: PopupHomeTabType.ConnectedWallets }), {\n            replace: true,\n        })\n    }, [])\n\n    useTitle(t.plugin_wallet_connect_a_wallet(), handleBack)\n\n    return (\n        <Box>\n            {!signResult ? (\n                <Box p={2}>\n                    <Box className={classes.provider}>\n                        <Box className={classes.accountInfo}>\n                            <WalletIcon size={30} mainIcon={providerDescriptor?.icon} />\n                            <Box>\n                                <Typography fontSize={14} fontWeight={700} lineHeight=\"18px\">\n                                    {walletAlias}\n                                </Typography>\n                                <Typography className={classes.address}>\n                                    <FormattedAddress address={account} size={4} formatter={formatEthereumAddress} />\n                                    <Link\n                                        className={classes.link}\n                                        href={account ? ExplorerResolver.addressLink(chainId, account) : '#'}\n                                        target=\"_blank\"\n                                        title={t.plugin_wallet_view_on_explorer()}\n                                        rel=\"noopener noreferrer\">\n                                        <Icons.LinkOut size={12} />\n                                    </Link>\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Button size=\"small\" onClick={handleChooseAnotherWallet}>\n                            {t.wallet_status_button_change()}\n                        </Button>\n                    </Box>\n                    {isBound ? (\n                        <Typography className={classes.bounded}>\n                            {t.popups_verify_wallet_bounded_tips({ persona: String(currentPersona?.nickname) })}\n                        </Typography>\n                    ) : null}\n                    <Typography className={classes.description}>{t.popups_verify_wallet_description()}</Typography>\n                    {loading ? <LoadingMask text={t.signing()} /> : null}\n                </Box>\n            ) : (\n                <Box p={2} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                    <Typography sx={{ mt: 3, textAlign: 'center' }} fontSize={36}>\n                        &#x1F389;\n                    </Typography>\n                    <Typography fontSize={24} lineHeight=\"120%\" fontWeight={700} my={1.5}>\n                        {t.congratulations()}\n                    </Typography>\n                    <Typography className={classes.congratulation}>\n                        {t.popups_verify_wallet_congratulation_tips({\n                            persona: String(currentPersona?.nickname),\n                            wallet: walletName,\n                        })}\n                    </Typography>\n                    <Box display=\"flex\" py={3} px={1.5} alignItems=\"center\">\n                        <Box className={classes.info}>\n                            {currentPersona?.avatar ? (\n                                <Avatar src={currentPersona.avatar} style={{ width: 36, height: 36 }} />\n                            ) : (\n                                <Icons.MenuPersonasActive size={36} style={{ borderRadius: 99 }} />\n                            )}\n                            <Typography className={classes.name}>{currentPersona?.nickname}</Typography>\n                        </Box>\n                        <Icons.Connect size={24} />\n                        <Box className={classes.info}>\n                            <WalletIcon size={30} mainIcon={providerDescriptor?.icon} />\n                            <Typography className={classes.name}>{walletName}</Typography>\n                        </Box>\n                    </Box>\n                </Box>\n            )}\n            <BottomController>\n                <Button variant=\"outlined\" fullWidth onClick={handleCancel}>\n                    {t.cancel()}\n                </Button>\n                {!signResult ? (\n                    <ActionButton fullWidth onClick={handleSign} disabled={loading || isBound}>\n                        {t.sign()}\n                    </ActionButton>\n                ) : (\n                    <ActionButton fullWidth onClick={handleDone}>\n                        {t.done()}\n                    </ActionButton>\n                )}\n            </BottomController>\n        </Box>\n    )\n})\n\nexport default ConnectWalletPage\n","import { Icons } from '@masknet/icons'\nimport { PopupModalRoutes, type EnhanceableSite, type ProfileAccount } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Typography } from '@mui/material'\nimport { memo } from 'react'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport { AccountAvatar } from '../../pages/Personas/components/AccountAvatar/index.js'\nimport { useModalNavigate } from '../ActionModal/index.js'\nimport { ConnectSocialAccounts } from '../ConnectSocialAccounts/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    tips: {\n        textAlign: 'center',\n        fontSize: 14,\n        lineHeight: '18px',\n        marginTop: theme.spacing(2),\n        color: theme.palette.maskColor.second,\n    },\n    accounts: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        columnGap: theme.spacing(1),\n        rowGap: theme.spacing(1.5),\n    },\n    accountItem: {\n        padding: theme.spacing(1.5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        borderRadius: 16,\n        cursor: 'pointer',\n        '&:hover': {\n            background: theme.palette.maskColor.bottom,\n            boxShadow: theme.palette.maskColor.bottomBg,\n            backdropFilter: 'blur(8px)',\n        },\n    },\n    identity: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        fontSize: 12,\n        lineHeight: '16px',\n        fontWeight: 700,\n        marginTop: 6,\n        maxWidth: 95,\n    },\n    connect: {\n        borderRadius: 16,\n        background: theme.palette.maskColor.bg,\n        padding: theme.spacing(3.25, 0.5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n    },\n    avatar: {\n        boxShadow: '0px 6px 12px 0px rgba(28, 104, 243, 0.20)',\n    },\n}))\n\ninterface SocialAccountsProps {\n    accounts: ProfileAccount[]\n    networks: EnhanceableSite[]\n    onConnect: (networkIdentifier: EnhanceableSite) => void\n    onAccountClick: (account: ProfileAccount) => void\n}\n\nexport const SocialAccounts = memo<SocialAccountsProps>(function SocialAccounts({\n    accounts,\n    networks,\n    onConnect,\n    onAccountClick,\n}) {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const modalNavigate = useModalNavigate()\n\n    if (!accounts.length)\n        return (\n            <Box>\n                <ConnectSocialAccounts networks={networks} onConnect={onConnect} />\n                <Typography className={classes.tips}>{t.popups_connect_social_tips()}</Typography>\n            </Box>\n        )\n    return (\n        <Box className={classes.accounts}>\n            {accounts.map((account, index) => (\n                <Box className={classes.accountItem} key={index} onClick={() => onAccountClick(account)}>\n                    <AccountAvatar\n                        avatar={account.avatar}\n                        network={account.identifier.network}\n                        isValid={account.is_valid}\n                        classes={{ avatar: classes.avatar }}\n                    />\n                    <Typography className={classes.identity}>\n                        {/* identity could mistakenly start with an `@` */}\n                        {account.identity?.startsWith('@') ? '' : '@'}\n                        {account.identity}\n                    </Typography>\n                </Box>\n            ))}\n            <Box className={classes.connect} onClick={() => modalNavigate(PopupModalRoutes.ConnectSocialAccount)}>\n                <Icons.Connect size={16} />\n                <Typography fontSize={12} fontWeight={700} lineHeight=\"18px\">\n                    {t.connect()}\n                </Typography>\n            </Box>\n        </Box>\n    )\n})\n","import { Icons } from '@masknet/icons'\nimport { ConfirmDialog, FormattedAddress, ImageIcon, PersonaContext, ProgressiveText } from '@masknet/shared'\nimport { MaskMessages, NetworkPluginID, NextIDAction, PopupModalRoutes, SignType } from '@masknet/shared-base'\nimport { makeStyles, usePopupCustomSnackbar } from '@masknet/theme'\nimport { useChainContext, useNetworkDescriptor, useWallets, useWeb3State } from '@masknet/web3-hooks-base'\nimport { ExplorerResolver, NextIDProof } from '@masknet/web3-providers'\nimport { isSameAddress, resolveNextIDPlatformWalletName } from '@masknet/web3-shared-base'\nimport { ChainId, formatDomainName, formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { Box, Link, Typography, useTheme } from '@mui/material'\nimport { useQueries } from '@tanstack/react-query'\nimport { memo, useCallback } from 'react'\nimport { Trans } from 'react-i18next'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport Services from '#services'\nimport type { ConnectedWalletInfo } from '../../pages/Personas/type.js'\nimport { useModalNavigate } from '../ActionModal/index.js'\nimport { useVerifiedWallets } from '../../hooks/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    walletList: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        gap: 12,\n    },\n    wallet: {\n        padding: theme.spacing(1.5),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        cursor: 'pointer',\n        borderRadius: 16,\n        '&:hover': {\n            background: theme.palette.maskColor.bottom,\n            boxShadow: theme.palette.maskColor.bottomBg,\n        },\n    },\n    walletInfo: {\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: 2,\n        marginLeft: theme.spacing(0.75),\n    },\n    walletIcon: {\n        boxShadow: '0px 4px 10px 0px rgba(0, 60, 216, 0.20)',\n        borderRadius: 12,\n    },\n    walletName: {\n        fontSize: 12,\n        fontWeight: 700,\n        lineHeight: '16px',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        maxWidth: 100,\n        overflow: 'hidden',\n    },\n    address: {\n        fontSize: 12,\n        fontWeight: 400,\n        lineHeight: '16px',\n        color: theme.palette.maskColor.second,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    connect: {\n        cursor: 'pointer',\n        borderRadius: 16,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: theme.palette.maskColor.bg,\n        columnGap: 4,\n        padding: '21px 0',\n    },\n}))\n\nexport const ConnectedWallet = memo(function ConnectedWallet() {\n    const t = useMaskSharedTrans()\n    const theme = useTheme()\n    const { classes } = useStyles()\n\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const localWallets = useWallets()\n    const { showSnackbar } = usePopupCustomSnackbar()\n    const { currentPersona, proofs } = PersonaContext.useContainer()\n    const modalNavigate = useModalNavigate()\n    const { NameService } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n    const wallets = useVerifiedWallets(proofs)\n\n    const queries = useQueries({\n        queries: wallets.map((wallet, index) => ({\n            enabled: !!NameService,\n            queryKey: ['persona-connected-wallet', wallet.identity, index],\n            queryFn: async () => {\n                const domain = await NameService?.reverse?.(wallet.identity)\n                if (domain) return domain\n                const localWallet = localWallets.find((x) => isSameAddress(x.address, wallet.identity))?.name\n                return localWallet || null\n            },\n        })),\n    })\n\n    // TODO: remove this after next dot id support multiple chain\n    const networkDescriptor = useNetworkDescriptor(NetworkPluginID.PLUGIN_EVM, ChainId.Mainnet)\n\n    const handleConfirmRelease = useCallback(\n        async (wallet?: ConnectedWalletInfo) => {\n            try {\n                if (!currentPersona?.identifier.publicKeyAsHex || !wallet) return\n\n                const result = await NextIDProof.createPersonaPayload(\n                    currentPersona.identifier.publicKeyAsHex,\n                    NextIDAction.Delete,\n                    wallet.identity,\n                    wallet.platform,\n                )\n\n                if (!result) return\n\n                const signature = await Services.Identity.signWithPersona(\n                    SignType.Message,\n                    result.signPayload,\n                    currentPersona.identifier,\n                    location.origin,\n                    true,\n                )\n\n                if (!signature) return\n\n                await NextIDProof.bindProof(\n                    result.uuid,\n                    currentPersona.identifier.publicKeyAsHex,\n                    NextIDAction.Delete,\n                    wallet.platform,\n                    wallet.identity,\n                    result.createdAt,\n                    { signature },\n                )\n\n                // Broadcast updates.\n                MaskMessages.events.ownProofChanged.sendToAll()\n                showSnackbar(t.popups_wallet_disconnect_success())\n            } catch {\n                showSnackbar(t.popups_wallet_disconnect_failed())\n            }\n        },\n        [currentPersona],\n    )\n\n    return (\n        <Box className={classes.walletList}>\n            {wallets.map((wallet, index) => {\n                const query = queries[index]\n                let walletName = query.data || ''\n                if (!walletName && !query.isLoading) {\n                    walletName = `${resolveNextIDPlatformWalletName(wallet.platform)} ${wallets.length - index}`\n                }\n                return (\n                    <Box className={classes.wallet} key={index}>\n                        <Box display=\"flex\" alignItems=\"center\">\n                            <ImageIcon size={24} icon={networkDescriptor?.icon} className={classes.walletIcon} />\n                            <Typography className={classes.walletInfo} component=\"div\">\n                                <ProgressiveText\n                                    className={classes.walletName}\n                                    component=\"span\"\n                                    skeletonWidth={60}\n                                    skeletonHeight={16}\n                                    loading={query.isLoading}>\n                                    {formatDomainName(walletName, 13)}\n                                </ProgressiveText>\n\n                                <Typography component=\"span\" className={classes.address}>\n                                    <FormattedAddress\n                                        address={wallet.identity}\n                                        size={4}\n                                        formatter={formatEthereumAddress}\n                                    />\n                                    <Link\n                                        style={{ width: 14, height: 14, color: theme.palette.maskColor.main }}\n                                        href={ExplorerResolver.addressLink(chainId, wallet.identity ?? '')}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\">\n                                        <Icons.LinkOut size={14} sx={{ ml: 0.25 }} />\n                                    </Link>\n                                </Typography>\n                            </Typography>\n                        </Box>\n                        <Icons.Disconnect\n                            size={16}\n                            onClick={async () => {\n                                if (!currentPersona) return\n                                const confirmed = await ConfirmDialog.openAndWaitForClose({\n                                    title: t.popups_release_bind_wallet_title(),\n                                    confirmVariant: 'warning',\n                                    message: (\n                                        <Trans\n                                            i18nKey=\"popups_wallet_disconnect_tips\"\n                                            components={{\n                                                strong: <strong style={{ color: theme.palette.maskColor.main }} />,\n                                            }}\n                                            values={{\n                                                wallet: formatEthereumAddress(wallet.identity, 4),\n                                            }}\n                                        />\n                                    ),\n                                })\n                                if (confirmed) return handleConfirmRelease(wallet)\n                            }}\n                        />\n                    </Box>\n                )\n            })}\n            <Box className={classes.connect} onClick={() => modalNavigate(PopupModalRoutes.SelectProvider)}>\n                <Icons.Connect size={16} />\n                <Typography fontSize={12} fontWeight={700} lineHeight=\"16px\">\n                    {t.connect()}\n                </Typography>\n            </Box>\n        </Box>\n    )\n})\n","import urlcat from 'urlcat'\nimport { Icons } from '@masknet/icons'\nimport {\n    type EnhanceableSite,\n    type ProfileAccount,\n    PopupModalRoutes,\n    PopupRoutes,\n    currentMaskWalletLockStatusSettings,\n    LockStatus,\n} from '@masknet/shared-base'\nimport { MaskTabList, makeStyles } from '@masknet/theme'\nimport { TabContext, TabPanel } from '@mui/lab'\nimport { Box, Tab, Typography, useTheme } from '@mui/material'\nimport { memo, useCallback } from 'react'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { SocialAccounts } from '../../../components/SocialAccounts/index.js'\nimport { ConnectedWallet } from '../../../components/ConnectedWallet/index.js'\nimport type { ConnectedWalletInfo } from '../type.js'\nimport { useModalNavigate } from '../../../components/index.js'\nimport { PersonaPublicKey } from '../../../components/PersonaPublicKey/index.js'\nimport { PersonaAvatar } from '../../../components/PersonaAvatar/index.js'\nimport { useParamTab } from '../../../hooks/index.js'\nimport { useNavigate } from 'react-router-dom'\nimport { PopupHomeTabType } from '@masknet/shared'\nimport { SelectProvider } from '../../../components/SelectProvider/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        flex: 1,\n        background: theme.palette.maskColor.bottom,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    info: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        position: 'relative',\n    },\n    content: {\n        padding: 16,\n        display: 'flex',\n        justifyContent: 'flex-start',\n        flexDirection: 'column',\n    },\n    titleWrapper: {\n        padding: 16,\n        display: 'flex',\n        marginBottom: 12,\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    title: {\n        fontSize: 24,\n        lineHeight: '120%',\n        fontStyle: 'normal',\n        fontWeight: 700,\n    },\n    addPersonaWrapper: {\n        display: 'flex',\n        width: 368,\n        padding: 12,\n        alignItems: 'center',\n        gap: 8,\n        marginBottom: 12,\n        boxShadow: '0px 0px 20px 0px rgba(0, 0, 0, 0.05)',\n        background: theme.palette.maskColor.bottom,\n        borderRadius: 8,\n        cursor: 'pointer',\n    },\n    subTitle: {\n        color: theme.palette.maskColor.main,\n        fontSize: 12,\n        fontWeight: 700,\n    },\n    description: {\n        color: theme.palette.maskColor.third,\n        fontSize: 12,\n        fontWeight: 400,\n    },\n    placeholderDescription: {\n        fontSize: 14,\n        lineHeight: '18px',\n        fontWeight: 700,\n        color: theme.palette.maskColor.third,\n        marginTop: theme.spacing(1.5),\n        textAlign: 'center',\n    },\n    edit: {\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        background: theme.palette.maskColor.bottom,\n        borderRadius: 99,\n        width: 18,\n        height: 18,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        cursor: 'pointer',\n    },\n    publicKey: {\n        fontSize: 12,\n        color: theme.palette.maskColor.second,\n    },\n    icon: {\n        color: theme.palette.maskColor.second,\n    },\n    settings: {\n        position: 'absolute',\n        top: 16,\n        right: 16,\n    },\n    header: {\n        padding: theme.spacing(2),\n        lineHeight: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        borderBottom: `1px solid ${theme.palette.maskColor.line}`,\n    },\n    logo: {\n        width: 100,\n        height: 28,\n    },\n    menu: {\n        color: theme.palette.maskColor.main,\n    },\n    tabs: {\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    groupedButton: {\n        // Increasing priority instead of using !important.\n        '&&': {\n            color: theme.palette.maskColor.second,\n        },\n    },\n    panel: {\n        padding: theme.spacing(2),\n        background: theme.palette.maskColor.bottom,\n        flex: 1,\n        maxHeight: 288,\n        overflow: 'auto',\n    },\n    mnemonicIcon: {\n        background: theme.palette.maskColor.success,\n    },\n    personaIcon: {\n        background: theme.palette.maskColor.primary,\n    },\n    iconWrapper: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 30,\n        height: 30,\n        minWidth: 30,\n        borderRadius: '100%',\n    },\n    emptyHeader: {\n        height: 140,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: theme.palette.maskColor.whiteBlue,\n    },\n}))\n\ninterface PersonaHomeUIProps {\n    hasProofs?: boolean\n    avatar?: string | null\n    fingerprint?: string\n    publicKey?: string\n    nickname?: string\n    onCreatePersona: () => void\n    onRestore: () => void\n    isEmpty?: boolean\n    accounts: ProfileAccount[]\n    networks: EnhanceableSite[]\n    onConnect: (networkIdentifier: EnhanceableSite) => void\n    onAccountClick: (account: ProfileAccount) => void\n    bindingWallets?: ConnectedWalletInfo[]\n    hasPaymentPassword?: boolean\n}\n\nexport const PersonaHomeUI = memo<PersonaHomeUIProps>(\n    ({\n        avatar,\n        fingerprint,\n        nickname,\n        onCreatePersona,\n        onRestore,\n        isEmpty,\n        accounts,\n        networks,\n        onConnect,\n        publicKey,\n        onAccountClick,\n        bindingWallets,\n        hasProofs,\n        hasPaymentPassword,\n    }) => {\n        const theme = useTheme()\n        const t = useMaskSharedTrans()\n        const navigate = useNavigate()\n        const modalNavigate = useModalNavigate()\n        const { classes, cx } = useStyles()\n\n        const [currentTab, onChange] = useParamTab<PopupHomeTabType>(PopupHomeTabType.SocialAccounts)\n\n        const onChangeTab = useCallback(\n            (event: object, value: PopupHomeTabType) => {\n                if (\n                    currentMaskWalletLockStatusSettings.value === LockStatus.LOCKED &&\n                    value === PopupHomeTabType.ConnectedWallets &&\n                    hasPaymentPassword\n                ) {\n                    navigate(urlcat(PopupRoutes.Wallet, { from: PopupRoutes.Personas, goBack: true, popup: true }))\n                    return\n                }\n                onChange(event, value)\n            },\n            [hasPaymentPassword],\n        )\n        return (\n            <div className={classes.container}>\n                {!isEmpty ? (\n                    <TabContext value={currentTab}>\n                        <Box sx={{ background: theme.palette.maskColor.modalTitleBg }}>\n                            <Box className={classes.header}>\n                                <Icons.MaskSquare className={classes.logo} />\n                                <Icons.HamburgerMenu\n                                    className={classes.menu}\n                                    onClick={() => modalNavigate(PopupModalRoutes.SwitchPersona)}\n                                />\n                            </Box>\n                            <Box className={classes.info}>\n                                <Box position=\"relative\" height=\"60px\">\n                                    <PersonaAvatar size={60} avatar={avatar} hasProofs={hasProofs} />\n                                    <Box\n                                        className={classes.edit}\n                                        onClick={() => navigate(PopupRoutes.PersonaAvatarSetting)}>\n                                        <Icons.Edit size={12} />\n                                    </Box>\n                                </Box>\n                                <Typography fontSize={18} fontWeight=\"700\" lineHeight=\"22px\" marginTop=\"8px\">\n                                    {nickname}\n                                </Typography>\n                                {fingerprint && publicKey ? (\n                                    <PersonaPublicKey\n                                        classes={{ text: classes.publicKey, icon: classes.icon }}\n                                        rawPublicKey={fingerprint}\n                                        publicHexString={publicKey}\n                                        iconSize={12}\n                                    />\n                                ) : null}\n                                <Icons.Settings2\n                                    size={20}\n                                    className={classes.settings}\n                                    onClick={() => modalNavigate(PopupModalRoutes.PersonaSettings)}\n                                />\n                            </Box>\n\n                            <MaskTabList\n                                onChange={onChangeTab}\n                                aria-label=\"persona-tabs\"\n                                classes={{ root: classes.tabs, grouped: classes.groupedButton }}>\n                                <Tab label={t.popups_social_account()} value={PopupHomeTabType.SocialAccounts} />\n                                <Tab label={t.popups_connected_wallets()} value={PopupHomeTabType.ConnectedWallets} />\n                            </MaskTabList>\n                        </Box>\n                        <TabPanel className={classes.panel} value={PopupHomeTabType.SocialAccounts} data-hide-scrollbar>\n                            <SocialAccounts\n                                accounts={accounts}\n                                networks={networks}\n                                onConnect={onConnect}\n                                onAccountClick={onAccountClick}\n                            />\n                        </TabPanel>\n                        <TabPanel\n                            className={classes.panel}\n                            value={PopupHomeTabType.ConnectedWallets}\n                            data-hide-scrollbar>\n                            {bindingWallets?.length ? <ConnectedWallet /> : <SelectProvider />}\n                        </TabPanel>\n                    </TabContext>\n                ) : (\n                    <Box className={classes.container} data-hide-scrollbar>\n                        <Box className={classes.emptyHeader}>\n                            <Icons.MaskSquare width={160} height={46} />\n                        </Box>\n                        <Box className={classes.content}>\n                            <Box className={classes.titleWrapper}>\n                                <Typography className={classes.title}>{t.welcome_to_mask()}</Typography>\n                                <Typography className={classes.placeholderDescription}>\n                                    {t.popups_add_persona_description()}\n                                </Typography>\n                            </Box>\n                            <Box className={classes.addPersonaWrapper} onClick={onCreatePersona}>\n                                <div className={cx(classes.iconWrapper, classes.personaIcon)}>\n                                    <Icons.AddUser size={20} color={theme.palette.maskColor.white} />\n                                </div>\n                                <div>\n                                    <Typography className={classes.subTitle}>{t.popups_create_persona()}</Typography>\n                                    <Typography className={classes.description}>\n                                        {t.popups_generate_a_new_persona()}\n                                    </Typography>\n                                </div>\n                            </Box>\n\n                            <Box className={classes.addPersonaWrapper} onClick={onRestore}>\n                                <div className={cx(classes.iconWrapper, classes.mnemonicIcon)}>\n                                    <Icons.PopupRestore size={20} color={theme.palette.maskColor.white} />\n                                </div>\n                                <div>\n                                    <Typography className={classes.subTitle}>{t.popups_restore_and_login()}</Typography>\n                                    <Typography className={classes.description}>\n                                        {t.popups_import_persona_description()}\n                                    </Typography>\n                                </div>\n                            </Box>\n                        </Box>\n                    </Box>\n                )}\n            </div>\n        )\n    },\n)\n","import { memo, useCallback, useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { PersonaContext } from '@masknet/shared'\nimport {\n    DashboardRoutes,\n    EMPTY_LIST,\n    PopupRoutes,\n    type EnhanceableSite,\n    type ProfileAccount,\n    NextIDPlatform,\n} from '@masknet/shared-base'\nimport { PersonaHomeUI } from './UI.js'\nimport Services from '#services'\nimport { useSupportSocialNetworks, useHasPassword } from '../../../hooks/index.js'\n\nconst PersonaHome = memo(() => {\n    const navigate = useNavigate()\n    const { avatar, currentPersona, setSelectedAccount, personas, accounts, proofs } = PersonaContext.useContainer()\n\n    const { value: definedSocialNetworks = EMPTY_LIST } = useSupportSocialNetworks()\n    const bindingWallets = useMemo(() => proofs?.filter((x) => x.platform === NextIDPlatform.Ethereum), [proofs])\n    const { hasPassword } = useHasPassword()\n\n    const onCreatePersona = useCallback(() => {\n        browser.tabs.create({\n            active: true,\n            url: browser.runtime.getURL(`/dashboard.html#${DashboardRoutes.SignUpPersona}`),\n        })\n        if (navigator.userAgent.includes('Firefox')) {\n            window.close()\n        }\n        Services.Helper.removePopupWindow()\n    }, [])\n\n    const onRestore = useCallback(() => {\n        browser.tabs.create({\n            active: true,\n            url: browser.runtime.getURL(`/dashboard.html#${DashboardRoutes.RecoveryPersona}`),\n        })\n        if (navigator.userAgent.includes('Firefox')) {\n            window.close()\n        }\n        Services.Helper.removePopupWindow()\n    }, [])\n\n    const handleConnect = useCallback(\n        async (networkIdentifier: EnhanceableSite) => {\n            if (currentPersona) {\n                await Services.SiteAdaptor.connectSite(currentPersona.identifier, networkIdentifier, undefined, true)\n            }\n        },\n        [currentPersona],\n    )\n\n    const handleAccountClick = useCallback((account: ProfileAccount) => {\n        setSelectedAccount(account)\n        navigate(PopupRoutes.AccountDetail)\n    }, [])\n\n    return (\n        <PersonaHomeUI\n            hasProofs={!!proofs?.length}\n            bindingWallets={bindingWallets}\n            accounts={accounts}\n            networks={definedSocialNetworks}\n            isEmpty={!personas?.length}\n            avatar={avatar}\n            fingerprint={currentPersona?.identifier.rawPublicKey}\n            publicKey={currentPersona?.identifier.publicKeyAsHex}\n            nickname={currentPersona?.nickname}\n            onCreatePersona={onCreatePersona}\n            onRestore={onRestore}\n            onConnect={handleConnect}\n            onAccountClick={handleAccountClick}\n            hasPaymentPassword={hasPassword}\n        />\n    )\n})\n\nexport default PersonaHome\n","import { useSubscription } from 'use-subscription'\nimport { MaskMessages, createSubscriptionFromAsyncSuspense } from '@masknet/shared-base'\nimport Services from '#services'\n\nconst personas = createSubscriptionFromAsyncSuspense(\n    () => Services.Identity.queryOwnedPersonaInformation(true),\n    MaskMessages.events.ownPersonaChanged.on,\n)\n\n/**\n * Get all owned personas from DB\n */\nexport function usePersonasFromDB() {\n    return useSubscription(personas)\n}\n","import { memo, useEffect, useState } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { Box } from '@mui/material'\nimport { ActionButton } from '@masknet/theme'\nimport { PersonaContext } from '@masknet/shared'\nimport { type PersonaInformation, PopupRoutes, SignType, MaskMessages } from '@masknet/shared-base'\nimport { MethodAfterPersonaSign } from '../../Wallet/type.js'\nimport Services from '#services'\nimport { useMaskSharedTrans, usePersonasFromDB } from '../../../../shared-ui/index.js'\nimport { SignRequestInfo } from '../../../components/SignRequestInfo/index.js'\nimport { BottomController } from '../../../components/BottomController/index.js'\n\nconst PersonaSignRequest = memo(() => {\n    const t = useMaskSharedTrans()\n    const navigate = useNavigate()\n    const [params] = useSearchParams()\n    const [requestID, setRequestID] = useState<string>()\n    const [message, setMessage] = useState<string>('')\n    const [selected, setSelected] = useState<PersonaInformation>()\n    const personas = usePersonasFromDB()\n    const { currentPersona } = PersonaContext.useContainer()\n\n    const source = params.get('source')\n\n    useEffect(() => {\n        if (!personas.length) return\n        const messageInURL = params.get('message')\n        const requestIDInURL = params.get('requestID')\n        const identifierInURL = params.get('identifier')\n        const selectedPersona = personas.find((x) => x.identifier.toText() === identifierInURL) ?? personas[0]\n\n        if (!messageInURL || !requestIDInURL || !selectedPersona) {\n            navigate(PopupRoutes.Wallet, { replace: true })\n        } else {\n            setSelected(selectedPersona)\n            setMessage(messageInURL)\n            setRequestID(requestIDInURL)\n        }\n    }, [personas, params])\n\n    const [{ loading: confirmLoading }, handleConfirm] = useAsyncFn(async () => {\n        if (!requestID || !selected) return\n        const selectedPersona = selected.identifier\n        MaskMessages.events.personaSignRequest.sendToBackgroundPage({\n            requestID,\n            selectedPersona,\n        })\n\n        const method = params.get('method') as MethodAfterPersonaSign | undefined\n\n        if (!method) {\n            window.close()\n            return\n        }\n\n        // sign request from popup\n        switch (method) {\n            case MethodAfterPersonaSign.DISCONNECT_NEXT_ID:\n                if (!message) break\n                const signature = await Services.Identity.signWithPersona(\n                    SignType.Message,\n                    message,\n                    selectedPersona,\n                    location.origin,\n                    true,\n                )\n\n                const profileIdentifier = params.get('profileIdentifier')\n                const platform = params.get('platform')\n                const identity = params.get('identity')\n                const createdAt = params.get('createdAt')\n                const uuid = params.get('uuid')\n\n                if (\n                    !signature ||\n                    !profileIdentifier ||\n                    !platform ||\n                    !identity ||\n                    !createdAt ||\n                    !uuid ||\n                    !currentPersona?.identifier.publicKeyAsHex\n                )\n                    break\n                await Services.Identity.detachProfileWithNextID(\n                    uuid,\n                    currentPersona.identifier.publicKeyAsHex,\n                    platform,\n                    identity,\n                    createdAt,\n                    {\n                        signature,\n                    },\n                )\n                const profile = currentPersona.linkedProfiles.find((x) => x.identifier.toText() === profileIdentifier)\n                if (!profile) break\n                await Services.Identity.detachProfile(profile.identifier)\n                break\n        }\n        navigate(-1)\n    }, [params, selected, requestID, message, currentPersona])\n\n    const [{ loading: cancelLoading }, handleCancel] = useAsyncFn(async () => {\n        if (!requestID) return\n        MaskMessages.events.personaSignRequest.sendToBackgroundPage({ requestID })\n        const method = params.get('method')\n        if (!method) window.close()\n        navigate(-1)\n    }, [requestID, params])\n\n    return (\n        <Box p={2}>\n            <SignRequestInfo message={message} source={source} />\n            <BottomController>\n                <ActionButton loading={cancelLoading} onClick={handleCancel} fullWidth variant=\"outlined\">\n                    {t.cancel()}\n                </ActionButton>\n                <ActionButton loading={confirmLoading} onClick={handleConfirm} fullWidth>\n                    {t.sign()}\n                </ActionButton>\n            </BottomController>\n        </Box>\n    )\n})\n\nexport default PersonaSignRequest\n","import { memo, useEffect } from 'react'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { Box, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { QRCode } from 'react-qrcode-logo'\nimport { CrossIsolationMessages, PopupRoutes } from '@masknet/shared-base'\n\nconst useStyles = makeStyles()((theme) => {\n    const isDark = theme.palette.mode === 'dark'\n    return {\n        header: {\n            background: theme.palette.maskColor.modalTitleBg,\n            padding: theme.spacing(2),\n        },\n        icon: {\n            padding: theme.spacing(1.2, 0),\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        title: {\n            marginTop: 14,\n            fontSize: 18,\n            lineHeight: '22px',\n            fontWeight: 700,\n            textAlign: 'center',\n        },\n        qrcode: {\n            width: 250,\n            height: 250,\n            boxShadow: theme.palette.maskColor.bottomBg,\n            borderRadius: theme.spacing(2),\n            overflow: 'hidden',\n        },\n        halo: {\n            position: 'relative',\n            zIndex: 2,\n            overflow: 'hidden',\n            '&:before': {\n                position: 'absolute',\n                left: '-10%',\n                top: 10,\n                zIndex: 1,\n                content: '\"\"',\n                height: 256,\n                width: 256,\n                backgroundImage: isDark\n                    ? 'radial-gradient(50% 50.00% at 50% 50.00%, #443434 0%, rgba(68, 52, 52, 0.00) 100%)'\n                    : 'radial-gradient(50% 50.00% at 50% 50.00%, #FFE9E9 0%, rgba(255, 233, 233, 0.00) 100%)',\n            },\n            '&:after': {\n                position: 'absolute',\n                left: '70%',\n                top: 20,\n                zIndex: 1,\n                content: '\"\"',\n                height: 256,\n                width: 256,\n                backgroundImage: isDark\n                    ? 'radial-gradient(50% 50.00% at 50% 50.00%, #605675 0%, rgba(56, 51, 67, 0.00) 100%)'\n                    : 'radial-gradient(50% 50.00% at 50% 50.00%, #F0E9FF 0%, rgba(240, 233, 255, 0.00) 100%)',\n            },\n        },\n        qrcodeContainer: {\n            width: 282,\n            margin: theme.spacing(2, 'auto', 0),\n            padding: theme.spacing(2),\n            backgroundColor: theme.palette.maskColor.bottom,\n            position: 'relative',\n            zIndex: 10,\n        },\n        tip: {\n            fontSize: 12,\n            marginTop: 10,\n            textAlign: 'center',\n            color: theme.palette.maskColor.second,\n        },\n    }\n})\n\nexport default memo(function WalletConnect() {\n    const t = useMaskSharedTrans()\n    const navigate = useNavigate()\n    const { classes } = useStyles()\n    const location = useLocation()\n    const uri = location.state?.uri as string | undefined\n\n    useEffect(() => {\n        return CrossIsolationMessages.events.popupWalletConnectEvent.on(({ open }) => {\n            if (open) return\n            navigate(PopupRoutes.ConnectWallet, {\n                replace: true,\n            })\n        })\n    }, [])\n\n    return (\n        <Box>\n            <Box className={classes.header}>\n                <Box>\n                    <Icons.ArrowBack onClick={() => navigate(-1)} />\n                </Box>\n                <Box className={classes.icon}>\n                    <Icons.MaskWallet size={64} />\n                </Box>\n            </Box>\n            <Typography className={classes.title}>{t.wallet_connect()}</Typography>\n\n            <div className={classes.halo}>\n                <div className={classes.qrcodeContainer}>\n                    <Box className={classes.qrcode}>\n                        <QRCode value={uri} ecLevel=\"L\" size={220} quietZone={16} eyeRadius={100} qrStyle=\"dots\" />\n                    </Box>\n                </div>\n            </div>\n            <Typography className={classes.tip}>{t.wallet_connect_tips()}</Typography>\n        </Box>\n    )\n})\n","import { makeStyles } from '@masknet/theme'\nimport { memo } from 'react'\nimport { Avatar } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { SOCIAL_MEDIA_ROUND_ICON_MAPPING } from '@masknet/shared'\nimport { EnhanceableSite } from '@masknet/shared-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        position: 'relative',\n        width: 40,\n        height: 40,\n    },\n    avatar: {\n        width: 40,\n        height: 40,\n        fontSize: 60,\n        borderRadius: 99,\n    },\n    network: {\n        height: 14,\n        width: 14,\n        borderRadius: 99,\n        position: 'absolute',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        right: -7,\n        bottom: 0,\n    },\n    valid: {\n        width: 6,\n        height: 6,\n        borderRadius: 99,\n        border: `1px solid ${theme.palette.maskColor.bottom}`,\n        position: 'absolute',\n        top: 3,\n        right: 2,\n        backgroundColor: theme.palette.maskColor.warn,\n    },\n}))\n\nexport interface AccountAvatar extends withClasses<'avatar' | 'container'> {\n    avatar?: string | null\n    network?: string\n    isValid?: boolean\n    size?: number\n}\n\nexport const AccountAvatar = memo<AccountAvatar>(({ avatar, network, isValid, ...props }) => {\n    const { classes } = useStyles(undefined, { props })\n\n    const Icon = network ? SOCIAL_MEDIA_ROUND_ICON_MAPPING[network] : null\n\n    return (\n        <div className={classes.container}>\n            {avatar ? (\n                <Avatar className={classes.avatar} src={avatar} />\n            ) : (\n                <Icons.GrayMasks className={classes.avatar} />\n            )}\n            {Icon ? (\n                <div className={classes.network}>\n                    <Icon size={14} />\n                </div>\n            ) : null}\n            {!isValid && network === EnhanceableSite.Twitter ? <div className={classes.valid} /> : null}\n        </div>\n    )\n})\n","import { memo } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { Avatar, Box, Link, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { formatPersonaFingerprint, formatPersonaName } from '@masknet/shared-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        background: theme.palette.maskColor.modalTitleBg,\n        padding: '11px 16px',\n        lineHeight: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    logo: {\n        width: 96,\n        height: 30,\n    },\n    action: {\n        background: theme.palette.maskColor.bottom,\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 4px 6px 0px rgba(0, 0, 0, 0.10)'\n                : '0px 4px 6px 0px rgba(102, 108, 135, 0.10)',\n        borderRadius: 99,\n        padding: '5px 8px 5px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n    },\n    avatar: {\n        marginRight: 4,\n        width: 30,\n        height: 30,\n    },\n    nickname: {\n        color: theme.palette.maskColor.main,\n        lineHeight: '18px',\n        fontWeight: 700,\n    },\n    identifier: {\n        fontSize: 10,\n        color: theme.palette.maskColor.second,\n        lineHeight: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    icon: {\n        width: 12,\n        height: 12,\n        color: theme.palette.maskColor.main,\n        cursor: 'pointer',\n        marginLeft: 4,\n    },\n}))\n\ninterface PersonaHeaderUIProps {\n    avatar?: string | null\n    fingerprint: string\n    nickname?: string\n    publicHexString: string\n}\n\nexport const PersonaHeaderUI = memo<PersonaHeaderUIProps>(({ avatar, fingerprint, nickname, publicHexString }) => {\n    const { classes } = useStyles()\n    return (\n        <Box className={classes.container}>\n            <Icons.Mask className={classes.logo} />\n            <div className={classes.action}>\n                {avatar ? (\n                    <Avatar src={avatar} className={classes.avatar} />\n                ) : (\n                    <Icons.Masks className={classes.avatar} />\n                )}\n                <div>\n                    <Typography className={classes.nickname}>{formatPersonaName(nickname)}</Typography>\n                    <Typography className={classes.identifier}>\n                        {formatPersonaFingerprint(fingerprint ?? '', 4)}\n                        <Link\n                            underline=\"none\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href={`https://web3.bio/${publicHexString}`}\n                            className={classes.icon}>\n                            <Icons.LinkOut size={12} />\n                        </Link>\n                    </Typography>\n                </div>\n            </div>\n        </Box>\n    )\n})\n","import { memo, useContext } from 'react'\nimport { useUpdateEffect } from '@react-hookz/web'\nimport { PopupRoutes } from '@masknet/shared-base'\nimport { PersonaContext } from '@masknet/shared'\nimport { useLocation, useMatch } from 'react-router-dom'\nimport { NormalHeader } from '../../../../components/index.js'\nimport { PageTitleContext } from '../../../../hooks/index.js'\nimport { PersonaHeaderUI } from './UI.js'\n\nexport const PersonaHeader = memo(function PersonaHeader() {\n    const location = useLocation()\n    const { currentPersona, avatar } = PersonaContext.useContainer()\n    const { setExtension } = useContext(PageTitleContext)\n    const matchHome = useMatch(PopupRoutes.Personas)\n    const matchWalletConnect = useMatch(PopupRoutes.WalletConnect)\n    const matchProfilePhoto = useMatch(PopupRoutes.PersonaAvatarSetting)\n    const matchSignRequest = useMatch(PopupRoutes.PersonaSignRequest)\n\n    useUpdateEffect(() => {\n        setExtension(undefined)\n    }, [location.pathname, setExtension])\n\n    if (matchSignRequest && currentPersona)\n        return (\n            <PersonaHeaderUI\n                avatar={avatar}\n                fingerprint={currentPersona.identifier.rawPublicKey}\n                nickname={currentPersona.nickname}\n                publicHexString={currentPersona.identifier.publicKeyAsHex}\n            />\n        )\n    if (matchHome || matchWalletConnect || matchProfilePhoto) return null\n\n    return <NormalHeader />\n})\n","import { lazy, memo, useEffect } from 'react'\nimport { useMount } from 'react-use'\nimport { Route, Routes, useNavigate, useSearchParams } from 'react-router-dom'\nimport { CrossIsolationMessages, PopupModalRoutes, PopupRoutes, relativeRouteOf } from '@masknet/shared-base'\nimport { PersonaHeader } from './components/PersonaHeader/index.js'\nimport { DefaultWeb3ContextProvider } from '@masknet/web3-hooks-base'\nimport { useModalNavigate } from '../../components/index.js'\n\nconst Home = lazy(() => import(/* webpackMode: 'eager' */ './Home/index.js'))\nconst Logout = lazy(() => import('./Logout/index.js'))\nconst PersonaSignRequest = lazy(() => import(/* webpackMode: 'eager' */ './PersonaSignRequest/index.js'))\nconst AccountDetail = lazy(() => import(/* webpackMode: 'eager' */ './AccountDetail/index.js'))\nconst ConnectWallet = lazy(() => import(/* webpackMode: 'eager' */ './ConnectWallet/index.js'))\nconst WalletConnect = lazy(() => import(/* webpackMode: 'eager' */ './WalletConnect/index.js'))\nconst ExportPrivateKey = lazy(() => import('./ExportPrivateKey/index.js'))\nconst PersonaAvatarSetting = lazy(() => import('./PersonaAvatarSetting/index.js'))\n\nconst r = relativeRouteOf(PopupRoutes.Personas)\n\nconst Persona = memo(() => {\n    const navigate = useNavigate()\n    const modalNavigate = useModalNavigate()\n\n    const [params] = useSearchParams()\n\n    useMount(() => {\n        return CrossIsolationMessages.events.popupWalletConnectEvent.on(({ open, uri }) => {\n            if (!open || location.href.includes(PopupRoutes.WalletConnect)) return\n            navigate(PopupRoutes.WalletConnect, {\n                replace: location.hash.includes('/modal/select-provider'),\n                state: {\n                    uri,\n                },\n            })\n        })\n    })\n\n    useEffect(() => {\n        const from = params.get('from')\n        const providerType = params.get('providerType')\n        if (from === PopupModalRoutes.SelectProvider && !!providerType) {\n            modalNavigate(PopupModalRoutes.ConnectProvider, { providerType })\n        }\n    }, [params])\n\n    return (\n        <DefaultWeb3ContextProvider>\n            <PersonaHeader />\n            <Routes>\n                <Route path={r(PopupRoutes.Logout)} element={<Logout />} />\n                <Route path={r(PopupRoutes.PersonaSignRequest)} element={<PersonaSignRequest />} />\n                <Route path={r(PopupRoutes.AccountDetail)} element={<AccountDetail />} />\n                <Route path={r(PopupRoutes.ConnectWallet)} element={<ConnectWallet />} />\n                <Route path={r(PopupRoutes.WalletConnect)} element={<WalletConnect />} />\n                <Route path={r(PopupRoutes.ExportPrivateKey)} element={<ExportPrivateKey />} />\n                <Route path={r(PopupRoutes.PersonaAvatarSetting)} element={<PersonaAvatarSetting />} />\n                <Route path=\"*\" element={<Home />} />\n            </Routes>\n        </DefaultWeb3ContextProvider>\n    )\n})\n\nexport default Persona\n","import { makeStyles } from '@masknet/theme'\nimport { ImageIcon } from '../ImageIcon/index.js'\n\ninterface StyleProps {\n    size: number\n    badgeIconBorderColor?: string\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, props) => ({\n    root: {\n        position: 'relative',\n        display: 'flex',\n        height: props.size,\n        width: props.size,\n    },\n    mainIcon: {\n        display: 'block',\n    },\n    badgeIcon: {\n        position: 'absolute',\n        right: -6,\n        bottom: -4,\n        border: `1px solid ${props.badgeIconBorderColor ?? theme.palette.common.white}`,\n        borderRadius: '50%',\n    },\n}))\n\ninterface WalletIconProps extends withClasses<'root' | 'mainIcon'> {\n    size?: number\n    badgeSize?: number\n    mainIcon?: string\n    badgeIcon?: string\n    badgeIconBorderColor?: string\n    iconFilterColor?: string\n}\n\nexport function WalletIcon(props: WalletIconProps) {\n    const { size = 24, badgeSize = 14, mainIcon, badgeIcon, badgeIconBorderColor, iconFilterColor } = props\n    const { classes } = useStyles(\n        {\n            size: badgeSize > size ? badgeSize : size,\n            badgeIconBorderColor,\n        },\n        { props: { classes: props.classes } },\n    )\n\n    return (\n        <div\n            className={classes.root}\n            style={{\n                height: size,\n                width: size,\n            }}>\n            {mainIcon ? (\n                <ImageIcon className={classes.mainIcon} size={size} icon={mainIcon} iconFilterColor={iconFilterColor} />\n            ) : null}\n            {badgeIcon ? <ImageIcon className={classes.badgeIcon} size={badgeSize} icon={badgeIcon} /> : null}\n        </div>\n    )\n}\n","import { Fragment } from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport { isZero, isLessThan } from '@masknet/web3-shared-base'\nimport { makeStyles } from '@masknet/theme'\n\nconst useStyles = makeStyles()((theme) => ({\n    balance: {\n        marginRight: theme.spacing(0.5),\n    },\n}))\n\nexport interface FormattedBalanceProps extends withClasses<'balance' | 'symbol'> {\n    value: BigNumber.Value | undefined\n    decimals?: number\n    significant?: number\n    symbol?: string\n    minimumBalance?: BigNumber.Value\n    formatter?: (value: BigNumber.Value, decimals?: number, significant?: number) => string\n}\n\nexport function FormattedBalance(props: FormattedBalanceProps) {\n    const { value, decimals, significant, symbol, minimumBalance, formatter = (value) => value } = props\n    const valueInt = new BigNumber(value ?? '0').toFixed(0)\n    let formatted = formatter(valueInt, decimals, significant)\n    if (minimumBalance && !isZero(formatted) && isLessThan(valueInt, minimumBalance)) {\n        // it's a BigNumber so it's ok\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\n        formatted = '<' + formatter(minimumBalance, decimals, significant).toString()\n    }\n    const { classes } = useStyles(undefined, { props })\n\n    if (symbol)\n        return (\n            <Fragment>\n                <span className={classes.balance}>{String(formatted)}</span>\n                <span className={classes?.symbol}>{symbol}</span>\n            </Fragment>\n        )\n    return <Fragment>{String(formatted)}</Fragment>\n}\n","import { Button, type ButtonProps, styled } from '@mui/material'\nimport { forwardRef } from 'react'\n\nconst BaseTabWrap = styled(Button, {\n    shouldForwardProp: (prop) => prop !== 'activated',\n})<{ activated?: boolean }>(({ theme, activated }) => ({\n    flex: 1,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    height: 36,\n    lineHeight: '18px',\n    boxShadow: activated\n        ? `0px 0px 20px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.05)'}`\n        : 'none',\n    background: activated ? theme.palette.maskColor.bottom : 'transparent',\n    borderRadius: `${theme.spacing(1.5)} ${theme.spacing(1.5)} 0px 0px !important`,\n    color: activated ? theme.palette.maskColor.main : theme.palette.maskColor.secondaryDark,\n    fontSize: 16,\n    fontWeight: 'bold',\n\n    '&:hover': {\n        boxShadow: activated ? '0 0 20px rgba(0, 0, 0, 0.05)' : 'none',\n        background: activated ? theme.palette.maskColor.bottom : 'transparent',\n    },\n    // If there is only single one tab.\n    '&:first-of-type:last-of-type': {\n        maxWidth: '25%',\n    },\n}))\n\ninterface ButtonTabProps extends React.PropsWithChildren<Omit<ButtonProps, 'onChange' | 'value' | 'selected'>> {\n    value: string\n    selected?: boolean\n    onChange?(event: object, value: string): void\n}\n\nexport const BaseTab = forwardRef<HTMLButtonElement, ButtonTabProps>((props, ref) => {\n    const activated = !!props.selected\n    const { onChange, onClick, value } = props\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        if (!activated && onChange) onChange(event, String(value))\n        if (onClick) onClick(event)\n    }\n\n    return (\n        <BaseTabWrap\n            activated={activated}\n            ref={ref}\n            role=\"tab\"\n            {...props}\n            disableElevation\n            variant=\"contained\"\n            aria-selected={activated}\n            onClick={(e) => handleClick(e)}\n            onChange={undefined}\n        />\n    )\n})\n","import { Button, type ButtonProps, styled } from '@mui/material'\nimport { memo, useEffect, useRef } from 'react'\n\nconst FlexibleTabTabWrap = styled(Button, {\n    shouldForwardProp: (prop) => prop !== 'activated',\n})<{ activated?: boolean; color?: string }>(({ theme, activated }) => ({\n    flexShrink: 0,\n    flexGrow: 0,\n    padding: theme.spacing(1.25, 1.5),\n    height: 38,\n    lineHeight: '16px',\n    minWidth: theme.spacing(3),\n    background: activated ? theme.palette.maskColor.input : 'transparent',\n    borderRadius: `${theme.spacing(1)} !important`,\n    color: activated ? theme.palette.maskColor.highlight ?? '#1C68F3' : theme.palette.text.secondary,\n    fontSize: 14,\n    fontWeight: 'bold !important',\n\n    '&:hover': {\n        background: activated ? theme.palette.maskColor.input : 'transparent',\n        color: activated ? theme.palette.maskColor.highlight ?? '#1C68F3' : theme.palette.text.primary,\n        boxShadow: 'none',\n    },\n}))\n\ninterface ButtonTabProps extends React.PropsWithChildren<Omit<ButtonProps, 'onChange' | 'value' | 'selected'>> {\n    value: string\n    selected?: boolean\n    isVisitable: (top: number, right: number) => boolean\n    onChange?(event: object, value: string, isUp: boolean): void\n}\n\nexport const FlexibleTab = memo<ButtonTabProps>((props) => {\n    const activated = !!props.selected\n    const { onChange, onClick, value } = props\n    const { isVisitable, ...rest } = props\n    const ref = useRef<HTMLButtonElement>(null)\n\n    useEffect(() => {\n        if (!activated) return\n        const visitable = isVisitable(\n            ref.current?.getBoundingClientRect().top ?? 0,\n            ref.current?.getBoundingClientRect().right ?? 0,\n        )\n        if (!visitable) onChange?.({}, String(value), visitable)\n    }, [])\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const visitable = isVisitable(\n            ref.current?.getBoundingClientRect().top ?? 0,\n            ref.current?.getBoundingClientRect().right ?? 0,\n        )\n        if (!activated && onChange) onChange(event, String(value), visitable)\n        if (onClick) onClick(event)\n    }\n\n    return (\n        <FlexibleTabTabWrap\n            activated={activated}\n            ref={ref}\n            role=\"tab\"\n            {...rest}\n            disableElevation\n            variant=\"contained\"\n            aria-selected={activated}\n            onClick={handleClick}\n            onChange={undefined}\n        />\n    )\n})\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z\"\n}), 'ArrowBackIosNew');","import { Button, type ButtonProps, styled } from '@mui/material'\nimport { forwardRef } from 'react'\n\nconst RoundTabWrap = styled(Button, {\n    shouldForwardProp: (prop) => prop !== 'activated',\n})<{ activated?: boolean }>(({ theme, activated }) => ({\n    flex: 1,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    height: 34,\n    lineHeight: '16px',\n    background: activated ? theme.palette.maskColor.bottom : 'transparent',\n    borderRadius: `${theme.spacing(2)} !important`,\n    color: activated ? theme.palette.text.primary : theme.palette.text.secondary,\n    fontSize: 14,\n    fontWeight: 'bold',\n    boxShadow: activated ? ' 0px 2px 5px 1px rgba(0, 0, 0, 0.05);' : 'none',\n\n    '&:hover': {\n        boxShadow: activated ? ' 0px 2px 5px 1px rgba(0, 0, 0, 0.05);' : 'none',\n        color: theme.palette.text.primary,\n        background: activated ? theme.palette.maskColor.bottom : 'transparent',\n    },\n}))\n\ninterface ButtonTabProps extends React.PropsWithChildren<Omit<ButtonProps, 'onChange' | 'value' | 'selected'>> {\n    value: string\n    selected?: boolean\n    onChange?(event: object, value: string): void\n}\n\nexport const RoundTab = forwardRef<HTMLButtonElement, ButtonTabProps>((props, ref) => {\n    const activated = !!props.selected\n    const { onChange, onClick, value } = props\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        if (!activated && onChange) onChange(event, String(value))\n        if (onClick) onClick(event)\n    }\n\n    return (\n        <RoundTabWrap\n            activated={activated}\n            ref={ref}\n            role=\"tab\"\n            {...props}\n            disableElevation\n            variant=\"contained\"\n            aria-selected={activated}\n            onClick={handleClick}\n            onChange={undefined}\n        />\n    )\n})\n","import {\n    Box,\n    Button,\n    ButtonGroup,\n    type ButtonGroupProps,\n    styled,\n    Tab,\n    alpha,\n    type ButtonGroupClasses,\n} from '@mui/material'\nimport { useTabContext, getPanelId, getTabId } from '@mui/lab'\nimport {\n    forwardRef,\n    Children,\n    isValidElement,\n    useState,\n    useRef,\n    useEffect,\n    useImperativeHandle,\n    type ForwardRefExoticComponent,\n    useMemo,\n} from 'react'\nimport { BaseTab } from './BaseTab.js'\nimport { FlexibleTab } from './FlexibleTab.js'\nimport { ArrowBackIosNew as ArrowBackIosNewIcon } from '@mui/icons-material'\nimport { useClickAway, useWindowSize } from 'react-use'\nimport { RoundTab } from './RoundTab.js'\n\ntype MaskTabVariant = 'base' | 'flexible' | 'round'\nconst defaultTabSize = 38\n\nexport interface MaskTabListProps\n    extends Omit<ButtonGroupProps, 'variant' | 'onChange' | 'classes'>,\n        withClasses<keyof ButtonGroupClasses | 'arrowButton'> {\n    onChange(event: object, value: string): void\n    'aria-label'?: string\n    variant?: MaskTabVariant\n    hideArrowButton?: boolean\n}\n\nconst ArrowButtonWrap = styled(Button)(({ theme }) => ({\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    padding: theme.spacing(1.5),\n    height: defaultTabSize,\n    width: defaultTabSize,\n    minWidth: `${defaultTabSize}px !important`,\n    background: theme.palette.background.input,\n    '&:hover': {\n        background: theme.palette.background.input,\n    },\n}))\n\nconst ArrowBackIosNewIconWrap = styled(ArrowBackIosNewIcon)(({ theme }) => ({\n    color: theme.palette.text.primary,\n    width: 16,\n    borderRadius: '0 8px 8px 0',\n}))\n\nconst FlexibleButtonGroupPanel = styled(Box, {\n    shouldForwardProp: (prop) => prop !== 'isOpen',\n})<{\n    isOpen?: boolean\n}>(({ theme, isOpen = false }) => ({\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 100,\n    padding: theme.spacing(1.5),\n    maxWidth: 'calc(100% - 24px)',\n    width: 'calc(100% - 24px)',\n    boxShadow: isOpen\n        ? `0px 0px 20px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.05)'}`\n        : 'none',\n    backdropFilter: 'blur(20px)',\n    background: alpha(theme.palette.maskColor.bottom, 0.8),\n    boxSizing: 'content-box',\n}))\n\nconst ButtonGroupWrap = styled(ButtonGroup, {\n    shouldForwardProp: (prop) => prop !== 'maskVariant',\n})<{\n    maskVariant?: MaskTabVariant\n}>(({ theme, maskVariant = 'base' }) => ({\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'nowrap',\n    overflowY: 'clip',\n    flex: 1,\n    gap: theme.spacing(1),\n    ...(maskVariant === 'round'\n        ? {\n              padding: theme.spacing(0.5),\n              background: theme.palette.maskColor.input,\n              borderRadius: 18,\n          }\n        : maskVariant === 'flexible'\n        ? {\n              background: 'transparent',\n              borderRadius: 0,\n          }\n        : {\n              marginTop: theme.spacing(-1),\n              paddingTop: theme.spacing(1),\n              background: 'transparent',\n              borderRadius: 0,\n          }),\n}))\n\nconst FlexButtonGroupWrap = styled(ButtonGroup, {\n    shouldForwardProp: (prop) => prop !== 'maskVariant' && prop !== 'isOpen' && prop !== 'isOverflow',\n})<{\n    maskVariant?: MaskTabVariant\n    isOpen?: boolean\n    isOverflow?: boolean\n}>(({ theme, maskVariant = 'base', isOpen = false, isOverflow = false }) => ({\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: isOpen ? 'wrap' : 'nowrap',\n    overflow: 'hidden',\n    flex: 1,\n    maxWidth: '100%',\n    paddingRight: isOpen ? defaultTabSize : 0,\n    gap: maskVariant !== 'base' ? theme.spacing(1) : 0,\n    borderRadius: 0,\n    background:\n        !isOpen && isOverflow\n            ? theme.palette.mode === 'light'\n                ? `linear-gradient(270deg, rgba(255,255,255,1) ${defaultTabSize}px, rgba(223, 229, 244, 0.8) ${defaultTabSize}px, rgba(244, 247, 254, 0) 72px)`\n                : `linear-gradient(270deg, transparent ${defaultTabSize}px, rgba(49, 49, 49, 0.8) ${defaultTabSize}px, rgba(23, 23, 23, 0) 72px)`\n            : 'transparent',\n}))\n\nconst tabMapping: {\n    [key in MaskTabVariant]: ForwardRefExoticComponent<any>\n} = {\n    flexible: FlexibleTab,\n    round: RoundTab,\n    base: BaseTab,\n}\n\n/**\n * This component is like TabList + Tabs in the @mui/material.\n * It should be used with <ButtonGroupTab>.\n *\n * Warning: Only a few \"value\" and \"label\" props on the @mui/material <Tab> component will work.\n *\n * @example\n *  const [currentTab, onChange, tabs, setTab] = useTabs('tab1', 'tab2', 'tab3')\n *  return (\n *      <TabContext value={currentTab}>\n *          <MaskTabList onChange={onChange}>\n *              <Tab label=\"Item One\" value={tabs.tab1} />\n *              <Tab label=\"Item Two\" value={tabs.tab2} />\n *              <Tab label=\"Item Three\" value={tabs.tab3} />\n *          </MaskTabList>\n *          <TabPanel value={tabs.tab1}>Item One</TabPanel>\n *          <TabPanel value={tabs.tab2}>Item Two</TabPanel>\n *          <TabPanel value={tabs.tab3}>Item Three</TabPanel>\n *      </TabContext>\n *  )\n */\nexport const MaskTabList = forwardRef<HTMLDivElement, MaskTabListProps>((props, ref) => {\n    const context = useTabContext()\n    const classes = props.classes\n\n    const [open, handleToggle] = useState(false)\n    const [isTabsOverflow, setIsTabsOverflow] = useState(false)\n    const [firstId, setFirstTabId] = useState<string | undefined>(context?.value)\n    const innerRef = useRef<HTMLDivElement>(null)\n    const anchorRef = useRef<HTMLDivElement>(null)\n    const flexPanelRef = useRef(null)\n    const { width } = useWindowSize()\n\n    if (context === null) throw new TypeError('No TabContext provided')\n\n    const { onChange, variant = 'base', hideArrowButton, ...rest } = props\n\n    useImperativeHandle(ref, () => innerRef?.current!)\n\n    // #region hide tab should up to first when chick\n    useEffect(() => {\n        if (!innerRef?.current) return\n\n        const current = innerRef.current\n        setIsTabsOverflow(current.scrollWidth >= current.clientWidth + defaultTabSize)\n    }, [innerRef?.current, width])\n    // #endregion\n\n    const children = Children.map(props.children, (child) => {\n        if (!isValidElement(child)) throw new TypeError('Invalided Children')\n        const extra = {\n            'aria-controls': getPanelId(context, child.props.value),\n            id: getTabId(context, child.props.value),\n            selected: child.props.value === context.value,\n            className: child.props.className,\n            onChange: (event: object, value: string, visitable?: boolean) => {\n                handleToggle(false)\n                props.onChange(event, value)\n                if (variant === 'flexible' && !visitable) {\n                    setFirstTabId(value)\n                }\n            },\n        }\n\n        if (child.type !== Tab) return child\n\n        if (variant === 'flexible') {\n            Object.assign(extra, {\n                // if move tab to first in flexible tabs\n                isVisitable: (top: number, right: number) => {\n                    const anchor = anchorRef.current?.getBoundingClientRect()\n                    return right <= (anchor?.right ?? 0) - defaultTabSize && top - (anchor?.top ?? 0) < defaultTabSize\n                },\n            })\n        }\n        const C = tabMapping[variant]\n        return (\n            <C value={child.props.value} {...extra}>\n                {child.props.label}\n            </C>\n        )\n    })\n\n    // #region hide tab should up to first when chick\n    const flexibleTabs = useMemo(() => {\n        if (variant !== 'flexible') return null\n        return children?.sort((a, b) => {\n            if (a.props.value === firstId) return -1\n            if (b.props.value === firstId) return 1\n            return 0\n        })\n    }, [firstId, children])\n    // #endregion\n\n    // #region Should close panel when click other area\n    useClickAway(flexPanelRef, (event) => {\n        if (variant !== 'flexible') return\n        const { left, right, top, bottom } = innerRef.current?.getBoundingClientRect() ?? {\n            right: 0,\n            left: 0,\n            top: 0,\n            bottom: 0,\n        }\n        const pointerX = (event as MouseEvent).x ?? 0\n        const pointerY = (event as MouseEvent).y ?? 0\n\n        if (pointerX > right || pointerX < left || pointerY < top || pointerY > bottom) handleToggle(false)\n    })\n    // #endregion\n\n    if (variant === 'flexible') {\n        return (\n            <Box position=\"relative\">\n                <ButtonGroupWrap\n                    maskVariant={variant}\n                    ref={anchorRef}\n                    style={{ visibility: 'hidden', height: defaultTabSize }}\n                />\n                <FlexibleButtonGroupPanel isOpen={!!(open && isTabsOverflow)} ref={flexPanelRef}>\n                    <FlexButtonGroupWrap\n                        maskVariant={variant}\n                        isOpen={open}\n                        isOverflow={!!(isTabsOverflow && !hideArrowButton)}\n                        {...rest}\n                        ref={innerRef}\n                        role=\"tablist\">\n                        {flexibleTabs}\n                        {(isTabsOverflow || open) && !hideArrowButton ? (\n                            <ArrowButtonWrap\n                                className={classes?.arrowButton}\n                                variant=\"text\"\n                                size=\"small\"\n                                aria-controls={open ? 'split-button-menu' : undefined}\n                                aria-expanded={open ? 'true' : undefined}\n                                aria-label=\"select tabs list\"\n                                aria-haspopup=\"menu\"\n                                onClick={() => handleToggle(!open)}>\n                                <ArrowBackIosNewIconWrap\n                                    sx={{ transform: open ? 'rotate(90deg)' : 'rotate(270deg)' }}\n                                />\n                            </ArrowButtonWrap>\n                        ) : null}\n                    </FlexButtonGroupWrap>\n                </FlexibleButtonGroupPanel>\n            </Box>\n        )\n    }\n\n    return (\n        <ButtonGroupWrap maskVariant={variant} {...rest} ref={innerRef} role=\"tablist\">\n            {children}\n        </ButtonGroupWrap>\n    )\n})\n\nMaskTabList.displayName = 'MaskTabList'\n","import { EMPTY_LIST, EMPTY_OBJECT, NextIDPlatform, type PluginID, type PersonaIdentifier } from '@masknet/shared-base'\nimport { useQuery, type UseQueryResult } from '@tanstack/react-query'\nimport { Web3Storage } from '@masknet/web3-providers'\nimport { useCallback, useMemo } from 'react'\nimport type { WalletAPI } from '@masknet/web3-providers/types'\n\ntype AddressData = Record<string, string[]> | string[]\ntype StorageValueV1 = string[]\ntype StorageValueV2 = { hiddenAddresses?: string[] }\ntype StorageValueV3 = { hiddenAddresses?: Record<string, string[]> }\ntype CurrentStorageValue = StorageValueV3\ntype StorageValue = StorageValueV1 | StorageValueV2 | StorageValueV3\n\n/**\n *\n * Get unlisted address by persona pubkey.\n *\n * @param personaPubkey The persona identifier in hex string\n * @param pluginID The plugin id as store key\n * @returns\n */\nexport function useHiddenAddressConfig(\n    personaPubkey: string | undefined,\n    pluginID: PluginID | undefined,\n    signWithPersona: WalletAPI.IOContext['signWithPersona'],\n) {\n    return useQuery({\n        queryKey: ['next-id', 'hidden-address', pluginID, personaPubkey],\n        enabled: !!personaPubkey,\n        queryFn: async () => {\n            if (!pluginID || !personaPubkey) return EMPTY_OBJECT\n            const storage = Web3Storage.createNextIDStorage(\n                personaPubkey,\n                NextIDPlatform.NextID,\n                personaPubkey,\n                signWithPersona,\n            )\n\n            const result = await storage.get<StorageValue>(pluginID)\n            if (!result) return EMPTY_OBJECT\n\n            // When the tips data is legacy\n            if (Array.isArray(result)) return result\n\n            if (!result.hiddenAddresses) return EMPTY_OBJECT\n\n            if (Array.isArray(result.hiddenAddresses)) return result.hiddenAddresses\n            return result.hiddenAddresses ?? EMPTY_OBJECT\n        },\n    })\n}\n\nexport function useHiddenAddressConfigOf(\n    personaPubkey: string | undefined,\n    pluginID: PluginID | undefined,\n    socialId: string | undefined,\n    signWithPersona: WalletAPI.IOContext['signWithPersona'],\n) {\n    const result = useHiddenAddressConfig(personaPubkey, pluginID, signWithPersona)\n    return {\n        ...result,\n        // Identities of Twitter proof get lowered case.\n        data: result.data ? getHiddenAddressesOf(result.data, socialId?.toLowerCase()) : undefined,\n    }\n}\n\ninterface Options {\n    /** To update storage, a signer is required */\n    identifier?: PersonaIdentifier\n    pluginID: PluginID\n    /** For data migration */\n    socialIds?: string[]\n}\n\ntype ConfigResult = [UseQueryResult<Record<string, string[]>>, (config: Record<string, string[]>) => Promise<void>]\n/**\n * Provider address config and data updater\n */\nexport function useUnlistedAddressConfig(\n    { identifier, pluginID, socialIds }: Options,\n    signWithPersona: WalletAPI.IOContext['signWithPersona'],\n): ConfigResult {\n    const query = useHiddenAddressConfig(identifier?.publicKeyAsHex, pluginID, signWithPersona)\n    const { data: unlistedAddressConfig } = query\n\n    const migratedUnlistedAddressConfig = useMemo(() => {\n        if (!unlistedAddressConfig || !socialIds?.length) return EMPTY_OBJECT\n        if (!Array.isArray(unlistedAddressConfig)) return unlistedAddressConfig\n\n        return hiddenAddressesAdapter(unlistedAddressConfig, socialIds)\n    }, [unlistedAddressConfig, socialIds])\n\n    const updateConfig = useCallback(\n        async (config: Record<string, string[]>) => {\n            if (!identifier) return\n            const storage = Web3Storage.createNextIDStorage(\n                identifier.publicKeyAsHex,\n                NextIDPlatform.NextID,\n                identifier,\n                signWithPersona,\n            )\n            await storage.set<CurrentStorageValue>(pluginID, {\n                hiddenAddresses: config,\n            })\n        },\n        [pluginID, identifier],\n    )\n\n    return [{ ...query, data: migratedUnlistedAddressConfig } as UseQueryResult<Record<string, string[]>>, updateConfig]\n}\n\nexport function hiddenAddressesAdapter(list: string[], accounts: string[]): Record<string, string[]> {\n    return Object.fromEntries(accounts.map((account) => [account, list]))\n}\n\nexport function getHiddenAddressesOf(config?: AddressData, socialId?: string) {\n    if (!config) return EMPTY_LIST\n    if (Array.isArray(config)) return config\n    return socialId ? config[socialId] ?? EMPTY_LIST : EMPTY_LIST\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport { getRegisteredWeb3Networks } from '@masknet/web3-providers'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext, useNetworkContext } from './useContext.js'\n\n/**\n * Get built in declared network descriptor\n * @param expectedPluginID\n * @param expectedChainIdOrNetworkTypeOrID\n * @returns\n */\nexport function useNetworkDescriptor<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n    expectedChainIdOrNetworkTypeOrID?: string | number,\n): Web3Helper.NetworkDescriptorScope<S, T> | undefined {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    const { networkType } = useChainContext()\n\n    return getRegisteredWeb3Networks(pluginID).find((x) =>\n        [x.chainId, x.type, x.ID].includes(expectedChainIdOrNetworkTypeOrID ?? networkType ?? ''),\n    )\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-T-${value}`;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\n\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n\n  const {\n    children,\n    className,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props);\n\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;"],"names":["Icons","WalletIcon","FormattedBalance","PopupHomeTabType","PopupRoutes","useWallets","useDefaultChainId","useNetworkDescriptor","useWeb3Others","useReverseAddress","useNativeTokenBalance","useNativeToken","resolveNextID_NetworkPluginID","isSameAddress","formatBalance","ListItem","Switch","ListItemButton","ListItemIcon","ListItemText","Typography","useTheme","Link","Box","List","useMemo","useCallback","memo","Trans","useMaskSharedTrans","LoadingBase","useNavigate","urlcat","WalletItem","proof","toggleUnlisted","profileIdentity","checked","theme","wallets","networkPluginId","platform","chainId","networkDescriptor","Others","data","domain","identity","formattedAddress","formatAddress","addressLink","explorerResolver","balance","account","nativeToken","walletName","walletAtDB","find","x","address","name","handleSwitch","sx","padding","secondaryAction","onChange","borderRadius","background","palette","maskColor","bg","style","minWidth","mainIcon","icon","primary","fontSize","fontWeight","lineHeight","display","alignItems","underline","target","rel","href","width","height","LinkOut","size","color","main","secondary","second","value","decimals","formatter","symbol","WalletList","walletProofs","listingAddresses","loading","isValid","t","navigate","flex","justifyContent","flexDirection","mt","length","EmptySimple","textAlign","i18nKey","components","strong","onClick","Personas","tab","ConnectedWallets","cursor","map","index","includes","ActionButton","makeStyles","Button","AccountAvatar","BottomController","useStyles","avatar","boxShadow","backdropFilter","marginTop","spacing","tips","AccountDetailUI","onVerify","isSupportNextDotID","onSubmit","submitting","classes","handleBack","pb","pt","px","className","network","identifier","is_valid","popups_display_web3_address_tips","popups_verify_account_tips","variant","fullWidth","back","save","popups_verify_account","useContext","useEffect","useState","useAsyncFn","SOCIAL_MEDIA_SUPPORTING_NEXT_DOT_ID","PluginID","EMPTY_LIST","EMPTY_OBJECT","NextIDAction","SignType","MaskMessages","ConfirmDialog","PersonaContext","usePopupCustomSnackbar","useUnlistedAddressConfig","useUpdateEffect","Telemetry","EventType","NextIDProof","useTitle","PageTitleContext","Service","DisconnectEventMap","queryClient","delay","AccountDetail","selectedAccount","currentPersona","useContainer","setExtension","pendingUnlistedConfig","setPendingUnlistedConfig","showSnackbar","unlistedAddressConfig","isInitialLoading","refetch","updateConfig","pluginID","Web3Profile","socialIds","a","b","c","d","Identity","signWithPersona","location","origin","pendingUnlistedAddresses","addresses","filter","config","list","handleDetachProfile","SiteAdaptor","disconnectSite","detachProfile","events","ownPersonaChanged","sendToAll","invalidateQueries","pubkey","popups_disconnect_success","captureEvent","Access","popups_disconnect_failed","handleSubmit","popups_save_successfully","autoHideDuration","popups_save_failed","publicKeyAsHex","releaseBinding","result","createPersonaPayload","Delete","signature","Message","signPayload","detachProfileWithNextID","uuid","createdAt","ownProofChanged","refetchQueries","connectSite","window","close","popups_social_account","replace","linkedPersona","Trash","Disconnect","confirmed","openAndWaitForClose","title","popups_disconnect_persona","confirmVariant","message","wordBreak","values","userId","personaName","nickname","undefined","JSON","stringify","alpha","LoadingMask","text","rowGap","position","top","left","bottom","useAsync","Avatar","NextIDPlatform","PopupModalRoutes","formatDomainName","formatEthereumAddress","ProviderType","FormattedAddress","ExplorerResolver","ProviderResolver","Web3","useChainContext","useNetworkContext","useProviderDescriptor","Services","useModalNavigate","provider","accountInfo","columnGap","link","description","bounded","danger","congratulation","info","ConnectWalletPage","modalNavigate","providerType","providerDescriptor","isBound","queryIsBound","Ethereum","walletAlias","MaskWallet","providerName","bindProof","payload","walletSignature","Create","popups_verify_wallet_bind_fail_tips","signResult","handleSign","personaSignature","signMessage","silent","popups_verify_wallet_sign_success_tips","error","popups_verify_wallet_sign_fail_tips","handleCancel","WalletConnect","Helper","removePopupWindow","handleChooseAnotherWallet","SelectProvider","handleDone","disconnect","plugin_wallet_connect_a_wallet","p","plugin_wallet_view_on_explorer","wallet_status_button_change","popups_verify_wallet_bounded_tips","persona","String","popups_verify_wallet_description","signing","my","congratulations","popups_verify_wallet_congratulation_tips","wallet","py","src","MenuPersonasActive","Connect","cancel","disabled","sign","done","ConnectSocialAccounts","accounts","gridTemplateColumns","accountItem","bottomBg","overflow","textOverflow","whiteSpace","maxWidth","connect","SocialAccounts","networks","onConnect","onAccountClick","popups_connect_social_tips","startsWith","ConnectSocialAccount","ImageIcon","ProgressiveText","NetworkPluginID","useWeb3State","resolveNextIDPlatformWalletName","ChainId","useQueries","useVerifiedWallets","walletList","gap","walletInfo","marginLeft","walletIcon","ConnectedWallet","localWallets","proofs","NameService","PLUGIN_EVM","queries","enabled","queryKey","queryFn","reverse","localWallet","Mainnet","handleConfirmRelease","popups_wallet_disconnect_success","popups_wallet_disconnect_failed","query","isLoading","component","skeletonWidth","skeletonHeight","ml","popups_release_bind_wallet_title","currentMaskWalletLockStatusSettings","LockStatus","MaskTabList","TabContext","TabPanel","Tab","PersonaPublicKey","PersonaAvatar","useParamTab","container","content","titleWrapper","marginBottom","fontStyle","addPersonaWrapper","subTitle","third","placeholderDescription","edit","right","publicKey","settings","header","borderBottom","line","logo","menu","tabs","paddingLeft","paddingRight","groupedButton","panel","maxHeight","mnemonicIcon","success","personaIcon","iconWrapper","emptyHeader","whiteBlue","PersonaHomeUI","fingerprint","onCreatePersona","onRestore","isEmpty","bindingWallets","hasProofs","hasPaymentPassword","cx","currentTab","onChangeTab","event","LOCKED","Wallet","from","goBack","popup","div","modalTitleBg","MaskSquare","HamburgerMenu","SwitchPersona","PersonaAvatarSetting","Edit","rawPublicKey","publicHexString","iconSize","Settings2","PersonaSettings","aria-label","root","grouped","label","popups_connected_wallets","data-hide-scrollbar","welcome_to_mask","popups_add_persona_description","AddUser","white","popups_create_persona","popups_generate_a_new_persona","PopupRestore","popups_restore_and_login","popups_import_persona_description","DashboardRoutes","useSupportSocialNetworks","useHasPassword","PersonaHome","setSelectedAccount","personas","definedSocialNetworks","hasPassword","browser","create","active","url","runtime","getURL","SignUpPersona","navigator","userAgent","RecoveryPersona","handleConnect","networkIdentifier","handleAccountClick","useSubscription","createSubscriptionFromAsyncSuspense","queryOwnedPersonaInformation","on","usePersonasFromDB","useSearchParams","MethodAfterPersonaSign","SignRequestInfo","PersonaSignRequest","params","requestID","setRequestID","setMessage","selected","setSelected","source","get","messageInURL","requestIDInURL","identifierInURL","selectedPersona","toText","confirmLoading","handleConfirm","personaSignRequest","sendToBackgroundPage","method","DISCONNECT_NEXT_ID","profileIdentifier","profile","linkedProfiles","cancelLoading","useLocation","QRCode","CrossIsolationMessages","isDark","mode","qrcode","halo","zIndex","backgroundImage","qrcodeContainer","margin","backgroundColor","tip","uri","state","popupWalletConnectEvent","open","ConnectWallet","ArrowBack","wallet_connect","ecLevel","quietZone","eyeRadius","qrStyle","wallet_connect_tips","SOCIAL_MEDIA_ROUND_ICON_MAPPING","EnhanceableSite","valid","border","warn","props","Icon","GrayMasks","Twitter","formatPersonaFingerprint","formatPersonaName","action","marginRight","PersonaHeaderUI","Mask","Masks","useMatch","NormalHeader","PersonaHeader","matchHome","matchWalletConnect","matchProfilePhoto","matchSignRequest","pathname","lazy","useMount","Route","Routes","relativeRouteOf","DefaultWeb3ContextProvider","Home","Logout","ExportPrivateKey","r","Persona","hash","ConnectProvider","path","element","badgeIcon","badgeIconBorderColor","common","badgeSize","iconFilterColor","Fragment","BigNumber","isZero","isLessThan","significant","minimumBalance","valueInt","toFixed","formatted","toString","span","styled","forwardRef","BaseTabWrap","shouldForwardProp","prop","activated","secondaryDark","BaseTab","ref","handleClick","role","disableElevation","aria-selected","e","useRef","FlexibleTabTabWrap","flexShrink","flexGrow","input","highlight","FlexibleTab","isVisitable","rest","visitable","current","getBoundingClientRect","RoundTabWrap","RoundTab","ButtonGroup","useTabContext","getPanelId","getTabId","Children","isValidElement","useImperativeHandle","ArrowBackIosNew","ArrowBackIosNewIcon","useClickAway","useWindowSize","defaultTabSize","ArrowButtonWrap","ArrowBackIosNewIconWrap","FlexibleButtonGroupPanel","isOpen","boxSizing","ButtonGroupWrap","maskVariant","flexWrap","overflowY","paddingTop","FlexButtonGroupWrap","isOverflow","tabMapping","flexible","round","base","context","handleToggle","isTabsOverflow","setIsTabsOverflow","firstId","setFirstTabId","innerRef","anchorRef","flexPanelRef","TypeError","hideArrowButton","scrollWidth","clientWidth","children","child","extra","id","type","Object","assign","anchor","C","flexibleTabs","sort","pointerX","pointerY","y","visibility","arrowButton","aria-controls","aria-expanded","aria-haspopup","transform","displayName","useQuery","Web3Storage","useHiddenAddressConfig","personaPubkey","storage","createNextIDStorage","NextID","Array","isArray","hiddenAddresses","useHiddenAddressConfigOf","socialId","getHiddenAddressesOf","toLowerCase","migratedUnlistedAddressConfig","hiddenAddressesAdapter","set","fromEntries","getRegisteredWeb3Networks","expectedPluginID","expectedChainIdOrNetworkTypeOrID","networkType","ID"],"sourceRoot":"","x_google_ignoreList":[20,25,26,27]}