{"version":3,"file":"bundled/chunk.654.js","mappings":";;;;;;;;;;;;;;;;;AAAA,sCAAsC;;AACA;AACN;AACS;AACa;AACC;AAEvD,MAAMS,IAAIJ,4CAAKA,CAACJ,2DAAQA,CAACS,WAAW,CAACC,2BAA2B;AACjD,SAASC;IACpB,IAAI,CAACZ,0DAAKA,CAACa,gBAAgB,EAAE,OAAO;IACpC,qBACI,uDAACL,2EAAaA;kBACV,qEAACJ,2CAAQA;sBACL,qEAACU;;;AAIjB;AAEA,SAASA;IACL,MAAMC,aAAaT,0CAAGA,CAACG;IACvB,MAAM,CAACO,WAAWC,aAAa,GAAGV,+CAAQA,CAAC;IAC3C,IAAI,CAACQ,YAAY,OAAO;IACxB,IAAIC,WAAW,OAAO;IACtB,qBACI,wDAACd,8DAAGA;;YAAC;0BAED,uDAACgB;0BACD,uDAACf,8DAAIA;gBACDgB,SAAS;oBACL,MAAMlB,2DAAQA,CAACS,WAAW,CAACU,gCAAgC,CAAC;oBAC5DC,OAAOC,KAAK;gBAChB;0BAAG;;0BAGP,uDAACJ;0BACD,uDAACf,8DAAIA;gBACDgB,SAAS;oBACL,MAAMlB,2DAAQA,CAACS,WAAW,CAACU,gCAAgC,CAAC;oBAC5DC,OAAOC,KAAK;gBAChB;0BAAG;;0BAGP,uDAACJ;0BACD,uDAACf,8DAAIA;gBACDgB,SAAS;oBACL,MAAMlB,2DAAQA,CAACS,WAAW,CAACU,gCAAgC,CAAC;oBAC5DC,OAAOC,KAAK;gBAChB;0BAAG;;0BAGP,uDAACJ;0BACD,uDAACf,8DAAIA;gBAACgB,SAAS,IAAMF,aAAa;0BAAO;;;;AAGrD","sources":["webpack://mask-network/./packages/mask/popups/components/PopupLayout/LoadMaskSDK.tsx"],"sourcesContent":["/// <reference types=\"react/canary\" />\nimport { Flags } from '@masknet/flags'\nimport Services from '#services'\nimport { Box, Link } from '@mui/material'\nimport { Suspense, cache, use, useState } from 'react'\nimport { ErrorBoundary } from '@masknet/shared-base-ui'\n\nconst f = cache(Services.SiteAdaptor.shouldSuggestConnectInPopup)\nexport default function MaskSDK() {\n    if (!Flags.mask_sdk_enabled) return null\n    return (\n        <ErrorBoundary>\n            <Suspense>\n                <MaskSDKLoader />\n            </Suspense>\n        </ErrorBoundary>\n    )\n}\n\nfunction MaskSDKLoader() {\n    const shouldShow = use(f())\n    const [dismissed, setDismissed] = useState(false)\n    if (!shouldShow) return null\n    if (dismissed) return null\n    return (\n        <Box>\n            (Dev mode only, UI to be done) Connect Mask on this site.\n            <br />\n            <Link\n                onClick={async () => {\n                    await Services.SiteAdaptor.attachMaskSDKToCurrentActivePage('once')\n                    window.close()\n                }}>\n                Connect once\n            </Link>\n            <br />\n            <Link\n                onClick={async () => {\n                    await Services.SiteAdaptor.attachMaskSDKToCurrentActivePage('always')\n                    window.close()\n                }}>\n                Always connect this site\n            </Link>\n            <br />\n            <Link\n                onClick={async () => {\n                    await Services.SiteAdaptor.attachMaskSDKToCurrentActivePage('always-all')\n                    window.close()\n                }}>\n                Always connect all sites\n            </Link>\n            <br />\n            <Link onClick={() => setDismissed(true)}>Close</Link>\n        </Box>\n    )\n}\n"],"names":["Flags","Services","Box","Link","Suspense","cache","use","useState","ErrorBoundary","f","SiteAdaptor","shouldSuggestConnectInPopup","MaskSDK","mask_sdk_enabled","MaskSDKLoader","shouldShow","dismissed","setDismissed","br","onClick","attachMaskSDKToCurrentActivePage","window","close"],"sourceRoot":"","x_google_ignoreList":[]}