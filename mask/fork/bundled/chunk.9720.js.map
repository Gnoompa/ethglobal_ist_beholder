{"version":3,"file":"bundled/chunk.9720.js","mappings":"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","sources":["webpack://mask-network/./packages/plugin-infra/src/dom/usePluginWrapper.tsx","webpack://mask-network/./packages/shared-base-ui/src/hooks/useObservableMapSet.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/PostContext.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useAllPersonas.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/usePostInfo.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useThemeSettings.ts","webpack://mask-network/./packages/plugin-infra/src/utils/rpc.ts","webpack://mask-network/./packages/plugin-infra/src/utils/theme/color-tools.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/helpers.ts","webpack://mask-network/./packages/plugins/RedPacket/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/utils/reduceUselessPayloadInfo.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useTransactionValue.ts","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Launch.js","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useRedPacketContract.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useCreateCallback.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/messages.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedPacketConfirmDialog.tsx","webpack://mask-network/./packages/web3-providers/src/RedPacket/types.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useAvailability.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useAvailabilityComputed.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useCreateRedPacketReceipt.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useRefundCallback.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/utils/formatDate.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedPacketInHistoryList.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useRedPacketHistory.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedPacketHistoryList.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useNftRedPacketHistory.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useNftRedPacketContract.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useAvailabilityNftRedPacket.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useNftAvailabilityComputed.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useCreateNftRedPacketReceipt.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/NftRedPacketHistoryItem.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/NftRedPacketHistoryList.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/openComposition.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedPacketPast.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useDefaultCreateGas.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedPacketERC20Form.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/AddCircleOutline.js","webpack://mask-network/./packages/shared/src/UI/components/ERC721ContractSelectPanel/index.tsx","webpack://mask-network/./packages/web3-shared/evm/src/helpers/safeNonPayableTransactionCall.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useERC721ContractIsApproveForAll.ts","webpack://mask-network/./packages/shared/src/UI/components/EthereumERC721TokenApprovedBoundary/index.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedpacketMessagePanel.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/QuestionMark.js","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/SelectNftTokenDialog.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useCreateNftRedpacketCallback.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedpacketNftConfirmDialog.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/types.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNonFungibleAssetsByCollectionAndOwner.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useCreateNftRedpacketGas.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedPacketERC721Form.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedPacketDialog.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedPacketInjection.tsx","webpack://mask-network/./packages/web3-shared/evm/src/helpers/signMessage.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useClaimCallback.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedPacket/OperationFooter.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedPacket/index.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedPacketInPost.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/hooks/useClaimNftRedpacketCallback.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedPacketNft.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/RedPacketNftInPost.tsx","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/emitter.ts","webpack://mask-network/./packages/plugins/RedPacket/src/SiteAdaptor/index.tsx","webpack://mask-network/./packages/shared-base/src/helpers/getLocalImplementation.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/HelpOutline.js","webpack://mask-network/./packages/shared/src/UI/components/EthereumERC20TokenApprovedBoundary/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/NFTFallbackImage/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useRiskWarningApproved.ts","webpack://mask-network/./packages/shared/src/UI/components/WalletConnectedBoundary/index.tsx","webpack://mask-network/./packages/shared/src/hooks/useCurrentLinkedPersona.ts","webpack://mask-network/./packages/theme/src/Components/TextField/index.tsx","webpack://mask-network/./packages/theme/src/hooks/useDetectOverflow.ts","webpack://mask-network/./packages/typed-message/react/src/Metadata/index.ts","webpack://mask-network/./packages/web3-hooks/base/src/useBalance.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleTokenSpenders.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNonFungibleCollections.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useContract.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useERC721ContractSetApproveForAllCallback.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useGasConfig.ts","webpack://mask-network/./packages/web3-shared/evm/src/helpers/decodeEvents.ts","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Check.js"],"sourcesContent":["import { createContext, useEffect, useContext, type ForwardRefExoticComponent, type RefAttributes } from 'react'\nimport { noop } from 'lodash-es'\nimport type { Plugin } from '../types.js'\n\nexport type PluginWrapperComponent<T extends Plugin.Shared.Definition = Plugin.Shared.Definition> =\n    ForwardRefExoticComponent<\n        React.PropsWithChildren<\n            RefAttributes<PluginWrapperMethods> & {\n                definition: T\n                lackHostPermission?: boolean\n            }\n        >\n    >\n\nconst emptyPluginWrapperMethods = {\n    setWrap: noop,\n    setWrapperName: noop,\n    setWidth: noop,\n}\n/** @internal */\nexport const PluginWrapperMethodsContext = createContext<PluginWrapperMethods>(emptyPluginWrapperMethods)\nPluginWrapperMethodsContext.displayName = 'PluginWrapperMethodsContext'\nexport interface PluginWrapperMethods {\n    setWrap(open: boolean): void\n    setWrapperName(name: string | undefined): void\n    setWidth(width: number | undefined): void\n}\n\nexport function usePluginWrapper(\n    open: boolean,\n    options?: {\n        width?: number\n        name?: string\n    },\n) {\n    const { setWidth, setWrap, setWrapperName } = useContext(PluginWrapperMethodsContext)\n    const { width, name } = options || {}\n\n    useEffect(() => {\n        setWrap(open)\n        return () => setWrap(open)\n    }, [open, setWrap])\n    useEffect(() => setWidth(width), [width, setWidth])\n    useEffect(() => setWrapperName(name), [name, setWrapperName])\n}\n","import { useMemo } from 'react'\nimport { useSubscription, type Subscription } from 'use-subscription'\nimport { type ObservableMap, type ObservableSet } from '@masknet/shared-base'\n\nexport function useObservableValues<T>(map: ObservableMap<any, T> | ObservableSet<T>) {\n    const subscription = useMemo<Subscription<T[]>>(\n        () => ({\n            getCurrentValue: () => map.asValues,\n            subscribe: (callback) => {\n                return (map.event as any).on(map.ALL_EVENTS, callback)\n            },\n        }),\n        [map],\n    )\n\n    return useSubscription(subscription)\n}\n","import { createContext, createElement, useContext } from 'react'\nimport { type Subscription, useSubscription } from 'use-subscription'\nimport type { Some } from 'ts-results-es'\nimport type { LiveSelector, DOMProxy } from '@dimensiondev/holoflows-kit'\nimport {\n    ObservableMap,\n    ObservableSet,\n    type PostIVIdentifier,\n    ValueRef,\n    type PostIdentifier,\n    type ProfileIdentifier,\n} from '@masknet/shared-base'\nimport { useObservableValues, useValueRef } from '@masknet/shared-base-ui'\nimport type { TypedMessage } from '@masknet/typed-message'\nimport type { SupportedPayloadVersions } from '@masknet/encryption'\n\nexport interface PostContextActions {\n    hasPayloadLike(content: string): boolean\n    getURLFromPostIdentifier?(post: PostIdentifier): URL | null\n}\nexport interface PostContextAuthor {\n    readonly nickname: Subscription<string | null>\n    readonly avatarURL: Subscription<URL | null>\n    readonly author: Subscription<ProfileIdentifier | null>\n    /** post id on the network. */\n    readonly postID: Subscription<string | null>\n}\n\nexport interface PostContextCoAuthor {\n    nickname?: string\n    avatarURL?: URL\n    author: ProfileIdentifier\n    post: PostIdentifier\n}\n\nexport interface PostContextComment {\n    readonly commentsSelector: LiveSelector<HTMLElement>\n    readonly commentBoxSelector: LiveSelector<HTMLElement>\n}\nexport interface PostContextCreation extends PostContextAuthor {\n    readonly rootElement: DOMProxy\n    readonly actionsElement?: DOMProxy\n    readonly isFocusing?: boolean\n    readonly suggestedInjectionPoint: HTMLElement\n    readonly comments?: PostContextComment\n    readonly coAuthors: Subscription<PostContextCoAuthor[]>\n    /**\n     * The result of this subscription will be merged with `PostContext.postMentionedLinks`.\n     *\n     * You don't need to provide this to resolve links in `PostContext.postContent`.\n     */\n    readonly postMentionedLinksProvider?: Subscription<string[]>\n    /** @deprecated It should parse image into rawMessage */\n    readonly postImagesProvider?: Subscription<string[]>\n    /**\n     * The raw TypedMessage that the site gives.\n     */\n    readonly rawMessage: Subscription<TypedMessage>\n    readonly signal?: AbortSignal\n}\nexport interface PostContext extends PostContextAuthor {\n    // #region DOM knowledge\n    get rootNode(): HTMLElement | null\n    readonly rootElement: DOMProxy\n    readonly actionsElement?: DOMProxy\n    readonly isFocusing?: boolean\n    readonly suggestedInjectionPoint: HTMLElement\n    // #endregion\n    readonly comment: PostContextComment | undefined\n    // #region Metadata of a post (author, mentioned items, ...)\n    /** Auto computed */\n    readonly identifier: Subscription<PostIdentifier | null>\n    readonly url: Subscription<URL | null>\n    readonly coAuthors: Subscription<PostContextCoAuthor[] | null>\n    // Meta\n    readonly mentionedLinks: Subscription<string[]>\n    /** @deprecated It should appears in rawMessage */\n    readonly postMetadataImages: Subscription<string[]>\n    // #endregion\n    // #region Raw post content (not decrypted)\n    readonly rawMessage: Subscription<TypedMessage>\n    readonly encryptComment: ValueRef<null | ((commentToEncrypt: string) => Promise<string>)>\n    readonly decryptComment: ValueRef<null | ((commentEncrypted: string) => Promise<string | null>)>\n    // #endregion\n    // #region Post payload discovered in the rawMessage\n    readonly hasMaskPayload: Subscription<boolean>\n    readonly postIVIdentifier: Subscription<PostIVIdentifier | null>\n    /**\n     * undefined => payload not found\n     */\n    readonly publicShared: Subscription<boolean | undefined>\n    readonly isAuthorOfPost: Subscription<boolean | undefined>\n    readonly version: Subscription<SupportedPayloadVersions | undefined>\n\n    decryptedReport(content: {\n        sharedPublic?: Some<boolean>\n        iv?: string\n        isAuthorOfPost?: Some<boolean>\n        version?: SupportedPayloadVersions\n    }): void\n    // #endregion\n}\nexport type PostInfo = PostContext\n\nexport const PostInfoContext = createContext<PostContext | null>(null)\nPostInfoContext.displayName = 'PostInfoContext'\n\n/** @deprecated use <PostInfoContext.Provider value={post}> */\nexport function PostInfoProvider(props: React.PropsWithChildren<{ post: PostInfo }>) {\n    return createElement(PostInfoContext.Provider, { value: props.post, children: props.children })\n}\nexport const usePostInfoDetails: {\n    // Change to use* when https://github.com/microsoft/TypeScript/issues/44643 fixed\n    [key in keyof PostInfo]: () => PostInfo[key] extends ValueRef<infer T>\n        ? T extends (...args: any) => any\n            ? T\n            : Readonly<T>\n        : PostInfo[key] extends ObservableSet<infer T>\n        ? ReadonlyArray<Readonly<T>>\n        : PostInfo[key] extends ObservableMap<any, infer T>\n        ? ReadonlyArray<Readonly<T>>\n        : PostInfo[key] extends Subscription<infer T>\n        ? Readonly<T>\n        : PostInfo[key]\n} = {\n    __proto__: new Proxy(\n        { __proto__: null },\n        {\n            get(_, key) {\n                if (typeof key === 'symbol') return undefined\n                function usePostInfoDetails() {\n                    const postInfo = useContext(PostInfoContext)\n                    if (!postInfo) throw new TypeError('No post context')\n                    if (!(key in postInfo)) throw new TypeError('postInfo.' + (key as string) + ' is not found')\n                    const k = postInfo[key as keyof PostInfo]\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (k instanceof ValueRef) return useValueRef<any>(k)\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (k instanceof ObservableMap) return useObservableValues<any>(k)\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (k instanceof ObservableSet) return useObservableValues<any>(k)\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (isSubscription(k)) return useSubscription<any>(k)\n                    return k\n                }\n                Object.defineProperty(usePostInfoDetails, key, { value: usePostInfoDetails, configurable: true })\n                return usePostInfoDetails\n            },\n        },\n    ),\n} as any\nfunction isSubscription(x: any): x is Subscription<any> {\n    return (\n        typeof x === 'object' &&\n        x !== null &&\n        !!((x as Subscription<any>).getCurrentValue && (x as Subscription<any>).subscribe)\n    )\n}\n","import { useSubscription } from 'use-subscription'\nimport { allPersonas } from '../dom/context.js'\n\nexport function useAllPersonas() {\n    return useSubscription(allPersonas)\n}\n","import { useMemo } from 'react'\nimport { usePostInfoDetails } from './PostContext.js'\nimport { getPostURL } from './context.js'\n\nexport function usePostLink() {\n    const id = usePostInfoDetails.postID()\n    const identifier = usePostInfoDetails.identifier()\n    return useMemo(() => {\n        if (!id || !identifier) return ''\n        return getPostURL?.(identifier) ?? ''\n    }, [id, identifier, getPostURL])\n}\n","import type { Theme } from '@mui/material'\nimport { getBackgroundColor } from '../utils/theme/color-tools.js'\n\nexport function useSiteThemeMode(theme: Theme) {\n    const backgroundColor = getBackgroundColor(document.body)\n    const isDark = theme.palette.mode === 'dark'\n    const isDarker = backgroundColor === 'rgb(0,0,0)'\n\n    return isDark ? (!isDarker ? 'dim' : 'dark') : 'light'\n}\n","import { Environment, isEnvironment } from '@dimensiondev/holoflows-kit'\nimport { AsyncCall, type AsyncCallLogLevel, AsyncGeneratorCall } from 'async-call-rpc/full'\nimport { serializer, getOrUpdateLocalImplementationHMR } from '@masknet/shared-base'\nimport { getPluginMessage } from '@masknet/plugin-infra'\nimport { DOMAIN_RPC } from './message.js'\n\nconst log: AsyncCallLogLevel = {\n    type: 'pretty',\n    requestReplay: process.env.NODE_ENV === 'development',\n    sendLocalStack: process.env.NODE_ENV === 'development',\n}\nlet isBackground = () => isEnvironment(Environment.ManifestBackground)\nexport function __workaround__replaceIsBackground__(f: () => boolean) {\n    isBackground = f\n}\n\nfunction getPluginRPCInternal(\n    cache: Map<string, object>,\n    pluginID: string,\n    starter: typeof AsyncCall | typeof AsyncGeneratorCall,\n    entry: keyof RPCMessage,\n) {\n    if (cache.has(pluginID)) return cache.get(pluginID)\n    const message = getPluginMessage<RPCMessage>(pluginID, DOMAIN_RPC)\n    const rpc = starter(Object.create(null), {\n        key: `@plugin/${pluginID}`,\n        channel: {\n            on: message[entry].on,\n            send: message[entry].sendToBackgroundPage,\n        },\n        serializer,\n        log,\n        thenable: false,\n    })\n    cache.set(pluginID, rpc)\n    return rpc\n}\nconst cache = new Map<string, object>()\nconst cacheGenerator = new Map<string, object>()\nexport function getPluginRPC<T>(pluginID: string): T {\n    if (isBackground()) startPluginRPC(pluginID, new AbortController().signal, Object.create(null))\n    return getPluginRPCInternal(cache, pluginID, AsyncCall, '_') as T\n}\nexport function getPluginRPCGenerator<T>(pluginID: string): T {\n    if (isBackground()) startPluginGeneratorRPC(pluginID, new AbortController().signal, Object.create(null))\n    return getPluginRPCInternal(cacheGenerator, pluginID, AsyncGeneratorCall, '$') as T\n}\n\nfunction startPluginRPCInternal(\n    cache: Map<string, object>,\n    pluginID: string,\n    signal: AbortSignal,\n    impl: object,\n    starter: typeof AsyncCall | typeof AsyncGeneratorCall,\n    entry: keyof RPCMessage,\n) {\n    if (!isBackground()) throw new Error('Cannot start RPC in the UI.')\n    const message = getPluginMessage<RPCMessage>(pluginID, DOMAIN_RPC)\n    const delegate = getOrUpdateLocalImplementationHMR(() => impl, message[entry])\n    if (cache.has(pluginID)) return\n    cache.set(pluginID, delegate)\n    starter(delegate, {\n        key: pluginID,\n        channel: {\n            on: message[entry].on,\n            send: message[entry].sendByBroadcast,\n        },\n        serializer,\n        log,\n        thenable: false,\n    })\n}\n/** @internal */\nexport function startPluginRPC(pluginID: string, signal: AbortSignal, impl: object) {\n    startPluginRPCInternal(cache, pluginID, signal, impl, AsyncCall, '_')\n}\n/** @internal */\nexport function startPluginGeneratorRPC(pluginID: string, signal: AbortSignal, impl: object) {\n    startPluginRPCInternal(cacheGenerator, pluginID, signal, impl, AsyncGeneratorCall, '$')\n}\n\ninterface RPCMessage {\n    // RPC\n    _: unknown\n    // Generator\n    $: unknown\n}\n","import { clamp } from 'lodash-es'\n\ntype RGB = [number, number, number]\ntype RGBA = [number, number, number, number]\n\nexport function isDark([r, g, b]: RGB) {\n    return r < 68 && g < 68 && b < 68\n}\n\nexport function toRGB(channels: RGB | undefined) {\n    if (!channels) return ''\n    return `rgb(${channels.join(',')})`\n}\n\nexport function fromRGB(rgb: string): RGB | undefined {\n    const matched = rgb.match(/rgb\\(\\s*(\\d+?)\\s*,\\s*(\\d+?)\\s*,\\s*(\\d+?)\\s*\\)/)\n    if (matched) {\n        const [_, r, g, b] = matched\n        return [Number.parseInt(r, 10), Number.parseInt(g, 10), Number.parseInt(b, 10)]\n    }\n    return\n}\n\nexport function shade(channels: RGB, percentage: number): RGB {\n    return channels.map((c) => clamp(Math.floor((c * (100 + percentage)) / 100), 0, 255)) as RGB\n}\n\nfunction fromRGBAtoRGB(color: string): string {\n    const matched = color.match(/^rgba\\((\\d{1,3}%?),\\s*(\\d{1,3}%?),\\s*(\\d{1,3}%?),\\s*(\\d*(?:\\.\\d+)?)\\)$/)\n    if (matched) {\n        const [_, r, g, b, a] = matched\n        const rgba: RGBA = [\n            Number.parseInt(r, 10),\n            Number.parseInt(g, 10),\n            Number.parseInt(b, 10),\n            Number.parseInt(a, 10),\n        ]\n\n        return toRGB(shade(rgba.slice(0, 3) as RGB, rgba[3] * 100))\n    }\n\n    return ''\n}\n\nfunction isRGBA(color: string) {\n    return color.match(/^rgba\\((\\d{1,3}%?),\\s*(\\d{1,3}%?),\\s*(\\d{1,3}%?),\\s*(\\d*(?:\\.\\d+)?)\\)$/)\n}\n\nexport function getBackgroundColor(element: HTMLElement | HTMLBodyElement | undefined) {\n    if (!element) return ''\n    const color = getComputedStyle(element).backgroundColor\n    if (isRGBA(color)) {\n        return fromRGBAtoRGB(color)\n    }\n    return color ? toRGB(fromRGB(color)) : ''\n}\n","import { createRenderWithMetadata, createTypedMessageMetadataReader } from '@masknet/typed-message-react'\nimport { RedPacketMetaKey, RedPacketNftMetaKey } from '../constants.js'\nimport type { RedPacketJSONPayload, RedPacketNftJSONPayload } from '@masknet/web3-providers/types'\nimport schema from '../schema.json'\nimport schemaNtf from '../schema-nft.json'\n\nexport const RedPacketMetadataReader = createTypedMessageMetadataReader<RedPacketJSONPayload>(RedPacketMetaKey, schema)\nexport const renderWithRedPacketMetadata = createRenderWithMetadata(RedPacketMetadataReader)\n\nexport const RedPacketNftMetadataReader = createTypedMessageMetadataReader<RedPacketNftJSONPayload>(\n    RedPacketNftMetaKey,\n    schemaNtf,\n)\nexport const renderWithRedPacketNftMetadata = createRenderWithMetadata(RedPacketNftMetadataReader)\n","// @ts-nocheck\n/* eslint-disable */\nimport { createElement, useMemo, type ComponentType } from \"react\";\nimport { useTranslation, Trans, type TransProps } from \"react-i18next\";\ntype TypedTransProps<Value, Components> = Omit<TransProps<string>, \"values\" | \"ns\" | \"i18nKey\"> & ({} extends Value ? {} : {\n    values: Value;\n}) & {\n    components: Components;\n};\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useRedPacketTrans(): {\n    /**\n      * `🧧🧧🧧 Try sending Lucky Drop to your friends with tokens or NFTs to share the joy now! Install Mask.io to send your first Lucky Drop.`\n      */\n    promote(): string;\n    /**\n      * `🧧🧧🧧 Try sending Lucky Drop to your friends with Mask.io.`\n      */\n    promote_short(): string;\n    /**\n      * `Collections`\n      */\n    collections(): string;\n    /**\n      * `Select a Token`\n      */\n    select_a_token(): string;\n    /**\n      * `Search`\n      */\n    search(): string;\n    /**\n      * `Loading token...`\n      */\n    loading_token(): string;\n    /**\n      * `No results`\n      */\n    search_no_result(): string;\n    /**\n      * `The collectible has already been added.`\n      */\n    nft_already_added(): string;\n    /**\n      * `The collectible does not belong to you.`\n      */\n    nft_invalid_owner(): string;\n    /**\n      * `The maximum number of NFTs to be sold in NFT lucky drop contract is {{- amount}}.`\n      */\n    nft_max_shares(options: {\n        readonly amount: string;\n    }): string;\n    /**\n      * `The NFT lucky drop supports up to {{amount, number}} NFTs selected for one time.`\n      */\n    nft_max_shares_tip(options: {\n        readonly amount: string | number | bigint;\n    }): string;\n    /**\n      * `Choose your collection`\n      */\n    nft_select_collection(): string;\n    /**\n      * `Completed`\n      */\n    completed(): string;\n    /**\n      * `Expired`\n      */\n    expired(): string;\n    /**\n      * `This is an NFT lucky drop.`\n      */\n    nft_tip(): string;\n    /**\n      * ``\n      */\n    account_promote$default(): string;\n    /**\n      * `Follow @$t(mask:twitter_account) (mask.io) to claim NFT lucky drops.`\n      */\n    account_promote$twitter(): string;\n    /**\n      * `Follow @$t(mask:facebook_account) (mask.io) to claim NFT lucky drops.`\n      */\n    account_promote$facebook(): string;\n    /**\n      * `@{{sender}} is sending an NFT lucky drop on {{network}} network. {{account_promote}}\n    $t(promote_short)\n    $t(mask:hash_tag) #LuckyDrop\n    {{payload}}`\n      */\n    nft_share_foreshow_message(options: Readonly<{\n        sender: string;\n        network: string;\n        account_promote: string;\n        payload: string;\n    }>): string;\n    /**\n      * `I just claimed an NFT lucky drop from @{{sender}} on {{network}} network. {{account_promote}}\n    $t(promote_short)\n    $t(mask:hash_tag) #LuckyDrop\n    {{payload}}`\n      */\n    nft_share_claimed_message(options: Readonly<{\n        sender: string;\n        network: string;\n        account_promote: string;\n        payload: string;\n    }>): string;\n    /**\n      * `Total Amount`\n      */\n    nft_total_amount(): string;\n    /**\n      * `Attached Message`\n      */\n    nft_attached_message(): string;\n    /**\n      * `Wallet account`\n      */\n    nft_account_name(): string;\n    /**\n      * `Enclose a Message`\n      */\n    message_label(): string;\n    /**\n      * `Claiming...`\n      */\n    claiming(): string;\n    /**\n      * `Claim`\n      */\n    claim(): string;\n    /**\n      * `The Lucky Drop can’t be sent due to data damage. Please withdraw the assets after {{duration}}.`\n      */\n    data_broken(options: {\n        readonly duration: string;\n    }): string;\n    /**\n      * `Refund`\n      */\n    refund(): string;\n    /**\n      * `Empty`\n      */\n    empty(): string;\n    /**\n      * `Refunding`\n      */\n    refunding(): string;\n    /**\n      * `Total Amount: {{- amount}} {{symbol}}`\n      */\n    history_total_amount(options: Readonly<{\n        amount: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `Split Mode: {{mode}}`\n      */\n    history_split_mode(options: {\n        readonly mode: string;\n    }): string;\n    /**\n      * `Attached Message`\n      */\n    attached_message(): string;\n    /**\n      * `The minimum amount for each share is {{- amount}} {{symbol}}`\n      */\n    indivisible(options: Readonly<{\n        amount: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `Lucky Drop`\n      */\n    name(): string;\n    /**\n      * `Gift crypto or NFTs to any users, first come, first served.`\n      */\n    description(): string;\n    /**\n      * `Create the Lucky Drop`\n      */\n    next(): string;\n    /**\n      * `Note: When you \"Unlock All\", all of the NFTs in the collection will be by default authorized for sale. This includes the NFTs transferred afterwards.`\n      */\n    nft_approve_all_tip(): string;\n    /**\n      * `Select partially`\n      */\n    nft_select_partially_option(): string;\n    /**\n      * `ALL ({{total}} NFT)`\n      */\n    nft_select_all_option(options: {\n        readonly total: string;\n    }): string;\n    /**\n      * `Token ID separated by comma, e.g. 1224, 7873, 8948`\n      */\n    nft_search_placeholder(): string;\n    /**\n      * `Insufficient Balance`\n      */\n    erc721_insufficient_balance(): string;\n    /**\n      * `Create the Lucky Drop`\n      */\n    erc721_create_lucky_drop(): string;\n    /**\n      * `When selecting too many NFTs, the total gas fee may exceed the MetaMask limit of 1 {{symbol}}. Please reduce the number of NFTs selected.`\n      */\n    erc721_gas_cap(options: {\n        readonly symbol: string;\n    }): string;\n    /**\n      * `Collectibles`\n      */\n    erc721_tab_title(): string;\n    /**\n      * `Tokens`\n      */\n    erc20_tab_title(): string;\n    /**\n      * `Claimed {{- amount}}`\n      */\n    claimed(options: {\n        readonly amount: string;\n    }): string;\n    /**\n      * `Confirm the Lucky Drop`\n      */\n    details(): string;\n    /**\n      * `Confirm`\n      */\n    confirm(): string;\n    /**\n      * `Confirming`\n      */\n    confirming(): string;\n    /**\n      * `Enter Amount Each`\n      */\n    enter_each_amount(): string;\n    /**\n      * `Enter Total`\n      */\n    enter_total_amount(): string;\n    /**\n      * `Enter shares`\n      */\n    enter_shares(): string;\n    /**\n      * `At most 255 recipients`\n      */\n    max_shares(): string;\n    /**\n      * `Lucky Drop`\n      */\n    display_name(): string;\n    /**\n      * `History`\n      */\n    select_existing(): string;\n    /**\n      * `New`\n      */\n    create_new(): string;\n    /**\n      * `Send {{- amount}} {{symbol}}`\n      */\n    token_send_symbol(options: Readonly<{\n        amount: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `Send {{count}} NFT`\n      */\n    send_symbol_one(options: {\n        readonly count: (string | number | bigint) & (string | number | bigint);\n    }): string;\n    /**\n      * `Send {{count}} NFTs`\n      */\n    send_symbol_other(options: {\n        readonly count: string | number | bigint;\n    }): string;\n    /**\n      * `Insufficient Balance`\n      */\n    insufficient_balance(): string;\n    /**\n      * `Insufficient {{symbol}} Balance`\n      */\n    insufficient_token_balance(options: {\n        readonly symbol: string;\n    }): string;\n    /**\n      * `Back`\n      */\n    back(): string;\n    /**\n      * `You can withdraw the rest of your balances back 24h later after sending them out.`\n      */\n    hint(): string;\n    /**\n      * `Total`\n      */\n    total(): string;\n    /**\n      * `Total cost`\n      */\n    total_cost(): string;\n    /**\n      * `Amount per Share`\n      */\n    amount_per_share(): string;\n    /**\n      * `Amount Each`\n      */\n    amount_each(): string;\n    /**\n      * `Transaction cost`\n      */\n    estimate_gas_fee(): string;\n    /**\n      * `Shares`\n      */\n    shares(): string;\n    /**\n      * `Identical`\n      */\n    average(): string;\n    /**\n      * `Random`\n      */\n    random(): string;\n    /**\n      * `Random Amount`\n      */\n    random_amount(): string;\n    /**\n      * `Equal Amount`\n      */\n    identical_amount(): string;\n    /**\n      * `Quantity`\n      */\n    quantity(): string;\n    /**\n      * `Split Mode`\n      */\n    split_mode(): string;\n    /**\n      * `Token`\n      */\n    token(): string;\n    /**\n      * `Not supported on {{chain}} yet.`\n      */\n    chain_not_supported(options: {\n        readonly chain: string;\n    }): string;\n    /**\n      * `You haven't created any NFT lucky drop yet. Try to create and share lucky with your friends.`\n      */\n    nft_no_history(): string;\n    /**\n      * `You haven't created any Token lucky drop yet. Try to create and share lucky with your friends.`\n      */\n    token_no_history(): string;\n    /**\n      * `Send`\n      */\n    send(): string;\n    /**\n      * `{{- time}} (UTC+8)`\n      */\n    history_duration(options: {\n        readonly time: string;\n    }): string;\n    /**\n      * `Best Wishes!`\n      */\n    best_wishes(): string;\n    /**\n      * `Enter quantity`\n      */\n    enter_quantity(): string;\n    /**\n      * `Create time:`\n      */\n    create_time(): string;\n    /**\n      * `Blessing words`\n      */\n    blessing_words(): string;\n    /**\n      * `The Lucky Drop can’t be sent due to data damage.`\n      */\n    nft_data_broken(): string;\n    /**\n      * `From: @{{name}}`\n      */\n    [\"from\"](options: {\n        readonly name: string;\n    }): string;\n    /**\n      * `I just claimed a lucky drop from @{{sender}} on {{network}} network. Follow @{{account}} (mask.io) to claim lucky drops.\n    $t(promote_short)\n    #mask_io #LuckyDrop\n    {{payload}}`\n      */\n    share_message_official_account(options: Readonly<{\n        sender: string;\n        network: string;\n        account: string;\n        payload: string;\n    }>): string;\n    /**\n      * `I just claimed a lucky drop from @{{sender}} on {{network}} network.\n    $t(promote_short)\n    {{payload}}`\n      */\n    share_message_not_twitter(options: Readonly<{\n        sender: string;\n        network: string;\n        payload: string;\n    }>): string;\n    /**\n      * `Hi friends, I just found a lucky drop sent by @{{sender}} on {{network}} network. Follow @{{account}} (mask.io) to claim lucky drops.\n    $t(promote_short)\n    #mask_io #LuckyDrop\n    {{payload}}`\n      */\n    share_unclaimed_message_official_account(options: Readonly<{\n        sender: string;\n        network: string;\n        account: string;\n        payload: string;\n    }>): string;\n    /**\n      * `Hi friends, I just found a lucky drop sent by @{{sender}} on {{network}} network.\n    $t(promote_short)\n    {{payload}}`\n      */\n    share_unclaimed_message_not_twitter(options: Readonly<{\n        sender: string;\n        network: string;\n        payload: string;\n    }>): string;\n    /**\n      * `You got {{- amount}} {{symbol}}`\n      */\n    description_claimed(options: Readonly<{\n        amount: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `You could refund {{- balance}} {{symbol}}.`\n      */\n    description_refund(options: Readonly<{\n        balance: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `The Lucky Drop has been refunded.`\n      */\n    description_refunded(): string;\n    /**\n      * `The Lucky Drop is expired.`\n      */\n    description_expired(): string;\n    /**\n      * `The Lucky Drop is broken.`\n      */\n    description_broken(): string;\n    /**\n      * `The Lucky Drop is empty.`\n      */\n    description_empty(): string;\n    /**\n      * `{{count}} share / {{- total}} {{symbol}}`\n      */\n    description_failover_one(options: Readonly<{\n        count: (string | number | bigint) & (string | number | bigint);\n        total: string & string;\n        symbol: string & string;\n    }>): string;\n    /**\n      * `{{count}} shares / {{- total}} {{symbol}}`\n      */\n    description_failover_other(options: Readonly<{\n        count: string | number | bigint;\n        total: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `Send a surprise crypto giveaway. Tokens and NFTs on multiple chains are supported.`\n      */\n    recommend_feature_description(): string;\n    /**\n      * `You claimed {{- amount}} {{name}}.`\n      */\n    claim_token_successful(options: Readonly<{\n        amount: string;\n        name: string;\n    }>): string;\n    /**\n      * `Claimed 1 {{name}} successfully.`\n      */\n    claim_nft_successful(options: {\n        readonly name: string;\n    }): string;\n    /**\n      * `Lucky Drop`\n      */\n    lucky_drop(): string;\n    /**\n      * `Share`\n      */\n    share(): string;\n    /**\n      * `OK`\n      */\n    ok(): string;\n    /**\n      * `You got 1 {{name}}`\n      */\n    got_nft(options: {\n        readonly name: string;\n    }): string;\n    /**\n      * `History`\n      */\n    history(): string;\n    /**\n      * `realMaskNetwork`\n      */\n    twitter_account(): string;\n    /**\n      * `masknetwork`\n      */\n    facebook_account(): string;\n    /**\n      * `Loading`\n      */\n    loading(): string;\n    /**\n      * `Connect Wallet`\n      */\n    plugin_wallet_connect_a_wallet(): string;\n    /**\n      * `Invalid Network`\n      */\n    plugin_wallet_invalid_network(): string;\n    /**\n      * `Select All`\n      */\n    select_all(): string;\n    /**\n      * `Retry`\n      */\n    retry(): string;\n    /**\n      * `Something went wrong.`\n      */\n    go_wrong(): string;\n    /**\n      * `No Enough Gas Fees`\n      */\n    no_enough_gas_fees(): string;\n    /**\n      * - send_symbol_one: `Send {{count}} NFT`\n    \n      * - send_symbol_other: `Send {{count}} NFTs`\n      */\n    send_symbol(options: {\n        readonly count: string | number | bigint;\n    }): string;\n    /**\n      * - description_failover_one: `{{count}} share / {{- total}} {{symbol}}`\n    \n      * - description_failover_other: `{{count}} shares / {{- total}} {{symbol}}`\n      */\n    description_failover(options: Readonly<{\n        count?: string | number | bigint;\n        total: string & string;\n        symbol: string & string;\n    }>): string;\n    /**\n      * - account_promote$default: ``\n    \n      * - account_promote$twitter: `Follow @$t(mask:twitter_account) (mask.io) to claim NFT lucky drops.`\n    \n      * - account_promote$facebook: `Follow @$t(mask:facebook_account) (mask.io) to claim NFT lucky drops.`\n      */\n    account_promote(options: {\n        readonly context: \"default\" | \"twitter\" | \"facebook\";\n    }): string;\n} { const { t } = useTranslation(\"com.maskbook.red_packet\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\nfunction createComponent(i18nKey: string) {\n    return (props) => createElement(Trans, { i18nKey, ns: \"com.maskbook.red_packet\", shouldUnescape: true, ...props });\n}\nexport const RedPacketTrans: {\n    /**\n      * `You can also use <text>{{text}}</text> to select multiple NFTs.`\n      */\n    nft_shift_select_tip: ComponentType<TypedTransProps<{\n        readonly text: string;\n    }, {\n        text: JSX.Element;\n    }>>;\n    /**\n      * `Token ID <tokenIdList></tokenIdList> does not exist or belong to you.`\n      */\n    nft_non_existed_tip: ComponentType<TypedTransProps<Readonly<{}>, {\n        tokenIdList: JSX.Element;\n    }>>;\n    /**\n      * `<span>{{count}}</span> NFT`\n      */\n    nft_select_amount_one: ComponentType<TypedTransProps<{\n        readonly count: (string | number | bigint) & (string | number | bigint);\n    }, {\n        span: JSX.Element;\n    }>>;\n    /**\n      * `<span>{{count}}</span> NFTs`\n      */\n    nft_select_amount_other: ComponentType<TypedTransProps<{\n        readonly count: string | number | bigint;\n    }, {\n        span: JSX.Element;\n    }>>;\n    /**\n      * `Claimed: <span>{{claimedShares}}/{{shares}}</span> {{claimedAmount}}/{{amount}} <span>{{symbol}}</span>`\n      */\n    history_claimed: ComponentType<TypedTransProps<Readonly<{\n        claimedShares: string;\n        shares: string;\n        claimedAmount: string;\n        amount: string;\n        symbol: string;\n    }>, {\n        span: JSX.Element;\n    }>>;\n    /**\n      * `Claimed: <span>{{claimedShares}}/{{shares}}</span> <span>{{symbol}}</span>`\n      */\n    history_nft_claimed: ComponentType<TypedTransProps<Readonly<{\n        claimedShares: string;\n        shares: string;\n        symbol: string;\n    }>, {\n        span: JSX.Element;\n    }>>;\n    /**\n      * - nft_select_amount_one: `<span>{{count}}</span> NFT`\n    \n      * - nft_select_amount_other: `<span>{{count}}</span> NFTs`\n      */\n    nft_select_amount: ComponentType<TypedTransProps<{\n        readonly count: string | number | bigint;\n    }, {\n        span: JSX.Element;\n    }>>;\n} = /*#__PURE__*/ createProxy(createComponent);\n","import type { FungibleToken } from '@masknet/web3-shared-base'\nimport type { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { type RedPacketJSONPayload } from '@masknet/web3-providers/types'\nimport { pick, omit } from 'lodash-es'\n\nexport function reduceUselessPayloadInfo(payload: RedPacketJSONPayload): RedPacketJSONPayload {\n    const token = pick(payload.token, ['decimals', 'symbol', 'address', 'chainId']) as FungibleToken<\n        ChainId,\n        SchemaType.Native | SchemaType.ERC20\n    >\n    return { ...omit(payload, ['block_number']), token }\n}\n","import { BigNumber } from 'bignumber.js'\nimport { useBalance, useChainContext, useFungibleTokenBalance } from '@masknet/web3-hooks-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { useGasConfig } from './useGasConfig.js'\n\nexport function useTransactionValue(\n    originalValue?: BigNumber.Value,\n    gas?: string,\n    /** token address */ gasCurrency?: string,\n) {\n    const { data: nativeTokenBalance = '0', isLoading: loadingBalance } = useBalance(NetworkPluginID.PLUGIN_EVM)\n    const { data: gasCurrencyBalance = '0', isLoading: loadingTokenBalance } = useFungibleTokenBalance(\n        NetworkPluginID.PLUGIN_EVM,\n        gasCurrency,\n    )\n\n    const balance = gasCurrency ? gasCurrencyBalance : nativeTokenBalance\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    // #region amount minus estimate gas fee\n    const { gasPrice } = useGasConfig(chainId)\n\n    const estimateGasFee = !gas\n        ? undefined\n        : gasPrice && gasPrice !== '0'\n        ? new BigNumber(gasPrice).multipliedBy(gas).multipliedBy(1.5).toFixed()\n        : undefined\n\n    const transactionValue = new BigNumber(balance).isLessThan(\n        new BigNumber(originalValue ?? '0').plus(new BigNumber(estimateGasFee ?? '0')),\n    )\n        ? new BigNumber(originalValue ?? '0').minus(estimateGasFee ?? '0').toFixed()\n        : (originalValue as string)\n\n    return { transactionValue, estimateGasFee, loading: loadingBalance || loadingTokenBalance }\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');","import { useContract } from '@masknet/web3-hooks-evm'\nimport HappyRedPacketV1ABI from '@masknet/web3-contracts/abis/HappyRedPacketV1.json'\nimport HappyRedPacketV2ABI from '@masknet/web3-contracts/abis/HappyRedPacketV2.json'\nimport HappyRedPacketV3ABI from '@masknet/web3-contracts/abis/HappyRedPacketV3.json'\nimport HappyRedPacketV4ABI from '@masknet/web3-contracts/abis/HappyRedPacketV4.json'\nimport type { HappyRedPacketV1 } from '@masknet/web3-contracts/types/HappyRedPacketV1.js'\nimport type { HappyRedPacketV2 } from '@masknet/web3-contracts/types/HappyRedPacketV2.js'\nimport type { HappyRedPacketV3 } from '@masknet/web3-contracts/types/HappyRedPacketV3.js'\nimport type { HappyRedPacketV4 } from '@masknet/web3-contracts/types/HappyRedPacketV4.js'\nimport { type ChainId, useRedPacketConstants } from '@masknet/web3-shared-evm'\nimport type { AbiItem } from 'web3-utils'\n\nexport function useRedPacketContract(chainId: ChainId, version: number) {\n    const {\n        HAPPY_RED_PACKET_ADDRESS_V1: addressV1,\n        HAPPY_RED_PACKET_ADDRESS_V2: addressV2,\n        HAPPY_RED_PACKET_ADDRESS_V3: addressV3,\n        HAPPY_RED_PACKET_ADDRESS_V4: addressV4,\n    } = useRedPacketConstants(chainId)\n    const v1 = useContract<HappyRedPacketV1>(chainId, addressV1, HappyRedPacketV1ABI as AbiItem[])\n    const v2 = useContract<HappyRedPacketV2>(chainId, addressV2, HappyRedPacketV2ABI as AbiItem[])\n    const v3 = useContract<HappyRedPacketV3>(chainId, addressV3, HappyRedPacketV3ABI as AbiItem[])\n    const v4 = useContract<HappyRedPacketV4>(chainId, addressV4, HappyRedPacketV4ABI as AbiItem[])\n    const versions = [v1, v2, v3, v4] as const\n    return versions[version - 1]\n}\n","import { useCallback } from 'react'\nimport { useAsync, useAsyncFn } from 'react-use'\nimport { sha3 } from 'web3-utils'\nimport { omit } from 'lodash-es'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport type { HappyRedPacketV4 } from '@masknet/web3-contracts/types/HappyRedPacketV4.js'\nimport { type FungibleToken, isLessThan, toFixed } from '@masknet/web3-shared-base'\nimport {\n    type ChainId,\n    SchemaType,\n    useTokenConstants,\n    decodeEvents,\n    ContractTransaction,\n    type GasConfig,\n} from '@masknet/web3-shared-evm'\nimport { Web3 } from '@masknet/web3-providers'\nimport { useRedPacketContract } from './useRedPacketContract.js'\n\nexport interface RedPacketSettings {\n    shares: number\n    duration: number\n    isRandom: boolean\n    total: string\n    name: string\n    message: string\n    token?: FungibleToken<ChainId, SchemaType.Native | SchemaType.ERC20>\n}\n\nexport type ParamsObjType = {\n    publicKey: string\n    shares: number\n    isRandom: boolean\n    duration: number\n    seed: string\n    message: string\n    name: string\n    tokenType: number\n    tokenAddress: string\n    total: string\n    token?: FungibleToken<ChainId, SchemaType.Native | SchemaType.ERC20>\n}\n\nexport function checkParams(paramsObj: ParamsObjType) {\n    if (isLessThan(paramsObj.total, paramsObj.shares)) {\n        throw new Error('At least [number of lucky drops] tokens to your lucky drop.')\n    }\n\n    if (paramsObj.shares <= 0) {\n        throw new Error('At least 1 person should be able to claim the lucky drop.')\n    }\n\n    return true\n}\n\nexport type MethodParameters = Parameters<HappyRedPacketV4['methods']['create_red_packet']>\ninterface CreateParams {\n    gas: string | undefined\n    params: MethodParameters\n    paramsObj: ParamsObjType\n    gasError: Error | null\n}\n\nfunction useCreateParamsCallback(\n    expectedChainId: ChainId,\n    redPacketSettings: RedPacketSettings | undefined,\n    version: number,\n    publicKey: string,\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: expectedChainId })\n    const { NATIVE_TOKEN_ADDRESS } = useTokenConstants(chainId)\n    const redPacketContract = useRedPacketContract(chainId, version)\n    const getCreateParams = useCallback(async (): Promise<CreateParams | null> => {\n        if (!redPacketSettings || !redPacketContract) return null\n        const { duration, isRandom, message, name, shares, total, token } = redPacketSettings\n        const seed = Math.random().toString()\n        const tokenType = token!.schema === SchemaType.Native ? 0 : 1\n        const tokenAddress = token!.schema === SchemaType.Native ? NATIVE_TOKEN_ADDRESS : token!.address\n        if (!tokenAddress) return null\n\n        const paramsObj: ParamsObjType = {\n            publicKey,\n            shares,\n            isRandom,\n            duration,\n            seed: sha3(seed)!,\n            message,\n            name,\n            tokenType,\n            tokenAddress,\n            total,\n            token,\n        }\n\n        try {\n            checkParams(paramsObj)\n        } catch {\n            return null\n        }\n\n        const params = Object.values(omit(paramsObj, ['token'])) as MethodParameters\n\n        let gasError: Error | null = null\n        const value = toFixed(paramsObj.token?.schema === SchemaType.Native ? total : 0)\n\n        const gas = await (redPacketContract as HappyRedPacketV4).methods\n            .create_red_packet(...params)\n            .estimateGas({ from: account, value })\n            .catch((error: Error) => {\n                gasError = error\n            })\n\n        return { gas: gas ? toFixed(gas) : undefined, params, paramsObj, gasError }\n    }, [redPacketSettings, account, redPacketContract])\n\n    return getCreateParams\n}\n\nexport function useCreateParams(\n    expectedChainId: ChainId,\n    redPacketSettings: RedPacketSettings,\n    version: number,\n    publicKey: string,\n) {\n    const getCreateParams = useCreateParamsCallback(expectedChainId, redPacketSettings, version, publicKey)\n    return useAsync(() => getCreateParams(), [JSON.stringify(redPacketSettings), version, publicKey])\n}\n\nexport function useCreateCallback(\n    expectedChainId: ChainId,\n    redPacketSettings: RedPacketSettings,\n    version: number,\n    publicKey: string,\n    gasOption?: GasConfig,\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: expectedChainId })\n    const redPacketContract = useRedPacketContract(chainId, version)\n    const getCreateParams = useCreateParamsCallback(expectedChainId, redPacketSettings, version, publicKey)\n\n    return useAsyncFn(async () => {\n        const { token } = redPacketSettings\n        const createParams = await getCreateParams()\n        if (!token || !redPacketContract || !createParams) return\n\n        const { gas, params, paramsObj, gasError } = createParams\n        if (gasError) return\n\n        try {\n            checkParams(paramsObj)\n        } catch (error) {\n            return\n        }\n\n        // estimate gas and compose transaction\n        const tx = await new ContractTransaction(redPacketContract).fillAll(\n            redPacketContract.methods.create_red_packet(...params),\n            {\n                from: account,\n                value: toFixed(token.schema === SchemaType.Native ? paramsObj.total : 0),\n                gas,\n                chainId,\n                ...gasOption,\n            },\n        )\n\n        const hash = await Web3.sendTransaction(tx, {\n            paymentToken: gasOption?.gasCurrency,\n            chainId,\n            gasOptionType: gasOption?.gasOptionType,\n        })\n        const receipt = await Web3.getTransactionReceipt(hash, { chainId })\n        if (receipt) {\n            const events = decodeEvents(redPacketContract.options.jsonInterface, receipt.logs)\n\n            return {\n                hash,\n                receipt,\n                events,\n            }\n        }\n        return { hash, receipt }\n    }, [account, redPacketContract, redPacketSettings, gasOption, chainId])\n}\n","import { RedPacketPluginID } from './constants.js'\nimport { getPluginRPC } from '@masknet/plugin-infra'\n\nimport.meta.webpackHot?.accept()\nexport const RedPacketRPC = getPluginRPC<typeof import('./Worker/services.js')>(RedPacketPluginID)\n","import { useCallback, useEffect, useMemo, useRef } from 'react'\nimport { useAsync } from 'react-use'\nimport { BigNumber } from 'bignumber.js'\nimport { Icons } from '@masknet/icons'\nimport {\n    useChainContext,\n    useBalance,\n    useNativeToken,\n    useNativeTokenAddress,\n    useNativeTokenPrice,\n    useWallet,\n} from '@masknet/web3-hooks-base'\nimport { type GasConfig, useRedPacketConstants, type ChainId } from '@masknet/web3-shared-evm'\nimport { type RedPacketRecord, type RedPacketJSONPayload } from '@masknet/web3-providers/types'\nimport { Grid, Link, Paper, Typography } from '@mui/material'\nimport { makeStyles, ActionButton } from '@masknet/theme'\nimport { PluginWalletStatusBar, ChainBoundary, SelectGasSettingsToolbar } from '@masknet/shared'\nimport { useTransactionValue } from '@masknet/web3-hooks-evm'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { Launch as LaunchIcon } from '@mui/icons-material'\nimport { ChainResolver, ExplorerResolver, SmartPayBundler, Web3 } from '@masknet/web3-providers'\nimport { formatBalance, isSameAddress, isZero } from '@masknet/web3-shared-base'\nimport { type RedPacketSettings, useCreateCallback, useCreateParams } from './hooks/useCreateCallback.js'\nimport { useRedPacketTrans } from '../locales/index.js'\nimport { RedPacketRPC } from '../messages.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    link: {\n        display: 'flex',\n        marginLeft: theme.spacing(0.5),\n    },\n    grid: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    gridWrapper: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n    },\n    hit: {\n        display: 'flex',\n        alignItems: 'center',\n        maxWidth: 568,\n        fontWeight: 300,\n        borderRadius: 8,\n        backgroundColor: theme.palette.maskColor.bg,\n        color: theme.palette.text.primary,\n        padding: 12,\n        marginTop: 0,\n        marginBottom: 130,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    ellipsis: {\n        fontSize: 24,\n        fontWeight: 700,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n    },\n    controller: {\n        position: 'sticky',\n        bottom: 0,\n    },\n}))\n\ninterface ConfirmRedPacketFormProps {\n    onCreated: (payload: RedPacketJSONPayload) => void\n    onBack: () => void\n    onClose: () => void\n    settings?: RedPacketSettings\n    gasOption?: GasConfig\n    onGasOptionChange?: (config: GasConfig) => void\n    expectedChainId: ChainId\n}\n\nexport function RedPacketConfirmDialog(props: ConfirmRedPacketFormProps) {\n    const t = useRedPacketTrans()\n    const { settings, onCreated, onClose, gasOption, onGasOptionChange, expectedChainId } = props\n    const { classes, cx } = useStyles()\n    const { isLoading: loadingBalance } = useBalance(NetworkPluginID.PLUGIN_EVM)\n    const { account, chainId, networkType } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: expectedChainId })\n    useEffect(() => {\n        if (settings?.token?.chainId !== chainId) onClose()\n    }, [chainId, onClose])\n\n    // #region blocking\n    // password should remain the same rather than change each time when createState change,\n    //  otherwise password in database would be different from creating red-packet.\n    const contract_version = 4\n\n    const nativeTokenAddress = useNativeTokenAddress(NetworkPluginID.PLUGIN_EVM, { chainId })\n    const { account: publicKey, privateKey = '' } = useMemo(() => Web3.createAccount(), [])\n    const { data: nativeToken } = useNativeToken(NetworkPluginID.PLUGIN_EVM, { chainId })\n\n    // #region amount minus estimate gas fee\n    const { value: createParams } = useCreateParams(chainId, settings!, contract_version, publicKey)\n    const isNativeToken = isSameAddress(settings?.token?.address, nativeTokenAddress)\n    const { transactionValue, estimateGasFee } = useTransactionValue(\n        settings?.total,\n        createParams?.gas,\n        gasOption?.gasCurrency,\n    )\n    const isWaitGasBeMinus = (!estimateGasFee || loadingBalance) && isNativeToken\n\n    const isBalanceInsufficient =\n        isSameAddress(gasOption?.gasCurrency, nativeToken?.address) &&\n        new BigNumber(transactionValue).isLessThanOrEqualTo(0)\n    const total = isNativeToken ? (isBalanceInsufficient ? '0' : transactionValue) : (settings?.total as string)\n    const formatTotal = formatBalance(total, settings?.token?.decimals ?? 18, isNativeToken ? 3 : 0)\n    const formatAvg = formatBalance(\n        new BigNumber(total).div(settings?.shares ?? 1).toFixed(0, 1),\n        settings?.token?.decimals ?? 18,\n        isNativeToken ? 3 : 0,\n    )\n    const [{ loading: isCreating }, createCallback] = useCreateCallback(\n        chainId,\n        { ...settings!, total },\n        contract_version,\n        publicKey,\n        gasOption,\n    )\n    // #endregion\n    const createRedpacket = useCallback(async () => {\n        const result = await createCallback()\n        const { hash, receipt, events } = result ?? {}\n        if (typeof hash !== 'string') return\n        if (typeof receipt?.transactionHash !== 'string') return\n\n        // the settings is not available\n        if (!settings?.token) return\n\n        const CreationSuccess = (events?.CreationSuccess?.returnValues ?? {}) as {\n            creation_time: string\n            creator: string\n            id: string\n            token_address: string\n            total: string\n        }\n\n        // the events log is not available\n        if (!events?.CreationSuccess?.returnValues.id) return\n\n        payload.current.sender = {\n            address: account,\n            name: settings.name,\n            message: settings.message,\n        }\n        payload.current.is_random = settings.isRandom\n        payload.current.shares = settings.shares\n        payload.current.password = privateKey\n        payload.current.rpid = CreationSuccess.id\n        payload.current.total = CreationSuccess.total\n        payload.current.duration = settings.duration\n        payload.current.creation_time = Number.parseInt(CreationSuccess.creation_time, 10) * 1000\n        payload.current.token = settings.token\n\n        const record: RedPacketRecord = {\n            id: receipt.transactionHash,\n            from: '',\n            password: privateKey,\n            contract_version,\n        }\n        RedPacketRPC.addRedPacket(record, chainId)\n\n        // output the redpacket as JSON payload\n        onCreated(payload.current)\n    }, [createCallback, settings, onCreated])\n    // #endregion\n\n    // assemble JSON payload\n    const payload = useRef<RedPacketJSONPayload>({\n        network: ChainResolver.chainName(chainId),\n    } as RedPacketJSONPayload)\n\n    const { HAPPY_RED_PACKET_ADDRESS_V4 } = useRedPacketConstants(chainId)\n\n    useEffect(() => {\n        const contractAddress = HAPPY_RED_PACKET_ADDRESS_V4\n        if (!contractAddress) {\n            onClose()\n            return\n        }\n        payload.current.contract_address = contractAddress\n        payload.current.contract_version = contract_version\n        payload.current.network = ChainResolver.networkType(chainId)\n    }, [chainId, networkType, contract_version])\n\n    const nativeTokenDetailed = useMemo(() => ChainResolver.nativeCurrency(chainId), [chainId])\n    const { data: nativeTokenPrice = 0 } = useNativeTokenPrice(NetworkPluginID.PLUGIN_EVM, { chainId })\n    const wallet = useWallet()\n    const { value: smartPayChainId } = useAsync(async () => SmartPayBundler.getSupportedChainId(), [])\n    const { value: params } = useCreateParams(chainId, settings!, contract_version, publicKey)\n\n    return (\n        <>\n            <Grid container spacing={2} className={cx(classes.grid, classes.gridWrapper)}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h4\" color=\"textPrimary\" align=\"center\" className={classes.ellipsis}>\n                        {settings?.message}\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography variant=\"body1\" color=\"textSecondary\">\n                        {t.split_mode()}\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography variant=\"body1\" color=\"textPrimary\" align=\"right\">\n                        {settings?.isRandom ? t.random() : t.average()}\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={6}>\n                    <Typography variant=\"body1\" color=\"textSecondary\">\n                        {t.share()}\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography variant=\"body1\" color=\"textPrimary\" align=\"right\">\n                        {settings?.shares}\n                    </Typography>\n                </Grid>\n\n                {settings?.isRandom ? null : (\n                    <>\n                        <Grid item xs={6}>\n                            <Typography variant=\"body1\" color=\"textSecondary\">\n                                {t.amount_per_share()}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography\n                                variant=\"body1\"\n                                color=\"textPrimary\"\n                                align=\"right\"\n                                display=\"flex\"\n                                alignItems=\"center\"\n                                flexDirection=\"row-reverse\">\n                                <Link\n                                    color=\"textPrimary\"\n                                    className={classes.link}\n                                    href={ExplorerResolver.fungibleTokenLink(chainId, settings?.token?.address ?? '')}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    onClick={stop}>\n                                    <LaunchIcon fontSize=\"small\" />\n                                </Link>\n                                {isBalanceInsufficient ? '0' : formatAvg} {settings?.token?.symbol}\n                            </Typography>\n                        </Grid>\n                    </>\n                )}\n\n                <Grid item xs={6}>\n                    <Typography variant=\"body1\" color=\"textSecondary\">\n                        {t.total_cost()}\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography\n                        variant=\"body1\"\n                        color=\"textPrimary\"\n                        align=\"right\"\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        flexDirection=\"row-reverse\">\n                        <Link\n                            color=\"textPrimary\"\n                            className={classes.link}\n                            href={ExplorerResolver.fungibleTokenLink(chainId, settings?.token?.address ?? '')}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            onClick={stop}>\n                            <LaunchIcon fontSize=\"small\" />\n                        </Link>\n                        {formatTotal} {settings?.token?.symbol}\n                    </Typography>\n                </Grid>\n                {estimateGasFee && !isZero(estimateGasFee) ? (\n                    <SelectGasSettingsToolbar\n                        nativeToken={nativeTokenDetailed}\n                        nativeTokenPrice={nativeTokenPrice}\n                        supportMultiCurrency={!!wallet?.owner && chainId === smartPayChainId}\n                        gasConfig={gasOption}\n                        gasLimit={Number.parseInt(params?.gas ?? '0', 10)}\n                        onChange={onGasOptionChange}\n                        estimateGasFee={estimateGasFee}\n                        editMode\n                    />\n                ) : null}\n                <Grid item xs={12}>\n                    <Paper className={classes.hit}>\n                        <Icons.SettingInfo size={20} />\n                        <Typography\n                            variant=\"body1\"\n                            align=\"left\"\n                            marginTop=\"1px\"\n                            marginLeft=\"8.5px\"\n                            style={{ lineHeight: '18px' }}\n                            fontSize=\"14px\">\n                            {t.hint()}\n                        </Typography>\n                    </Paper>\n                </Grid>\n            </Grid>\n            <PluginWalletStatusBar className={classes.controller}>\n                <ChainBoundary expectedPluginID={NetworkPluginID.PLUGIN_EVM} expectedChainId={chainId}>\n                    <ActionButton\n                        loading={isCreating || isWaitGasBeMinus}\n                        fullWidth\n                        onClick={createRedpacket}\n                        disabled={isBalanceInsufficient || isWaitGasBeMinus || isCreating}>\n                        {isCreating ? t.confirming() : t.confirm()}\n                    </ActionButton>\n                </ChainBoundary>\n            </PluginWalletStatusBar>\n        </>\n    )\n}\n","import type { FungibleToken } from '@masknet/web3-shared-base'\nimport type { SchemaType, ChainId } from '@masknet/web3-shared-evm'\nimport type { BigNumber } from 'bignumber.js'\n\n// #region erc20 red packet\nexport interface RedPacketRecord {\n    id: string\n    /** From twitter/facebook url */\n    from: string\n    password: string\n    contract_version: number\n}\n\nexport interface RedPacketRecordInDatabase extends RedPacketRecord {\n    /** An unique record type in DB */\n    type: 'red-packet'\n}\n\nexport enum RedPacketStatus {\n    claimed = 'claimed',\n    expired = 'expired',\n    empty = 'empty',\n    refunded = 'refunded',\n}\n\ninterface RedPacketBasic {\n    contract_address: string\n    rpid: string\n    txid: string\n    password: string\n    shares: number\n    is_random: boolean\n    total: string\n    creation_time: number\n    duration: number\n    block_number?: number\n}\n\nexport interface RedPacketJSONPayload extends RedPacketBasic {\n    contract_version: number\n    sender: {\n        address: string\n        name: string\n        message: string\n    }\n    chainId?: ChainId\n    network?: string\n    token?: FungibleToken<ChainId, SchemaType>\n    total_remaining?: string\n}\n\nexport interface RedPacketJSONPayloadFromChain extends Omit<RedPacketJSONPayload, 'token'> {\n    token_address: string\n}\n\nexport interface RedpacketAvailability {\n    token_address: string\n    balance: string\n    total: number\n    claimed: number\n    expired: boolean\n    claimed_amount: string\n}\n// #endregion\n\n// #region nft red packet\nexport interface RedPacketNftJSONPayload {\n    id: string\n    txid: string\n    duration: number\n    message: string\n    senderName: string\n    contractName: string\n    contractAddress: string\n    contractVersion: number\n    contractTokenURI: string\n    privateKey: string\n    chainId: ChainId\n}\n\nexport interface NftRedPacketJSONPayload extends Omit<RedPacketBasic, 'is_random' | 'total'> {\n    contract_version: number\n    sender: {\n        address: string\n        name: string\n        message: string\n    }\n    chainId: ChainId\n    network?: string\n    token_ids: string[]\n    token_address: string\n    token?: Pick<FungibleToken<ChainId, SchemaType>, 'address' | 'name' | 'decimals' | 'symbol'>\n}\n\nexport interface RedPacketNftRecord {\n    id: string\n    password: string\n    contract_version: number\n}\n\nexport interface RedPacketNftRecordInDatabase extends RedPacketNftRecord {\n    /** An unique record type in DB */\n    type: 'red-packet-nft'\n}\n\nexport type CreateRedpacketParam = {\n    _duration: BigNumber\n    _ifrandom: boolean\n    _message: string\n    _name: string\n    _number: BigNumber\n    _public_key: string\n    _seed: string\n    _token_addr: string\n    _token_type: BigNumber\n    _total_tokens: BigNumber\n}\n\nexport type CreateNFTRedpacketParam = {\n    _public_key: string\n    _duration: BigNumber\n    _seed: string\n    _message: string\n    _name: string\n    _token_addr: string\n    _erc721_token_ids: BigNumber[]\n}\n","import { useAsyncRetry } from 'react-use'\nimport type { ChainId, ProviderType, Transaction } from '@masknet/web3-shared-evm'\nimport type { ConnectionOptions_Base } from '@masknet/web3-providers/types'\nimport type { HappyRedPacketV4 } from '@masknet/web3-contracts/types/HappyRedPacketV4.js'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useRedPacketContract } from './useRedPacketContract.js'\n\nexport function useAvailability(\n    id: string,\n    contract_address: string,\n    version: number,\n    options?: ConnectionOptions_Base<ChainId, ProviderType, Transaction>,\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({\n        account: options?.account,\n        chainId: options?.chainId,\n    })\n    const redPacketContract = useRedPacketContract(chainId, version) as HappyRedPacketV4\n\n    return useAsyncRetry(async () => {\n        if (!id || !contract_address || !redPacketContract) return null\n        return redPacketContract.methods.check_availability(id).call({\n            // check availability is ok w/o account\n            from: account,\n        })\n    }, [id, account, contract_address, redPacketContract])\n}\n","import { compact } from 'lodash-es'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { NetworkResolver } from '@masknet/web3-providers'\nimport { ChainId, type NetworkType } from '@masknet/web3-shared-evm'\nimport { type RedPacketJSONPayload, RedPacketStatus } from '@masknet/web3-providers/types'\nimport { useAvailability } from './useAvailability.js'\n\n/**\n * Fetch the red packet info from the chain\n * @param payload\n */\nexport function useAvailabilityComputed(account: string, payload: RedPacketJSONPayload) {\n    const parsedChainId =\n        payload.token?.chainId ??\n        NetworkResolver.networkChainId((payload.network ?? '') as NetworkType) ??\n        ChainId.Mainnet\n\n    const asyncResult = useAvailability(payload.rpid, payload.contract_address, payload.contract_version, {\n        account,\n        chainId: parsedChainId,\n    })\n\n    const result = asyncResult\n    const availability = result.value\n\n    if (!availability)\n        return {\n            ...asyncResult,\n            payload,\n            computed: {\n                canClaim: false,\n                canRefund: false,\n                listOfStatus: [] as RedPacketStatus[],\n            },\n        }\n    const isEmpty = availability.balance === '0'\n    const isExpired = availability.expired\n    const isClaimed = availability.claimed_amount !== '0'\n    const isRefunded = isEmpty && availability.claimed < availability.total\n    const isCreator = isSameAddress(payload?.sender.address ?? '', account)\n    const isPasswordValid = !!(payload.password && payload.password !== 'PASSWORD INVALID')\n    return {\n        ...asyncResult,\n        computed: {\n            canClaim: !isExpired && !isEmpty && !isClaimed && isPasswordValid,\n            canRefund: isExpired && !isEmpty && isCreator,\n            canSend: !isEmpty && !isExpired && !isRefunded && isCreator,\n            isPasswordValid,\n            listOfStatus: compact([\n                isClaimed ? RedPacketStatus.claimed : undefined,\n                isEmpty ? RedPacketStatus.empty : undefined,\n                isRefunded ? RedPacketStatus.refunded : undefined,\n                isExpired ? RedPacketStatus.expired : undefined,\n            ]),\n        },\n    }\n}\n","import { useAsyncRetry } from 'react-use'\nimport type { AbiItem } from 'web3-utils'\nimport type { BigNumber } from 'bignumber.js'\nimport { decodeEvents, useRedPacketConstants } from '@masknet/web3-shared-evm'\nimport REDPACKET_ABI from '@masknet/web3-contracts/abis/HappyRedPacketV4.json'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { Web3 } from '@masknet/web3-providers'\n\nexport function useCreateRedPacketReceipt(txid: string) {\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { HAPPY_RED_PACKET_ADDRESS_V4 } = useRedPacketConstants(chainId)\n\n    return useAsyncRetry(async () => {\n        if (!txid) return null\n\n        const receipt = await Web3.getTransactionReceipt(txid, { chainId })\n        if (!receipt) return null\n\n        const log = receipt.logs.find((log) => isSameAddress(log.address, HAPPY_RED_PACKET_ADDRESS_V4))\n        if (!log) return null\n\n        const eventParams = decodeEvents(REDPACKET_ABI as AbiItem[], [log]) as unknown as {\n            CreationSuccess: {\n                id: string\n                creation_time: BigNumber\n            }\n        }\n\n        return {\n            rpid: eventParams.CreationSuccess.id ?? '',\n            creation_time: eventParams.CreationSuccess.creation_time.toNumber() * 1000,\n        }\n    }, [txid, HAPPY_RED_PACKET_ADDRESS_V4, chainId])\n}\n","import { useState } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { type ChainId, ContractTransaction } from '@masknet/web3-shared-evm'\nimport { Web3 } from '@masknet/web3-providers'\nimport { useRedPacketContract } from './useRedPacketContract.js'\n\nexport function useRefundCallback(version: number, from: string, id?: string, expectedChainId?: ChainId) {\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: expectedChainId })\n    const [isRefunded, setIsRefunded] = useState(false)\n    const redPacketContract = useRedPacketContract(chainId, version)\n\n    const [state, refundCallback] = useAsyncFn(async () => {\n        if (!redPacketContract || !id) return\n\n        setIsRefunded(false)\n        const tx = await new ContractTransaction(redPacketContract).fillAll(redPacketContract.methods.refund(id), {\n            from,\n        })\n        const hash = await Web3.sendTransaction(tx, {\n            chainId,\n        })\n        setIsRefunded(true)\n        return hash\n    }, [id, redPacketContract, chainId, from])\n\n    return [state, isRefunded, refundCallback] as const\n}\n","import { i18NextInstance } from '@masknet/shared-base'\n\nexport function dateTimeFormat(date: Date, includeTime = true) {\n    return new Intl.DateTimeFormat(\n        i18NextInstance.language,\n        includeTime\n            ? {\n                  year: 'numeric',\n                  month: 'numeric',\n                  day: 'numeric',\n                  hour: 'numeric',\n                  minute: 'numeric',\n                  hourCycle: 'h23',\n              }\n            : {\n                  year: 'numeric',\n                  month: 'numeric',\n                  day: 'numeric',\n              },\n    ).format(date)\n}\n","import { type MouseEvent, useCallback, useState, useMemo, useRef, useEffect } from 'react'\nimport { nextDay, intervalToDuration } from 'date-fns'\nimport { useIntersectionObserver } from '@react-hookz/web'\nimport { Box, Typography, Popper, useMediaQuery, type Theme, ListItem } from '@mui/material'\nimport { makeStyles, ActionButton } from '@masknet/theme'\nimport { type ChainId, type SchemaType } from '@masknet/web3-shared-evm'\nimport {\n    type RedPacketJSONPayload,\n    type RedPacketJSONPayloadFromChain,\n    RedPacketStatus,\n} from '@masknet/web3-providers/types'\nimport { RedPacketTrans, useRedPacketTrans } from '../locales/index.js'\nimport { useAvailabilityComputed } from './hooks/useAvailabilityComputed.js'\nimport { useCreateRedPacketReceipt } from './hooks/useCreateRedPacketReceipt.js'\nimport { useRefundCallback } from './hooks/useRefundCallback.js'\nimport { useChainContext, useFungibleToken, useNetworkDescriptor } from '@masknet/web3-hooks-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { formatBalance, type FungibleToken, minus } from '@masknet/web3-shared-base'\nimport { TokenIcon } from '@masknet/shared'\nimport { dateTimeFormat } from './utils/formatDate.js'\n\nconst useStyles = makeStyles<{ listItemBackground?: string; listItemBackgroundIcon?: string }>()((\n    theme,\n    { listItemBackground, listItemBackgroundIcon },\n) => {\n    const smallQuery = `@media (max-width: ${theme.breakpoints.values.sm}px)`\n    return {\n        message: {\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            [smallQuery]: {\n                whiteSpace: 'normal',\n            },\n        },\n        root: {\n            width: '100%',\n            padding: 0,\n            background: theme.palette.common.white,\n            marginBottom: theme.spacing(1.5),\n            borderRadius: 8,\n            '&:last-child': {\n                marginBottom: '80px',\n            },\n        },\n        contentItem: {\n            width: '100%',\n            borderRadius: 8,\n            position: 'static !important' as any,\n            height: 'auto !important',\n            padding: theme.spacing(1.5),\n            background: listItemBackground ?? theme.palette.background.default,\n            [smallQuery]: {\n                padding: theme.spacing(2, 1.5),\n            },\n            '&:before': {\n                position: 'absolute',\n                content: '\"\"',\n                top: 45,\n                left: 400,\n                zIndex: 0,\n                width: 114,\n                opacity: 0.2,\n                height: 61,\n                filter: 'blur(1.5px)',\n                background: listItemBackgroundIcon,\n                backgroundRepeat: 'no-repeat',\n                backgroundSize: '114px 114px',\n            },\n        },\n        box: {\n            display: 'flex',\n            width: '100%',\n        },\n        content: {\n            transform: 'RedPacketTransY(-4px)',\n            width: '100%',\n            [smallQuery]: {\n                paddingLeft: theme.spacing(1.5),\n                width: 'auto',\n            },\n        },\n        section: {\n            display: 'flex',\n            width: '100%',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: 15,\n            [smallQuery]: {\n                flexWrap: 'wrap',\n            },\n        },\n        div: {\n            maxWidth: 350,\n        },\n        title: {\n            color: theme.palette.maskColor.dark,\n            fontWeight: 700,\n            fontSize: 14,\n        },\n        info: {\n            color: theme.palette.maskColor.dark,\n            [smallQuery]: {\n                fontSize: 13,\n            },\n            fontSize: 14,\n        },\n        infoTitle: {\n            color: theme.palette.maskColor.secondaryDark,\n            marginRight: 4,\n            fontSize: 14,\n            [smallQuery]: {\n                fontSize: 13,\n            },\n        },\n        actionButton: {\n            fontSize: 12,\n            width: 88,\n            height: 32,\n            background: theme.palette.maskColor.dark,\n            color: theme.palette.maskColor.white,\n            borderRadius: '999px',\n            minHeight: 'auto',\n            [smallQuery]: {\n                marginTop: theme.spacing(1),\n            },\n            '&:disabled': {\n                background: theme.palette.maskColor.dark,\n                color: theme.palette.common.white,\n            },\n            '&:hover': {\n                background: theme.palette.maskColor.dark,\n                color: theme.palette.maskColor.white,\n                opacity: 0.8,\n            },\n        },\n        footer: {\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            flexWrap: 'nowrap',\n            marginTop: 15,\n        },\n        footerInfo: {\n            fontSize: 14,\n            color: theme.palette.maskColor.secondaryDark,\n            '& span': {\n                color: theme.palette.maskColor.dark,\n                marginRight: 2,\n            },\n        },\n        popper: {\n            overflow: 'visible',\n            backgroundColor: theme.palette.maskColor.dark,\n            transform: 'RedPacketTrans(196px, 47px)',\n            borderRadius: 8,\n            width: 328,\n            padding: 10,\n        },\n        arrow: {\n            position: 'absolute',\n            top: -12,\n            right: 40,\n            width: 0,\n            height: 0,\n            borderLeft: '6px solid transparent',\n            borderRight: '6px solid transparent',\n            borderBottom: `6px solid ${theme.palette.maskColor.dark}`,\n            transform: 'RedPacketTransY(6px)',\n        },\n        popperText: {\n            cursor: 'default',\n            color: theme.palette.common.white,\n            fontSize: 12,\n        },\n        disabledButton: {\n            background: theme.palette.maskColor.dark,\n            color: theme.palette.common.white,\n            opacity: 0.6,\n        },\n        fullWidthBox: {\n            width: '100%',\n            display: 'flex',\n        },\n        icon: {\n            width: 18,\n            height: 18,\n            marginLeft: 6,\n            zIndex: -1,\n        },\n        invisible: {\n            visibility: 'hidden',\n        },\n    }\n})\n\ninterface RedPacketInHistoryListProps {\n    history: RedPacketJSONPayload | RedPacketJSONPayloadFromChain\n    onSelect: (payload: RedPacketJSONPayload) => void\n}\nexport function RedPacketInHistoryList(props: RedPacketInHistoryListProps) {\n    const { history, onSelect } = props\n    const t = useRedPacketTrans()\n    const [isViewed, setIsViewed] = useState(false)\n\n    const ref = useRef<HTMLLIElement | null>(null)\n    const entry = useIntersectionObserver(ref, {})\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const isSmall = useMediaQuery((theme: Theme) => theme.breakpoints.down('sm'))\n    const { value: receipt } = useCreateRedPacketReceipt(isViewed && !history.rpid ? history.txid : '')\n    const networkDescriptor = useNetworkDescriptor(NetworkPluginID.PLUGIN_EVM, chainId)\n\n    const rpid = history.rpid ?? receipt?.rpid ?? ''\n    const creation_time = history.creation_time ?? receipt?.creation_time ?? 0\n\n    const { classes, cx } = useStyles({\n        listItemBackground: networkDescriptor?.backgroundGradient,\n        listItemBackgroundIcon: networkDescriptor ? `url(\"${networkDescriptor.icon}\")` : undefined,\n    })\n\n    const patchedHistory: RedPacketJSONPayload | RedPacketJSONPayloadFromChain = useMemo(\n        () => ({ ...props.history, rpid, creation_time }),\n        [props.history, rpid, creation_time],\n    )\n\n    useEffect(() => {\n        if (entry?.isIntersecting) setIsViewed(true)\n    }, [entry?.isIntersecting])\n\n    const {\n        value: availability,\n        computed: { canRefund, canSend, listOfStatus, isPasswordValid },\n        retry: revalidateAvailability,\n    } = useAvailabilityComputed(account, patchedHistory)\n\n    const claimerNumber = availability ? Number(availability.claimed) : 0\n    const total_remaining = availability?.balance\n\n    const [{ loading: isRefunding }, refunded, refundCallback] = useRefundCallback(\n        patchedHistory.contract_version,\n        account,\n        rpid,\n    )\n    const tokenAddress =\n        (patchedHistory as RedPacketJSONPayload).token?.address ??\n        (patchedHistory as RedPacketJSONPayloadFromChain).token_address\n\n    const { data: tokenDetailed } = useFungibleToken(NetworkPluginID.PLUGIN_EVM, tokenAddress ?? '', undefined, {\n        chainId,\n    })\n\n    const historyToken = {\n        ...(tokenDetailed ?? (patchedHistory as RedPacketJSONPayload).token),\n        address: tokenAddress,\n    } as FungibleToken<ChainId, SchemaType.Native | SchemaType.ERC20>\n\n    const onSendOrRefund = useCallback(async () => {\n        if (canRefund) {\n            await refundCallback()\n            revalidateAvailability()\n        }\n        if (canSend) onSelect({ ...patchedHistory, token: historyToken })\n    }, [onSelect, refundCallback, canRefund, canSend, patchedHistory, historyToken])\n\n    // #region password lost tips\n    const [anchorEl, setAnchorEl] = useState<(EventTarget & HTMLButtonElement) | null>(null)\n    const openPopper = !!anchorEl\n    // #endregion\n\n    // #region refund time\n    const refundDuration =\n        canSend && !isPasswordValid ? intervalToDuration({ start: Date.now(), end: nextDay(creation_time, 1) }) : null\n    const formatRefundDuration = `${refundDuration?.hours}h ${refundDuration?.minutes}m`\n    // #endregion\n\n    return (\n        <ListItem className={classes.root}>\n            <section className={classes.contentItem} ref={ref}>\n                <Box className={classes.box}>\n                    <Box className={classes.content}>\n                        <section className={classes.section}>\n                            <div className={classes.div}>\n                                <div className={classes.fullWidthBox}>\n                                    <Typography variant=\"body1\" className={cx(classes.title, classes.message)}>\n                                        {patchedHistory.sender.message === ''\n                                            ? t.best_wishes()\n                                            : patchedHistory.sender.message}\n                                    </Typography>\n                                </div>\n                                <div className={classes.fullWidthBox}>\n                                    <Typography variant=\"body1\" className={cx(classes.infoTitle, classes.message)}>\n                                        {t.create_time()}\n                                    </Typography>\n                                    <Typography\n                                        variant=\"body1\"\n                                        className={cx(classes.info, classes.message, rpid ? '' : classes.invisible)}>\n                                        {t.history_duration({ time: dateTimeFormat(new Date(creation_time)) })}\n                                    </Typography>\n                                </div>\n                            </div>\n                            {canRefund || canSend || listOfStatus.includes(RedPacketStatus.empty) || refunded ? (\n                                <>\n                                    <ActionButton\n                                        loading={isRefunding}\n                                        fullWidth={isSmall}\n                                        onClick={canSend && !isPasswordValid ? undefined : onSendOrRefund}\n                                        onMouseEnter={(event: MouseEvent<HTMLButtonElement>) => {\n                                            canSend && !isPasswordValid ? setAnchorEl(event.currentTarget) : undefined\n                                        }}\n                                        onMouseLeave={() => {\n                                            canSend && !isPasswordValid ? setAnchorEl(null) : undefined\n                                        }}\n                                        disabled={\n                                            listOfStatus.includes(RedPacketStatus.empty) || refunded || isRefunding\n                                        }\n                                        className={cx(\n                                            classes.actionButton,\n                                            canSend && !isPasswordValid ? classes.disabledButton : '',\n                                        )}\n                                        size=\"large\">\n                                        {canSend\n                                            ? t.share()\n                                            : isRefunding\n                                            ? t.refunding()\n                                            : listOfStatus.includes(RedPacketStatus.empty) || refunded\n                                            ? t.empty()\n                                            : t.refund()}\n                                    </ActionButton>\n                                    <Popper\n                                        className={classes.popper}\n                                        id=\"popper\"\n                                        open={openPopper}\n                                        anchorEl={anchorEl}\n                                        transition\n                                        disablePortal>\n                                        <Typography className={classes.popperText}>\n                                            {t.data_broken({ duration: formatRefundDuration })}\n                                        </Typography>\n                                        <div className={classes.arrow} />\n                                    </Popper>\n                                </>\n                            ) : null}\n                        </section>\n\n                        <section className={classes.footer}>\n                            <Typography variant=\"body1\" className={classes.footerInfo}>\n                                <RedPacketTrans.history_claimed\n                                    components={{\n                                        span: <span />,\n                                    }}\n                                    values={{\n                                        claimedShares: String(claimerNumber),\n                                        shares: String(patchedHistory.shares),\n                                        amount: formatBalance(\n                                            patchedHistory.total,\n                                            historyToken?.decimals ?? 18,\n                                            6,\n                                            true,\n                                        ),\n                                        claimedAmount: rpid\n                                            ? formatBalance(\n                                                  minus(patchedHistory.total, total_remaining ?? 0),\n                                                  historyToken?.decimals ?? 18,\n                                                  6,\n                                                  true,\n                                              )\n                                            : '',\n                                        symbol: historyToken?.symbol,\n                                    }}\n                                />\n                            </Typography>\n                            {historyToken?.logoURL ? (\n                                <TokenIcon\n                                    className={classes.icon}\n                                    address={historyToken?.address ?? ''}\n                                    name={historyToken?.name}\n                                    logoURL={historyToken?.logoURL}\n                                />\n                            ) : null}\n                        </section>\n                    </Box>\n                </Box>\n            </section>\n        </ListItem>\n    )\n}\n","import { useAsyncRetry } from 'react-use'\nimport { useMemo } from 'react'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport { type ChainId, getRedPacketConstants } from '@masknet/web3-shared-evm'\nimport { RedPacket, TheGraphRedPacket, Web3 } from '@masknet/web3-providers'\nimport { useWallet } from '@masknet/web3-hooks-base'\nimport { RedPacketRPC } from '../../messages.js'\nimport type { RedPacketJSONPayloadFromChain } from '@masknet/web3-providers/types'\n\nconst CREATE_RED_PACKET_METHOD_ID = '0x5db05aba'\n\nexport function useRedPacketHistory(address: string, chainId: ChainId) {\n    const wallet = useWallet()\n    const { HAPPY_RED_PACKET_ADDRESS_V4_BLOCK_HEIGHT, HAPPY_RED_PACKET_ADDRESS_V4 } = getRedPacketConstants(chainId)\n    const result = useAsyncRetry(async () => {\n        if (!HAPPY_RED_PACKET_ADDRESS_V4) return EMPTY_LIST as RedPacketJSONPayloadFromChain[]\n\n        if (wallet?.owner) {\n            const historyTransactions = await TheGraphRedPacket.getHistories(\n                chainId,\n                address,\n                HAPPY_RED_PACKET_ADDRESS_V4,\n            )\n\n            if (!historyTransactions) return EMPTY_LIST as RedPacketJSONPayloadFromChain[]\n            return RedPacketRPC.getRedPacketHistoryFromDatabase(historyTransactions)\n        }\n\n        const blockNumber = await Web3.getBlockNumber({ chainId })\n        const payloadList = await RedPacket.getHistories(\n            chainId,\n            address,\n            HAPPY_RED_PACKET_ADDRESS_V4,\n            CREATE_RED_PACKET_METHOD_ID,\n            HAPPY_RED_PACKET_ADDRESS_V4_BLOCK_HEIGHT ?? 0,\n            blockNumber,\n        )\n        if (!payloadList) return EMPTY_LIST as RedPacketJSONPayloadFromChain[]\n\n        return RedPacketRPC.getRedPacketHistoryFromDatabase(payloadList)\n    }, [address, chainId, wallet?.owner])\n\n    const value = useMemo(\n        () => result.value?.filter((x) => x.chainId === chainId).sort((a, b) => b.creation_time - a.creation_time),\n        [chainId, result.value],\n    )\n\n    return { ...result, value }\n}\n","import { Typography, List, Box } from '@mui/material'\nimport { makeStyles, LoadingBase } from '@masknet/theme'\nimport { useSharedTrans } from '@masknet/shared'\nimport { type RedPacketJSONPayload } from '@masknet/web3-providers/types'\nimport { RedPacketInHistoryList } from './RedPacketInHistoryList.js'\nimport { useRedPacketHistory } from './hooks/useRedPacketHistory.js'\nimport { useRedPacketTrans } from '../locales/index.js'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { Icons } from '@masknet/icons'\nimport { type NetworkPluginID } from '@masknet/shared-base'\n\nconst useStyles = makeStyles()((theme) => {\n    const smallQuery = `@media (max-width: ${theme.breakpoints.values.sm}px)`\n    return {\n        root: {\n            display: 'flex',\n            padding: 0,\n            height: 474,\n            boxSizing: 'border-box',\n            flexDirection: 'column',\n            margin: '0 auto',\n            overflow: 'auto',\n            [smallQuery]: {\n                padding: 0,\n            },\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        placeholder: {\n            display: 'flex',\n            flexDirection: 'column',\n            height: 474,\n            justifyContent: 'center',\n            alignItems: 'center',\n            textAlign: 'center',\n            width: 360,\n            margin: '0 auto',\n        },\n        emptyIcon: {\n            width: 36,\n            height: 36,\n            marginBottom: 13,\n        },\n        loading: {\n            fontSize: 14,\n            marginTop: 13,\n        },\n    }\n})\n\ninterface RedPacketHistoryListProps {\n    onSelect: (payload: RedPacketJSONPayload) => void\n}\n\nexport function RedPacketHistoryList(props: RedPacketHistoryListProps) {\n    const { onSelect } = props\n    const t = useRedPacketTrans()\n    const sharedI18N = useSharedTrans()\n    const { classes } = useStyles()\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { value: histories, loading } = useRedPacketHistory(account, chainId)\n\n    if (loading) {\n        return (\n            <Box\n                style={{\n                    height: 474,\n                    alignItems: 'center',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    flexDirection: 'column',\n                }}>\n                <LoadingBase size={30} />\n                <Typography className={classes.loading}>{sharedI18N.loading()}</Typography>\n            </Box>\n        )\n    }\n\n    if (!histories?.length) {\n        return (\n            <Typography className={classes.placeholder} color=\"textSecondary\">\n                <Icons.EmptySimple className={classes.emptyIcon} />\n                {t.search_no_result()}\n            </Typography>\n        )\n    }\n\n    return (\n        <div className={classes.root}>\n            <List style={{ padding: '16px 0 0' }}>\n                {histories.map((history, i) => (\n                    <RedPacketInHistoryList key={i} history={history} onSelect={onSelect} />\n                ))}\n            </List>\n        </div>\n    )\n}\n","import { useAsyncRetry } from 'react-use'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport { type ChainId, getNftRedPacketConstants } from '@masknet/web3-shared-evm'\nimport { useWallet } from '@masknet/web3-hooks-base'\nimport { RedPacket, TheGraphRedPacket, Web3 } from '@masknet/web3-providers'\nimport { RedPacketRPC } from '../../messages.js'\nimport type { NftRedPacketJSONPayload } from '@masknet/web3-providers/types'\n\nconst CREATE_RED_PACKET_METHOD_ID = '0x29e744bf'\n\nexport function useNftRedPacketHistory(address: string, chainId: ChainId) {\n    const wallet = useWallet()\n    const { NFT_RED_PACKET_ADDRESS_BLOCK_HEIGHT, RED_PACKET_NFT_ADDRESS } = getNftRedPacketConstants(chainId)\n\n    return useAsyncRetry(async () => {\n        if (!RED_PACKET_NFT_ADDRESS) return EMPTY_LIST as NftRedPacketJSONPayload[]\n        if (wallet?.owner) {\n            const historyTransactions = await TheGraphRedPacket.getNFTHistories(\n                chainId,\n                address,\n                RED_PACKET_NFT_ADDRESS,\n            )\n            if (!historyTransactions) return EMPTY_LIST as NftRedPacketJSONPayload[]\n\n            return RedPacketRPC.getNftRedPacketHistory(historyTransactions)\n        }\n        const blockNumber = await Web3.getBlockNumber({ chainId })\n        const payloadList = await RedPacket.getNFTHistories(\n            chainId,\n            address,\n            RED_PACKET_NFT_ADDRESS,\n            CREATE_RED_PACKET_METHOD_ID,\n            NFT_RED_PACKET_ADDRESS_BLOCK_HEIGHT ?? 0,\n            blockNumber,\n        )\n        if (!payloadList) return EMPTY_LIST as NftRedPacketJSONPayload[]\n\n        return RedPacketRPC.getNftRedPacketHistory(payloadList)\n    }, [address, chainId, wallet?.owner])\n}\n","import type { AbiItem } from 'web3-utils'\nimport NftRedPacketABI from '@masknet/web3-contracts/abis/NftRedPacket.json'\nimport { type ChainId, useNftRedPacketConstants } from '@masknet/web3-shared-evm'\nimport type { NftRedPacket } from '@masknet/web3-contracts/types/NftRedPacket.js'\nimport { useContract } from '@masknet/web3-hooks-evm'\n\nexport function useNftRedPacketContract(chainId?: ChainId) {\n    const { RED_PACKET_NFT_ADDRESS } = useNftRedPacketConstants(chainId)\n    return useContract<NftRedPacket>(chainId, RED_PACKET_NFT_ADDRESS, NftRedPacketABI as AbiItem[])\n}\n","import { useAsyncRetry } from 'react-use'\nimport { BigNumber } from 'bignumber.js'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport { useNftRedPacketContract } from './useNftRedPacketContract.js'\n\nexport function useAvailabilityNftRedPacket(id: string, from: string, chainId?: ChainId) {\n    const nftRedPacketContract = useNftRedPacketContract(chainId)\n    return useAsyncRetry(async () => {\n        if (!id || !nftRedPacketContract) return null\n        const availability = await nftRedPacketContract.methods.check_availability(id).call({\n            // check availability is ok w/o account\n            from,\n        })\n\n        const result = await nftRedPacketContract.methods.check_erc721_remain_ids(id).call({\n            // check availability is ok w/o account\n            from,\n        })\n\n        const isClaimed = availability.claimed_id !== '0'\n        const totalAmount = result.erc721_token_ids.length\n        const bits = new BigNumber(result.bit_status).toString(2).split('')\n        const claimedAmount = bits.filter((bit) => bit === '1').length\n        const isClaimedAll = totalAmount === claimedAmount\n        const isCompleted = isClaimedAll && !isClaimed\n        const isEnd = isCompleted || availability.expired\n\n        const bitStatusList = bits.reverse().map((bit) => bit === '1')\n\n        return {\n            isClaimed,\n            totalAmount,\n            claimedAmount,\n            remaining: totalAmount - claimedAmount,\n            isClaimedAll,\n            isCompleted,\n            isEnd,\n            bitStatusList,\n            ...availability,\n        }\n    }, [id, from, nftRedPacketContract])\n}\n","import { useMemo } from 'react'\nimport { compact } from 'lodash-es'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { type NftRedPacketJSONPayload, RedPacketStatus } from '@masknet/web3-providers/types'\nimport { useAvailabilityNftRedPacket } from './useAvailabilityNftRedPacket.js'\n\n/**\n * Fetch the red packet info from the chain\n * @param payload\n */\nexport function useNftAvailabilityComputed(account: string, payload: NftRedPacketJSONPayload) {\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const asyncResult = useAvailabilityNftRedPacket(payload?.rpid, account, chainId)\n\n    const result = asyncResult\n    const availability = result.value\n\n    return useMemo(() => {\n        if (!availability) {\n            return {\n                ...asyncResult,\n                payload,\n                computed: {\n                    canClaim: false,\n                    listOfStatus: [] as RedPacketStatus[],\n                },\n            }\n        }\n\n        const isEmpty = availability.remaining === 0\n        const isExpired = availability.expired\n        const isClaimed = availability.isClaimed\n        const isCreator = isSameAddress(payload?.sender.address ?? '', account)\n\n        const isPasswordValid = !!payload.password && payload.password !== 'PASSWORD INVALID'\n        const isClaimable = !isExpired && !isEmpty && !isClaimed\n        const isSendable = !isEmpty && !isExpired && isCreator\n        return {\n            ...asyncResult,\n            computed: {\n                canClaim: isClaimable && isPasswordValid,\n                canSend: isSendable,\n                isPasswordValid,\n                listOfStatus: compact([\n                    isClaimed ? RedPacketStatus.claimed : undefined,\n                    isEmpty ? RedPacketStatus.empty : undefined,\n                    isExpired ? RedPacketStatus.expired : undefined,\n                ]),\n            },\n        }\n    }, [asyncResult, availability, chainId])\n}\n","import { useAsyncRetry } from 'react-use'\nimport type { BigNumber } from 'bignumber.js'\nimport type { AbiItem } from 'web3-utils'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { type ChainId, useNftRedPacketConstants, decodeEvents } from '@masknet/web3-shared-evm'\nimport NFT_REDPACKET_ABI from '@masknet/web3-contracts/abis/NftRedPacket.json'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { Web3 } from '@masknet/web3-providers'\n\nexport function useCreateNftRedPacketReceipt(txid: string, expectedChainId: ChainId) {\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: expectedChainId })\n    const { RED_PACKET_NFT_ADDRESS } = useNftRedPacketConstants(chainId)\n\n    return useAsyncRetry(async () => {\n        const receipt = await Web3.getTransactionReceipt(txid, { chainId })\n        if (!receipt) return null\n\n        const log = receipt.logs.find((log) => isSameAddress(log.address, RED_PACKET_NFT_ADDRESS))\n        if (!log) return null\n\n        const eventParams = decodeEvents(NFT_REDPACKET_ABI as AbiItem[], [log]) as unknown as {\n            CreationSuccess: {\n                id: string\n                creation_time: BigNumber\n            }\n        }\n\n        return {\n            rpid: eventParams.CreationSuccess.id ?? '',\n            creation_time: eventParams.CreationSuccess.creation_time.toNumber() * 1000,\n        }\n    }, [txid, chainId, RED_PACKET_NFT_ADDRESS])\n}\n","import { memo, type MouseEventHandler, useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { useIntersectionObserver } from '@react-hookz/web'\nimport { fill } from 'lodash-es'\nimport { makeStyles, ActionButton } from '@masknet/theme'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { isSameAddress, type NonFungibleCollection } from '@masknet/web3-shared-base'\nimport { useChainContext, useNetworkDescriptor } from '@masknet/web3-hooks-base'\nimport type { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { type NftRedPacketJSONPayload } from '@masknet/web3-providers/types'\nimport { Box, ListItem, Typography } from '@mui/material'\nimport { RedPacketTrans, useRedPacketTrans } from '../locales/index.js'\nimport { useAvailabilityNftRedPacket } from './hooks/useAvailabilityNftRedPacket.js'\nimport { useNftAvailabilityComputed } from './hooks/useNftAvailabilityComputed.js'\nimport { useCreateNftRedPacketReceipt } from './hooks/useCreateNftRedPacketReceipt.js'\nimport { TokenIcon } from '@masknet/shared'\nimport { dateTimeFormat } from './utils/formatDate.js'\n\nconst useStyles = makeStyles<{ listItemBackground?: string; listItemBackgroundIcon?: string }>()((\n    theme,\n    { listItemBackground, listItemBackgroundIcon },\n) => {\n    const smallQuery = `@media (max-width: ${theme.breakpoints.values.sm}px)`\n    return {\n        root: {\n            width: '100%',\n            padding: 0,\n            background: theme.palette.common.white,\n            marginBottom: theme.spacing(1.5),\n            borderRadius: 8,\n            '&:last-child': {\n                marginBottom: '80px',\n            },\n        },\n        contentItem: {\n            width: '100%',\n            borderRadius: 8,\n            position: 'static !important' as any,\n            height: 'auto !important',\n            padding: theme.spacing(1.5),\n            background: listItemBackground ?? theme.palette.background.default,\n            [smallQuery]: {\n                padding: theme.spacing(2, 1.5),\n            },\n            '&:before': {\n                position: 'absolute',\n                content: '\"\"',\n                top: 45,\n                left: 400,\n                zIndex: 0,\n                width: 114,\n                opacity: 0.2,\n                height: 61,\n                filter: 'blur(1.5px)',\n                background: listItemBackgroundIcon,\n                backgroundRepeat: 'no-repeat',\n                backgroundSize: '114px 114px',\n            },\n        },\n        message: {\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            [smallQuery]: {\n                whiteSpace: 'normal',\n            },\n        },\n        box: {\n            display: 'flex',\n            width: '100%',\n        },\n        content: {\n            transform: 'RedPacketTransY(-4px)',\n            width: '100%',\n            paddingLeft: theme.spacing(1),\n        },\n        section: {\n            display: 'flex',\n            width: '100%',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: theme.spacing(2),\n            [smallQuery]: {\n                marginBottom: 0,\n            },\n        },\n        icon: {\n            width: 18,\n            height: 18,\n            marginLeft: 6,\n            zIndex: -1,\n        },\n        title: {\n            color: theme.palette.maskColor.dark,\n            whiteSpace: 'break-spaces',\n            fontWeight: 500,\n            fontSize: 16,\n        },\n        info: {\n            color: theme.palette.maskColor.dark,\n            [smallQuery]: {\n                fontSize: 13,\n            },\n            fontSize: 14,\n        },\n        infoTitle: {\n            color: theme.palette.maskColor.secondaryDark,\n            marginRight: 4,\n            fontSize: 14,\n            [smallQuery]: {\n                fontSize: 13,\n            },\n        },\n        actionButton: {\n            fontSize: 12,\n            width: 88,\n            height: 32,\n            background: theme.palette.maskColor.dark,\n            color: theme.palette.maskColor.white,\n            borderRadius: '999px',\n            minHeight: 'auto',\n            [smallQuery]: {\n                marginTop: theme.spacing(1),\n            },\n            '&:disabled': {\n                background: theme.palette.maskColor.dark,\n                color: theme.palette.common.white,\n            },\n            '&:hover': {\n                background: theme.palette.maskColor.dark,\n                color: theme.palette.maskColor.white,\n                opacity: 0.8,\n            },\n        },\n        footer: {\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            flexWrap: 'nowrap',\n            marginTop: 15,\n        },\n        footerInfo: {\n            fontSize: 14,\n            color: theme.palette.maskColor.secondaryDark,\n            '& span': {\n                color: theme.palette.maskColor.dark,\n                marginRight: 2,\n            },\n        },\n        fullWidthBox: {\n            width: '100%',\n            display: 'flex',\n        },\n        ellipsis: {\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            maxWidth: 360,\n        },\n    }\n})\n\ninterface NftRedPacketHistoryItemProps {\n    history: NftRedPacketJSONPayload\n    collections: Array<NonFungibleCollection<ChainId, SchemaType>>\n    onSend: (history: NftRedPacketJSONPayload, contract: NonFungibleCollection<ChainId, SchemaType>) => void\n    onShowPopover: (anchorEl: HTMLElement, text: string) => void\n    onHidePopover: () => void\n}\nexport const NftRedPacketHistoryItem = memo(\n    ({ history, onSend, onShowPopover, onHidePopover, collections }: NftRedPacketHistoryItemProps) => {\n        const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n        const [isViewed, setIsViewed] = useState(false)\n        const ref = useRef<HTMLLIElement | null>(null)\n        const entry = useIntersectionObserver(ref, {})\n        const t = useRedPacketTrans()\n\n        const { value: receipt } = useCreateNftRedPacketReceipt(isViewed ? history.txid : '', history.chainId)\n        const rpid = receipt?.rpid ?? ''\n        const creation_time = receipt?.creation_time ?? 0\n        const patchedHistory: NftRedPacketJSONPayload = useMemo(\n            () => ({ ...history, rpid, creation_time }),\n            [history, rpid, creation_time],\n        )\n        const networkDescriptor = useNetworkDescriptor(NetworkPluginID.PLUGIN_EVM, chainId)\n\n        const { classes, cx } = useStyles({\n            listItemBackground: networkDescriptor?.backgroundGradient,\n            listItemBackgroundIcon: networkDescriptor ? `url(\"${networkDescriptor.icon}\")` : undefined,\n        })\n\n        useEffect(() => {\n            if (entry?.isIntersecting) setIsViewed(true)\n        }, [entry?.isIntersecting])\n\n        const {\n            computed: { canSend, isPasswordValid },\n        } = useNftAvailabilityComputed(account, patchedHistory)\n\n        const collection = collections.find((x) => isSameAddress(x.address, patchedHistory.token_address))\n\n        const handleSend = useCallback(() => {\n            if (!(canSend && collection && isPasswordValid)) return\n            onSend(patchedHistory, collection)\n        }, [onSend, canSend, patchedHistory, collection, isPasswordValid])\n\n        const { value: redpacketStatus } = useAvailabilityNftRedPacket(\n            patchedHistory.rpid,\n            account,\n            patchedHistory.chainId,\n        )\n        const bitStatusList = redpacketStatus\n            ? redpacketStatus.bitStatusList\n            : fill(Array(patchedHistory.token_ids.length), false)\n\n        const handleMouseEnter: MouseEventHandler<HTMLButtonElement> = (event) => {\n            if (canSend && !isPasswordValid) {\n                handleShowPopover(event.currentTarget)\n            }\n        }\n        const handleShowPopover = (anchor: HTMLElement) => {\n            onShowPopover(anchor, t.nft_data_broken())\n        }\n\n        return (\n            <ListItem className={classes.root}>\n                <section className={classes.contentItem} ref={ref}>\n                    <Box className={classes.box}>\n                        <Box className={classes.content}>\n                            <section className={classes.section}>\n                                <div>\n                                    <div className={classes.fullWidthBox}>\n                                        <Typography\n                                            variant=\"body1\"\n                                            className={cx(classes.title, classes.message, classes.ellipsis)}>\n                                            {patchedHistory.sender.message === ''\n                                                ? t.best_wishes()\n                                                : patchedHistory.sender.message}\n                                        </Typography>\n                                    </div>\n                                    <div className={classes.fullWidthBox}>\n                                        <Typography variant=\"body1\" className={cx(classes.infoTitle, classes.message)}>\n                                            {t.create_time()}\n                                        </Typography>\n                                        {rpid ? (\n                                            <Typography variant=\"body1\" className={cx(classes.info, classes.message)}>\n                                                {t.history_duration({\n                                                    time: dateTimeFormat(new Date(patchedHistory.creation_time)),\n                                                })}\n                                            </Typography>\n                                        ) : null}\n                                    </div>\n                                </div>\n\n                                {canSend ? (\n                                    <ActionButton\n                                        onMouseEnter={handleMouseEnter}\n                                        onMouseLeave={onHidePopover}\n                                        onClick={handleSend}\n                                        disabled={!isPasswordValid}\n                                        className={classes.actionButton}\n                                        size=\"large\">\n                                        {t.share()}\n                                    </ActionButton>\n                                ) : null}\n                            </section>\n\n                            <section className={classes.footer}>\n                                <Typography variant=\"body1\" className={classes.footerInfo}>\n                                    <RedPacketTrans.history_nft_claimed\n                                        components={{\n                                            span: <span />,\n                                        }}\n                                        values={{\n                                            claimedShares: rpid ? bitStatusList.filter(Boolean).length.toString() : '0',\n                                            shares: patchedHistory.shares.toString(),\n                                            symbol: collection?.name ?? '',\n                                        }}\n                                    />\n                                </Typography>\n                                <TokenIcon\n                                    className={classes.icon}\n                                    address={collection?.address ?? ''}\n                                    name={collection?.name ?? '-'}\n                                    logoURL={\n                                        collection?.iconURL ??\n                                        new URL('./assets/maskFilledIcon.png', import.meta.url).toString()\n                                    }\n                                />\n                            </section>\n                        </Box>\n                    </Box>\n                </section>\n            </ListItem>\n        )\n    },\n)\n","import { useRef, useState } from 'react'\nimport { makeStyles, LoadingBase } from '@masknet/theme'\nimport { useSharedTrans } from '@masknet/shared'\nimport { Icons } from '@masknet/icons'\nimport { EMPTY_LIST, NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext, useNonFungibleCollections } from '@masknet/web3-hooks-base'\nimport type { NonFungibleCollection } from '@masknet/web3-shared-base'\nimport { SchemaType, type ChainId } from '@masknet/web3-shared-evm'\nimport { type NftRedPacketJSONPayload } from '@masknet/web3-providers/types'\nimport { List, Popper, Typography, Box } from '@mui/material'\nimport { useNftRedPacketHistory } from './hooks/useNftRedPacketHistory.js'\nimport { NftRedPacketHistoryItem } from './NftRedPacketHistoryItem.js'\nimport { useRedPacketTrans } from '../locales/index.js'\n\nconst useStyles = makeStyles<void, 'atBottom'>()((theme, _, refs) => {\n    const smallQuery = `@media (max-width: ${theme.breakpoints.values.sm}px)`\n    return {\n        root: {\n            display: 'flex',\n            width: 568,\n            padding: 0,\n            boxSizing: 'border-box',\n            height: 474,\n            flexDirection: 'column',\n            margin: '0 auto',\n            overflow: 'auto',\n            [smallQuery]: {\n                width: '100%',\n                padding: 0,\n            },\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        placeholder: {\n            display: 'flex',\n            flexDirection: 'column',\n            height: 474,\n            justifyContent: 'center',\n            alignItems: 'center',\n            textAlign: 'center',\n            width: 360,\n            margin: '0 auto',\n        },\n        emptyIcon: {\n            width: 36,\n            height: 36,\n            marginBottom: 13,\n        },\n        popper: {\n            overflow: 'visible',\n            padding: 6,\n        },\n        popperContent: {\n            position: 'relative',\n            overflow: 'visible',\n            backgroundColor: theme.palette.mode === 'light' ? 'rgba(15, 20, 25, 1)' : '#fff',\n            borderRadius: 8,\n            padding: 10,\n        },\n        arrow: {\n            position: 'absolute',\n            bottom: 0,\n            right: 74,\n            width: 0,\n            height: 0,\n            borderLeft: '6px solid transparent',\n            borderRight: '6px solid transparent',\n            borderTop: `6px solid ${theme.palette.mode === 'light' ? 'rgba(15, 20, 25, 1)' : '#fff'}`,\n            transform: 'RedPacketTrans(-50%, 6px)',\n            [`&.${refs.atBottom}`]: {\n                bottom: 'auto',\n                top: 0,\n                transform: 'RedPacketTrans(-50%, -6px) rotate(180deg)',\n            },\n        },\n        atBottom: {},\n        popperText: {\n            cursor: 'default',\n            color: theme.palette.mode === 'light' ? '#fff' : 'rgba(15, 20, 25, 1)',\n            fontSize: 12,\n        },\n        loading: {\n            fontSize: 14,\n            marginTop: 13,\n        },\n    }\n})\n\ninterface Props {\n    onSend: (history: NftRedPacketJSONPayload, contract: NonFungibleCollection<ChainId, SchemaType>) => void\n}\n\nexport function NftRedPacketHistoryList({ onSend }: Props) {\n    const { classes, cx } = useStyles()\n    const t = useRedPacketTrans()\n    const sharedI18N = useSharedTrans()\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { value: histories, loading } = useNftRedPacketHistory(account, chainId)\n    const containerRef = useRef<HTMLDivElement>(null)\n    const [popperText, setPopperText] = useState('')\n    const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n    const { data: collections = EMPTY_LIST } = useNonFungibleCollections(NetworkPluginID.PLUGIN_EVM, {\n        chainId,\n        schemaType: SchemaType.ERC721,\n    })\n\n    const handleShowPopover = (anchor: HTMLElement, text: string) => {\n        setAnchorEl(anchor)\n        setPopperText(text)\n    }\n    const handleHidePopover = () => {\n        setAnchorEl(null)\n    }\n\n    if (loading) {\n        return (\n            <Box\n                style={{\n                    height: 474,\n                    alignItems: 'center',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    flexDirection: 'column',\n                }}>\n                <LoadingBase size={30} />\n                <Typography className={classes.loading}>{sharedI18N.loading()}</Typography>\n            </Box>\n        )\n    }\n\n    if (!histories?.length) {\n        return (\n            <Typography className={classes.placeholder} color=\"textSecondary\">\n                <Icons.EmptySimple className={classes.emptyIcon} />\n                {t.nft_no_history()}\n            </Typography>\n        )\n    }\n\n    return (\n        <>\n            <div ref={containerRef} className={classes.root}>\n                <List style={{ padding: '16px 0 0' }}>\n                    {histories.map((history) => (\n                        <NftRedPacketHistoryItem\n                            key={history.txid}\n                            collections={collections}\n                            history={history}\n                            onSend={onSend}\n                            onShowPopover={handleShowPopover}\n                            onHidePopover={handleHidePopover}\n                        />\n                    ))}\n                </List>\n            </div>\n            <Popper\n                className={classes.popper}\n                id=\"data-damaged\"\n                open={!!anchorEl}\n                placement=\"top\"\n                anchorEl={anchorEl}\n                disablePortal>\n                {({ placement }) => {\n                    return (\n                        <div className={classes.popperContent}>\n                            <Typography className={classes.popperText}>{popperText}</Typography>\n                            <div className={cx(classes.arrow, placement === 'bottom' ? classes.atBottom : '')} />\n                        </div>\n                    )\n                }}\n            </Popper>\n        </>\n    )\n}\n","import { CrossIsolationMessages } from '@masknet/shared-base'\n\nexport function openComposition(metadataKey: string, payload: unknown) {\n    // Close the duplicated dialog if already opened by clicking the mask compose icon.\n    CrossIsolationMessages.events.compositionDialogEvent.sendToLocal({ reason: 'popup', open: false })\n    CrossIsolationMessages.events.compositionDialogEvent.sendToLocal({\n        reason: 'timeline',\n        open: true,\n        options: {\n            initialMetas: {\n                [metadataKey]: payload,\n            },\n        },\n    })\n}\n","import { useCallback } from 'react'\nimport { TabPanel } from '@mui/lab'\nimport { makeStyles } from '@masknet/theme'\nimport { Box } from '@mui/material'\nimport type { NonFungibleCollection } from '@masknet/web3-shared-base'\nimport type { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { type RedPacketJSONPayload, type NftRedPacketJSONPayload } from '@masknet/web3-providers/types'\nimport { RedPacketHistoryList } from './RedPacketHistoryList.js'\nimport { NftRedPacketHistoryList } from './NftRedPacketHistoryList.js'\nimport { RedPacketNftMetaKey } from '../constants.js'\nimport { openComposition } from './openComposition.js'\nimport { ApplicationBoardModal, PluginWalletStatusBar, useCurrentLinkedPersona } from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { useCurrentVisitingIdentity } from '@masknet/plugin-infra/content-script'\n\nconst useStyles = makeStyles()((theme) => ({\n    tabWrapper: {\n        padding: theme.spacing(0, 2, 0, 2),\n    },\n}))\n\ninterface Props {\n    tabs: Record<'tokens' | 'collectibles', 'tokens' | 'collectibles'>\n    onSelect: (payload: RedPacketJSONPayload) => void\n    onClose?: () => void\n}\n\nexport function RedPacketPast({ onSelect, onClose, tabs }: Props) {\n    const { classes } = useStyles()\n\n    const currentIdentity = useCurrentVisitingIdentity()\n    const linkedPersona = useCurrentLinkedPersona()\n\n    const senderName = currentIdentity?.identifier?.userId ?? linkedPersona?.nickname ?? 'Unknown User'\n    const handleSendNftRedpacket = useCallback(\n        (history: NftRedPacketJSONPayload, collection: NonFungibleCollection<ChainId, SchemaType>) => {\n            const { rpid, txid, duration, sender, password, chainId } = history\n            openComposition(RedPacketNftMetaKey, {\n                id: rpid,\n                txid,\n                duration,\n                message: sender.message,\n                senderName,\n                contractName: collection.name,\n                contractAddress: collection.address,\n                contractTokenURI: collection.iconURL ?? '',\n                privateKey: password,\n                chainId,\n            })\n            ApplicationBoardModal.close()\n            onClose?.()\n        },\n        [senderName],\n    )\n\n    return (\n        <>\n            <div className={classes.tabWrapper}>\n                <TabPanel value={tabs.tokens} style={{ padding: 0 }}>\n                    <RedPacketHistoryList onSelect={onSelect} />\n                </TabPanel>\n                <TabPanel value={tabs.collectibles} style={{ padding: 0 }}>\n                    <NftRedPacketHistoryList onSend={handleSendNftRedpacket} />\n                </TabPanel>\n            </div>\n            <Box style={{ width: '100%', position: 'absolute', bottom: 0 }}>\n                <PluginWalletStatusBar requiredSupportPluginID={NetworkPluginID.PLUGIN_EVM} />\n            </Box>\n        </>\n    )\n}\n","import { useAsync } from 'react-use'\nimport { sha3 } from 'web3-utils'\nimport { omit } from 'lodash-es'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { ZERO, toFixed } from '@masknet/web3-shared-base'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport type { HappyRedPacketV4 } from '@masknet/web3-contracts/types/HappyRedPacketV4.js'\nimport { SchemaType, useTokenConstants } from '@masknet/web3-shared-evm'\nimport { checkParams, type RedPacketSettings, type ParamsObjType, type MethodParameters } from './useCreateCallback.js'\nimport { useRedPacketContract } from './useRedPacketContract.js'\n\nexport function useDefaultCreateGas(\n    redPacketSettings: RedPacketSettings | undefined,\n    version: number,\n    publicKey: string,\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { NATIVE_TOKEN_ADDRESS } = useTokenConstants(chainId)\n    const redPacketContract = useRedPacketContract(chainId, version)\n\n    return useAsync(async () => {\n        if (!redPacketSettings || !redPacketContract) return ZERO\n        const { duration, isRandom, message, name, shares, total, token } = redPacketSettings\n        if (!token) return ZERO\n        const seed = Math.random().toString()\n        const tokenType = token!.schema === SchemaType.Native ? 0 : 1\n        const tokenAddress = token!.schema === SchemaType.Native ? NATIVE_TOKEN_ADDRESS : token!.address\n        if (!tokenAddress) {\n            return ZERO\n        }\n\n        const paramsObj: ParamsObjType = {\n            publicKey,\n            shares,\n            isRandom,\n            duration,\n            seed: sha3(seed)!,\n            message,\n            name,\n            tokenType,\n            tokenAddress,\n            total,\n            token,\n        }\n\n        try {\n            checkParams(paramsObj)\n        } catch {\n            return ZERO\n        }\n\n        const params = Object.values(omit(paramsObj, ['token'])) as MethodParameters\n\n        const value = toFixed(paramsObj.token?.schema === SchemaType.Native ? total : 0)\n\n        return (redPacketContract as HappyRedPacketV4).methods\n            .create_red_packet(...params)\n            .estimateGas({ from: account, value })\n    }, [JSON.stringify(redPacketSettings), account, redPacketContract, publicKey, version, NATIVE_TOKEN_ADDRESS])\n}\n","import { type ChangeEvent, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAsync } from 'react-use'\nimport { BigNumber } from 'bignumber.js'\nimport { omit } from 'lodash-es'\nimport { makeStyles, ActionButton, MaskTextField, RadioIndicator } from '@masknet/theme'\nimport { Box, InputBase, Typography, useTheme } from '@mui/material'\nimport {\n    type FungibleToken,\n    isGreaterThan,\n    isZero,\n    multipliedBy,\n    rightShift,\n    formatBalance,\n    ZERO,\n} from '@masknet/web3-shared-base'\nimport { type ChainId, type GasConfig, SchemaType, useRedPacketConstants } from '@masknet/web3-shared-evm'\nimport { useTransactionValue } from '@masknet/web3-hooks-evm'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport {\n    FungibleTokenInput,\n    PluginWalletStatusBar,\n    ChainBoundary,\n    EthereumERC20TokenApprovedBoundary,\n    SelectGasSettingsToolbar,\n    useAvailableBalance,\n    TokenValue,\n    WalletConnectedBoundary,\n    SelectFungibleTokenModal,\n    useCurrentLinkedPersona,\n} from '@masknet/shared'\nimport { Icons } from '@masknet/icons'\nimport { useCurrentVisitingIdentity } from '@masknet/plugin-infra/content-script'\nimport { useChainContext, useWallet, useNativeTokenPrice, useEnvironmentContext } from '@masknet/web3-hooks-base'\nimport { ChainResolver, SmartPayBundler, Web3 } from '@masknet/web3-providers'\nimport { useRedPacketTrans } from '../locales/index.js'\nimport { RED_PACKET_DEFAULT_SHARES, RED_PACKET_MAX_SHARES, RED_PACKET_MIN_SHARES } from '../constants.js'\nimport { type RedPacketSettings, useCreateParams } from './hooks/useCreateCallback.js'\nimport { useDefaultCreateGas } from './hooks/useDefaultCreateGas.js'\n\n// seconds of 1 day\nconst duration = 60 * 60 * 24\n\nconst useStyles = makeStyles()((theme) => ({\n    field: {\n        display: 'flex',\n        gap: 16,\n        margin: 16,\n    },\n    input: {\n        flex: 1,\n    },\n    button: {\n        margin: 0,\n        padding: 0,\n        height: 40,\n        maxWidth: 286,\n    },\n    unlockContainer: {\n        margin: 0,\n        columnGap: 16,\n        flexFlow: 'unset',\n        ['& > div']: {\n            padding: '0px !important',\n        },\n    },\n    option: {\n        display: 'flex',\n        width: '50%',\n        alignItems: 'center',\n        color: theme.palette.maskColor.line,\n    },\n    checkIconWrapper: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        cursor: 'pointer',\n        borderRadius: '50%',\n        marginRight: 5,\n        backgroundColor: 'transparent',\n    },\n    tokenValue: {\n        flexGrow: 1,\n    },\n}))\n\ninterface RedPacketFormProps {\n    onChange(settings: RedPacketSettings): void\n    onClose: () => void\n    origin?: RedPacketSettings\n    onNext: () => void\n    setERC721DialogHeight?: (height: number) => void\n    gasOption?: GasConfig\n    onGasOptionChange?: (config: GasConfig) => void\n    expectedChainId: ChainId\n}\n\nexport function RedPacketERC20Form(props: RedPacketFormProps) {\n    const t = useRedPacketTrans()\n    const { classes } = useStyles()\n    const theme = useTheme()\n    const { onChange, onNext, origin, gasOption, onGasOptionChange, expectedChainId } = props\n    // context\n    const wallet = useWallet()\n    const { pluginID } = useEnvironmentContext()\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: expectedChainId })\n    const { HAPPY_RED_PACKET_ADDRESS_V4 } = useRedPacketConstants(chainId)\n    const { value: smartPayChainId } = useAsync(async () => SmartPayBundler.getSupportedChainId(), [])\n\n    // #region select token\n    const nativeTokenDetailed = useMemo(() => ChainResolver.nativeCurrency(chainId), [chainId])\n    const { data: nativeTokenPrice = 0 } = useNativeTokenPrice(NetworkPluginID.PLUGIN_EVM, { chainId })\n    const [token = nativeTokenDetailed, setToken] = useState<FungibleToken<ChainId, SchemaType> | undefined>(\n        origin?.token,\n    )\n\n    const onSelectTokenChipClick = useCallback(async () => {\n        const picked = await SelectFungibleTokenModal.openAndWaitForClose({\n            disableNativeToken: false,\n            selectedTokens: token ? [token.address] : [],\n            chainId,\n            pluginID: NetworkPluginID.PLUGIN_EVM,\n        })\n        if (!picked) return\n        setToken(picked as FungibleToken<ChainId, SchemaType>)\n    }, [token?.address, chainId])\n    // #endregion\n\n    // #region packet settings\n    const [isRandom, setRandom] = useState(!origin ? 1 : origin?.isRandom ? 1 : 0)\n    const [message, setMessage] = useState(origin?.message || '')\n    const currentIdentity = useCurrentVisitingIdentity()\n    const linkedPersona = useCurrentLinkedPersona()\n\n    const senderName = currentIdentity?.identifier?.userId ?? linkedPersona?.nickname ?? 'Unknown User'\n\n    // shares\n    const [shares, setShares] = useState<number | ''>(origin?.shares || RED_PACKET_DEFAULT_SHARES)\n    const onShareChange = useCallback(\n        (ev: ChangeEvent<HTMLInputElement>) => {\n            const shares_ = ev.currentTarget.value.replaceAll(/[,.]/g, '')\n            if (shares_ === '') setShares('')\n            else if (/^[1-9]+\\d*$/.test(shares_)) {\n                const parsed = Number.parseInt(shares_, 10)\n                if (parsed >= RED_PACKET_MIN_SHARES && parsed <= RED_PACKET_MAX_SHARES) {\n                    setShares(Number.parseInt(shares_, 10))\n                } else if (parsed > RED_PACKET_MAX_SHARES) {\n                    setShares(RED_PACKET_MAX_SHARES)\n                }\n            }\n        },\n        [RED_PACKET_MIN_SHARES, RED_PACKET_MAX_SHARES],\n    )\n\n    // amount\n    const [rawAmount, setRawAmount] = useState(\n        !origin\n            ? ''\n            : origin?.isRandom\n            ? formatBalance(origin?.total, origin.token?.decimals ?? 0)\n            : formatBalance(new BigNumber(origin?.total ?? '0').div(origin?.shares ?? 1), origin?.token?.decimals ?? 0),\n    )\n    const amount = rightShift(rawAmount || '0', token?.decimals)\n    const rawTotalAmount = useMemo(\n        () => (isRandom || !rawAmount ? rawAmount : multipliedBy(rawAmount, shares).toFixed()),\n        [rawAmount, isRandom, shares],\n    )\n\n    const totalAmount = useMemo(() => multipliedBy(amount, isRandom ? 1 : shares ?? '0'), [amount, shares, isRandom])\n    const minTotalAmount = useMemo(() => new BigNumber(isRandom ? 1 : shares ?? 0), [shares, isRandom])\n    const isDivisible = !totalAmount.dividedBy(shares).isLessThan(1)\n\n    useEffect(() => {\n        setToken(nativeTokenDetailed as FungibleToken<ChainId, SchemaType.Native | SchemaType.ERC20>)\n    }, [chainId, nativeTokenDetailed])\n\n    useEffect(() => {\n        setRawAmount('')\n    }, [token])\n\n    const creatingParams = useMemo(\n        () => ({\n            duration,\n            isRandom: !!isRandom,\n            name: senderName,\n            message: message || t.best_wishes(),\n            shares: shares || 0,\n            token: token\n                ? (omit(token, ['logoURI']) as FungibleToken<ChainId, SchemaType.ERC20 | SchemaType.Native>)\n                : undefined,\n            total: totalAmount.toFixed(),\n        }),\n        [isRandom, senderName, message, t, shares, token, totalAmount],\n    )\n\n    const onClick = useCallback(() => {\n        onChange(creatingParams)\n        onNext()\n    }, [creatingParams, onChange, onNext])\n\n    // #region gas\n    const { account: publicKey } = useMemo(() => Web3.createAccount(), [])\n    const contract_version = 4\n    const { value: params } = useCreateParams(chainId, creatingParams, contract_version, publicKey)\n    // #endregion\n\n    // balance\n    const { value: defaultGas = ZERO } = useDefaultCreateGas(\n        {\n            duration,\n            isRandom: !!isRandom,\n            name: senderName,\n            message: message || t.best_wishes(),\n            shares: shares || 0,\n            token: token\n                ? (omit(token, ['logoURI']) as FungibleToken<ChainId, SchemaType.ERC20 | SchemaType.Native>)\n                : undefined,\n            total: rightShift(0.01, token?.decimals).toFixed(),\n        },\n        contract_version,\n        publicKey,\n    )\n    const { isAvailableBalance, balance, isGasSufficient } = useAvailableBalance(\n        NetworkPluginID.PLUGIN_EVM,\n        token?.address,\n        gasOption ? { ...gasOption, gas: new BigNumber(defaultGas).toString() } : undefined,\n        {\n            chainId,\n        },\n    )\n\n    const { transactionValue, loading: loadingTransactionValue } = useTransactionValue(\n        origin?.total,\n        gasOption?.gas,\n        gasOption?.gasCurrency,\n    )\n    // #endregion\n\n    const validationMessage = useMemo(() => {\n        if (!token) return t.select_a_token()\n        if (!account) return t.plugin_wallet_connect_a_wallet()\n        if (isZero(shares || '0')) return t.enter_shares()\n        if (isGreaterThan(shares || '0', 255)) return t.max_shares()\n        if (isGreaterThan(minTotalAmount, balance) || isGreaterThan(totalAmount, balance))\n            return t.insufficient_token_balance({ symbol: token?.symbol })\n        if (isZero(amount)) {\n            return isRandom ? t.enter_total_amount() : t.enter_each_amount()\n        }\n\n        if (!isDivisible)\n            return t.indivisible({\n                symbol: token.symbol,\n                amount: formatBalance(1, token.decimals),\n            })\n        return ''\n    }, [isRandom, account, amount, totalAmount, shares, token, balance, t, minTotalAmount])\n\n    const gasValidationMessage = useMemo(() => {\n        if (!token) return ''\n        if (!isGasSufficient) {\n            return t.no_enough_gas_fees()\n        }\n        if (!loadingTransactionValue && new BigNumber(transactionValue).isLessThanOrEqualTo(0))\n            return t.insufficient_balance()\n\n        return ''\n    }, [isAvailableBalance, balance, token?.symbol, transactionValue, loadingTransactionValue])\n\n    if (!token) return null\n\n    return (\n        <>\n            <div className={classes.field}>\n                <div className={classes.option}>\n                    <div className={classes.checkIconWrapper}>\n                        <RadioIndicator onClick={() => setRandom(1)} checked={!!isRandom} size={20} />\n                    </div>\n                    <Typography\n                        color={isRandom ? theme.palette.maskColor.main : theme.palette.maskColor.second}\n                        fontSize={16}\n                        fontWeight={isRandom ? 700 : 400}>\n                        {t.random_amount()}\n                    </Typography>\n                </div>\n                <div className={classes.option}>\n                    <div className={classes.checkIconWrapper}>\n                        <RadioIndicator onClick={() => setRandom(0)} checked={!isRandom} size={20} />\n                    </div>\n                    <Typography\n                        color={!isRandom ? theme.palette.maskColor.main : theme.palette.maskColor.second}\n                        fontSize={16}\n                        fontWeight={!isRandom ? 700 : 400}>\n                        {t.identical_amount()}\n                    </Typography>\n                </div>\n            </div>\n            <div className={classes.field}>\n                <MaskTextField\n                    wrapperProps={{ className: classes.input }}\n                    value={shares}\n                    fullWidth\n                    onChange={onShareChange}\n                    InputProps={{\n                        endAdornment: (\n                            <>\n                                <Typography color={theme.palette.maskColor.third} fontSize={14} marginRight={0.5}>\n                                    {t.quantity()}\n                                </Typography>\n                                <Icons.RedPacket size={18} />\n                            </>\n                        ),\n                        inputProps: {\n                            autoComplete: 'off',\n                            autoCorrect: 'off',\n                            inputMode: 'decimal',\n                            placeholder: t.enter_quantity(),\n                            spellCheck: false,\n                            pattern: '^[0-9]+$',\n                        },\n                    }}\n                />\n            </div>\n            <div className={classes.field}>\n                <FungibleTokenInput\n                    label={t.token()}\n                    token={token}\n                    placeholder={isRandom ? t.total() : t.amount_each()}\n                    onSelectToken={onSelectTokenChipClick}\n                    onAmountChange={setRawAmount}\n                    amount={rawAmount}\n                    maxAmount={\n                        minTotalAmount.isGreaterThan(balance) && !isZero(balance)\n                            ? minTotalAmount.toString()\n                            : undefined\n                    }\n                    isAvailableBalance={isAvailableBalance}\n                    balance={balance}\n                    maxAmountShares={isRandom || shares === '' ? 1 : shares}\n                />\n            </div>\n            <Box margin={2}>\n                <InputBase\n                    fullWidth\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder={t.blessing_words()}\n                    value={message}\n                    inputProps={{\n                        maxLength: 100,\n                    }}\n                />\n            </Box>\n\n            {pluginID === NetworkPluginID.PLUGIN_EVM ? (\n                <Box margin={2}>\n                    <SelectGasSettingsToolbar\n                        nativeToken={nativeTokenDetailed}\n                        nativeTokenPrice={nativeTokenPrice}\n                        supportMultiCurrency={!!wallet?.owner && chainId === smartPayChainId}\n                        gasConfig={gasOption}\n                        gasLimit={Number.parseInt(params?.gas ?? '0', 10)}\n                        onChange={onGasOptionChange}\n                    />\n                </Box>\n            ) : null}\n\n            {rawTotalAmount && !isZero(rawTotalAmount) ? (\n                <TokenValue className={classes.tokenValue} token={token} amount={rawTotalAmount} />\n            ) : null}\n\n            <Box style={{ width: '100%', position: 'absolute', bottom: 0 }}>\n                <PluginWalletStatusBar\n                    expectedPluginID={NetworkPluginID.PLUGIN_EVM}\n                    expectedChainId={chainId}\n                    actualPluginID={pluginID}>\n                    <EthereumERC20TokenApprovedBoundary\n                        amount={totalAmount.toFixed()}\n                        balance={balance}\n                        classes={{ container: classes.unlockContainer }}\n                        ActionButtonProps={{\n                            size: 'medium',\n                        }}\n                        token={\n                            token?.schema === SchemaType.ERC20 && totalAmount.gt(0) && !validationMessage\n                                ? token\n                                : undefined\n                        }\n                        spender={HAPPY_RED_PACKET_ADDRESS_V4}>\n                        <ChainBoundary\n                            expectedPluginID={NetworkPluginID.PLUGIN_EVM}\n                            expectedChainId={chainId}\n                            forceShowingWrongNetworkButton>\n                            <WalletConnectedBoundary expectedChainId={chainId}>\n                                <ActionButton\n                                    size=\"medium\"\n                                    className={classes.button}\n                                    fullWidth\n                                    disabled={!!validationMessage || !!gasValidationMessage}\n                                    onClick={onClick}>\n                                    {validationMessage || gasValidationMessage || t.next()}\n                                </ActionButton>\n                            </WalletConnectedBoundary>\n                        </ChainBoundary>\n                    </EthereumERC20TokenApprovedBoundary>\n                </PluginWalletStatusBar>\n            </Box>\n        </>\n    )\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutline');","import { useCallback } from 'react'\nimport { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { Box, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { ExpandMore as ExpandMoreIcon } from '@mui/icons-material'\nimport { type NonFungibleCollection, SourceType } from '@masknet/web3-shared-base'\nimport { useWeb3Others } from '@masknet/web3-hooks-base'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { SelectNonFungibleContractModal } from '../../modals/index.js'\n\ninterface StyleProps {\n    hasIcon: boolean\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, props) => {\n    return {\n        root: {\n            height: 52,\n            border: `1px solid ${theme.palette.mode === 'light' ? '#EBEEF0' : '#2F3336'}`,\n            borderRadius: 12,\n            padding: theme.spacing(0.8, 1.2, 1),\n            display: 'flex',\n            justifyContent: 'space-between',\n            flexDirection: 'column',\n        },\n        title: {},\n        wrapper: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n        },\n        icon: {\n            height: 24,\n            width: 24,\n            borderRadius: 500,\n        },\n        tokenWrapper: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n        },\n        nftName: {\n            marginLeft: theme.spacing(props.hasIcon ? 1 : 0),\n            fontWeight: 300,\n            pointerEvents: 'none',\n            fontSize: 16,\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n        },\n        expandIcon: {\n            color: theme.palette.text.primary,\n        },\n        pointer: {\n            cursor: 'pointer',\n        },\n    }\n})\n\nexport interface ERC721TokenSelectPanelProps {\n    label?: string\n    chainId?: ChainId\n    onContractChange: (contract: NonFungibleCollection<ChainId, SchemaType>) => void\n    balance: number\n    collection: NonFungibleCollection<ChainId, SchemaType> | null | undefined\n}\nexport function ERC721ContractSelectPanel(props: ERC721TokenSelectPanelProps) {\n    const { onContractChange, collection, label, chainId = ChainId.Mainnet, balance } = props\n    const t = useSharedTrans()\n    const { classes, cx } = useStyles({ hasIcon: !!collection?.iconURL })\n    const Others = useWeb3Others()\n\n    const onCollectionChange = useCallback(\n        (contract: NonFungibleCollection<ChainId, SchemaType>) => {\n            onContractChange(contract)\n        },\n        [onContractChange],\n    )\n\n    const openDialog = useCallback(() => {\n        SelectNonFungibleContractModal.open({\n            pluginID: NetworkPluginID.PLUGIN_EVM,\n            schemaType: SchemaType.ERC721,\n            chainId,\n            onSubmit: onCollectionChange,\n        })\n    }, [chainId, onCollectionChange])\n    // #endregion\n\n    return (\n        <Box className={classes.root}>\n            <div className={classes.wrapper}>\n                <Typography className={classes.title} color=\"textSecondary\" variant=\"body2\" component=\"span\">\n                    {label ?? t.select_an_nft()}\n                </Typography>\n                {!collection?.address ||\n                !Others.isValidAddress(collection.address) ||\n                (collection.source === SourceType.SimpleHash && !collection?.id) ? null : (\n                    <Typography className={classes.title} color=\"textSecondary\" variant=\"body2\" component=\"span\">\n                        {t.wallet_balance()}: {balance ? balance : '0'}\n                    </Typography>\n                )}\n            </div>\n            <div className={cx(classes.wrapper, classes.pointer)} onClick={openDialog}>\n                <div className={classes.tokenWrapper}>\n                    {collection?.iconURL ? <img className={classes.icon} src={collection?.iconURL} /> : null}\n                    {collection?.name ? (\n                        <Typography className={classes.nftName} color=\"textPrimary\">\n                            {collection?.name}\n                        </Typography>\n                    ) : null}\n                </div>\n                <ExpandMoreIcon className={classes.expandIcon} />\n            </div>\n        </Box>\n    )\n}\n","import type { NonPayableTransactionObject, NonPayableTx } from '@masknet/web3-contracts/types/types.js'\n\nexport function safeNonPayableTransactionCall<T>(tx?: NonPayableTransactionObject<T>, overrides?: NonPayableTx) {\n    try {\n        if (!tx) return\n        return tx.call(overrides)\n    } catch (error) {\n        return\n    }\n}\n","import { useAsyncRetry } from 'react-use'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { Contract } from '@masknet/web3-providers'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport { safeNonPayableTransactionCall } from '@masknet/web3-shared-evm'\n\n/**\n * @param contractAddress NFT contract address.\n * @param owner The address that owns the NFTs.\n * @param operator The address that acts on behalf of the owner.\n * @return True if `operator` is an approved operator for `owner`, false otherwise.\n */\nexport function useERC721ContractIsApproveForAll(\n    contractAddress: string | undefined,\n    owner: string | undefined,\n    operator: string | undefined,\n    expectedChainId: ChainId,\n) {\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: expectedChainId })\n    return useAsyncRetry(async () => {\n        if (!owner || !operator || !contractAddress) return\n\n        return safeNonPayableTransactionCall(\n            Contract.getERC721Contract(contractAddress, { chainId })?.methods.isApprovedForAll(owner, operator),\n        )\n    }, [owner, operator])\n}\n","import { useEffect, useMemo } from 'react'\nimport type { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { makeStyles, type ActionButtonProps, ActionButton } from '@masknet/theme'\nimport { useWeb3Others } from '@masknet/web3-hooks-base'\nimport type { NonFungibleCollection } from '@masknet/web3-shared-base'\nimport { useERC721ContractIsApproveForAll, useERC721ContractSetApproveForAllCallback } from '@masknet/web3-hooks-evm'\nimport { useSharedTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles()(() => ({}))\n\nexport interface EthereumERC712TokenApprovedBoundaryProps extends withClasses<'approveButton'> {\n    children?: React.ReactNode\n    owner: string | undefined\n    chainId: ChainId\n    collection: NonFungibleCollection<ChainId, SchemaType> | undefined\n    validationMessage?: string\n    operator: string | undefined\n    ActionButtonProps?: ActionButtonProps\n}\n\nexport function EthereumERC721TokenApprovedBoundary(props: EthereumERC712TokenApprovedBoundaryProps) {\n    const { owner, collection, operator, children, validationMessage: _validationMessage, chainId } = props\n    const t = useSharedTrans()\n    const Others = useWeb3Others()\n    const { classes } = useStyles(undefined, { props })\n    const {\n        value: isApproveForAll,\n        loading,\n        retry,\n    } = useERC721ContractIsApproveForAll(collection?.address, owner, operator, chainId)\n    const [approveState, approveCallback] = useERC721ContractSetApproveForAllCallback(\n        collection?.address,\n        operator,\n        true,\n        retry,\n        chainId,\n    )\n\n    useEffect(() => {\n        retry()\n    }, [approveState.loading])\n    const validationMessage = useMemo(() => {\n        if (!collection?.address || !Others.isValidAddress(collection?.address))\n            return t.plugin_wallet_select_a_nft_contract()\n        if (!owner || !Others.isValidAddress(owner)) return t.plugin_wallet_select_a_nft_owner()\n        if (!operator || !Others.isValidAddress(operator)) return t.plugin_wallet_select_a_nft_operator()\n        if (_validationMessage) return _validationMessage\n        return ''\n    }, [collection, owner, operator, _validationMessage])\n\n    if (approveState.loading) {\n        return (\n            <ActionButton\n                className={classes.approveButton}\n                variant=\"contained\"\n                fullWidth\n                loading\n                disabled\n                {...props.ActionButtonProps}>\n                {t.plugin_wallet_nft_approving_all({\n                    symbol: collection?.symbol\n                        ? collection.symbol.toLowerCase() === 'unknown'\n                            ? 'All'\n                            : collection?.symbol\n                        : 'All',\n                })}\n            </ActionButton>\n        )\n    } else if (validationMessage) {\n        return (\n            <ActionButton\n                className={classes.approveButton}\n                variant=\"contained\"\n                fullWidth\n                disabled\n                {...props.ActionButtonProps}>\n                {validationMessage}\n            </ActionButton>\n        )\n    } else if (loading) {\n        return (\n            <ActionButton\n                className={classes.approveButton}\n                variant=\"contained\"\n                fullWidth\n                loading\n                disabled\n                {...props.ActionButtonProps}\n            />\n        )\n    } else if (isApproveForAll === false) {\n        return (\n            <ActionButton\n                className={classes.approveButton}\n                variant=\"contained\"\n                fullWidth\n                onClick={approveCallback}\n                {...props.ActionButtonProps}>\n                {t.plugin_wallet_approve_all_nft({\n                    symbol: collection?.symbol\n                        ? collection?.symbol.toLowerCase() === 'unknown'\n                            ? 'All'\n                            : collection?.symbol\n                        : 'All',\n                })}\n            </ActionButton>\n        )\n    } else if (isApproveForAll === undefined) {\n        return (\n            <ActionButton\n                className={classes.approveButton}\n                variant=\"contained\"\n                fullWidth\n                onClick={retry}\n                {...props.ActionButtonProps}>\n                {t.plugin_wallet_fail_to_load_nft_contract()}\n            </ActionButton>\n        )\n    }\n\n    return <>{children}</>\n}\n","import { Box, InputBase, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { useRedPacketTrans } from '../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        root: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            flexDirection: 'column',\n            width: '100%',\n        },\n        wrapper: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n        },\n\n        input: {\n            flex: 1,\n            padding: theme.spacing(0.5),\n        },\n    }\n})\n\ninterface RedpacketMessagePanelProps {\n    message: string\n    onChange: (val: string) => void\n}\nexport function RedpacketMessagePanel(props: RedpacketMessagePanelProps) {\n    const { onChange, message } = props\n    const { classes, cx } = useStyles()\n    const t = useRedPacketTrans()\n\n    return (\n        <Box className={classes.root}>\n            <div className={classes.wrapper}>\n                <Typography>{t.message_label()}</Typography>\n            </div>\n            <div className={cx(classes.wrapper)}>\n                <InputBase\n                    className={classes.input}\n                    onChange={(e) => onChange(e.target.value)}\n                    inputProps={{ maxLength: 100, placeholder: t.best_wishes() }}\n                    value={message}\n                />\n            </div>\n        </Box>\n    )\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.07 12.85c.77-1.39 2.25-2.21 3.11-3.44.91-1.29.4-3.7-2.18-3.7-1.69 0-2.52 1.28-2.87 2.34L6.54 6.96C7.25 4.83 9.18 3 11.99 3c2.35 0 3.96 1.07 4.78 2.41.7 1.15 1.11 3.3.03 4.9-1.2 1.77-2.35 2.31-2.97 3.45-.25.46-.35.76-.35 2.24h-2.89c-.01-.78-.13-2.05.48-3.15zM14 20c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2z\"\n}), 'QuestionMark');","import { useCallback, useState, useEffect } from 'react'\nimport { useUpdate } from 'react-use'\nimport { findLastIndex, uniq } from 'lodash-es'\nimport { AssetPreviewer } from '@masknet/shared'\nimport { EMPTY_LIST, type NetworkPluginID } from '@masknet/shared-base'\nimport type { NonFungibleCollection, NonFungibleToken } from '@masknet/web3-shared-base'\nimport { SchemaType, formatTokenId, type ChainId } from '@masknet/web3-shared-evm'\nimport { DialogContent, Box, InputBase, Button, Typography, ListItem, useTheme } from '@mui/material'\nimport { QuestionMark as QuestionMarkIcon, Check as CheckIcon } from '@mui/icons-material'\nimport { makeStyles, ShadowRootTooltip } from '@masknet/theme'\nimport { Icons } from '@masknet/icons'\nimport { Web3 } from '@masknet/web3-providers'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { RED_PACKET_MAX_SHARES } from '../constants.js'\nimport { RedPacketTrans, useRedPacketTrans } from '../locales/index.js'\n\ninterface StyleProps {\n    isSelectSharesExceed: boolean\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, props) => ({\n    dialogContent: {\n        minHeight: 380,\n    },\n    dialogContentFixedHeight: {\n        overflowY: 'hidden',\n    },\n    tokenBox: {\n        background: theme.palette.background.default,\n        width: 530,\n        minHeight: 270,\n        borderRadius: 12,\n        margin: '16px auto',\n        padding: 10,\n    },\n    ownerTokenBox: {\n        background: theme.palette.background.default,\n        width: '96%',\n        height: 270,\n        borderRadius: 12,\n        margin: '14px auto',\n        padding: 10,\n    },\n    noResultBox: {\n        width: 540,\n        height: 180,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 16,\n    },\n    iconButton: {\n        color: '#7B8192',\n        padding: theme.spacing(0.5),\n    },\n    searchButton: {\n        borderRadius: 6,\n        width: 100,\n    },\n    searchWrapper: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: 0,\n        columnGap: 16,\n    },\n    searchWrapperSingle: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        columnGap: 16,\n        padding: 0,\n    },\n    textField: {\n        flex: 1,\n    },\n    confirmButton: {\n        width: '100%',\n        backgroundColor: theme.palette.mode === 'dark' ? '#fff' : '#000',\n        color: theme.palette.mode === 'dark' ? '#000' : '#fff',\n    },\n    tokenSelector: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(4, 1fr)',\n        gap: 12,\n        width: '100%',\n        height: 255,\n        overflowY: 'auto',\n        borderRadius: 12,\n        marginBottom: theme.spacing(1.5),\n        padding: theme.spacing(1.5, 1.5, 1, 1),\n        boxSizing: 'border-box',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    selectWrapper: {\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'column',\n        borderRadius: 8,\n        padding: 0,\n        marginBottom: theme.spacing(1),\n        background: theme.palette.background.paper,\n        width: 120,\n        height: 150,\n        overflow: 'hidden',\n    },\n    selectWrapperNftNameWrapper: {\n        width: '100%',\n        background: theme.palette.background.paper,\n        borderBottomRightRadius: 8,\n        borderBottomLeftRadius: 8,\n        overflow: 'hidden',\n    },\n    selectWrapperNftName: {\n        position: 'absolute',\n        bottom: 0,\n        marginLeft: 8,\n        minHeight: 30,\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n    },\n    checkbox: {\n        position: 'absolute',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        cursor: 'pointer',\n        top: 8,\n        right: 6,\n        width: 17,\n        height: 17,\n        borderRadius: 6,\n        border: '2px solid #6E748E',\n        backgroundColor: 'white',\n    },\n    checked: {\n        borderColor: '#1C68F3 !important',\n    },\n    checkIcon: {\n        width: 15,\n        height: 15,\n        color: '#1C68F3',\n    },\n    fallbackImage: {\n        minHeight: '0 !important',\n        maxWidth: 'none',\n        width: 64,\n        height: 64,\n    },\n    selectedTokenAmount: {\n        color: props.isSelectSharesExceed ? '#FF5F5F' : '#1C68F3',\n    },\n    totalAmount: {\n        paddingLeft: 1,\n    },\n    selectAmountBox: {\n        display: 'flex',\n        flexDirection: 'row-reverse',\n        alignItems: 'center',\n    },\n    questionMarkIcon: {\n        padding: 2,\n        width: 12,\n        border: `1px solid ${theme.palette.mode === 'light' ? '#0F1419' : '#D9D9D9'}`,\n        borderRadius: 999,\n        transform: 'RedPacketTransY(-1px)',\n        height: 12,\n        marginLeft: 5,\n        cursor: 'pointer',\n    },\n    selectBar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '0 8px',\n    },\n    selectAll: {\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: 14,\n    },\n    selectAllCheckBox: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        cursor: 'pointer',\n        width: 17,\n        height: 17,\n        borderRadius: 6,\n        marginRight: 5,\n        border: '2px solid #6E748E',\n        backgroundColor: 'white',\n    },\n    selectAllCheckBoxText: {\n        pointerEvents: 'none',\n    },\n    selectSharesExceed: {\n        color: '#FF5F5F',\n    },\n    selectSharesExceedBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        margin: '14px 4px',\n    },\n    arrow: {\n        color: theme.palette.mode === 'dark' ? '#fff' : '#111418',\n        transform: 'RedPacketTransX(260px) !important',\n    },\n    tooltip: {\n        transform: 'RedPacketTransX(20px) !important',\n        padding: '10px 20px',\n        width: 256,\n        backgroundColor: theme.palette.mode === 'dark' ? '#fff' : '#111418',\n    },\n    tooltipText: {\n        color: theme.palette.mode === 'dark' ? '#000' : '#fff',\n    },\n    imageWrapper: {\n        height: 120,\n        width: '100%',\n        overflow: 'hidden',\n    },\n}))\n\nexport type OrderedERC721Token = NonFungibleToken<ChainId, SchemaType.ERC721> & {\n    index: number\n}\n\ninterface SelectNftTokenDialogProps {\n    onClose: () => void\n    contract: NonFungibleCollection<ChainId, SchemaType> | null | undefined\n    existTokenDetailedList: OrderedERC721Token[]\n    tokenDetailedOwnerList: OrderedERC721Token[]\n    setExistTokenDetailedList: React.Dispatch<React.SetStateAction<OrderedERC721Token[]>>\n}\n\nexport function SelectNftTokenDialog(props: SelectNftTokenDialogProps) {\n    const { contract, existTokenDetailedList, tokenDetailedOwnerList, setExistTokenDetailedList, onClose } = props\n    const theme = useTheme()\n    const t = useRedPacketTrans()\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const [searchedTokenDetailedList, setSearchedTokenDetailedList] = useState<OrderedERC721Token[]>()\n    const [searched, setSearched] = useState(false)\n    const [tokenDetailedSelectedList, setTokenDetailedSelectedList] =\n        useState<OrderedERC721Token[]>(existTokenDetailedList)\n    const [loadingToken, setLoadingToken] = useState(false)\n    const [searchTokenListInput, setSearchTokenListInput] = useState('')\n    const [tokenIdListInput, setTokenIdListInput] = useState<string>('')\n    const [tokenIdFilterList, setTokenIdFilterList] = useState<string[]>(EMPTY_LIST)\n    const isSelectSharesExceed =\n        (tokenDetailedOwnerList.length === 0 ? RED_PACKET_MAX_SHARES - 1 : RED_PACKET_MAX_SHARES) <\n        tokenDetailedSelectedList.length\n    const { classes, cx } = useStyles({ isSelectSharesExceed })\n    const [selectAll, setSelectAll] = useState(false)\n    const selectAllHandler = useCallback(() => {\n        setTokenDetailedSelectedList(selectAll ? [] : tokenDetailedOwnerList)\n        setSelectAll(!selectAll)\n    }, [selectAll, tokenDetailedOwnerList])\n\n    useEffect(() => {\n        setSearchTokenListInput('')\n        setTokenDetailedSelectedList(existTokenDetailedList)\n        setSearched(false)\n    }, [contract])\n\n    useEffect(() => {\n        setTokenIdFilterList(EMPTY_LIST)\n    }, [tokenIdListInput])\n\n    const update = useUpdate()\n    useEffect(update, [tokenDetailedOwnerList])\n\n    const selectToken = useCallback(\n        (token: OrderedERC721Token, findToken: OrderedERC721Token | undefined, shiftKey: boolean, index: number) => {\n            if (!shiftKey || tokenIdFilterList.length > 0) {\n                if (findToken) {\n                    setTokenDetailedSelectedList(\n                        tokenDetailedSelectedList.filter((v) => v.tokenId !== findToken.tokenId),\n                    )\n                } else {\n                    setTokenDetailedSelectedList(tokenDetailedSelectedList.concat({ ...token, index }))\n                }\n            } else {\n                const tokenDetailedSelectedListSorted = tokenDetailedSelectedList.sort(\n                    (a, b) => (b.index ?? 0) - (a.index ?? 0),\n                )\n                if (findToken) {\n                    const unselectedTokenIdList: string[] = []\n                    let nextToken: OrderedERC721Token | undefined = findToken\n                    while (nextToken) {\n                        unselectedTokenIdList.push(nextToken.tokenId)\n                        const nextTokenIndex: number = (nextToken?.index ?? 0) + 1\n                        nextToken = tokenDetailedSelectedListSorted.find((v) => (v.index ?? 0) === nextTokenIndex)\n                    }\n                    setTokenDetailedSelectedList(\n                        tokenDetailedSelectedList.filter((v) => !unselectedTokenIdList.includes(v.tokenId)),\n                    )\n                } else {\n                    const lastSelectedToken = tokenDetailedSelectedListSorted.filter((v) => (v?.index ?? 0) < index)[0]\n\n                    const lastSelectedTokenIndex = findLastIndex(\n                        tokenDetailedOwnerList,\n                        (v, i) => v.tokenId === lastSelectedToken?.tokenId && i < index,\n                    )\n                    setTokenDetailedSelectedList(\n                        tokenDetailedSelectedList.concat(\n                            tokenDetailedOwnerList.slice(lastSelectedTokenIndex + 1, index + 1),\n                        ),\n                    )\n                }\n            }\n        },\n        [tokenDetailedSelectedList, setTokenDetailedSelectedList, tokenIdFilterList],\n    )\n    // #region fetch token detail\n    const onSearch = useCallback(async () => {\n        if (!/^(\\s?(\\w+)?\\s?,?\\uFF0C?)+$/u.test(searchTokenListInput)) return\n        const tokenIdList = uniq(searchTokenListInput.split(/,|\\uFF0C/u).map((v) => v.trim()))\n        setLoadingToken(true)\n        const allSettled = await Promise.allSettled(\n            tokenIdList.map((tokenId) =>\n                Web3.getNonFungibleToken(contract?.address ?? '', tokenId, SchemaType.ERC721, {\n                    account,\n                    chainId,\n                }),\n            ),\n        )\n\n        const searchedTokenDetailedList = allSettled\n            .map((x) => (x.status === 'fulfilled' ? x.value : null))\n            .filter(Boolean)\n            .map((x, i) => ({ ...x, index: i })) as OrderedERC721Token[]\n        setSearchedTokenDetailedList(searchedTokenDetailedList)\n        setSearched(true)\n        setLoadingToken(false)\n    }, [contract, searchTokenListInput, chainId, account])\n\n    useEffect(() => {\n        setSearched(false)\n    }, [searchTokenListInput])\n    // #endregion\n\n    const onFilter = useCallback(() => {\n        if (!/^(\\s?(\\w+)?\\s?,?\\uFF0C?)+$/u.test(tokenIdListInput)) return\n        const list = uniq(tokenIdListInput.split(/,|\\uFF0C/u).map((v) => v.trim()))\n        setTokenIdFilterList(list)\n    }, [tokenIdListInput])\n\n    const onSubmit = useCallback(() => {\n        setExistTokenDetailedList(tokenDetailedSelectedList)\n        onClose()\n    }, [tokenDetailedSelectedList, setExistTokenDetailedList, onClose])\n\n    const maxSharesOptions = { amount: RED_PACKET_MAX_SHARES.toString() }\n\n    return tokenDetailedOwnerList.length === 0 ? (\n        <DialogContent className={classes.dialogContent}>\n            <Box className={classes.tokenBox}>\n                <div className={classes.searchWrapperSingle}>\n                    <InputBase\n                        startAdornment={<Icons.Search className={classes.iconButton} />}\n                        value={searchTokenListInput}\n                        placeholder=\"Input Token ID\"\n                        className={classes.textField}\n                        onChange={(e) => setSearchTokenListInput(e.target.value)}\n                    />\n\n                    <Button disabled={!searchTokenListInput} className={classes.searchButton} onClick={onSearch}>\n                        {t.search()}\n                    </Button>\n                </div>\n                {loadingToken || !searchedTokenDetailedList || !contract ? (\n                    <Box className={classes.noResultBox}>\n                        <Typography>\n                            {loadingToken ? t.loading_token() : searched ? t.search_no_result() : null}\n                        </Typography>\n                    </Box>\n                ) : (\n                    <div className={classes.tokenSelector}>\n                        {searchedTokenDetailedList.map((token, i) => {\n                            const findToken = tokenDetailedSelectedList.find((t) => t.tokenId === token.tokenId)\n                            return (\n                                <div key={i}>\n                                    <NFTCard\n                                        findToken={findToken}\n                                        token={token}\n                                        selectToken={selectToken}\n                                        isSelectSharesExceed={isSelectSharesExceed}\n                                    />\n                                </div>\n                            )\n                        })}\n                    </div>\n                )}\n            </Box>\n            <div className={classes.selectSharesExceedBox}>\n                <Typography className={classes.selectSharesExceed}>\n                    {isSelectSharesExceed ? t.nft_max_shares_tip(maxSharesOptions) : null}\n                </Typography>\n                <Box className={classes.selectAmountBox}>\n                    <ShadowRootTooltip\n                        title={\n                            <Typography className={classes.tooltipText}>\n                                {tokenDetailedSelectedList.length > RED_PACKET_MAX_SHARES\n                                    ? t.nft_max_shares_tip(maxSharesOptions)\n                                    : t.nft_max_shares(maxSharesOptions)}\n                            </Typography>\n                        }\n                        placement=\"top-end\"\n                        classes={{ tooltip: classes.tooltip, arrow: classes.arrow }}\n                        arrow>\n                        <QuestionMarkIcon className={classes.questionMarkIcon} />\n                    </ShadowRootTooltip>\n                    <Typography>\n                        <RedPacketTrans.nft_select_amount\n                            components={{ span: <span className={classes.selectedTokenAmount} /> }}\n                            values={{ count: tokenDetailedSelectedList.length }}\n                        />\n                    </Typography>\n                </Box>\n            </div>\n            <Button\n                disabled={loadingToken || isSelectSharesExceed}\n                className={classes.confirmButton}\n                onClick={onSubmit}>\n                {t.confirm()}\n            </Button>\n        </DialogContent>\n    ) : (\n        <DialogContent className={cx(classes.dialogContent, classes.dialogContentFixedHeight)}>\n            <div className={classes.searchWrapper}>\n                <InputBase\n                    startAdornment={<Icons.Search className={classes.iconButton} />}\n                    value={tokenDetailedOwnerList.length === 0 ? searchTokenListInput : tokenIdListInput}\n                    placeholder={t.nft_search_placeholder()}\n                    className={classes.textField}\n                    onChange={(e) =>\n                        tokenDetailedOwnerList.length === 0\n                            ? setSearchTokenListInput(e.target.value)\n                            : setTokenIdListInput(e.target.value)\n                    }\n                />\n\n                <Button\n                    disabled={tokenDetailedOwnerList.length === 0 ? !searchTokenListInput : !tokenIdListInput}\n                    className={classes.searchButton}\n                    onClick={tokenDetailedOwnerList.length === 0 ? onSearch : onFilter}>\n                    {t.search()}\n                </Button>\n            </div>\n            <Box className={classes.ownerTokenBox}>\n                {loadingToken && searched ? (\n                    <Box className={classes.noResultBox}>\n                        <Typography>{loadingToken ? t.loading_token() : t.search_no_result()}</Typography>\n                    </Box>\n                ) : (\n                    <>\n                        {tokenIdFilterList.length === 0 ? (\n                            <div className={classes.selectBar}>\n                                <div className={classes.selectAll}>\n                                    <div\n                                        className={cx(classes.selectAllCheckBox, selectAll ? classes.checked : '')}\n                                        onClick={selectAllHandler}>\n                                        {selectAll ? <CheckIcon className={classes.checkIcon} /> : null}\n                                    </div>\n                                    <Typography className={cx(classes.selectAllCheckBoxText)}>\n                                        {t.select_all()}\n                                    </Typography>\n                                </div>\n                                <Typography>\n                                    <RedPacketTrans.nft_shift_select_tip\n                                        components={{\n                                            text: <span style={{ color: theme.palette.maskColor.primary }} />,\n                                        }}\n                                        values={{\n                                            text: 'Shift',\n                                        }}\n                                    />\n                                </Typography>\n                            </div>\n                        ) : null}\n\n                        <div className={classes.tokenSelector}>\n                            {tokenDetailedOwnerList.map((token) => {\n                                const findToken = tokenDetailedSelectedList.find((t) => t.tokenId === token.tokenId)\n                                if (tokenIdFilterList.length > 0 && !tokenIdFilterList.includes(token.tokenId))\n                                    return null\n                                return (\n                                    <NFTCard\n                                        key={token.tokenId}\n                                        findToken={findToken}\n                                        token={token}\n                                        selectToken={selectToken}\n                                        isSelectSharesExceed={isSelectSharesExceed}\n                                    />\n                                )\n                            })}\n                        </div>\n                    </>\n                )}\n            </Box>\n            <div className={classes.selectSharesExceedBox}>\n                <Typography className={classes.selectSharesExceed}>\n                    {isSelectSharesExceed ? t.nft_max_shares_tip(maxSharesOptions) : null}\n                </Typography>\n\n                <Box className={classes.selectAmountBox}>\n                    <ShadowRootTooltip\n                        title={\n                            <Typography className={classes.tooltipText}>\n                                {tokenDetailedSelectedList.length > RED_PACKET_MAX_SHARES\n                                    ? t.nft_max_shares_tip(maxSharesOptions)\n                                    : t.nft_max_shares(maxSharesOptions)}\n                            </Typography>\n                        }\n                        placement=\"top-end\"\n                        classes={{ tooltip: classes.tooltip, arrow: classes.arrow }}\n                        arrow>\n                        <QuestionMarkIcon className={classes.questionMarkIcon} />\n                    </ShadowRootTooltip>\n                    <Typography>\n                        <span className={classes.selectedTokenAmount}>{tokenDetailedSelectedList.length + ' '}</span>/\n                        <span className={classes.totalAmount}>{tokenDetailedOwnerList.length}</span>\n                    </Typography>\n                </Box>\n            </div>\n            <Button\n                disabled={loadingToken || tokenDetailedSelectedList.length === 0 || isSelectSharesExceed}\n                className={classes.confirmButton}\n                onClick={onSubmit}>\n                {t.confirm()}\n            </Button>\n        </DialogContent>\n    )\n}\n\ninterface NFTCardProps {\n    findToken: OrderedERC721Token | undefined\n    token: OrderedERC721Token\n    isSelectSharesExceed: boolean\n    selectToken: (\n        token: OrderedERC721Token,\n        findToken: OrderedERC721Token | undefined,\n        shiftKey: boolean,\n        index: number,\n    ) => void\n}\n\nfunction NFTCard(props: NFTCardProps) {\n    const { findToken, token, isSelectSharesExceed, selectToken } = props\n    const { classes, cx } = useStyles({ isSelectSharesExceed })\n    return (\n        <ListItem className={classes.selectWrapper}>\n            <div className={classes.imageWrapper}>\n                <AssetPreviewer\n                    url={token.metadata?.mediaURL || token.metadata?.imageURL}\n                    classes={{\n                        fallbackImage: classes.fallbackImage,\n                    }}\n                />\n            </div>\n            <div className={classes.selectWrapperNftNameWrapper}>\n                <Typography className={classes.selectWrapperNftName} color=\"textSecondary\">\n                    {formatTokenId(token.tokenId, 2)}\n                </Typography>\n            </div>\n\n            <div\n                className={cx(classes.checkbox, findToken ? classes.checked : '')}\n                onClick={(event) => selectToken(token, findToken, event.shiftKey, token.index)}>\n                {findToken ? <CheckIcon className={classes.checkIcon} /> : null}\n            </div>\n        </ListItem>\n    )\n}\n","import { useAsyncFn } from 'react-use'\nimport type { AsyncFnReturn } from 'react-use/lib/useAsync.js'\nimport type { EventLog, TransactionReceipt } from 'web3-core'\nimport { sha3 } from 'web3-utils'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { decodeEvents, ContractTransaction, type GasConfig, isValidAddress } from '@masknet/web3-shared-evm'\nimport { Web3 } from '@masknet/web3-providers'\nimport { toFixed } from '@masknet/web3-shared-base'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport type { NftRedPacket } from '@masknet/web3-contracts/types/NftRedPacket.js'\nimport { useNftRedPacketContract } from './useNftRedPacketContract.js'\n\nexport function useCreateNftRedpacketCallback(\n    duration: number,\n    message: string,\n    name: string,\n    contractAddress: string,\n    tokenIdList: string[],\n    gasOption?: GasConfig,\n): AsyncFnReturn<\n    (publicKey: string) => Promise<\n        | {\n              hash: string\n              receipt: TransactionReceipt | null\n              events?: {\n                  [eventName: string]: EventLog | undefined\n              }\n          }\n        | undefined\n    >\n> {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const nftRedPacketContract = useNftRedPacketContract(chainId)\n    const createCallback = useAsyncFn(\n        async (publicKey: string) => {\n            if (!nftRedPacketContract || !isValidAddress(contractAddress) || tokenIdList.length === 0) {\n                return\n            }\n\n            // #region check ownership\n            type CheckMethodParameters = Parameters<NftRedPacket['methods']['check_ownership']>\n\n            const checkParams: CheckMethodParameters = [tokenIdList, contractAddress]\n\n            const isOwner = await nftRedPacketContract.methods.check_ownership(...checkParams).call({ from: account })\n\n            if (!isOwner) {\n                return\n            }\n\n            // #endregion\n\n            type FillMethodParameters = Parameters<NftRedPacket['methods']['create_red_packet']>\n\n            const params: FillMethodParameters = [\n                publicKey,\n                duration,\n                sha3(Math.random().toString())!,\n                message,\n                name,\n                contractAddress,\n                tokenIdList,\n            ]\n\n            const tx = await new ContractTransaction(nftRedPacketContract).fillAll(\n                nftRedPacketContract.methods.create_red_packet(...params),\n                {\n                    from: account,\n                    gas: toFixed(\n                        await nftRedPacketContract.methods.create_red_packet(...params).estimateGas({ from: account }),\n                    ),\n                    chainId,\n                    ...gasOption,\n                },\n            )\n\n            const hash = await Web3.sendTransaction(tx, {\n                paymentToken: gasOption?.gasCurrency,\n                gasOptionType: gasOption?.gasOptionType,\n            })\n            const receipt = await Web3.getTransactionReceipt(hash)\n            if (receipt) {\n                const events = decodeEvents(nftRedPacketContract.options.jsonInterface, receipt.logs)\n                return {\n                    hash,\n                    receipt,\n                    events,\n                }\n            }\n            return { hash, receipt }\n        },\n        [duration, message, name, contractAddress, tokenIdList, nftRedPacketContract, account, chainId, gasOption],\n    )\n\n    return createCallback\n}\n","import { useMemo, useCallback, useState, memo } from 'react'\nimport { makeStyles, ActionButton } from '@masknet/theme'\nimport {\n    formatEthereumAddress,\n    type ChainId,\n    type SchemaType,\n    isNativeTokenAddress,\n    formatTokenId,\n    type GasConfig,\n} from '@masknet/web3-shared-evm'\nimport {\n    AssetPreviewer,\n    PluginWalletStatusBar,\n    ChainBoundary,\n    WalletConnectedBoundary,\n    ApplicationBoardModal,\n} from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext, useWallet } from '@masknet/web3-hooks-base'\nimport type { NonFungibleToken, NonFungibleCollection } from '@masknet/web3-shared-base'\nimport { Grid, Link, Typography, List, DialogContent, ListItem, Box } from '@mui/material'\nimport { ExplorerResolver, Web3 } from '@masknet/web3-providers'\nimport { Launch as LaunchIcon } from '@mui/icons-material'\nimport { useRedPacketTrans } from '../locales/index.js'\nimport { useCreateNftRedpacketCallback } from './hooks/useCreateNftRedpacketCallback.js'\nimport { RedPacketNftMetaKey } from '../constants.js'\nimport { RedPacketRPC } from '../messages.js'\nimport { openComposition } from './openComposition.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        fontSize: 16,\n    },\n    link: {\n        display: 'flex',\n        marginLeft: theme.spacing(0.5),\n    },\n    account: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n    },\n    text: {\n        fontSize: 16,\n    },\n    bold: {\n        fontWeight: 500,\n    },\n    tokenWrapper: {\n        float: 'right',\n        display: 'flex',\n        alignItems: 'center',\n    },\n    icon: {\n        marginRight: 8,\n        height: 24,\n        width: 24,\n    },\n    tokenSelector: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(4, 1fr)',\n        gap: 16,\n        width: '100%',\n        maxHeight: 420,\n        overflowY: 'auto',\n        background: theme.palette.background.default,\n        borderRadius: 12,\n        marginTop: theme.spacing(1.5),\n        marginBottom: theme.spacing(1.5),\n        padding: theme.spacing(1.5, 1.5, 1, 1.5),\n        boxSizing: 'border-box',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    tokenSelectorWrapper: {\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'column',\n        borderRadius: 8,\n        padding: 0,\n        background: theme.palette.mode === 'light' ? '#fff' : '#2F3336',\n        height: 150,\n        overflow: 'hidden',\n    },\n    nftNameWrapper: {\n        position: 'absolute',\n        bottom: 0,\n        width: '100%',\n        background: theme.palette.background.paper,\n        borderBottomRightRadius: 8,\n        borderBottomLeftRadius: 8,\n        paddingTop: 2,\n        paddingBottom: 1,\n    },\n    nftName: {\n        minHeight: 30,\n        marginLeft: 8,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    button: {\n        minHeight: 36,\n        height: 36,\n    },\n    sendButton: {},\n    fallbackImage: {\n        minHeight: '0 !important',\n        maxWidth: 'none',\n        width: 64,\n        height: 64,\n    },\n    ellipsis: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    assetImgWrapper: {\n        maxHeight: 120,\n        overflow: 'hidden',\n    },\n}))\n\ninterface NFTCardProps {\n    token: NonFungibleToken<ChainId, SchemaType>\n}\n\nconst NFTCard = memo(function NFTCard(props: NFTCardProps) {\n    const { token } = props\n    const { classes } = useStyles()\n    return (\n        <ListItem className={classes.tokenSelectorWrapper}>\n            <AssetPreviewer\n                url={token.metadata?.mediaURL || token.metadata?.imageURL}\n                classes={{\n                    fallbackImage: classes.fallbackImage,\n                    root: classes.assetImgWrapper,\n                }}\n            />\n            <div className={classes.nftNameWrapper}>\n                <Typography className={classes.nftName} color=\"textSecondary\">\n                    {formatTokenId(token.tokenId, 2)}\n                </Typography>\n            </div>\n        </ListItem>\n    )\n})\ninterface RedpacketNftConfirmDialogProps {\n    onBack: () => void\n    onClose: () => void\n    contract: NonFungibleCollection<ChainId, SchemaType>\n    tokenList: Array<NonFungibleToken<ChainId, SchemaType>>\n    message: string\n    senderName: string\n    gasOption?: GasConfig\n}\nexport function RedpacketNftConfirmDialog(props: RedpacketNftConfirmDialogProps) {\n    const t = useRedPacketTrans()\n    const { classes, cx } = useStyles()\n    const { onClose, message, contract, tokenList, senderName, gasOption } = props\n    const wallet = useWallet(NetworkPluginID.PLUGIN_EVM)\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    const { account: publicKey, privateKey = '' } = useMemo(() => Web3.createAccount(), [])!\n\n    const duration = 60 * 60 * 24\n\n    const tokenIdList = tokenList.map((value) => value.tokenId)\n    const [{ loading: isSending }, createCallback] = useCreateNftRedpacketCallback(\n        duration,\n        message,\n        senderName,\n        contract.address ?? '',\n        tokenIdList,\n        gasOption,\n    )\n\n    const [transactionId, setTransactionId] = useState('')\n\n    const onSendTx = useCallback(async () => {\n        const result = await createCallback(publicKey)\n\n        const { hash, receipt, events } = result ?? {}\n        if (typeof hash !== 'string') return\n        if (typeof receipt?.transactionHash !== 'string') return\n        setTransactionId(receipt.transactionHash)\n        RedPacketRPC.addRedPacketNft({ id: receipt.transactionHash, password: privateKey, contract_version: 1 })\n        const { id } = (events?.CreationSuccess?.returnValues ?? {}) as {\n            id?: string\n        }\n        if (!id) return\n        onSendPost(id)\n        onClose()\n    }, [publicKey])\n\n    const onSendPost = useCallback(\n        (id: string) => {\n            openComposition(RedPacketNftMetaKey, {\n                id,\n                transactionId,\n                duration,\n                message,\n                senderName,\n                contractName: contract.name,\n                contractAddress: contract.address,\n                contractTokenURI: contract.iconURL ?? '',\n                contractVersion: 1,\n                privateKey,\n                chainId: contract.chainId,\n            })\n            ApplicationBoardModal.close()\n        },\n        [duration, message, senderName, contract, privateKey, transactionId],\n    )\n\n    return (\n        <DialogContent className={classes.root}>\n            <Grid container spacing={2} pb={9}>\n                <Grid item xs={6}>\n                    <Typography color=\"textPrimary\" variant=\"body1\" className={classes.text}>\n                        {t.nft_account_name()}\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                        align=\"right\"\n                        className={cx(classes.account, classes.bold, classes.text)}>\n                        {formatEthereumAddress(account, 4)}\n                        {isNativeTokenAddress(wallet?.address) ? null : (\n                            <Link\n                                color=\"textPrimary\"\n                                className={classes.link}\n                                href={ExplorerResolver.addressLink(chainId, account)}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                onClick={stop}>\n                                <LaunchIcon fontSize=\"small\" />\n                            </Link>\n                        )}\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography variant=\"body1\" color=\"textPrimary\" className={cx(classes.text)}>\n                        {t.nft_attached_message()}\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography\n                        variant=\"body1\"\n                        color=\"textPrimary\"\n                        align=\"right\"\n                        className={cx(classes.text, classes.bold, classes.ellipsis)}>\n                        {message}\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography variant=\"body1\" color=\"textPrimary\" className={cx(classes.text)}>\n                        {t.collections()}\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <div className={classes.tokenWrapper}>\n                        {contract.iconURL ? <img className={classes.icon} src={contract.iconURL} /> : null}\n                        <Typography\n                            variant=\"body1\"\n                            color=\"textPrimary\"\n                            align=\"right\"\n                            className={cx(classes.text, classes.bold)}>\n                            {contract.name}\n                        </Typography>\n                    </div>\n                </Grid>\n                <Grid item xs={12} component={List} className={classes.tokenSelector}>\n                    {tokenList.map((value, i) => (\n                        <NFTCard key={i} token={value} />\n                    ))}\n                </Grid>\n\n                <Grid item xs={6}>\n                    <Typography color=\"textPrimary\" variant=\"body1\" className={cx(classes.text)}>\n                        {t.nft_total_amount()}\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography color=\"textPrimary\" align=\"right\" className={cx(classes.text, classes.bold)}>\n                        {tokenList.length}\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Box style={{ position: 'absolute', bottom: 0, left: 0, width: '100%' }}>\n                <PluginWalletStatusBar>\n                    <ChainBoundary expectedPluginID={NetworkPluginID.PLUGIN_EVM} expectedChainId={chainId}>\n                        <WalletConnectedBoundary\n                            expectedChainId={chainId}\n                            classes={{\n                                connectWallet: cx(classes.button, classes.sendButton),\n                            }}>\n                            <ActionButton\n                                size=\"medium\"\n                                loading={isSending}\n                                disabled={isSending}\n                                onClick={onSendTx}\n                                className={cx(classes.button, classes.sendButton)}\n                                fullWidth>\n                                {t.send_symbol({\n                                    count: tokenList.length,\n                                })}\n                            </ActionButton>\n                        </WalletConnectedBoundary>\n                    </ChainBoundary>\n                </PluginWalletStatusBar>\n            </Box>\n        </DialogContent>\n    )\n}\n","export enum NFTSelectOption {\n    All = 'All',\n    Partial = 'Partial',\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { EMPTY_LIST, type NetworkPluginID, pageableToIterator } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\nexport function useNonFungibleAssetsByCollectionAndOwner<\n    S extends 'all' | void = void,\n    T extends NetworkPluginID = NetworkPluginID,\n>(collectionId?: string, owner?: string, pluginID?: T, options?: HubOptions<T>) {\n    const [assets, setAssets] = useState<Array<Web3Helper.NonFungibleAssetScope<S, T>>>(EMPTY_LIST)\n    const [done, setDone] = useState(false)\n    const [loading, toggleLoading] = useState(false)\n    const [error, setError] = useState<string>()\n    const Hub = useWeb3Hub(pluginID, options)\n\n    // create iterator\n    const iterator = useMemo(() => {\n        setAssets(EMPTY_LIST)\n        setDone(false)\n\n        return pageableToIterator(async (indicator) => {\n            return Hub.getNonFungibleAssetsByCollectionAndOwner(collectionId ?? '', owner ?? '', {\n                indicator,\n                size: 50,\n            })\n        })\n    }, [collectionId, Hub])\n\n    const next = useCallback(async () => {\n        if (!iterator || done) return\n\n        const batchResult: Array<Web3Helper.NonFungibleAssetScope<S, T>> = []\n        toggleLoading(true)\n        try {\n            for (const _ of Array.from({ length: options?.size ?? 36 })) {\n                const { value, done: iteratorDone } = await iterator.next()\n                if (value instanceof Error) {\n                    // Controlled error\n                    setError(value.message)\n                    break\n                } else {\n                    if (iteratorDone) {\n                        setDone(true)\n                        break\n                    }\n                    if (!iteratorDone && value) {\n                        batchResult.push(value)\n                    }\n                }\n            }\n        } catch (error_) {\n            // Uncontrolled error\n            setError(error_ as string)\n            setDone(true)\n        }\n        toggleLoading(false)\n        setAssets((pred) => [...pred, ...batchResult].sort((a, b) => (a.tokenId > b.tokenId ? 1 : -1)))\n    }, [iterator, done])\n\n    // Execute once after next update\n    useEffect(() => {\n        if (next) next()\n    }, [next])\n\n    const retry = useCallback(() => {\n        setAssets(EMPTY_LIST)\n        setDone(false)\n    }, [])\n\n    return {\n        value: assets.filter((x) => (options?.chainId ? x.chainId === options?.chainId : true)),\n        next,\n        loading,\n        done,\n        retry,\n        error,\n    }\n}\n","import { useMemo } from 'react'\nimport { useAsync } from 'react-use'\nimport { sha3 } from 'web3-utils'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { NftRedPacket } from '@masknet/web3-contracts/types/NftRedPacket.js'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { toFixed } from '@masknet/web3-shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { useNftRedPacketContract } from './useNftRedPacketContract.js'\n\nexport function useCreateNFTRedpacketGas(\n    message: string,\n    name: string,\n    contractAddress: string,\n    tokenIdList: string[],\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const nftRedPacketContract = useNftRedPacketContract(chainId)\n\n    const { account: publicKey } = useMemo(() => Web3.createAccount(), [])\n\n    return useAsync(async () => {\n        if (!nftRedPacketContract || !account) return\n\n        type FillMethodParameters = Parameters<NftRedPacket['methods']['create_red_packet']>\n        const params: FillMethodParameters = [\n            publicKey,\n            60 * 60 * 24,\n            sha3(Math.random().toString())!,\n            message,\n            name,\n            contractAddress,\n            tokenIdList,\n        ]\n\n        return toFixed(await nftRedPacketContract?.methods.create_red_packet(...params).estimateGas({ from: account }))\n    }, [account, contractAddress, message, name, JSON.stringify(tokenIdList), nftRedPacketContract, publicKey])\n}\n","import { useState, useCallback, useEffect, useMemo } from 'react'\nimport { Box, Typography, List, ListItem, Skeleton } from '@mui/material'\nimport { makeStyles, ActionButton, ShadowRootTooltip } from '@masknet/theme'\nimport { Check as CheckIcon, Close as CloseIcon, AddCircleOutline as AddCircleOutlineIcon } from '@mui/icons-material'\nimport { useRedPacketTrans } from '../locales/index.js'\nimport {\n    WalletConnectedBoundary,\n    AssetPreviewer,\n    PluginWalletStatusBar,\n    ERC721ContractSelectPanel,\n    ChainBoundary,\n    EthereumERC721TokenApprovedBoundary,\n    SelectGasSettingsToolbar,\n    useAvailableBalance,\n    useCurrentLinkedPersona,\n} from '@masknet/shared'\nimport {\n    type ChainId,\n    type SchemaType,\n    useNftRedPacketConstants,\n    formatTokenId,\n    type GasConfig,\n} from '@masknet/web3-shared-evm'\nimport { RedpacketMessagePanel } from './RedpacketMessagePanel.js'\nimport { SelectNftTokenDialog, type OrderedERC721Token } from './SelectNftTokenDialog.js'\nimport { RedpacketNftConfirmDialog } from './RedpacketNftConfirmDialog.js'\nimport { NFTSelectOption } from '../types.js'\nimport { RED_PACKET_MAX_SHARES } from '../constants.js'\nimport {\n    useChainContext,\n    useNativeToken,\n    useNativeTokenPrice,\n    useWallet,\n    useNonFungibleAssetsByCollectionAndOwner,\n    useEnvironmentContext,\n} from '@masknet/web3-hooks-base'\nimport { NetworkPluginID, EMPTY_LIST } from '@masknet/shared-base'\nimport { SourceType } from '@masknet/web3-shared-base'\nimport type { NonFungibleToken, NonFungibleCollection } from '@masknet/web3-shared-base'\nimport { SmartPayBundler } from '@masknet/web3-providers'\nimport { useAsync } from 'react-use'\nimport { useCreateNFTRedpacketGas } from './hooks/useCreateNftRedpacketGas.js'\nimport { useCurrentVisitingIdentity, useLastRecognizedIdentity } from '@masknet/plugin-infra/content-script'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        root: {\n            display: 'flex',\n            alignItems: 'stretch',\n            flexDirection: 'column',\n            padding: '0 16px 72px',\n        },\n        line: {\n            display: 'flex',\n            margin: theme.spacing(1, 0, 2, 0),\n        },\n        nftNameWrapper: {\n            position: 'absolute',\n            bottom: 0,\n            width: '100%',\n            background: theme.palette.background.paper,\n            borderBottomRightRadius: 8,\n            borderBottomLeftRadius: 8,\n            paddingTop: 2,\n            paddingBottom: 1,\n        },\n        nftName: {\n            minHeight: 30,\n            marginLeft: 8,\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n        },\n        tokenSelector: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(4, 1fr)',\n            gap: 16,\n            width: '100%',\n            overflowY: 'auto',\n            overflowX: 'hidden',\n            height: 200,\n            background: theme.palette.background.default,\n            borderRadius: 12,\n            padding: theme.spacing(1.5, 1.5, 1, 1),\n            boxSizing: 'border-box',\n            '::-webkit-scrollbar': {\n                backgroundColor: 'transparent',\n                width: 20,\n            },\n            '::-webkit-scrollbar-thumb': {\n                borderRadius: '20px',\n                width: 5,\n                border: '7px solid rgba(0, 0, 0, 0)',\n                backgroundColor: theme.palette.mode === 'dark' ? 'rgba(250, 250, 250, 0.2)' : 'rgba(0, 0, 0, 0.2)',\n                backgroundClip: 'padding-box',\n            },\n        },\n        tokenSelectorWrapper: {\n            position: 'relative',\n            display: 'flex',\n            flexDirection: 'column',\n            borderRadius: 8,\n            padding: 0,\n            marginBottom: theme.spacing(2.5),\n            background: theme.palette.background.paper,\n            width: 120,\n            height: 150,\n            overflow: 'hidden',\n        },\n        tokenSelectorParent: {\n            background: theme.palette.background.default,\n            borderRadius: 12,\n            paddingBottom: 5,\n            marginTop: theme.spacing(1.5),\n            marginBottom: theme.spacing(1.5),\n        },\n        addWrapper: {\n            cursor: 'pointer',\n            alignItems: 'center',\n            background: `${theme.palette.background.default} !important`,\n            justifyContent: 'center',\n            border: `1px solid ${theme.palette.divider}`,\n        },\n        addIcon: {\n            color: '#AFC3E1',\n        },\n        closeIconWrapperBack: {\n            position: 'absolute',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            top: 5,\n            right: 5,\n            width: 18,\n            height: 18,\n            background: 'rgba(255, 255, 255, 0.8)',\n            borderRadius: 500,\n            overflow: 'hidden',\n        },\n        closeIconWrapper: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: 18,\n            height: 18,\n            background: 'rgba(255, 95, 95, 0.3)',\n        },\n        closeIcon: {\n            width: 14,\n            height: 14,\n            cursor: 'pointer',\n            color: 'rgba(255, 95, 95, 1)',\n        },\n        fallbackImage: {\n            minHeight: '0 !important',\n            maxWidth: 'none',\n            width: 64,\n            height: 64,\n        },\n        selectWrapper: {\n            display: 'flex',\n            alignItems: 'center',\n            margin: 0,\n        },\n        option: {\n            display: 'flex',\n            alignItems: 'center',\n            cursor: 'pointer',\n        },\n        optionLeft: {\n            marginRight: '16px',\n        },\n        checkIcon: {\n            width: 15,\n            height: 15,\n            color: '#fff',\n        },\n        checkIconWrapper: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            cursor: 'pointer',\n            width: 17,\n            height: 17,\n            borderRadius: 999,\n            marginRight: 5,\n            border: '1px solid #6E748E',\n            backgroundColor: 'white',\n        },\n        checked: {\n            borderColor: '#1D9BF0 !important',\n            background: '#1D9BF0 !important',\n        },\n        approveAllTip: {\n            color: '#FF5F5F',\n            margin: '8px 4px 8px 4px',\n        },\n        toolbar: {\n            marginTop: 0,\n        },\n        disabledSelector: {\n            opacity: 0.5,\n            pointerEvents: 'none',\n        },\n        assetImgWrapper: {\n            maxHeight: 120,\n            overflow: 'hidden',\n        },\n        approveButton: {\n            height: 40,\n            margin: 0,\n            padding: 0,\n        },\n        skeleton: {\n            display: 'flex',\n            marginBottom: 12,\n        },\n        rectangle: {\n            borderRadius: 8,\n            marginRight: 12,\n        },\n    }\n})\ninterface RedPacketERC721FormProps {\n    onClose: () => void\n    openNFTConfirmDialog: boolean\n    openSelectNFTDialog: boolean\n    setOpenSelectNFTDialog: (x: boolean) => void\n    setOpenNFTConfirmDialog: (x: boolean) => void\n    setIsNFTRedPacketLoaded?: (x: boolean) => void\n    gasOption?: GasConfig\n    onGasOptionChange?: (config: GasConfig) => void\n}\nexport function RedPacketERC721Form(props: RedPacketERC721FormProps) {\n    const t = useRedPacketTrans()\n    const {\n        onClose,\n        setIsNFTRedPacketLoaded,\n        openNFTConfirmDialog,\n        setOpenNFTConfirmDialog,\n        openSelectNFTDialog,\n        setOpenSelectNFTDialog,\n        gasOption,\n        onGasOptionChange,\n    } = props\n    const { classes, cx } = useStyles()\n    const [selectOption, setSelectOption] = useState<NFTSelectOption | undefined>(undefined)\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { pluginID } = useEnvironmentContext()\n    const [collection, setCollection] = useState<NonFungibleCollection<ChainId, SchemaType>>()\n    const [manualSelectedTokenDetailedList, setExistTokenDetailedList] = useState<OrderedERC721Token[]>(EMPTY_LIST)\n    const [onceAllSelectedTokenDetailedList, setAllTokenDetailedList] = useState<OrderedERC721Token[]>(EMPTY_LIST)\n    const tokenDetailedList =\n        selectOption === NFTSelectOption.Partial ? manualSelectedTokenDetailedList : onceAllSelectedTokenDetailedList\n    const [message, setMessage] = useState('Best Wishes!')\n    const wallet = useWallet()\n    const { data: nativeTokenDetailed } = useNativeToken(NetworkPluginID.PLUGIN_EVM)\n    const { data: nativeTokenPrice } = useNativeTokenPrice(NetworkPluginID.PLUGIN_EVM)\n    const { value: smartPayChainId } = useAsync(async () => SmartPayBundler.getSupportedChainId(), [])\n\n    const currentIdentity = useCurrentVisitingIdentity()\n    const linkedPersona = useCurrentLinkedPersona()\n    const lastRecognized = useLastRecognizedIdentity()\n    const senderName =\n        lastRecognized?.identifier?.userId ??\n        currentIdentity?.identifier?.userId ??\n        linkedPersona?.nickname ??\n        'Unknown User'\n\n    const { value: gasLimit = '0' } = useCreateNFTRedpacketGas(\n        message,\n        senderName,\n        collection?.address ?? '',\n        tokenDetailedList.map((value) => value.tokenId),\n    )\n\n    const { isGasSufficient, isGasFeeGreaterThanOneETH } = useAvailableBalance(\n        NetworkPluginID.PLUGIN_EVM,\n        '',\n        gasOption,\n        { chainId },\n    )\n\n    const {\n        value: assets_ = EMPTY_LIST,\n        next,\n        done,\n    } = useNonFungibleAssetsByCollectionAndOwner(\n        collection?.assets?.length\n            ? ''\n            : collection?.source === SourceType.SimpleHash\n            ? collection?.id\n            : collection?.address,\n        account,\n        NetworkPluginID.PLUGIN_EVM,\n        {\n            chainId,\n            size: 50,\n        },\n    )\n    useEffect(() => {\n        next()\n    }, [assets_.length])\n\n    const assets = collection?.assets?.length ? collection?.assets : assets_\n\n    const tokenDetailedOwnerList = assets.map((v, index) => ({ ...v, index }) as OrderedERC721Token)\n\n    const balance = collection?.balance ?? tokenDetailedOwnerList.length\n    const removeToken = useCallback(\n        (token: NonFungibleToken<ChainId, SchemaType.ERC721>) => {\n            setExistTokenDetailedList((list) => list.filter((t) => t.tokenId !== token.tokenId))\n            setAllTokenDetailedList(EMPTY_LIST)\n            setSelectOption(NFTSelectOption.Partial)\n        },\n        [selectOption, setSelectOption, setExistTokenDetailedList, setAllTokenDetailedList],\n    )\n\n    const maxSelectShares = Math.min(RED_PACKET_MAX_SHARES, balance)\n\n    const clearToken = useCallback(() => {\n        setExistTokenDetailedList(EMPTY_LIST)\n        setAllTokenDetailedList(EMPTY_LIST)\n        setOpenNFTConfirmDialog(false)\n    }, [])\n\n    const clearContract = useCallback(() => {\n        setCollection(undefined)\n    }, [])\n\n    useEffect(() => {\n        if (!selectOption) {\n            setSelectOption(NFTSelectOption.Partial)\n        }\n    }, [tokenDetailedOwnerList, selectOption])\n\n    useEffect(() => {\n        clearContract()\n    }, [account])\n\n    useEffect(() => {\n        clearToken()\n        setSelectOption(undefined)\n        setOpenSelectNFTDialog(false)\n    }, [collection, account])\n\n    useEffect(() => {\n        setOpenSelectNFTDialog(false)\n        clearContract()\n    }, [chainId])\n\n    const { RED_PACKET_NFT_ADDRESS } = useNftRedPacketConstants(chainId)\n\n    const validationMessage = useMemo(() => {\n        if (!balance) return t.erc721_insufficient_balance()\n        if (tokenDetailedList.length === 0) return t.select_a_token()\n        return ''\n    }, [tokenDetailedList.length, balance, t, isGasSufficient])\n\n    const gasValidationMessage = useMemo(() => {\n        if (!isGasSufficient) {\n            return t.no_enough_gas_fees()\n        }\n        if (isGasFeeGreaterThanOneETH) return t.erc721_create_lucky_drop()\n        return ''\n    }, [isGasSufficient, isGasFeeGreaterThanOneETH])\n\n    useEffect(() => {\n        setIsNFTRedPacketLoaded?.(balance > 0)\n    }, [balance > 0])\n\n    const handleClose = useCallback(() => setOpenSelectNFTDialog(false), [])\n\n    if (openSelectNFTDialog) {\n        return (\n            <SelectNftTokenDialog\n                onClose={handleClose}\n                contract={collection}\n                existTokenDetailedList={tokenDetailedList}\n                setExistTokenDetailedList={setExistTokenDetailedList}\n                tokenDetailedOwnerList={tokenDetailedOwnerList}\n            />\n        )\n    }\n\n    if (openNFTConfirmDialog && collection) {\n        return (\n            <RedpacketNftConfirmDialog\n                message={message}\n                contract={collection}\n                tokenList={tokenDetailedList}\n                onBack={handleClose}\n                onClose={onClose}\n                senderName={senderName}\n                gasOption={gasOption}\n            />\n        )\n    }\n\n    return (\n        <>\n            <Box className={classes.root}>\n                <Box style={{ margin: '16px 0' }}>\n                    <ERC721ContractSelectPanel\n                        collection={collection}\n                        onContractChange={setCollection}\n                        balance={balance}\n                        chainId={chainId}\n                    />\n                </Box>\n                {collection && balance ? (\n                    done ? (\n                        <>\n                            <Box className={classes.selectWrapper}>\n                                <div\n                                    className={cx(\n                                        classes.optionLeft,\n                                        classes.option,\n                                        balance === 0 ? classes.disabledSelector : null,\n                                    )}\n                                    onClick={() => {\n                                        setSelectOption(NFTSelectOption.All)\n                                        setExistTokenDetailedList(tokenDetailedOwnerList.slice(0, maxSelectShares))\n                                        setAllTokenDetailedList(tokenDetailedOwnerList.slice(0, maxSelectShares))\n                                    }}>\n                                    <div\n                                        className={cx(\n                                            classes.checkIconWrapper,\n                                            selectOption === NFTSelectOption.All ? classes.checked : '',\n                                        )}>\n                                        <CheckIcon className={classes.checkIcon} />\n                                    </div>\n                                    <Typography color=\"textPrimary\">\n                                        {balance === 0\n                                            ? 'All'\n                                            : t.nft_select_all_option({\n                                                  total: Math.min(RED_PACKET_MAX_SHARES, balance).toString(),\n                                              })}\n                                    </Typography>\n                                </div>\n                                <div\n                                    className={classes.option}\n                                    onClick={() => setSelectOption(NFTSelectOption.Partial)}>\n                                    <div\n                                        className={cx(\n                                            classes.checkIconWrapper,\n                                            selectOption === NFTSelectOption.Partial ? classes.checked : '',\n                                        )}>\n                                        <CheckIcon className={classes.checkIcon} />\n                                    </div>\n                                    <Typography color=\"textPrimary\">{t.nft_select_partially_option()}</Typography>\n                                </div>\n                            </Box>\n                            <div className={classes.tokenSelectorParent}>\n                                <List className={classes.tokenSelector}>\n                                    {tokenDetailedList.map((value, i) => (\n                                        <div key={i}>\n                                            <NFTCard token={value} removeToken={removeToken} />\n                                        </div>\n                                    ))}\n                                    <ListItem\n                                        onClick={() => setOpenSelectNFTDialog(true)}\n                                        className={cx(classes.tokenSelectorWrapper, classes.addWrapper)}>\n                                        <AddCircleOutlineIcon className={classes.addIcon} onClick={() => void 0} />\n                                    </ListItem>\n                                </List>\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <div className={classes.skeleton}>\n                                <Skeleton className={classes.rectangle} height={24} variant=\"rectangular\" width={140} />\n                                <Skeleton className={classes.rectangle} height={24} variant=\"rectangular\" width={140} />\n                            </div>\n                            <Skeleton className={classes.rectangle} height={180} variant=\"rectangular\" width=\"100%\" />\n                        </>\n                    )\n                ) : null}\n\n                <div className={classes.line}>\n                    <RedpacketMessagePanel onChange={(val: string) => setMessage(val)} message={message} />\n                </div>\n                {collection && balance ? (\n                    <Typography className={classes.approveAllTip}>{t.nft_approve_all_tip()}</Typography>\n                ) : null}\n                {nativeTokenDetailed && nativeTokenPrice ? (\n                    <Box mx={2}>\n                        <SelectGasSettingsToolbar\n                            className={classes.toolbar}\n                            nativeToken={nativeTokenDetailed}\n                            nativeTokenPrice={nativeTokenPrice}\n                            supportMultiCurrency={!!wallet?.owner && chainId === smartPayChainId}\n                            gasConfig={gasOption}\n                            gasLimit={Number.parseInt(gasLimit, 10)}\n                            onChange={onGasOptionChange}\n                        />\n                    </Box>\n                ) : null}\n            </Box>\n\n            <Box style={{ position: 'absolute', bottom: 0, width: '100%' }}>\n                <PluginWalletStatusBar\n                    expectedPluginID={NetworkPluginID.PLUGIN_EVM}\n                    expectedChainId={chainId}\n                    actualPluginID={pluginID}>\n                    <ChainBoundary\n                        expectedPluginID={NetworkPluginID.PLUGIN_EVM}\n                        expectedChainId={chainId}\n                        forceShowingWrongNetworkButton>\n                        <WalletConnectedBoundary expectedChainId={chainId}>\n                            <EthereumERC721TokenApprovedBoundary\n                                validationMessage={validationMessage}\n                                owner={account}\n                                chainId={chainId}\n                                collection={collection}\n                                classes={{ approveButton: classes.approveButton }}\n                                operator={RED_PACKET_NFT_ADDRESS}>\n                                <ShadowRootTooltip\n                                    title={\n                                        isGasFeeGreaterThanOneETH\n                                            ? t.erc721_gas_cap({ symbol: nativeTokenDetailed?.symbol || 'ETH' })\n                                            : ''\n                                    }\n                                    arrow\n                                    disableInteractive\n                                    placement=\"top\"\n                                    PopperProps={{\n                                        disablePortal: true,\n                                        placement: 'top',\n                                    }}>\n                                    <div style={{ width: '100%' }}>\n                                        <ActionButton\n                                            style={{ height: 40, padding: 0, margin: 0 }}\n                                            size=\"large\"\n                                            disabled={!!validationMessage || !!gasValidationMessage}\n                                            fullWidth\n                                            onClick={() => setOpenNFTConfirmDialog(true)}>\n                                            {gasValidationMessage || t.next()}\n                                        </ActionButton>\n                                    </div>\n                                </ShadowRootTooltip>\n                            </EthereumERC721TokenApprovedBoundary>\n                        </WalletConnectedBoundary>\n                    </ChainBoundary>\n                </PluginWalletStatusBar>\n            </Box>\n        </>\n    )\n}\n\ninterface NFTCardProps {\n    token: OrderedERC721Token\n    removeToken: (token: NonFungibleToken<ChainId, SchemaType.ERC721>) => void\n}\n\nfunction NFTCard(props: NFTCardProps) {\n    const { token, removeToken } = props\n    const { classes, cx } = useStyles()\n    return (\n        <ListItem className={cx(classes.tokenSelectorWrapper)}>\n            <AssetPreviewer\n                url={token.metadata?.mediaURL || token.metadata?.imageURL}\n                classes={{\n                    fallbackImage: classes.fallbackImage,\n                    root: classes.assetImgWrapper,\n                }}\n            />\n            <div className={classes.nftNameWrapper}>\n                <Typography className={classes.nftName} color=\"textSecondary\">\n                    {formatTokenId(token.tokenId, 2)}\n                </Typography>\n            </div>\n            <div className={classes.closeIconWrapperBack} onClick={() => removeToken(token)}>\n                <div className={classes.closeIconWrapper}>\n                    <CloseIcon className={classes.closeIcon} />\n                </div>\n            </div>\n        </ListItem>\n    )\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { sha3 } from 'web3-utils'\nimport { DialogContent, Tab, useTheme } from '@mui/material'\nimport { TabContext, TabPanel } from '@mui/lab'\nimport { CrossIsolationMessages, NetworkPluginID, PluginID } from '@masknet/shared-base'\nimport { useChainContext, useGasPrice } from '@masknet/web3-hooks-base'\nimport { ApplicationBoardModal, InjectedDialog, NetworkTab, useCurrentLinkedPersona } from '@masknet/shared'\nimport { ChainId, type GasConfig, GasEditor } from '@masknet/web3-shared-evm'\nimport { type RedPacketJSONPayload } from '@masknet/web3-providers/types'\nimport { makeStyles, MaskTabList, useTabs } from '@masknet/theme'\nimport { useActivatedPlugin } from '@masknet/plugin-infra/dom'\nimport { Icons } from '@masknet/icons'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventID, EventType } from '@masknet/web3-telemetry/types'\nimport {\n    useCurrentVisitingIdentity,\n    useLastRecognizedIdentity,\n    useSiteThemeMode,\n} from '@masknet/plugin-infra/content-script'\nimport { Web3 } from '@masknet/web3-providers'\nimport { useRedPacketTrans } from '../locales/index.js'\nimport { reduceUselessPayloadInfo } from './utils/reduceUselessPayloadInfo.js'\nimport { RedPacketMetaKey } from '../constants.js'\nimport type { RedPacketSettings } from './hooks/useCreateCallback.js'\nimport { RedPacketConfirmDialog } from './RedPacketConfirmDialog.js'\nimport { RedPacketPast } from './RedPacketPast.js'\nimport { RedPacketERC20Form } from './RedPacketERC20Form.js'\nimport { RedPacketERC721Form } from './RedPacketERC721Form.js'\nimport { openComposition } from './openComposition.js'\n\nconst useStyles = makeStyles<{ currentTab: 'tokens' | 'collectibles'; showHistory: boolean; isDim: boolean }>()((\n    theme,\n    { currentTab, showHistory, isDim },\n) => {\n    // it's hard to set dynamic color, since the background color of the button is blended transparent\n    const darkBackgroundColor = isDim ? '#38414b' : '#292929'\n    return {\n        dialogContent: {\n            padding: 0,\n            '::-webkit-scrollbar': {\n                display: 'none',\n            },\n\n            overflowX: 'hidden',\n            overflowY: !showHistory && currentTab === 'tokens' ? 'hidden' : 'auto',\n        },\n        abstractTabWrapper: {\n            width: '100%',\n            paddingBottom: theme.spacing(2),\n        },\n        arrowButton: {\n            backgroundColor: theme.palette.mode === 'dark' ? darkBackgroundColor : undefined,\n        },\n    }\n})\n\nenum CreateRedPacketPageStep {\n    NewRedPacketPage = 'new',\n    ConfirmPage = 'confirm',\n}\n\ninterface RedPacketDialogProps {\n    open: boolean\n    onClose: () => void\n    isOpenFromApplicationBoard?: boolean\n    source?: PluginID\n}\n\nexport default function RedPacketDialog(props: RedPacketDialogProps) {\n    const t = useRedPacketTrans()\n    const [showHistory, setShowHistory] = useState(false)\n    const [gasOption, setGasOption] = useState<GasConfig>()\n\n    const [step, setStep] = useState(CreateRedPacketPageStep.NewRedPacketPage)\n\n    const [isNFTRedPacketLoaded, setIsNFTRedPacketLoaded] = useState(false)\n    const { account, chainId: _chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const approvalDefinition = useActivatedPlugin(PluginID.RedPacket, 'any')\n    const [currentTab, onChange, tabs] = useTabs('tokens', 'collectibles')\n    const theme = useTheme()\n    const mode = useSiteThemeMode(theme)\n    const { classes } = useStyles({ currentTab, showHistory, isDim: mode === 'dim' })\n    const chainIdList: ChainId[] = useMemo(() => {\n        return currentTab === tabs.tokens\n            ? approvalDefinition?.enableRequirement.web3?.[NetworkPluginID.PLUGIN_EVM]?.supportedChainIds ?? []\n            : [ChainId.Mainnet, ChainId.BSC, ChainId.Matic]\n    }, [currentTab === tabs.tokens, approvalDefinition?.enableRequirement.web3])\n    const chainId = chainIdList.includes(_chainId) ? _chainId : ChainId.Mainnet\n\n    // #region token lucky drop\n    const [settings, setSettings] = useState<RedPacketSettings>()\n    // #endregion\n    // #region nft lucky drop\n    const [openNFTConfirmDialog, setOpenNFTConfirmDialog] = useState(false)\n    const [openSelectNFTDialog, setOpenSelectNFTDialog] = useState(false)\n    // #endregion\n\n    const onClose = useCallback(() => {\n        setStep(CreateRedPacketPageStep.NewRedPacketPage)\n        setSettings(undefined)\n        props.onClose()\n    }, [props, step])\n\n    const currentIdentity = useCurrentVisitingIdentity()\n    const lastRecognized = useLastRecognizedIdentity()\n    const linkedPersona = useCurrentLinkedPersona()\n    const senderName =\n        lastRecognized?.identifier?.userId ?? currentIdentity?.identifier?.userId ?? linkedPersona?.nickname\n\n    const onCreateOrSelect = useCallback(\n        async (payload: RedPacketJSONPayload) => {\n            if (payload.password === '') {\n                if (payload.contract_version === 1) {\n                    // eslint-disable-next-line no-alert\n                    alert('Unable to share a lucky drop without a password. But you can still withdraw the lucky drop.')\n                    // eslint-disable-next-line no-alert\n                    payload.password = prompt('Please enter the password of the lucky drop:', '') ?? ''\n                } else if (payload.contract_version > 1 && payload.contract_version < 4) {\n                    // just sign out the password if it is lost.\n                    payload.password = await Web3.signMessage('message', sha3(payload.sender.message) ?? '', {\n                        account,\n                    })\n                    payload.password = payload.password.slice(2)\n                }\n            }\n\n            senderName && (payload.sender.name = senderName)\n            openComposition(RedPacketMetaKey, reduceUselessPayloadInfo(payload))\n            Telemetry.captureEvent(EventType.Access, EventID.EntryAppLuckCreate)\n            ApplicationBoardModal.close()\n            onClose()\n        },\n        [chainId, senderName],\n    )\n\n    const onBack = useCallback(() => {\n        if (step === CreateRedPacketPageStep.ConfirmPage) setStep(CreateRedPacketPageStep.NewRedPacketPage)\n        if (step === CreateRedPacketPageStep.NewRedPacketPage) {\n            onClose()\n            if (props.source === PluginID.SmartPay) {\n                CrossIsolationMessages.events.smartPayDialogEvent.sendToAll({ open: true })\n            }\n        }\n    }, [step, props.source])\n    const onNext = useCallback(() => {\n        if (step === CreateRedPacketPageStep.NewRedPacketPage) setStep(CreateRedPacketPageStep.ConfirmPage)\n    }, [step])\n    const onDialogClose = useCallback(() => {\n        openSelectNFTDialog\n            ? setOpenSelectNFTDialog(false)\n            : openNFTConfirmDialog\n            ? setOpenNFTConfirmDialog(false)\n            : showHistory\n            ? setShowHistory(false)\n            : onBack()\n    }, [showHistory, openNFTConfirmDialog, openSelectNFTDialog, onBack])\n\n    const _onChange = useCallback((val: Omit<RedPacketSettings, 'password'>) => {\n        setSettings(val)\n    }, [])\n\n    const handleCreated = useCallback(\n        (payload: RedPacketJSONPayload) => {\n            onCreateOrSelect(payload)\n            setSettings(undefined)\n        },\n        [onCreateOrSelect],\n    )\n\n    const isCreateStep = step === CreateRedPacketPageStep.NewRedPacketPage\n    const title = showHistory\n        ? t.history()\n        : openSelectNFTDialog\n        ? t.nft_select_collection()\n        : openNFTConfirmDialog\n        ? t.confirm()\n        : isCreateStep\n        ? t.display_name()\n        : t.details()\n\n    // #region gas config\n    const { data: defaultGasPrice } = useGasPrice(NetworkPluginID.PLUGIN_EVM, { chainId })\n    const handleGasSettingChange = useCallback(\n        (gasConfig: GasConfig) => {\n            const editor = GasEditor.fromConfig(chainId, gasConfig)\n            setGasOption((config) => {\n                return editor.getGasConfig({\n                    gasPrice: defaultGasPrice,\n                    maxFeePerGas: defaultGasPrice,\n                    maxPriorityFeePerGas: defaultGasPrice,\n                    ...config,\n                })\n            })\n        },\n        [chainId, defaultGasPrice],\n    )\n    // #endregion\n\n    return (\n        <TabContext value={currentTab}>\n            <InjectedDialog\n                isOpenFromApplicationBoard={props.isOpenFromApplicationBoard}\n                open={props.open}\n                title={title}\n                titleTail={\n                    step === CreateRedPacketPageStep.NewRedPacketPage && !openNFTConfirmDialog && !showHistory ? (\n                        <Icons.History onClick={() => setShowHistory((history) => !history)} />\n                    ) : null\n                }\n                titleTabs={\n                    step === CreateRedPacketPageStep.NewRedPacketPage && !openNFTConfirmDialog ? (\n                        <MaskTabList variant=\"base\" onChange={onChange} aria-label=\"Redpacket\">\n                            <Tab label={t.erc20_tab_title()} value={tabs.tokens} />\n                            <Tab label={t.erc721_tab_title()} value={tabs.collectibles} />\n                        </MaskTabList>\n                    ) : null\n                }\n                networkTabs={\n                    step === CreateRedPacketPageStep.NewRedPacketPage &&\n                    !openNFTConfirmDialog &&\n                    !openSelectNFTDialog ? (\n                        <div className={classes.abstractTabWrapper}>\n                            <NetworkTab\n                                chains={chainIdList}\n                                hideArrowButton={currentTab === tabs.collectibles}\n                                pluginID={NetworkPluginID.PLUGIN_EVM}\n                                classes={{ arrowButton: classes.arrowButton }}\n                            />\n                        </div>\n                    ) : null\n                }\n                onClose={onDialogClose}\n                isOnBack={showHistory || step !== CreateRedPacketPageStep.NewRedPacketPage}\n                disableTitleBorder>\n                <DialogContent className={classes.dialogContent}>\n                    {step === CreateRedPacketPageStep.NewRedPacketPage ? (\n                        <>\n                            <div\n                                style={{\n                                    ...(showHistory ? { display: 'none' } : {}),\n                                    height: showHistory\n                                        ? 0\n                                        : currentTab === 'collectibles' && isNFTRedPacketLoaded\n                                        ? 'calc(100% + 84px)'\n                                        : 'auto',\n                                }}>\n                                <TabPanel value={tabs.tokens} style={{ padding: 0, height: 474 }}>\n                                    <RedPacketERC20Form\n                                        expectedChainId={chainId}\n                                        origin={settings}\n                                        onClose={onClose}\n                                        onNext={onNext}\n                                        onChange={_onChange}\n                                        gasOption={gasOption}\n                                        onGasOptionChange={handleGasSettingChange}\n                                    />\n                                </TabPanel>\n                                <TabPanel\n                                    value={tabs.collectibles}\n                                    style={{ padding: 0, height: openNFTConfirmDialog ? 564 : 474 }}>\n                                    <RedPacketERC721Form\n                                        openSelectNFTDialog={openSelectNFTDialog}\n                                        setOpenSelectNFTDialog={setOpenSelectNFTDialog}\n                                        setOpenNFTConfirmDialog={setOpenNFTConfirmDialog}\n                                        openNFTConfirmDialog={openNFTConfirmDialog}\n                                        onClose={onClose}\n                                        setIsNFTRedPacketLoaded={setIsNFTRedPacketLoaded}\n                                        gasOption={gasOption}\n                                        onGasOptionChange={handleGasSettingChange}\n                                    />\n                                </TabPanel>\n                            </div>\n                            {showHistory ? (\n                                <RedPacketPast tabs={tabs} onSelect={onCreateOrSelect} onClose={onClose} />\n                            ) : null}\n                        </>\n                    ) : null}\n\n                    {step === CreateRedPacketPageStep.ConfirmPage ? (\n                        <RedPacketConfirmDialog\n                            expectedChainId={chainId}\n                            onClose={onClose}\n                            onBack={onBack}\n                            onCreated={handleCreated}\n                            settings={settings}\n                            gasOption={gasOption}\n                            onGasOptionChange={handleGasSettingChange}\n                        />\n                    ) : null}\n                </DialogContent>\n            </InjectedDialog>\n        </TabContext>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport { CrossIsolationMessages, type PluginID } from '@masknet/shared-base'\n\nimport RedPacketDialog from './RedPacketDialog.js'\nimport { DefaultWeb3ContextProvider } from '@masknet/web3-hooks-base'\n\nexport function RedPacketInjection() {\n    const [open, setOpen] = useState(false)\n    const [source, setSource] = useState<PluginID>()\n\n    useEffect(() => {\n        return CrossIsolationMessages.events.redpacketDialogEvent.on(({ open, source: pluginId }) => {\n            setOpen(open)\n            setSource(pluginId)\n        })\n    }, [])\n\n    if (!open) return null\n    return (\n        <DefaultWeb3ContextProvider>\n            <RedPacketDialog open onClose={() => setOpen(false)} source={source} />\n        </DefaultWeb3ContextProvider>\n    )\n}\n","import Web3Accounts, { type Accounts } from 'web3-eth-accounts'\n\nexport function signMessage(message: string, privateKey: string) {\n    const Accounts_ = Web3Accounts as unknown as typeof Accounts\n    const accounts = new Accounts_()\n    return accounts.sign(message, privateKey)\n}\n","import { useAsyncFn } from 'react-use'\nimport { sha3 } from 'web3-utils'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport type { HappyRedPacketV1 } from '@masknet/web3-contracts/types/HappyRedPacketV1.js'\nimport type { HappyRedPacketV4 } from '@masknet/web3-contracts/types/HappyRedPacketV4.js'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { type ChainId, ContractTransaction } from '@masknet/web3-shared-evm'\nimport { useRedPacketContract } from './useRedPacketContract.js'\n\nexport function useClaimCallback(\n    version: number,\n    from: string,\n    id: string,\n    password?: string,\n    expectedChainId?: ChainId,\n) {\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: expectedChainId })\n    const redPacketContract = useRedPacketContract(chainId, version)\n    return useAsyncFn(async () => {\n        if (!redPacketContract || !id || !password) return\n\n        const config = {\n            from,\n        }\n        // note: despite the method params type of V1 and V2 is the same,\n        // but it is more understandable to declare respectively\n        const contractTransaction = new ContractTransaction(redPacketContract)\n        const tx =\n            version === 4\n                ? await contractTransaction.fillAll(\n                      (redPacketContract as HappyRedPacketV4).methods.claim(id, password, from),\n                      config,\n                  )\n                : await contractTransaction.fillAll(\n                      (redPacketContract as HappyRedPacketV1).methods.claim(id, password, from, sha3(from)!),\n                      config,\n                  )\n\n        return Web3.sendTransaction(tx, {\n            chainId,\n        })\n    }, [id, password, from, chainId, redPacketContract, version])\n}\n","import type { MouseEventHandler } from 'react'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { ChainId } from '@masknet/web3-shared-evm'\nimport { ActionButton, makeStyles } from '@masknet/theme'\nimport { Box, useTheme } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { ChainBoundary, WalletConnectedBoundary, SelectProviderModal } from '@masknet/shared'\nimport { useRedPacketTrans } from '../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        footer: {\n            width: '100%',\n            display: 'flex',\n            gap: theme.spacing(2),\n            justifyContent: 'center',\n            '& button': {\n                flexBasis: 'auto',\n            },\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\n                flexDirection: 'column',\n                gap: theme.spacing(1),\n            },\n        },\n    }\n})\n\ninterface OperationFooterProps {\n    chainId?: ChainId\n    canClaim: boolean\n    canRefund: boolean\n    isClaiming: boolean\n    isRefunding: boolean\n    onShare?(): void\n    onClaimOrRefund: () => void | Promise<void>\n}\nexport function OperationFooter({\n    chainId,\n    canClaim,\n    canRefund,\n    isClaiming,\n    isRefunding,\n    onShare,\n    onClaimOrRefund,\n}: OperationFooterProps) {\n    const { classes } = useStyles()\n    const t = useRedPacketTrans()\n    const { account, chainId: currentChainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId })\n    const theme = useTheme()\n\n    function getObtainButton(onClick: MouseEventHandler<HTMLButtonElement>) {\n        if (!canClaim && !canRefund) return null\n\n        if (!account) {\n            return (\n                <ActionButton fullWidth onClick={() => SelectProviderModal.open()} variant=\"roundedDark\">\n                    {t.plugin_wallet_connect_a_wallet()}\n                </ActionButton>\n            )\n        }\n        if (!currentChainId) {\n            return (\n                <ActionButton disabled fullWidth variant=\"roundedDark\">\n                    {t.plugin_wallet_invalid_network()}\n                </ActionButton>\n            )\n        }\n        const isLoading = isClaiming || isRefunding\n\n        return (\n            <ActionButton\n                sx={{\n                    backgroundColor: theme.palette.maskColor.dark,\n                    width: '100%',\n                    color: 'white',\n                    '&:hover': {\n                        backgroundColor: theme.palette.maskColor.dark,\n                    },\n                }}\n                variant=\"roundedDark\"\n                fullWidth\n                loading={isLoading}\n                disabled={isLoading}\n                onClick={onClick}>\n                {canClaim ? (isClaiming ? t.claiming() : t.claim()) : isRefunding ? t.refunding() : t.refund()}\n            </ActionButton>\n        )\n    }\n\n    return (\n        <Box style={{ flex: 1, padding: 12 }}>\n            <Box className={classes.footer}>\n                {canRefund ? null : (\n                    <ActionButton\n                        fullWidth\n                        variant=\"roundedDark\"\n                        startIcon={<Icons.Shared size={18} />}\n                        onClick={onShare}>\n                        {t.share()}\n                    </ActionButton>\n                )}\n\n                {canClaim || canRefund ? (\n                    <ChainBoundary\n                        expectedPluginID={NetworkPluginID.PLUGIN_EVM}\n                        expectedChainId={(chainId as ChainId) ?? ChainId.Mainnet}\n                        ActionButtonPromiseProps={{ variant: 'roundedDark' }}>\n                        <WalletConnectedBoundary\n                            hideRiskWarningConfirmed\n                            expectedChainId={chainId ?? ChainId.Mainnet}\n                            startIcon={<Icons.Wallet size={18} />}\n                            ActionButtonProps={{ variant: 'roundedDark' }}>\n                            {getObtainButton(onClaimOrRefund)}\n                        </WalletConnectedBoundary>\n                    </ChainBoundary>\n                ) : null}\n            </Box>\n        </Box>\n    )\n}\n","import { usePostLink } from '@masknet/plugin-infra/content-script'\nimport { share } from '@masknet/plugin-infra/content-script/context'\nimport { TransactionConfirmModal } from '@masknet/shared'\nimport { NetworkPluginID, Sniffings } from '@masknet/shared-base'\nimport { LoadingBase, makeStyles, parseColor } from '@masknet/theme'\nimport type { HappyRedPacketV4 } from '@masknet/web3-contracts/types/HappyRedPacketV4.js'\nimport { useChainContext, useNetwork, useNetworkContext } from '@masknet/web3-hooks-base'\nimport { ChainResolver } from '@masknet/web3-providers'\nimport { RedPacketStatus, type RedPacketJSONPayload } from '@masknet/web3-providers/types'\nimport { TokenType, formatBalance, isZero } from '@masknet/web3-shared-base'\nimport { ChainId, signMessage } from '@masknet/web3-shared-evm'\nimport { Box, Card, Typography } from '@mui/material'\nimport { Stack } from '@mui/system'\nimport { useCallback, useMemo } from 'react'\nimport { useRedPacketTrans } from '../../locales/index.js'\nimport { useAvailabilityComputed } from '../hooks/useAvailabilityComputed.js'\nimport { useClaimCallback } from '../hooks/useClaimCallback.js'\nimport { useRedPacketContract } from '../hooks/useRedPacketContract.js'\nimport { useRefundCallback } from '../hooks/useRefundCallback.js'\nimport { OperationFooter } from './OperationFooter.js'\n\nconst useStyles = makeStyles<{ outdated: boolean }>()((theme, { outdated }) => {\n    return {\n        root: {\n            borderRadius: theme.spacing(2),\n            padding: theme.spacing(1.5, 2),\n            position: 'relative',\n            display: 'flex',\n            backgroundColor: 'transparent',\n            color: theme.palette.common.white,\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n            height: 335,\n            margin: 'auto',\n            marginBottom: outdated ? '12px' : 'auto',\n            boxSizing: 'border-box',\n            backgroundImage: `url(${new URL('../assets/cover.png', import.meta.url)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover',\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\n                padding: theme.spacing(1, 1.5),\n                height: 202,\n            },\n            width: 'calc(100% - 32px)',\n        },\n\n        header: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'flex-start',\n        },\n        content: {\n            display: 'flex',\n            flex: 1,\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'space-between',\n        },\n        bottomContent: {\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'space-between',\n            flexWrap: 'wrap',\n        },\n        myStatus: {\n            fontSize: 12,\n            fontWeight: 600,\n            lineHeight: 1.8,\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\n                fontSize: 14,\n                left: 12,\n                bottom: 8,\n            },\n        },\n        from: {\n            fontSize: '14px',\n            color: theme.palette.common.white,\n            alignSelf: 'end',\n            fontWeight: 500,\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\n                fontSize: 14,\n                right: 12,\n                bottom: 8,\n            },\n        },\n        label: {\n            width: 76,\n            height: 27,\n            display: 'flex',\n            justifyContent: 'center',\n            fontSize: 12,\n            alignItems: 'center',\n            borderRadius: theme.spacing(1),\n            backgroundColor: parseColor(theme.palette.common.black).setAlpha(0.5).toString(),\n            textTransform: 'capitalize',\n            position: 'absolute',\n            right: 12,\n            top: 12,\n        },\n        words: {\n            display: '-webkit-box',\n            WebkitLineClamp: 2,\n            WebkitBoxOrient: 'vertical',\n            color: theme.palette.common.white,\n            fontSize: 24,\n            fontWeight: 700,\n            wordBreak: 'break-all',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n            width: '60%',\n            minWidth: 300,\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\n                fontSize: 14,\n            },\n        },\n        messageBox: {\n            width: '100%',\n        },\n        tokenLabel: {\n            width: 48,\n            height: 48,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n        },\n    }\n})\n\ninterface RedPacketProps {\n    payload: RedPacketJSONPayload\n}\n\nexport function RedPacket(props: RedPacketProps) {\n    const { payload } = props\n\n    const t = useRedPacketTrans()\n    const token = payload.token\n    const { pluginID } = useNetworkContext()\n    const payloadChainId = token?.chainId ?? ChainResolver.chainId(payload.network ?? '') ?? ChainId.Mainnet\n    const { account } = useChainContext<NetworkPluginID.PLUGIN_EVM>({\n        chainId: payloadChainId,\n        account: pluginID === NetworkPluginID.PLUGIN_EVM ? undefined : '',\n    })\n\n    // #region token detailed\n    const {\n        value: availability,\n        computed: availabilityComputed,\n        retry: revalidateAvailability,\n    } = useAvailabilityComputed(account ?? payload.contract_address, payload)\n\n    // #endregion\n\n    const { canClaim, canRefund, listOfStatus } = availabilityComputed\n\n    // #region remote controlled transaction dialog\n    const postLink = usePostLink()\n\n    const [{ loading: isClaiming, value: claimTxHash }, claimCallback] = useClaimCallback(\n        payload.contract_version,\n        account,\n        payload.rpid,\n        payload.contract_version > 3 ? signMessage(account, payload.password).signature : payload.password,\n        payloadChainId,\n    )\n\n    // TODO payload.chainId is undefined on production mode\n    const network = useNetwork(pluginID, payload.chainId || payload.token?.chainId)\n    const shareText = useMemo(() => {\n        const isOnTwitter = Sniffings.is_twitter_page\n        const isOnFacebook = Sniffings.is_facebook_page\n        const shareTextOption = {\n            sender: payload.sender.name,\n            payload: postLink.toString(),\n            network: network?.name ?? 'Mainnet',\n            account: isOnTwitter ? t.twitter_account() : t.facebook_account(),\n            interpolation: { escapeValue: false },\n        }\n        if (listOfStatus.includes(RedPacketStatus.claimed) || claimTxHash) {\n            return isOnTwitter || isOnFacebook\n                ? t.share_message_official_account(shareTextOption)\n                : t.share_message_not_twitter(shareTextOption)\n        }\n\n        return isOnTwitter || isOnFacebook\n            ? t.share_unclaimed_message_official_account(shareTextOption)\n            : t.share_unclaimed_message_not_twitter(shareTextOption)\n    }, [payload, postLink, claimTxHash, listOfStatus, t, network?.name])\n\n    const [{ loading: isRefunding }, _isRefunded, refundCallback] = useRefundCallback(\n        payload.contract_version,\n        account,\n        payload.rpid,\n        payloadChainId,\n    )\n\n    const redPacketContract = useRedPacketContract(payloadChainId, payload.contract_version) as HappyRedPacketV4\n    const checkResult = useCallback(async () => {\n        const data = await redPacketContract.methods.check_availability(payload.rpid).call({\n            // check availability is ok w/o account\n            from: account,\n        })\n        if (isZero(data.claimed_amount)) return\n        TransactionConfirmModal.open({\n            shareText,\n            amount: formatBalance(data.claimed_amount, token?.decimals, 2),\n            token,\n            tokenType: TokenType.Fungible,\n            messageTextForNFT: t.claim_nft_successful({\n                name: 'NFT',\n            }),\n            messageTextForFT: t.claim_token_successful({\n                amount: formatBalance(data.claimed_amount, token?.decimals, 2),\n                name: `$${token?.symbol}`,\n            }),\n            title: t.lucky_drop(),\n            share,\n        })\n    }, [JSON.stringify(token), redPacketContract, payload.rpid, account])\n\n    const onClaimOrRefund = useCallback(async () => {\n        let hash: string | undefined\n        if (canClaim) {\n            hash = await claimCallback()\n            checkResult()\n        } else if (canRefund) {\n            hash = await refundCallback()\n        }\n        if (typeof hash === 'string') {\n            revalidateAvailability()\n        }\n    }, [canClaim, canRefund, claimCallback])\n\n    const myStatus = useMemo(() => {\n        if (!availability) return ''\n        if (token && listOfStatus.includes(RedPacketStatus.claimed))\n            return t.description_claimed(\n                availability.claimed_amount\n                    ? {\n                          amount: formatBalance(availability.claimed_amount, token.decimals, 2),\n                          symbol: token.symbol,\n                      }\n                    : { amount: '-', symbol: '-' },\n            )\n        return ''\n    }, [listOfStatus, t, token])\n\n    const subtitle = useMemo(() => {\n        if (!availability || !token) return\n\n        if (listOfStatus.includes(RedPacketStatus.expired) && canRefund)\n            return t.description_refund({\n                balance: formatBalance(availability.balance, token.decimals, 2),\n                symbol: token.symbol ?? '-',\n            })\n        if (listOfStatus.includes(RedPacketStatus.refunded)) return t.description_refunded()\n        if (listOfStatus.includes(RedPacketStatus.expired)) return t.description_expired()\n        if (listOfStatus.includes(RedPacketStatus.empty)) return t.description_empty()\n        if (!payload.password) return t.description_broken()\n        const i18nParams = {\n            total: formatBalance(payload.total, token.decimals, 2),\n            symbol: token.symbol ?? '-',\n            count: payload.shares.toString() ?? '-',\n        }\n        return payload.shares > 1 ? t.description_failover_other(i18nParams) : t.description_failover_one(i18nParams)\n    }, [availability, canRefund, token, t, payload, listOfStatus])\n\n    const handleShare = useCallback(() => {\n        if (shareText) share?.(shareText)\n    }, [shareText])\n\n    const outdated =\n        listOfStatus.includes(RedPacketStatus.empty) || (!canRefund && listOfStatus.includes(RedPacketStatus.expired))\n\n    const { classes } = useStyles({ outdated })\n\n    // the red packet can fetch without account\n    if (!availability || !token)\n        return (\n            <Box\n                flex={1}\n                display=\"flex\"\n                flexDirection=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                gap={1}\n                padding={1}\n                minHeight={148}>\n                <LoadingBase />\n                <Typography>{t.loading()}</Typography>\n            </Box>\n        )\n\n    return (\n        <>\n            <Card className={classes.root} component=\"article\" elevation={0}>\n                <img\n                    src={new URL('../assets/tokenLabel.png', import.meta.url).toString()}\n                    className={classes.tokenLabel}\n                />\n                <div className={classes.header}>\n                    {/* it might be fontSize: 12 on twitter based on theme? */}\n                    {listOfStatus.length ? (\n                        <Typography className={classes.label} variant=\"body2\">\n                            {resolveRedPacketStatus(listOfStatus)}\n                        </Typography>\n                    ) : null}\n                </div>\n                <div className={classes.content}>\n                    <Stack />\n                    <div className={classes.messageBox}>\n                        <Typography className={classes.words} variant=\"h6\">\n                            {payload.sender.message}\n                        </Typography>\n                    </div>\n                    <div className={classes.bottomContent}>\n                        <div>\n                            <Typography variant=\"body2\" className={classes.myStatus}>\n                                {subtitle}\n                            </Typography>\n                            <Typography className={classes.myStatus} variant=\"body1\">\n                                {myStatus}\n                            </Typography>\n                        </div>\n                        <Typography className={classes.from} variant=\"body1\">\n                            {t.from({ name: payload.sender.name || '-' })}\n                        </Typography>\n                    </div>\n                </div>\n            </Card>\n            {outdated ? null : (\n                <OperationFooter\n                    chainId={payloadChainId}\n                    canClaim={canClaim}\n                    canRefund={canRefund}\n                    isClaiming={isClaiming}\n                    isRefunding={isRefunding}\n                    onShare={handleShare}\n                    onClaimOrRefund={onClaimOrRefund}\n                />\n            )}\n        </>\n    )\n}\n\nfunction resolveRedPacketStatus(listOfStatus: RedPacketStatus[]) {\n    if (listOfStatus.includes(RedPacketStatus.claimed)) return 'Claimed'\n    if (listOfStatus.includes(RedPacketStatus.refunded)) return 'Refunded'\n    if (listOfStatus.includes(RedPacketStatus.expired)) return 'Expired'\n    if (listOfStatus.includes(RedPacketStatus.empty)) return 'Empty'\n    return ''\n}\n","import { useEffect } from 'react'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { usePostLink } from '@masknet/plugin-infra/content-script'\nimport { RedPacket } from './RedPacket/index.js'\nimport { RedPacketRPC } from '../messages.js'\nimport type { RedPacketJSONPayload, RedPacketRecord } from '@masknet/web3-providers/types'\n\ninterface RedPacketInPostProps {\n    payload: RedPacketJSONPayload\n}\n\nexport function RedPacketInPost(props: RedPacketInPostProps) {\n    const { payload } = props\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const fromUrl = usePostLink()\n    useEffect(() => {\n        if (!fromUrl) return\n        if (!payload.txid && payload.contract_version !== 1) return\n        const record: RedPacketRecord = {\n            id: payload.contract_version === 1 ? payload.rpid : payload.txid,\n            from: fromUrl.toString(),\n            password: payload.password,\n            contract_version: payload.contract_version,\n        }\n        RedPacketRPC.addRedPacket(record, chainId)\n    }, [fromUrl, chainId])\n    // #endregion\n\n    return <RedPacket payload={payload} />\n}\n","import { useAsyncFn } from 'react-use'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { ContractTransaction } from '@masknet/web3-shared-evm'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { toFixed } from '@masknet/web3-shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { useNftRedPacketContract } from './useNftRedPacketContract.js'\n\nconst EXTRA_GAS_PER_NFT = 335\n\nexport function useClaimNftRedpacketCallback(id: string, totalAmount: number | undefined, signedMsg: string) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const nftRedPacketContract = useNftRedPacketContract(chainId)\n    return useAsyncFn(async () => {\n        if (!nftRedPacketContract || !id || !signedMsg || !account || !totalAmount) return\n\n        const transaction = nftRedPacketContract.methods.claim(id, signedMsg, account)\n        const tx = await new ContractTransaction(nftRedPacketContract).fillAll(transaction, {\n            from: account,\n            gas: toFixed((await transaction.estimateGas({ from: account })) + EXTRA_GAS_PER_NFT * totalAmount),\n            chainId,\n        })\n        return Web3.sendTransaction(tx, { chainId })\n    }, [id, signedMsg, account, chainId, totalAmount])\n}\n","import { useCallback, useEffect, useMemo } from 'react'\nimport { makeStyles, ActionButton, parseColor, ShadowRootTooltip, useDetectOverflow } from '@masknet/theme'\nimport { signMessage, type ChainId } from '@masknet/web3-shared-evm'\nimport { type RedPacketNftJSONPayload } from '@masknet/web3-providers/types'\nimport { Card, Typography, Button, Box } from '@mui/material'\nimport {\n    WalletConnectedBoundary,\n    ChainBoundary,\n    AssetPreviewer,\n    NFTFallbackImage,\n    TransactionConfirmModal,\n    LoadingStatus,\n    ReloadStatus,\n} from '@masknet/shared'\nimport {\n    useChainContext,\n    useNetwork,\n    useNetworkContext,\n    useNonFungibleAsset,\n    useWeb3Hub,\n} from '@masknet/web3-hooks-base'\nimport { TokenType } from '@masknet/web3-shared-base'\nimport { usePostLink } from '@masknet/plugin-infra/content-script'\nimport { share } from '@masknet/plugin-infra/content-script/context'\nimport { NetworkPluginID, CrossIsolationMessages, Sniffings } from '@masknet/shared-base'\nimport { Icons } from '@masknet/icons'\nimport { Stack } from '@mui/system'\nimport { useRedPacketTrans } from '../locales/index.js'\nimport { useClaimNftRedpacketCallback } from './hooks/useClaimNftRedpacketCallback.js'\nimport { useAvailabilityNftRedPacket } from './hooks/useAvailabilityNftRedPacket.js'\nimport { useNftRedPacketContract } from './hooks/useNftRedPacketContract.js'\n\nconst useStyles = makeStyles<{ claimed: boolean; outdated: boolean }>()((theme, { claimed, outdated }) => ({\n    root: {\n        position: 'relative',\n        width: '100%',\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        borderRadius: theme.spacing(2),\n        padding: theme.spacing(1),\n        background: 'transparent',\n        justifyContent: 'space-between',\n        position: 'relative',\n        color: theme.palette.common.white,\n        boxSizing: 'border-box',\n        backgroundImage: claimed\n            ? `url(${new URL('./assets/nftClaimedCover.png', import.meta.url)})`\n            : `url(${new URL('./assets/cover.png', import.meta.url)})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        width: 'calc(100% - 32px)',\n        margin: 'auto',\n        marginBottom: outdated ? '12px' : 'auto',\n        height: 335,\n    },\n    remain: {\n        fontSize: 12,\n        fontWeight: 600,\n        color: theme.palette.common.white,\n    },\n    button: {\n        backgroundColor: theme.palette.maskColor.dark,\n        color: theme.palette.common.white,\n        '&:hover': {\n            backgroundColor: theme.palette.maskColor.dark,\n        },\n        margin: '0 !important',\n    },\n    footer: {\n        display: 'flex',\n        justifyContent: 'space-between !important',\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        paddingBottom: theme.spacing(1),\n    },\n    buttonWrapper: {\n        marginTop: 0,\n        display: 'flex',\n    },\n    claimedTokenWrapper: {\n        position: 'absolute',\n        top: 80,\n        right: 'clamp(10px, 5.6%, 30px)',\n        borderRadius: 9,\n        cursor: 'pointer',\n    },\n    tokenImageWrapper: {\n        display: 'flex',\n        overflow: 'hidden',\n        alignItems: 'center',\n        height: 126,\n        width: 126,\n        borderRadius: 8,\n        transform: 'RedPacketTransY(6px)',\n        '& > div': {\n            display: 'flex',\n            justifyContent: 'center',\n            overflow: 'hidden',\n        },\n    },\n    claimedText: {\n        fontSize: 12,\n        fontWeight: 600,\n    },\n    badge: {\n        width: 76,\n        height: 27,\n        display: 'flex',\n        color: theme.palette.common.white,\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        backgroundColor: parseColor(theme.palette.common.black).setAlpha(0.5).toString(),\n        borderRadius: 8,\n    },\n    badgeText: {\n        fontSize: 12,\n    },\n    imgWrapper: {\n        maxWidth: 180,\n    },\n    fallbackImage: {\n        height: 160,\n        width: 120,\n    },\n    description: {\n        background: theme.palette.maskColor.primary,\n        alignSelf: 'stretch',\n        borderRadius: '0 0 8px 8px',\n    },\n    name: {\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        width: 126,\n        transform: 'RedPacketTransY(3px)',\n        fontSize: 13,\n        color: theme.palette.common.white,\n        lineHeight: '36px',\n        minHeight: '1em',\n        textIndent: '8px',\n    },\n    hidden: {\n        visibility: 'hidden',\n    },\n    tokenLabel: {\n        width: 48,\n        height: 48,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    messageBox: {\n        width: '100%',\n    },\n    words: {\n        display: '-webkit-box',\n        WebkitLineClamp: 2,\n        WebkitBoxOrient: 'vertical',\n        color: theme.palette.common.white,\n        wordBreak: 'break-all',\n        fontSize: 24,\n        fontWeight: 700,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        width: '60%',\n        minWidth: 300,\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\n            fontSize: 14,\n        },\n    },\n    from: {\n        fontSize: '14px',\n        color: theme.palette.common.white,\n        alignSelf: 'end',\n        fontWeight: 500,\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\n            fontSize: 14,\n            right: 12,\n            bottom: 8,\n        },\n    },\n    fallbackImageWrapper: {\n        width: '100%',\n        height: 126,\n        background: theme.palette.common.white,\n    },\n}))\ninterface RedPacketNftProps {\n    payload: RedPacketNftJSONPayload\n}\n\nexport function RedPacketNft({ payload }: RedPacketNftProps) {\n    const t = useRedPacketTrans()\n\n    const { pluginID } = useNetworkContext()\n    const { account } = useChainContext<NetworkPluginID.PLUGIN_EVM>(\n        pluginID === NetworkPluginID.PLUGIN_EVM ? {} : { account: '' },\n    )\n    const {\n        value: availability,\n        loading,\n        retry: retryAvailability,\n        error: availabilityError,\n    } = useAvailabilityNftRedPacket(payload.id, account, payload.chainId)\n\n    const [{ loading: isClaiming }, claimCallback] = useClaimNftRedpacketCallback(\n        payload.id,\n        availability?.totalAmount,\n        signMessage(account, payload.privateKey).signature ?? '',\n    )\n    const [showTooltip, textRef] = useDetectOverflow()\n\n    useEffect(() => {\n        retryAvailability()\n    }, [account])\n    const network = useNetwork(pluginID, payload.chainId)\n\n    const outdated = !!(availability?.isClaimedAll || availability?.isCompleted || availability?.expired)\n    const { classes, cx } = useStyles({ claimed: !!availability?.isClaimed, outdated })\n    // #region on share\n    const postLink = usePostLink()\n    const shareText = useMemo(() => {\n        const isOnTwitter = Sniffings.is_twitter_page\n        const isOnFacebook = Sniffings.is_facebook_page\n        const options = {\n            sender: payload.senderName,\n            payload: postLink.toString(),\n            network: network?.name || '',\n            account_promote: t.account_promote({\n                context: isOnTwitter ? 'twitter' : isOnFacebook ? 'facebook' : 'default',\n            }),\n            interpolation: { escapeValue: false },\n        } as const\n        if (availability?.isClaimed) {\n            return t.nft_share_claimed_message(options)\n        }\n        return t.nft_share_foreshow_message(options)\n    }, [availability?.isClaimed, t, network?.name])\n\n    const onShare = useCallback(() => {\n        if (shareText) share?.(shareText)\n    }, [shareText])\n    // #endregion\n\n    const openNFTDialog = useCallback(() => {\n        if (!payload.chainId || !pluginID || !availability?.claimed_id || !availability?.token_address) return\n        CrossIsolationMessages.events.nonFungibleTokenDialogEvent.sendToLocal({\n            open: true,\n            chainId: payload.chainId,\n            pluginID,\n            tokenId: availability.claimed_id,\n            tokenAddress: availability.token_address,\n        })\n    }, [pluginID, payload.chainId, availability?.claimed_id, availability?.token_address])\n\n    const { data: asset, isLoading: loadingAsset } = useNonFungibleAsset<'all'>(\n        NetworkPluginID.PLUGIN_EVM,\n        payload.contractAddress,\n        availability?.claimed_id,\n        {\n            chainId: payload.chainId,\n        },\n    )\n    const Hub = useWeb3Hub(pluginID, {\n        account,\n    })\n    const nftRedPacketContract = useNftRedPacketContract(payload.chainId)\n    const checkResult = useCallback(async () => {\n        if (!nftRedPacketContract) return\n        const availability = await nftRedPacketContract.methods.check_availability(payload.id).call({\n            // check availability is ok w/o account\n            from: account,\n        })\n        if (availability.claimed_id === '0') return\n\n        const isOnTwitter = Sniffings.is_twitter_page\n        const isOnFacebook = Sniffings.is_facebook_page\n        const options = {\n            sender: payload.senderName,\n            payload: postLink.toString(),\n            network: network?.name || '',\n            account_promote: t.account_promote({\n                context: isOnTwitter ? 'twitter' : isOnFacebook ? 'facebook' : 'default',\n            }),\n            interpolation: { escapeValue: false },\n        } as const\n        const shareText = t.nft_share_foreshow_message(options)\n        const token = await Hub.getNonFungibleAsset(payload.contractAddress, availability.claimed_id)\n\n        TransactionConfirmModal.open({\n            shareText,\n            amount: '1',\n            nonFungibleTokenId: availability.claimed_id,\n            nonFungibleTokenAddress: payload.contractAddress,\n            tokenType: TokenType.NonFungible,\n            messageTextForNFT: t.claim_nft_successful({\n                name: token?.contract?.name || 'NFT',\n            }),\n            messageTextForFT: t.claim_token_successful({\n                amount: '1',\n                name: '',\n            }),\n            title: t.lucky_drop(),\n            share,\n        })\n    }, [nftRedPacketContract, payload.id, account, Hub])\n\n    const claim = useCallback(async () => {\n        const hash = await claimCallback()\n        await checkResult()\n        if (typeof hash === 'string') {\n            retryAvailability()\n        }\n    }, [claimCallback, retryAvailability])\n\n    if (availabilityError) return <ReloadStatus message={t.go_wrong()} onRetry={retryAvailability} />\n\n    if (!availability || loading) return <LoadingStatus minHeight={148} iconSize={24} />\n\n    return (\n        <div className={classes.root}>\n            <Card className={classes.card} component=\"article\" elevation={0}>\n                <img\n                    src={new URL('./assets/nftLabel.png', import.meta.url).toString()}\n                    className={classes.tokenLabel}\n                />\n                <Stack />\n\n                <div className={classes.messageBox}>\n                    <ShadowRootTooltip title={payload.message}>\n                        <Typography className={classes.words} variant=\"h6\">\n                            {payload.message}\n                        </Typography>\n                    </ShadowRootTooltip>\n                </div>\n                <ShadowRootTooltip\n                    title={showTooltip ? `${payload.contractName} #${availability.claimed_id}` : undefined}\n                    placement=\"top\"\n                    disableInteractive\n                    arrow\n                    PopperProps={{\n                        disablePortal: true,\n                    }}>\n                    <Box className={cx(classes.claimedTokenWrapper, !availability.isClaimed ? classes.hidden : '')}>\n                        <Box className={classes.tokenImageWrapper} onClick={openNFTDialog}>\n                            {loadingAsset ? null : (\n                                <AssetPreviewer\n                                    url={asset?.metadata?.imageURL || asset?.metadata?.mediaURL}\n                                    classes={{\n                                        root: classes.imgWrapper,\n                                        fallbackImage: classes.fallbackImage,\n                                    }}\n                                    fallbackImage={\n                                        <div className={classes.fallbackImageWrapper}>{NFTFallbackImage}</div>\n                                    }\n                                />\n                            )}\n                        </Box>\n\n                        <div className={classes.description}>\n                            <Typography className={classes.name} color=\"textPrimary\" variant=\"body2\" ref={textRef}>\n                                {`${payload.contractName} #${availability.claimed_id}`}\n                            </Typography>\n                        </div>\n                    </Box>\n                </ShadowRootTooltip>\n\n                <div className={classes.footer}>\n                    {availability.isClaimed ? (\n                        <Typography className={classes.claimedText}>\n                            {t.got_nft({ name: payload.contractName || 'NFT' })}\n                        </Typography>\n                    ) : (\n                        <Typography className={classes.remain}>\n                            {t.claimed({ amount: `${availability.claimedAmount}/${availability.totalAmount}` })}\n                        </Typography>\n                    )}\n                    <Typography variant=\"body1\" className={classes.from}>\n                        {t.from({ name: payload.senderName || '-' })}\n                    </Typography>\n                </div>\n\n                {availability.isClaimed ? (\n                    <div className={classes.badge}>\n                        <Typography variant=\"body2\" className={classes.badgeText}>\n                            {t.claimed({ amount: '' })}\n                        </Typography>\n                    </div>\n                ) : availability.isEnd ? (\n                    <div className={classes.badge}>\n                        <Typography variant=\"body2\" className={classes.badgeText}>\n                            {availability.expired ? t.expired() : t.completed()}\n                        </Typography>\n                    </div>\n                ) : null}\n            </Card>\n            {outdated ? null : (\n                <OperationFooter\n                    chainId={payload.chainId}\n                    isClaiming={isClaiming}\n                    claimed={availability.isClaimed}\n                    onShare={onShare}\n                    claim={claim}\n                />\n            )}\n        </div>\n    )\n}\n\ninterface OperationFooterProps {\n    claimed: boolean\n    isClaiming: boolean\n    onShare(): void\n    claim(): Promise<void>\n    chainId: ChainId\n}\n\nfunction OperationFooter({ claimed, onShare, chainId, claim, isClaiming }: OperationFooterProps) {\n    const { classes } = useStyles({ claimed, outdated: false })\n    const t = useRedPacketTrans()\n\n    return (\n        <Box className={classes.buttonWrapper}>\n            <Box sx={{ flex: 1, padding: 1.5 }}>\n                <Button\n                    variant=\"roundedDark\"\n                    startIcon={<Icons.Shared size={18} />}\n                    className={classes.button}\n                    fullWidth\n                    onClick={onShare}>\n                    {t.share()}\n                </Button>\n            </Box>\n            {claimed ? null : (\n                <Box sx={{ flex: 1, padding: 1.5 }}>\n                    <ChainBoundary\n                        expectedPluginID={NetworkPluginID.PLUGIN_EVM}\n                        ActionButtonPromiseProps={{ variant: 'roundedDark' }}\n                        expectedChainId={chainId}>\n                        <WalletConnectedBoundary\n                            expectedChainId={chainId}\n                            startIcon={<Icons.Wallet size={18} />}\n                            classes={{\n                                connectWallet: classes.button,\n                            }}\n                            ActionButtonProps={{ variant: 'roundedDark' }}>\n                            <ActionButton\n                                variant=\"roundedDark\"\n                                loading={isClaiming}\n                                disabled={isClaiming}\n                                onClick={claim}\n                                className={classes.button}\n                                fullWidth>\n                                {isClaiming ? t.claiming() : t.claim()}\n                            </ActionButton>\n                        </WalletConnectedBoundary>\n                    </ChainBoundary>\n                </Box>\n            )}\n        </Box>\n    )\n}\n","import { useEffect } from 'react'\nimport { RedPacketRPC } from '../messages.js'\nimport type { RedPacketNftJSONPayload } from '@masknet/web3-providers/types'\nimport { DefaultWeb3ContextProvider } from '@masknet/web3-hooks-base'\nimport { RedPacketNft } from './RedPacketNft.js'\nimport { ThemeProvider } from '@mui/material'\nimport { MaskLightTheme } from '@masknet/theme'\n\ninterface RedPacketNftInPostProps {\n    payload: RedPacketNftJSONPayload\n}\n\nexport function RedPacketNftInPost({ payload }: RedPacketNftInPostProps) {\n    useEffect(() => {\n        RedPacketRPC.updateRedPacketNft({\n            id: payload.txid,\n            type: 'red-packet-nft',\n            password: payload.privateKey,\n            contract_version: payload.contractVersion,\n        })\n    }, [payload])\n    return (\n        <DefaultWeb3ContextProvider value={{ chainId: payload.chainId }}>\n            <ThemeProvider theme={MaskLightTheme}>\n                <RedPacketNft payload={payload} />\n            </ThemeProvider>\n        </DefaultWeb3ContextProvider>\n    )\n}\n","import { CrossIsolationMessages } from '@masknet/shared-base'\n\nexport function openDialog() {\n    CrossIsolationMessages.events.redpacketDialogEvent.sendToLocal({ open: true })\n}\n","import { type Plugin, usePluginWrapper } from '@masknet/plugin-infra/content-script'\nimport { Trans } from 'react-i18next'\nimport { Icons } from '@masknet/icons'\nimport { PluginID } from '@masknet/shared-base'\nimport { ApplicationEntry } from '@masknet/shared'\nimport type { RedPacketJSONPayload, RedPacketNftJSONPayload } from '@masknet/web3-providers/types'\nimport { Typography } from '@mui/material'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventID, EventType } from '@masknet/web3-telemetry/types'\nimport { base } from '../base.js'\nimport { RedPacketMetaKey, RedPacketNftMetaKey } from '../constants.js'\nimport {\n    RedPacketMetadataReader,\n    RedPacketNftMetadataReader,\n    renderWithRedPacketMetadata,\n    renderWithRedPacketNftMetadata,\n} from './helpers.js'\nimport { RedPacketInjection } from './RedPacketInjection.js'\nimport RedPacketDialog from './RedPacketDialog.js'\nimport { RedPacketInPost } from './RedPacketInPost.js'\nimport { RedPacketNftInPost } from './RedPacketNftInPost.js'\nimport { openDialog } from './emitter.js'\n\nfunction Render(\n    props: React.PropsWithChildren<{\n        name: string\n    }>,\n) {\n    usePluginWrapper(true, { name: props.name })\n    return <>{props.children}</>\n}\nconst containerStyle = {\n    display: 'flex',\n    alignItems: 'center',\n}\n\nconst site: Plugin.SiteAdaptor.Definition = {\n    ...base,\n    init(signal) {},\n    DecryptedInspector(props) {\n        if (RedPacketMetadataReader(props.message.meta).isOk())\n            return (\n                <Render name=\"Lucky Drop\">\n                    {renderWithRedPacketMetadata(props.message.meta, (r) => (\n                        <RedPacketInPost payload={r} />\n                    ))}\n                </Render>\n            )\n\n        if (RedPacketNftMetadataReader(props.message.meta).isOk())\n            return (\n                <Render name=\"NFT Lucky Drop\">\n                    {renderWithRedPacketNftMetadata(props.message.meta, (r) => (\n                        <RedPacketNftInPost payload={r} />\n                    ))}\n                </Render>\n            )\n        return null\n    },\n    CompositionDialogMetadataBadgeRender: new Map([\n        [\n            RedPacketMetaKey,\n            (_payload) => {\n                return {\n                    text: (\n                        <ERC20RedpacketBadge\n                            message={(_payload as RedPacketJSONPayload).sender.message}\n                            fallback={'A Token Lucky Drop'}\n                        />\n                    ),\n                }\n            },\n        ],\n        [\n            RedPacketNftMetaKey,\n            (_payload) => {\n                return {\n                    text: (\n                        <ERC20RedpacketBadge\n                            message={(_payload as RedPacketNftJSONPayload).message}\n                            fallback={'An NFT Lucky Drop'}\n                        />\n                    ),\n                }\n            },\n        ],\n    ]),\n    GlobalInjection: RedPacketInjection,\n    CompositionDialogEntry: {\n        dialog: RedPacketDialog,\n        label: (\n            <>\n                <Icons.RedPacket size={16} />\n                <Trans ns={PluginID.RedPacket} i18nKey=\"name\" />\n            </>\n        ),\n    },\n    ApplicationEntries: [\n        (() => {\n            const icon = <Icons.RedPacket size={36} />\n            const name = <Trans ns={PluginID.RedPacket} i18nKey=\"name\" />\n            const recommendFeature = {\n                description: <Trans ns={PluginID.RedPacket} i18nKey=\"recommend_feature_description\" />,\n                backgroundGradient: 'linear-gradient(180.54deg, #FF9A9E 0.71%, #FECFEF 98.79%, #FECFEF 99.78%)',\n                isFirst: true,\n            }\n            return {\n                ApplicationEntryID: base.ID,\n                RenderEntryComponent(EntryComponentProps) {\n                    return (\n                        <ApplicationEntry\n                            title={name}\n                            recommendFeature={recommendFeature}\n                            {...EntryComponentProps}\n                            icon={icon}\n                            onClick={() => {\n                                EntryComponentProps.onClick ? EntryComponentProps.onClick?.(openDialog) : openDialog()\n                                Telemetry.captureEvent(EventType.Access, EventID.EntryAppLuckOpen)\n                            }}\n                        />\n                    )\n                },\n                appBoardSortingDefaultPriority: 1,\n                marketListSortingPriority: 1,\n                icon,\n                description: <Trans ns={PluginID.RedPacket} i18nKey=\"description\" />,\n                name,\n                tutorialLink: 'https://realmasknetwork.notion.site/0a71fd421aae4563bd07caa3e2129e5b',\n                category: 'dapp',\n                recommendFeature,\n            }\n        })(),\n    ],\n    wrapperProps: {\n        icon: <Icons.RedPacket size={24} style={{ filter: 'drop-shadow(0px 6px 12px rgba(240, 51, 51, 0.2))' }} />,\n        backgroundGradient:\n            'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.8) 100%), linear-gradient(90deg, rgba(28, 104, 243, 0.2) 0%, rgba(249, 55, 55, 0.2) 100%), #FFFFFF',\n    },\n}\ninterface ERC20RedpacketBadgeProps {\n    message: string\n    fallback: string\n}\n\nfunction ERC20RedpacketBadge(props: ERC20RedpacketBadgeProps) {\n    const { message, fallback } = props\n\n    return (\n        <div style={containerStyle}>\n            <Icons.RedPacket size={20} />\n            <Typography\n                fontSize=\"12px\"\n                lineHeight=\"16px\"\n                marginLeft=\"8px\"\n                maxWidth=\"450px\"\n                overflow=\"hidden\"\n                textOverflow=\"ellipsis\">\n                {message || fallback}\n            </Typography>\n        </div>\n    )\n}\n\nexport default site\n","const cache = new WeakMap<object, object>()\n/**\n * This function provides a localImplementation that has HMR support.\n * To update, call this function with the SAME key object.\n * @param impl The implementation. Can be an async function.\n * @param key The reference object that must be the same if you're updating.\n */\nexport async function getOrUpdateLocalImplementationHMR<T extends object>(impl: () => T | Promise<T>, key: object) {\n    if (!import.meta.webpackHot) return impl()\n\n    const result: any = await impl()\n    if (!cache.has(key)) cache.set(key, Object.create(null))\n    const localImpl = cache.get(key)\n    Object.setPrototypeOf(localImpl, result)\n    return localImpl\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\n}), 'HelpOutline');","import React, { useCallback, useMemo } from 'react'\nimport { unreachable } from '@masknet/kit'\nimport { TokenIcon } from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { ActionButton, ShadowRootTooltip, makeStyles, type ActionButtonProps } from '@masknet/theme'\nimport { useChainContext, useFungibleTokenBalance, useFungibleTokenSpenders } from '@masknet/web3-hooks-base'\nimport { ApproveStateType, useERC20TokenApproveCallback } from '@masknet/web3-hooks-evm'\nimport { isGte, isSameAddress, type FungibleToken, rightShift } from '@masknet/web3-shared-base'\nimport type { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { HelpOutline } from '@mui/icons-material'\nimport { useSharedTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles<void, 'icon'>()((theme, _, refs) => ({\n    icon: {},\n    button: {\n        whiteSpace: 'nowrap',\n        // increase selector priority over button's\n        [`.${refs.icon}`]: {\n            width: 18,\n            height: 18,\n            fontSize: 10,\n        },\n    },\n    helpIcon: {\n        width: 18,\n        height: 18,\n    },\n}))\n\nexport interface EthereumERC20TokenApprovedBoundaryProps extends withClasses<'button' | 'container'> {\n    amount: string\n    balance?: string\n    spender?: string\n    token?: FungibleToken<ChainId, SchemaType>\n    fallback?: React.ReactNode\n    children?: React.ReactNode | ((allowance: string) => React.ReactNode)\n    infiniteUnlockContent?: React.ReactNode\n    ActionButtonProps?: ActionButtonProps\n    contractName?: string\n    showHelperToken?: boolean\n    failedContent?: React.ReactNode\n    callback?: () => void\n}\n\nexport function EthereumERC20TokenApprovedBoundary(props: EthereumERC20TokenApprovedBoundaryProps) {\n    const {\n        children = null,\n        amount,\n        balance,\n        spender,\n        token,\n        infiniteUnlockContent,\n        contractName,\n        showHelperToken = true,\n        failedContent,\n        callback,\n    } = props\n\n    const t = useSharedTrans()\n    const { classes } = useStyles(undefined, { props })\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: token?.chainId })\n    const { data: tokenBalance } = useFungibleTokenBalance(NetworkPluginID.PLUGIN_EVM, token?.address, {\n        chainId,\n    })\n\n    const {\n        data: spenders,\n        isLoading: spendersLoading,\n        isError,\n        refetch,\n    } = useFungibleTokenSpenders(NetworkPluginID.PLUGIN_EVM, {\n        chainId,\n        account,\n    })\n\n    const approveAmount = balance || tokenBalance || amount\n    const [{ type: approveStateType, allowance }, transactionState, approveCallback] = useERC20TokenApproveCallback(\n        token?.address ?? '',\n        approveAmount,\n        spender ?? '',\n        () => {\n            callback?.()\n            refetch()\n        },\n        token?.chainId,\n    )\n    const approved = useMemo(() => {\n        if (isGte(allowance, amount)) return true\n        if (!token?.address || !spenders?.length) return false\n        return spenders.some((x) => {\n            return (\n                isSameAddress(x.tokenInfo.address, token.address) &&\n                isSameAddress(x.address, spender) &&\n                isGte(rightShift(x.amount || 0, x.tokenInfo.decimals || token.decimals), amount)\n            )\n        })\n    }, [allowance, amount, spenders, token?.address, token?.decimals, spender])\n\n    const loading =\n        spendersLoading ||\n        approveStateType === ApproveStateType.UPDATING ||\n        transactionState.loadingApprove ||\n        transactionState.loading\n\n    const onApprove = useCallback(async () => {\n        if (approved || loading) return\n        await approveCallback(true)\n    }, [approved, loading, approveCallback])\n\n    // not a valid erc20 token, please given token as undefined\n    if (!token) return <>{typeof children === 'function' ? children(allowance) : children}</>\n\n    if (isError)\n        return (\n            <ActionButton\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                onClick={() => refetch()}\n                {...props.ActionButtonProps}>\n                {failedContent ?? t.wallet_load_retry({ symbol: token.symbol ?? token.name ?? 'Token' })}\n            </ActionButton>\n        )\n    if (loading || !approved)\n        return (\n            <ActionButton\n                loading={loading}\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                startIcon={\n                    <TokenIcon\n                        className={classes.icon}\n                        address={token.address}\n                        chainId={token.chainId}\n                        name={token.name}\n                        disableDefaultIcon\n                    />\n                }\n                endIcon={\n                    showHelperToken ? (\n                        <ShadowRootTooltip\n                            title={t.plugin_wallet_token_infinite_unlock_tips({\n                                provider: contractName ?? '',\n                                symbol: token.symbol,\n                            })}\n                            placement=\"top\"\n                            arrow\n                            leaveDelay={2000}\n                            disableInteractive\n                            disableFocusListener\n                            disableTouchListener>\n                            <HelpOutline className={classes.helpIcon} />\n                        </ShadowRootTooltip>\n                    ) : null\n                }\n                onClick={onApprove}\n                {...props.ActionButtonProps}>\n                {infiniteUnlockContent ?? t.plugin_wallet_token_infinite_unlock({ symbol: token.symbol })}\n            </ActionButton>\n        )\n    if (approved) return <>{typeof children === 'function' ? children(allowance) : children}</>\n\n    unreachable(approved)\n}\n","export const NFTFallbackImage = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 126 126\">\n        <path fill=\"url(#FallbackImage_svg__a)\" d=\"M0 .191h126v126H0z\" />\n        <path fill=\"url(#FallbackImage_svg__b)\" d=\"M0 .191h126v126H0z\" />\n        <rect width=\"30.238\" height=\"30\" x=\"46.869\" y=\"46.691\" fill=\"url(#FallbackImage_svg__c)\" rx=\"15\" />\n        <rect width=\"30.238\" height=\"30\" x=\"46.869\" y=\"46.691\" fill=\"url(#FallbackImage_svg__d)\" rx=\"15\" />\n        <path\n            fill=\"#fff\"\n            fillRule=\"evenodd\"\n            d=\"M70.75 58.288v4.861H55.518a6.62 6.62 0 0 0 6.459 5.153 6.622 6.622 0 0 0 5.942-3.694h2.83v4.083c0 .966-.784 1.75-1.752 1.75h-14.02a1.751 1.751 0 0 1-1.752-1.75V58.288H70.75Zm-4.511 6.32a5.156 5.156 0 0 1-4.263 2.247c-1.77 0-3.332-.89-4.262-2.247h8.525Zm-8-5.153a2.725 2.725 0 0 0-2.698 2.333h1.494a1.266 1.266 0 0 1 2.409 0h1.494a2.726 2.726 0 0 0-2.699-2.333Zm7.497 0a2.726 2.726 0 0 0-2.699 2.333h1.494a1.266 1.266 0 0 1 2.41 0h1.493a2.726 2.726 0 0 0-2.698-2.333Zm3.261-6.514c.968 0 1.753.783 1.753 1.75v2.139H53.225v-2.14c0-.966.785-1.75 1.753-1.75h14.02Z\"\n            clipRule=\"evenodd\"\n        />\n        <defs>\n            <linearGradient\n                id=\"FallbackImage_svg__a\"\n                x1=\"0\"\n                x2=\"126\"\n                y1=\"63.191\"\n                y2=\"63.191\"\n                gradientUnits=\"userSpaceOnUse\">\n                <stop offset=\".01\" stopColor=\"#6298EA\" stopOpacity=\".2\" />\n                <stop offset=\".01\" stopColor=\"#6298EA\" stopOpacity=\".2\" />\n                <stop offset=\"1\" stopColor=\"#627EEA\" stopOpacity=\".2\" />\n            </linearGradient>\n            <linearGradient\n                id=\"FallbackImage_svg__b\"\n                x1=\"63\"\n                x2=\"63\"\n                y1=\".191\"\n                y2=\"126.191\"\n                gradientUnits=\"userSpaceOnUse\">\n                <stop stopColor=\"#fff\" stopOpacity=\"0\" />\n                <stop offset=\"1\" stopColor=\"#fff\" stopOpacity=\".9\" />\n            </linearGradient>\n            <linearGradient\n                id=\"FallbackImage_svg__c\"\n                x1=\"46.869\"\n                x2=\"77.107\"\n                y1=\"61.691\"\n                y2=\"61.691\"\n                gradientUnits=\"userSpaceOnUse\">\n                <stop offset=\".01\" stopColor=\"#6298EA\" stopOpacity=\".2\" />\n                <stop offset=\".01\" stopColor=\"#6298EA\" stopOpacity=\".2\" />\n                <stop offset=\"1\" stopColor=\"#627EEA\" stopOpacity=\".2\" />\n            </linearGradient>\n            <linearGradient\n                id=\"FallbackImage_svg__d\"\n                x1=\"61.988\"\n                x2=\"61.988\"\n                y1=\"46.691\"\n                y2=\"76.691\"\n                gradientUnits=\"userSpaceOnUse\">\n                <stop stopColor=\"#fff\" stopOpacity=\"0\" />\n                <stop offset=\"1\" stopColor=\"#fff\" stopOpacity=\".9\" />\n            </linearGradient>\n        </defs>\n    </svg>\n)\n","import { useSubscription } from 'use-subscription'\nimport { FALSE, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useRiskWarningApproved<T extends NetworkPluginID>(pluginID?: T) {\n    const { RiskWarning } = useWeb3State(pluginID)\n    return useSubscription(RiskWarning?.approved ?? FALSE)\n}\n","import { makeStyles, ActionButton, type ActionButtonProps } from '@masknet/theme'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { isZero } from '@masknet/web3-shared-base'\nimport {\n    useChainContext,\n    useNetworkContext,\n    useNativeTokenBalance,\n    useRiskWarningApproved,\n    useWallet,\n} from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useAsync } from 'react-use'\nimport { SmartPayBundler } from '@masknet/web3-providers'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { SelectProviderModal, WalletRiskWarningModal } from '../../modals/modals.js'\n\nconst useStyles = makeStyles()({\n    button: {\n        margin: 0,\n    },\n})\n\nexport interface WalletConnectedBoundaryProps extends withClasses<'connectWallet' | 'button'> {\n    offChain?: boolean\n    children?: React.ReactNode\n    expectedChainId: Web3Helper.ChainIdAll\n    hideRiskWarningConfirmed?: boolean\n    ActionButtonProps?: ActionButtonProps\n    startIcon?: React.ReactNode\n}\n\nexport function WalletConnectedBoundary(props: WalletConnectedBoundaryProps) {\n    const { children = null, offChain = false, hideRiskWarningConfirmed = false, expectedChainId } = props\n\n    const t = useSharedTrans()\n    const { classes, cx } = useStyles(undefined, { props })\n\n    const { pluginID } = useNetworkContext()\n    const { account, chainId: chainIdValid } = useChainContext({ chainId: expectedChainId })\n    const wallet = useWallet()\n    const { value: smartPayChainId } = useAsync(async () => SmartPayBundler.getSupportedChainId(), [])\n\n    const nativeTokenBalance = useNativeTokenBalance(undefined, {\n        chainId: chainIdValid,\n    })\n    const approved = useRiskWarningApproved()\n\n    const buttonClass = cx(classes.button, classes.connectWallet)\n\n    if (!account)\n        return (\n            <ActionButton\n                startIcon={props.startIcon}\n                className={buttonClass}\n                fullWidth\n                onClick={() => SelectProviderModal.open()}\n                {...props.ActionButtonProps}>\n                {t.plugin_wallet_connect_a_wallet()}\n            </ActionButton>\n        )\n\n    if (!approved && !hideRiskWarningConfirmed && pluginID === NetworkPluginID.PLUGIN_EVM)\n        return (\n            <ActionButton\n                className={buttonClass}\n                fullWidth\n                variant=\"contained\"\n                onClick={() => {\n                    WalletRiskWarningModal.open({\n                        account,\n                        pluginID,\n                    })\n                }}\n                {...props.ActionButtonProps}>\n                {t.plugin_wallet_confirm_risk_warning()}\n            </ActionButton>\n        )\n\n    if (!(wallet?.owner && chainIdValid === smartPayChainId) && isZero(nativeTokenBalance.value ?? '0') && !offChain)\n        return (\n            <ActionButton\n                className={buttonClass}\n                disabled={!nativeTokenBalance.error}\n                fullWidth\n                variant=\"contained\"\n                onClick={nativeTokenBalance.retry}\n                {...props.ActionButtonProps}>\n                {nativeTokenBalance.loading ? t.plugin_wallet_update_gas_fee() : t.plugin_wallet_no_gas_fee()}\n            </ActionButton>\n        )\n\n    if (!chainIdValid && !offChain)\n        return (\n            <ActionButton className={buttonClass} disabled fullWidth variant=\"contained\" {...props.ActionButtonProps}>\n                {t.plugin_wallet_invalid_network()}\n            </ActionButton>\n        )\n\n    return <>{children}</>\n}\n","import { useAllPersonas } from '@masknet/plugin-infra/content-script'\nimport { currentPersona } from '@masknet/plugin-infra/dom/context'\nimport type { PersonaInformation } from '@masknet/shared-base'\nimport { useSubscription } from 'use-subscription'\n\nexport function useCurrentLinkedPersona(): PersonaInformation | undefined {\n    const myPersonas = useAllPersonas()\n    const id = useSubscription(currentPersona)\n    return myPersonas?.find((x) => x.identifier.rawPublicKey.toLowerCase() === id?.rawPublicKey.toLowerCase())\n}\n","import { type ForwardedRef, forwardRef } from 'react'\nimport { omit } from 'lodash-es'\nimport type { BoxProps } from '@mui/system'\nimport {\n    Box,\n    formHelperTextClasses,\n    TextField,\n    type StandardTextFieldProps,\n    type InputProps,\n    Typography,\n    InputBase,\n    inputBaseClasses,\n    alpha,\n} from '@mui/material'\nimport { Sniffings } from '@masknet/shared-base'\nimport { makeStyles } from '../../UIHelper/makeStyles.js'\nimport { MaskColorVar, getMaskColor } from '../../CSSVariables/vars.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    label: {\n        fontSize: 12,\n        lineHeight: '16px',\n        fontWeight: 'bolder',\n    },\n    required: {\n        fontSize: 12,\n        lineHeight: '16px',\n        fontWeight: 'bolder',\n        color: getMaskColor(theme).redMain,\n        paddingLeft: theme.spacing(0.5),\n    },\n    field: {\n        width: '100%',\n        [`& > .${formHelperTextClasses.root}`]: {\n            paddingTop: theme.spacing(1),\n            borderRadius: '2px',\n            fontSize: 14,\n            lineHeight: '16px',\n        },\n        '& input[type=number]': {\n            MozAppearance: 'textfield',\n            WebkitAppearance: 'none',\n        },\n        '& input[type=number]::-webkit-outer-spin-button': {\n            WebkitAppearance: 'none',\n        },\n        '& input[type=number]::-webkit-inner-spin-button': {\n            WebkitAppearance: 'none',\n        },\n        '& input::-webkit-input-placeholder': {\n            color: theme.palette.maskColor.third,\n        },\n        [`&.${inputBaseClasses.focused}`]: {\n            background: 'transparent',\n        },\n    },\n    input: {\n        padding: theme.spacing(1),\n        background: theme.palette.maskColor.input,\n        fontSize: 13,\n        lineHeight: '16px',\n        borderRadius: 6,\n        border: '1px solid transparent',\n        [`&.${formHelperTextClasses.error}`]: {\n            boxShadow: `0 0 0 ${theme.spacing(0.5)} ${MaskColorVar.redMain.alpha(0.2)}`,\n            borderColor: MaskColorVar.redMain.alpha(0.8),\n        },\n        [`&.${formHelperTextClasses.focused}`]: {\n            borderColor: Sniffings.is_dashboard_page ? alpha(theme.palette.maskColor.primary, 0.5) : 'transparent',\n        },\n    },\n    inputDisabled: {\n        opacity: 0.5,\n        color: 'rgba(255, 255, 255, 0.4)',\n    },\n    inputFocused: {\n        background: 'transparent',\n        ...(Sniffings.is_dashboard_page\n            ? {\n                  outline: `2px solid ${alpha(theme.palette.maskColor.primary, 0.2)}`,\n                  borderColor: alpha(theme.palette.maskColor.primary, 0.5),\n              }\n            : { boxShadow: `0 0 0 2px ${theme.palette.mode === 'dark' ? '#4F5378' : 'rgba(28, 104, 243, 0.2)'}` }),\n    },\n}))\n\nexport interface MaskTextFieldProps extends Exclude<StandardTextFieldProps, 'variant'> {\n    wrapperProps?: BoxProps\n}\n\nexport const MaskTextField = forwardRef((props: MaskTextFieldProps, ref: ForwardedRef<any>) => {\n    const { label, sx, required = false, className, wrapperProps, helperText, ...rest } = props\n    const InputProps = (props.InputProps as InputProps) ?? {}\n    const { classes, cx } = useStyles()\n    return (\n        <Box sx={sx} {...wrapperProps}>\n            {label && typeof label === 'string' ? (\n                <Typography sx={{ mb: 1 }} variant=\"body2\" className={classes.label}>\n                    {label}\n                    {required ? (\n                        <Typography className={classes.required} component=\"span\">\n                            *\n                        </Typography>\n                    ) : null}\n                </Typography>\n            ) : null}\n            {label && typeof label !== 'string' ? label : null}\n            {Sniffings.is_dashboard_page ? (\n                <TextField\n                    ref={ref}\n                    {...rest}\n                    classes={{ root: classes.field }}\n                    variant=\"standard\"\n                    required={required}\n                    helperText={helperText}\n                    InputProps={{\n                        disableUnderline: true,\n                        classes: {\n                            disabled: classes.inputDisabled,\n                            focused: classes.inputFocused,\n                            ...InputProps.classes,\n                        },\n                        ...InputProps,\n                        className: cx(classes.input, InputProps?.className),\n                    }}\n                />\n            ) : (\n                <InputBase\n                    className={classes.field}\n                    {...omit(InputProps, 'disableUnderline')}\n                    {...omit(rest, 'margin', 'onKeyDown', 'onKeyUp', 'InputProps', 'inputProps', 'FormHelperTextProps')}\n                />\n            )}\n        </Box>\n    )\n})\n\nMaskTextField.displayName = 'MaskTextField'\n","import { useState, useCallback } from 'react'\n\nexport function useDetectOverflow<T extends HTMLDivElement>(): [overflow: boolean, ref: (node: T | null) => void] {\n    const [overflow, setOverflow] = useState(false)\n    const ref = useCallback((node: T | null) => {\n        if (node) setOverflow(node.offsetWidth !== node.scrollWidth)\n    }, [])\n\n    return [overflow, ref]\n}\n","import type { TypedMessage } from '@masknet/typed-message'\nimport { type Result, Ok, Err, Some, type Option, None } from 'ts-results-es'\nimport type { ReactNode } from 'react'\nimport z_schema from 'z-schema'\nimport { produce, enableMapSet, type Draft } from 'immer'\n\nconst metadataSchemaStore = new Map<string, object>()\nexport function getKnownMetadataKeys() {\n    return [...metadataSchemaStore.keys()]\n}\n\nexport function getMetadataSchema(key: string): Option<object> {\n    return metadataSchemaStore.has(key) ? Some(metadataSchemaStore.get(key)!) : None\n}\n\n/**\n * Register your metadata with a JSON Schema so we can validate the schema for you.\n * @param key Metadata key\n * @param jsonSchema JSON Schema to validate the metadata\n */\nexport function registerMetadataSchema(key: string, jsonSchema: object) {\n    metadataSchemaStore.set(key, jsonSchema)\n}\n\n/**\n * Create a TypedMessage metadata reader for your plugin\n * @param key Metadata key\n * @param jsonSchema JSON Schema to validate the metadata\n * @example\n * export const getFilePluginMetadata = createTypedMessageMetadataReader('plugin.meta.key', schema)\n * getFilePluginMetadata(meta)\n */\nexport function createTypedMessageMetadataReader<T>(key: string, jsonSchema?: object) {\n    if (jsonSchema) registerMetadataSchema(key, jsonSchema)\n    return (meta: TypedMessage['meta']) => readTypedMessageMetadataUntyped<T>(meta, key)\n}\n\n/**\n * The raw parser of metadata reader\n * @param meta Metadata object\n * @param key Metadata key\n * @param jsonSchema JSON Schema to validate the metadata\n */\nexport function readTypedMessageMetadataUntyped<T>(\n    meta: TypedMessage['meta'],\n    key: string,\n    jsonSchema?: object,\n): Result<T, void> {\n    if (!meta) return Err.EMPTY\n    if (!meta.has(key)) return Err.EMPTY\n    if (metadataSchemaStore.has(key) && !jsonSchema) jsonSchema = metadataSchemaStore.get(key)!\n    const data = meta.get(key)! as T\n    if (!jsonSchema) console.warn('You should add a JSON Schema to verify the metadata in the TypedMessage')\n    else {\n        const match = isDataMatchJSONSchema(data, jsonSchema)\n        if (match.isErr()) {\n            console.warn('The problematic metadata is dropped', data, 'errors:', match.error)\n            return Err.EMPTY\n        }\n    }\n    return Ok(data)\n}\n\nexport function isDataMatchJSONSchema(data: any, jsonSchema: object) {\n    const validator = new z_schema({})\n    if (!validator.validate(data, jsonSchema)) return Err(validator.getLastErrors())\n    return Ok.EMPTY\n}\n\n/**\n * Create a render of Metadata.\n * @param metadataReader A metadata reader (can be return value of createTypedMessageMetadataReader)\n */\nexport function createRenderWithMetadata<T>(metadataReader: (meta: TypedMessage['meta']) => Result<T, void>) {\n    return (metadata: TypedMessage['meta'], render: (data: T) => ReactNode | null): ReactNode | null => {\n        const message = metadataReader(metadata)\n        if (message.isOk()) return render(message.value)\n        return null\n    }\n}\n\nlet immer_setup = false\nexport function editTypedMessageMeta<T extends TypedMessage>(\n    typedMessage: T,\n    edit: (meta: NonNullable<Draft<TypedMessage['meta']>>) => void,\n): T {\n    if (!immer_setup) {\n        enableMapSet()\n        immer_setup = true\n    }\n    return produce(typedMessage, (e) => {\n        if (!e.meta) e.meta = new Map()\n        edit(e.meta)\n        if (e.meta.size === 0) e.meta = undefined\n    })\n}\n\n/**\n * Render with metadata\n * @param metadata Metadata\n * @param key Metadata key\n * @param render The render\n * @param jsonSchema JSON Schema to validate the metadata\n */\nexport function renderWithMetadataUntyped(\n    metadata: TypedMessage['meta'],\n    key: string,\n    render: (data: unknown) => ReactNode,\n    jsonSchema?: object,\n): ReactNode | null {\n    const message = readTypedMessageMetadataUntyped(metadata, key, jsonSchema)\n    if (message.isOk()) return render(message.value)\n    return null\n}\n","import { noop } from 'lodash-es'\nimport { useEffect } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useBalance<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n    /** Allow to control the request */\n    enabled = true,\n) {\n    const { account, chainId } = useChainContext({ account: options?.account, chainId: options?.chainId })\n    const Web3 = useWeb3Connection(pluginID, {\n        account,\n        chainId,\n        ...options,\n    })\n    const { BalanceNotifier } = useWeb3State(pluginID)\n\n    const result = useQuery({\n        enabled: !!account && !!Web3 && enabled,\n        queryKey: ['balance', pluginID, chainId, account, options],\n        queryFn: async () => {\n            if (!account) return 0\n            return Web3.getBalance(account, { ...options, chainId })\n        },\n    })\n\n    useEffect(() => {\n        return (\n            BalanceNotifier?.emitter.on('update', (ev) => {\n                if (isSameAddress(account, ev.account)) result.refetch()\n            }) ?? noop\n        )\n    }, [account, result.refetch, BalanceNotifier])\n\n    return result\n}\n","import { useQuery } from '@tanstack/react-query'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\nexport function useFungibleTokenSpenders<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: HubOptions<T>,\n) {\n    const { account, chainId } = useChainContext<T>({\n        account: options?.account,\n        chainId: options?.chainId,\n    })\n    const Hub = useWeb3Hub(pluginID, {\n        account,\n        chainId,\n        ...options,\n    })\n    return useQuery({\n        queryKey: ['fungible-tokens', 'spenders', chainId, account],\n        enabled: true,\n        queryFn: async () => Hub.getFungibleTokenSpenders(chainId, account),\n    })\n}\n","import { useQuery } from '@tanstack/react-query'\nimport {\n    asyncIteratorToArray,\n    pageableToIterator,\n    type PageIndicator,\n    type NetworkPluginID,\n    EMPTY_LIST,\n} from '@masknet/shared-base'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { type NonFungibleCollection } from '@masknet/web3-shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\nexport function useNonFungibleCollections<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: HubOptions<T>,\n) {\n    const { account } = useChainContext({ account: options?.account, chainId: options?.chainId })\n    const Hub = useWeb3Hub(pluginID, options)\n\n    return useQuery<Array<NonFungibleCollection<Web3Helper.ChainIdScope<S, T>, Web3Helper.SchemaTypeScope<S, T>>>>({\n        queryKey: ['non-fungible-collections', pluginID, account, options],\n        enabled: !!account,\n        queryFn: async () => {\n            if (!account) return EMPTY_LIST\n            return asyncIteratorToArray(\n                pageableToIterator(async (indicator?: PageIndicator) => {\n                    return Hub.getNonFungibleCollectionsByOwner(account, {\n                        indicator,\n                        size: 50,\n                        networkPluginId: pluginID,\n                        ...options,\n                    })\n                }),\n            )\n        },\n    })\n}\n","import { useMemo } from 'react'\nimport type { AbiItem } from 'web3-utils'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { type ChainId, createContract } from '@masknet/web3-shared-evm'\nimport type { BaseContract } from '@masknet/web3-contracts/types/types.js'\n\n/**\n * Create a contract which will forward its all transactions to the\n * EthereumService in the background page and decode the result of calls automatically\n * @param address\n * @param ABI\n * @param chainId\n */\nexport function useContract<T extends BaseContract>(chainId?: ChainId, address = '', ABI: AbiItem[] = EMPTY_LIST) {\n    return useMemo(() => createContract<T>(Web3.getWeb3({ chainId }), address, ABI), [address, ABI])\n}\n\n/**\n * Create many contracts with same ABI\n * @param listOfAddress\n * @param ABI\n * @param chainId\n */\nexport function useContracts<T extends BaseContract>(\n    chainId?: ChainId,\n    listOfAddress: string[] = EMPTY_LIST,\n    ABI: AbiItem[] = EMPTY_LIST,\n) {\n    return useMemo(\n        () =>\n            listOfAddress\n                .map((address) => createContract<T>(Web3.getWeb3({ chainId }), address, ABI))\n                .filter(Boolean) as T[],\n        [JSON.stringify(listOfAddress), ABI],\n    )\n}\n","import { useAsyncFn } from 'react-use'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport { Web3 } from '@masknet/web3-providers'\nimport { useChainContext } from '@masknet/web3-hooks-base'\n\n/**\n * @param contractAddress NFT contract Address.\n * @param operator Address to add to the set of authorized operators.\n * @param approved True if the operator is approved, false to revoke approval.\n */\nexport function useERC721ContractSetApproveForAllCallback(\n    contractAddress: string | undefined,\n    operator: string | undefined,\n    approved: boolean,\n    callback?: () => void,\n    _chainId?: ChainId,\n) {\n    const { account } = useChainContext<NetworkPluginID.PLUGIN_EVM>({\n        chainId: _chainId,\n    })\n\n    return useAsyncFn(async () => {\n        if (!contractAddress || !operator) return\n\n        const hash = await Web3.approveAllNonFungibleTokens(contractAddress, operator, approved, undefined, {\n            chainId: _chainId,\n        })\n        const receipt = await Web3.confirmTransaction(hash, {\n            chainId: _chainId,\n            signal: AbortSignal.timeout(5 * 60 * 1000),\n        })\n\n        if (receipt) callback?.()\n    }, [account, approved, contractAddress, operator])\n}\n","import { useState } from 'react'\nimport { GasEditor, type ChainId, type GasConfig } from '@masknet/web3-shared-evm'\nimport { useGasOptions } from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\n\nexport function useGasConfig(chainId: Web3Helper.ChainIdAll) {\n    const [gasConfig, setGasConfig] = useState<GasConfig>()\n    const { data: gasOptions } = useGasOptions()\n\n    const editor = GasEditor.fromGasOptions(chainId as ChainId, gasOptions)\n\n    return {\n        gasPrice: editor.getGasPrice(),\n        gasConfig: gasConfig || editor.getGasConfig(),\n        setGasConfig,\n    }\n}\n","import type { EventLog, Log } from 'web3-core'\nimport { type AbiItem, keccak256 } from 'web3-utils'\nimport { abiCoder } from './abiCoder.js'\n\nexport function decodeEvents(abis: AbiItem[], logs: Log[]) {\n    // the topic0 for identifying which abi to be used for decoding the event\n    const listOfTopic0 = abis.map((abi) => keccak256(`${abi.name}(${abi.inputs?.map((x) => x.type).join(',')})`))\n\n    // decode events\n    const events = logs.map((log) => {\n        const idx = listOfTopic0.indexOf(log.topics[0])\n        if (idx === -1) return\n        const abi = abis[idx]\n        const inputs = abi?.inputs ?? []\n\n        return {\n            // more: https://web3js.readthedocs.io/en/v1.2.11/web3-eth-abi.html?highlight=decodeLog#decodelog\n            returnValues: abiCoder.decodeLog(inputs, log.data, abi.anonymous ? log.topics : log.topics.slice(1)),\n            raw: {\n                data: log.data,\n                topics: log.topics,\n            },\n            event: abi.name,\n            signature: listOfTopic0[idx],\n            ...log,\n        } as EventLog\n    })\n    return events.reduce<{\n        [eventName: string]: EventLog | undefined\n    }>((accumulate, event) => {\n        if (event) accumulate[event.event] = event\n        return accumulate\n    }, {})\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');"],"names":["createContext","useEffect","useContext","noop","emptyPluginWrapperMethods","setWrap","setWrapperName","setWidth","PluginWrapperMethodsContext","displayName","usePluginWrapper","open","options","width","name","useMemo","useSubscription","useObservableValues","map","subscription","getCurrentValue","asValues","subscribe","callback","event","on","ALL_EVENTS","createElement","ObservableMap","ObservableSet","ValueRef","useValueRef","PostInfoContext","PostInfoProvider","props","Provider","value","post","children","usePostInfoDetails","__proto__","Proxy","get","_","key","undefined","postInfo","TypeError","k","isSubscription","Object","defineProperty","configurable","x","allPersonas","useAllPersonas","getPostURL","usePostLink","id","postID","identifier","getBackgroundColor","useSiteThemeMode","theme","backgroundColor","document","body","isDark","palette","mode","isDarker","Environment","isEnvironment","AsyncCall","AsyncGeneratorCall","serializer","getOrUpdateLocalImplementationHMR","getPluginMessage","DOMAIN_RPC","log","type","requestReplay","process","env","NODE_ENV","sendLocalStack","isBackground","ManifestBackground","__workaround__replaceIsBackground__","f","getPluginRPCInternal","cache","pluginID","starter","entry","has","message","rpc","create","channel","send","sendToBackgroundPage","thenable","set","Map","cacheGenerator","getPluginRPC","startPluginRPC","AbortController","signal","getPluginRPCGenerator","startPluginGeneratorRPC","startPluginRPCInternal","impl","Error","delegate","sendByBroadcast","clamp","r","g","b","toRGB","channels","join","fromRGB","rgb","matched","match","Number","parseInt","shade","percentage","c","Math","floor","fromRGBAtoRGB","color","a","rgba","slice","isRGBA","element","getComputedStyle","createRenderWithMetadata","createTypedMessageMetadataReader","RedPacketMetaKey","RedPacketNftMetaKey","schema","schemaNtf","RedPacketMetadataReader","renderWithRedPacketMetadata","RedPacketNftMetadataReader","renderWithRedPacketNftMetadata","useTranslation","Trans","createProxy","initValue","define","container","getPrototypeOf","setPrototypeOf","v","getOwnPropertyDescriptor","useRedPacketTrans","t","bind","createComponent","i18nKey","ns","shouldUnescape","RedPacketTrans","pick","omit","reduceUselessPayloadInfo","payload","token","BigNumber","useBalance","useChainContext","useFungibleTokenBalance","NetworkPluginID","useGasConfig","useTransactionValue","originalValue","gas","gasCurrency","data","nativeTokenBalance","isLoading","loadingBalance","PLUGIN_EVM","gasCurrencyBalance","loadingTokenBalance","balance","chainId","gasPrice","estimateGasFee","multipliedBy","toFixed","transactionValue","isLessThan","plus","minus","loading","useContract","HappyRedPacketV1ABI","HappyRedPacketV2ABI","HappyRedPacketV3ABI","HappyRedPacketV4ABI","useRedPacketConstants","useRedPacketContract","version","HAPPY_RED_PACKET_ADDRESS_V1","addressV1","HAPPY_RED_PACKET_ADDRESS_V2","addressV2","HAPPY_RED_PACKET_ADDRESS_V3","addressV3","HAPPY_RED_PACKET_ADDRESS_V4","addressV4","v1","v2","v3","v4","versions","useCallback","useAsync","useAsyncFn","sha3","SchemaType","useTokenConstants","decodeEvents","ContractTransaction","Web3","checkParams","paramsObj","total","shares","useCreateParamsCallback","expectedChainId","redPacketSettings","publicKey","account","NATIVE_TOKEN_ADDRESS","redPacketContract","getCreateParams","duration","isRandom","seed","random","toString","tokenType","Native","tokenAddress","address","params","values","gasError","methods","create_red_packet","estimateGas","from","catch","error","useCreateParams","JSON","stringify","useCreateCallback","gasOption","createParams","tx","fillAll","hash","sendTransaction","paymentToken","gasOptionType","receipt","getTransactionReceipt","events","jsonInterface","logs","RedPacketPluginID","webpackHot","accept","RedPacketRPC","useRef","Icons","useNativeToken","useNativeTokenAddress","useNativeTokenPrice","useWallet","Grid","Link","Paper","Typography","makeStyles","ActionButton","PluginWalletStatusBar","ChainBoundary","SelectGasSettingsToolbar","Launch","LaunchIcon","ChainResolver","ExplorerResolver","SmartPayBundler","formatBalance","isSameAddress","isZero","useStyles","link","display","marginLeft","spacing","grid","paddingTop","paddingBottom","gridWrapper","paddingLeft","paddingRight","hit","alignItems","maxWidth","fontWeight","borderRadius","maskColor","bg","text","primary","padding","marginTop","marginBottom","marginRight","ellipsis","fontSize","textOverflow","overflow","whiteSpace","controller","position","bottom","RedPacketConfirmDialog","settings","onCreated","onClose","onGasOptionChange","classes","cx","networkType","contract_version","nativeTokenAddress","privateKey","createAccount","nativeToken","isNativeToken","isWaitGasBeMinus","isBalanceInsufficient","isLessThanOrEqualTo","formatTotal","decimals","formatAvg","div","isCreating","createCallback","createRedpacket","result","transactionHash","CreationSuccess","returnValues","current","sender","is_random","password","rpid","creation_time","record","addRedPacket","network","chainName","contractAddress","contract_address","nativeTokenDetailed","nativeCurrency","nativeTokenPrice","wallet","smartPayChainId","getSupportedChainId","className","item","xs","variant","align","split_mode","average","share","amount_per_share","flexDirection","href","fungibleTokenLink","target","rel","onClick","stop","symbol","total_cost","supportMultiCurrency","owner","gasConfig","gasLimit","onChange","editMode","SettingInfo","size","style","lineHeight","hint","expectedPluginID","fullWidth","disabled","confirming","confirm","RedPacketStatus","claimed","expired","empty","refunded","useAsyncRetry","useAvailability","check_availability","call","compact","NetworkResolver","ChainId","useAvailabilityComputed","parsedChainId","networkChainId","Mainnet","asyncResult","availability","computed","canClaim","canRefund","listOfStatus","isEmpty","isExpired","isClaimed","claimed_amount","isRefunded","isCreator","isPasswordValid","canSend","REDPACKET_ABI","useCreateRedPacketReceipt","txid","find","eventParams","toNumber","useState","useRefundCallback","setIsRefunded","state","refundCallback","refund","i18NextInstance","dateTimeFormat","date","includeTime","Intl","DateTimeFormat","language","year","month","day","hour","minute","hourCycle","format","nextDay","intervalToDuration","useIntersectionObserver","Box","Popper","useMediaQuery","ListItem","useFungibleToken","useNetworkDescriptor","TokenIcon","listItemBackground","listItemBackgroundIcon","smallQuery","breakpoints","sm","root","background","common","white","contentItem","height","default","content","top","left","zIndex","opacity","filter","backgroundRepeat","backgroundSize","box","transform","section","justifyContent","flexWrap","title","dark","info","infoTitle","secondaryDark","actionButton","minHeight","footer","footerInfo","popper","arrow","right","borderLeft","borderRight","borderBottom","popperText","cursor","disabledButton","fullWidthBox","icon","invisible","visibility","RedPacketInHistoryList","history","onSelect","isViewed","setIsViewed","ref","isSmall","down","networkDescriptor","backgroundGradient","patchedHistory","isIntersecting","retry","revalidateAvailability","claimerNumber","total_remaining","isRefunding","token_address","tokenDetailed","historyToken","onSendOrRefund","anchorEl","setAnchorEl","openPopper","refundDuration","start","Date","now","end","formatRefundDuration","hours","minutes","best_wishes","create_time","history_duration","time","includes","onMouseEnter","currentTarget","onMouseLeave","refunding","transition","disablePortal","data_broken","history_claimed","components","span","claimedShares","String","amount","claimedAmount","logoURL","EMPTY_LIST","getRedPacketConstants","RedPacket","TheGraphRedPacket","CREATE_RED_PACKET_METHOD_ID","useRedPacketHistory","HAPPY_RED_PACKET_ADDRESS_V4_BLOCK_HEIGHT","historyTransactions","getHistories","getRedPacketHistoryFromDatabase","blockNumber","getBlockNumber","payloadList","sort","List","LoadingBase","useSharedTrans","boxSizing","margin","placeholder","textAlign","emptyIcon","RedPacketHistoryList","sharedI18N","histories","length","EmptySimple","search_no_result","i","getNftRedPacketConstants","useNftRedPacketHistory","NFT_RED_PACKET_ADDRESS_BLOCK_HEIGHT","RED_PACKET_NFT_ADDRESS","getNFTHistories","getNftRedPacketHistory","NftRedPacketABI","useNftRedPacketConstants","useNftRedPacketContract","useAvailabilityNftRedPacket","nftRedPacketContract","check_erc721_remain_ids","claimed_id","totalAmount","erc721_token_ids","bits","bit_status","split","bit","isClaimedAll","isCompleted","isEnd","bitStatusList","reverse","remaining","useNftAvailabilityComputed","isClaimable","isSendable","NFT_REDPACKET_ABI","useCreateNftRedPacketReceipt","memo","fill","NftRedPacketHistoryItem","onSend","onShowPopover","onHidePopover","collections","collection","handleSend","redpacketStatus","Array","token_ids","handleMouseEnter","handleShowPopover","anchor","nft_data_broken","history_nft_claimed","Boolean","iconURL","URL","url","useNonFungibleCollections","refs","popperContent","borderTop","atBottom","NftRedPacketHistoryList","containerRef","setPopperText","schemaType","ERC721","handleHidePopover","nft_no_history","placement","CrossIsolationMessages","openComposition","metadataKey","compositionDialogEvent","sendToLocal","reason","initialMetas","TabPanel","ApplicationBoardModal","useCurrentLinkedPersona","useCurrentVisitingIdentity","tabWrapper","RedPacketPast","tabs","currentIdentity","linkedPersona","senderName","userId","nickname","handleSendNftRedpacket","contractName","contractTokenURI","close","tokens","collectibles","requiredSupportPluginID","ZERO","useDefaultCreateGas","MaskTextField","RadioIndicator","InputBase","useTheme","isGreaterThan","rightShift","FungibleTokenInput","EthereumERC20TokenApprovedBoundary","useAvailableBalance","TokenValue","WalletConnectedBoundary","SelectFungibleTokenModal","useEnvironmentContext","RED_PACKET_DEFAULT_SHARES","RED_PACKET_MAX_SHARES","RED_PACKET_MIN_SHARES","field","gap","input","flex","button","unlockContainer","columnGap","flexFlow","option","line","checkIconWrapper","tokenValue","flexGrow","RedPacketERC20Form","onNext","origin","setToken","onSelectTokenChipClick","picked","openAndWaitForClose","disableNativeToken","selectedTokens","setRandom","setMessage","setShares","onShareChange","ev","shares_","replaceAll","test","parsed","rawAmount","setRawAmount","rawTotalAmount","minTotalAmount","isDivisible","dividedBy","creatingParams","defaultGas","isAvailableBalance","isGasSufficient","loadingTransactionValue","validationMessage","select_a_token","plugin_wallet_connect_a_wallet","enter_shares","max_shares","insufficient_token_balance","enter_total_amount","enter_each_amount","indivisible","gasValidationMessage","no_enough_gas_fees","insufficient_balance","checked","main","second","random_amount","identical_amount","wrapperProps","InputProps","endAdornment","third","quantity","inputProps","autoComplete","autoCorrect","inputMode","enter_quantity","spellCheck","pattern","label","amount_each","onSelectToken","onAmountChange","maxAmount","maxAmountShares","e","blessing_words","maxLength","actualPluginID","ActionButtonProps","ERC20","gt","spender","forceShowingWrongNetworkButton","next","ExpandMore","ExpandMoreIcon","SourceType","useWeb3Others","SelectNonFungibleContractModal","border","wrapper","tokenWrapper","nftName","hasIcon","pointerEvents","expandIcon","pointer","ERC721ContractSelectPanel","onContractChange","Others","onCollectionChange","contract","openDialog","onSubmit","component","select_an_nft","isValidAddress","source","SimpleHash","wallet_balance","img","src","safeNonPayableTransactionCall","overrides","Contract","useERC721ContractIsApproveForAll","operator","getERC721Contract","isApprovedForAll","useERC721ContractSetApproveForAllCallback","EthereumERC721TokenApprovedBoundary","_validationMessage","isApproveForAll","approveState","approveCallback","plugin_wallet_select_a_nft_contract","plugin_wallet_select_a_nft_owner","plugin_wallet_select_a_nft_operator","approveButton","plugin_wallet_nft_approving_all","toLowerCase","plugin_wallet_approve_all_nft","plugin_wallet_fail_to_load_nft_contract","RedpacketMessagePanel","message_label","useUpdate","findLastIndex","uniq","AssetPreviewer","formatTokenId","DialogContent","Button","QuestionMark","QuestionMarkIcon","Check","CheckIcon","ShadowRootTooltip","dialogContent","dialogContentFixedHeight","overflowY","tokenBox","ownerTokenBox","noResultBox","iconButton","searchButton","searchWrapper","searchWrapperSingle","textField","confirmButton","tokenSelector","gridTemplateColumns","selectWrapper","paper","selectWrapperNftNameWrapper","borderBottomRightRadius","borderBottomLeftRadius","selectWrapperNftName","checkbox","borderColor","checkIcon","fallbackImage","selectedTokenAmount","isSelectSharesExceed","selectAmountBox","questionMarkIcon","selectBar","selectAll","selectAllCheckBox","selectAllCheckBoxText","selectSharesExceed","selectSharesExceedBox","tooltip","tooltipText","imageWrapper","SelectNftTokenDialog","existTokenDetailedList","tokenDetailedOwnerList","setExistTokenDetailedList","searchedTokenDetailedList","setSearchedTokenDetailedList","searched","setSearched","tokenDetailedSelectedList","setTokenDetailedSelectedList","loadingToken","setLoadingToken","searchTokenListInput","setSearchTokenListInput","tokenIdListInput","setTokenIdListInput","tokenIdFilterList","setTokenIdFilterList","setSelectAll","selectAllHandler","update","selectToken","findToken","shiftKey","index","tokenId","concat","tokenDetailedSelectedListSorted","unselectedTokenIdList","nextToken","push","nextTokenIndex","lastSelectedToken","lastSelectedTokenIndex","onSearch","tokenIdList","trim","allSettled","Promise","getNonFungibleToken","status","onFilter","list","maxSharesOptions","startAdornment","Search","search","loading_token","NFTCard","nft_max_shares_tip","nft_max_shares","nft_select_amount","count","nft_search_placeholder","select_all","nft_shift_select_tip","metadata","mediaURL","imageURL","useCreateNftRedpacketCallback","isOwner","check_ownership","formatEthereumAddress","isNativeTokenAddress","bold","float","maxHeight","tokenSelectorWrapper","nftNameWrapper","sendButton","assetImgWrapper","RedpacketNftConfirmDialog","tokenList","isSending","transactionId","setTransactionId","onSendTx","addRedPacketNft","onSendPost","contractVersion","pb","nft_account_name","addressLink","nft_attached_message","nft_total_amount","connectWallet","send_symbol","NFTSelectOption","All","Partial","pageableToIterator","useWeb3Hub","useNonFungibleAssetsByCollectionAndOwner","collectionId","assets","setAssets","done","setDone","toggleLoading","setError","Hub","iterator","indicator","getNonFungibleAssetsByCollectionAndOwner","batchResult","iteratorDone","error_","pred","useCreateNFTRedpacketGas","Skeleton","Close","CloseIcon","AddCircleOutline","AddCircleOutlineIcon","useLastRecognizedIdentity","overflowX","backgroundClip","tokenSelectorParent","addWrapper","divider","addIcon","closeIconWrapperBack","closeIconWrapper","closeIcon","optionLeft","approveAllTip","toolbar","disabledSelector","skeleton","rectangle","RedPacketERC721Form","setIsNFTRedPacketLoaded","openNFTConfirmDialog","setOpenNFTConfirmDialog","openSelectNFTDialog","setOpenSelectNFTDialog","selectOption","setSelectOption","setCollection","manualSelectedTokenDetailedList","onceAllSelectedTokenDetailedList","setAllTokenDetailedList","tokenDetailedList","lastRecognized","isGasFeeGreaterThanOneETH","assets_","removeToken","maxSelectShares","min","clearToken","clearContract","erc721_insufficient_balance","erc721_create_lucky_drop","handleClose","onBack","nft_select_all_option","nft_select_partially_option","val","nft_approve_all_tip","mx","erc721_gas_cap","disableInteractive","PopperProps","Tab","TabContext","PluginID","useGasPrice","InjectedDialog","NetworkTab","GasEditor","MaskTabList","useTabs","useActivatedPlugin","Telemetry","EventID","EventType","currentTab","showHistory","isDim","darkBackgroundColor","abstractTabWrapper","arrowButton","CreateRedPacketPageStep","NewRedPacketPage","ConfirmPage","RedPacketDialog","setShowHistory","setGasOption","step","setStep","isNFTRedPacketLoaded","_chainId","approvalDefinition","chainIdList","enableRequirement","web3","supportedChainIds","BSC","Matic","setSettings","onCreateOrSelect","alert","prompt","signMessage","captureEvent","Access","EntryAppLuckCreate","SmartPay","smartPayDialogEvent","sendToAll","onDialogClose","_onChange","handleCreated","isCreateStep","nft_select_collection","display_name","details","defaultGasPrice","handleGasSettingChange","editor","fromConfig","config","getGasConfig","maxFeePerGas","maxPriorityFeePerGas","isOpenFromApplicationBoard","titleTail","History","titleTabs","aria-label","erc20_tab_title","erc721_tab_title","networkTabs","chains","hideArrowButton","isOnBack","disableTitleBorder","DefaultWeb3ContextProvider","RedPacketInjection","setOpen","setSource","redpacketDialogEvent","pluginId","Web3Accounts","Accounts_","accounts","sign","useClaimCallback","contractTransaction","claim","SelectProviderModal","flexBasis","OperationFooter","isClaiming","onShare","onClaimOrRefund","currentChainId","getObtainButton","plugin_wallet_invalid_network","sx","claiming","startIcon","Shared","ActionButtonPromiseProps","hideRiskWarningConfirmed","Wallet","TransactionConfirmModal","Sniffings","parseColor","useNetwork","useNetworkContext","TokenType","Card","Stack","outdated","backgroundImage","header","bottomContent","myStatus","alignSelf","black","setAlpha","textTransform","words","WebkitLineClamp","WebkitBoxOrient","wordBreak","minWidth","messageBox","tokenLabel","payloadChainId","availabilityComputed","postLink","claimTxHash","claimCallback","signature","shareText","isOnTwitter","is_twitter_page","isOnFacebook","is_facebook_page","shareTextOption","twitter_account","facebook_account","interpolation","escapeValue","share_message_official_account","share_message_not_twitter","share_unclaimed_message_official_account","share_unclaimed_message_not_twitter","_isRefunded","checkResult","Fungible","messageTextForNFT","claim_nft_successful","messageTextForFT","claim_token_successful","lucky_drop","description_claimed","subtitle","description_refund","description_refunded","description_expired","description_empty","description_broken","i18nParams","description_failover_other","description_failover_one","handleShare","elevation","resolveRedPacketStatus","RedPacketInPost","fromUrl","EXTRA_GAS_PER_NFT","useClaimNftRedpacketCallback","signedMsg","transaction","useDetectOverflow","NFTFallbackImage","LoadingStatus","ReloadStatus","useNonFungibleAsset","card","remain","buttonWrapper","claimedTokenWrapper","tokenImageWrapper","claimedText","badge","badgeText","imgWrapper","description","textIndent","hidden","fallbackImageWrapper","RedPacketNft","retryAvailability","availabilityError","showTooltip","textRef","account_promote","context","nft_share_claimed_message","nft_share_foreshow_message","openNFTDialog","nonFungibleTokenDialogEvent","asset","loadingAsset","getNonFungibleAsset","nonFungibleTokenId","nonFungibleTokenAddress","NonFungible","go_wrong","onRetry","iconSize","got_nft","completed","ThemeProvider","MaskLightTheme","RedPacketNftInPost","updateRedPacketNft","ApplicationEntry","base","Render","containerStyle","site","init","DecryptedInspector","meta","isOk","CompositionDialogMetadataBadgeRender","_payload","ERC20RedpacketBadge","fallback","GlobalInjection","CompositionDialogEntry","dialog","ApplicationEntries","recommendFeature","isFirst","ApplicationEntryID","ID","RenderEntryComponent","EntryComponentProps","EntryAppLuckOpen","appBoardSortingDefaultPriority","marketListSortingPriority","tutorialLink","category","WeakMap","localImpl","React","unreachable","useFungibleTokenSpenders","ApproveStateType","useERC20TokenApproveCallback","isGte","HelpOutline","helpIcon","infiniteUnlockContent","showHelperToken","failedContent","tokenBalance","spenders","spendersLoading","isError","refetch","approveAmount","approveStateType","allowance","transactionState","approved","some","tokenInfo","UPDATING","loadingApprove","onApprove","wallet_load_retry","disableDefaultIcon","endIcon","plugin_wallet_token_infinite_unlock_tips","provider","leaveDelay","disableFocusListener","disableTouchListener","plugin_wallet_token_infinite_unlock","svg","xmlns","viewBox","path","d","rect","y","rx","fillRule","clipRule","defs","linearGradient","x1","x2","y1","y2","gradientUnits","offset","stopColor","stopOpacity","FALSE","useWeb3State","useRiskWarningApproved","RiskWarning","useNativeTokenBalance","WalletRiskWarningModal","offChain","chainIdValid","buttonClass","plugin_wallet_confirm_risk_warning","plugin_wallet_update_gas_fee","plugin_wallet_no_gas_fee","currentPersona","myPersonas","rawPublicKey","forwardRef","formHelperTextClasses","TextField","inputBaseClasses","alpha","MaskColorVar","getMaskColor","required","redMain","MozAppearance","WebkitAppearance","focused","boxShadow","is_dashboard_page","inputDisabled","inputFocused","outline","helperText","rest","mb","disableUnderline","setOverflow","node","offsetWidth","scrollWidth","Ok","Err","Some","None","z_schema","produce","enableMapSet","metadataSchemaStore","getKnownMetadataKeys","keys","getMetadataSchema","registerMetadataSchema","jsonSchema","readTypedMessageMetadataUntyped","EMPTY","console","warn","isDataMatchJSONSchema","isErr","validator","validate","getLastErrors","metadataReader","render","immer_setup","editTypedMessageMeta","typedMessage","edit","renderWithMetadataUntyped","useQuery","useWeb3Connection","enabled","BalanceNotifier","queryKey","queryFn","getBalance","emitter","getFungibleTokenSpenders","asyncIteratorToArray","getNonFungibleCollectionsByOwner","networkPluginId","createContract","ABI","getWeb3","useContracts","listOfAddress","approveAllNonFungibleTokens","confirmTransaction","AbortSignal","timeout","useGasOptions","setGasConfig","gasOptions","fromGasOptions","getGasPrice","keccak256","abiCoder","abis","listOfTopic0","abi","inputs","idx","indexOf","topics","decodeLog","anonymous","raw","reduce","accumulate"],"sourceRoot":"","x_google_ignoreList":[12,37,43,64,80]}