{"version":3,"file":"bundled/npm-ns.metaplex-foundation.mpl-auction.js","mappings":";;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;;;;;;;ACVa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe,GAAG,mBAAmB,GAAG,kBAAkB,GAAG,gBAAgB,GAAG,WAAW,GAAG,sBAAsB,GAAG,oBAAoB,GAAG,oBAAoB;AAClK,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,gCAAgC,mBAAO,CAAC,KAAO;AAC/C,iBAAiB,mBAAO,CAAC,IAAQ;AACjC,yBAAyB,mBAAO,CAAC,KAAmB;AACpD,yBAAyB,mBAAO,CAAC,IAAkB;AACnD,oBAAoB,mBAAO,CAAC,KAAa;AACzC;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C,oBAAoB,KAAK;AACpE;AACA;AACA;AACA;AACA,CAAC,0CAA0C,oBAAoB,KAAK;AACpE;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;AAC1E;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6BAA6B;AACnD,sBAAsB,6BAA6B;AACnD,2BAA2B,6BAA6B;AACxD,yBAAyB,6BAA6B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe;AACf;;;;;;;;ACpMa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB,GAAG,2BAA2B;AACrD,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,yBAAyB,mBAAO,CAAC,KAAmB;AACpD,iBAAiB,mBAAO,CAAC,IAAQ;AACjC,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,mBAAmB,6BAA6B;AAChD,gCAAgC,4BAA4B;AAC5D,2BAA2B,6BAA6B;AACxD,eAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;;;;;;;ACzCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB,GAAG,0BAA0B;AACnD,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,yBAAyB,mBAAO,CAAC,KAAmB;AACpD,iBAAiB,mBAAO,CAAC,IAAQ;AACjC;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;;;;;;;AC1Ca;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,qBAAqB;AACzC,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,yBAAyB,mBAAO,CAAC,KAAmB;AACpD,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,iBAAiB,mBAAO,CAAC,IAAQ;AACjC;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;;;;;;;ACxCa;AACb;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,mBAAO,CAAC,KAAoB;AACzC,aAAa,mBAAO,CAAC,KAA4B;AACjD,aAAa,mBAAO,CAAC,IAA2B;AAChD,aAAa,mBAAO,CAAC,KAAsB;AAC3C,aAAa,mBAAO,CAAC,KAAkB;AACvC,aAAa,mBAAO,CAAC,KAAgB;;;;;;;;ACjBxB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,qBAAqB;AACzC,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,oBAAoB,mBAAO,CAAC,KAAmB;AAC/C,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,yBAAyB,mBAAO,CAAC,KAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6GAA6G;AAC7H,+CAA+C,+BAA+B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB;;;;;;;;AC3FJ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,GAAG,yBAAyB,GAAG,mBAAmB,GAAG,uBAAuB;AACjG,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,yBAAyB,mBAAO,CAAC,KAAmB;AACpD,kBAAkB,mBAAO,CAAC,KAAqB;AAC/C;AACA;AACA;AACA;AACA,CAAC,gDAAgD,uBAAuB,KAAK;AAC7E;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD,yBAAyB,6BAA6B;AACtD;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD,oCAAoC,4BAA4B;AAChE;AACA;AACA;AACA;AACA;AACA,gBAAgB,0CAA0C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qBAAqB;;;;;;;;AChFR;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB,GAAG,2BAA2B;AACrD,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,yBAAyB,mBAAO,CAAC,KAAmB;AACpD,kBAAkB,mBAAO,CAAC,KAAqB;AAC/C,wBAAwB,mBAAO,CAAC,KAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD,yBAAyB,6BAA6B;AACtD;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD,oCAAoC,4BAA4B;AAChE,+BAA+B,6BAA6B;AAC5D,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA,gBAAgB,0CAA0C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB;;;;;;;;ACzEV;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,GAAG,oBAAoB;AACvC,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,yBAAyB,mBAAO,CAAC,KAAmB;AACpD,oBAAoB,mBAAO,CAAC,KAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B,gBAAgB,wIAAwI;AACxJ,8CAA8C,uCAAuC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;;;;;;;;ACvGH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B,GAAG,+BAA+B;AAC7D,mBAAmB,mBAAO,CAAC,KAA+B;AAC1D,kBAAkB,mBAAO,CAAC,KAAiB;AAC3C,yBAAyB,mBAAO,CAAC,KAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,gBAAgB,0CAA0C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B;;;;;;;;AC1Cd;AACb;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,mBAAO,CAAC,KAAa;AAClC,aAAa,mBAAO,CAAC,KAAiB;AACtC,aAAa,mBAAO,CAAC,KAAmB;AACxC,aAAa,mBAAO,CAAC,KAAY;AACjC,aAAa,mBAAO,CAAC,KAAuB","sources":["webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-auction@0.0.2/node_modules/@metaplex-foundation/mpl-auction/dist/src/AuctionProgram.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-auction@0.0.2/node_modules/@metaplex-foundation/mpl-auction/dist/src/accounts/Auction.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-auction@0.0.2/node_modules/@metaplex-foundation/mpl-auction/dist/src/accounts/AuctionExtended.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-auction@0.0.2/node_modules/@metaplex-foundation/mpl-auction/dist/src/accounts/BidderMetadata.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-auction@0.0.2/node_modules/@metaplex-foundation/mpl-auction/dist/src/accounts/BidderPot.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-auction@0.0.2/node_modules/@metaplex-foundation/mpl-auction/dist/src/mpl-auction.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-auction@0.0.2/node_modules/@metaplex-foundation/mpl-auction/dist/src/transactions/CancelBid.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-auction@0.0.2/node_modules/@metaplex-foundation/mpl-auction/dist/src/transactions/CreateAuction.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-auction@0.0.2/node_modules/@metaplex-foundation/mpl-auction/dist/src/transactions/CreateAuctionV2.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-auction@0.0.2/node_modules/@metaplex-foundation/mpl-auction/dist/src/transactions/PlaceBid.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-auction@0.0.2/node_modules/@metaplex-foundation/mpl-auction/dist/src/transactions/SetAuctionAuthority.js","webpack://mask-network/./node_modules/.pnpm/@metaplex-foundation+mpl-auction@0.0.2/node_modules/@metaplex-foundation/mpl-auction/dist/src/transactions/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuctionProgram = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nclass AuctionProgram extends mpl_core_1.Program {\n}\nexports.AuctionProgram = AuctionProgram;\nAuctionProgram.PREFIX = 'auction';\nAuctionProgram.EXTENDED = 'extended';\nAuctionProgram.PUBKEY = new web3_js_1.PublicKey(mpl_core_1.config.programs.auction);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Auction = exports.AuctionData = exports.PriceFloor = exports.BidState = exports.Bid = exports.PriceFloorType = exports.BidStateType = exports.AuctionState = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_1 = require(\"buffer\");\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\nconst BidderMetadata_1 = require(\"./BidderMetadata\");\nconst BidderPot_1 = require(\"./BidderPot\");\nvar AuctionState;\n(function (AuctionState) {\n    AuctionState[AuctionState[\"Created\"] = 0] = \"Created\";\n    AuctionState[AuctionState[\"Started\"] = 1] = \"Started\";\n    AuctionState[AuctionState[\"Ended\"] = 2] = \"Ended\";\n})(AuctionState = exports.AuctionState || (exports.AuctionState = {}));\nvar BidStateType;\n(function (BidStateType) {\n    BidStateType[BidStateType[\"EnglishAuction\"] = 0] = \"EnglishAuction\";\n    BidStateType[BidStateType[\"OpenEdition\"] = 1] = \"OpenEdition\";\n})(BidStateType = exports.BidStateType || (exports.BidStateType = {}));\nvar PriceFloorType;\n(function (PriceFloorType) {\n    PriceFloorType[PriceFloorType[\"None\"] = 0] = \"None\";\n    PriceFloorType[PriceFloorType[\"Minimum\"] = 1] = \"Minimum\";\n    PriceFloorType[PriceFloorType[\"BlindedPrice\"] = 2] = \"BlindedPrice\";\n})(PriceFloorType = exports.PriceFloorType || (exports.PriceFloorType = {}));\nclass Bid extends mpl_core_1.Borsh.Data {\n}\nexports.Bid = Bid;\nBid.SCHEMA = Bid.struct([\n    ['key', 'pubkeyAsString'],\n    ['amount', 'u64'],\n]);\nclass BidState extends mpl_core_1.Borsh.Data {\n    getWinnerAt(winnerIndex) {\n        const convertedIndex = this.bids.length - winnerIndex - 1;\n        if (convertedIndex >= 0 && convertedIndex < this.bids.length) {\n            return this.bids[convertedIndex].key;\n        }\n        else {\n            return null;\n        }\n    }\n    getAmountAt(winnerIndex) {\n        const convertedIndex = this.bids.length - winnerIndex - 1;\n        if (convertedIndex >= 0 && convertedIndex < this.bids.length) {\n            return this.bids[convertedIndex].amount;\n        }\n        else {\n            return null;\n        }\n    }\n    getWinnerIndex(bidder) {\n        if (!this.bids) {\n            return null;\n        }\n        const index = this.bids.findIndex((b) => b.key === bidder);\n        if (index !== -1) {\n            const zeroBased = this.bids.length - index - 1;\n            return zeroBased < this.max.toNumber() ? zeroBased : null;\n        }\n        return null;\n    }\n}\nexports.BidState = BidState;\nBidState.SCHEMA = new Map([\n    ...Bid.SCHEMA,\n    ...BidState.struct([\n        ['type', 'u8'],\n        ['bids', [Bid]],\n        ['max', 'u64'],\n    ]),\n]);\nclass PriceFloor extends mpl_core_1.Borsh.Data {\n    constructor(args) {\n        super();\n        this.type = args.type;\n        this.hash = args.hash || new Uint8Array(32);\n        if (this.type === PriceFloorType.Minimum) {\n            if (args.minPrice) {\n                this.hash.set(args.minPrice.toArrayLike(buffer_1.Buffer, 'le', 8), 0);\n            }\n            else {\n                this.minPrice = new bn_js_1.default((args.hash || new Uint8Array(0)).slice(0, 8), 'le');\n            }\n        }\n    }\n}\nexports.PriceFloor = PriceFloor;\nPriceFloor.SCHEMA = PriceFloor.struct([\n    ['type', 'u8'],\n    ['hash', [32]],\n]);\nclass AuctionData extends mpl_core_1.Borsh.Data {\n}\nexports.AuctionData = AuctionData;\nAuctionData.SCHEMA = new Map([\n    ...BidState.SCHEMA,\n    ...PriceFloor.SCHEMA,\n    ...AuctionData.struct([\n        ['authority', 'pubkeyAsString'],\n        ['tokenMint', 'pubkeyAsString'],\n        ['lastBid', { kind: 'option', type: 'u64' }],\n        ['endedAt', { kind: 'option', type: 'u64' }],\n        ['endAuctionAt', { kind: 'option', type: 'u64' }],\n        ['auctionGap', { kind: 'option', type: 'u64' }],\n        ['priceFloor', PriceFloor],\n        ['state', 'u8'],\n        ['bidState', BidState],\n    ]),\n]);\nclass Auction extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(AuctionProgram_1.AuctionProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        this.data = AuctionData.deserialize(this.info.data);\n    }\n    static getPDA(vault) {\n        return AuctionProgram_1.AuctionProgram.findProgramAddress([\n            buffer_1.Buffer.from(AuctionProgram_1.AuctionProgram.PREFIX),\n            AuctionProgram_1.AuctionProgram.PUBKEY.toBuffer(),\n            new web3_js_1.PublicKey(vault).toBuffer(),\n        ]);\n    }\n    static findMany(connection, filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield AuctionProgram_1.AuctionProgram.getProgramAccounts(connection, {\n                filters: [\n                    filters.authority && {\n                        memcmp: {\n                            offset: 0,\n                            bytes: new web3_js_1.PublicKey(filters.authority).toBase58(),\n                        },\n                    },\n                ].filter(Boolean),\n            }))\n                .map((account) => {\n                try {\n                    return Auction.from(account);\n                }\n                catch (err) { }\n            })\n                .filter(Boolean);\n        });\n    }\n    getBidderPots(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield AuctionProgram_1.AuctionProgram.getProgramAccounts(connection, {\n                filters: [\n                    {\n                        dataSize: BidderPot_1.BidderPot.DATA_SIZE,\n                    },\n                    {\n                        memcmp: {\n                            offset: 32 + 32,\n                            bytes: this.pubkey.toBase58(),\n                        },\n                    },\n                ],\n            })).map((account) => BidderPot_1.BidderPot.from(account));\n        });\n    }\n    getBidderMetadata(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield AuctionProgram_1.AuctionProgram.getProgramAccounts(connection, {\n                filters: [\n                    {\n                        dataSize: BidderMetadata_1.BidderMetadata.DATA_SIZE,\n                    },\n                    {\n                        memcmp: {\n                            offset: 32,\n                            bytes: this.pubkey.toBase58(),\n                        },\n                    },\n                ],\n            })).map((account) => BidderMetadata_1.BidderMetadata.from(account));\n        });\n    }\n}\nexports.Auction = Auction;\nAuction.EXTENDED_DATA_SIZE = 8 + 9 + 2 + 200;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuctionExtended = exports.AuctionDataExtended = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\nconst buffer_1 = require(\"buffer\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nclass AuctionDataExtended extends mpl_core_1.Borsh.Data {\n}\nexports.AuctionDataExtended = AuctionDataExtended;\nAuctionDataExtended.SCHEMA = AuctionDataExtended.struct([\n    ['totalUncancelledBids', 'u64'],\n    ['tickSize', { kind: 'option', type: 'u64' }],\n    ['gapTickSizePercentage', { kind: 'option', type: 'u8' }],\n    ['instantSalePrice', { kind: 'option', type: 'u64' }],\n    ['name', { kind: 'option', type: [32] }],\n]);\nclass AuctionExtended extends mpl_core_1.Account {\n    constructor(pubkey, info) {\n        super(pubkey, info);\n        if (!this.assertOwner(AuctionProgram_1.AuctionProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!AuctionExtended.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = AuctionDataExtended.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data.length === AuctionExtended.DATA_SIZE;\n    }\n    static getPDA(vault) {\n        return AuctionProgram_1.AuctionProgram.findProgramAddress([\n            buffer_1.Buffer.from(AuctionProgram_1.AuctionProgram.PREFIX),\n            AuctionProgram_1.AuctionProgram.PUBKEY.toBuffer(),\n            new web3_js_1.PublicKey(vault).toBuffer(),\n            buffer_1.Buffer.from(AuctionProgram_1.AuctionProgram.EXTENDED),\n        ]);\n    }\n}\nexports.AuctionExtended = AuctionExtended;\nAuctionExtended.DATA_SIZE = 8 + 9 + 2 + 200;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BidderMetadata = exports.BidderMetadataData = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\nconst buffer_1 = require(\"buffer\");\nclass BidderMetadataData extends mpl_core_1.Borsh.Data {\n}\nexports.BidderMetadataData = BidderMetadataData;\nBidderMetadataData.SCHEMA = BidderMetadataData.struct([\n    ['bidderPubkey', 'pubkeyAsString'],\n    ['auctionPubkey', 'pubkeyAsString'],\n    ['lastBid', 'u64'],\n    ['lastBidTimestamp', 'u64'],\n    ['cancelled', 'u8'],\n]);\nclass BidderMetadata extends mpl_core_1.Account {\n    constructor(key, info) {\n        super(key, info);\n        if (!this.assertOwner(AuctionProgram_1.AuctionProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!BidderMetadata.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = BidderMetadataData.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data.length === BidderMetadata.DATA_SIZE;\n    }\n    static getPDA(auction, bidder) {\n        return AuctionProgram_1.AuctionProgram.findProgramAddress([\n            buffer_1.Buffer.from(AuctionProgram_1.AuctionProgram.PREFIX),\n            AuctionProgram_1.AuctionProgram.PUBKEY.toBuffer(),\n            new web3_js_1.PublicKey(auction).toBuffer(),\n            new web3_js_1.PublicKey(bidder).toBuffer(),\n            buffer_1.Buffer.from('metadata'),\n        ]);\n    }\n}\nexports.BidderMetadata = BidderMetadata;\nBidderMetadata.DATA_SIZE = 32 + 32 + 8 + 8 + 1;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BidderPot = exports.BidderPotData = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst buffer_1 = require(\"buffer\");\nclass BidderPotData extends mpl_core_1.Borsh.Data {\n}\nexports.BidderPotData = BidderPotData;\nBidderPotData.SCHEMA = BidderPotData.struct([\n    ['bidderPot', 'pubkeyAsString'],\n    ['bidderAct', 'pubkeyAsString'],\n    ['auctionAct', 'pubkeyAsString'],\n    ['emptied', 'u8'],\n]);\nclass BidderPot extends mpl_core_1.Account {\n    constructor(key, info) {\n        super(key, info);\n        if (!this.assertOwner(AuctionProgram_1.AuctionProgram.PUBKEY)) {\n            throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n        }\n        if (!BidderPot.isCompatible(this.info.data)) {\n            throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n        }\n        this.data = BidderPotData.deserialize(this.info.data);\n    }\n    static isCompatible(data) {\n        return data.length === BidderPot.DATA_SIZE;\n    }\n    static getPDA(auction, bidder) {\n        return AuctionProgram_1.AuctionProgram.findProgramAddress([\n            buffer_1.Buffer.from(AuctionProgram_1.AuctionProgram.PREFIX),\n            AuctionProgram_1.AuctionProgram.PUBKEY.toBuffer(),\n            new web3_js_1.PublicKey(auction).toBuffer(),\n            new web3_js_1.PublicKey(bidder).toBuffer(),\n        ]);\n    }\n}\nexports.BidderPot = BidderPot;\nBidderPot.DATA_SIZE = 32 + 32 + 32 + 1;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./accounts/Auction\"), exports);\n__exportStar(require(\"./accounts/AuctionExtended\"), exports);\n__exportStar(require(\"./accounts/BidderMetadata\"), exports);\n__exportStar(require(\"./accounts/BidderPot\"), exports);\n__exportStar(require(\"./AuctionProgram\"), exports);\n__exportStar(require(\"./transactions\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancelBid = exports.CancelBidArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\nclass CancelBidArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 0;\n    }\n}\nexports.CancelBidArgs = CancelBidArgs;\nCancelBidArgs.SCHEMA = CancelBidArgs.struct([\n    ['instruction', 'u8'],\n    ['resource', 'pubkeyAsString'],\n]);\nclass CancelBid extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { auction, auctionExtended, bidderPot, bidderMeta, bidder, bidderToken, bidderPotToken, tokenMint, resource, } = params;\n        const data = CancelBidArgs.serialize({ resource: resource.toString() });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: bidder,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidderToken,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidderPot,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidderPotToken,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidderMeta,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auctionExtended,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: tokenMint,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: AuctionProgram_1.AuctionProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.CancelBid = CancelBid;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateAuction = exports.CreateAuctionArgs = exports.WinnerLimit = exports.WinnerLimitType = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\nconst Auction_1 = require(\"../accounts/Auction\");\nvar WinnerLimitType;\n(function (WinnerLimitType) {\n    WinnerLimitType[WinnerLimitType[\"Unlimited\"] = 0] = \"Unlimited\";\n    WinnerLimitType[WinnerLimitType[\"Capped\"] = 1] = \"Capped\";\n})(WinnerLimitType = exports.WinnerLimitType || (exports.WinnerLimitType = {}));\nclass WinnerLimit extends mpl_core_1.Borsh.Data {\n}\nexports.WinnerLimit = WinnerLimit;\nWinnerLimit.SCHEMA = WinnerLimit.struct([\n    ['type', 'u8'],\n    ['usize', 'u64'],\n]);\nclass CreateAuctionArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 1;\n    }\n}\nexports.CreateAuctionArgs = CreateAuctionArgs;\nCreateAuctionArgs.SCHEMA = new Map([\n    ...WinnerLimit.SCHEMA,\n    ...Auction_1.PriceFloor.SCHEMA,\n    ...CreateAuctionArgs.struct([\n        ['instruction', 'u8'],\n        ['winners', WinnerLimit],\n        ['endAuctionAt', { kind: 'option', type: 'u64' }],\n        ['auctionGap', { kind: 'option', type: 'u64' }],\n        ['tokenMint', 'pubkeyAsString'],\n        ['authority', 'pubkeyAsString'],\n        ['resource', 'pubkeyAsString'],\n        ['priceFloor', Auction_1.PriceFloor],\n        ['tickSize', { kind: 'option', type: 'u64' }],\n        ['gapTickSizePercentage', { kind: 'option', type: 'u8' }],\n    ]),\n]);\nclass CreateAuction extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { args, auction, auctionExtended, creator } = params;\n        const data = CreateAuctionArgs.serialize(args);\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: creator,\n                    isSigner: true,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auctionExtended,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: AuctionProgram_1.AuctionProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.CreateAuction = CreateAuction;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateAuctionV2 = exports.CreateAuctionV2Args = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\nconst Auction_1 = require(\"../accounts/Auction\");\nconst CreateAuction_1 = require(\"./CreateAuction\");\nclass CreateAuctionV2Args extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 7;\n    }\n}\nexports.CreateAuctionV2Args = CreateAuctionV2Args;\n_a = CreateAuctionV2Args;\nCreateAuctionV2Args.SCHEMA = new Map([\n    ...CreateAuction_1.WinnerLimit.SCHEMA,\n    ...Auction_1.PriceFloor.SCHEMA,\n    ..._a.struct([\n        ['instruction', 'u8'],\n        ['winners', CreateAuction_1.WinnerLimit],\n        ['endAuctionAt', { kind: 'option', type: 'u64' }],\n        ['auctionGap', { kind: 'option', type: 'u64' }],\n        ['tokenMint', 'pubkeyAsString'],\n        ['authority', 'pubkeyAsString'],\n        ['resource', 'pubkeyAsString'],\n        ['priceFloor', Auction_1.PriceFloor],\n        ['tickSize', { kind: 'option', type: 'u64' }],\n        ['gapTickSizePercentage', { kind: 'option', type: 'u8' }],\n        ['instantSalePrice', { kind: 'option', type: 'u64' }],\n        ['name', { kind: 'option', type: [32] }],\n    ]),\n]);\nclass CreateAuctionV2 extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { args, auction, auctionExtended, creator } = params;\n        const data = CreateAuctionV2Args.serialize(args);\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: creator,\n                    isSigner: true,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auctionExtended,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: AuctionProgram_1.AuctionProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.CreateAuctionV2 = CreateAuctionV2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PlaceBid = exports.PlaceBidArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nclass PlaceBidArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 6;\n    }\n}\nexports.PlaceBidArgs = PlaceBidArgs;\nPlaceBidArgs.SCHEMA = PlaceBidArgs.struct([\n    ['instruction', 'u8'],\n    ['amount', 'u64'],\n    ['resource', 'pubkeyAsString'],\n]);\nclass PlaceBid extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { feePayer } = options;\n        const { auction, auctionExtended, bidderPot, bidderMeta, bidder, bidderToken, bidderPotToken, tokenMint, transferAuthority, resource, amount, } = params;\n        const data = PlaceBidArgs.serialize({ resource: resource.toString(), amount });\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: bidder,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: bidderToken,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidderPot,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidderPotToken,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: bidderMeta,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: auctionExtended,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: tokenMint,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: transferAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: feePayer,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_CLOCK_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: web3_js_1.SystemProgram.programId,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                {\n                    pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: AuctionProgram_1.AuctionProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.PlaceBid = PlaceBid;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetAuctionAuthority = exports.SetAuctionAuthorityArgs = void 0;\nconst mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst AuctionProgram_1 = require(\"../AuctionProgram\");\nclass SetAuctionAuthorityArgs extends mpl_core_1.Borsh.Data {\n    constructor() {\n        super(...arguments);\n        this.instruction = 5;\n    }\n}\nexports.SetAuctionAuthorityArgs = SetAuctionAuthorityArgs;\nSetAuctionAuthorityArgs.SCHEMA = SetAuctionAuthorityArgs.struct([['instruction', 'u8']]);\nclass SetAuctionAuthority extends mpl_core_1.Transaction {\n    constructor(options, params) {\n        super(options);\n        const { auction, currentAuthority, newAuthority } = params;\n        const data = SetAuctionAuthorityArgs.serialize();\n        this.add(new web3_js_1.TransactionInstruction({\n            keys: [\n                {\n                    pubkey: auction,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: currentAuthority,\n                    isSigner: true,\n                    isWritable: false,\n                },\n                {\n                    pubkey: newAuthority,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ],\n            programId: AuctionProgram_1.AuctionProgram.PUBKEY,\n            data,\n        }));\n    }\n}\nexports.SetAuctionAuthority = SetAuctionAuthority;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./CancelBid\"), exports);\n__exportStar(require(\"./CreateAuction\"), exports);\n__exportStar(require(\"./CreateAuctionV2\"), exports);\n__exportStar(require(\"./PlaceBid\"), exports);\n__exportStar(require(\"./SetAuctionAuthority\"), exports);\n"],"names":[],"sourceRoot":"","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}