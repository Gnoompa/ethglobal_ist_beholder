{"version":3,"file":"bundled/chunk.7944.js","mappings":"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","sources":["webpack://mask-network/./packages/shared-base/src/helpers/getDefaultWalletPassword.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/hooks/usePasswordForm.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/SetPaymentPassword/index.tsx"],"sourcesContent":["export function getDefaultWalletPassword() {\n    return 'MASK NETWORK'.split('').reverse().join('')\n}\n","import { useMemo } from 'react'\nimport { z as zod } from 'zod'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useForm, type UseFormReturn } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\n\nfunction defineSchema(refine: boolean, t: ReturnType<typeof useMaskSharedTrans>) {\n    return zod\n        .object({\n            password: zod\n                .string()\n                .min(6, t.popups_wallet_password_length_error())\n                .max(20, t.popups_wallet_password_length_error()),\n            confirm: zod.string().optional(),\n        })\n        .refine((data) => !refine || data.password === data.confirm, {\n            message: t.popups_wallet_password_not_match(),\n            path: ['confirm'],\n        })\n}\nexport function usePasswordForm(refine = true): UseFormReturn<\n    {\n        confirm?: string | undefined\n        password: string\n    },\n    object\n> & {\n    schema: ReturnType<typeof defineSchema>\n} {\n    const t = useMaskSharedTrans()\n\n    const schema = useMemo(() => {\n        return defineSchema(refine, t)\n    }, [refine, t])\n\n    const formValue = useForm<zod.infer<typeof schema>>({\n        mode: 'onBlur',\n        resolver: zodResolver(schema),\n        defaultValues: {\n            password: '',\n            confirm: '',\n        },\n    })\n\n    return { ...formValue, schema }\n}\n","import { Icons } from '@masknet/icons'\nimport { FormattedBalance, ProgressiveText } from '@masknet/shared'\nimport {\n    CrossIsolationMessages,\n    NetworkPluginID,\n    PopupRoutes,\n    getDefaultWalletPassword,\n    type Wallet,\n} from '@masknet/shared-base'\nimport { queryClient } from '@masknet/shared-base-ui'\nimport { ActionButton, makeStyles, usePopupCustomSnackbar } from '@masknet/theme'\nimport { useBalance, useReverseAddress, useWallets } from '@masknet/web3-hooks-base'\nimport { ExplorerResolver } from '@masknet/web3-providers'\nimport { formatBalance } from '@masknet/web3-shared-base'\nimport { ChainId, formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { Box, Link, Typography, useTheme } from '@mui/material'\nimport { memo, useEffect, useState } from 'react'\nimport { Controller } from 'react-hook-form'\nimport { Trans } from 'react-i18next'\nimport { useNavigate, useOutletContext, useSearchParams } from 'react-router-dom'\nimport { useAsyncFn } from 'react-use'\nimport type { z as zod } from 'zod'\nimport Services from '#services'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { PasswordField } from '../../../components/PasswordField/index.js'\nimport { usePasswordForm } from '../hooks/usePasswordForm.js'\n\nconst useStyles = makeStyles<{ hasNav?: boolean }>()((theme, { hasNav }) => ({\n    container: {\n        display: 'flex',\n        flexGrow: 1,\n        flexDirection: 'column',\n        background: theme.palette.maskColor.secondaryBottom,\n        paddingBottom: hasNav ? 72 : undefined,\n    },\n    content: {\n        position: 'relative',\n        padding: 16,\n        display: 'flex',\n        justifyContent: 'flex-start',\n        flexDirection: 'column',\n        flexGrow: 1,\n    },\n    titleWrapper: {\n        paddingTop: 8,\n        paddingBottom: 12,\n        display: 'flex',\n        flexDirection: 'column',\n        marginBottom: 12,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    addWalletWrapper: {\n        display: 'flex',\n        width: '100%',\n        padding: 12,\n        alignItems: 'center',\n        gap: 8,\n        marginBottom: 12,\n        boxShadow: '0px 0px 20px 0px rgba(0, 0, 0, 0.05)',\n        background: theme.palette.maskColor.bottom,\n        borderRadius: 8,\n        '&:last-child': {\n            marginBottom: '0 !important',\n        },\n    },\n    title: {\n        fontSize: 24,\n        lineHeight: '120%',\n        fontStyle: 'normal',\n        fontWeight: 700,\n        marginBottom: 12,\n    },\n    subTitle: {\n        display: 'flex',\n        alignItems: 'center',\n        color: theme.palette.maskColor.main,\n        fontSize: 12,\n        lineHeight: '16px',\n        fontWeight: 700,\n    },\n    description: {\n        color: theme.palette.maskColor.third,\n        fontWeight: 400,\n    },\n    setPasswordButtonWrapper: {\n        position: 'absolute',\n        width: 368,\n        bottom: 16,\n        marginTop: 12,\n    },\n    bottomAction: {\n        display: 'flex',\n        justifyContent: 'center',\n        background: theme.palette.maskColor.secondaryBottom,\n        boxShadow: '0px 0px 20px 0px rgba(0, 0, 0, 0.05)',\n        marginTop: 'auto',\n        backdropFilter: 'blur(8px)',\n    },\n    confirmButton: {\n        margin: '16px 0',\n    },\n    back: {\n        position: 'absolute',\n        top: 16,\n        left: 16,\n    },\n    form: {\n        width: '100%',\n        flex: 1,\n    },\n    textField: {\n        width: '100%',\n    },\n    strong: {\n        color: theme.palette.maskColor.main,\n    },\n    walletItemList: {\n        height: 240,\n        overflow: 'scroll',\n        '::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n}))\n\ninterface WalletItemProps {\n    wallet: Wallet\n}\n\nconst WalletItem = memo(function WalletItem({ wallet }: WalletItemProps) {\n    const { classes } = useStyles({})\n    const { address, owner } = wallet\n    const chainId = owner ? ChainId.Matic : ChainId.Mainnet\n    const { data: balance = '0', isLoading } = useBalance(NetworkPluginID.PLUGIN_EVM, {\n        account: address,\n        chainId,\n    })\n    const theme = useTheme()\n\n    const { data: domain } = useReverseAddress(NetworkPluginID.PLUGIN_EVM, address)\n\n    return (\n        <Box className={classes.addWalletWrapper}>\n            {owner ? <Icons.SmartPay size={30} /> : <Icons.ETH size={30} />}\n            <div>\n                <Typography className={classes.subTitle}>\n                    {domain || formatEthereumAddress(address, 4)}{' '}\n                    <Link\n                        underline=\"none\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={ExplorerResolver.addressLink(chainId, address)}\n                        marginLeft=\"4px\"\n                        width={16}\n                        height={16}>\n                        <Icons.LinkOut size={16} color={theme.palette.maskColor.main} />\n                    </Link>\n                </Typography>\n                <ProgressiveText loading={isLoading} className={classes.description} fontSize={12} skeletonWidth={50}>\n                    <FormattedBalance\n                        value={balance}\n                        decimals={18}\n                        symbol={owner ? 'Matic' : 'ETH'}\n                        formatter={formatBalance}\n                    />\n                </ProgressiveText>\n            </div>\n        </Box>\n    )\n})\n\nconst SetPaymentPassword = memo(function SetPaymentPassword() {\n    const t = useMaskSharedTrans()\n    const { hasNavigator } = useOutletContext() as { hasNavigator: boolean }\n    const { classes } = useStyles({ hasNav: hasNavigator })\n    const navigate = useNavigate()\n    const wallets = useWallets()\n    const [params] = useSearchParams()\n    const [isCreating, setIsCreating] = useState(!!params.get('isCreating'))\n    const { showSnackbar } = usePopupCustomSnackbar()\n    const theme = useTheme()\n\n    const {\n        control,\n        handleSubmit,\n        setError,\n        formState: { errors, isValid },\n        schema,\n        reset,\n    } = usePasswordForm()\n\n    useEffect(() => {\n        reset({ password: '', confirm: '' })\n    }, [isCreating])\n\n    const [{ loading }, onConfirm] = useAsyncFn(\n        async (data: zod.infer<typeof schema>) => {\n            try {\n                const hasPasswordWithDefaultOne = await Services.Wallet.hasPasswordWithDefaultOne()\n                if (hasPasswordWithDefaultOne) {\n                    await Services.Wallet.changePassword(getDefaultWalletPassword(), data.password)\n                } else {\n                    await Services.Wallet.setPassword(data.password)\n                }\n                queryClient.refetchQueries(['@@has-password'])\n                const hasPassword = await Services.Wallet.hasPassword()\n\n                if (hasPassword) {\n                    const from = params.get('from')\n                    showSnackbar(t.popups_wallet_set_payment_password_successfully(), { variant: 'success' })\n                    CrossIsolationMessages.events.passwordStatusUpdated.sendToAll(true)\n                    params.delete('from')\n                    navigate({ pathname: from || PopupRoutes.Wallet, search: params.toString() }, { replace: true })\n                }\n            } catch (error) {\n                if (error instanceof Error) {\n                    setError('password', { message: error.message })\n                }\n            }\n        },\n        [setError, params],\n    )\n\n    const onSubmit = handleSubmit(onConfirm)\n\n    const errorMsg = errors.password?.message ?? errors.confirm?.message\n\n    return (\n        <Box className={classes.container}>\n            <Box className={classes.content}>\n                <Box className={classes.titleWrapper}>\n                    <Typography className={classes.title}>\n                        {isCreating\n                            ? t.popups_wallet_create_payment_password()\n                            : t.popups_set_the_payment_password_title()}\n                    </Typography>\n                    {isCreating ? (\n                        <Typography className={classes.description} fontSize={14} fontWeight={700}>\n                            {t.popups_wallet_create_payment_password_tip()}\n                        </Typography>\n                    ) : null}\n                </Box>\n                {isCreating ? (\n                    <>\n                        <form className={classes.form} onSubmit={onSubmit}>\n                            <div className={classes.textField} style={{ marginBottom: 12 }}>\n                                <Controller\n                                    control={control}\n                                    render={({ field }) => (\n                                        <PasswordField\n                                            {...field}\n                                            autoFocus\n                                            type=\"password\"\n                                            variant=\"filled\"\n                                            placeholder={t.popups_wallet_payment_password()}\n                                            error={!isValid && !!errors.password?.message}\n                                        />\n                                    )}\n                                    name=\"password\"\n                                />\n                            </div>\n                            <div className={classes.textField}>\n                                <Controller\n                                    render={({ field }) => (\n                                        <PasswordField\n                                            {...field}\n                                            error={!isValid && !!errors.confirm?.message}\n                                            type=\"password\"\n                                            variant=\"filled\"\n                                            placeholder={t.popups_wallet_confirm_password()}\n                                        />\n                                    )}\n                                    name=\"confirm\"\n                                    control={control}\n                                />\n                            </div>\n                            {errorMsg && !isValid ? (\n                                <Typography fontSize={14} color={theme.palette.maskColor.danger} marginTop=\"12px\">\n                                    {errorMsg}\n                                </Typography>\n                            ) : null}\n                        </form>\n                        <Typography\n                            color={theme.palette.maskColor.third}\n                            fontSize={14}\n                            textAlign=\"center\"\n                            fontWeight={700}>\n                            <Trans i18nKey=\"popups_wallet_term_of_service_agree_part_1\" />\n                        </Typography>\n\n                        <Typography\n                            color={theme.palette.maskColor.third}\n                            fontSize={14}\n                            textAlign=\"center\"\n                            fontWeight={700}>\n                            <Trans\n                                i18nKey=\"popups_wallet_term_of_service_agree_part_2\"\n                                components={{\n                                    agreement: (\n                                        <a\n                                            className={classes.strong}\n                                            target=\"_blank\"\n                                            href=\"https://legal.mask.io/maskbook/service-agreement-beta-browser.html\"\n                                        />\n                                    ),\n                                    policy: (\n                                        <a\n                                            className={classes.strong}\n                                            target=\"_blank\"\n                                            href=\"https://legal.mask.io/maskbook/privacy-policy-browser.html\"\n                                        />\n                                    ),\n                                }}\n                            />\n                        </Typography>\n                    </>\n                ) : (\n                    <>\n                        <Box className={classes.walletItemList}>\n                            {wallets.map((wallet, index) => (\n                                <WalletItem wallet={wallet} key={index} />\n                            ))}\n                        </Box>\n                        <div className={classes.setPasswordButtonWrapper}>\n                            <ActionButton fullWidth onClick={() => setIsCreating(true)}>\n                                {t.popups_set_the_payment_password_title()}\n                            </ActionButton>\n                        </div>\n                    </>\n                )}\n            </Box>\n\n            {isCreating ? (\n                <div className={classes.bottomAction}>\n                    <ActionButton\n                        fullWidth\n                        onClick={onSubmit}\n                        loading={loading}\n                        width={368}\n                        className={classes.confirmButton}>\n                        {t.confirm()}\n                    </ActionButton>\n                </div>\n            ) : null}\n\n            {isCreating && !params.get('isCreating') ? (\n                <Icons.Comeback className={classes.back} onClick={() => setIsCreating(false)} />\n            ) : null}\n        </Box>\n    )\n})\nexport default SetPaymentPassword\n"],"names":["getDefaultWalletPassword","split","reverse","join","useMemo","z","zod","useMaskSharedTrans","useForm","zodResolver","defineSchema","refine","t","object","password","string","min","popups_wallet_password_length_error","max","confirm","optional","data","message","popups_wallet_password_not_match","path","usePasswordForm","schema","formValue","mode","resolver","defaultValues","Icons","FormattedBalance","ProgressiveText","CrossIsolationMessages","NetworkPluginID","PopupRoutes","queryClient","ActionButton","makeStyles","usePopupCustomSnackbar","useBalance","useReverseAddress","useWallets","ExplorerResolver","formatBalance","ChainId","formatEthereumAddress","Box","Link","Typography","useTheme","memo","useEffect","useState","Controller","Trans","useNavigate","useOutletContext","useSearchParams","useAsyncFn","Services","PasswordField","useStyles","theme","hasNav","container","display","flexGrow","flexDirection","background","palette","maskColor","secondaryBottom","paddingBottom","undefined","content","position","padding","justifyContent","titleWrapper","paddingTop","marginBottom","alignItems","addWalletWrapper","width","gap","boxShadow","bottom","borderRadius","title","fontSize","lineHeight","fontStyle","fontWeight","subTitle","color","main","description","third","setPasswordButtonWrapper","marginTop","bottomAction","backdropFilter","confirmButton","margin","back","top","left","form","flex","textField","strong","walletItemList","height","overflow","WalletItem","wallet","classes","address","owner","chainId","Matic","Mainnet","balance","isLoading","PLUGIN_EVM","account","domain","className","SmartPay","size","ETH","div","underline","target","rel","href","addressLink","marginLeft","LinkOut","loading","skeletonWidth","value","decimals","symbol","formatter","SetPaymentPassword","hasNavigator","navigate","wallets","params","isCreating","setIsCreating","get","showSnackbar","control","handleSubmit","setError","formState","errors","isValid","reset","onConfirm","hasPasswordWithDefaultOne","Wallet","changePassword","setPassword","refetchQueries","hasPassword","from","popups_wallet_set_payment_password_successfully","variant","events","passwordStatusUpdated","sendToAll","delete","pathname","search","toString","replace","error","Error","onSubmit","errorMsg","popups_wallet_create_payment_password","popups_set_the_payment_password_title","popups_wallet_create_payment_password_tip","style","render","field","autoFocus","type","placeholder","popups_wallet_payment_password","name","popups_wallet_confirm_password","danger","textAlign","i18nKey","components","agreement","a","policy","map","index","fullWidth","onClick","Comeback"],"sourceRoot":"","x_google_ignoreList":[]}