{"version":3,"file":"bundled/chunk.1251.js","mappings":"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AACA;AACA;AACO;AACP,yBAAyB,gBAAM;AAC/B,IAAI,mBAAS;AACb;AACA,KAAK;AACL;AACA;;;ACVO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACA;;;ACV2B;AACyB;AACnB;AACxC;AACA;AACA;AACA;AACA;AACA;AACO;AACP,yBAAyB,kBAAkB;AAC3C,IAAI,mBAAS,gBAAgB,IAAI;AACjC;;;;;;;;ACZa;AACb;AACA;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,cAAc,mBAAO,CAAC,KAAgB;AACtC,kBAAkB,mBAAO,CAAC,KAAkB;AAC5C,YAAY,mBAAO,CAAC,KAAO;AAC3B,eAAe,mBAAO,CAAC,KAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yIAAyI;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,yBAAyB;AACvC,cAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA,8BAA8B,cAAc;AAC5C,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,cAAc;AAC5C,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6CAA6C;AAClE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,cAAc;;;;;;;;;;;;;;;;;;;;ACjTd;AAC+B;AACuC;AACJ;AACP;AACR;AACwB;AACyC;AACxB;;AAE5F;AACA;AACA;AACA,CAAC;AACD,sBAAsB,kFAAc;AACpC;AACA,GAAG;AACH,sBAAsB,yEAAc;AACpC,6BAA6B,iGAA0B;AACvD,2BAA2B,0CAAa;AACxC,uEAAuE;;AAEvE;AACA;AACA,GAAG;AACH;AACA,IAAI,wEAAe;AACnB,IAAI,kGAA+B;AACnC,GAAG;AACH,EAAE,6FAA0B;AAC5B,qBAAqB,2CAAc,WAAW,0EAAe;AAC7D;AACA,EAAE,wFAAoB,CAAC,8CAAiB,qEAAqE,wEAAa;AAC1H,EAAE,4CAAe;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,2EAA2E,sEAAa;AACxF;AACA;AACA;;AAEA;AACA,UAAU,sEAAa;AACvB,eAAe,wEAAe;AAC9B,QAAQ,SAAS,kEAAS;AAC1B,aAAa,wEAAe;AAC5B;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,8EAAW;AACtB;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEsB;AACtB","sources":["webpack://mask-network/./packages/mask/popups/components/BottomController/index.tsx","webpack://mask-network/./packages/mask/popups/components/NormalHeader/index.tsx","webpack://mask-network/./packages/mask/popups/components/SignRequestInfo/index.tsx","webpack://mask-network/./packages/mask/popups/hooks/useHasPassword.ts","webpack://mask-network/./packages/mask/popups/hooks/useParamTab.ts","webpack://mask-network/./packages/mask/popups/hooks/useVerifiedWallets.ts","webpack://mask-network/./packages/shared-base/src/helpers/relativeRouteOf.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNativeTokenBalance.ts","webpack://mask-network/./node_modules/.pnpm/@react-hookz+web@23.1.0_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-experimental-0a360642d-20230711/node_modules/@react-hookz/web/esm/useFirstMountState/index.js","webpack://mask-network/./node_modules/.pnpm/@react-hookz+web@23.1.0_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-experimental-0a360642d-20230711/node_modules/@react-hookz/web/esm/util/const.js","webpack://mask-network/./node_modules/.pnpm/@react-hookz+web@23.1.0_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-experimental-0a360642d-20230711/node_modules/@react-hookz/web/esm/useUpdateEffect/index.js","webpack://mask-network/./node_modules/.pnpm/react-qrcode-logo@2.9.0_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-experimental-0a360642d-20230711/node_modules/react-qrcode-logo/dist/index.js","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/useQueries.mjs"],"sourcesContent":["import { makeStyles } from '@masknet/theme'\nimport { Box } from '@mui/material'\nimport { memo, type PropsWithChildren } from 'react'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        position: 'fixed',\n        bottom: 0,\n        background: theme.palette.maskColor.secondaryBottom,\n        padding: theme.spacing(2),\n        boxShadow: theme.palette.maskColor.bottomBg,\n        backdropFilter: 'blur(8px)',\n        left: 0,\n        right: 0,\n        display: 'flex',\n        columnGap: theme.spacing(2),\n    },\n}))\n\nexport const BottomController = memo<PropsWithChildren>(function BottomController({ children }) {\n    const { classes } = useStyles()\n    return <Box className={classes.container}>{children}</Box>\n})\n","import { memo, useCallback, useContext, type ReactNode } from 'react'\nimport { useNavigate, useOutletContext } from 'react-router-dom'\nimport { Box, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { Icons } from '@masknet/icons'\nimport { PageTitleContext } from '../../hooks/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        background: theme.palette.maskColor.modalTitleBg,\n    },\n    header: {\n        padding: theme.spacing(2),\n        lineHeight: 0,\n        display: 'grid',\n        gridTemplateColumns: '24px auto 24px',\n        alignItems: 'center',\n        flexShrink: 0,\n    },\n    icon: {\n        fontSize: 24,\n        cursor: 'pointer',\n        color: theme.palette.maskColor.main,\n    },\n    title: {\n        fontSize: 18,\n        lineHeight: '22px',\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        minHeight: 22,\n        textAlign: 'center',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        gridArea: '1 / 2',\n    },\n    logo: {\n        width: 96,\n        height: 30,\n    },\n}))\n\ninterface NormalHeaderProps {\n    tabList?: ReactNode\n    onClose?: () => void\n}\n\nfunction canNavBack() {\n    try {\n        return history.length !== 1 || !!new URLSearchParams(location.search).get('goBack')\n    } catch {}\n    return false\n}\nexport const NormalHeader = memo<NormalHeaderProps>(function NormalHeader(props) {\n    const { onClose, tabList } = props\n    const { classes } = useStyles()\n    const navigate = useNavigate()\n    const { title, extension, customBackHandler } = useContext(PageTitleContext)\n\n    const canBack = canNavBack()\n    const showTitle = title !== undefined\n\n    const handleBack = useCallback(() => navigate(-1), [])\n    const { hasNavigator } = useOutletContext() as { hasNavigator: boolean }\n\n    const leftAction = hasNavigator ? null : canBack ? (\n        <Icons.Comeback className={classes.icon} onClick={customBackHandler ?? handleBack} />\n    ) : (\n        <Icons.Close className={classes.icon} onClick={onClose} />\n    )\n\n    return (\n        <Box className={classes.container}>\n            <Box className={classes.header}>\n                {showTitle ? (\n                    <>\n                        {leftAction}\n                        <Typography className={classes.title}>{title}</Typography>\n                        {extension}\n                    </>\n                ) : (\n                    <Icons.Mask className={classes.logo} />\n                )}\n            </Box>\n            {tabList}\n        </Box>\n    )\n})\n","import { makeStyles } from '@masknet/theme'\nimport { memo } from 'react'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport { Box, Typography } from '@mui/material'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n    },\n    title: {\n        fontSize: 24,\n        fontWeight: 700,\n        textAlign: 'center',\n    },\n    source: {\n        padding: theme.spacing(1.25),\n        border: `1px solid ${theme.palette.maskColor.line}`,\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: theme.spacing(1.25),\n        borderRadius: 8,\n    },\n    sourceText: {\n        fontSize: 12,\n        fontWeight: 700,\n        color: theme.palette.maskColor.second,\n    },\n    messageTitle: {\n        fontSize: 14,\n        fontWeight: 700,\n        marginTop: theme.spacing(3),\n    },\n    message: {\n        fontSize: 12,\n        marginTop: theme.spacing(1.5),\n        color: theme.palette.maskColor.second,\n        wordBreak: 'break-all',\n        maxHeight: 260,\n        overflow: 'auto',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n}))\n\ninterface SignRequestInfoProps {\n    message: string\n    source?: string | null\n}\n\nexport const SignRequestInfo = memo<SignRequestInfoProps>(function SignRequestInfo({ message, source }) {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n\n    return (\n        <main className={classes.container}>\n            <Typography className={classes.title}>{t.popups_wallet_signature_request_title()}</Typography>\n            {source ? (\n                <Box className={classes.source}>\n                    <Typography fontSize={16} fontWeight={700}>\n                        {t.popups_wallet_request_source()}\n                    </Typography>\n                    <Typography className={classes.sourceText}>{source}</Typography>\n                </Box>\n            ) : null}\n            <Typography className={classes.messageTitle}>{t.popups_wallet_sign_message()}</Typography>\n            <Typography className={classes.message}>{message}</Typography>\n        </main>\n    )\n})\n","import { useEffect } from 'react'\nimport Services from '#services'\nimport { CrossIsolationMessages } from '@masknet/shared-base'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useHasPassword() {\n    const {\n        data: hasPassword,\n        isLoading,\n        refetch,\n    } = useQuery(['@@has-password'], Services.Wallet.hasPassword, { networkMode: 'always' })\n\n    useEffect(() => {\n        refetch()\n        return CrossIsolationMessages.events.passwordStatusUpdated.on(() => refetch())\n    }, [])\n\n    return { hasPassword, isLoading }\n}\n","import { useCallback } from 'react'\nimport { useSearchParams } from 'react-router-dom'\n\nexport function useParamTab<T extends string>(defaultTab: T) {\n    const [params, setParams] = useSearchParams()\n    const tab = (params.get('tab') || defaultTab) as T\n    const handleTabChange = useCallback(\n        (_: unknown, tab: T) => {\n            setParams(\n                (params) => {\n                    params.set('tab', tab)\n                    return params.toString()\n                },\n                { replace: true },\n            )\n        },\n        [setParams],\n    )\n\n    return [tab, handleTabChange] as const\n}\n","import { type BindingProof, NextIDPlatform, EMPTY_LIST } from '@masknet/shared-base'\nimport { isGreaterThan } from '@masknet/web3-shared-base'\nimport { useMemo } from 'react'\n\nexport function useVerifiedWallets(proofs?: BindingProof[]) {\n    return useMemo(() => {\n        if (!proofs?.length) return EMPTY_LIST\n        return proofs\n            .filter((x) => x.platform === NextIDPlatform.Ethereum)\n            .sort((a, z) => (isGreaterThan(a.last_checked_at, z.last_checked_at) ? -1 : 1))\n    }, [proofs])\n}\n","import type { PopupRoutes, DashboardRoutes } from '../types/Routes.js'\n\nexport function relativeRouteOf(parent: PopupRoutes): (child: PopupRoutes) => string\nexport function relativeRouteOf(parent: DashboardRoutes): (child: DashboardRoutes) => string\nexport function relativeRouteOf(parent: PopupRoutes | DashboardRoutes) {\n    return (child: string) => {\n        if (!child.startsWith(parent)) throw new Error()\n        return child.slice(parent.length).replace(/^\\//, '')\n    }\n}\n","import { useAsyncRetry } from 'react-use'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useNativeTokenBalance<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n) {\n    const { account } = useChainContext({ account: options?.account })\n    const Web3 = useWeb3Connection(pluginID, {\n        account,\n        ...options,\n    })\n\n    return useAsyncRetry(async () => {\n        return Web3.getNativeTokenBalance()\n    }, [account, Web3])\n}\n","import { useEffect, useRef } from 'react';\n/**\n * Returns a boolean that is `true` only on first render.\n */\nexport function useFirstMountState() {\n    const isFirstMount = useRef(true);\n    useEffect(() => {\n        isFirstMount.current = false;\n    }, []);\n    return isFirstMount.current;\n}\n","export const noop = () => { };\nexport const isBrowser = typeof window !== 'undefined' &&\n    typeof navigator !== 'undefined' &&\n    typeof document !== 'undefined';\n/**\n * You should only be reaching for this function when you're attempting to prevent multiple\n * redefinitions of the same function. In-place strict equality checks are more performant.\n */\nexport const isStrictEqual = (prev, next) => prev === next;\nexport const truthyAndArrayPredicate = (conditions) => conditions.every(Boolean);\nexport const truthyOrArrayPredicate = (conditions) => conditions.some(Boolean);\n","import { useEffect } from 'react';\nimport { useFirstMountState } from '../useFirstMountState';\nimport { noop } from \"../util/const.js\";\n/**\n * Effect hook that ignores the first render (not invoked on mount).\n *\n * @param effect Effector to run on updates\n * @param deps Dependencies list, as for `useEffect` hook\n */\nexport function useUpdateEffect(effect, deps) {\n    const isFirstMount = useFirstMountState();\n    useEffect(isFirstMount ? noop : effect, deps);\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QRCode = void 0;\nvar isEqual = require(\"lodash.isequal\");\nvar qrGenerator = require(\"qrcode-generator\");\nvar React = require(\"react\");\nvar ReactDOM = require(\"react-dom\");\nvar QRCode = /** @class */ (function (_super) {\n    __extends(QRCode, _super);\n    function QRCode(props) {\n        var _this = _super.call(this, props) || this;\n        _this.canvas = React.createRef();\n        return _this;\n    }\n    QRCode.utf16to8 = function (str) {\n        var out = '', i, c;\n        var len = str.length;\n        for (i = 0; i < len; i++) {\n            c = str.charCodeAt(i);\n            if ((c >= 0x0001) && (c <= 0x007F)) {\n                out += str.charAt(i);\n            }\n            else if (c > 0x07FF) {\n                out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n                out += String.fromCharCode(0x80 | ((c >> 6) & 0x3F));\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\n            }\n            else {\n                out += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F));\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\n            }\n        }\n        return out;\n    };\n    /**\n     * Draw a rounded square in the canvas\n     */\n    QRCode.prototype.drawRoundedSquare = function (lineWidth, x, y, size, color, radii, fill, ctx) {\n        ctx.lineWidth = lineWidth;\n        ctx.fillStyle = color;\n        ctx.strokeStyle = color;\n        // Adjust coordinates so that the outside of the stroke is aligned to the edges\n        y += lineWidth / 2;\n        x += lineWidth / 2;\n        size -= lineWidth;\n        if (!Array.isArray(radii)) {\n            radii = [radii, radii, radii, radii];\n        }\n        // Radius should not be greater than half the size or less than zero\n        radii = radii.map(function (r) {\n            r = Math.min(r, size / 2);\n            return (r < 0) ? 0 : r;\n        });\n        var rTopLeft = radii[0] || 0;\n        var rTopRight = radii[1] || 0;\n        var rBottomRight = radii[2] || 0;\n        var rBottomLeft = radii[3] || 0;\n        ctx.beginPath();\n        ctx.moveTo(x + rTopLeft, y);\n        ctx.lineTo(x + size - rTopRight, y);\n        if (rTopRight)\n            ctx.quadraticCurveTo(x + size, y, x + size, y + rTopRight);\n        ctx.lineTo(x + size, y + size - rBottomRight);\n        if (rBottomRight)\n            ctx.quadraticCurveTo(x + size, y + size, x + size - rBottomRight, y + size);\n        ctx.lineTo(x + rBottomLeft, y + size);\n        if (rBottomLeft)\n            ctx.quadraticCurveTo(x, y + size, x, y + size - rBottomLeft);\n        ctx.lineTo(x, y + rTopLeft);\n        if (rTopLeft)\n            ctx.quadraticCurveTo(x, y, x + rTopLeft, y);\n        ctx.closePath();\n        ctx.stroke();\n        if (fill) {\n            ctx.fill();\n        }\n    };\n    /**\n     * Draw a single positional pattern eye.\n     */\n    QRCode.prototype.drawPositioningPattern = function (ctx, cellSize, offset, row, col, color, radii) {\n        if (radii === void 0) { radii = [0, 0, 0, 0]; }\n        var lineWidth = Math.ceil(cellSize);\n        var radiiOuter;\n        var radiiInner;\n        if (typeof radii !== 'number' && !Array.isArray(radii)) {\n            radiiOuter = radii.outer || 0;\n            radiiInner = radii.inner || 0;\n        }\n        else {\n            radiiOuter = radii;\n            radiiInner = radiiOuter;\n        }\n        var colorOuter;\n        var colorInner;\n        if (typeof color !== 'string') {\n            colorOuter = color.outer;\n            colorInner = color.inner;\n        }\n        else {\n            colorOuter = color;\n            colorInner = color;\n        }\n        var y = (row * cellSize) + offset;\n        var x = (col * cellSize) + offset;\n        var size = cellSize * 7;\n        // Outer box\n        this.drawRoundedSquare(lineWidth, x, y, size, colorOuter, radiiOuter, false, ctx);\n        // Inner box\n        size = cellSize * 3;\n        y += cellSize * 2;\n        x += cellSize * 2;\n        this.drawRoundedSquare(lineWidth, x, y, size, colorInner, radiiInner, true, ctx);\n    };\n    ;\n    /**\n     * Is this dot inside a positional pattern zone.\n     */\n    QRCode.prototype.isInPositioninZone = function (col, row, zones) {\n        return zones.some(function (zone) { return (row >= zone.row && row <= zone.row + 7 &&\n            col >= zone.col && col <= zone.col + 7); });\n    };\n    QRCode.prototype.transformPixelLengthIntoNumberOfCells = function (pixelLength, cellSize) {\n        return pixelLength / cellSize;\n    };\n    QRCode.prototype.isCoordinateInImage = function (col, row, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage) {\n        if (logoImage) {\n            var numberOfCellsMargin = 2;\n            var firstRowOfLogo = this.transformPixelLengthIntoNumberOfCells(dxLogo, cellSize);\n            var firstColumnOfLogo = this.transformPixelLengthIntoNumberOfCells(dyLogo, cellSize);\n            var logoWidthInCells = this.transformPixelLengthIntoNumberOfCells(dWidthLogo, cellSize) - 1;\n            var logoHeightInCells = this.transformPixelLengthIntoNumberOfCells(dHeightLogo, cellSize) - 1;\n            return row >= firstRowOfLogo - numberOfCellsMargin && row <= firstRowOfLogo + logoWidthInCells + numberOfCellsMargin // check rows\n                && col >= firstColumnOfLogo - numberOfCellsMargin && col <= firstColumnOfLogo + logoHeightInCells + numberOfCellsMargin; // check cols\n        }\n        else {\n            return false;\n        }\n    };\n    QRCode.prototype.shouldComponentUpdate = function (nextProps) {\n        return !isEqual(this.props, nextProps);\n    };\n    QRCode.prototype.componentDidMount = function () {\n        this.update();\n    };\n    QRCode.prototype.componentDidUpdate = function () {\n        this.update();\n    };\n    QRCode.prototype.update = function () {\n        var _a = this.props, value = _a.value, ecLevel = _a.ecLevel, enableCORS = _a.enableCORS, bgColor = _a.bgColor, fgColor = _a.fgColor, logoImage = _a.logoImage, logoOpacity = _a.logoOpacity, logoOnLoad = _a.logoOnLoad, removeQrCodeBehindLogo = _a.removeQrCodeBehindLogo, qrStyle = _a.qrStyle, eyeRadius = _a.eyeRadius, eyeColor = _a.eyeColor, logoPaddingStyle = _a.logoPaddingStyle;\n        // just make sure that these params are passed as numbers\n        var size = +this.props.size;\n        var quietZone = +this.props.quietZone;\n        var logoWidth = this.props.logoWidth ? +this.props.logoWidth : 0;\n        var logoHeight = this.props.logoHeight ? +this.props.logoHeight : 0;\n        var logoPadding = this.props.logoPadding ? +this.props.logoPadding : 0;\n        var qrCode = qrGenerator(0, ecLevel);\n        qrCode.addData(QRCode.utf16to8(value));\n        qrCode.make();\n        var canvas = ReactDOM.findDOMNode(this.canvas.current);\n        var ctx = canvas.getContext('2d');\n        var canvasSize = size + (2 * quietZone);\n        var length = qrCode.getModuleCount();\n        var cellSize = size / length;\n        var scale = (window.devicePixelRatio || 1);\n        canvas.height = canvas.width = canvasSize * scale;\n        ctx.scale(scale, scale);\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, canvasSize, canvasSize);\n        var offset = quietZone;\n        var positioningZones = [\n            { row: 0, col: 0 },\n            { row: 0, col: length - 7 },\n            { row: length - 7, col: 0 },\n        ];\n        ctx.strokeStyle = fgColor;\n        if (qrStyle === 'dots') {\n            ctx.fillStyle = fgColor;\n            var radius = cellSize / 2;\n            for (var row = 0; row < length; row++) {\n                for (var col = 0; col < length; col++) {\n                    if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\n                        ctx.beginPath();\n                        ctx.arc(Math.round(col * cellSize) + radius + offset, Math.round(row * cellSize) + radius + offset, (radius / 100) * 75, 0, 2 * Math.PI, false);\n                        ctx.closePath();\n                        ctx.fill();\n                    }\n                }\n            }\n        }\n        else {\n            for (var row = 0; row < length; row++) {\n                for (var col = 0; col < length; col++) {\n                    if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\n                        ctx.fillStyle = fgColor;\n                        var w = (Math.ceil((col + 1) * cellSize) - Math.floor(col * cellSize));\n                        var h = (Math.ceil((row + 1) * cellSize) - Math.floor(row * cellSize));\n                        ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset, w, h);\n                    }\n                }\n            }\n        }\n        // Draw positioning patterns\n        for (var i = 0; i < 3; i++) {\n            var _b = positioningZones[i], row = _b.row, col = _b.col;\n            var radii = eyeRadius;\n            var color = void 0;\n            if (Array.isArray(radii)) {\n                radii = radii[i];\n            }\n            if (typeof radii == 'number') {\n                radii = [radii, radii, radii, radii];\n            }\n            if (!eyeColor) { // if not specified, eye color is the same as foreground, \n                color = fgColor;\n            }\n            else {\n                if (Array.isArray(eyeColor)) { // if array, we pass the single color\n                    color = eyeColor[i];\n                }\n                else {\n                    color = eyeColor;\n                }\n            }\n            this.drawPositioningPattern(ctx, cellSize, offset, row, col, color, radii);\n        }\n        if (logoImage) {\n            var image_1 = new Image();\n            if (enableCORS) {\n                image_1.crossOrigin = 'Anonymous';\n            }\n            image_1.onload = function () {\n                ctx.save();\n                var dWidthLogo = logoWidth || size * 0.2;\n                var dHeightLogo = logoHeight || dWidthLogo;\n                var dxLogo = ((size - dWidthLogo) / 2);\n                var dyLogo = ((size - dHeightLogo) / 2);\n                if (removeQrCodeBehindLogo || logoPadding) {\n                    ctx.beginPath();\n                    ctx.strokeStyle = bgColor;\n                    ctx.fillStyle = bgColor;\n                    var dWidthLogoPadding = dWidthLogo + (2 * logoPadding);\n                    var dHeightLogoPadding = dHeightLogo + (2 * logoPadding);\n                    var dxLogoPadding = dxLogo + offset - logoPadding;\n                    var dyLogoPadding = dyLogo + offset - logoPadding;\n                    if (logoPaddingStyle === 'circle') {\n                        var dxCenterLogoPadding = dxLogoPadding + (dWidthLogoPadding / 2);\n                        var dyCenterLogoPadding = dyLogoPadding + (dHeightLogoPadding / 2);\n                        ctx.ellipse(dxCenterLogoPadding, dyCenterLogoPadding, dWidthLogoPadding / 2, dHeightLogoPadding / 2, 0, 0, 2 * Math.PI);\n                        ctx.stroke();\n                        ctx.fill();\n                    }\n                    else {\n                        ctx.fillRect(dxLogoPadding, dyLogoPadding, dWidthLogoPadding, dHeightLogoPadding);\n                    }\n                }\n                ctx.globalAlpha = logoOpacity;\n                ctx.drawImage(image_1, dxLogo + offset, dyLogo + offset, dWidthLogo, dHeightLogo);\n                ctx.restore();\n                if (logoOnLoad) {\n                    logoOnLoad();\n                }\n            };\n            image_1.src = logoImage;\n        }\n    };\n    QRCode.prototype.render = function () {\n        var _a;\n        var qrSize = +this.props.size + (2 * +this.props.quietZone);\n        return React.createElement('canvas', {\n            id: (_a = this.props.id) !== null && _a !== void 0 ? _a : 'react-qrcode-logo',\n            height: qrSize,\n            width: qrSize,\n            style: { height: qrSize + 'px', width: qrSize + 'px' },\n            ref: this.canvas\n        });\n    };\n    QRCode.defaultProps = {\n        value: 'https://reactjs.org/',\n        ecLevel: 'M',\n        enableCORS: false,\n        size: 150,\n        quietZone: 10,\n        bgColor: '#FFFFFF',\n        fgColor: '#000000',\n        logoOpacity: 1,\n        qrStyle: 'squares',\n        eyeRadius: [0, 0, 0],\n        logoPaddingStyle: 'square'\n    };\n    return QRCode;\n}(React.Component));\nexports.QRCode = QRCode;\n","'use client';\nimport * as React from 'react';\nimport { QueriesObserver, notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { useIsRestoring } from './isRestoring.mjs';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary.mjs';\nimport { ensurePreventErrorBoundaryRetry, useClearResetErrorBoundary, getHasError } from './errorBoundaryUtils.mjs';\nimport { ensureStaleTime, shouldSuspend, fetchOptimistic, willFetch } from './suspense.mjs';\n\nfunction useQueries({\n  queries,\n  context\n}) {\n  const queryClient = useQueryClient({\n    context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedQueries = React.useMemo(() => queries.map(options => {\n    const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure the results are already in fetching state before subscribing or updating options\n\n    defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic';\n    return defaultedOptions;\n  }), [queries, queryClient, isRestoring]);\n  defaultedQueries.forEach(query => {\n    ensureStaleTime(query);\n    ensurePreventErrorBoundaryRetry(query, errorResetBoundary);\n  });\n  useClearResetErrorBoundary(errorResetBoundary);\n  const [observer] = React.useState(() => new QueriesObserver(queryClient, defaultedQueries));\n  const optimisticResult = observer.getOptimisticResult(defaultedQueries);\n  useSyncExternalStore(React.useCallback(onStoreChange => isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setQueries(defaultedQueries, {\n      listeners: false\n    });\n  }, [defaultedQueries, observer]);\n  const shouldAtLeastOneSuspend = optimisticResult.some((result, index) => shouldSuspend(defaultedQueries[index], result, isRestoring));\n  const suspensePromises = shouldAtLeastOneSuspend ? optimisticResult.flatMap((result, index) => {\n    const options = defaultedQueries[index];\n    const queryObserver = observer.getObservers()[index];\n\n    if (options && queryObserver) {\n      if (shouldSuspend(options, result, isRestoring)) {\n        return fetchOptimistic(options, queryObserver, errorResetBoundary);\n      } else if (willFetch(result, isRestoring)) {\n        void fetchOptimistic(options, queryObserver, errorResetBoundary);\n      }\n    }\n\n    return [];\n  }) : [];\n\n  if (suspensePromises.length > 0) {\n    throw Promise.all(suspensePromises);\n  }\n\n  const observerQueries = observer.getQueries();\n  const firstSingleResultWhichShouldThrow = optimisticResult.find((result, index) => {\n    var _defaultedQueries$ind, _defaultedQueries$ind2;\n\n    return getHasError({\n      result,\n      errorResetBoundary,\n      useErrorBoundary: (_defaultedQueries$ind = (_defaultedQueries$ind2 = defaultedQueries[index]) == null ? void 0 : _defaultedQueries$ind2.useErrorBoundary) != null ? _defaultedQueries$ind : false,\n      query: observerQueries[index]\n    });\n  });\n\n  if (firstSingleResultWhichShouldThrow != null && firstSingleResultWhichShouldThrow.error) {\n    throw firstSingleResultWhichShouldThrow.error;\n  }\n\n  return optimisticResult;\n}\n\nexport { useQueries };\n//# sourceMappingURL=useQueries.mjs.map\n"],"names":["makeStyles","Box","memo","useStyles","theme","container","position","bottom","background","palette","maskColor","secondaryBottom","padding","spacing","boxShadow","bottomBg","backdropFilter","left","right","display","columnGap","BottomController","children","classes","className","useCallback","useContext","useNavigate","useOutletContext","Typography","Icons","PageTitleContext","modalTitleBg","header","lineHeight","gridTemplateColumns","alignItems","flexShrink","icon","fontSize","cursor","color","main","title","fontWeight","minHeight","textAlign","whiteSpace","textOverflow","overflow","paddingLeft","paddingRight","gridArea","logo","width","height","canNavBack","history","length","URLSearchParams","location","search","get","NormalHeader","props","onClose","tabList","navigate","extension","customBackHandler","canBack","showTitle","undefined","handleBack","hasNavigator","leftAction","Comeback","onClick","Close","Mask","useMaskSharedTrans","flexDirection","flex","source","border","line","marginTop","rowGap","borderRadius","sourceText","second","messageTitle","message","wordBreak","maxHeight","SignRequestInfo","t","popups_wallet_signature_request_title","popups_wallet_request_source","popups_wallet_sign_message","useEffect","Services","CrossIsolationMessages","useQuery","useHasPassword","data","hasPassword","isLoading","refetch","Wallet","networkMode","events","passwordStatusUpdated","on","useSearchParams","useParamTab","defaultTab","params","setParams","tab","handleTabChange","_","set","toString","replace","NextIDPlatform","EMPTY_LIST","isGreaterThan","useMemo","useVerifiedWallets","proofs","filter","x","platform","Ethereum","sort","a","z","last_checked_at","relativeRouteOf","parent","child","startsWith","Error","slice","useAsyncRetry","useChainContext","useWeb3Connection","useNativeTokenBalance","pluginID","options","account","Web3","getNativeTokenBalance"],"sourceRoot":"","x_google_ignoreList":[8,9,10,11,12]}