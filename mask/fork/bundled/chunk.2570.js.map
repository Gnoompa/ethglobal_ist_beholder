{"version":3,"file":"bundled/chunk.2570.js","mappings":"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;;;;;;;;;;;ACrGQ;AACI;AACK;AACQ;;AAEhD;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA,IAAI;AACJ;AACA,sBAAsB,sDAAI,CAAC,4DAAM;AACjC;AACA,GAAG;AACH;AACA,MAAqC,GAAG,CAGvC,CAAC;;;;;;;;ACtvJA;AACA,iBAAiB,mBAAO,CAAC,KAAY;AACrC,cAAc,mBAAO,CAAC,KAAgB;AACtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,IAAI;AAC7B,wBAAwB,EAAE,WAAW,EAAE;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,IAAI;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA8B,IAAI;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACjPA,oBAAoB,mBAAO,CAAC,KAAc;AAC1C,gBAAgB,mBAAO,CAAC,KAAe;;AAEvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,QAAQ;AACjB;AACA,cAAc,mBAAmB;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA,SAAS,UAAU;AACnB,SAAS,QAAQ;;AAEjB,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,UAAU;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AC/eA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;ACRa;;AAEb,iBAAiB,mBAAO,CAAC,KAAa;;AAEtC;AACA;;AAEA;AACA;;AAEA,oCAAoC,SAAS;AAC7C;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5B0B;;AAE1B;AACA,gBAAgB,gDAAmB;;AAEnC;AACA;AACA,WAAW,gDAAmB;AAC9B;AACA,KAAK;AACL;;AAEA;AACA,gBAAgB,6CAAgB;;AAEhC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyC;AACzC","sources":["webpack://mask-network/./packages/base/src/utils/parseURLs.ts","webpack://mask-network/./packages/plugin-infra/src/dom/usePluginWrapper.tsx","webpack://mask-network/./packages/shared-base-ui/src/hooks/useObservableMapSet.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/PostContext.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/usePostInfo.ts","webpack://mask-network/./packages/plugin-infra/src/utils/message.ts","webpack://mask-network/./packages/plugin-infra/src/utils/rpc.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useTransactionCallback.ts","webpack://mask-network/./packages/plugins/MaskBox/src/type.ts","webpack://mask-network/./packages/plugins/MaskBox/src/hooks/useMaskBoxContract.ts","webpack://mask-network/./packages/plugins/MaskBox/src/hooks/useMaskBoxInfo.ts","webpack://mask-network/./packages/plugins/MaskBox/src/hooks/useMerkleProof.ts","webpack://mask-network/./packages/plugins/MaskBox/src/hooks/useMaskBoxStatus.ts","webpack://mask-network/./packages/plugins/MaskBox/src/hooks/useMaskBoxCreationSuccessEvent.ts","webpack://mask-network/./packages/plugins/MaskBox/src/hooks/useMaskBoxTokensForSale.ts","webpack://mask-network/./packages/plugins/MaskBox/src/hooks/useMaskBoxPurchasedTokens.ts","webpack://mask-network/./packages/plugins/MaskBox/src/helpers/formatCountdown.ts","webpack://mask-network/./packages/plugins/MaskBox/src/hooks/useOpenBoxTransaction.ts","webpack://mask-network/./packages/plugins/MaskBox/src/messages.ts","webpack://mask-network/./packages/plugins/MaskBox/src/hooks/useMaskBoxMetadata.ts","webpack://mask-network/./packages/plugins/MaskBox/src/hooks/useMaskBoxQualificationContract.ts","webpack://mask-network/./packages/plugins/MaskBox/src/hooks/useQualification.ts","webpack://mask-network/./packages/plugins/MaskBox/src/hooks/useContext.ts","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/Skeleton/Skeleton.js","webpack://mask-network/./packages/shared/src/UI/components/Video/index.tsx","webpack://mask-network/./packages/plugins/MaskBox/src/SiteAdaptor/components/ArticlesTab.tsx","webpack://mask-network/./packages/plugins/MaskBox/src/SiteAdaptor/components/DetailsTab.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Remove.js","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Add.js","webpack://mask-network/./packages/shared/src/UI/components/TokenPrice/index.tsx","webpack://mask-network/./packages/shared/src/UI/wallet/GasSettingBar.tsx","webpack://mask-network/./packages/plugins/MaskBox/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/MaskBox/src/SiteAdaptor/components/DrawDialog.tsx","webpack://mask-network/./packages/plugins/MaskBox/src/SiteAdaptor/components/CollectibleCard.tsx","webpack://mask-network/./packages/plugins/MaskBox/src/SiteAdaptor/components/TokenCard.tsx","webpack://mask-network/./packages/plugins/MaskBox/src/SiteAdaptor/components/DrawResultDialog.tsx","webpack://mask-network/./packages/plugins/MaskBox/src/SiteAdaptor/components/PreviewCard.tsx","webpack://mask-network/./packages/plugins/MaskBox/src/SiteAdaptor/index.tsx","webpack://mask-network/./packages/plugins/MaskBox/src/apis/merkleProof.ts","webpack://mask-network/./packages/shared-base-ui/src/bom/open-window.ts","webpack://mask-network/./packages/shared-base/src/helpers/getLocalImplementation.tsx","webpack://mask-network/./packages/shared/src/UI/components/AssetPreviewer/index.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/HelpOutline.js","webpack://mask-network/./packages/shared/src/UI/components/EthereumERC20TokenApprovedBoundary/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/Image/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useRiskWarningApproved.ts","webpack://mask-network/./packages/shared/src/UI/components/WalletConnectedBoundary/index.tsx","webpack://mask-network/./packages/shared/src/UI/wallet/FormattedAddress.tsx","webpack://mask-network/./packages/theme/src/Components/TextField/index.tsx","webpack://mask-network/./packages/typed-message/base/src/core/image.ts","webpack://mask-network/./packages/typed-message/base/src/core/promise.ts","webpack://mask-network/./packages/typed-message/base/src/core/text.ts","webpack://mask-network/./packages/typed-message/base/src/core/tuple.ts","webpack://mask-network/./packages/typed-message/base/src/extension/MaskPayload.ts","webpack://mask-network/./packages/typed-message/base/src/extension/anchor.ts","webpack://mask-network/./packages/typed-message/base/src/utils/extract.ts","webpack://mask-network/./packages/typed-message/base/src/utils/index.ts","webpack://mask-network/./packages/typed-message/base/src/utils/internal.ts","webpack://mask-network/./packages/typed-message/base/src/visitor/forEachChild.ts","webpack://mask-network/./packages/web3-hooks/base/src/useBalance.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleTokenPrice.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleTokenSpenders.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleTokens.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNativeTokenAddress.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNativeTokenPrice.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNetwork.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNonFungibleAsset.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNonFungibleTokenContract.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useContract.ts","webpack://mask-network/./packages/web3-providers/src/helpers/fetchBlob.ts","webpack://mask-network/./packages/web3-shared/base/src/helpers/formatCurrency.ts","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Tune.js","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/TabPanel/tabPanelClasses.js","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/TabPanel/TabPanel.js","webpack://mask-network/./node_modules/.pnpm/@mui+styled-engine@5.10.8_@emotion+react@11.11.1_@emotion+styled@11.11.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","webpack://mask-network/./node_modules/.pnpm/color-name@1.1.4/node_modules/color-name/index.js","webpack://mask-network/./node_modules/.pnpm/color-string@1.9.0/node_modules/color-string/index.js","webpack://mask-network/./node_modules/.pnpm/color@4.2.3/node_modules/color/index.js","webpack://mask-network/./node_modules/.pnpm/is-arrayish@0.3.2/node_modules/is-arrayish/index.js","webpack://mask-network/./node_modules/.pnpm/simple-swizzle@0.2.2/node_modules/simple-swizzle/index.js","webpack://mask-network/./node_modules/.pnpm/unstated-next@1.1.0/node_modules/unstated-next/dist/unstated-next.mjs"],"sourcesContent":["import * as parser from /* webpackDefer: true */ 'anchorme'\nexport function parseURLs(text: string, requireProtocol = true) {\n    // CJS-ESM compatibility\n    const lib = parser.default.default || parser.default\n    return lib\n        .list(text)\n        .map((x) => x.string)\n        .filter((y) => {\n            if (!requireProtocol) return true\n            // See https://github.com/alexcorvi/anchorme.js/issues/109\n            return URL.canParse(y)\n        })\n}\n","import { createContext, useEffect, useContext, type ForwardRefExoticComponent, type RefAttributes } from 'react'\nimport { noop } from 'lodash-es'\nimport type { Plugin } from '../types.js'\n\nexport type PluginWrapperComponent<T extends Plugin.Shared.Definition = Plugin.Shared.Definition> =\n    ForwardRefExoticComponent<\n        React.PropsWithChildren<\n            RefAttributes<PluginWrapperMethods> & {\n                definition: T\n                lackHostPermission?: boolean\n            }\n        >\n    >\n\nconst emptyPluginWrapperMethods = {\n    setWrap: noop,\n    setWrapperName: noop,\n    setWidth: noop,\n}\n/** @internal */\nexport const PluginWrapperMethodsContext = createContext<PluginWrapperMethods>(emptyPluginWrapperMethods)\nPluginWrapperMethodsContext.displayName = 'PluginWrapperMethodsContext'\nexport interface PluginWrapperMethods {\n    setWrap(open: boolean): void\n    setWrapperName(name: string | undefined): void\n    setWidth(width: number | undefined): void\n}\n\nexport function usePluginWrapper(\n    open: boolean,\n    options?: {\n        width?: number\n        name?: string\n    },\n) {\n    const { setWidth, setWrap, setWrapperName } = useContext(PluginWrapperMethodsContext)\n    const { width, name } = options || {}\n\n    useEffect(() => {\n        setWrap(open)\n        return () => setWrap(open)\n    }, [open, setWrap])\n    useEffect(() => setWidth(width), [width, setWidth])\n    useEffect(() => setWrapperName(name), [name, setWrapperName])\n}\n","import { useMemo } from 'react'\nimport { useSubscription, type Subscription } from 'use-subscription'\nimport { type ObservableMap, type ObservableSet } from '@masknet/shared-base'\n\nexport function useObservableValues<T>(map: ObservableMap<any, T> | ObservableSet<T>) {\n    const subscription = useMemo<Subscription<T[]>>(\n        () => ({\n            getCurrentValue: () => map.asValues,\n            subscribe: (callback) => {\n                return (map.event as any).on(map.ALL_EVENTS, callback)\n            },\n        }),\n        [map],\n    )\n\n    return useSubscription(subscription)\n}\n","import { createContext, createElement, useContext } from 'react'\nimport { type Subscription, useSubscription } from 'use-subscription'\nimport type { Some } from 'ts-results-es'\nimport type { LiveSelector, DOMProxy } from '@dimensiondev/holoflows-kit'\nimport {\n    ObservableMap,\n    ObservableSet,\n    type PostIVIdentifier,\n    ValueRef,\n    type PostIdentifier,\n    type ProfileIdentifier,\n} from '@masknet/shared-base'\nimport { useObservableValues, useValueRef } from '@masknet/shared-base-ui'\nimport type { TypedMessage } from '@masknet/typed-message'\nimport type { SupportedPayloadVersions } from '@masknet/encryption'\n\nexport interface PostContextActions {\n    hasPayloadLike(content: string): boolean\n    getURLFromPostIdentifier?(post: PostIdentifier): URL | null\n}\nexport interface PostContextAuthor {\n    readonly nickname: Subscription<string | null>\n    readonly avatarURL: Subscription<URL | null>\n    readonly author: Subscription<ProfileIdentifier | null>\n    /** post id on the network. */\n    readonly postID: Subscription<string | null>\n}\n\nexport interface PostContextCoAuthor {\n    nickname?: string\n    avatarURL?: URL\n    author: ProfileIdentifier\n    post: PostIdentifier\n}\n\nexport interface PostContextComment {\n    readonly commentsSelector: LiveSelector<HTMLElement>\n    readonly commentBoxSelector: LiveSelector<HTMLElement>\n}\nexport interface PostContextCreation extends PostContextAuthor {\n    readonly rootElement: DOMProxy\n    readonly actionsElement?: DOMProxy\n    readonly isFocusing?: boolean\n    readonly suggestedInjectionPoint: HTMLElement\n    readonly comments?: PostContextComment\n    readonly coAuthors: Subscription<PostContextCoAuthor[]>\n    /**\n     * The result of this subscription will be merged with `PostContext.postMentionedLinks`.\n     *\n     * You don't need to provide this to resolve links in `PostContext.postContent`.\n     */\n    readonly postMentionedLinksProvider?: Subscription<string[]>\n    /** @deprecated It should parse image into rawMessage */\n    readonly postImagesProvider?: Subscription<string[]>\n    /**\n     * The raw TypedMessage that the site gives.\n     */\n    readonly rawMessage: Subscription<TypedMessage>\n    readonly signal?: AbortSignal\n}\nexport interface PostContext extends PostContextAuthor {\n    // #region DOM knowledge\n    get rootNode(): HTMLElement | null\n    readonly rootElement: DOMProxy\n    readonly actionsElement?: DOMProxy\n    readonly isFocusing?: boolean\n    readonly suggestedInjectionPoint: HTMLElement\n    // #endregion\n    readonly comment: PostContextComment | undefined\n    // #region Metadata of a post (author, mentioned items, ...)\n    /** Auto computed */\n    readonly identifier: Subscription<PostIdentifier | null>\n    readonly url: Subscription<URL | null>\n    readonly coAuthors: Subscription<PostContextCoAuthor[] | null>\n    // Meta\n    readonly mentionedLinks: Subscription<string[]>\n    /** @deprecated It should appears in rawMessage */\n    readonly postMetadataImages: Subscription<string[]>\n    // #endregion\n    // #region Raw post content (not decrypted)\n    readonly rawMessage: Subscription<TypedMessage>\n    readonly encryptComment: ValueRef<null | ((commentToEncrypt: string) => Promise<string>)>\n    readonly decryptComment: ValueRef<null | ((commentEncrypted: string) => Promise<string | null>)>\n    // #endregion\n    // #region Post payload discovered in the rawMessage\n    readonly hasMaskPayload: Subscription<boolean>\n    readonly postIVIdentifier: Subscription<PostIVIdentifier | null>\n    /**\n     * undefined => payload not found\n     */\n    readonly publicShared: Subscription<boolean | undefined>\n    readonly isAuthorOfPost: Subscription<boolean | undefined>\n    readonly version: Subscription<SupportedPayloadVersions | undefined>\n\n    decryptedReport(content: {\n        sharedPublic?: Some<boolean>\n        iv?: string\n        isAuthorOfPost?: Some<boolean>\n        version?: SupportedPayloadVersions\n    }): void\n    // #endregion\n}\nexport type PostInfo = PostContext\n\nexport const PostInfoContext = createContext<PostContext | null>(null)\nPostInfoContext.displayName = 'PostInfoContext'\n\n/** @deprecated use <PostInfoContext.Provider value={post}> */\nexport function PostInfoProvider(props: React.PropsWithChildren<{ post: PostInfo }>) {\n    return createElement(PostInfoContext.Provider, { value: props.post, children: props.children })\n}\nexport const usePostInfoDetails: {\n    // Change to use* when https://github.com/microsoft/TypeScript/issues/44643 fixed\n    [key in keyof PostInfo]: () => PostInfo[key] extends ValueRef<infer T>\n        ? T extends (...args: any) => any\n            ? T\n            : Readonly<T>\n        : PostInfo[key] extends ObservableSet<infer T>\n        ? ReadonlyArray<Readonly<T>>\n        : PostInfo[key] extends ObservableMap<any, infer T>\n        ? ReadonlyArray<Readonly<T>>\n        : PostInfo[key] extends Subscription<infer T>\n        ? Readonly<T>\n        : PostInfo[key]\n} = {\n    __proto__: new Proxy(\n        { __proto__: null },\n        {\n            get(_, key) {\n                if (typeof key === 'symbol') return undefined\n                function usePostInfoDetails() {\n                    const postInfo = useContext(PostInfoContext)\n                    if (!postInfo) throw new TypeError('No post context')\n                    if (!(key in postInfo)) throw new TypeError('postInfo.' + (key as string) + ' is not found')\n                    const k = postInfo[key as keyof PostInfo]\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (k instanceof ValueRef) return useValueRef<any>(k)\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (k instanceof ObservableMap) return useObservableValues<any>(k)\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (k instanceof ObservableSet) return useObservableValues<any>(k)\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (isSubscription(k)) return useSubscription<any>(k)\n                    return k\n                }\n                Object.defineProperty(usePostInfoDetails, key, { value: usePostInfoDetails, configurable: true })\n                return usePostInfoDetails\n            },\n        },\n    ),\n} as any\nfunction isSubscription(x: any): x is Subscription<any> {\n    return (\n        typeof x === 'object' &&\n        x !== null &&\n        !!((x as Subscription<any>).getCurrentValue && (x as Subscription<any>).subscribe)\n    )\n}\n","import { useMemo } from 'react'\nimport { usePostInfoDetails } from './PostContext.js'\nimport { getPostURL } from './context.js'\n\nexport function usePostLink() {\n    const id = usePostInfoDetails.postID()\n    const identifier = usePostInfoDetails.identifier()\n    return useMemo(() => {\n        if (!id || !identifier) return ''\n        return getPostURL?.(identifier) ?? ''\n    }, [id, identifier, getPostURL])\n}\n","import { WebExtensionMessage } from '@dimensiondev/holoflows-kit'\nimport type { PluginMessageEmitterItem } from '@masknet/plugin-infra'\nimport { serializer } from '@masknet/shared-base'\n\n/** @internal */\nexport const DOMAIN_RPC = Symbol('create RPC instead of normal message')\n/**\n * Create a plugin message emitter\n * @param pluginID The plugin ID\n *\n * @example\n * export const MyPluginMessage = getPluginMessage(PLUGIN_ID)\n */\nexport let getPluginMessage = <T>(pluginID: string, type?: typeof DOMAIN_RPC): PluginMessageEmitter<T> => {\n    const domain = (type === DOMAIN_RPC ? '@plugin-rpc/' : '@plugin/') + pluginID\n    if (cache.has(domain)) return cache.get(domain) as any\n\n    const messageCenter = new WebExtensionMessage<T>({ domain })\n    const events = messageCenter.events\n    messageCenter.serialization = serializer\n    cache.set(domain, events)\n    return events\n}\n\nexport function __workaround__replaceImplementationOfCreatePluginMessage__(\n    newImpl: (pluginID: string) => PluginMessageEmitter<any>,\n) {\n    getPluginMessage = newImpl\n}\nexport type PluginMessageEmitter<T> = { readonly [key in keyof T]: PluginMessageEmitterItem<T[key]> }\nconst cache = new Map<string, PluginMessageEmitter<unknown>>()\n\n// TODO: this type should be defined here, not shared-base\nexport type { PluginMessageEmitterItem } from '@masknet/shared-base'\n","import { Environment, isEnvironment } from '@dimensiondev/holoflows-kit'\nimport { AsyncCall, type AsyncCallLogLevel, AsyncGeneratorCall } from 'async-call-rpc/full'\nimport { serializer, getOrUpdateLocalImplementationHMR } from '@masknet/shared-base'\nimport { getPluginMessage } from '@masknet/plugin-infra'\nimport { DOMAIN_RPC } from './message.js'\n\nconst log: AsyncCallLogLevel = {\n    type: 'pretty',\n    requestReplay: process.env.NODE_ENV === 'development',\n    sendLocalStack: process.env.NODE_ENV === 'development',\n}\nlet isBackground = () => isEnvironment(Environment.ManifestBackground)\nexport function __workaround__replaceIsBackground__(f: () => boolean) {\n    isBackground = f\n}\n\nfunction getPluginRPCInternal(\n    cache: Map<string, object>,\n    pluginID: string,\n    starter: typeof AsyncCall | typeof AsyncGeneratorCall,\n    entry: keyof RPCMessage,\n) {\n    if (cache.has(pluginID)) return cache.get(pluginID)\n    const message = getPluginMessage<RPCMessage>(pluginID, DOMAIN_RPC)\n    const rpc = starter(Object.create(null), {\n        key: `@plugin/${pluginID}`,\n        channel: {\n            on: message[entry].on,\n            send: message[entry].sendToBackgroundPage,\n        },\n        serializer,\n        log,\n        thenable: false,\n    })\n    cache.set(pluginID, rpc)\n    return rpc\n}\nconst cache = new Map<string, object>()\nconst cacheGenerator = new Map<string, object>()\nexport function getPluginRPC<T>(pluginID: string): T {\n    if (isBackground()) startPluginRPC(pluginID, new AbortController().signal, Object.create(null))\n    return getPluginRPCInternal(cache, pluginID, AsyncCall, '_') as T\n}\nexport function getPluginRPCGenerator<T>(pluginID: string): T {\n    if (isBackground()) startPluginGeneratorRPC(pluginID, new AbortController().signal, Object.create(null))\n    return getPluginRPCInternal(cacheGenerator, pluginID, AsyncGeneratorCall, '$') as T\n}\n\nfunction startPluginRPCInternal(\n    cache: Map<string, object>,\n    pluginID: string,\n    signal: AbortSignal,\n    impl: object,\n    starter: typeof AsyncCall | typeof AsyncGeneratorCall,\n    entry: keyof RPCMessage,\n) {\n    if (!isBackground()) throw new Error('Cannot start RPC in the UI.')\n    const message = getPluginMessage<RPCMessage>(pluginID, DOMAIN_RPC)\n    const delegate = getOrUpdateLocalImplementationHMR(() => impl, message[entry])\n    if (cache.has(pluginID)) return\n    cache.set(pluginID, delegate)\n    starter(delegate, {\n        key: pluginID,\n        channel: {\n            on: message[entry].on,\n            send: message[entry].sendByBroadcast,\n        },\n        serializer,\n        log,\n        thenable: false,\n    })\n}\n/** @internal */\nexport function startPluginRPC(pluginID: string, signal: AbortSignal, impl: object) {\n    startPluginRPCInternal(cache, pluginID, signal, impl, AsyncCall, '_')\n}\n/** @internal */\nexport function startPluginGeneratorRPC(pluginID: string, signal: AbortSignal, impl: object) {\n    startPluginRPCInternal(cacheGenerator, pluginID, signal, impl, AsyncGeneratorCall, '$')\n}\n\ninterface RPCMessage {\n    // RPC\n    _: unknown\n    // Generator\n    $: unknown\n}\n","import { omit } from 'lodash-es'\nimport { useAsyncFn } from 'react-use'\nimport type { PayableTransactionObject, PayableTx } from '@masknet/web3-contracts/types/types.js'\nimport { TransactionEventType } from '@masknet/web3-shared-evm'\n\nexport function useTransactionCallback<T>(\n    config: PayableTx | undefined,\n    method: PayableTransactionObject<T> | undefined,\n) {\n    return useAsyncFn(async () => {\n        if (!config || !method) return\n\n        const gasExpectedConfig = { ...config }\n\n        try {\n            const estimatedGas = await method.estimateGas(omit(config, 'gas'))\n            if (!gasExpectedConfig.gas && estimatedGas) {\n                gasExpectedConfig.gas = estimatedGas\n            }\n        } catch (error) {\n            await method.call(config)\n        }\n\n        return new Promise<string>(async (resolve, reject) => {\n            method\n                .send(gasExpectedConfig)\n                .once(TransactionEventType.CONFIRMATION, (_, receipt) => {\n                    resolve(receipt.transactionHash)\n                })\n                .once(TransactionEventType.ERROR, (error) => {\n                    reject(error)\n                })\n        })\n    }, [config, method])\n}\n","import type { FungibleToken } from '@masknet/web3-shared-base'\nimport type { ChainId, SchemaType } from '@masknet/web3-shared-evm'\n\nexport enum BoxState {\n    UNKNOWN = 0,\n    NOT_READY = 1,\n    READY = 2,\n    EXPIRED = 3,\n    /** sold all tokens out */\n    SOLD_OUT = 4,\n    /** drawed all personal limited tokens */\n    DRAWED_OUT = 5,\n    /** canceled */\n    CANCELED = 6,\n    /** error occur */\n    ERROR = 7,\n    /** 404 */\n    NOT_FOUND = 8,\n    /** leaf not found */\n    NOT_IN_WHITELIST = 9,\n    /** insufficient holder token */\n    INSUFFICIENT_HOLDER_TOKEN = 10,\n    /** not qualified */\n    NOT_QUALIFIED = 11,\n}\n\ninterface PaymentInfo {\n    token: FungibleToken<ChainId, SchemaType>\n    price: string\n    receivableAmount: string\n}\n\nexport interface BoxInfo {\n    boxId: string\n    creator: string\n    name: string\n    sellAll: boolean\n    personalLimit: number\n    personalRemaining: number\n    payments: PaymentInfo[]\n    remaining: number\n    availableAmount: number\n    total: number\n    sold: number\n    startAt: Date\n    endAt: Date\n    started: boolean\n    tokenIds: string[]\n    tokenIdsPurchased: string[]\n    tokenAddress: string\n    heroImageURL: string\n    qualificationAddress: string\n    canceled: boolean\n    holderMinTokenAmount: string\n    holderTokenAddress: string\n}\n\nexport enum MediaType {\n    Audio = 'audio',\n    Image = 'image',\n    Video = 'video',\n    Unknown = 'unknown',\n}\n\nexport interface BoxMetadata {\n    id: string\n    name: string\n    mediaType: MediaType\n    mediaUrl: string\n    activities: Array<{\n        title: string\n        body: string\n    }>\n}\n","import type { AbiItem } from 'web3-utils'\nimport type { MaskBox } from '@masknet/web3-contracts/types/MaskBox.js'\nimport MASK_BOX_ABI from '@masknet/web3-contracts/abis/MaskBox.json'\nimport { useMaskBoxConstants, type ChainId } from '@masknet/web3-shared-evm'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { useContract } from '@masknet/web3-hooks-evm'\n\nexport function useMaskBoxContract() {\n    const { chainId } = useChainContext()\n    const { MASK_BOX_CONTRACT_ADDRESS } = useMaskBoxConstants(chainId)\n    return useContract<MaskBox>(chainId as ChainId, MASK_BOX_CONTRACT_ADDRESS, MASK_BOX_ABI as AbiItem[])\n}\n","import { useAsyncRetry } from 'react-use'\nimport { useMaskBoxContract } from './useMaskBoxContract.js'\n\nexport function useMaskBoxInfo(id: string | number) {\n    const maskBoxContract = useMaskBoxContract()\n    return useAsyncRetry(async () => {\n        if (!maskBoxContract) return null\n        const info = await maskBoxContract.methods.getBoxInfo(id).call()\n        return info\n    }, [id, maskBoxContract])\n}\n","import { useAsyncRetry } from 'react-use'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { getMerkleProof } from '../apis/index.js'\n\nexport function useMerkelProof(root?: string) {\n    const { account } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    return useAsyncRetry(async () => {\n        if (!root) return\n\n        const leaf = Buffer.from(\n            (account.replace(/0x/, '').match(/.{2}/g) ?? []).map((x) => Number.parseInt(x, 16)),\n        ).toString('base64')\n\n        return getMerkleProof(leaf, root)\n    }, [account, root])\n}\n","import { useAsyncRetry } from 'react-use'\nimport { useMaskBoxContract } from './useMaskBoxContract.js'\n\nexport function useMaskBoxStatus(id: string | number) {\n    const maskBoxContract = useMaskBoxContract()\n    return useAsyncRetry(async () => {\n        if (!maskBoxContract) return null\n        return maskBoxContract.methods.getBoxStatus(id).call()\n    }, [id, maskBoxContract])\n}\n","import { first, range as rangeNum } from 'lodash-es'\nimport { useAsyncRetry } from 'react-use'\nimport type { CreationSuccess } from '@masknet/web3-contracts/types/MaskBox.js'\nimport { useMaskBoxConstants } from '@masknet/web3-shared-evm'\nimport { Web3 } from '@masknet/web3-providers'\nimport { useMaskBoxContract } from './useMaskBoxContract.js'\n\n// dynamically set the block range window size\nconst FRAGMENT_SIZE = 3000\nconst MAX_PAGE_SIZE = 10\n\nexport function useMaskBoxCreationSuccessEvent(creatorAddress: string, tokenAddress: string, boxId: string) {\n    const maskBoxContract = useMaskBoxContract()\n    const { MASK_BOX_CONTRACT_FROM_BLOCK } = useMaskBoxConstants()\n\n    return useAsyncRetry(async () => {\n        if (!maskBoxContract) return null\n\n        const getPastEvents = (fromBlock: number, toBlock: number) => {\n            return maskBoxContract.getPastEvents('CreationSuccess', {\n                filter: {\n                    creator: creatorAddress,\n                    nft_address: tokenAddress,\n                    box_id: boxId,\n                },\n                fromBlock,\n                toBlock,\n            })\n        }\n\n        const blockNumber = await Web3.getBlockNumber()\n        const range = blockNumber - (MASK_BOX_CONTRACT_FROM_BLOCK ?? Math.max(0, blockNumber - FRAGMENT_SIZE))\n        const size = Math.min(MAX_PAGE_SIZE, Math.ceil(range / FRAGMENT_SIZE))\n        const allSettled = await Promise.allSettled(\n            rangeNum(size).map((index) =>\n                getPastEvents(blockNumber - FRAGMENT_SIZE * (index + 1), blockNumber - FRAGMENT_SIZE * index - 1),\n            ),\n        )\n        const events = allSettled.flatMap((x) => (x.status === 'fulfilled' ? x.value : []))\n        const filtered = (events as unknown as CreationSuccess[]).filter((evt) => evt.returnValues.box_id === boxId)\n        return first(filtered)\n    }, [boxId, creatorAddress, tokenAddress, maskBoxContract, MASK_BOX_CONTRACT_FROM_BLOCK])\n}\n","import { useAsyncRetry } from 'react-use'\nimport { useMaskBoxContract } from './useMaskBoxContract.js'\n\nexport function useMaskBoxTokensForSale(id: string | number) {\n    const maskBoxContract = useMaskBoxContract()\n    return useAsyncRetry(async () => {\n        if (!maskBoxContract) return []\n        return maskBoxContract.methods.getNftListForSale(id, 0, 100).call()\n    }, [id, maskBoxContract])\n}\n","import { useAsyncRetry } from 'react-use'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport { useMaskBoxContract } from './useMaskBoxContract.js'\n\nexport function useMaskBoxPurchasedTokens(id: string | number, customer: string) {\n    const maskBoxContract = useMaskBoxContract()\n    return useAsyncRetry(async () => {\n        if (!maskBoxContract) return EMPTY_LIST\n        return maskBoxContract.methods.getPurchasedNft(id, customer).call()\n    }, [id, customer, maskBoxContract])\n}\n","import { formatDuration, intervalToDuration } from 'date-fns'\n\nexport function formatCountdown(from: number, to: number) {\n    const duration = intervalToDuration({ start: from, end: to })\n    return formatDuration(duration)\n}\n","import { useMemo } from 'react'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport type { NonPayableTx } from '@masknet/web3-contracts/types/types.js'\nimport { type FungibleToken, multipliedBy } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { type ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { useMaskBoxContract } from './useMaskBoxContract.js'\n\nexport function useOpenBoxTransaction(\n    boxId: string,\n    amount: number,\n    paymentTokenIndex: number,\n    paymentTokenPrice: string,\n    paymentTokenDetailed: FungibleToken<ChainId, SchemaType> | null,\n    proof?: string,\n    overrides?: NonPayableTx | null,\n) {\n    const { account } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const maskBoxContract = useMaskBoxContract()\n    return useMemo(() => {\n        if (!boxId || amount <= 0 || !maskBoxContract) return\n        return {\n            config: {\n                ...overrides,\n                from: account,\n                value:\n                    paymentTokenDetailed?.schema === SchemaType.Native\n                        ? multipliedBy(paymentTokenPrice, amount).toFixed()\n                        : undefined,\n            },\n            method: maskBoxContract.methods.openBox(boxId, amount, paymentTokenIndex, proof ?? '0x00'),\n        }\n    }, [\n        account,\n        amount,\n        boxId,\n        maskBoxContract,\n        paymentTokenIndex,\n        paymentTokenPrice,\n        paymentTokenDetailed,\n        proof,\n        overrides,\n    ])\n}\n","import { getPluginRPC } from '@masknet/plugin-infra'\nimport { PLUGIN_ID } from './constants.js'\n\nexport const MaskBoxRPC = getPluginRPC<typeof import('./apis/index.js')>(PLUGIN_ID)\n","import { useAsyncRetry } from 'react-use'\nimport { isValidAddress } from '@masknet/web3-shared-evm'\nimport { MaskBoxRPC } from '../messages.js'\n\nexport function useMaskBoxMetadata(boxId: string, creator: string) {\n    return useAsyncRetry(async () => {\n        if (!boxId || !creator || !isValidAddress(creator)) return\n        return MaskBoxRPC.getMaskBoxMetadata(boxId, creator)\n    }, [creator])\n}\n","import type { AbiItem } from 'web3-utils'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport type { MaskBoxQualification } from '@masknet/web3-contracts/types/MaskBoxQualification.js'\nimport MASK_BOX_QUALIFICATION_CONTRACT from '@masknet/web3-contracts/abis/MaskBoxQualification.json'\nimport { useContract } from '@masknet/web3-hooks-evm'\n\nexport function useMaskBoxQualificationContract(chainId: ChainId, address?: string) {\n    return useContract<MaskBoxQualification>(chainId, address, MASK_BOX_QUALIFICATION_CONTRACT as AbiItem[])\n}\n","import { useChainContext } from '@masknet/web3-hooks-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useAsyncRetry } from 'react-use'\nimport { useMaskBoxQualificationContract } from './useMaskBoxQualificationContract.js'\n\nexport function useQualification(address?: string, account?: string, proof?: string) {\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const qualificationContract = useMaskBoxQualificationContract(chainId, address)\n    const { value: qualification = { qualified: false, error_msg: '' } } = useAsyncRetry(async () => {\n        if (!qualificationContract || !account) return null\n        return qualificationContract.methods.is_qualified(account, proof ?? '0x00').call({\n            from: account,\n        })\n    }, [account, qualificationContract, proof])\n    return qualification\n}\n","import { useEffect, useMemo, useState, useCallback } from 'react'\nimport { useAsyncRetry } from 'react-use'\nimport { fromUnixTime, addDays, subDays } from 'date-fns'\nimport { omit, clamp, first, uniq } from 'lodash-es'\nimport { BigNumber } from 'bignumber.js'\nimport { createContainer } from 'unstated-next'\nimport { unreachable } from '@masknet/kit'\nimport { useERC20TokenAllowance } from '@masknet/web3-hooks-evm'\nimport {\n    useMaskBoxConstants,\n    isZeroAddress,\n    SchemaType,\n    isNativeTokenAddress,\n    abiCoder,\n} from '@masknet/web3-shared-evm'\nimport type { NonPayableTx } from '@masknet/web3-contracts/types/types.js'\nimport { type BoxInfo, BoxState } from '../type.js'\nimport { useMaskBoxInfo } from './useMaskBoxInfo.js'\nimport { useMerkelProof } from './useMerkleProof.js'\nimport { useMaskBoxStatus } from './useMaskBoxStatus.js'\nimport { useMaskBoxCreationSuccessEvent } from './useMaskBoxCreationSuccessEvent.js'\nimport { useMaskBoxTokensForSale } from './useMaskBoxTokensForSale.js'\nimport { useMaskBoxPurchasedTokens } from './useMaskBoxPurchasedTokens.js'\nimport { formatCountdown } from '../helpers/formatCountdown.js'\nimport { useOpenBoxTransaction } from './useOpenBoxTransaction.js'\nimport { useMaskBoxMetadata } from './useMaskBoxMetadata.js'\nimport { useQualification } from './useQualification.js'\nimport {\n    formatBalance,\n    isGreaterThan,\n    isGreaterThanOrEqualTo,\n    isLessThanOrEqualTo,\n    isSameAddress,\n    multipliedBy,\n} from '@masknet/web3-shared-base'\nimport { NetworkPluginID, EMPTY_LIST } from '@masknet/shared-base'\nimport {\n    useChainContext,\n    useBalance,\n    useFungibleToken,\n    useFungibleTokenBalance,\n    useFungibleTokens,\n    useNonFungibleTokenContract,\n} from '@masknet/web3-hooks-base'\n\nfunction useContext(initialState?: { boxId: string; hashRoot: string }) {\n    const now = new Date()\n    const { account } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    const { MASK_BOX_CONTRACT_ADDRESS } = useMaskBoxConstants()\n\n    const [boxId, setBoxId] = useState(initialState?.boxId ?? '')\n    const rootHash = initialState?.hashRoot || ''\n    const [paymentTokenAddress, setPaymentTokenAddress] = useState('')\n\n    // #region the box info\n    const {\n        value: maskBoxInfo = null,\n        error: errorMaskBoxInfo,\n        loading: loadingMaskBoxInfo,\n        retry: retryMaskBoxInfo,\n    } = useMaskBoxInfo(boxId)\n\n    const {\n        value: maskBoxStatus = null,\n        error: errorMaskBoxStatus,\n        loading: loadingMaskBoxStatus,\n        retry: retryMaskBoxStatus,\n    } = useMaskBoxStatus(boxId)\n    const { value: maskBoxCreationSuccessEvent = null, retry: retryMaskBoxCreationSuccessEvent } =\n        useMaskBoxCreationSuccessEvent(maskBoxInfo?.creator ?? '', maskBoxInfo?.nft_address ?? '', boxId)\n    const { value: paymentTokens = EMPTY_LIST } = useFungibleTokens(\n        NetworkPluginID.PLUGIN_EVM,\n        maskBoxStatus?.payment?.map(([address]) => address) ?? [],\n    )\n    const { value: allTokens = EMPTY_LIST, retry: retryMaskBoxTokensForSale } = useMaskBoxTokensForSale(boxId)\n    const { value: purchasedTokens = EMPTY_LIST, retry: retryMaskBoxPurchasedTokens } = useMaskBoxPurchasedTokens(\n        boxId,\n        account,\n    )\n\n    const {\n        value: boxInfo = null,\n        error: errorBoxInfo,\n        loading: loadingBoxInfo,\n        retry: retryBoxInfo,\n    } = useAsyncRetry<BoxInfo | null>(async () => {\n        if (!maskBoxInfo || !maskBoxStatus || !maskBoxInfo?.creator || isZeroAddress(maskBoxInfo?.creator)) return null\n        const personalLimit = Number.parseInt(maskBoxInfo.personal_limit, 10)\n        const remaining = Number.parseInt(maskBoxStatus.remaining, 10) // the current balance of the creator's account\n        const total = Number.parseInt(maskBoxStatus.total, 10) // the total amount of tokens in the box\n        const totalComputed = total && remaining && remaining > total ? remaining : total\n        const sold = Math.max(0, totalComputed - remaining)\n        const personalRemaining = Math.max(0, personalLimit - purchasedTokens.length)\n        const startAt = Number.parseInt(maskBoxCreationSuccessEvent?.returnValues.start_time || '0', 10)\n        const endAt = Number.parseInt(maskBoxCreationSuccessEvent?.returnValues.end_time || '0', 10)\n        const info: BoxInfo = {\n            boxId,\n            creator: maskBoxInfo.creator,\n            name: maskBoxInfo.name,\n            sellAll: maskBoxCreationSuccessEvent?.returnValues.sell_all ?? false,\n            personalLimit,\n            personalRemaining,\n            remaining,\n            availableAmount: Math.min(personalRemaining, remaining),\n            startAt: startAt === 0 ? subDays(new Date(), 1) : fromUnixTime(startAt),\n            endAt: endAt === 0 ? addDays(new Date(), 1) : fromUnixTime(endAt),\n            started: maskBoxStatus.started,\n            total: totalComputed,\n            sold,\n            canceled: maskBoxStatus.canceled,\n            tokenIds: allTokens,\n            tokenIdsPurchased: purchasedTokens,\n            payments: paymentTokens.map((token, i) => {\n                return {\n                    token,\n                    price: maskBoxStatus.payment[i][1],\n                    receivableAmount: maskBoxStatus.payment[i][2],\n                }\n            }),\n            tokenAddress: maskBoxInfo.nft_address,\n            heroImageURL: '',\n            qualificationAddress: maskBoxInfo.qualification,\n            holderTokenAddress: maskBoxInfo.holder_token_addr,\n            holderMinTokenAmount: maskBoxInfo.holder_min_token_amount,\n        }\n        return info\n    }, [allTokens, purchasedTokens, paymentTokens, maskBoxInfo, maskBoxStatus, maskBoxCreationSuccessEvent])\n    // #endregion\n\n    // #region qualification\n    const { value, error: errorProof, loading: loadingProof } = useMerkelProof(rootHash)\n    const proofBytes = value?.proof\n        ? abiCoder.encodeParameters(['bytes32[]'], [value?.proof?.map((p) => `0x${p}`) ?? []])\n        : undefined\n    const qualification = useQualification(\n        boxInfo?.qualificationAddress,\n        account,\n        value?.proof ? abiCoder.encodeParameters(['bytes', 'bytes32'], [proofBytes, rootHash]) : undefined,\n    )\n\n    // not in whitelist\n    const notInWhiteList = value?.message === 'leaf not found'\n\n    // at least hold token amount\n    const { data: holderToken } = useFungibleToken(NetworkPluginID.PLUGIN_EVM, boxInfo?.holderTokenAddress)\n    const { data: holderTokenBalance = '0' } = useFungibleTokenBalance(NetworkPluginID.PLUGIN_EVM, holderToken?.address)\n    const holderMinTokenAmountBN = new BigNumber(boxInfo?.holderMinTokenAmount ?? 0)\n    const insufficientHolderToken =\n        isGreaterThan(holderMinTokenAmountBN, 0) && !holderMinTokenAmountBN.lte(holderTokenBalance)\n    // #endregion\n\n    const boxState = useMemo(() => {\n        if (notInWhiteList) {\n            return BoxState.NOT_IN_WHITELIST\n        }\n        if (insufficientHolderToken) return BoxState.INSUFFICIENT_HOLDER_TOKEN\n        if (qualification?.error_msg) return BoxState.NOT_QUALIFIED\n        if (errorMaskBoxInfo || errorMaskBoxStatus || errorBoxInfo || (rootHash ? errorProof : false))\n            return BoxState.ERROR\n        if (loadingMaskBoxInfo || loadingMaskBoxStatus || loadingBoxInfo || (rootHash ? loadingProof : false)) {\n            if (!maskBoxInfo && !boxInfo) return BoxState.UNKNOWN\n        }\n        if (maskBoxInfo && !boxInfo) return BoxState.UNKNOWN\n        if (!maskBoxInfo || !maskBoxStatus || !boxInfo) return BoxState.NOT_FOUND\n        if (maskBoxStatus.canceled) return BoxState.CANCELED\n        if (isGreaterThanOrEqualTo(boxInfo.tokenIdsPurchased.length, boxInfo.personalLimit)) return BoxState.DRAWED_OUT\n        if (isLessThanOrEqualTo(boxInfo.remaining, 0)) return BoxState.SOLD_OUT\n        if (boxInfo.startAt > now || !boxInfo.started) return BoxState.NOT_READY\n        if (boxInfo.endAt < now || maskBoxStatus?.expired) return BoxState.EXPIRED\n        return BoxState.READY\n    }, [\n        boxInfo,\n        loadingBoxInfo,\n        errorBoxInfo,\n        maskBoxInfo,\n        loadingMaskBoxInfo,\n        errorMaskBoxInfo,\n        qualification,\n        loadingProof,\n        errorProof,\n        rootHash,\n        notInWhiteList,\n        insufficientHolderToken,\n    ])\n\n    const boxStateMessage = useMemo(() => {\n        switch (boxState) {\n            case BoxState.UNKNOWN:\n                return 'Loading...'\n            case BoxState.CANCELED:\n                return 'Canceled'\n            case BoxState.READY:\n                return 'Draw'\n            case BoxState.EXPIRED:\n                return 'Ended'\n            case BoxState.NOT_READY:\n                const nowAt = now.getTime()\n                const startAt = boxInfo?.startAt.getTime() ?? 0\n                if (startAt <= nowAt) return 'Syncing status...'\n                const countdown = formatCountdown(startAt, nowAt)\n                return countdown ? `Start sale in ${countdown}` : 'Loading...'\n            case BoxState.SOLD_OUT:\n                return 'Sold Out'\n            case BoxState.NOT_IN_WHITELIST:\n                return 'You are not in the whitelist.'\n            case BoxState.INSUFFICIENT_HOLDER_TOKEN:\n                const { symbol, decimals } = holderToken ?? {}\n                const tokenPrice = `${formatBalance(boxInfo?.holderMinTokenAmount, decimals)} $${symbol}`\n                return `You must hold at least ${tokenPrice}.`\n            case BoxState.NOT_QUALIFIED:\n                return qualification?.error_msg ?? 'Not qualified.'\n            case BoxState.DRAWED_OUT:\n                return 'Purchase limit exceeded.'\n            case BoxState.ERROR:\n                return 'Something went wrong.'\n            case BoxState.NOT_FOUND:\n                return 'Failed to load box info.'\n            default:\n                unreachable(boxState)\n        }\n    }, [holderToken, boxState, boxInfo?.startAt, qualification])\n\n    useEffect(() => {\n        if (!boxInfo || boxInfo.started) return\n\n        if (boxInfo.startAt < now) {\n            retryMaskBoxStatus()\n        }\n    }, [boxInfo])\n\n    // #region the box metadata\n    const { value: boxMetadata, retry: retryBoxMetadata } = useMaskBoxMetadata(boxId, boxInfo?.creator ?? '')\n    // #endregion\n\n    // #region the erc721 contract detailed\n    const { value: contractDetailed } = useNonFungibleTokenContract(\n        NetworkPluginID.PLUGIN_EVM,\n        maskBoxInfo?.nft_address ?? '',\n        SchemaType.ERC721,\n        { account },\n    )\n    // #endregion\n\n    // #region the payment count\n    const [paymentCount, setPaymentCount] = useState(1)\n    const setPaymentCount_ = useCallback(\n        (count: number) => {\n            setPaymentCount(clamp(count || 1, 1, boxInfo?.personalRemaining ?? 1))\n        },\n        [boxInfo?.personalRemaining],\n    )\n    // #endregion\n\n    // #region token ids\n    const [lastAllTokenIds, setLastAllTokenIds] = useState<string[]>([])\n    const [lastPurchasedTokenIds, setLastPurchasedTokenIds] = useState<string[]>([])\n    const refreshLastPurchasedTokenIds = useCallback(() => {\n        setLastPurchasedTokenIds((tokenIds) => uniq([...tokenIds, ...purchasedTokens]))\n    }, [purchasedTokens.length])\n    // #endregion\n\n    // #region the payment token\n    const { data: paymentNativeTokenBalance = '0' } = useBalance()\n    const { data: paymentERC20TokenBalance = '0' } = useFungibleTokenBalance(\n        NetworkPluginID.PLUGIN_EVM,\n        isNativeTokenAddress(paymentTokenAddress) ? '' : paymentTokenAddress,\n    )\n    const paymentTokenInfo = boxInfo?.payments.find((x) => isSameAddress(x.token.address, paymentTokenAddress))\n    const paymentTokenIndex =\n        boxInfo?.payments.findIndex((x) => isSameAddress(x.token.address ?? '', paymentTokenAddress)) ?? -1\n    const paymentTokenPrice = paymentTokenInfo?.price ?? '0'\n    const costAmount = multipliedBy(paymentTokenPrice, paymentCount)\n    const isNativeToken = isNativeTokenAddress(paymentTokenAddress)\n    const paymentTokenBalance = isNativeToken ? paymentNativeTokenBalance : paymentERC20TokenBalance\n    const paymentTokenDetailed = paymentTokenInfo?.token ?? null\n    const isBalanceInsufficient = costAmount.gt(paymentTokenBalance)\n\n    useEffect(() => {\n        const firstPaymentTokenAddress = first(boxInfo?.payments)?.token.address\n        if (paymentTokenAddress === '' && firstPaymentTokenAddress) setPaymentTokenAddress(firstPaymentTokenAddress)\n    }, [paymentTokenAddress, boxInfo?.payments.map((x) => x.token.address).join(',')])\n    // #endregion\n\n    // #region transactions\n    const [openBoxTransactionOverrides, setOpenBoxTransactionOverrides] = useState<NonPayableTx | null>(null)\n    const openBoxTransaction = useOpenBoxTransaction(\n        boxId,\n        paymentCount,\n        paymentTokenIndex,\n        paymentTokenPrice,\n        paymentTokenDetailed,\n        proofBytes,\n        openBoxTransactionOverrides,\n    )\n    const { data: erc20Allowance, refetch: retryAllowance } = useERC20TokenAllowance(\n        isNativeToken ? undefined : paymentTokenAddress,\n        MASK_BOX_CONTRACT_ADDRESS,\n    )\n    const canPurchase = !isBalanceInsufficient && !!boxInfo?.personalRemaining\n    const allowToPurchase = boxState === BoxState.READY\n    const isAllowanceEnough = isNativeToken ? true : costAmount.lte(erc20Allowance ?? '0')\n    const { value: openBoxTransactionGasLimit } = useAsyncRetry(async () => {\n        if (!openBoxTransaction || !canPurchase || !allowToPurchase || !isAllowanceEnough) return\n        const estimatedGas = await openBoxTransaction.method.estimateGas(omit(openBoxTransaction.config, 'gas'))\n        return new BigNumber(estimatedGas).toNumber()\n    }, [openBoxTransaction, canPurchase, allowToPurchase, isAllowanceEnough])\n    // #endregion\n\n    return {\n        // box id\n        boxId,\n        setBoxId,\n\n        // box info & metadata\n        boxInfo,\n        boxMetadata,\n\n        // box state\n        boxState,\n        boxStateMessage,\n\n        // erc721 contract detailed\n        contractDetailed,\n\n        // payment count\n        paymentCount,\n        setPaymentCount: setPaymentCount_,\n\n        // payment address\n        paymentTokenAddress: paymentTokenAddress || (first(boxInfo?.payments)?.token.address ?? ''),\n        setPaymentTokenAddress: (address: string) => {\n            if (boxInfo?.payments.some((x) => isSameAddress(x.token.address ?? '', address)))\n                setPaymentTokenAddress(address)\n        },\n\n        // token ids\n        lastAllTokenIds,\n        setLastAllTokenIds,\n        lastPurchasedTokenIds,\n        setLastPurchasedTokenIds,\n        refreshLastPurchasedTokenIds,\n\n        // payment token\n        paymentTokenPrice,\n        paymentTokenIndex,\n        paymentTokenBalance,\n        paymentTokenDetailed,\n        isBalanceInsufficient,\n        isAllowanceEnough,\n\n        // transactions\n        openBoxTransaction,\n        openBoxTransactionGasLimit,\n        openBoxTransactionOverrides,\n        setOpenBoxTransactionOverrides,\n\n        // retry callbacks\n        retryAllowance,\n        retryMaskBoxInfo,\n        retryMaskBoxStatus,\n        retryBoxInfo,\n        retryBoxMetadata,\n        retryMaskBoxCreationSuccessEvent,\n        retryMaskBoxTokensForSale,\n        retryMaskBoxPurchasedTokens,\n    }\n}\n\nexport const Context = createContainer(useContext)\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Skeleton from '@mui/material/Skeleton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet warnedOnce = false;\n/**\n * @ignore - do not document.\n */\n\nexport default /*#__PURE__*/React.forwardRef(function DeprecatedSkeleton(props, ref) {\n  if (!warnedOnce) {\n    console.warn(['MUI: The Skeleton component was moved from the lab to the core.', '', \"You should use `import { Skeleton } from '@mui/material'`\", \"or `import Skeleton from '@mui/material/Skeleton'`\"].join('\\n'));\n    warnedOnce = true;\n  }\n\n  return /*#__PURE__*/_jsx(Skeleton, _extends({\n    ref: ref\n  }, props));\n});","import { forwardRef, useMemo, useRef } from 'react'\nimport { useAsync } from 'react-use'\nimport { Skeleton, type SkeletonProps } from '@mui/lab'\nimport { fetchBlob } from '@masknet/web3-providers/helpers'\n\nexport interface VideoRef {\n    video?: HTMLVideoElement | null\n}\n\nexport interface VideoProps {\n    src: string | Blob\n    component?: 'video'\n    VideoProps?: React.DetailedHTMLProps<React.VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement>\n    SkeletonProps?: Partial<SkeletonProps>\n}\n\nexport const Video = forwardRef<VideoRef, VideoProps>(function Video(props, outgoingRef) {\n    const { src, component = 'video', VideoProps, SkeletonProps } = props\n    const videoRef = useRef<HTMLVideoElement>(null)\n\n    const { loading, value } = useAsync(async () => {\n        if (typeof src !== 'string') return src\n        return fetchBlob(src)\n    }, [src])\n\n    const blobURL = useMemo(() => {\n        if (!value) return ''\n        return URL.createObjectURL(value)\n    }, [value])\n\n    if (component !== 'video') return null\n    if (loading || loading) {\n        return <Skeleton variant=\"rectangular\" {...SkeletonProps} />\n    }\n    return (\n        <video ref={videoRef} muted {...VideoProps}>\n            {blobURL ? <source src={blobURL} type=\"video/mp4\" /> : null}\n        </video>\n    )\n})\n","import { makeStyles } from '@masknet/theme'\nimport { type BoxMetadata, MediaType } from '../../type.js'\nimport { Box } from '@mui/material'\nimport { resolveIPFS_URL } from '@masknet/web3-shared-base'\nimport { Video } from '@masknet/shared'\n\nconst useStyles = makeStyles()((theme) => ({\n    main: {\n        padding: 16,\n    },\n    hero: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        height: 360,\n        objectFit: 'scale-down',\n    },\n}))\n\ninterface ArticlesTabProps {\n    boxMetadata?: BoxMetadata\n}\n\nexport function ArticlesTab(props: ArticlesTabProps) {\n    const { boxMetadata } = props\n    const { classes } = useStyles()\n\n    return (\n        <Box className={classes.main}>\n            <Box>\n                {(() => {\n                    if (!boxMetadata?.mediaType)\n                        return (\n                            <img\n                                className={classes.hero}\n                                src={new URL('../../assets/FallbackImage.svg', import.meta.url).toString()}\n                            />\n                        )\n                    switch (boxMetadata.mediaType) {\n                        case MediaType.Video:\n                            return (\n                                <Video\n                                    VideoProps={{ className: classes.hero, controls: true }}\n                                    src={resolveIPFS_URL(boxMetadata?.mediaUrl) ?? ''}\n                                />\n                            )\n                        default:\n                            return (\n                                <img\n                                    className={classes.hero}\n                                    src={\n                                        boxMetadata?.mediaUrl\n                                            ? resolveIPFS_URL(boxMetadata?.mediaUrl)\n                                            : new URL('../../assets/FallbackImage.svg', import.meta.url).toString()\n                                    }\n                                />\n                            )\n                    }\n                })()}\n            </Box>\n        </Box>\n    )\n}\n","import { Box, Divider, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport type { BoxMetadata } from '../../type.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    main: {\n        height: 360,\n        overflow: 'auto',\n        padding: theme.spacing(2),\n    },\n    section: {\n        border: `1px solid ${theme.palette.maskColor.publicLine}`,\n        borderRadius: 16,\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        '&:last-child': {\n            marginBottom: theme.spacing(0),\n        },\n    },\n    line: {\n        borderColor: theme.palette.maskColor.publicLine,\n    },\n    placeholder: {\n        textAlign: 'center',\n        marginTop: 170,\n    },\n    title: {\n        fontSize: 18,\n        fontWeight: 700,\n        lineHeight: '22px',\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.maskColor.dark,\n    },\n    content: {\n        lineHeight: '20px',\n        whiteSpace: 'pre-line',\n        fontSize: 16,\n        fontWeight: 400,\n        color: theme.palette.maskColor.dark,\n        paddingTop: theme.spacing(2),\n    },\n}))\n\ninterface DetailsTabProps {\n    boxMetadata?: BoxMetadata\n}\n\nexport function DetailsTab(props: DetailsTabProps) {\n    const { boxMetadata } = props\n    const { classes, theme } = useStyles()\n\n    const definitions = boxMetadata?.activities.map((x) => ({\n        title: x.title,\n        content: x.body,\n    }))\n\n    if (!definitions)\n        return (\n            <Box className={classes.main}>\n                <Typography className={classes.placeholder} color={theme.palette.maskColor.publicMain}>\n                    No detailed information.\n                </Typography>\n            </Box>\n        )\n\n    return (\n        <Box className={classes.main}>\n            {definitions?.map((x, i) => (\n                <section className={classes.section} key={i}>\n                    <Typography className={classes.title} color={theme.palette.maskColor.publicMain} variant=\"h3\">\n                        {x.title}\n                    </Typography>\n                    <Divider className={classes.line} />\n                    <Typography className={classes.content} color={theme.palette.maskColor.publicMain} variant=\"body2\">\n                        {x.content}\n                    </Typography>\n                </section>\n            ))}\n        </Box>\n    )\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import type { HTMLProps } from 'react'\nimport type { BigNumber } from 'bignumber.js'\nimport { type ChainId, isZeroAddress } from '@masknet/web3-shared-evm'\nimport { CurrencyType, multipliedBy } from '@masknet/web3-shared-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { useFungibleTokenPrice, useNativeTokenPrice } from '@masknet/web3-hooks-base'\n\ninterface TokenPriceProps extends Omit<HTMLProps<HTMLSpanElement>, 'children'> {\n    chainId: ChainId\n    contractAddress?: string\n    amount: BigNumber.Value\n    currencyType?: CurrencyType\n}\n\nexport function TokenPrice({\n    chainId,\n    contractAddress,\n    amount,\n    currencyType = CurrencyType.USD,\n    ...rest\n}: TokenPriceProps) {\n    const { data: tokenPrice = 0 } = useFungibleTokenPrice(NetworkPluginID.PLUGIN_EVM, contractAddress?.toLowerCase(), {\n        chainId,\n        currencyType,\n    })\n    const { data: nativeTokenPrice = 0 } = useNativeTokenPrice(NetworkPluginID.PLUGIN_EVM, { chainId })\n    const price = isZeroAddress(contractAddress) ? nativeTokenPrice : tokenPrice\n    return <span {...rest}>${multipliedBy(amount, price).toFixed(2)}</span>\n}\n","import { useMemo, useState, useEffect, useCallback } from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport { Tune } from '@mui/icons-material'\nimport { Box, IconButton, Typography } from '@mui/material'\nimport { formatWeiToEther } from '@masknet/web3-shared-evm'\nimport { GasSettingModal, TokenPrice } from '@masknet/shared'\nimport type { NonPayableTx } from '@masknet/web3-contracts/types/types.js'\nimport { GasOptionType, multipliedBy } from '@masknet/web3-shared-base'\nimport { ChainResolver } from '@masknet/web3-providers'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext, useFungibleToken, useGasPrice } from '@masknet/web3-hooks-base'\n\nexport interface GasSettingBarProps {\n    gasLimit: number\n    gasPrice?: BigNumber.Value\n    maxFee?: BigNumber.Value\n    priorityFee?: BigNumber.Value\n    onChange?: (tx: NonPayableTx) => void\n}\n\nexport function GasSettingBar(props: GasSettingBarProps) {\n    const { gasLimit, gasPrice, maxFee, priorityFee, onChange } = props\n\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { data: nativeTokenDetailed } = useFungibleToken(NetworkPluginID.PLUGIN_EVM)\n    const { data: gasPriceDefault = '0' } = useGasPrice(NetworkPluginID.PLUGIN_EVM)\n\n    const [gasOption, setGasOptionType] = useState<GasOptionType>(GasOptionType.NORMAL)\n\n    const onOpenGasSettingDialog = useCallback(() => {\n        GasSettingModal.open(\n            ChainResolver.isFeatureSupported(chainId, 'EIP1559')\n                ? {\n                      gasLimit,\n                      maxFee,\n                      priorityFee,\n                      gasOption,\n                  }\n                : {\n                      gasLimit,\n                      gasPrice,\n                      gasOption,\n                  },\n        )\n    }, [chainId, gasLimit, gasPrice, maxFee, priorityFee, gasOption])\n\n    // set initial options\n    useEffect(() => {\n        const off = GasSettingModal.emitter.on('close', (evt) => {\n            if (evt?.gasOption) setGasOptionType(evt.gasOption)\n            onChange?.(\n                (ChainResolver.isFeatureSupported(chainId, 'EIP1559')\n                    ? {\n                          gas: evt?.gasLimit,\n                          maxFeePerGas: evt?.maxFee,\n                          maxPriorityFeePerGas: evt?.priorityFee,\n                      }\n                    : {\n                          gas: evt?.gasLimit,\n                          gasPrice: evt?.gasPrice,\n                      }) as NonPayableTx,\n            )\n        })\n        return () => {\n            off()\n        }\n    }, [])\n\n    const gasFee = useMemo(() => {\n        return multipliedBy(\n            gasLimit,\n            ChainResolver.isFeatureSupported(chainId, 'EIP1559') && maxFee\n                ? new BigNumber(maxFee)\n                : gasPrice ?? gasPriceDefault,\n        )\n    }, [chainId, gasLimit, gasPrice, maxFee, gasPriceDefault])\n\n    return (\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n            <Typography fontSize=\"14px\" sx={{ marginRight: 1 }}>\n                <span>\n                    {formatWeiToEther(gasFee).toFixed(6)} {nativeTokenDetailed?.symbol ?? ''} &asymp;\n                </span>\n                <TokenPrice chainId={chainId} amount={formatWeiToEther(gasFee)} />\n            </Typography>\n            <IconButton size=\"small\" onClick={onOpenGasSettingDialog}>\n                <Tune fontSize=\"small\" color=\"inherit\" />\n            </IconButton>\n        </Box>\n    )\n}\n","// @ts-nocheck\n/* eslint-disable */\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useMaskBoxTrans(): {\n    /**\n      * `Insufficient balance`\n      */\n    insufficient_balance(): string;\n    /**\n      * `Drawing`\n      */\n    drawing(): string;\n    /**\n      * `Draw`\n      */\n    draw(): string;\n    /**\n      * `Active`\n      */\n    active(): string;\n    /**\n      * `Solid:`\n      */\n    sold(): string;\n    /**\n      * `by`\n      */\n    by(): string;\n    /**\n      * `Limit:`\n      */\n    limit(): string;\n    /**\n      * `Articles`\n      */\n    articles(): string;\n    /**\n      * `Closed`\n      */\n    close(): string;\n    /**\n      * `Details`\n      */\n    details(): string;\n    /**\n      * `Load failed`\n      */\n    failed(): string;\n    /**\n      * `Reload`\n      */\n    retry(): string;\n    /**\n      * `{{title}} ({{price}} {{symbol}}/Time)`\n      */\n    action_title(options: Readonly<{\n        title: string;\n        price: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `MaskBox`\n      */\n    plugin_mask_box_name(): string;\n    /**\n      * `Professional multi-chain decentralized platform for launching NFT mystery boxes.`\n      */\n    plugin_mask_box_description(): string;\n} { const { t } = useTranslation(\"com.maskbook.box\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\n","import { useCallback } from 'react'\nimport { useContainer } from 'unstated-next'\nimport { makeStyles, ActionButton, MaskTextField } from '@masknet/theme'\nimport { Add, Remove } from '@mui/icons-material'\nimport { useChainContext, useProviderDescriptor } from '@masknet/web3-hooks-base'\nimport { NUMERIC_INPUT_REGEXP_PATTERN } from '@masknet/shared-base'\nimport {\n    FormattedAddress,\n    ImageIcon,\n    InjectedDialog,\n    PluginWalletStatusBar,\n    WalletConnectedBoundary,\n    TokenPrice,\n    EthereumERC20TokenApprovedBoundary,\n    GasSettingBar,\n} from '@masknet/shared'\nimport { Box, Button, DialogActions, DialogContent, Typography } from '@mui/material'\nimport { formatEthereumAddress, SchemaType, useMaskBoxConstants } from '@masknet/web3-shared-evm'\nimport { formatBalance, formatCurrency, multipliedBy } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { BoxInfo } from '../../type.js'\nimport { Context } from '../../hooks/useContext.js'\nimport { useMaskBoxTrans } from '../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    main: {\n        padding: `${theme.spacing(2.5)} !important`,\n    },\n    caption: {\n        textAlign: 'center',\n    },\n    body: {\n        padding: theme.spacing(0, 2.5),\n    },\n    value: {\n        fontSize: 32,\n        lineHeight: '40px',\n        fontWeight: 'bold',\n        marginBottom: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    section: {\n        padding: theme.spacing(2, 0),\n        justifyContent: 'space-between',\n    },\n    title: {\n        width: '50%',\n    },\n    content: {},\n    field: {\n        borderRadius: 0,\n        padding: theme.spacing(0),\n        height: '25px !important',\n        minWidth: 0,\n        minHeight: 0,\n        outline: 'none !important',\n        borderColor: `${theme.palette.divider} !important`,\n    },\n    textfield: {\n        width: 40,\n        textAlign: 'center',\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderColor: theme.palette.divider,\n            },\n            '&:hover fieldset': {\n                borderColor: theme.palette.divider,\n            },\n            '&.Mui-focused fieldset': {\n                borderWidth: 1,\n                borderColor: theme.palette.divider,\n            },\n        },\n    },\n    number: {\n        '&::-webkit-outer-spin-button, &::-webkit-inner-spin-button': {\n            appearance: 'none',\n            margin: 0,\n        },\n        padding: 0,\n        appearance: 'textfield',\n        textAlign: 'center',\n        borderImage: 'none',\n    },\n}))\n\ninterface DrawDialogProps {\n    boxInfo: BoxInfo\n    open: boolean\n    drawing?: boolean\n    onClose: () => void\n    onSubmit: () => Promise<void>\n}\n\nexport function DrawDialog(props: DrawDialogProps) {\n    const { boxInfo, open, drawing, onClose, onSubmit } = props\n    const { classes } = useStyles()\n    const { MASK_BOX_CONTRACT_ADDRESS } = useMaskBoxConstants()\n    const t = useMaskBoxTrans()\n\n    const {\n        paymentCount,\n        setPaymentCount,\n        paymentTokenPrice,\n        paymentTokenBalance,\n        paymentTokenDetailed,\n        isBalanceInsufficient,\n        isAllowanceEnough,\n\n        openBoxTransactionGasLimit,\n        setOpenBoxTransactionOverrides,\n    } = useContainer(Context)\n\n    const providerDescriptor = useProviderDescriptor()\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    const onCount = useCallback(\n        (step: number) => {\n            setPaymentCount(paymentCount + step)\n        },\n        [paymentCount],\n    )\n\n    return (\n        <InjectedDialog title=\"Draw\" open={open} onClose={onClose}>\n            <DialogContent className={classes.main}>\n                <Box>\n                    <Box className={classes.caption}>\n                        <Typography color=\"textPrimary\">\n                            <span className={classes.value}>\n                                {formatCurrency(multipliedBy(paymentTokenPrice, paymentCount), '')}\n                            </span>\n                            <span>{paymentTokenDetailed?.symbol}</span>\n                        </Typography>\n                        {paymentTokenDetailed ? (\n                            <Typography color=\"textPrimary\">\n                                <span>&asymp;</span>\n                                <TokenPrice\n                                    chainId={chainId}\n                                    amount={formatCurrency(paymentTokenPrice, '')}\n                                    contractAddress={paymentTokenDetailed.address}\n                                />\n                            </Typography>\n                        ) : null}\n                    </Box>\n                    <Box className={classes.body}>\n                        <Box className={classes.section} display=\"flex\" alignItems=\"center\">\n                            <Typography className={classes.title} color=\"textPrimary\">\n                                Mystery Boxes:\n                            </Typography>\n                            <Box className={classes.content} display=\"flex\" alignItems=\"center\">\n                                <Button\n                                    className={classes.field}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    disabled={paymentCount <= 1}\n                                    onClick={() => onCount(-1)}>\n                                    <Remove color=\"inherit\" />\n                                </Button>\n                                <MaskTextField\n                                    className={classes.textfield}\n                                    type=\"number\"\n                                    size=\"small\"\n                                    sx={{ marginLeft: 1, marginRight: 1 }}\n                                    value={paymentCount}\n                                    disabled={boxInfo.remaining === 0 || boxInfo.personalRemaining <= 1}\n                                    onChange={(ev) => {\n                                        const count = Number.parseInt(ev.target.value, 10)\n                                        if (count >= 1 && count <= boxInfo.availableAmount) {\n                                            setPaymentCount(count)\n                                        }\n                                    }}\n                                    InputProps={{\n                                        classes: {\n                                            root: classes.field,\n                                        },\n                                        autoFocus: true,\n                                        inputProps: {\n                                            className: classes.number,\n                                            autoComplete: 'off',\n                                            autoCorrect: 'off',\n                                            title: 'Token Amount',\n                                            inputMode: 'decimal',\n                                            min: 0,\n                                            max: 255,\n                                            minLength: 1,\n                                            pattern: NUMERIC_INPUT_REGEXP_PATTERN,\n                                            spellCheck: false,\n                                        },\n                                    }}\n                                />\n                                <Button\n                                    className={classes.field}\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    disabled={\n                                        paymentCount >= boxInfo.availableAmount ||\n                                        boxInfo.remaining === 0 ||\n                                        boxInfo.personalRemaining === 1\n                                    }\n                                    onClick={() => onCount(1)}>\n                                    <Add color=\"inherit\" />\n                                </Button>\n                            </Box>\n                        </Box>\n                        <Box className={classes.section} display=\"flex\" alignItems=\"center\">\n                            <Typography className={classes.title} color=\"textPrimary\">\n                                Quantity Limit:\n                            </Typography>\n                            <Typography className={classes.content} color=\"textPrimary\">\n                                {boxInfo.personalLimit}\n                            </Typography>\n                        </Box>\n                        <Box className={classes.section} display=\"flex\" alignItems=\"center\">\n                            <Typography className={classes.title} color=\"textPrimary\">\n                                Available amount:\n                            </Typography>\n                            <Typography className={classes.content} color=\"textPrimary\">\n                                {boxInfo.availableAmount}/{boxInfo.total}\n                            </Typography>\n                        </Box>\n                        <Box className={classes.section} display=\"flex\" alignItems=\"center\">\n                            <Typography className={classes.title} color=\"textPrimary\">\n                                Current Wallet:\n                            </Typography>\n                            <Box className={classes.content} display=\"flex\" alignItems=\"center\">\n                                <ImageIcon size={16} icon={providerDescriptor?.icon} />\n                                <Typography color=\"textPrimary\" sx={{ marginLeft: 1 }}>\n                                    <FormattedAddress address={account} size={6} formatter={formatEthereumAddress} />\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Box className={classes.section} display=\"flex\" alignItems=\"center\">\n                            <Typography className={classes.title} color=\"textPrimary\">\n                                Available:\n                            </Typography>\n                            <Box className={classes.content}>\n                                <Typography color=\"textPrimary\">\n                                    {formatBalance(paymentTokenBalance, paymentTokenDetailed?.decimals ?? 0, 6)}{' '}\n                                    {paymentTokenDetailed?.symbol}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        {isAllowanceEnough ? (\n                            <Box className={classes.section} display=\"flex\" alignItems=\"center\">\n                                <Typography className={classes.title} color=\"textPrimary\">\n                                    Gas Fee:\n                                </Typography>\n                                <Box className={classes.content}>\n                                    <GasSettingBar\n                                        gasLimit={openBoxTransactionGasLimit || 0}\n                                        onChange={setOpenBoxTransactionOverrides}\n                                    />\n                                </Box>\n                            </Box>\n                        ) : null}\n                    </Box>\n                </Box>\n            </DialogContent>\n            <DialogActions style={{ padding: 0 }}>\n                <PluginWalletStatusBar>\n                    <WalletConnectedBoundary expectedChainId={chainId}>\n                        <EthereumERC20TokenApprovedBoundary\n                            amount={multipliedBy(paymentTokenPrice, paymentCount).toFixed()}\n                            spender={MASK_BOX_CONTRACT_ADDRESS}\n                            token={paymentTokenDetailed?.schema === SchemaType.ERC20 ? paymentTokenDetailed : undefined}\n                            ActionButtonProps={{ size: 'medium', sx: { marginTop: 2 } }}>\n                            <ActionButton\n                                size=\"medium\"\n                                fullWidth\n                                sx={{ marginTop: 2 }}\n                                disabled={isBalanceInsufficient || drawing}\n                                onClick={onSubmit}>\n                                {isBalanceInsufficient ? t.insufficient_balance() : drawing ? t.drawing() : t.draw()}\n                            </ActionButton>\n                        </EthereumERC20TokenApprovedBoundary>\n                    </WalletConnectedBoundary>\n                </PluginWalletStatusBar>\n            </DialogActions>\n        </InjectedDialog>\n    )\n}\n","import { memo, useMemo } from 'react'\nimport { Card, Link } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { useWeb3Others, useNetworkDescriptor } from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { NetworkPluginID, type Wallet } from '@masknet/shared-base'\nimport { AssetPreviewer, ImageIcon } from '@masknet/shared'\nimport { NETWORK_DESCRIPTORS } from '@masknet/web3-shared-evm'\nimport type { SourceType } from '@masknet/web3-shared-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: '8px 8px 0 0',\n        position: 'absolute',\n        zIndex: 1,\n        backgroundColor: theme.palette.mode === 'light' ? '#F7F9FA' : '#2F3336',\n        width: '100%',\n        height: '100%',\n    },\n    networkIcon: {\n        position: 'absolute',\n        top: 6,\n        left: 6,\n    },\n    fallbackImage: {\n        minHeight: '0 !important',\n        maxWidth: 'none',\n        width: 30,\n        height: 30,\n    },\n    blocker: {\n        position: 'absolute',\n        zIndex: 2,\n        width: '100%',\n        height: '100%',\n    },\n    linkWrapper: {\n        position: 'relative',\n        display: 'block',\n    },\n}))\n\ninterface CollectibleCardProps {\n    className?: string\n    provider: SourceType\n    wallet?: Wallet\n    asset: Web3Helper.NonFungibleAssetAll\n    link?: string\n    readonly?: boolean\n    pluginID?: NetworkPluginID\n    disableLink?: boolean\n    showNetworkIcon?: boolean\n}\n\nexport const CollectibleCard = memo(function CollectibleCard({\n    className,\n    wallet,\n    asset,\n    readonly,\n    pluginID,\n    disableLink,\n    showNetworkIcon,\n    ...rest\n}: CollectibleCardProps) {\n    const { classes, cx } = useStyles()\n    const Others = useWeb3Others()\n\n    const networkDescriptor = useNetworkDescriptor(pluginID)\n\n    const networkIcon = useMemo(() => {\n        if (pluginID === NetworkPluginID.PLUGIN_EVM) {\n            return NETWORK_DESCRIPTORS.find((network) => network?.chainId === asset.chainId)?.icon\n        }\n        return networkDescriptor?.icon\n    }, [asset.chainId, pluginID])\n\n    const content = (\n        <>\n            <div className={classes.blocker} />\n            <Card className={classes.root}>\n                <AssetPreviewer\n                    url={asset.metadata?.mediaURL || asset.metadata?.imageURL}\n                    classes={{\n                        fallbackImage: classes.fallbackImage,\n                    }}\n                />\n                {networkIcon ? <ImageIcon icon={networkIcon} size={24} className={classes.networkIcon} /> : null}\n            </Card>\n        </>\n    )\n\n    if (disableLink) return <div className={cx(classes.linkWrapper, className)}>{content}</div>\n\n    return (\n        <Link\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={\n                asset.link ?? Others.explorerResolver.nonFungibleTokenLink(asset.chainId, asset.address, asset.tokenId)\n            }\n            className={cx(classes.linkWrapper, className)}\n            {...rest}>\n            {content}\n        </Link>\n    )\n})\n","import { memo } from 'react'\nimport { useNonFungibleAsset } from '@masknet/web3-hooks-base'\nimport { LoadingBase, makeStyles } from '@masknet/theme'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { type NonFungibleTokenContract, SourceType } from '@masknet/web3-shared-base'\nimport type { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { Typography } from '@mui/material'\nimport { CollectibleCard } from './CollectibleCard.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    title: {\n        textAlign: 'center',\n        margin: theme.spacing(1, 0),\n        maxWidth: 160,\n    },\n    name: {\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n    },\n}))\n\ninterface TokenCardProps {\n    tokenId: string\n    contractDetailed: NonFungibleTokenContract<ChainId, SchemaType>\n}\n\nexport const TokenCard = memo<TokenCardProps>(({ contractDetailed, tokenId }: TokenCardProps) => {\n    const { classes } = useStyles()\n    const { data: tokenDetailed } = useNonFungibleAsset(NetworkPluginID.PLUGIN_EVM, contractDetailed.address, tokenId)\n\n    return tokenDetailed ? (\n        <>\n            <CollectibleCard readonly provider={SourceType.OpenSea} asset={tokenDetailed} />\n            <div className={classes.title}>\n                <Typography className={classes.name} color=\"textSecondary\" variant=\"body2\">\n                    {tokenDetailed.contract?.name ?? tokenId}\n                </Typography>\n            </div>\n        </>\n    ) : (\n        <LoadingBase />\n    )\n})\n","import { difference } from 'lodash-es'\nimport { useContainer } from 'unstated-next'\nimport { makeStyles, ActionButton } from '@masknet/theme'\nimport { Box, DialogContent } from '@mui/material'\nimport type { BoxInfo } from '../../type.js'\nimport { TokenCard } from './TokenCard.js'\nimport { InjectedDialog } from '@masknet/shared'\nimport { Context } from '../../hooks/useContext.js'\nimport type { NonFungibleTokenContract } from '@masknet/web3-shared-base'\nimport type { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { Icons } from '@masknet/icons'\nimport { usePostLink } from '@masknet/plugin-infra/content-script'\nimport { share } from '@masknet/plugin-infra/content-script/context'\n\nconst useStyles = makeStyles()((theme) => ({\n    main: { padding: 8 },\n    list: {\n        height: 360,\n        overflow: 'auto',\n        marginBottom: theme.spacing(2),\n        display: 'grid',\n        flexWrap: 'wrap',\n        gridTemplateColumns: 'repeat(auto-fill, minmax(160px, 1fr))',\n        gridGap: theme.spacing(1),\n        padding: 8,\n    },\n    token: {},\n}))\n\ninterface DrawResultDialogProps {\n    open: boolean\n    onClose: () => void\n    boxInfo: BoxInfo\n    contractDetailed?: NonFungibleTokenContract<ChainId, SchemaType>\n}\n\nexport function DrawResultDialog(props: DrawResultDialogProps) {\n    const { open, onClose, boxInfo, contractDetailed } = props\n    const { classes } = useStyles()\n    const { lastPurchasedTokenIds } = useContainer(Context)\n\n    const postLink = usePostLink()\n    const shareText = `I just claimed a #MaskBox with @realMaskNetwork. Install mask.io and create your own NFT mystery box! \\n ${postLink}`\n\n    const onShare = () => {\n        onClose()\n        share?.(shareText)\n    }\n\n    if (!contractDetailed) return null\n\n    return (\n        <InjectedDialog title=\"Successful\" open={open} onClose={onClose}>\n            <DialogContent>\n                <Box className={classes.main}>\n                    <Box className={classes.list} display=\"flex\" flexWrap=\"wrap\">\n                        {difference(boxInfo.tokenIdsPurchased, lastPurchasedTokenIds).map((x, i) => (\n                            <Box className={classes.token} key={x} flex={1}>\n                                <TokenCard tokenId={x} contractDetailed={contractDetailed} />\n                            </Box>\n                        ))}\n                    </Box>\n                    <ActionButton startIcon={<Icons.Shared size={18} />} size=\"medium\" fullWidth onClick={onShare}>\n                        Share\n                    </ActionButton>\n                </Box>\n            </DialogContent>\n        </InjectedDialog>\n    )\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport Color from 'color'\nimport { useContainer } from 'unstated-next'\nimport { TabContext, TabPanel } from '@mui/lab'\nimport { useChainContext, useNetworkDescriptor, useWeb3Others } from '@masknet/web3-hooks-base'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport { makeStyles, ActionButton, LoadingBase, useTabs, MaskTabList } from '@masknet/theme'\nimport { Box, Button, Chip, Paper, Tab, Typography, useTheme } from '@mui/material'\nimport { WalletConnectedBoundary, ChainBoundary, ImageIcon, TokenIcon } from '@masknet/shared'\nimport { useTransactionCallback } from '@masknet/web3-hooks-evm'\nimport { formatCurrency } from '@masknet/web3-shared-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { Context } from '../../hooks/useContext.js'\nimport { BoxState } from '../../type.js'\nimport { ArticlesTab } from './ArticlesTab.js'\nimport { DetailsTab } from './DetailsTab.js'\nimport { DrawDialog } from './DrawDialog.js'\nimport { DrawResultDialog } from './DrawResultDialog.js'\nimport { useMaskBoxTrans } from '../../locales/index.js'\n\nconst useTabsStyles = makeStyles()((theme) => ({\n    button: {\n        backgroundColor: theme.palette.maskColor.dark,\n        color: theme.palette.maskColor.white,\n        fontSize: 14,\n        fontWeight: 700,\n        width: '100%',\n        '&:hover': {\n            backgroundColor: theme.palette.maskColor.dark,\n        },\n        margin: '0 !important',\n    },\n    tab: {\n        whiteSpace: 'nowrap',\n        background: 'transparent',\n        color: theme.palette.maskColor.publicSecond,\n        '&:hover': {\n            background: 'transparent',\n        },\n    },\n    tabActive: {\n        background: theme.palette.maskColor.white,\n        color: theme.palette.maskColor.publicMain,\n        '&:hover': {\n            background: theme.palette.maskColor.white,\n        },\n    },\n    body: {\n        padding: 12,\n        paddingBottom: 0,\n    },\n    content: {\n        margin: '0 12px',\n        flex: 1,\n        backgroundColor: theme.palette.maskColor.white,\n        overflow: 'auto',\n        borderRadius: '0 0 12px 12px',\n        scrollbarWidth: 'none',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    header: {\n        gap: 24,\n        display: 'flex',\n        padding: 12,\n        alignItems: 'center',\n    },\n    imgBox: {\n        width: 50,\n        height: 50,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'relative',\n    },\n    name: {\n        color: theme.palette.maskColor.publicMain,\n        fontSize: 18,\n        fontWeight: 700,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        width: 250,\n    },\n    active: {\n        color: theme.palette.maskColor.white,\n        width: 65,\n        height: 32,\n        fontSize: 12,\n        fontWeight: 700,\n        backgroundColor: theme.palette.maskColor.success,\n    },\n    close: {\n        color: theme.palette.maskColor.white,\n        width: 65,\n        backgroundColor: new Color(theme.palette.maskColor.primary).alpha(0.1).toString(),\n        height: 32,\n        fontSize: 12,\n        fontWeight: 700,\n    },\n    iconBox: {\n        position: 'absolute',\n        bottom: 0,\n        right: -8,\n        padding: 1,\n        backgroundColor: theme.palette.maskColor.bg,\n        borderRadius: 9999,\n        lineHeight: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n    },\n    icon: {\n        width: 20,\n        height: 20,\n    },\n    statusBox: {\n        display: 'flex',\n        justifyContent: 'end',\n        alignItems: 'center',\n        height: 148,\n        flexDirection: 'column',\n    },\n}))\n\nexport function PreviewCard() {\n    const { classes } = useTabsStyles()\n    const [openDrawDialog, setOpenDrawDialog] = useState(false)\n    const [openDrawResultDialog, setOpenDrawResultDialog] = useState(false)\n    const { chainId } = useChainContext()\n    const networkDescriptor = useNetworkDescriptor()\n    const theme = useTheme()\n    const t = useMaskBoxTrans()\n    const {\n        boxState,\n        boxStateMessage,\n        boxInfo,\n        boxMetadata,\n        contractDetailed,\n        setPaymentCount,\n        paymentTokenAddress,\n        setPaymentTokenAddress,\n        paymentTokenPrice,\n        paymentTokenDetailed,\n\n        refreshLastPurchasedTokenIds,\n\n        // transaction\n        openBoxTransaction,\n        openBoxTransactionOverrides,\n        openBoxTransactionGasLimit,\n        setOpenBoxTransactionOverrides,\n\n        // retry\n        retryMaskBoxStatus,\n        retryMaskBoxInfo,\n        retryBoxInfo,\n        retryMaskBoxCreationSuccessEvent,\n        retryMaskBoxTokensForSale,\n        retryMaskBoxPurchasedTokens,\n    } = useContainer(Context)\n\n    const [currentTab, onChange, tabs] = useTabs('Articles', 'Details')\n\n    const txConfig = useMemo(() => {\n        return {\n            ...openBoxTransaction?.config,\n            gas: openBoxTransactionOverrides?.gas ?? openBoxTransactionGasLimit,\n        }\n    }, [openBoxTransaction?.config, openBoxTransactionOverrides, openBoxTransactionGasLimit])\n\n    // #region open box\n    const [{ loading: isOpening }, openBoxCallback] = useTransactionCallback(txConfig, openBoxTransaction?.method)\n    const onRefresh = useCallback(() => {\n        setPaymentCount(1)\n        setPaymentTokenAddress('')\n        retryMaskBoxInfo()\n        retryMaskBoxCreationSuccessEvent()\n        retryMaskBoxTokensForSale()\n        retryMaskBoxPurchasedTokens()\n    }, [retryMaskBoxInfo, retryMaskBoxCreationSuccessEvent, retryMaskBoxTokensForSale, retryMaskBoxPurchasedTokens])\n    const [drawing, setDrawing] = useState(false)\n    const onDraw = useCallback(async () => {\n        setDrawing(true)\n        refreshLastPurchasedTokenIds()\n        try {\n            await openBoxCallback()\n            onRefresh()\n            setOpenDrawResultDialog(true)\n            retryMaskBoxStatus()\n            setOpenDrawDialog(false)\n        } catch {}\n        setDrawing(false)\n    }, [openBoxCallback, refreshLastPurchasedTokenIds, onRefresh, retryMaskBoxStatus])\n    const Others = useWeb3Others()\n    // #endregion\n\n    if (boxState === BoxState.UNKNOWN)\n        return (\n            <Box className={classes.statusBox}>\n                <Box sx={{ display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                    <LoadingBase />\n                </Box>\n            </Box>\n        )\n    if (boxState === BoxState.ERROR)\n        return (\n            <Box className={classes.statusBox}>\n                <Typography color=\"error\">{t.failed()}</Typography>\n                <Button\n                    sx={{\n                        width: 254,\n                        backgroundColor: theme.palette.maskColor.publicMain,\n                        color: 'white',\n                        '&:hover': {\n                            backgroundColor: theme.palette.maskColor.publicMain,\n                        },\n                        height: 40,\n                        marginBottom: 2,\n                        marginTop: '26px',\n                    }}\n                    size=\"small\"\n                    variant=\"roundedContained\"\n                    onClick={retryBoxInfo}>\n                    {t.retry()}\n                </Button>\n            </Box>\n        )\n    if (boxState === BoxState.NOT_FOUND || !boxInfo)\n        return (\n            <Box className={classes.statusBox}>\n                <Typography color=\"error\">{t.failed()}</Typography>\n                <Button\n                    sx={{\n                        width: 254,\n                        backgroundColor: theme.palette.maskColor.publicMain,\n                        color: 'white',\n                        '&:hover': {\n                            backgroundColor: theme.palette.maskColor.publicMain,\n                        },\n                        height: 40,\n                        marginBottom: 2,\n                        marginTop: '26px',\n                    }}\n                    size=\"small\"\n                    variant=\"roundedContained\"\n                    onClick={retryMaskBoxInfo}>\n                    {t.retry()}\n                </Button>\n            </Box>\n        )\n\n    const Tabs = [\n        {\n            value: tabs.Articles,\n            label: t.articles(),\n        },\n        {\n            value: tabs.Details,\n            label: t.details(),\n        },\n    ]\n\n    return (\n        <>\n            <TabContext value={currentTab}>\n                <Box className={classes.header}>\n                    <Box className={classes.imgBox}>\n                        <TokenIcon\n                            address={boxInfo.tokenAddress ?? ''}\n                            name={boxInfo.name}\n                            chainId={chainId}\n                            sx={{ width: 48, height: 48 }}\n                        />\n                        <Box className={classes.iconBox}>\n                            <ImageIcon size={24} icon={networkDescriptor?.icon} className={classes.icon} />\n                        </Box>\n                    </Box>\n                    <Box sx={{ flex: 1 }}>\n                        <Typography title={boxInfo.name} className={classes.name}>\n                            {boxInfo.name}\n                        </Typography>\n                        <Box sx={{ flex: 1, display: 'flex', flexDirection: 'row' }}>\n                            <Box sx={{ flex: 1, display: 'flex', flexDirection: 'row' }}>\n                                <Typography\n                                    sx={{ paddingRight: 1 }}\n                                    color={theme.palette.maskColor.publicSecond}\n                                    fontSize={14}\n                                    fontWeight={400}>\n                                    {t.sold()}\n                                </Typography>\n                                <Typography color={theme.palette.maskColor.publicMain} fontSize={14} fontWeight=\"bold\">\n                                    {boxInfo.sold}/{boxInfo.total}\n                                </Typography>\n                                <Typography\n                                    sx={{ paddingRight: 1, paddingLeft: 1 }}\n                                    color={theme.palette.maskColor.publicSecond}\n                                    fontSize={14}\n                                    fontWeight={400}>\n                                    {t.limit()}\n                                </Typography>\n                                <Typography color={theme.palette.maskColor.publicMain} fontSize={14} fontWeight=\"bold\">\n                                    {boxInfo.personalLimit}\n                                </Typography>\n                            </Box>\n                            <Box sx={{ display: 'flex', flexDirection: 'row' }}>\n                                <Typography\n                                    sx={{ paddingRight: 1 }}\n                                    color={theme.palette.maskColor.publicSecond}\n                                    fontSize={14}\n                                    fontWeight={400}>\n                                    {t.by()}\n                                </Typography>\n                                <Typography\n                                    color={theme.palette.maskColor.publicMain}\n                                    fontSize={14}\n                                    fontWeight=\"bold\"\n                                    title={boxInfo.creator}>\n                                    {Others.formatAddress(boxInfo.creator, 4)}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Box>\n                    <Chip\n                        className={boxState === BoxState.READY ? classes.active : classes.close}\n                        label={boxState === BoxState.READY ? t.active() : t.close()}\n                    />\n                </Box>\n                <Box className={classes.body}>\n                    <MaskTabList variant=\"base\" aria-label=\"maskbox\" onChange={onChange}>\n                        {Tabs.map((x) => (\n                            <Tab\n                                key={x.value}\n                                value={x.value}\n                                label={x.label}\n                                className={x.value === currentTab ? classes.tabActive : classes.tab}\n                            />\n                        ))}\n                    </MaskTabList>\n                </Box>\n                <Paper className={classes.content}>\n                    <TabPanel value={tabs.Articles} key={tabs.Articles} sx={{ padding: 0 }}>\n                        {boxInfo ? <ArticlesTab boxMetadata={boxMetadata} /> : null}\n                    </TabPanel>\n                    <TabPanel value={tabs.Details} key={tabs.Details} sx={{ padding: 0 }}>\n                        {boxInfo ? <DetailsTab boxMetadata={boxMetadata} /> : null}\n                    </TabPanel>\n                </Paper>\n\n                <Box style={{ padding: 12 }}>\n                    <ChainBoundary\n                        expectedPluginID={NetworkPluginID.PLUGIN_EVM}\n                        expectedChainId={chainId as ChainId}\n                        ActionButtonPromiseProps={{ variant: 'roundedDark' }}>\n                        <WalletConnectedBoundary\n                            expectedChainId={chainId}\n                            ActionButtonProps={{ size: 'medium', variant: 'roundedDark' }}\n                            classes={{ button: classes.button }}>\n                            <ActionButton\n                                loading={isOpening}\n                                size=\"medium\"\n                                variant=\"roundedDark\"\n                                fullWidth\n                                disabled={boxState !== BoxState.READY || isOpening}\n                                onClick={() => setOpenDrawDialog(true)}>\n                                {(() => {\n                                    return boxState === BoxState.READY && paymentTokenAddress\n                                        ? t.action_title({\n                                              title: boxStateMessage,\n                                              price: formatCurrency(paymentTokenPrice, ''),\n                                              symbol: paymentTokenDetailed?.symbol ?? '',\n                                          })\n                                        : boxStateMessage\n                                })()}\n                            </ActionButton>\n                        </WalletConnectedBoundary>\n                    </ChainBoundary>\n                </Box>\n            </TabContext>\n            <DrawDialog\n                boxInfo={boxInfo}\n                open={openDrawDialog}\n                drawing={drawing}\n                onClose={() => {\n                    setOpenBoxTransactionOverrides(null)\n                    setOpenDrawDialog(false)\n                }}\n                onSubmit={onDraw}\n            />\n            <DrawResultDialog\n                boxInfo={boxInfo}\n                contractDetailed={contractDetailed}\n                open={openDrawResultDialog}\n                onClose={() => {\n                    refreshLastPurchasedTokenIds()\n                    setOpenDrawResultDialog(false)\n                }}\n            />\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { Trans } from 'react-i18next'\nimport { type Plugin, usePluginWrapper, usePostInfoDetails } from '@masknet/plugin-infra/content-script'\nimport { Icons } from '@masknet/icons'\nimport { extractTextFromTypedMessage } from '@masknet/typed-message'\nimport { PluginID, parseURLs } from '@masknet/shared-base'\nimport { ApplicationEntry } from '@masknet/shared'\nimport { openWindow } from '@masknet/shared-base-ui'\nimport { base } from '../base.js'\nimport { PreviewCard } from './components/PreviewCard.js'\nimport { Context } from '../hooks/useContext.js'\n\nconst isMaskBox = (x: string) => x.startsWith('https://box-beta.mask.io') || x.startsWith('https://box.mask.io')\n\nconst site: Plugin.SiteAdaptor.Definition = {\n    ...base,\n    DecryptedInspector(props) {\n        const link = useMemo(() => {\n            const x = extractTextFromTypedMessage(props.message)\n            if (x.isNone()) return null\n            return parseURLs(x.value).find(isMaskBox)\n        }, [props.message])\n        if (!link) return null\n        return <Renderer url={link} />\n    },\n    PostInspector() {\n        const links = usePostInfoDetails.mentionedLinks()\n        const link = links.find(isMaskBox)\n        if (!link) return null\n        return <Renderer url={link} />\n    },\n    ApplicationEntries: [\n        (() => {\n            const icon = <Icons.MaskBox />\n            const name = <Trans i18nKey=\"plugin_mask_box_name\" ns={PluginID.MaskBox} />\n            const iconFilterColor = 'rgba(0, 87, 255, 0.3)'\n            return {\n                ApplicationEntryID: base.ID,\n                RenderEntryComponent({ disabled }) {\n                    return (\n                        <ApplicationEntry\n                            title={name}\n                            disabled={disabled}\n                            iconFilterColor={iconFilterColor}\n                            icon={icon}\n                            onClick={() => openWindow('https://box.mask.io/#/')}\n                        />\n                    )\n                },\n                appBoardSortingDefaultPriority: 14,\n                marketListSortingPriority: 14,\n                icon,\n                tutorialLink: 'https://realmasknetwork.notion.site/d0941687649a4ef7a38d71f23ecbe4da',\n                description: <Trans i18nKey=\"plugin_mask_box_description\" ns={PluginID.MaskBox} />,\n                category: 'dapp',\n                iconFilterColor,\n                name,\n            }\n        })(),\n    ],\n}\n\nexport default site\n\nfunction Renderer(\n    props: React.PropsWithChildren<{\n        url: string\n    }>,\n) {\n    const [, matchedChainId] = props.url.match(/chain=(\\d+)/i) ?? []\n    const [, boxId] = props.url.match(/box=(\\d+)/i) ?? []\n    const [, hashRoot] = props.url.match(/rootHash=([\\dA-Za-z]+)/) ?? []\n\n    const shouldNotRender = !matchedChainId || !boxId\n    usePluginWrapper(!shouldNotRender)\n    if (shouldNotRender) return null\n\n    return (\n        <Context.Provider initialState={{ boxId, hashRoot }}>\n            <PreviewCard />\n        </Context.Provider>\n    )\n}\n","import urlcat from 'urlcat'\nimport { MERKLE_PROOF_ENDPOINT } from '../constants.js'\n\nexport async function getMerkleProof(leaf: string, root: string) {\n    try {\n        const response = await fetch(\n            urlcat(MERKLE_PROOF_ENDPOINT, {\n                leaf,\n                root: root.replace(/^0x/, ''),\n            }),\n        )\n        return (await response.json()) as {\n            proof?: string[]\n            message?: string\n            module?: string\n        }\n    } catch (err) {\n        throw new Error(Reflect.get(Object(err), 'message'))\n    }\n}\n","type WindowTarget = LiteralUnion<'_top' | '_self' | '_parent' | '_blank'>\n\ninterface BehaviorFlags {\n    popup?: boolean\n    toolbar?: boolean\n    status?: boolean\n    resizable?: boolean\n    scrollbars?: boolean\n}\n\ninterface WindowFeatureFlags {\n    // Behavior\n    opener?: boolean\n    referrer?: boolean\n    behaviors?: BehaviorFlags\n    // Dimension\n    width?: number\n    height?: number\n    screenX?: number\n    screenY?: number\n}\n\nexport function openWindow(\n    url: string | URL | undefined | null,\n    target: WindowTarget = '_blank',\n    features: WindowFeatureFlags = {},\n): Window | null {\n    if (!url) return null\n    const flags = []\n    for (const [name, value] of Object.entries(features.behaviors ?? {})) {\n        if (value) flags.push(`${name}=1`)\n    }\n    if (!features.opener) flags.push('noopener')\n    if (!features.referrer) flags.push('noreferrer')\n    if (Number.isFinite(features.width)) flags.push(`width=${features.width}`)\n    if (Number.isFinite(features.height)) flags.push(`height=${features.height}`)\n    if (Number.isFinite(features.screenX)) flags.push(`screenX=${features.screenX}`)\n    if (Number.isFinite(features.screenY)) flags.push(`screenY=${features.screenY}`)\n    return window.open(url, target, flags.join(' '))\n}\n","const cache = new WeakMap<object, object>()\n/**\n * This function provides a localImplementation that has HMR support.\n * To update, call this function with the SAME key object.\n * @param impl The implementation. Can be an async function.\n * @param key The reference object that must be the same if you're updating.\n */\nexport async function getOrUpdateLocalImplementationHMR<T extends object>(impl: () => T | Promise<T>, key: object) {\n    if (!import.meta.webpackHot) return impl()\n\n    const result: any = await impl()\n    if (!cache.has(key)) cache.set(key, Object.create(null))\n    const localImpl = cache.get(key)\n    Object.setPrototypeOf(localImpl, result)\n    return localImpl\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Image } from '../Image/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        position: 'relative',\n    },\n    fallbackImage: {\n        height: 64,\n        width: 64,\n    },\n    icon: {\n        position: 'absolute',\n        top: theme.spacing(0.5),\n        left: theme.spacing(0.5),\n    },\n}))\n\nexport interface AssetPreviewerProps extends withClasses<'root' | 'fallbackImage' | 'container'> {\n    url?: string\n    fallbackImage?: JSX.Element | string\n    icon?: React.ReactNode\n}\n\nexport function AssetPreviewer(props: AssetPreviewerProps) {\n    const { fallbackImage, url, icon } = props\n\n    const { classes } = useStyles(undefined, { props })\n\n    return (\n        <div className={classes.root}>\n            <Image\n                classes={{\n                    fallbackImage: classes.fallbackImage,\n                    container: classes.container,\n                }}\n                width=\"100%\"\n                height=\"100%\"\n                style={{ objectFit: 'cover' }}\n                src={url}\n                fallback={fallbackImage}\n            />\n            {icon ? <div className={classes.icon}>{icon}</div> : null}\n        </div>\n    )\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\n}), 'HelpOutline');","import React, { useCallback, useMemo } from 'react'\nimport { unreachable } from '@masknet/kit'\nimport { TokenIcon } from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { ActionButton, ShadowRootTooltip, makeStyles, type ActionButtonProps } from '@masknet/theme'\nimport { useChainContext, useFungibleTokenBalance, useFungibleTokenSpenders } from '@masknet/web3-hooks-base'\nimport { ApproveStateType, useERC20TokenApproveCallback } from '@masknet/web3-hooks-evm'\nimport { isGte, isSameAddress, type FungibleToken, rightShift } from '@masknet/web3-shared-base'\nimport type { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { HelpOutline } from '@mui/icons-material'\nimport { useSharedTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles<void, 'icon'>()((theme, _, refs) => ({\n    icon: {},\n    button: {\n        whiteSpace: 'nowrap',\n        // increase selector priority over button's\n        [`.${refs.icon}`]: {\n            width: 18,\n            height: 18,\n            fontSize: 10,\n        },\n    },\n    helpIcon: {\n        width: 18,\n        height: 18,\n    },\n}))\n\nexport interface EthereumERC20TokenApprovedBoundaryProps extends withClasses<'button' | 'container'> {\n    amount: string\n    balance?: string\n    spender?: string\n    token?: FungibleToken<ChainId, SchemaType>\n    fallback?: React.ReactNode\n    children?: React.ReactNode | ((allowance: string) => React.ReactNode)\n    infiniteUnlockContent?: React.ReactNode\n    ActionButtonProps?: ActionButtonProps\n    contractName?: string\n    showHelperToken?: boolean\n    failedContent?: React.ReactNode\n    callback?: () => void\n}\n\nexport function EthereumERC20TokenApprovedBoundary(props: EthereumERC20TokenApprovedBoundaryProps) {\n    const {\n        children = null,\n        amount,\n        balance,\n        spender,\n        token,\n        infiniteUnlockContent,\n        contractName,\n        showHelperToken = true,\n        failedContent,\n        callback,\n    } = props\n\n    const t = useSharedTrans()\n    const { classes } = useStyles(undefined, { props })\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: token?.chainId })\n    const { data: tokenBalance } = useFungibleTokenBalance(NetworkPluginID.PLUGIN_EVM, token?.address, {\n        chainId,\n    })\n\n    const {\n        data: spenders,\n        isLoading: spendersLoading,\n        isError,\n        refetch,\n    } = useFungibleTokenSpenders(NetworkPluginID.PLUGIN_EVM, {\n        chainId,\n        account,\n    })\n\n    const approveAmount = balance || tokenBalance || amount\n    const [{ type: approveStateType, allowance }, transactionState, approveCallback] = useERC20TokenApproveCallback(\n        token?.address ?? '',\n        approveAmount,\n        spender ?? '',\n        () => {\n            callback?.()\n            refetch()\n        },\n        token?.chainId,\n    )\n    const approved = useMemo(() => {\n        if (isGte(allowance, amount)) return true\n        if (!token?.address || !spenders?.length) return false\n        return spenders.some((x) => {\n            return (\n                isSameAddress(x.tokenInfo.address, token.address) &&\n                isSameAddress(x.address, spender) &&\n                isGte(rightShift(x.amount || 0, x.tokenInfo.decimals || token.decimals), amount)\n            )\n        })\n    }, [allowance, amount, spenders, token?.address, token?.decimals, spender])\n\n    const loading =\n        spendersLoading ||\n        approveStateType === ApproveStateType.UPDATING ||\n        transactionState.loadingApprove ||\n        transactionState.loading\n\n    const onApprove = useCallback(async () => {\n        if (approved || loading) return\n        await approveCallback(true)\n    }, [approved, loading, approveCallback])\n\n    // not a valid erc20 token, please given token as undefined\n    if (!token) return <>{typeof children === 'function' ? children(allowance) : children}</>\n\n    if (isError)\n        return (\n            <ActionButton\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                onClick={() => refetch()}\n                {...props.ActionButtonProps}>\n                {failedContent ?? t.wallet_load_retry({ symbol: token.symbol ?? token.name ?? 'Token' })}\n            </ActionButton>\n        )\n    if (loading || !approved)\n        return (\n            <ActionButton\n                loading={loading}\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                startIcon={\n                    <TokenIcon\n                        className={classes.icon}\n                        address={token.address}\n                        chainId={token.chainId}\n                        name={token.name}\n                        disableDefaultIcon\n                    />\n                }\n                endIcon={\n                    showHelperToken ? (\n                        <ShadowRootTooltip\n                            title={t.plugin_wallet_token_infinite_unlock_tips({\n                                provider: contractName ?? '',\n                                symbol: token.symbol,\n                            })}\n                            placement=\"top\"\n                            arrow\n                            leaveDelay={2000}\n                            disableInteractive\n                            disableFocusListener\n                            disableTouchListener>\n                            <HelpOutline className={classes.helpIcon} />\n                        </ShadowRootTooltip>\n                    ) : null\n                }\n                onClick={onApprove}\n                {...props.ActionButtonProps}>\n                {infiniteUnlockContent ?? t.plugin_wallet_token_infinite_unlock({ symbol: token.symbol })}\n            </ActionButton>\n        )\n    if (approved) return <>{typeof children === 'function' ? children(allowance) : children}</>\n\n    unreachable(approved)\n}\n","import { type HTMLProps, type ImgHTMLAttributes, useState } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { useTheme } from '@mui/material'\n\nconst useStyles = makeStyles<Pick<ImageProps, 'size' | 'rounded'>, 'center'>()((theme, { size, rounded }, refs) => ({\n    optimistic: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    container: {\n        width: size ?? '100%',\n        height: size ?? '100%',\n        position: 'relative',\n        borderRadius: rounded ? '50%' : undefined,\n        overflow: rounded ? 'hidden' : undefined,\n    },\n    image: {\n        display: 'block',\n    },\n    failImage: {\n        width: 30,\n        height: 30,\n    },\n    center: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    failed: {\n        [`&.${refs.center}`]: {\n            background:\n                theme.palette.mode === 'light'\n                    ? 'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.9) 100%), linear-gradient(90deg, rgba(98, 152, 234, 0.2) 1.03%, rgba(98, 152, 234, 0.2) 1.04%, rgba(98, 126, 234, 0.2) 100%)'\n                    : 'linear-gradient(180deg, #202020 0%, #181818 100%)',\n        },\n    },\n}))\n\nconst MASK_DARK_FALLBACK = new URL('./mask-dark.png', import.meta.url).href\nconst MASK_LIGHT_FALLBACK = new URL('./mask-light.png', import.meta.url).href\n\nexport interface ImageProps\n    extends ImgHTMLAttributes<HTMLImageElement>,\n        withClasses<'container' | 'fallbackImage' | 'imageLoading' | 'failed'> {\n    size?: number | string\n    rounded?: boolean\n    fallback?: string | JSX.Element | null\n    disableSpinner?: boolean\n    containerProps?: HTMLProps<HTMLDivElement>\n}\n\nexport function Image({\n    fallback,\n    size,\n    rounded,\n    disableSpinner,\n    classes: extraClasses,\n    onClick,\n    containerProps,\n    ...rest\n}: ImageProps) {\n    const { classes, cx } = useStyles({ size, rounded }, { props: { classes: extraClasses } })\n    const theme = useTheme()\n    const [failed, setFailed] = useState(false)\n\n    if (rest.src && !failed) {\n        return (\n            <div {...containerProps} className={cx(classes.container, classes.optimistic, containerProps?.className)}>\n                <img\n                    className={classes.image}\n                    width={size}\n                    height={size}\n                    {...rest}\n                    src={rest.src}\n                    onError={() => setFailed(true)}\n                />\n            </div>\n        )\n    }\n\n    if (fallback && !(fallback instanceof URL) && typeof fallback !== 'string') {\n        return (\n            <div\n                {...containerProps}\n                className={cx(classes.container, classes.failed, classes.center, containerProps?.className)}>\n                {fallback}\n            </div>\n        )\n    }\n\n    return (\n        <div\n            {...containerProps}\n            className={cx(classes.container, classes.failed, classes.center, containerProps?.className)}>\n            <img\n                loading=\"lazy\"\n                decoding=\"async\"\n                width={size}\n                height={size}\n                {...rest}\n                src={fallback?.toString() ?? (theme.palette.mode === 'dark' ? MASK_DARK_FALLBACK : MASK_LIGHT_FALLBACK)}\n                className={cx(classes.image, classes.failImage, classes.fallbackImage)}\n            />\n        </div>\n    )\n}\n","import { useSubscription } from 'use-subscription'\nimport { FALSE, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useRiskWarningApproved<T extends NetworkPluginID>(pluginID?: T) {\n    const { RiskWarning } = useWeb3State(pluginID)\n    return useSubscription(RiskWarning?.approved ?? FALSE)\n}\n","import { makeStyles, ActionButton, type ActionButtonProps } from '@masknet/theme'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { isZero } from '@masknet/web3-shared-base'\nimport {\n    useChainContext,\n    useNetworkContext,\n    useNativeTokenBalance,\n    useRiskWarningApproved,\n    useWallet,\n} from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useAsync } from 'react-use'\nimport { SmartPayBundler } from '@masknet/web3-providers'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { SelectProviderModal, WalletRiskWarningModal } from '../../modals/modals.js'\n\nconst useStyles = makeStyles()({\n    button: {\n        margin: 0,\n    },\n})\n\nexport interface WalletConnectedBoundaryProps extends withClasses<'connectWallet' | 'button'> {\n    offChain?: boolean\n    children?: React.ReactNode\n    expectedChainId: Web3Helper.ChainIdAll\n    hideRiskWarningConfirmed?: boolean\n    ActionButtonProps?: ActionButtonProps\n    startIcon?: React.ReactNode\n}\n\nexport function WalletConnectedBoundary(props: WalletConnectedBoundaryProps) {\n    const { children = null, offChain = false, hideRiskWarningConfirmed = false, expectedChainId } = props\n\n    const t = useSharedTrans()\n    const { classes, cx } = useStyles(undefined, { props })\n\n    const { pluginID } = useNetworkContext()\n    const { account, chainId: chainIdValid } = useChainContext({ chainId: expectedChainId })\n    const wallet = useWallet()\n    const { value: smartPayChainId } = useAsync(async () => SmartPayBundler.getSupportedChainId(), [])\n\n    const nativeTokenBalance = useNativeTokenBalance(undefined, {\n        chainId: chainIdValid,\n    })\n    const approved = useRiskWarningApproved()\n\n    const buttonClass = cx(classes.button, classes.connectWallet)\n\n    if (!account)\n        return (\n            <ActionButton\n                startIcon={props.startIcon}\n                className={buttonClass}\n                fullWidth\n                onClick={() => SelectProviderModal.open()}\n                {...props.ActionButtonProps}>\n                {t.plugin_wallet_connect_a_wallet()}\n            </ActionButton>\n        )\n\n    if (!approved && !hideRiskWarningConfirmed && pluginID === NetworkPluginID.PLUGIN_EVM)\n        return (\n            <ActionButton\n                className={buttonClass}\n                fullWidth\n                variant=\"contained\"\n                onClick={() => {\n                    WalletRiskWarningModal.open({\n                        account,\n                        pluginID,\n                    })\n                }}\n                {...props.ActionButtonProps}>\n                {t.plugin_wallet_confirm_risk_warning()}\n            </ActionButton>\n        )\n\n    if (!(wallet?.owner && chainIdValid === smartPayChainId) && isZero(nativeTokenBalance.value ?? '0') && !offChain)\n        return (\n            <ActionButton\n                className={buttonClass}\n                disabled={!nativeTokenBalance.error}\n                fullWidth\n                variant=\"contained\"\n                onClick={nativeTokenBalance.retry}\n                {...props.ActionButtonProps}>\n                {nativeTokenBalance.loading ? t.plugin_wallet_update_gas_fee() : t.plugin_wallet_no_gas_fee()}\n            </ActionButton>\n        )\n\n    if (!chainIdValid && !offChain)\n        return (\n            <ActionButton className={buttonClass} disabled fullWidth variant=\"contained\" {...props.ActionButtonProps}>\n                {t.plugin_wallet_invalid_network()}\n            </ActionButton>\n        )\n\n    return <>{children}</>\n}\n","import { Fragment } from 'react'\nimport { identity } from 'lodash-es'\n\nexport interface FormattedAddressProps {\n    address?: string\n    size?: number\n    formatter?: (address: string, size?: number) => string\n}\n\nexport function FormattedAddress({ address, size, formatter = identity }: FormattedAddressProps) {\n    if (!address) return null\n    return <Fragment>{formatter(address, size)}</Fragment>\n}\n","import { type ForwardedRef, forwardRef } from 'react'\nimport { omit } from 'lodash-es'\nimport type { BoxProps } from '@mui/system'\nimport {\n    Box,\n    formHelperTextClasses,\n    TextField,\n    type StandardTextFieldProps,\n    type InputProps,\n    Typography,\n    InputBase,\n    inputBaseClasses,\n    alpha,\n} from '@mui/material'\nimport { Sniffings } from '@masknet/shared-base'\nimport { makeStyles } from '../../UIHelper/makeStyles.js'\nimport { MaskColorVar, getMaskColor } from '../../CSSVariables/vars.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    label: {\n        fontSize: 12,\n        lineHeight: '16px',\n        fontWeight: 'bolder',\n    },\n    required: {\n        fontSize: 12,\n        lineHeight: '16px',\n        fontWeight: 'bolder',\n        color: getMaskColor(theme).redMain,\n        paddingLeft: theme.spacing(0.5),\n    },\n    field: {\n        width: '100%',\n        [`& > .${formHelperTextClasses.root}`]: {\n            paddingTop: theme.spacing(1),\n            borderRadius: '2px',\n            fontSize: 14,\n            lineHeight: '16px',\n        },\n        '& input[type=number]': {\n            MozAppearance: 'textfield',\n            WebkitAppearance: 'none',\n        },\n        '& input[type=number]::-webkit-outer-spin-button': {\n            WebkitAppearance: 'none',\n        },\n        '& input[type=number]::-webkit-inner-spin-button': {\n            WebkitAppearance: 'none',\n        },\n        '& input::-webkit-input-placeholder': {\n            color: theme.palette.maskColor.third,\n        },\n        [`&.${inputBaseClasses.focused}`]: {\n            background: 'transparent',\n        },\n    },\n    input: {\n        padding: theme.spacing(1),\n        background: theme.palette.maskColor.input,\n        fontSize: 13,\n        lineHeight: '16px',\n        borderRadius: 6,\n        border: '1px solid transparent',\n        [`&.${formHelperTextClasses.error}`]: {\n            boxShadow: `0 0 0 ${theme.spacing(0.5)} ${MaskColorVar.redMain.alpha(0.2)}`,\n            borderColor: MaskColorVar.redMain.alpha(0.8),\n        },\n        [`&.${formHelperTextClasses.focused}`]: {\n            borderColor: Sniffings.is_dashboard_page ? alpha(theme.palette.maskColor.primary, 0.5) : 'transparent',\n        },\n    },\n    inputDisabled: {\n        opacity: 0.5,\n        color: 'rgba(255, 255, 255, 0.4)',\n    },\n    inputFocused: {\n        background: 'transparent',\n        ...(Sniffings.is_dashboard_page\n            ? {\n                  outline: `2px solid ${alpha(theme.palette.maskColor.primary, 0.2)}`,\n                  borderColor: alpha(theme.palette.maskColor.primary, 0.5),\n              }\n            : { boxShadow: `0 0 0 2px ${theme.palette.mode === 'dark' ? '#4F5378' : 'rgba(28, 104, 243, 0.2)'}` }),\n    },\n}))\n\nexport interface MaskTextFieldProps extends Exclude<StandardTextFieldProps, 'variant'> {\n    wrapperProps?: BoxProps\n}\n\nexport const MaskTextField = forwardRef((props: MaskTextFieldProps, ref: ForwardedRef<any>) => {\n    const { label, sx, required = false, className, wrapperProps, helperText, ...rest } = props\n    const InputProps = (props.InputProps as InputProps) ?? {}\n    const { classes, cx } = useStyles()\n    return (\n        <Box sx={sx} {...wrapperProps}>\n            {label && typeof label === 'string' ? (\n                <Typography sx={{ mb: 1 }} variant=\"body2\" className={classes.label}>\n                    {label}\n                    {required ? (\n                        <Typography className={classes.required} component=\"span\">\n                            *\n                        </Typography>\n                    ) : null}\n                </Typography>\n            ) : null}\n            {label && typeof label !== 'string' ? label : null}\n            {Sniffings.is_dashboard_page ? (\n                <TextField\n                    ref={ref}\n                    {...rest}\n                    classes={{ root: classes.field }}\n                    variant=\"standard\"\n                    required={required}\n                    helperText={helperText}\n                    InputProps={{\n                        disableUnderline: true,\n                        classes: {\n                            disabled: classes.inputDisabled,\n                            focused: classes.inputFocused,\n                            ...InputProps.classes,\n                        },\n                        ...InputProps,\n                        className: cx(classes.input, InputProps?.className),\n                    }}\n                />\n            ) : (\n                <InputBase\n                    className={classes.field}\n                    {...omit(InputProps, 'disableUnderline')}\n                    {...omit(rest, 'margin', 'onKeyDown', 'onKeyUp', 'InputProps', 'inputProps', 'FormHelperTextProps')}\n                />\n            )}\n        </Box>\n    )\n})\n\nMaskTextField.displayName = 'MaskTextField'\n","import type { NonSerializableTypedMessage, Meta } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\n/**\n * A single image\n * TODO: it should be serializable but still not decided how to do that yet.\n */\nexport interface TypedMessageImage extends NonSerializableTypedMessage {\n    readonly type: 'image'\n    readonly image: string | Blob\n    readonly width?: number\n    readonly height?: number\n}\n\nexport const isTypedMessageImage = createIsType<TypedMessageImage>('image')\n\nexport function makeTypedMessageImage(\n    image: TypedMessageImage['image'],\n    size?: { width: number; height: number },\n    meta?: Meta,\n): TypedMessageImage {\n    return {\n        type: 'image',\n        serializable: false,\n        image,\n        width: size?.width,\n        height: size?.height,\n        meta,\n    }\n}\n","import type { TypedMessage, NonSerializableTypedMessage } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\nexport interface PendingPromise<T> extends Promise<T> {\n    status: 'pending'\n}\nexport interface FulfilledPromise<T> extends Promise<T> {\n    readonly status: 'fulfilled'\n    readonly value: T\n}\nexport interface RejectedPromise<T> extends Promise<T> {\n    readonly status: 'rejected'\n    readonly reason: any\n}\nexport type StatusExposedPromise<T> = PendingPromise<T> | FulfilledPromise<T> | RejectedPromise<T>\nexport interface TypedMessagePromise<T extends TypedMessage = TypedMessage> extends NonSerializableTypedMessage {\n    readonly type: 'promise'\n    readonly promise: StatusExposedPromise<T>\n    readonly meta?: undefined\n    /** What to display when the message is not ready. */\n    readonly alt?: TypedMessage\n}\n\nexport const isTypedMessagePromise = createIsType<TypedMessagePromise>('promise')\n\nexport function makeTypedMessagePromise<T extends TypedMessage = TypedMessage>(\n    promise: Promise<T>,\n    alt?: TypedMessage,\n): TypedMessagePromise<T> {\n    const x: TypedMessagePromise<T> = {\n        type: 'promise',\n        serializable: false,\n        promise: getPromiseWithStatus(promise),\n        alt,\n        meta: undefined,\n    }\n    return x\n}\nconst seen = new WeakMap<Promise<any>, StatusExposedPromise<any>>()\nfunction getPromiseWithStatus<T>(promise: Promise<T>): StatusExposedPromise<T> {\n    // let's assume it already handle the status update\n    if ('status' in promise) return promise as StatusExposedPromise<T>\n    if (seen.has(promise)) return seen.get(promise)!\n    const _ = Promise.resolve(promise) as StatusExposedPromise<T>\n    Object.defineProperty(_, 'status', { configurable: true, value: 'pending' })\n    _.then(\n        (value) => {\n            Object.defineProperties(_, {\n                status: { value: 'fulfilled' },\n                value: { value },\n            })\n        },\n        (error) => {\n            Object.defineProperties(_, {\n                status: { value: 'rejected' },\n                reason: { value: error },\n            })\n        },\n    )\n    seen.set(promise, _)\n    return _\n}\n","import type { SerializableTypedMessage, TypedMessage, Meta } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\nexport type TypedMessageText = TypedMessageTextV1\n\n/** A text message */\nexport interface TypedMessageTextV1 extends SerializableTypedMessage<1> {\n    readonly type: 'text'\n    readonly content: string\n}\n\nexport const isTypedMessageTextV1 = createIsType<TypedMessageTextV1>('text', 1)\n\nexport const isTypedMessageText: (x: TypedMessage) => x is TypedMessageText = isTypedMessageTextV1\n\nexport function makeTypedMessageText(text: string, meta?: Meta): TypedMessageTextV1 {\n    return {\n        type: 'text',\n        version: 1,\n        serializable: true,\n        content: text,\n        meta,\n    }\n}\n","import type { SerializableTypedMessage, SerializableTypedMessages, TypedMessage, Meta } from '../base.js'\nimport { isSerializableTypedMessage } from '../utils/index.js'\nimport { composeEvery } from '../utils/internal.js'\n\n/** Multiple TypedMessages (ordered) */\nexport interface TypedMessageTuple<T extends readonly TypedMessage[] = readonly TypedMessage[]> extends TypedMessage {\n    readonly type: 'tuple'\n    readonly items: T\n}\nexport interface TypedMessageTupleSerializable<\n    T extends readonly SerializableTypedMessages[] = readonly SerializableTypedMessages[],\n> extends SerializableTypedMessage<1>,\n        TypedMessageTuple<T> {\n    readonly type: 'tuple'\n}\n\nexport function isTypedMessageTuple(x: TypedMessage): x is TypedMessageTuple | TypedMessageTupleSerializable {\n    return x.type === 'tuple'\n}\n\nexport const isTypedMessageTupleSerializable: (x: TypedMessage) => x is TypedMessageTupleSerializable = composeEvery(\n    isTypedMessageTuple,\n    isSerializableTypedMessage,\n) as any\n\nexport function makeTypedMessageTuple<T extends readonly TypedMessage[] = readonly TypedMessage[]>(\n    items: T,\n    meta?: Meta,\n): TypedMessageTuple<T> {\n    return { type: 'tuple', items, meta }\n}\nexport function makeTypedMessageTupleFromList<T extends readonly TypedMessage[] = readonly TypedMessage[]>(\n    ...args: T\n): TypedMessageTuple<T> {\n    return { type: 'tuple', items: args }\n}\n\nexport function makeTypedMessageTupleSerializable<\n    T extends readonly SerializableTypedMessages[] = readonly SerializableTypedMessages[],\n>(items: T, meta?: Meta): TypedMessageTupleSerializable<T> {\n    return { type: 'tuple', version: 1, serializable: true, items, meta }\n}\n\nexport function makeTypedMessageSerializableTupleFromList<\n    T extends readonly SerializableTypedMessages[] = readonly SerializableTypedMessages[],\n>(...args: T): TypedMessageTupleSerializable<T> {\n    return { type: 'tuple', version: 1, items: args, serializable: true }\n}\n","import type { Meta, TypedMessage } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\n/**\n * This TypedMessage represents an encrypted TypedMessage.\n */\nexport interface TypedMessageMaskPayload extends TypedMessage {\n    readonly type: 'x-mask-payload'\n    readonly message: TypedMessage\n}\nexport const isTypedMessageMaskPayload = createIsType<TypedMessageMaskPayload>('x-mask-payload')\n\nexport function makeTypedMessageMaskPayload(\n    message: TypedMessageMaskPayload['message'],\n    meta?: Meta,\n): TypedMessageMaskPayload {\n    return {\n        type: 'x-mask-payload',\n        message,\n        meta,\n    }\n}\n","import type { Meta, NonSerializableWithAltTypedMessage } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\nimport { makeTypedMessageText, type TypedMessageImage, type TypedMessageText } from '../core/index.js'\n\n/** It represents a single link. */\nexport interface TypedMessageAnchor extends NonSerializableWithAltTypedMessage {\n    readonly type: 'x-anchor'\n    readonly category: 'normal' | 'user' | 'cash' | 'hash'\n    readonly href: string\n    readonly content: string\n    readonly alt: TypedMessageText\n    /** The message that should be displayed as a decorate after the link. */\n    readonly postImage?: TypedMessageImage\n}\n\nexport const isTypedMessageAnchor = createIsType<TypedMessageAnchor>('x-anchor')\n\nexport function makeTypedMessageAnchor(\n    category: TypedMessageAnchor['category'],\n    href: TypedMessageAnchor['href'],\n    content: TypedMessageAnchor['content'],\n    postImage?: TypedMessageImage,\n    meta?: Meta | undefined,\n): TypedMessageAnchor {\n    return {\n        type: 'x-anchor',\n        serializable: false,\n        category,\n        href,\n        content,\n        alt: makeTypedMessageText(`[${content}](${href})`, meta),\n        postImage,\n        meta,\n    }\n}\n","import type { TypedMessage } from '../base.js'\nimport { isTypedMessageText, isTypedMessageImage } from '../core/index.js'\nimport { isTypedMessageAnchor } from '../extension/index.js'\nimport { type Option, Some, None } from 'ts-results-es'\nimport { forEachTypedMessageChild } from '../visitor/index.js'\n\n/**\n * Get inner text from a TypedMessage\n * @param message message\n */\nexport function extractTextFromTypedMessage(\n    message: TypedMessage | null,\n    options?: { linkAsText: boolean },\n): Option<string> {\n    if (!message) return None\n\n    const text: string[] = []\n    function visitor(message: TypedMessage) {\n        if (isTypedMessageText(message)) text.push(message.content)\n        else if (isTypedMessageAnchor(message)) {\n            text.push(message.content)\n            if (options?.linkAsText) text.push(`(${message.href})`)\n        } else forEachTypedMessageChild(message, visitor)\n    }\n    visitor(message)\n    forEachTypedMessageChild(message, visitor)\n    if (text.length) return Some(text.join(' '))\n    return None\n}\nexport function extractImageFromTypedMessage(message: TypedMessage | null): Array<string | Blob> {\n    if (!message) return []\n\n    const image: Array<string | Blob> = []\n    function visitor(message: TypedMessage): void {\n        if (isTypedMessageImage(message)) return void image.push(message.image)\n        return forEachTypedMessageChild(message, visitor)\n    }\n    visitor(message)\n    forEachTypedMessageChild(message, visitor)\n    return image\n}\n","import type {\n    TypedMessage,\n    SerializableTypedMessages,\n    SerializableTypedMessage,\n    NonSerializableWithAltTypedMessage,\n} from '../base.js'\nimport { isEqual } from 'lodash-es'\n\nexport * from './extract.js'\n\nexport function isNonSerializableTypedMessageWithAlt(x: TypedMessage): x is NonSerializableWithAltTypedMessage {\n    const y = x as NonSerializableWithAltTypedMessage\n    if (y.serializable !== false) return false\n    if (!y.alt) return false\n    return isSerializableTypedMessage(y.alt)\n}\nexport function isSerializableTypedMessage(x: TypedMessage): x is SerializableTypedMessages {\n    if ((x as SerializableTypedMessage<number>).serializable) return true\n    return isNonSerializableTypedMessageWithAlt(x)\n}\n\n/**\n * This is a tree compare algorithm, may need to find a more efficient one from NPM\n */\nexport function isTypedMessageEqual(message1: TypedMessage, message2: TypedMessage): boolean {\n    if (message1.type !== message2.type) return false\n    if (message1.meta !== message2.meta) return false\n    // perform a deep equal\n    return isEqual(message1, message2)\n}\n","import type { SerializableTypedMessage, TypedMessage } from '../base.js'\n\n/** @internal */\nexport function createIsType<T extends TypedMessage>(x: T['type'], version?: number) {\n    return (y: TypedMessage): y is T => {\n        if (version !== undefined && (y as SerializableTypedMessage<number>).version !== version) return false\n        return y.type === x\n    }\n}\n/** @internal */\nexport function composeSome<Args extends any[]>(...fns: Array<(...args: Args) => boolean>) {\n    return (...args: Args) => fns.some((f) => f(...args))\n}\n\n/** @internal */\nexport function composeEvery<Args extends any[]>(...fns: Array<(...args: Args) => boolean>) {\n    return (...args: Args) => fns.every((f) => f(...args))\n}\n","import { isTypedMessagePromise, isTypedMessageTuple } from '../core/index.js'\nimport { isNonSerializableTypedMessageWithAlt } from '../utils/index.js'\nimport type { TypedMessage } from '../base.js'\nimport { isTypedMessageMaskPayload } from '../extension/index.js'\n\nexport function forEachTypedMessageChild(node: TypedMessage, visitor: (x: TypedMessage) => void | 'stop') {\n    let stop: void | 'stop'\n    if (isTypedMessageTuple(node)) {\n        for (const each of node.items) {\n            stop = visitor(each)\n            if (stop) return\n        }\n    } else if (isTypedMessagePromise(node)) {\n        // if Promise has a resolved value, we ignore it's alt.\n        if ('value' in node.promise) visitor(node.promise.value)\n        else if (node.alt) visitor(node.alt)\n    } else if (isTypedMessageMaskPayload(node)) {\n        visitor(node.message)\n    } else if (isNonSerializableTypedMessageWithAlt(node)) {\n        visitor(node.alt)\n    }\n}\n","import { noop } from 'lodash-es'\nimport { useEffect } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useBalance<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n    /** Allow to control the request */\n    enabled = true,\n) {\n    const { account, chainId } = useChainContext({ account: options?.account, chainId: options?.chainId })\n    const Web3 = useWeb3Connection(pluginID, {\n        account,\n        chainId,\n        ...options,\n    })\n    const { BalanceNotifier } = useWeb3State(pluginID)\n\n    const result = useQuery({\n        enabled: !!account && !!Web3 && enabled,\n        queryKey: ['balance', pluginID, chainId, account, options],\n        queryFn: async () => {\n            if (!account) return 0\n            return Web3.getBalance(account, { ...options, chainId })\n        },\n    })\n\n    useEffect(() => {\n        return (\n            BalanceNotifier?.emitter.on('update', (ev) => {\n                if (isSameAddress(account, ev.account)) result.refetch()\n            }) ?? noop\n        )\n    }, [account, result.refetch, BalanceNotifier])\n\n    return result\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useFungibleTokenPrice<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID: T,\n    address?: string,\n    options?: HubOptions<T>,\n) {\n    const { chainId } = useChainContext({ chainId: options?.chainId })\n    const Hub = useWeb3Hub(pluginID, {\n        chainId,\n        ...options,\n    })\n\n    return useQuery({\n        enabled: !!chainId && !!address,\n        queryKey: ['fungible', 'token-price', pluginID, chainId, address, options],\n        queryFn: async () => {\n            return Hub.getFungibleTokenPrice(chainId, address!.toLowerCase())\n        },\n    })\n}\n","import { useQuery } from '@tanstack/react-query'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\nexport function useFungibleTokenSpenders<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: HubOptions<T>,\n) {\n    const { account, chainId } = useChainContext<T>({\n        account: options?.account,\n        chainId: options?.chainId,\n    })\n    const Hub = useWeb3Hub(pluginID, {\n        account,\n        chainId,\n        ...options,\n    })\n    return useQuery({\n        queryKey: ['fungible-tokens', 'spenders', chainId, account],\n        enabled: true,\n        queryFn: async () => Hub.getFungibleTokenSpenders(chainId, account),\n    })\n}\n","import { useAsyncRetry } from 'react-use'\nimport { EMPTY_LIST, type NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useFungibleTokens<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    listOfAddress?: string[],\n    options?: ConnectionOptions<T>,\n) {\n    const Web3 = useWeb3Connection(pluginID, options)\n\n    return useAsyncRetry<Array<Web3Helper.FungibleTokenScope<S, T>>>(async () => {\n        if (!listOfAddress?.length) return EMPTY_LIST\n        return Promise.all(listOfAddress.map((x) => Web3.getFungibleToken(x)))\n    }, [Web3, listOfAddress?.join(',')])\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useWeb3Others } from './useWeb3Others.js'\nimport { useNetwork } from './useNetwork.js'\n\nexport function useNativeTokenAddress<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n) {\n    const network = useNetwork(pluginID)\n    const Others = useWeb3Others(pluginID)\n    if (network?.isCustomized) {\n        return network.nativeCurrency.address\n    }\n    return Others.getNativeTokenAddress(options?.chainId)\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useQuery } from '@tanstack/react-query'\nimport { useChainContext } from './useContext.js'\nimport { useNativeTokenAddress } from './useNativeTokenAddress.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\nexport function useNativeTokenPrice<T extends NetworkPluginID = NetworkPluginID>(pluginID: T, options?: HubOptions<T>) {\n    const { chainId } = useChainContext({ chainId: options?.chainId })\n    const Hub = useWeb3Hub(pluginID, options)\n    const nativeTokenAddress = useNativeTokenAddress(pluginID, options)\n\n    return useQuery({\n        enabled: !!nativeTokenAddress,\n        queryKey: ['native-token', 'price', pluginID, chainId, nativeTokenAddress, options],\n        queryFn: async () =>\n            Hub.getFungibleTokenPrice(chainId, nativeTokenAddress!, {\n                chainId,\n            }),\n    })\n}\n","import { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { EMPTY_STRING, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useNetworks } from './useNetworks.js'\n\nexport function useNetwork<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    chainId?: Web3Helper.Definition[T]['ChainId'],\n) {\n    const { Network } = useWeb3State(pluginID)\n    const networks = useNetworks(pluginID)\n    const networkID = useSubscription(Network?.networkID ?? EMPTY_STRING)\n\n    return useMemo(() => {\n        if (chainId) return networks.find((x) => x.chainId === chainId)\n        return networks.find((x) => x.ID === networkID)\n    }, [chainId, networkID, networks])\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useNonFungibleAsset<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    address?: string,\n    id?: string,\n    options?: HubOptions<T>,\n) {\n    const { account } = useChainContext({ account: options?.account })\n    const Hub = useWeb3Hub(pluginID, {\n        account,\n        ...options,\n    })\n\n    return useQuery({\n        enabled: !!address,\n        queryKey: ['non-fungible-asset', pluginID, address, id, account, options],\n        queryFn: async () => {\n            if (!address || (!id && pluginID !== NetworkPluginID.PLUGIN_SOLANA)) return null\n            return Hub.getNonFungibleAsset(address, id ?? '')\n        },\n    })\n}\n","import { useAsyncRetry } from 'react-use'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport type { NonFungibleTokenContract } from '@masknet/web3-shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useNonFungibleTokenContract<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    address?: string,\n    schemaType?: Web3Helper.SchemaTypeScope<S, T>,\n    options?: ConnectionOptions<T>,\n) {\n    const Web3 = useWeb3Connection(pluginID, options)\n\n    return useAsyncRetry<\n        NonFungibleTokenContract<Web3Helper.ChainIdScope<S, T>, Web3Helper.SchemaTypeScope<S, T>> | undefined\n    >(async () => {\n        if (!address) return\n        return Web3.getNonFungibleTokenContract?.(address, schemaType)\n    }, [address, schemaType, Web3])\n}\n","import { useMemo } from 'react'\nimport type { AbiItem } from 'web3-utils'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { type ChainId, createContract } from '@masknet/web3-shared-evm'\nimport type { BaseContract } from '@masknet/web3-contracts/types/types.js'\n\n/**\n * Create a contract which will forward its all transactions to the\n * EthereumService in the background page and decode the result of calls automatically\n * @param address\n * @param ABI\n * @param chainId\n */\nexport function useContract<T extends BaseContract>(chainId?: ChainId, address = '', ABI: AbiItem[] = EMPTY_LIST) {\n    return useMemo(() => createContract<T>(Web3.getWeb3({ chainId }), address, ABI), [address, ABI])\n}\n\n/**\n * Create many contracts with same ABI\n * @param listOfAddress\n * @param ABI\n * @param chainId\n */\nexport function useContracts<T extends BaseContract>(\n    chainId?: ChainId,\n    listOfAddress: string[] = EMPTY_LIST,\n    ABI: AbiItem[] = EMPTY_LIST,\n) {\n    return useMemo(\n        () =>\n            listOfAddress\n                .map((address) => createContract<T>(Web3.getWeb3({ chainId }), address, ABI))\n                .filter(Boolean) as T[],\n        [JSON.stringify(listOfAddress), ABI],\n    )\n}\n","import { fetch } from './fetch.js'\nimport { getNextFetchers, type NextFetchersOptions } from './getNextFetchers.js'\n\nexport async function fetchBlob(\n    input: RequestInfo | URL,\n    init?: RequestInit,\n    options?: NextFetchersOptions,\n): Promise<Blob> {\n    const response = await fetch(input, init, getNextFetchers(options))\n    if (!response.ok) throw new Error('Failed to fetch as Blob.')\n    return response.blob()\n}\n","import { BigNumber } from 'bignumber.js'\nimport { scale10 } from './number.js'\nimport { CurrencyType } from '../index.js'\n\nexport interface FormatterCurrencyOptions {\n    onlyRemainTwoOrZeroDecimal?: boolean\n    fiatCurrencyRate?: number\n    customDecimalConfig?: {\n        boundary: BigNumber\n        decimalExp: number\n    }\n}\n\nconst BOUNDARIES = {\n    zeroDecimalBoundary: scale10(1, 0),\n    twoDecimalBoundary: scale10(1, -2),\n    sixDecimalBoundary: scale10(1, -6),\n    eightDecimalBoundary: scale10(1, -8),\n    twelveDecimalBoundary: scale10(1, -12),\n    zeroDecimalExp: 0,\n    twoDecimalExp: 2,\n    sixDecimalExp: 6,\n    eightDecimalExp: 8,\n    twelveDecimalExp: 12,\n}\n\nconst DIGITAL_CURRENCY_SYMBOLS = {\n    BTC: '\\u20BF',\n    ETH: '\\u039E',\n    SOL: '\\u25CE',\n    BNB: 'BNB',\n    POLYGON: 'MATIC',\n    WETH: 'WETH',\n    AVAX: 'AVAX',\n    GLMR: 'GLMR',\n    MATIC: 'MATIC',\n}\n\ntype UpperCaseKeys = keyof typeof DIGITAL_CURRENCY_SYMBOLS\ntype Keys = UpperCaseKeys | Lowercase<UpperCaseKeys>\n\nconst digitalCurrencyModifier = (parts: Intl.NumberFormatPart[], symbol: string, isDigitalCurrency: boolean) => {\n    if (!isDigitalCurrency) return parts\n    const [currencyPart, ...rest] = parts\n    if (symbol) return [...rest, { ...currencyPart, value: symbol }]\n    return parts\n}\n\nconst formatCurrencySymbol = (symbol: string, isLead: boolean) => {\n    return isLead || symbol.length === 0 ? symbol : ` ${symbol}`\n}\n\nconst fiatCurrencyResultModifier = (\n    result: string,\n    currency: LiteralUnion<Keys | 'USD'> = CurrencyType.USD,\n    onlyRemainTwoOrZeroDecimal: boolean,\n) => {\n    if (currency === CurrencyType.HKD) return result.replaceAll('$', 'HK$')\n\n    if (currency === CurrencyType.JPY && onlyRemainTwoOrZeroDecimal)\n        return result.startsWith('¥') ? '¥' + Number(result.replaceAll(/¥|,/g, '')).toFixed() : result\n\n    return result\n}\n\n// https://mask.atlassian.net/wiki/spaces/MASK/pages/122916438/Token\nexport function formatCurrency(\n    inputValue: BigNumber.Value,\n    currency: LiteralUnion<Keys | 'USD'> = CurrencyType.USD,\n    options?: FormatterCurrencyOptions,\n): string {\n    const { onlyRemainTwoOrZeroDecimal = false, fiatCurrencyRate = 1, customDecimalConfig } = options ?? {}\n    const bn = new BigNumber(inputValue).multipliedBy(fiatCurrencyRate)\n    const integerValue = bn.integerValue(1)\n    const decimalValue = bn.plus(integerValue.negated())\n    const isMoreThanOrEqualToOne = bn.isGreaterThanOrEqualTo(1)\n\n    const {\n        sixDecimalBoundary,\n        zeroDecimalBoundary,\n        twoDecimalBoundary,\n        twelveDecimalBoundary,\n        eightDecimalBoundary,\n        zeroDecimalExp,\n        sixDecimalExp,\n        twoDecimalExp,\n        twelveDecimalExp,\n    } = BOUNDARIES\n\n    const assetValueBoundary = currency === CurrencyType.JPY ? zeroDecimalBoundary : twoDecimalBoundary\n    const assetValueDecimalExp = currency === CurrencyType.JPY ? zeroDecimalExp : twoDecimalExp\n    const zeroValue = currency === CurrencyType.JPY ? '0' : '0.00'\n    const minimumValue = currency === CurrencyType.JPY ? '1' : '0.01'\n    const symbol = currency ? DIGITAL_CURRENCY_SYMBOLS[currency.toUpperCase() as UpperCaseKeys] : ''\n\n    let formatter: Intl.NumberFormat\n    let isIntlCurrencyValid = !DIGITAL_CURRENCY_SYMBOLS[currency.toUpperCase() as UpperCaseKeys]\n\n    try {\n        formatter = new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: isIntlCurrencyValid ? (currency === CurrencyType.JPY ? CurrencyType.CNY : currency) : 'USD',\n            currencyDisplay: 'narrowSymbol',\n        })\n    } catch {\n        isIntlCurrencyValid = false\n        formatter = new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            currencyDisplay: 'narrowSymbol',\n        })\n    }\n\n    const isDigitalCurrency = !!(!isIntlCurrencyValid && symbol)\n    const digitalCurrencyModifierValues = digitalCurrencyModifier(\n        formatter.formatToParts(\n            bn.isZero() ? 0 : bn.lt(sixDecimalBoundary) ? sixDecimalBoundary.toNumber() : bn.toNumber(),\n        ),\n        symbol,\n        isDigitalCurrency,\n    )\n\n    let result: string = ''\n\n    if (\n        bn.lt(customDecimalConfig?.boundary ?? onlyRemainTwoOrZeroDecimal ? assetValueBoundary : sixDecimalBoundary) ||\n        bn.isZero()\n    ) {\n        const isLessThanAssetValueDecimalBoundary = bn.lt(assetValueBoundary)\n        const isLessThanTwelveDecimalBoundary = bn.lt(twelveDecimalBoundary)\n        const isLessThanCustomDecimalBoundary = customDecimalConfig?.boundary\n            ? bn.lt(customDecimalConfig?.boundary)\n            : false\n        const isGreatThanEightDecimalBoundary = bn.gte(eightDecimalBoundary)\n\n        const value = digitalCurrencyModifierValues\n            .map(({ type, value }, i) => {\n                switch (type) {\n                    case 'currency':\n                        return formatCurrencySymbol(symbol ?? value, i === 0)\n                    case 'fraction':\n                        if (customDecimalConfig) {\n                            return bn.isZero()\n                                ? zeroValue\n                                : isLessThanCustomDecimalBoundary\n                                ? customDecimalConfig.boundary.toFixed()\n                                : bn.toFixed(customDecimalConfig.decimalExp).replace(/0+$/, '')\n                        }\n                        return bn.isZero()\n                            ? zeroValue\n                            : onlyRemainTwoOrZeroDecimal\n                            ? minimumValue\n                            : isLessThanTwelveDecimalBoundary\n                            ? sixDecimalBoundary.toFixed()\n                            : isGreatThanEightDecimalBoundary\n                            ? bn.decimalPlaces(10).toFixed(twelveDecimalExp).replace(/0+$/, '')\n                            : bn.toFixed(twelveDecimalExp).replace(/0+$/, '')\n                    default:\n                        return ''\n                }\n            })\n            .join('')\n\n        result = `${\n            (isLessThanTwelveDecimalBoundary || (onlyRemainTwoOrZeroDecimal && isLessThanAssetValueDecimalBoundary)) &&\n            !bn.isZero()\n                ? '< '\n                : ''\n        }${value}`\n    } else if (isMoreThanOrEqualToOne) {\n        result = digitalCurrencyModifierValues\n            .map(({ type, value }, i) => {\n                switch (type) {\n                    case 'currency':\n                        return formatCurrencySymbol(symbol ?? value, i === 0)\n                    case 'literal':\n                        return ''\n                    default:\n                        return value\n                }\n            })\n            .join('')\n    } else {\n        result = digitalCurrencyModifierValues\n            .map(({ type, value }, i) => {\n                switch (type) {\n                    case 'currency':\n                        return formatCurrencySymbol(symbol ?? value, i === 0)\n                    case 'fraction':\n                        const dec = decimalValue\n                            .toFormat(\n                                customDecimalConfig?.decimalExp ??\n                                    (onlyRemainTwoOrZeroDecimal ? assetValueDecimalExp : sixDecimalExp),\n                            )\n                            .replace(/\\d\\./, '')\n                        return onlyRemainTwoOrZeroDecimal ? dec.replace(/(\\d\\d)(0+)$/, '$1') : dec.replace(/(0+)$/, '')\n                    case 'integer':\n                        // When there is a carry\n                        if (bn.gt('0.99') && onlyRemainTwoOrZeroDecimal) return '1'\n                        return '0'\n                    case 'literal':\n                        return ''\n                    default:\n                        return value\n                }\n            })\n            .join('')\n    }\n\n    return fiatCurrencyResultModifier(result, currency, onlyRemainTwoOrZeroDecimal)\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z\"\n}), 'Tune');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\n\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n\n  const {\n    children,\n    className,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props);\n\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\n\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","import React from 'react';\n\nfunction createContainer(useHook) {\n  var Context = React.createContext(null);\n\n  function Provider(props) {\n    var value = useHook(props.initialState);\n    return React.createElement(Context.Provider, {\n      value: value\n    }, props.children);\n  }\n\n  function useContainer() {\n    var value = React.useContext(Context);\n\n    if (value === null) {\n      throw new Error(\"Component must be wrapped with <Container.Provider>\");\n    }\n\n    return value;\n  }\n\n  return {\n    Provider: Provider,\n    useContainer: useContainer\n  };\n}\nfunction useContainer(container) {\n  return container.useContainer();\n}\n\nexport { createContainer, useContainer };\n//# sourceMappingURL=unstated-next.mjs.map\n"],"names":["parser","parseURLs","text","requireProtocol","lib","default","list","map","x","string","filter","y","URL","canParse","createContext","useEffect","useContext","noop","emptyPluginWrapperMethods","setWrap","setWrapperName","setWidth","PluginWrapperMethodsContext","displayName","usePluginWrapper","open","options","width","name","useMemo","useSubscription","useObservableValues","subscription","getCurrentValue","asValues","subscribe","callback","event","on","ALL_EVENTS","createElement","ObservableMap","ObservableSet","ValueRef","useValueRef","PostInfoContext","PostInfoProvider","props","Provider","value","post","children","usePostInfoDetails","__proto__","Proxy","get","_","key","undefined","postInfo","TypeError","k","isSubscription","Object","defineProperty","configurable","getPostURL","usePostLink","id","postID","identifier","WebExtensionMessage","serializer","DOMAIN_RPC","Symbol","getPluginMessage","pluginID","type","domain","cache","has","messageCenter","events","serialization","set","__workaround__replaceImplementationOfCreatePluginMessage__","newImpl","Map","Environment","isEnvironment","AsyncCall","AsyncGeneratorCall","getOrUpdateLocalImplementationHMR","log","requestReplay","process","env","NODE_ENV","sendLocalStack","isBackground","ManifestBackground","__workaround__replaceIsBackground__","f","getPluginRPCInternal","starter","entry","message","rpc","create","channel","send","sendToBackgroundPage","thenable","cacheGenerator","getPluginRPC","startPluginRPC","AbortController","signal","getPluginRPCGenerator","startPluginGeneratorRPC","startPluginRPCInternal","impl","Error","delegate","sendByBroadcast","omit","useAsyncFn","TransactionEventType","useTransactionCallback","config","method","gasExpectedConfig","estimatedGas","estimateGas","gas","error","call","Promise","resolve","reject","once","CONFIRMATION","receipt","transactionHash","ERROR","BoxState","UNKNOWN","NOT_READY","READY","EXPIRED","SOLD_OUT","DRAWED_OUT","CANCELED","NOT_FOUND","NOT_IN_WHITELIST","INSUFFICIENT_HOLDER_TOKEN","NOT_QUALIFIED","MediaType","Audio","Image","Video","Unknown","MASK_BOX_ABI","useMaskBoxConstants","useChainContext","useContract","useMaskBoxContract","chainId","MASK_BOX_CONTRACT_ADDRESS","useAsyncRetry","useMaskBoxInfo","maskBoxContract","info","methods","getBoxInfo","getMerkleProof","useMerkelProof","root","account","leaf","Buffer","from","replace","match","Number","parseInt","toString","useMaskBoxStatus","getBoxStatus","first","range","rangeNum","Web3","FRAGMENT_SIZE","MAX_PAGE_SIZE","useMaskBoxCreationSuccessEvent","creatorAddress","tokenAddress","boxId","MASK_BOX_CONTRACT_FROM_BLOCK","getPastEvents","fromBlock","toBlock","creator","nft_address","box_id","blockNumber","getBlockNumber","Math","max","size","min","ceil","allSettled","index","flatMap","status","filtered","evt","returnValues","useMaskBoxTokensForSale","getNftListForSale","EMPTY_LIST","useMaskBoxPurchasedTokens","customer","getPurchasedNft","formatDuration","intervalToDuration","formatCountdown","to","duration","start","end","multipliedBy","SchemaType","useOpenBoxTransaction","amount","paymentTokenIndex","paymentTokenPrice","paymentTokenDetailed","proof","overrides","schema","Native","toFixed","openBox","PLUGIN_ID","MaskBoxRPC","isValidAddress","useMaskBoxMetadata","getMaskBoxMetadata","MASK_BOX_QUALIFICATION_CONTRACT","useMaskBoxQualificationContract","address","useQualification","qualificationContract","qualification","qualified","error_msg","is_qualified","useState","useCallback","fromUnixTime","addDays","subDays","clamp","uniq","BigNumber","createContainer","unreachable","useERC20TokenAllowance","isZeroAddress","isNativeTokenAddress","abiCoder","formatBalance","isGreaterThan","isGreaterThanOrEqualTo","isLessThanOrEqualTo","isSameAddress","NetworkPluginID","useBalance","useFungibleToken","useFungibleTokenBalance","useFungibleTokens","useNonFungibleTokenContract","initialState","now","Date","setBoxId","rootHash","hashRoot","paymentTokenAddress","setPaymentTokenAddress","maskBoxInfo","errorMaskBoxInfo","loading","loadingMaskBoxInfo","retry","retryMaskBoxInfo","maskBoxStatus","errorMaskBoxStatus","loadingMaskBoxStatus","retryMaskBoxStatus","maskBoxCreationSuccessEvent","retryMaskBoxCreationSuccessEvent","paymentTokens","PLUGIN_EVM","payment","allTokens","retryMaskBoxTokensForSale","purchasedTokens","retryMaskBoxPurchasedTokens","boxInfo","errorBoxInfo","loadingBoxInfo","retryBoxInfo","personalLimit","personal_limit","remaining","total","totalComputed","sold","personalRemaining","length","startAt","start_time","endAt","end_time","sellAll","sell_all","availableAmount","started","canceled","tokenIds","tokenIdsPurchased","payments","token","i","price","receivableAmount","heroImageURL","qualificationAddress","holderTokenAddress","holder_token_addr","holderMinTokenAmount","holder_min_token_amount","errorProof","loadingProof","proofBytes","encodeParameters","p","notInWhiteList","data","holderToken","holderTokenBalance","holderMinTokenAmountBN","insufficientHolderToken","lte","boxState","expired","boxStateMessage","nowAt","getTime","countdown","symbol","decimals","tokenPrice","boxMetadata","retryBoxMetadata","contractDetailed","ERC721","paymentCount","setPaymentCount","setPaymentCount_","count","lastAllTokenIds","setLastAllTokenIds","lastPurchasedTokenIds","setLastPurchasedTokenIds","refreshLastPurchasedTokenIds","paymentNativeTokenBalance","paymentERC20TokenBalance","paymentTokenInfo","find","findIndex","costAmount","isNativeToken","paymentTokenBalance","isBalanceInsufficient","gt","firstPaymentTokenAddress","join","openBoxTransactionOverrides","setOpenBoxTransactionOverrides","openBoxTransaction","erc20Allowance","refetch","retryAllowance","canPurchase","allowToPurchase","isAllowanceEnough","openBoxTransactionGasLimit","toNumber","some","Context","forwardRef","useRef","useAsync","Skeleton","fetchBlob","outgoingRef","src","component","VideoProps","SkeletonProps","videoRef","blobURL","createObjectURL","variant","video","ref","muted","source","makeStyles","Box","resolveIPFS_URL","useStyles","theme","main","padding","hero","display","alignItems","justifyContent","height","objectFit","ArticlesTab","classes","className","mediaType","img","url","controls","mediaUrl","Divider","Typography","overflow","spacing","section","border","palette","maskColor","publicLine","borderRadius","marginBottom","line","borderColor","placeholder","textAlign","marginTop","title","fontSize","fontWeight","lineHeight","paddingBottom","color","dark","content","whiteSpace","paddingTop","DetailsTab","definitions","activities","body","publicMain","CurrencyType","useFungibleTokenPrice","useNativeTokenPrice","TokenPrice","contractAddress","currencyType","USD","rest","toLowerCase","nativeTokenPrice","span","Tune","IconButton","formatWeiToEther","GasSettingModal","GasOptionType","ChainResolver","useGasPrice","GasSettingBar","gasLimit","gasPrice","maxFee","priorityFee","onChange","nativeTokenDetailed","gasPriceDefault","gasOption","setGasOptionType","NORMAL","onOpenGasSettingDialog","isFeatureSupported","off","emitter","maxFeePerGas","maxPriorityFeePerGas","gasFee","flexDirection","sx","marginRight","onClick","useTranslation","createProxy","initValue","define","container","getPrototypeOf","setPrototypeOf","v","getOwnPropertyDescriptor","useMaskBoxTrans","t","bind","useContainer","ActionButton","MaskTextField","Add","Remove","useProviderDescriptor","NUMERIC_INPUT_REGEXP_PATTERN","FormattedAddress","ImageIcon","InjectedDialog","PluginWalletStatusBar","WalletConnectedBoundary","EthereumERC20TokenApprovedBoundary","Button","DialogActions","DialogContent","formatEthereumAddress","formatCurrency","caption","field","minWidth","minHeight","outline","divider","textfield","borderWidth","number","appearance","margin","borderImage","DrawDialog","drawing","onClose","onSubmit","providerDescriptor","onCount","step","disabled","marginLeft","ev","target","InputProps","autoFocus","inputProps","autoComplete","autoCorrect","inputMode","minLength","pattern","spellCheck","icon","formatter","style","expectedChainId","spender","ERC20","ActionButtonProps","fullWidth","insufficient_balance","draw","memo","Card","Link","useWeb3Others","useNetworkDescriptor","AssetPreviewer","NETWORK_DESCRIPTORS","position","zIndex","backgroundColor","mode","networkIcon","top","left","fallbackImage","maxWidth","blocker","linkWrapper","CollectibleCard","wallet","asset","readonly","disableLink","showNetworkIcon","cx","Others","networkDescriptor","network","div","metadata","mediaURL","imageURL","rel","href","link","explorerResolver","nonFungibleTokenLink","tokenId","useNonFungibleAsset","LoadingBase","SourceType","textOverflow","TokenCard","tokenDetailed","provider","OpenSea","contract","difference","Icons","share","flexWrap","gridTemplateColumns","gridGap","DrawResultDialog","postLink","shareText","onShare","flex","startIcon","Shared","Color","TabContext","TabPanel","useTabs","MaskTabList","Chip","Paper","Tab","useTheme","ChainBoundary","TokenIcon","useTabsStyles","button","white","tab","background","publicSecond","tabActive","scrollbarWidth","header","gap","imgBox","active","success","close","primary","alpha","iconBox","bottom","right","bg","statusBox","PreviewCard","openDrawDialog","setOpenDrawDialog","openDrawResultDialog","setOpenDrawResultDialog","currentTab","tabs","txConfig","isOpening","openBoxCallback","onRefresh","setDrawing","onDraw","failed","Tabs","Articles","label","articles","Details","details","paddingRight","paddingLeft","limit","by","formatAddress","aria-label","expectedPluginID","ActionButtonPromiseProps","action_title","Trans","extractTextFromTypedMessage","PluginID","ApplicationEntry","openWindow","base","isMaskBox","startsWith","site","DecryptedInspector","isNone","Renderer","PostInspector","links","mentionedLinks","ApplicationEntries","MaskBox","i18nKey","ns","iconFilterColor","ApplicationEntryID","ID","RenderEntryComponent","appBoardSortingDefaultPriority","marketListSortingPriority","tutorialLink","description","category","matchedChainId","shouldNotRender","urlcat","MERKLE_PROOF_ENDPOINT","response","fetch","json","err","Reflect","features","flags","entries","behaviors","push","opener","referrer","isFinite","screenX","screenY","window","WeakMap","webpackHot","result","localImpl","fallback","React","ShadowRootTooltip","useFungibleTokenSpenders","ApproveStateType","useERC20TokenApproveCallback","isGte","rightShift","HelpOutline","useSharedTrans","refs","helpIcon","balance","infiniteUnlockContent","contractName","showHelperToken","failedContent","tokenBalance","spenders","isLoading","spendersLoading","isError","approveAmount","approveStateType","allowance","transactionState","approveCallback","approved","tokenInfo","UPDATING","loadingApprove","onApprove","wallet_load_retry","disableDefaultIcon","endIcon","plugin_wallet_token_infinite_unlock_tips","placement","arrow","leaveDelay","disableInteractive","disableFocusListener","disableTouchListener","plugin_wallet_token_infinite_unlock","rounded","optimistic","image","failImage","center","MASK_DARK_FALLBACK","MASK_LIGHT_FALLBACK","disableSpinner","extraClasses","containerProps","setFailed","onError","decoding","FALSE","useWeb3State","useRiskWarningApproved","RiskWarning","isZero","useNetworkContext","useNativeTokenBalance","useWallet","SmartPayBundler","SelectProviderModal","WalletRiskWarningModal","offChain","hideRiskWarningConfirmed","chainIdValid","smartPayChainId","getSupportedChainId","nativeTokenBalance","buttonClass","connectWallet","plugin_wallet_connect_a_wallet","plugin_wallet_confirm_risk_warning","owner","plugin_wallet_update_gas_fee","plugin_wallet_no_gas_fee","plugin_wallet_invalid_network","Fragment","identity","formHelperTextClasses","TextField","InputBase","inputBaseClasses","Sniffings","MaskColorVar","getMaskColor","required","redMain","MozAppearance","WebkitAppearance","third","focused","input","boxShadow","is_dashboard_page","inputDisabled","opacity","inputFocused","wrapperProps","helperText","mb","disableUnderline","createIsType","isTypedMessageImage","makeTypedMessageImage","meta","serializable","isTypedMessagePromise","makeTypedMessagePromise","promise","alt","getPromiseWithStatus","seen","then","defineProperties","reason","isTypedMessageTextV1","isTypedMessageText","makeTypedMessageText","version","isSerializableTypedMessage","composeEvery","isTypedMessageTuple","isTypedMessageTupleSerializable","makeTypedMessageTuple","items","makeTypedMessageTupleFromList","args","makeTypedMessageTupleSerializable","makeTypedMessageSerializableTupleFromList","isTypedMessageMaskPayload","makeTypedMessageMaskPayload","isTypedMessageAnchor","makeTypedMessageAnchor","postImage","Some","None","forEachTypedMessageChild","visitor","linkAsText","extractImageFromTypedMessage","isEqual","isNonSerializableTypedMessageWithAlt","isTypedMessageEqual","message1","message2","composeSome","fns","every","node","stop","each","useQuery","useWeb3Connection","enabled","BalanceNotifier","queryKey","queryFn","getBalance","useWeb3Hub","Hub","getFungibleTokenPrice","getFungibleTokenSpenders","listOfAddress","all","getFungibleToken","useNetwork","useNativeTokenAddress","isCustomized","nativeCurrency","getNativeTokenAddress","nativeTokenAddress","EMPTY_STRING","useNetworks","Network","networks","networkID","PLUGIN_SOLANA","getNonFungibleAsset","schemaType","getNonFungibleTokenContract","createContract","ABI","getWeb3","useContracts","Boolean","JSON","stringify","getNextFetchers","init","ok","blob","scale10","BOUNDARIES","zeroDecimalBoundary","twoDecimalBoundary","sixDecimalBoundary","eightDecimalBoundary","twelveDecimalBoundary","zeroDecimalExp","twoDecimalExp","sixDecimalExp","eightDecimalExp","twelveDecimalExp","DIGITAL_CURRENCY_SYMBOLS","BTC","ETH","SOL","BNB","POLYGON","WETH","AVAX","GLMR","MATIC","digitalCurrencyModifier","parts","isDigitalCurrency","currencyPart","formatCurrencySymbol","isLead","fiatCurrencyResultModifier","currency","onlyRemainTwoOrZeroDecimal","HKD","replaceAll","JPY","inputValue","fiatCurrencyRate","customDecimalConfig","bn","integerValue","decimalValue","plus","negated","isMoreThanOrEqualToOne","assetValueBoundary","assetValueDecimalExp","zeroValue","minimumValue","toUpperCase","isIntlCurrencyValid","Intl","NumberFormat","CNY","currencyDisplay","digitalCurrencyModifierValues","formatToParts","lt","boundary","isLessThanAssetValueDecimalBoundary","isLessThanTwelveDecimalBoundary","isLessThanCustomDecimalBoundary","isGreatThanEightDecimalBoundary","gte","decimalExp","decimalPlaces","dec","toFormat"],"sourceRoot":"","x_google_ignoreList":[23,27,28,42,71,72,73,74,75,76,77,78,79,80]}