{"version":3,"file":"bundled/chunk.5799.js","mappings":"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","sources":["webpack://mask-network/./packages/mask/content-script/components/CompositionDialog/useRecipientsList.ts","webpack://mask-network/./packages/mask/content-script/components/DataSource/usePluginHostPermission.ts","webpack://mask-network/./packages/mask/content-script/components/GuideStep/useSetupGuideStatus.ts","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/Avatar.tsx","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/getSearchResultTabs.ts","webpack://mask-network/./packages/mask/content-script/components/DataSource/useSearchedKeyword.ts","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SearchResultInspector.tsx","webpack://mask-network/./packages/mask/content-script/components/shared/SelectRecipients/ProfileInList.tsx","webpack://mask-network/./packages/shared/src/utils/identifierSelector.ts","webpack://mask-network/./packages/mask/content-script/components/shared/SelectRecipients/useContacts.ts","webpack://mask-network/./packages/mask/content-script/components/shared/SelectRecipients/useTwitterIdByWalletSearch.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/AdditionalPostContent.tsx","webpack://mask-network/./packages/mask/content-script/components/shared/SelectProfileUI/SelectProfileUI.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SelectPeopleDialog.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/DecryptedPost/authorDifferentMessage.tsx","webpack://mask-network/./packages/shared/src/UI/components/MaskPluginWrapper/index.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/DisabledPluginSuggestion.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/PermissionBoundary.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/DecryptedPostMetadataRender.tsx","webpack://mask-network/./packages/mask/content-script/components/CompositionDialog/useSelectedRecipientsList.ts","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/DecryptedPost/RecipientsToolTip.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/DecryptedPost/DecryptedPostSuccess.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/DecryptedPost/DecryptPostAwaiting.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/DecryptedPost/DecryptPostFailed.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/DecryptedPost/DecryptedPost.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/PostInspector.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptor-infra/defaults/inject/PostInspector.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Extension.js","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SetupGuide/WizardDialog.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SetupGuide/PinExtension.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SetupGuide/hooks/useCurrentUserId.ts","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SetupGuide/hooks/useConnectedVerified.ts","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SetupGuide/SetupGuideContext.tsx","webpack://mask-network/./packages/shared/src/UI/components/EmojiAvatar/constants.ts","webpack://mask-network/./packages/shared/src/UI/components/EmojiAvatar/index.tsx","webpack://mask-network/./packages/mask/content-script/components/DataSource/useNextIDVerify.ts","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SetupGuide/BindingDialog.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SetupGuide/AccountConnectStatus.tsx","webpack://mask-network/./packages/mask/shared/definitions/event.ts","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SetupGuide/hooks/useConnectPersona.ts","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SetupGuide/hooks/useNotifyConnected.ts","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SetupGuide/hooks/usePostContent.ts","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SetupGuide/VerifyNextID.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SetupGuide/CheckConnection.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/SetupGuide/index.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptor-infra/defaults/inject/StartSetupGuide.tsx","webpack://mask-network/./packages/mask/content-script/utils/collectNodeText.ts","webpack://mask-network/./packages/mask/content-script/utils/collectTwitterEmoji.ts","webpack://mask-network/./packages/mask/shared-ui/TypedMessageRender/Components/Text.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/utils/renderText.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/MetadataRender.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/Core/Text.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/Core/Image.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/utils/circularDetect.ts","webpack://mask-network/./packages/typed-message/react/src/Renderer/Core/Tuple.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/Core/Promise.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/Extension/Anchor.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/registry.tsx","webpack://mask-network/./packages/mask/shared-ui/TypedMessageRender/registry.ts","webpack://mask-network/./packages/mask/shared-ui/TypedMessageRender/context.tsx","webpack://mask-network/./packages/mask/shared-ui/TypedMessageRender/transformer.ts","webpack://mask-network/./packages/mask/shared-ui/components/Avatar.tsx","webpack://mask-network/./packages/mask/shared-ui/hooks/useCurrentPersona.ts","webpack://mask-network/./packages/mask/shared-ui/hooks/usePersonasFromDB.ts","webpack://mask-network/./packages/mask/shared/helpers/attachNextIDToProfile.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/getTabContent.tsx","webpack://mask-network/./packages/shared-base/src/Messages/Events.ts","webpack://mask-network/./packages/shared-base/src/helpers/generateContactAvatarColor.ts","webpack://mask-network/./packages/shared/src/UI/components/ConnectPersonaBoundary/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/GrantPermission/index.tsx","webpack://mask-network/./packages/shared/src/hooks/usePersonasFromNextID.ts","webpack://mask-network/./packages/shared/src/utils/resolveNextIDPlatform.ts","webpack://mask-network/./packages/shared/src/utils/resolveValueToSearch.ts","webpack://mask-network/./packages/typed-message/base/src/extension/index.ts","webpack://mask-network/./packages/typed-message/base/src/transformer/Flatten.ts","webpack://mask-network/./packages/typed-message/base/src/transformer/ParseLink.ts","webpack://mask-network/./packages/typed-message/base/src/transformer/composed.ts","webpack://mask-network/./packages/typed-message/base/src/transformer/context.ts","webpack://mask-network/./packages/typed-message/base/src/utils/parseLink.ts","webpack://mask-network/./packages/typed-message/base/src/visitor/visitEachChild.ts","webpack://mask-network/./packages/typed-message/react/src/Renderer/Core/Unknown.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/utils/DebugElementProvider.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/Entry.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/utils/RegistryContext.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/utils/RenderFragments.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/utils/TextResizerContext.tsx","webpack://mask-network/./packages/typed-message/react/src/Renderer/utils/TransformContext.ts","webpack://mask-network/./packages/web3-hooks/base/src/ScopedDomains/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useLookupAddress.ts","webpack://mask-network/./packages/web3-hooks/base/src/useSocialAddressesAll.ts","webpack://mask-network/./packages/web3-hooks/base/src/useSocialAccountsFrom.ts","webpack://mask-network/./packages/web3-hooks/base/src/useSocialAccountsAll.ts"],"sourcesContent":["import { useCallback, useMemo, useState } from 'react'\nimport { useAsync } from 'react-use'\nimport type { ProfileInformation } from '@masknet/shared-base'\nimport Services from '#services'\nimport { useCurrentIdentity } from '../DataSource/useActivatedUI.js'\nimport type { LazyRecipients } from './CompositionUI.js'\n\nexport function useRecipientsList(): LazyRecipients {\n    const current = useCurrentIdentity()?.identifier\n    const { value: hasRecipients = false } = useAsync(\n        async () => (current ? Services.Crypto.hasRecipientAvailable(current) : undefined),\n        [current],\n    )\n    const [recipients, setRecipients] = useState<ProfileInformation[] | undefined>(undefined)\n    const request = useCallback(() => {\n        if (!current) return\n        if (recipients) return\n        Services.Crypto.getRecipients(current).then(setRecipients)\n    }, [current, !!recipients])\n\n    return useMemo(\n        () => ({\n            request,\n            recipients,\n            hasRecipients,\n        }),\n        [request, recipients, hasRecipients],\n    )\n}\n","import { useEffect } from 'react'\nimport { useAsyncFn, useAsyncRetry } from 'react-use'\nimport type { Plugin } from '@masknet/plugin-infra'\nimport { MaskMessages } from '@masknet/shared-base'\nimport Services from '#services'\n\nexport function usePluginHostPermissionCheck(plugins: Plugin.Shared.Definition[]) {\n    const plugins_ = plugins.filter((x) => x.enableRequirement.host_permissions?.length)\n    // query if plugin is disabled due to lack of permission\n    const { retry, value: lackPermission } = useAsyncRetry(async () => {\n        const lackPermission = new Set<string>()\n\n        await Promise.allSettled(\n            plugins_.map((plugin) =>\n                Services.Helper.hasHostPermission(plugin.enableRequirement.host_permissions!).then(\n                    (result) => !result && lackPermission.add(plugin.ID),\n                ),\n            ),\n        )\n        return lackPermission\n    }, [plugins_.map((x) => x.ID).join(',')])\n\n    useEffect(() => MaskMessages.events.hostPermissionChanged.on(retry), [retry])\n    return lackPermission\n}\n\nexport function useCheckPermissions(permissions: string[]) {\n    const asyncResult = useAsyncRetry(async () => {\n        if (!permissions.length) return true\n        return Services.Helper.hasHostPermission(permissions)\n    }, [permissions])\n\n    useEffect(() => MaskMessages.events.hostPermissionChanged.on(asyncResult.retry), [asyncResult.retry])\n\n    return asyncResult\n}\n\nexport function useGrantPermissions(permissions?: string[]) {\n    return useAsyncFn(async () => {\n        if (!permissions?.length) return\n        return Services.Helper.requestHostPermission(permissions)\n    }, [permissions])\n}\n","import { useMemo } from 'react'\nimport { currentSetupGuideStatus, type SetupGuideContext } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { activatedSiteAdaptorUI } from '../../site-adaptor-infra/index.js'\n\nexport function useSetupGuideStatus() {\n    const context = useValueRef(currentSetupGuideStatus[activatedSiteAdaptorUI!.networkIdentifier])\n    return useMemo<SetupGuideContext>(() => {\n        try {\n            return JSON.parse(context)\n        } catch {\n            return {}\n        }\n    }, [context])\n}\n","import { useMemo } from 'react'\nimport { createInjectHooksRenderer, useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport { useSocialAccountsAll } from '@masknet/web3-hooks-base'\nimport type { Plugin } from '@masknet/plugin-infra'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { useSocialIdentityByUserId } from '../DataSource/useActivatedUI.js'\n\nconst useStyles = makeStyles()(() => ({\n    root: {},\n}))\n\ninterface AvatarProps extends withClasses<'root'> {\n    userId: string\n    sourceType?: Plugin.SiteAdaptor.AvatarRealmSourceType\n}\n\nexport function Avatar(props: AvatarProps) {\n    const { userId, sourceType } = props\n    const { classes } = useStyles(undefined, { props })\n\n    const { data: identity } = useSocialIdentityByUserId(userId)\n    const { data: socialAccounts = EMPTY_LIST, isLoading: loadingSocialAccounts } = useSocialAccountsAll(identity)\n    const component = useMemo(() => {\n        const Component = createInjectHooksRenderer(\n            useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode,\n            (plugin) => {\n                const shouldDisplay =\n                    plugin.AvatarRealm?.Utils?.shouldDisplay?.(identity, socialAccounts, sourceType) ?? true\n                return shouldDisplay ? plugin.AvatarRealm?.UI?.Decorator : undefined\n            },\n        )\n\n        return <Component identity={identity} socialAccounts={socialAccounts} userId={userId} />\n    }, [identity, socialAccounts, sourceType])\n\n    if (loadingSocialAccounts || !component) return null\n    return <div className={classes.root}>{component}</div>\n}\n","import { EMPTY_LIST } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { SearchResult } from '@masknet/web3-shared-base'\nimport type { I18NStringField, Plugin } from '../entry.js'\nimport { getAvailablePlugins } from '../utils/getAvailablePlugins.js'\n\nexport function getSearchResultTabs(\n    definitions: readonly Plugin.SiteAdaptor.Definition[],\n    result: SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>,\n    translate: (pluginID: string, field: I18NStringField) => string,\n) {\n    const displayPlugins = getAvailablePlugins(definitions, (plugins) => {\n        if (!result) return EMPTY_LIST\n        return plugins\n            .flatMap((x) => x.SearchResultTabs?.map((y) => ({ ...y, pluginID: x.ID })) ?? EMPTY_LIST)\n            .filter((x) => x?.Utils?.shouldDisplay?.(result) ?? true)\n            .sort((a, z) => a.priority - z.priority)\n    })\n\n    return displayPlugins.map((x) => ({\n        id: x.ID,\n        label: typeof x.label === 'string' ? x.label : translate(x.pluginID, x.label),\n    }))\n}\n","import { useEffect, useState } from 'react'\nimport { activatedSiteAdaptorUI } from '../../site-adaptor-infra/index.js'\n\nexport function useSearchedKeyword() {\n    const [keyword, setKeyword] = useState('')\n\n    useEffect(() => {\n        const onLocationChange = () => {\n            if (!activatedSiteAdaptorUI?.collecting?.getSearchedKeyword) return\n            const kw = activatedSiteAdaptorUI!.collecting.getSearchedKeyword()\n            setKeyword(kw)\n        }\n        onLocationChange()\n        window.addEventListener('locationchange', onLocationChange)\n        return () => {\n            window.removeEventListener('locationchange', onLocationChange)\n        }\n    }, [])\n    return keyword\n}\n","import { useEffect, useLayoutEffect, useMemo } from 'react'\nimport { useAsyncRetry } from 'react-use'\nimport { first } from 'lodash-es'\nimport { TabContext } from '@mui/lab'\nimport { Stack, Tab } from '@mui/material'\nimport {\n    getSearchResultContent,\n    getSearchResultContentForProfileTab,\n    getSearchResultTabContent,\n    getSearchResultTabs,\n    useActivatedPluginsSiteAdaptor,\n    usePluginTransField,\n    useIsMinimalMode,\n} from '@masknet/plugin-infra/content-script'\nimport { EMPTY_LIST, PluginID, type SocialIdentity, type ProfileTabs } from '@masknet/shared-base'\nimport { makeStyles, MaskTabList, useTabs } from '@masknet/theme'\nimport { DSearch } from '@masknet/web3-providers'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { ScopedDomainsContainer } from '@masknet/web3-hooks-base'\nimport { type SearchResult, SearchResultType } from '@masknet/web3-shared-base'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventID, EventType } from '@masknet/web3-telemetry/types'\nimport { useSearchedKeyword } from '../DataSource/useSearchedKeyword.js'\n\nconst useStyles = makeStyles<{ isProfilePage?: boolean; searchType?: SearchResultType }>()(\n    (theme, { isProfilePage, searchType }) => ({\n        contentWrapper: {\n            background:\n                isProfilePage || (searchType !== SearchResultType.EOA && searchType !== SearchResultType.Domain)\n                    ? 'transparent'\n                    : 'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.8) 100%), linear-gradient(90deg, rgba(28, 104, 243, 0.2) 0%, rgba(69, 163, 251, 0.2) 100%), #FFFFFF;',\n        },\n        tabContent: {\n            position: 'relative',\n            maxHeight: 478,\n            borderBottom: isProfilePage ? 'unset' : `1px solid ${theme.palette.divider}`,\n            overflow: 'auto',\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n    }),\n)\n\ninterface SearchResultInspectorProps {\n    keyword?: string\n    identity?: SocialIdentity | null\n    isProfilePage?: boolean\n    profileTabType?: ProfileTabs\n    searchResults?: Array<SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>>\n    currentSearchResult?: SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>\n}\n\nexport function SearchResultInspector(props: SearchResultInspectorProps) {\n    const { identity, profileTabType, isProfilePage } = props\n\n    const translate = usePluginTransField()\n    const isMinimalMode = useIsMinimalMode(PluginID.Handle)\n\n    const keyword_ = useSearchedKeyword()\n    const keyword = props.keyword || keyword_\n    const activatedPlugins = useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode()\n\n    const resultList = useAsyncRetry(async () => {\n        if (!keyword) return\n        return props.searchResults ?? DSearch.search(keyword)\n    }, [keyword, props.searchResults])\n\n    useEffect(() => {\n        if (profileTabType || !resultList.value?.length) return\n        const type = resultList.value[0].type\n        let timer: NodeJS.Timeout | undefined\n        if (\n            type === SearchResultType.CollectionListByTwitterHandler ||\n            type === SearchResultType.NonFungibleCollection ||\n            type === SearchResultType.NonFungibleToken\n        )\n            timer = setTimeout(() => Telemetry.captureEvent(EventType.Access, EventID.EntryTimelineDsearchNft), 500)\n        if (type === SearchResultType.FungibleToken)\n            timer = setTimeout(() => Telemetry.captureEvent(EventType.Access, EventID.EntryTimelineDsearchToken), 500)\n        return () => timer && clearTimeout(timer)\n    }, [resultList, profileTabType])\n\n    const currentResult = props.currentSearchResult ?? resultList.value?.[0]\n\n    const { classes } = useStyles({ isProfilePage, searchType: currentResult?.type })\n    const contentComponent = useMemo(() => {\n        if (!currentResult || !resultList.value?.length) return null\n\n        const Component = profileTabType\n            ? getSearchResultContentForProfileTab(currentResult)\n            : getSearchResultContent(currentResult)\n\n        return (\n            <Component\n                resultList={resultList.value}\n                currentResult={currentResult}\n                isProfilePage={isProfilePage}\n                identity={identity}\n            />\n        )\n    }, [currentResult, resultList.value, isProfilePage, identity, profileTabType])\n\n    const tabs = useMemo(() => {\n        if (!currentResult) return EMPTY_LIST\n        return getSearchResultTabs(activatedPlugins, currentResult, translate)\n    }, [activatedPlugins, resultList.value, translate])\n\n    const defaultTab = first(tabs)?.id ?? PluginID.Collectible\n    const [currentTab, onChange, , setTab] = useTabs(defaultTab, ...tabs.map((tab) => tab.id))\n    useLayoutEffect(() => {\n        setTab(defaultTab)\n    }, [currentResult, defaultTab])\n\n    const tabContentComponent = useMemo(() => {\n        if (!currentResult) return null\n        const Component = getSearchResultTabContent(currentTab)\n        return <Component result={currentResult} />\n    }, [currentTab, resultList.value])\n\n    if (isMinimalMode && !isProfilePage) return null\n    if (!keyword && !currentResult) return null\n    if (!contentComponent) return null\n\n    return (\n        <div>\n            <ScopedDomainsContainer.Provider>\n                <div className={classes.contentWrapper}>\n                    <div>{contentComponent}</div>\n                    {tabs.length ? (\n                        <Stack px={2}>\n                            <TabContext value={currentTab}>\n                                <MaskTabList variant=\"base\" onChange={onChange} aria-label=\"Web3Tabs\">\n                                    {tabs.map((tab) => (\n                                        <Tab key={tab.id} label={tab.label} value={tab.id} />\n                                    ))}\n                                </MaskTabList>\n                            </TabContext>\n                        </Stack>\n                    ) : null}\n                </div>\n                {tabContentComponent ? <div className={classes.tabContent}>{tabContentComponent}</div> : null}\n            </ScopedDomainsContainer.Provider>\n        </div>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { CopyButton } from '@masknet/shared'\nimport { EMPTY_LIST, formatPersonaFingerprint, type ProfileInformationFromNextID } from '@masknet/shared-base'\nimport { makeStyles, ShadowRootTooltip } from '@masknet/theme'\nimport { Checkbox, ListItem, ListItemAvatar, ListItemText } from '@mui/material'\nimport { truncate } from 'lodash-es'\nimport { memo, useCallback, useMemo } from 'react'\nimport Highlighter from 'react-highlight-words'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { Avatar } from '../../../../shared-ui/components/Avatar.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        borderRadius: 8,\n        cursor: 'pointer',\n        padding: 0,\n    },\n    overflow: {\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    highlighted: {\n        backgroundColor: 'inherit',\n        color: 'inherit',\n        fontWeight: 'bold',\n    },\n    flex: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    actionIcon: {\n        cursor: 'pointer',\n        marginLeft: theme.spacing(0.5),\n    },\n    badge: {\n        width: 32,\n        height: 18,\n        marginLeft: theme.spacing(0.5),\n    },\n    highLightBg: {\n        background: theme.palette.maskColor.bg,\n    },\n    avatarBox: {\n        padding: '6px 0px 6px 8px',\n        minWidth: 46,\n    },\n    avatar: {\n        width: 36,\n        height: 36,\n    },\n    highLightBase: {\n        lineHeight: '20px',\n        fontSize: 14,\n    },\n    highLightSecond: {\n        fontSize: 16,\n        lineHeight: '20px',\n    },\n    listItemRoot: {\n        margin: '4px 0',\n    },\n    columnReverse: {\n        margin: '4px 0',\n        display: 'flex',\n        flexDirection: 'column-reverse',\n    },\n    toolTip: {\n        fontSize: 14,\n        lineHeight: '18px',\n        padding: 10,\n        boxSizing: 'border-box',\n        borderRadius: 4,\n        whiteSpace: 'normal',\n        marginTop: 0,\n    },\n}))\n\ninterface ProfileInListProps {\n    profile: ProfileInformationFromNextID\n    highlightText?: string\n    selected?: boolean\n    disabled?: boolean\n    onChange: (profile: ProfileInformationFromNextID, checked: boolean) => void\n}\n\nexport const ProfileInList = memo(function ProfileInList(props: ProfileInListProps) {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles()\n    const { profile, selected, disabled, highlightText, onChange } = props\n    const searchWords = useMemo(() => (highlightText ? [highlightText] : EMPTY_LIST), [highlightText])\n\n    const rawPublicKey = profile.linkedPersona?.rawPublicKey\n    const primaryText = (() => {\n        if (!profile.fromNextID) return `@${profile.identifier.userId || profile.nickname}`\n        const mentions = profile.linkedTwitterNames?.map((x) => '@' + x).join(' ') ?? ''\n        if (mentions.length < 15) return mentions\n        const len = profile.linkedTwitterNames?.length ?? 0\n        return truncate(mentions, { length: 15 }) + (len > 1 ? `(${len})` : '')\n    })()\n\n    const tooltipTitle = (() => {\n        const linkedNames = profile.linkedTwitterNames ?? []\n        if (linkedNames.length < 2)\n            return `${t.select_friends_dialog_persona_connect({ count: 1 })} @${profile.identifier.userId}.`\n        const mentions = profile.linkedTwitterNames?.map((username) => '@' + username) ?? []\n        return `${t.select_friends_dialog_persona_connect({ count: linkedNames.length })} ${mentions.join(', ')}.`\n    })()\n\n    const handleClick = useCallback(() => onChange(profile, !selected), [onChange, selected])\n    const secondaryText = formatPersonaFingerprint(profile.linkedPersona?.rawPublicKey?.toUpperCase() ?? '', 3)\n    return (\n        <ListItem\n            onClick={handleClick}\n            className={cx(classes.root, selected ? classes.highLightBg : null)}\n            secondaryAction={\n                <Checkbox\n                    disabled={disabled}\n                    checked={!!selected}\n                    color=\"primary\"\n                    size=\"small\"\n                    sx={{ width: 20, height: 20 }}\n                />\n            }>\n            <ListItemAvatar classes={{ root: classes.avatarBox }}>\n                <Avatar classes={{ root: classes.avatar }} person={profile} />\n            </ListItemAvatar>\n            <ListItemText\n                classes={{\n                    root: profile.fromNextID ? classes.columnReverse : classes.listItemRoot,\n                    primary: classes.overflow,\n                    secondary: classes.overflow,\n                }}\n                primaryTypographyProps={{ component: 'div' }}\n                primary={\n                    <ShadowRootTooltip\n                        title={tooltipTitle}\n                        arrow\n                        placement=\"top\"\n                        classes={{ tooltip: classes.toolTip }}>\n                        <div className={classes.flex}>\n                            <Highlighter\n                                className={classes.highLightBase}\n                                highlightClassName={classes.highlighted}\n                                searchWords={searchWords}\n                                autoEscape\n                                textToHighlight={primaryText}\n                            />\n                        </div>\n                    </ShadowRootTooltip>\n                }\n                secondaryTypographyProps={{ component: 'div' }}\n                secondary={\n                    <div className={classes.flex}>\n                        <Highlighter\n                            className={classes.highLightSecond}\n                            highlightClassName={classes.highLightSecond}\n                            searchWords={searchWords}\n                            autoEscape\n                            textToHighlight={secondaryText}\n                        />\n                        {rawPublicKey ? (\n                            <CopyButton className={classes.actionIcon} size={16} text={rawPublicKey} />\n                        ) : null}\n                        {profile.fromNextID ? <Icons.NextIDMini className={classes.badge} /> : null}\n                    </div>\n                }\n            />\n        </ListItem>\n    )\n})\n","import { type ECKeyIdentifier, ProfileIdentifier } from '@masknet/shared-base'\nexport function isProfileIdentifier(value: ECKeyIdentifier | ProfileIdentifier): value is ProfileIdentifier {\n    return value instanceof ProfileIdentifier\n}\n","import { useAsyncRetry } from 'react-use'\nimport { EMPTY_LIST, type ProfileInformation } from '@masknet/shared-base'\nimport type { AsyncStateRetry } from 'react-use/lib/useAsyncRetry.js'\nimport { useCurrentPersona } from '../../../../shared-ui/hooks/index.js'\nimport Services from '#services'\nimport { isProfileIdentifier } from '@masknet/shared'\n\nexport function useContacts(network: string): AsyncStateRetry<ProfileInformation[]> {\n    const currentPersona = useCurrentPersona()\n\n    return useAsyncRetry(async () => {\n        const values = await Services.Identity.queryRelationPaged(\n            currentPersona?.identifier,\n            {\n                network,\n                pageOffset: 0,\n            },\n            1000,\n        )\n        if (values.length === 0) return EMPTY_LIST\n\n        const identifiers = values.map((x) => x.profile).filter(isProfileIdentifier)\n        return (await Services.Identity.queryProfilesInformation(identifiers)).filter(\n            (x) => x.linkedPersona && x.linkedPersona !== currentPersona?.identifier,\n        )\n    }, [network, currentPersona])\n}\n","import {\n    ECKeyIdentifier,\n    EMPTY_LIST,\n    type NextIDPersonaBindings,\n    NextIDPlatform,\n    ProfileIdentifier,\n} from '@masknet/shared-base'\nimport { compact, uniqBy } from 'lodash-es'\n\nexport function useTwitterIdByWalletSearch(\n    bindings: NextIDPersonaBindings[] | undefined,\n    value: string,\n    type?: NextIDPlatform,\n) {\n    if (!bindings?.length || !type) return EMPTY_LIST\n\n    const nextIdAccounts = bindings.map((binding) => {\n        const proofs = uniqBy(\n            binding.proofs.filter((x) => x.platform === NextIDPlatform.Twitter),\n            (proof) => proof.identity,\n        )\n        if (!proofs.length) return null\n        const linkedTwitterNames = proofs.map((x) => x.identity)\n        return {\n            nickname: proofs[0].identity,\n            identifier: ProfileIdentifier.of('twitter.com', proofs[0].identity).expect(\n                `${proofs[0].identity} should be a valid user id`,\n            ),\n            walletAddress: type === NextIDPlatform.Ethereum ? value : undefined,\n            fromNextID: true,\n            linkedTwitterNames,\n            linkedPersona: ECKeyIdentifier.fromHexPublicKeyK256(binding.persona).expect(\n                `${binding.persona} should be a valid hex public key in k256`,\n            ),\n        }\n    })\n    return compact(nextIdAccounts)\n}\n","import { Typography, Card, Box, CircularProgress, type CircularProgressProps, colors } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { type TypedMessage, makeTypedMessageText } from '@masknet/typed-message'\nimport { TypedMessageRender } from '@masknet/typed-message-react'\nimport { TypedMessageRenderContext } from '../../../shared-ui/TypedMessageRender/context.js'\nimport { Check as CheckIcon, Close as CloseIcon } from '@mui/icons-material'\nimport { memo, useCallback, useMemo } from 'react'\nimport { activatedSiteAdaptorUI } from '../../site-adaptor-infra/ui.js'\nimport { Icons } from '@masknet/icons'\n\nenum AdditionalIcon {\n    check = 'check',\n    error = 'error',\n}\ninterface AdditionalContentProps {\n    title: string\n    titleIcon?: keyof typeof AdditionalIcon\n    headerActions?: React.ReactNode\n    progress?: boolean | CircularProgressProps\n    /** this component does not accept children */\n    children?: never\n    /** Can handle typed message or normal string */\n    message?: TypedMessage | string\n}\nconst useStyles = makeStyles()((theme) => ({\n    root: { boxSizing: 'border-box', width: '100%', backgroundColor: 'transparent', borderColor: 'transparent' },\n    title: { display: 'flex', alignItems: 'center', fontSize: 'inherit' },\n    icon: { marginRight: theme.spacing(1), display: 'flex', width: 18, height: 18 },\n    content: { margin: theme.spacing(1, 0), padding: 0, overflowWrap: 'break-word' },\n    rightIcon: { paddingLeft: theme.spacing(0.75) },\n}))\n\nexport const AdditionalContent = memo(function AdditionalContent(props: AdditionalContentProps): JSX.Element {\n    const { classes } = useStyles()\n    const stop = useCallback((ev: React.MouseEvent<HTMLDivElement>) => ev.stopPropagation(), [])\n    const { progress, title, message } = props\n    const ProgressJSX = !progress ? null : progress === true ? (\n        <CircularProgress size={20} color=\"primary\" variant=\"indeterminate\" />\n    ) : (\n        <CircularProgress size={20} color=\"primary\" {...progress} />\n    )\n    const RightIconJSX = ((icon) => {\n        const props = { fontSize: 'small', className: classes.rightIcon } as const\n        if (icon === AdditionalIcon.check) return <CheckIcon htmlColor={colors.green[500]} {...props} />\n        if (icon === AdditionalIcon.error) return <CloseIcon color=\"error\" {...props} />\n        return null\n    })(props.titleIcon)\n    const header = (\n        <Typography\n            variant=\"caption\"\n            color={message ? 'textSecondary' : 'textPrimary'}\n            gutterBottom\n            className={classes.title}>\n            <span className={classes.icon}>{ProgressJSX || <Icons.MaskBlue size={18} />}</span>\n            <Box\n                sx={{\n                    flex: 1,\n                    display: 'flex',\n                }}>\n                {title}\n                {RightIconJSX}\n            </Box>\n            {props.headerActions}\n        </Typography>\n    )\n    const TypedMessage = useMemo(() => {\n        if (typeof message === 'string') return makeTypedMessageText(message)\n        if (typeof message === 'undefined') return makeTypedMessageText('')\n        return message\n    }, [message])\n    return (\n        <Card variant=\"outlined\" className={classes.root} elevation={0} onClick={stop}>\n            <header className={classes.content}>{header}</header>\n            {message ? (\n                <main className={classes.content}>\n                    <TypedMessageRenderContext\n                        textResizer={activatedSiteAdaptorUI!.networkIdentifier !== 'twitter.com'}\n                        renderFragments={activatedSiteAdaptorUI?.customization.componentOverwrite?.RenderFragments}>\n                        <TypedMessageRender message={TypedMessage} />\n                    </TypedMessageRenderContext>\n                </main>\n            ) : null}\n        </Card>\n    )\n})\n","import { Icons } from '@masknet/icons'\nimport { EmptyStatus, LoadingStatus } from '@masknet/shared'\nimport { EMPTY_LIST, type ProfileInformation as Profile, type ProfileInformationFromNextID } from '@masknet/shared-base'\nimport { Boundary, makeStyles } from '@masknet/theme'\nimport { useLookupAddress } from '@masknet/web3-hooks-base'\nimport { Fuse } from '@masknet/web3-providers'\nimport { Box, Checkbox, InputAdornment, InputBase, Stack, Typography } from '@mui/material'\nimport { compact, uniqBy } from 'lodash-es'\nimport { startTransition, useCallback, useDeferredValue, useMemo, useState } from 'react'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { ProfileInList } from '../SelectRecipients/ProfileInList.js'\nimport { useContacts } from '../SelectRecipients/useContacts.js'\nimport { activatedSiteAdaptorUI } from '../../../site-adaptor-infra/ui.js'\n\ninterface SelectProfileUIProps extends withClasses<'root'> {\n    items: Profile[]\n    selected: Profile[]\n    frozenSelected: Profile[]\n    onSetSelected(selected: Profile[]): void\n    disabled?: boolean\n    onSearch(v: string): void\n    loading: boolean\n}\nconst useStyles = makeStyles()((theme) => ({\n    selectedArea: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        display: 'flex',\n        padding: 0,\n    },\n    input: {\n        flex: 1,\n        marginBottom: theme.spacing(2),\n    },\n    empty: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%,-50%)',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        gap: 12,\n        color: theme.palette.text.secondary,\n        whiteSpace: 'nowrap',\n    },\n    listParent: {\n        height: 400,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    listBody: {\n        height: 400,\n        '::-webkit-scrollbar': {\n            display: 'none',\n        },\n        overflowY: 'auto',\n        flex: 1,\n    },\n    list: {\n        gridGap: '12px',\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        alignItems: 'flex-start',\n    },\n    mainText: {\n        color: theme.palette.text.primary,\n    },\n}))\n\nexport function SelectProfileUI(props: SelectProfileUIProps) {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles(undefined, { props })\n    const { frozenSelected, onSetSelected, disabled, items, selected } = props\n    const [search, setSearch] = useState('')\n    const { value: registeredAddress = '' } = useLookupAddress(undefined, useDeferredValue(search))\n    const keyword = registeredAddress || search\n    const selectedPubkeyList = compact(selected.map((x) => x.linkedPersona?.publicKeyAsHex))\n    const frozenPubkeyList = useMemo(\n        () => compact(frozenSelected.map((x) => x.linkedPersona?.publicKeyAsHex)),\n        [frozenSelected],\n    )\n    const { value = EMPTY_LIST } = useContacts(activatedSiteAdaptorUI!.networkIdentifier)\n\n    const onSelectedAllChange = useCallback(\n        (checked: boolean) => {\n            if (checked) {\n                onSetSelected([...items])\n            } else {\n                onSetSelected([])\n            }\n        },\n        [items],\n    )\n\n    const onSelectedProfile = useCallback(\n        (item: Profile, checked: boolean) => {\n            if (checked) {\n                onSetSelected([...selected, item])\n            } else\n                onSetSelected(\n                    selected.filter((x) => x.linkedPersona?.publicKeyAsHex !== item.linkedPersona?.publicKeyAsHex),\n                )\n        },\n        [selected],\n    )\n\n    const fuse = useMemo(() => {\n        return Fuse.create(items, {\n            keys: [\n                'identifier.userId',\n                'nickname',\n                'walletAddress',\n                'linkedPersona.rawPublicKey',\n                'linkedPersona.publicKeyAsHex',\n                'linkedTwitterNames',\n            ],\n            isCaseSensitive: false,\n            ignoreLocation: true,\n            threshold: 0,\n        })\n    }, [items])\n\n    const results = useMemo(() => {\n        if (!keyword) return items\n        return fuse\n            .search(keyword)\n            .map((item) => item.item)\n            .filter((x) => !frozenPubkeyList.includes(x.linkedPersona?.publicKeyAsHex!))\n    }, [keyword, frozenPubkeyList, fuse, items])\n\n    const profiles = uniqBy([...frozenSelected, ...results, ...value], (x) => x.identifier)\n\n    return (\n        <div className={classes.root}>\n            <Box\n                className={classes.selectedArea}\n                sx={{\n                    display: 'flex',\n                }}>\n                <InputBase\n                    className={classes.input}\n                    value={disabled ? '' : search}\n                    onChange={useCallback(\n                        (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => setSearch(e.target.value),\n                        [],\n                    )}\n                    onKeyDown={(e) => {\n                        if (e.code !== 'Enter') return\n                        startTransition(() => props.onSearch(keyword))\n                    }}\n                    startAdornment={\n                        <InputAdornment position=\"start\">\n                            <Icons.Search />\n                        </InputAdornment>\n                    }\n                    placeholder={t.post_dialog_share_with_input_placeholder()}\n                    disabled={disabled}\n                />\n            </Box>\n            {props.loading ? (\n                <div className={cx(classes.empty, classes.mainText)}>\n                    <LoadingStatus />\n                </div>\n            ) : (\n                <Boundary>\n                    <div className={classes.listParent}>\n                        <div className={classes.listBody}>\n                            <Box className={classes.list}>\n                                {profiles.length === 0 ? (\n                                    <EmptyStatus className={classes.empty}>\n                                        {t.compose_encrypt_share_dialog_empty()}\n                                    </EmptyStatus>\n                                ) : (\n                                    profiles.map((item) => {\n                                        const pubkey = item.linkedPersona?.publicKeyAsHex as string\n                                        const selected = selectedPubkeyList.includes(pubkey)\n                                        const disabled = frozenPubkeyList.includes(pubkey)\n                                        return (\n                                            <ProfileInList\n                                                key={item.linkedPersona?.publicKeyAsHex ?? item.identifier.toText()}\n                                                profile={item as ProfileInformationFromNextID}\n                                                disabled={disabled}\n                                                selected={selected || disabled}\n                                                onChange={onSelectedProfile}\n                                            />\n                                        )\n                                    })\n                                )}\n                            </Box>\n                        </div>\n                        {profiles.length ? (\n                            <Stack alignItems=\"center\" flexDirection=\"row\" sx={{ padding: '16px 0px' }}>\n                                <Checkbox\n                                    sx={{ width: 20, height: 20 }}\n                                    onChange={(e) => onSelectedAllChange(e.currentTarget.checked)}\n                                />\n                                <Typography sx={{ paddingLeft: 1 }}>{t.select_all()}</Typography>\n                            </Stack>\n                        ) : null}\n                    </div>\n                </Boundary>\n            )}\n        </div>\n    )\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { ActionButton, makeStyles } from '@masknet/theme'\nimport { Button, DialogActions, DialogContent, alpha } from '@mui/material'\nimport { InjectedDialog, resolveNextIDPlatform, resolveValueToSearch, usePersonasFromNextID } from '@masknet/shared'\nimport { EMPTY_LIST, NextIDPlatform, type ProfileInformation as Profile } from '@masknet/shared-base'\nimport { uniqBy } from 'lodash-es'\nimport { useCurrentIdentity } from '../DataSource/useActivatedUI.js'\nimport { useRecipientsList } from '../CompositionDialog/useRecipientsList.js'\nimport { useTwitterIdByWalletSearch } from '../shared/SelectRecipients/useTwitterIdByWalletSearch.js'\nimport { SelectProfileUI } from '../shared/SelectProfileUI/index.js'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventType, EventID } from '@masknet/web3-telemetry/types'\n\ninterface SelectProfileDialogProps {\n    open: boolean\n    profiles: Profile[]\n    selectedProfiles: Profile[]\n    onClose: () => void\n    onSelect: (people: Profile[]) => Promise<void>\n}\nconst useStyles = makeStyles()((theme) => ({\n    content: { padding: '0 12px' },\n    body: {\n        '::-webkit-scrollbar': {\n            display: 'none',\n        },\n        padding: theme.spacing(2),\n        height: 450,\n    },\n    action: {\n        display: 'flex',\n        gap: 16,\n        padding: 16,\n        boxSizing: 'border-box',\n        alignItems: 'center',\n        background: alpha(theme.palette.maskColor.bottom, 0.8),\n        boxShadow:\n            theme.palette.mode === 'light'\n                ? ' 0px 0px 20px rgba(0, 0, 0, 0.05)'\n                : '0px 0px 20px rgba(255, 255, 255, 0.12);',\n        borderRadius: '0px 0px 12px 12px',\n        flex: 1,\n        backdropFilter: 'blur(8px)',\n    },\n\n    cancel: {\n        color: theme.palette.maskColor.main,\n        background: theme.palette.maskColor.thirdMain,\n        fontSize: 14,\n        fontWeight: 700,\n        lineHeight: '18px',\n        height: 40,\n        '&:hover': {\n            color: theme.palette.maskColor.main,\n            background: theme.palette.maskColor.thirdMain,\n        },\n    },\n    share: {\n        color: theme.palette.maskColor.bottom,\n        background: theme.palette.maskColor.main,\n        fontSize: 14,\n        fontWeight: 700,\n        lineHeight: '18px',\n        height: 40,\n    },\n}))\n\nexport function SelectProfileDialog({ open, profiles, selectedProfiles, onClose, onSelect }: SelectProfileDialogProps) {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const [people, select] = useState<Profile[]>([])\n    const [committed, setCommitted] = useState(false)\n    const handleClose = useCallback(() => {\n        onClose()\n        setCommitted(false)\n        select([])\n    }, [onClose])\n\n    const recipientsList = useRecipientsList()\n    const [rejection, onReject] = useState<Error>()\n    const share = useCallback(() => {\n        setCommitted(true)\n        onSelect(uniqBy([...people, ...selectedProfiles], (x) => x.identifier)).then(handleClose, onReject)\n    }, [handleClose, people, selectedProfiles, onSelect])\n\n    const [valueToSearch, setValueToSearch] = useState('')\n    const currentIdentity = useCurrentIdentity()\n    const type = resolveNextIDPlatform(valueToSearch)\n\n    const value = resolveValueToSearch(valueToSearch)\n    const { isLoading: searchLoading, data: NextIDResults } = usePersonasFromNextID(\n        value,\n        type ?? NextIDPlatform.NextID,\n        false,\n    )\n\n    const NextIDItems = useTwitterIdByWalletSearch(NextIDResults, value, type)\n    const myUserId = currentIdentity?.identifier.userId\n    const searchedList = useMemo(() => {\n        if (!recipientsList?.recipients) return EMPTY_LIST\n        const profileItems = recipientsList.recipients.filter((x) => x.identifier.userId !== myUserId)\n        // Selected might contain profiles that fetched asynchronously from\n        // Next.ID, which are not stored locally\n        return uniqBy(profileItems.concat(NextIDItems, profiles), ({ linkedPersona }) => linkedPersona?.rawPublicKey)\n    }, [NextIDItems, profiles, recipientsList.recipients, myUserId])\n\n    useEffect(() => {\n        if (!open) return\n        recipientsList.request()\n    }, [open, recipientsList.request])\n\n    useEffect(() => {\n        if (!open) return\n        Telemetry.captureEvent(EventType.Access, EventID.EntryMaskComposeVisibleSelected)\n    }, [open])\n\n    const canCommit = committed || people.length === 0\n\n    return (\n        <InjectedDialog onClose={handleClose} open={open} title={t.select_specific_friends_dialog__title()}>\n            <DialogContent className={classes.body}>\n                <SelectProfileUI\n                    frozenSelected={selectedProfiles}\n                    disabled={committed}\n                    items={searchedList}\n                    selected={people}\n                    onSetSelected={select}\n                    onSearch={setValueToSearch}\n                    loading={searchLoading}\n                />\n            </DialogContent>\n            {rejection ? (\n                <DialogContent className={classes.content}>\n                    <>\n                        Error: {rejection.message} {console.error(rejection)}\n                    </>\n                </DialogContent>\n            ) : null}\n            <DialogActions className={classes.action}>\n                <Button className={classes.cancel} fullWidth onClick={handleClose} variant=\"roundedContained\">\n                    {t.cancel()}\n                </Button>\n                <ActionButton\n                    fullWidth\n                    variant=\"roundedContained\"\n                    loading={committed}\n                    className={classes.share}\n                    disabled={canCommit}\n                    onClick={share}>\n                    {t.done()}\n                </ActionButton>\n            </DialogActions>\n        </InjectedDialog>\n    )\n}\n","import type { ProfileIdentifier } from '@masknet/shared-base'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\n\nexport function useAuthorDifferentMessage(\n    author: ProfileIdentifier | null,\n    postBy: ProfileIdentifier | null,\n    jsx: React.ReactNode,\n) {\n    const t = useMaskSharedTrans()\n    if (!author || !postBy) return jsx\n    if (author === postBy) return jsx\n    return (\n        <>\n            {t.decrypted_postbox_author_mismatch({ name: author?.userId })}\n            {jsx}\n        </>\n    )\n}\n","import { Suspense, type ReactNode, useMemo, forwardRef, useImperativeHandle, useState } from 'react'\nimport { Typography, SnackbarContent, Link } from '@mui/material'\nimport { makeStyles, MaskColorVar, MaskLightTheme } from '@masknet/theme'\nimport { Box } from '@mui/system'\nimport {\n    usePluginTransField,\n    PluginTransFieldRender,\n    type PluginWrapperComponent,\n    type Plugin,\n    type PluginWrapperMethods,\n} from '@masknet/plugin-infra/content-script'\nimport { Icons } from '@masknet/icons'\nimport { useSharedTrans } from '../../../index.js'\n\ninterface PluginWrapperProps extends React.PropsWithChildren<{}> {\n    open?: boolean\n    title: JSX.Element | string\n    width?: number\n    content?: ReactNode\n    action?: ReactNode\n    publisher?: JSX.Element\n    wrapperProps?: Plugin.SiteAdaptor.PluginWrapperProps\n    publisherLink?: string\n    lackHostPermission?: boolean\n    ID: string\n}\n\nconst useStyles = makeStyles<{\n    backgroundGradient?: string\n    borderRadius?: string\n    margin?: string\n}>()((theme, props) => {\n    return {\n        card: {\n            background:\n                props?.backgroundGradient ??\n                'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.8) 100%), linear-gradient(90deg, rgba(28, 104, 243, 0.2) 0%, rgba(45, 41, 253, 0.2) 100%), #FFFFFF;',\n            margin: props?.margin ?? theme.spacing(2, 0),\n            width: '100%',\n            boxSizing: 'border-box',\n            cursor: 'default',\n            borderRadius: props?.borderRadius ?? 15,\n            overflow: 'hidden',\n        },\n        header: {\n            backgroundColor: 'transparent',\n            color: theme.palette.text.primary,\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(1.5),\n        },\n        provider: {\n            display: 'flex',\n            alignItems: 'center',\n            '& > a': {\n                lineHeight: 0,\n            },\n        },\n        publish: {\n            flex: 1,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n        },\n        action: {\n            textAlign: 'center',\n            margin: theme.spacing(1),\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginBottom: 16,\n        },\n        body: {\n            padding: theme.spacing(0),\n        },\n        providerBy: {\n            marginRight: theme.spacing(0.5),\n            fontSize: 14,\n            fontWeight: 700,\n            color: MaskLightTheme.palette.maskColor.second,\n        },\n    }\n})\n\nexport function MaskPostExtraInfoWrapper(props: PluginWrapperProps) {\n    const { open, title, children, action, publisher, publisherLink, content, wrapperProps } = props\n    const { classes } = useStyles({\n        backgroundGradient: wrapperProps?.backgroundGradient,\n        borderRadius: wrapperProps?.borderRadius,\n        margin: wrapperProps?.margin,\n    })\n    const t = useSharedTrans()\n\n    const publisherInfo = useMemo(() => {\n        if (!publisher) return\n        const main = (\n            <Typography\n                variant=\"body1\"\n                fontSize={14}\n                fontWeight=\"700\"\n                component=\"div\"\n                color={MaskColorVar.textPluginColor}>\n                {publisher}\n            </Typography>\n        )\n        return (\n            <Box className={classes.provider}>\n                <Typography variant=\"body1\" className={classes.providerBy}>\n                    {t.powered_by()}\n                </Typography>\n                {main}\n                {publisherLink ? (\n                    <Link href={publisherLink} underline=\"none\" target=\"_blank\" rel=\"noopener\">\n                        <Icons.Provider\n                            size={18}\n                            style={{ marginLeft: 4 }}\n                            color={MaskLightTheme.palette.maskColor.main}\n                        />\n                    </Link>\n                ) : null}\n            </Box>\n        )\n    }, [publisher, publisherLink])\n\n    const inner = (\n        <div\n            className={classes.card}\n            style={{ display: open ? 'block' : 'none' }}\n            onClick={(ev) => ev.stopPropagation()}>\n            <div className={classes.header}>\n                {wrapperProps?.icon ?? (\n                    <Icons.MaskBlue size={24} style={{ filter: 'drop-shadow(0px 6px 12px rgba(28, 104, 243, 0.2))' }} />\n                )}\n                <Typography\n                    sx={{ marginLeft: 0.5 }}\n                    variant=\"body1\"\n                    fontSize={16}\n                    fontWeight={700}\n                    component=\"div\"\n                    color={MaskColorVar.textPluginColor}>\n                    {wrapperProps?.title ?? title ?? t.plugin_default_title()}\n                </Typography>\n                <div className={classes.publish}>{publisherInfo}</div>\n            </div>\n            {action ? (\n                <>\n                    <Typography component=\"div\" variant=\"body1\" color=\"#FF3545\" sx={{ padding: 1 }} textAlign=\"center\">\n                        {content}\n                    </Typography>\n                    <div className={classes.action}>{action}</div>\n                </>\n            ) : null}\n            {children ? <div className={classes.body}>{children}</div> : null}\n        </div>\n    )\n\n    return <Suspense fallback={<SnackbarContent message=\"Mask is loading this content...\" />} children={inner} />\n}\n\nexport const MaskPostExtraPluginWrapper: PluginWrapperComponent<Plugin.SiteAdaptor.Definition> = forwardRef(\n    (props, ref) => {\n        const { ID, name, publisher, wrapperProps } = props.definition\n        const t = usePluginTransField()\n        const [width, setWidth] = useState<undefined | number>(undefined)\n        const [open, setOpen] = useState<boolean>(false)\n        const [title, setTitle] = useState<string | undefined>(undefined)\n\n        const refItem = useMemo((): PluginWrapperMethods => {\n            return {\n                setWidth,\n                setWrap: setOpen,\n                setWrapperName: setTitle,\n            }\n        }, [])\n\n        useImperativeHandle(ref, () => refItem, [refItem])\n\n        return (\n            <MaskPostExtraInfoWrapper\n                ID={props.definition.ID}\n                wrapperProps={wrapperProps}\n                open={open}\n                title={title || t(ID, name)}\n                width={width}\n                publisher={publisher ? <PluginTransFieldRender pluginID={ID} field={publisher.name} /> : undefined}\n                publisherLink={publisher?.link}\n                children={props.children}\n                lackHostPermission={props.lackHostPermission}\n            />\n        )\n    },\n)\n","import { type ReactNode, useCallback } from 'react'\nimport { useAsync } from 'react-use'\nimport type { Option } from 'ts-results-es'\nimport { useSubscription } from 'use-subscription'\nimport { Icons } from '@masknet/icons'\nimport {\n    type Plugin,\n    PluginTransFieldRender,\n    registeredPlugins,\n    useActivatedPluginsSiteAdaptor,\n    usePostInfoDetails,\n} from '@masknet/plugin-infra/content-script'\nimport { MaskPostExtraInfoWrapper } from '@masknet/shared'\nimport { BooleanPreference, EMPTY_LIST } from '@masknet/shared-base'\nimport { makeStyles, MaskLightTheme } from '@masknet/theme'\nimport { extractTextFromTypedMessage } from '@masknet/typed-message'\nimport { Box, type BoxProps, Button, Skeleton, Typography, useTheme } from '@mui/material'\nimport Services from '#services'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\n\nfunction useDisabledPlugins() {\n    const activated = new Set(useActivatedPluginsSiteAdaptor('any').map((x) => x.ID))\n    const minimalMode = new Set(useActivatedPluginsSiteAdaptor(true).map((x) => x.ID))\n    const disabledPlugins = useSubscription(registeredPlugins)\n        .filter((plugin) => !activated.has(plugin[0]) || minimalMode.has(plugin[0]))\n        .map((x) => x[1])\n    return disabledPlugins\n}\n\nexport function useDisabledPluginSuggestionFromPost(postContent: Option<string>, metaLinks: readonly string[]) {\n    const disabled = useDisabledPlugins().filter((x) => x.contribution?.postContent)\n\n    const matches = disabled.filter((x) => {\n        for (const pattern of x.contribution!.postContent!) {\n            if (postContent.isSome() && postContent.value.match(pattern)) return true\n            if (metaLinks.some((link) => link.match(pattern))) return true\n        }\n        return false\n    })\n    return matches\n}\n\nexport function useDisabledPluginSuggestionFromMeta(meta: undefined | ReadonlyMap<string, unknown>) {\n    const disabled = useDisabledPlugins().filter((x) => x.contribution?.metadataKeys)\n\n    if (!meta) return EMPTY_LIST\n\n    const matches = disabled.filter((x) => {\n        const contributes = x.contribution!.metadataKeys!\n        return [...meta.keys()].some((key) => contributes.has(key))\n    })\n    return matches\n}\n\nexport function PossiblePluginSuggestionPostInspector() {\n    const message = extractTextFromTypedMessage(usePostInfoDetails.rawMessage())\n    const metaLinks = usePostInfoDetails.mentionedLinks()\n    const matches = useDisabledPluginSuggestionFromPost(message, metaLinks)\n    return <PossiblePluginSuggestionUI plugins={matches} />\n}\n\nexport function PossiblePluginSuggestionUI(props: { plugins: Plugin.Shared.Definition[] }) {\n    const { plugins } = props\n    const _plugins = useActivatedPluginsSiteAdaptor('any')\n    if (!plugins.length) return null\n    return (\n        <>\n            {plugins.map((define) => (\n                <PossiblePluginSuggestionUISingle\n                    define={define}\n                    key={define.ID}\n                    wrapperProps={_plugins.find((y) => y.ID === define.ID)?.wrapperProps}\n                />\n            ))}\n        </>\n    )\n}\n\nexport function PossiblePluginSuggestionUISingle(props: {\n    lackHostPermission?: boolean\n    define: Plugin.Shared.Definition\n    wrapperProps?: Plugin.SiteAdaptor.PluginWrapperProps | undefined\n    content?: ReactNode\n}) {\n    const { define, lackHostPermission, wrapperProps, content } = props\n    const t = useMaskSharedTrans()\n    const theme = useTheme()\n    const onClick = useCallback(() => {\n        if (lackHostPermission && define.enableRequirement.host_permissions) {\n            Services.Helper.requestHostPermission(define.enableRequirement.host_permissions)\n        } else {\n            Services.Settings.setPluginMinimalModeEnabled(define.ID, false)\n        }\n    }, [lackHostPermission, define])\n\n    const { value: disabled } = useAsync(async () => {\n        const status = await Services.Settings.getPluginMinimalModeEnabled(define.ID)\n        return status === BooleanPreference.True\n    }, [define.ID])\n\n    const ButtonIcon = lackHostPermission ? Icons.Approve : Icons.Plugin\n    const wrapperContent = content ?? <FallbackContent disabled={disabled} height={74} />\n    const buttonLabel = lackHostPermission ? t.approve() : t.plugin_enable()\n\n    return (\n        <MaskPostExtraInfoWrapper\n            ID={props.define.ID}\n            open\n            title={<PluginTransFieldRender field={define.name} pluginID={define.ID} />}\n            publisher={\n                define.publisher ? (\n                    <PluginTransFieldRender pluginID={define.ID} field={define.publisher.name} />\n                ) : undefined\n            }\n            publisherLink={define.publisher?.link}\n            wrapperProps={wrapperProps}\n            action={\n                <Button\n                    size=\"small\"\n                    startIcon={<ButtonIcon size={18} sx={{ lineHeight: 1 }} />}\n                    variant=\"roundedDark\"\n                    onClick={onClick}\n                    sx={{\n                        backgroundColor: theme.palette.maskColor.dark,\n                        color: 'white',\n                        width: '254px',\n                        height: '36px',\n                        fontSize: 14,\n                        fontWeight: 700,\n                        lineHeight: 1.5,\n                        '&:hover': {\n                            backgroundColor: theme.palette.maskColor.dark,\n                        },\n                    }}>\n                    {buttonLabel}\n                </Button>\n            }\n            content={wrapperContent}\n        />\n    )\n}\n\nconst useStyles = makeStyles()(() => ({\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    text: {\n        color: MaskLightTheme.palette.maskColor.main,\n    },\n    rectangle: {\n        backgroundColor: 'rgba(255,255,255,0.5)',\n    },\n}))\n\ninterface FallbackContentProps extends BoxProps {\n    disabled?: boolean\n}\n\nfunction FallbackContent({ disabled, ...rest }: FallbackContentProps) {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles()\n    if (disabled)\n        return (\n            <Box component=\"div\" {...rest} className={cx(classes.content, rest.className)}>\n                <Typography className={classes.text}>{t.plugin_disabled_tip()}</Typography>\n            </Box>\n        )\n    return (\n        <Box component=\"div\" pl={1} {...rest} className={cx(classes.content, rest.className)}>\n            <Skeleton className={classes.rectangle} variant=\"text\" animation={false} width={103} height={16} />\n            <Skeleton className={classes.rectangle} variant=\"text\" animation={false} width={68} height={16} />\n            <Skeleton className={classes.rectangle} variant=\"text\" animation={false} width={48} height={16} />\n        </Box>\n    )\n}\n","import {\n    forwardRef,\n    memo,\n    type PropsWithChildren,\n    type ReactNode,\n    useImperativeHandle,\n    useMemo,\n    useRef,\n    useState,\n} from 'react'\nimport type { AsyncState } from 'react-use/lib/useAsyncFn.js'\nimport type { PluginWrapperComponent, Plugin, PluginWrapperMethods } from '@masknet/plugin-infra/content-script'\nimport { MaskPostExtraPluginWrapper, useSharedTrans } from '@masknet/shared'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport { Typography, useTheme } from '@mui/material'\nimport { useCheckPermissions, useGrantPermissions } from '../DataSource/usePluginHostPermission.js'\nimport { PossiblePluginSuggestionUISingle } from './DisabledPluginSuggestion.js'\n\ninterface PermissionBoundaryProps extends PropsWithChildren<{}> {\n    permissions: string[]\n    fallback?:\n        | ReactNode\n        | ((grantState: AsyncState<boolean>, onGrantPermissions: () => Promise<boolean | undefined>) => ReactNode)\n}\n\nconst PermissionBoundary = memo<PermissionBoundaryProps>(({ permissions, fallback, children }) => {\n    const { value: hasPermissions = true } = useCheckPermissions(permissions)\n\n    const [grantState, onGrant] = useGrantPermissions(permissions)\n\n    if (!hasPermissions && fallback && permissions.length)\n        return <>{typeof fallback === 'function' ? fallback(grantState, onGrant) : fallback}</>\n\n    return <>{children}</>\n})\n\nexport const MaskPostExtraPluginWrapperWithPermission: PluginWrapperComponent<Plugin.SiteAdaptor.Definition> =\n    forwardRef((props, ref) => {\n        const wrapperMethodsRef = useRef<PluginWrapperMethods | null>(null)\n        const theme = useTheme()\n        const t = useSharedTrans()\n        const [open, setOpen] = useState<boolean>(false)\n\n        const refItem = useMemo((): PluginWrapperMethods => {\n            return {\n                setWidth: (width) => wrapperMethodsRef.current?.setWidth(width),\n                setWrap: (open) => {\n                    setOpen(open)\n                    wrapperMethodsRef.current?.setWrap(open)\n                },\n                setWrapperName: (name) => wrapperMethodsRef.current?.setWrapperName(name),\n            }\n        }, [])\n\n        useImperativeHandle(ref, () => refItem, [refItem])\n\n        return (\n            <PermissionBoundary\n                permissions={props.definition.enableRequirement.host_permissions ?? EMPTY_LIST}\n                fallback={\n                    open ? (\n                        <PossiblePluginSuggestionUISingle\n                            lackHostPermission\n                            define={props.definition}\n                            wrapperProps={props.definition.wrapperProps}\n                            content={\n                                <Typography\n                                    color={theme.palette.maskColor.publicMain}\n                                    fontSize={14}\n                                    marginBottom={3.25}\n                                    textAlign=\"left\"\n                                    component=\"div\"\n                                    px=\"18px\">\n                                    {t.authorization_descriptions()}\n                                    <Typography component=\"div\">\n                                        {props.definition.enableRequirement.host_permissions?.join(',')}\n                                    </Typography>\n                                </Typography>\n                            }\n                        />\n                    ) : undefined\n                }>\n                <MaskPostExtraPluginWrapper\n                    {...props}\n                    ref={(methods) => {\n                        if (methods) wrapperMethodsRef.current = methods\n                    }}\n                />\n            </PermissionBoundary>\n        )\n    })\n","import { createInjectHooksRenderer, useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport type { MetadataRenderProps } from '@masknet/typed-message-react'\nimport { extractTextFromTypedMessage } from '@masknet/typed-message'\nimport {\n    PossiblePluginSuggestionUI,\n    useDisabledPluginSuggestionFromMeta,\n    useDisabledPluginSuggestionFromPost,\n} from './DisabledPluginSuggestion.js'\nimport { MaskPostExtraPluginWrapperWithPermission } from './PermissionBoundary.js'\n\nconst Decrypted = createInjectHooksRenderer(\n    useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode,\n    (x) => x.DecryptedInspector,\n    MaskPostExtraPluginWrapperWithPermission,\n)\n\nexport function DecryptedUI_PluginRendererWithSuggestion(props: MetadataRenderProps) {\n    const a = useDisabledPluginSuggestionFromMeta(props.metadata)\n    const b = useDisabledPluginSuggestionFromPost(extractTextFromTypedMessage(props.message), [])\n    const suggest = Array.from(new Set(a.concat(b)))\n\n    return (\n        <>\n            <PossiblePluginSuggestionUI plugins={suggest} />\n            <Decrypted {...props} />\n        </>\n    )\n}\n","import { useAsyncRetry } from 'react-use'\nimport { usePostInfoDetails } from '@masknet/plugin-infra/content-script'\nimport Services from '#services'\nimport { EMPTY_LIST } from '@masknet/shared-base'\n\nexport function useSelectedRecipientsList() {\n    const iv = usePostInfoDetails.postIVIdentifier()\n    return useAsyncRetry(async () => (iv ? Services.Crypto.getIncompleteRecipientsOfPost(iv) : EMPTY_LIST), [iv])\n}\n","import { type ProfileInformation } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { useTheme } from '@mui/material'\nimport { Avatar } from '../../../../shared-ui/components/Avatar.js'\nimport { Icons } from '@masknet/icons'\n\nconst useStyles = makeStyles<{ isMore: boolean }>()((theme, { isMore }) => {\n    return {\n        iconStack: {\n            padding: theme.spacing(0.5),\n            background: theme.palette.maskColor.bg,\n            borderRadius: '999px',\n            cursor: 'pointer',\n            display: 'inline-flex',\n            boxSizing: 'border-box',\n            minWidth: 'auto',\n        },\n        icon: {\n            marginLeft: '-3.5px',\n            fontSize: 'inherit',\n            width: 16,\n            height: 16,\n            ':nth-of-type(1)': {\n                zIndex: 1,\n                marginLeft: 0,\n            },\n            ':nth-of-type(2)': {\n                zIndex: 2,\n            },\n            ':nth-of-type(3)': {\n                zIndex: 3,\n            },\n        },\n        iconMore: {\n            transform: 'translate(-6px, 3px)',\n            zIndex: 4,\n        },\n        iconAdd: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginLeft: isMore ? 4 : 10,\n            background: theme.palette.maskColor.primary,\n            borderRadius: '50%',\n            height: 16,\n            width: 16,\n        },\n    }\n})\n\ninterface RecipientsToolTipProps {\n    recipients: ProfileInformation[]\n    openDialog(): void\n}\n\nexport function RecipientsToolTip({ recipients, openDialog }: RecipientsToolTipProps) {\n    const isMore = recipients.length > 3\n    const { classes } = useStyles({ isMore })\n    const theme = useTheme()\n    if (!recipients.length) return null\n    return (\n        <div className={classes.iconStack} onClick={openDialog}>\n            {recipients.slice(0, 3).map((recipient) => (\n                <Avatar key={recipient.identifier.userId} classes={{ root: classes.icon }} person={recipient} />\n            ))}\n            {isMore ? <Icons.More size={13} className={classes.iconMore} color={theme.palette.text.primary} /> : null}\n            <div className={classes.iconAdd}>\n                <Icons.AddNoBorder size={12} color={theme.palette.maskColor.white} />\n            </div>\n        </div>\n    )\n}\n","import { memo, useContext, useEffect, useState } from 'react'\nimport { attachNextIDToProfile } from '../../../../shared/index.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { AdditionalContent } from '../AdditionalPostContent.js'\nimport { SelectProfileDialog } from '../SelectPeopleDialog.js'\nimport { makeStyles } from '@masknet/theme'\nimport { Typography, useTheme } from '@mui/material'\nimport type { TypedMessage } from '@masknet/typed-message'\nimport {\n    EMPTY_LIST,\n    MaskMessages,\n    type ProfileIdentifier,\n    type ProfileInformation,\n    type ProfileInformationFromNextID,\n} from '@masknet/shared-base'\nimport { useAuthorDifferentMessage } from './authorDifferentMessage.js'\nimport { DecryptedUI_PluginRendererWithSuggestion } from '../DecryptedPostMetadataRender.js'\nimport { PostInfoContext, usePostInfoDetails } from '@masknet/plugin-infra/content-script'\nimport { useRecipientsList } from '../../CompositionDialog/useRecipientsList.js'\nimport { useSelectedRecipientsList } from '../../CompositionDialog/useSelectedRecipientsList.js'\nimport Services from '#services'\nimport type { LazyRecipients } from '../../CompositionDialog/CompositionUI.js'\nimport { delay } from '@masknet/kit'\nimport { activatedSiteAdaptorUI } from '../../../site-adaptor-infra/index.js'\nimport { RecipientsToolTip } from './RecipientsToolTip.js'\nimport { Icons } from '@masknet/icons'\n\ninterface DecryptPostSuccessProps {\n    message: TypedMessage\n    /** The author in the payload */\n    author: ProfileIdentifier | null\n    /** The author of the encrypted post */\n    postedBy: ProfileIdentifier | null\n    whoAmI: ProfileIdentifier | null\n}\n\nfunction useCanAppendShareTarget(whoAmI: ProfileIdentifier | null): whoAmI is ProfileIdentifier {\n    const version = usePostInfoDetails.version()\n    const sharedPublic = usePostInfoDetails.publicShared()\n    const currentPostBy = usePostInfoDetails.author()\n    // TODO: this should be read from the payload.\n    const authorInPayload = currentPostBy\n    const postAuthor = authorInPayload || currentPostBy\n\n    if (sharedPublic) return false\n    if (version !== -38 && version !== -37) return false\n    if (!whoAmI) return false\n    if (whoAmI !== postAuthor) return false\n    return true\n}\nconst DecryptPostSuccessBase = memo(function DecryptPostSuccessNoShare(\n    props: React.PropsWithChildren<DecryptPostSuccessProps>,\n) {\n    const { message, author, postedBy } = props\n    const t = useMaskSharedTrans()\n    const iv = usePostInfoDetails.postIVIdentifier()\n\n    useEffect(() => {\n        if (message.meta || !iv?.toText()) return\n        MaskMessages.events.postReplacerHidden.sendToLocal({ hidden: true, postId: iv.toText() })\n    }, [message, iv?.toText()])\n\n    return (\n        <>\n            <AdditionalContent\n                title={t.decrypted_postbox_title()}\n                headerActions={useAuthorDifferentMessage(author, postedBy, props.children)}\n                message={message}\n            />\n            <DecryptedUI_PluginRendererWithSuggestion message={message} metadata={message.meta} />\n        </>\n    )\n})\n\nconst useStyles = makeStyles<{ canAppendShareTarget: boolean }>()((theme, { canAppendShareTarget }) => {\n    return {\n        visibilityBox: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: theme.spacing(0.5, 1),\n            background: theme.palette.maskColor.bg,\n            borderRadius: '999px',\n            cursor: canAppendShareTarget ? 'pointer' : 'default',\n        },\n        iconAdd: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginLeft: 8,\n            background: theme.palette.maskColor.primary,\n            borderRadius: '50%',\n            height: 16,\n            width: 16,\n        },\n    }\n})\nexport const DecryptPostSuccess = memo(function DecryptPostSuccess(props: DecryptPostSuccessProps) {\n    const canAppendShareTarget = useCanAppendShareTarget(props.whoAmI)\n    const { classes } = useStyles({ canAppendShareTarget })\n    const t = useMaskSharedTrans()\n    const [showDialog, setShowDialog] = useState(false)\n    const theme = useTheme()\n    const recipients = useRecipientsList()\n    const { value: selectedRecipients = EMPTY_LIST, retry } = useSelectedRecipientsList()\n\n    const rightActions =\n        props.author?.userId === props.whoAmI?.userId ? (\n            canAppendShareTarget && props.whoAmI ? (\n                <>\n                    {selectedRecipients?.length ? (\n                        <RecipientsToolTip recipients={selectedRecipients} openDialog={() => setShowDialog(true)} />\n                    ) : (\n                        <section className={classes.visibilityBox} onClick={() => setShowDialog(true)}>\n                            <Typography color=\"textPrimary\" fontSize={12} fontWeight={500}>\n                                {t.decrypted_postbox_only_visible_to_yourself()}\n                            </Typography>\n                            <div className={classes.iconAdd}>\n                                <Icons.AddNoBorder size={12} color={theme.palette.maskColor.white} />\n                            </div>\n                        </section>\n                    )}\n\n                    {showDialog ? (\n                        <AppendShareDetail\n                            selectedRecipients={selectedRecipients}\n                            retry={retry}\n                            whoAmI={props.whoAmI}\n                            onClose={() => setShowDialog(false)}\n                            recipients={recipients}\n                        />\n                    ) : null}\n                </>\n            ) : (\n                <section className={classes.visibilityBox}>\n                    <Typography color=\"textPrimary\" fontSize={12} fontWeight={500}>\n                        {t.decrypted_postbox_visible_to_all()}\n                    </Typography>\n                </section>\n            )\n        ) : null\n    return <DecryptPostSuccessBase {...props}>{rightActions}</DecryptPostSuccessBase>\n})\n\ninterface Props {\n    onClose(): void\n    recipients: LazyRecipients\n    whoAmI: ProfileIdentifier\n    selectedRecipients: ProfileInformation[]\n    retry(): void\n}\nfunction AppendShareDetail({ recipients, selectedRecipients, onClose, whoAmI, retry }: Props) {\n    const info = useContext(PostInfoContext)!\n    const iv = usePostInfoDetails.postIVIdentifier()!\n\n    useEffect(recipients.request, [])\n\n    return (\n        <SelectProfileDialog\n            open\n            selectedProfiles={selectedRecipients}\n            profiles={recipients.recipients || EMPTY_LIST}\n            onClose={onClose}\n            onSelect={async (profiles) => {\n                for (const item of profiles) {\n                    await attachNextIDToProfile(item as ProfileInformationFromNextID)\n                }\n                await Services.Crypto.appendShareTarget(\n                    info.version.getCurrentValue()!,\n                    iv,\n                    profiles.map((x) => ({ profile: x.identifier, persona: x.linkedPersona })),\n                    whoAmI,\n                    activatedSiteAdaptorUI!.encryptPayloadNetwork,\n                )\n                await delay(1500)\n                retry()\n            }}\n        />\n    )\n}\n","import { memo } from 'react'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { AdditionalContent } from '../AdditionalPostContent.js'\nimport type { DecryptionProgress } from './types.js'\nimport type { ProfileIdentifier } from '@masknet/shared-base'\nimport { useAuthorDifferentMessage } from './authorDifferentMessage.js'\ninterface DecryptPostAwaitingProps {\n    type?: DecryptionProgress\n    /** The author in the payload */\n    author: ProfileIdentifier | null\n    /** The author of the encrypted post */\n    postedBy: ProfileIdentifier | null\n}\nexport const DecryptPostAwaiting = memo(function DecryptPostAwaiting(props: DecryptPostAwaitingProps) {\n    const { author, postedBy, type } = props\n    const t = useMaskSharedTrans()\n    const key = {\n        finding_post_key: t.decrypted_postbox_decrypting_finding_post_key(),\n        finding_person_public_key: t.decrypted_postbox_decrypting_finding_person_key(),\n        init: t.decrypted_postbox_decrypting(),\n        decode_post: t.decrypted_postbox_decoding(),\n        iv_decrypted: t.decrypted_postbox_decoding(),\n        payload_decrypted: t.decrypted_postbox_decoding(),\n        intermediate_success: 'unreachable case. it should display success UI',\n        undefined: t.decrypted_postbox_decrypting(),\n    } as const\n    return (\n        <AdditionalContent\n            title={key[type?.progress || 'undefined']}\n            progress\n            headerActions={useAuthorDifferentMessage(author, postedBy, void 0)}\n        />\n    )\n})\n","import { memo } from 'react'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { AdditionalContent } from '../AdditionalPostContent.js'\nimport type { ProfileIdentifier } from '@masknet/shared-base'\nimport { useAuthorDifferentMessage } from './authorDifferentMessage.js'\n\ninterface DecryptPostFailedProps {\n    error: Error\n    /** The author in the payload */\n    author: ProfileIdentifier | null\n    /** The author of the encrypted post */\n    postedBy: ProfileIdentifier | null\n}\nexport const DecryptPostFailed = memo(function DecryptPostFailed(props: DecryptPostFailedProps) {\n    const { author, postedBy, error } = props\n    const t = useMaskSharedTrans()\n\n    return (\n        <AdditionalContent\n            title={t.service_decryption_failed()}\n            titleIcon=\"error\"\n            message={error?.message}\n            headerActions={useAuthorDifferentMessage(author, postedBy, void 0)}\n        />\n    )\n})\n","import { Fragment, useContext, useEffect, useReducer } from 'react'\nimport { extractTextFromTypedMessage, isTypedMessageEqual, type TypedMessage } from '@masknet/typed-message'\nimport type { ProfileIdentifier } from '@masknet/shared-base'\n\nimport Services, { GeneratorServices } from '#services'\nimport type { DecryptionProgress, FailureDecryption, SuccessDecryption } from './types.js'\nimport { DecryptPostSuccess } from './DecryptedPostSuccess.js'\nimport { DecryptPostAwaiting } from './DecryptPostAwaiting.js'\nimport { DecryptPostFailed } from './DecryptPostFailed.js'\nimport { encodeArrayBuffer, safeUnreachable } from '@masknet/kit'\nimport { activatedSiteAdaptorUI } from '../../../site-adaptor-infra/index.js'\nimport type { DecryptionContext, EncodedPayload } from '../../../../background/services/crypto/decryption.js'\nimport { DecryptIntermediateProgressKind, DecryptProgressKind } from '@masknet/encryption'\nimport { type PostContext, usePostInfoDetails, PostInfoContext } from '@masknet/plugin-infra/content-script'\nimport { Some } from 'ts-results-es'\nimport { uniqWith } from 'lodash-es'\n\ntype PossibleProgress = SuccessDecryption | FailureDecryption | DecryptionProgress\n\nfunction progressReducer(\n    state: Array<{\n        key: string\n        progress: PossibleProgress\n    }>,\n    payload: {\n        type: 'refresh'\n        key: string\n        progress: PossibleProgress\n    },\n) {\n    const { key, progress } = payload\n    const currentProgressIndex = state.findIndex((x) => x.key === key)\n    if (currentProgressIndex === -1) {\n        return [\n            ...state,\n            {\n                key,\n                progress,\n            },\n        ]\n    }\n    const currentProgress = state[currentProgressIndex].progress\n    if (currentProgress && currentProgress.type !== 'progress' && progress.type === 'progress') return state\n    state[currentProgressIndex] = {\n        key,\n        progress,\n    }\n    return [...state]\n}\n\ninterface DecryptPostProps {\n    whoAmI: ProfileIdentifier | null\n}\nfunction isProgressEqual(a: PossibleProgress, b: PossibleProgress) {\n    if (a.type !== b.type) return false\n    if (a.internal !== b.internal) return false\n    if (a.type === 'success') return isTypedMessageEqual(a, b as SuccessDecryption)\n    if (a.type === 'error') return a.error === (b as FailureDecryption).error\n    if (a.type === 'progress') return a.progress === (b as DecryptionProgress).progress\n    safeUnreachable(a.type)\n    return false\n}\nexport function DecryptPost(props: DecryptPostProps) {\n    const { whoAmI } = props\n    const deconstructedPayload = usePostInfoDetails.hasMaskPayload()\n    const currentPostBy = usePostInfoDetails.author()\n    // TODO: we should read this from the payload.\n    const authorInPayload = usePostInfoDetails.author()\n    const postBy = authorInPayload || currentPostBy\n    const postMetadataImages = usePostInfoDetails.postMetadataImages()\n    const mentionedLinks = usePostInfoDetails.mentionedLinks()\n    const postInfo = useContext(PostInfoContext)!\n\n    const [progress, dispatch] = useReducer(progressReducer, [])\n\n    useEffect(() => {\n        function setCommentFns(iv: Uint8Array, message: TypedMessage) {\n            const text = extractTextFromTypedMessage(message).expect('TypedMessage should have one or more text part')\n            postInfo.encryptComment.value = async (comment) => Services.Crypto.encryptComment(iv, text, comment)\n            postInfo.decryptComment.value = async (encryptedComment) =>\n                Services.Crypto.decryptComment(iv, text, encryptedComment)\n        }\n        const signal = new AbortController()\n        const postURL = postInfo.url.getCurrentValue()?.toString()\n        const report =\n            (key: string): ReportProgress =>\n            (kind, message) => {\n                if (kind === 'e2e') {\n                    dispatch({\n                        type: 'refresh',\n                        key,\n                        progress: { type: 'progress', progress: 'finding_post_key', internal: false },\n                    })\n                } else {\n                    dispatch({\n                        type: 'refresh',\n                        key,\n                        progress: { type: 'error', error: message, internal: false },\n                    })\n                }\n            }\n        if (deconstructedPayload) {\n            makeProgress(\n                postURL,\n                postBy,\n                whoAmI,\n                {\n                    type: 'text',\n                    text:\n                        extractTextFromTypedMessage(postInfo.rawMessage.getCurrentValue()).unwrapOr('') +\n                        ' ' +\n                        mentionedLinks.join(' '),\n                },\n                (message, iv) => {\n                    setCommentFns(iv, message)\n                    dispatch({\n                        type: 'refresh',\n                        key: 'text',\n                        progress: {\n                            type: 'success',\n                            content: message,\n                            internal: false,\n                            iv: encodeArrayBuffer(iv),\n                        },\n                    })\n                },\n                postInfo.decryptedReport,\n                report('text'),\n                signal.signal,\n            )\n        }\n        postMetadataImages.forEach((url) => {\n            if (signal.signal.aborted) return\n            makeProgress(\n                postURL,\n                postBy,\n                whoAmI,\n                { type: 'image-url', image: url },\n                (message, iv) => {\n                    setCommentFns(iv, message)\n                    dispatch({\n                        type: 'refresh',\n                        key: url,\n                        progress: {\n                            type: 'success',\n                            content: message,\n                            internal: false,\n                            iv: encodeArrayBuffer(iv),\n                        },\n                    })\n                },\n                postInfo.decryptedReport,\n                report(url),\n                signal.signal,\n            )\n        })\n        return () => signal.abort()\n    }, [deconstructedPayload, postBy, postMetadataImages.join(','), whoAmI, mentionedLinks.join(',')])\n\n    if (!deconstructedPayload && progress.every((x) => x.progress.internal)) return null\n    return (\n        <>\n            {uniqWith(progress, (a, b) => isProgressEqual(a.progress, b.progress))\n                // the internal progress should not display to the end-user\n                .filter(({ progress }) => !progress.internal)\n                .map(({ progress, key }, index) => (\n                    <Fragment key={key}>{renderProgress(progress)}</Fragment>\n                ))}\n        </>\n    )\n\n    function renderProgress(progress: SuccessDecryption | FailureDecryption | DecryptionProgress) {\n        switch (progress.type) {\n            case 'success':\n                return (\n                    <DecryptPostSuccess\n                        author={authorInPayload}\n                        postedBy={currentPostBy}\n                        whoAmI={whoAmI}\n                        message={progress.content}\n                    />\n                )\n            case 'error':\n                return (\n                    <DecryptPostFailed\n                        error={new Error(progress.error)}\n                        author={authorInPayload}\n                        postedBy={currentPostBy}\n                    />\n                )\n            case 'progress':\n                return <DecryptPostAwaiting type={progress} author={authorInPayload} postedBy={currentPostBy} />\n            default:\n                return null\n        }\n    }\n}\n\ntype ReportProgress = (type: 'e2e' | 'error', message: string) => void\nasync function makeProgress(\n    postURL: string | undefined,\n    authorHint: ProfileIdentifier | null,\n    currentProfile: ProfileIdentifier | null,\n    payload: EncodedPayload,\n    done: (message: TypedMessage, iv: Uint8Array) => void,\n    reporter: PostContext['decryptedReport'],\n    reportProgress: ReportProgress,\n    signal: AbortSignal,\n) {\n    const context: DecryptionContext = {\n        postURL,\n        authorHint,\n        currentProfile,\n        encryptPayloadNetwork: activatedSiteAdaptorUI!.encryptPayloadNetwork,\n    }\n    let iv: Uint8Array | undefined\n    for await (const progress of GeneratorServices.decrypt(payload, context)) {\n        if (signal.aborted) return\n        if (progress.type === DecryptProgressKind.Success) {\n            done(progress.content, iv || new Uint8Array())\n        } else if (progress.type === DecryptProgressKind.Info) {\n            iv ??= progress.iv\n            if (typeof progress.isAuthorOfPost === 'boolean')\n                reporter({ isAuthorOfPost: Some(progress.isAuthorOfPost) })\n            if (progress.iv) reporter({ iv: encodeArrayBuffer(progress.iv) })\n            if (progress.version) reporter({ version: progress.version })\n            if (typeof progress.publicShared === 'boolean') reporter({ sharedPublic: Some(progress.publicShared) })\n        } else if (progress.type === DecryptProgressKind.Progress) {\n            if (progress.event === DecryptIntermediateProgressKind.TryDecryptByE2E) reportProgress('e2e', '')\n            else safeUnreachable(progress.event)\n        } else if (progress.type === DecryptProgressKind.Error) {\n        } else safeUnreachable(progress)\n    }\n}\n","import { useSubscription } from 'use-subscription'\nimport {\n    usePostInfoDetails,\n    createInjectHooksRenderer,\n    useActivatedPluginsSiteAdaptor,\n} from '@masknet/plugin-infra/content-script'\nimport { DecryptPost } from './DecryptedPost/DecryptedPost.js'\nimport { useCurrentIdentity } from '../DataSource/useActivatedUI.js'\nimport { PossiblePluginSuggestionPostInspector } from './DisabledPluginSuggestion.js'\nimport { MaskPostExtraPluginWrapperWithPermission } from './PermissionBoundary.js'\nimport { PersistentStorages } from '@masknet/shared-base'\n\nconst PluginHooksRenderer = createInjectHooksRenderer(\n    useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode,\n    (plugin) => plugin.PostInspector,\n    MaskPostExtraPluginWrapperWithPermission,\n)\n\nexport interface PostInspectorProps {\n    zipPost(): void\n    /** @default 'before' */\n    slotPosition?: 'before' | 'after'\n}\nexport function PostInspector(props: PostInspectorProps) {\n    const postBy = usePostInfoDetails.author()\n    const hasEncryptedPost = usePostInfoDetails.hasMaskPayload()\n    const postImages = usePostInfoDetails.postMetadataImages()\n    const isDebugging = useSubscription(PersistentStorages.Settings.storage.debugging.subscription)\n    const whoAmI = useCurrentIdentity()\n\n    if (hasEncryptedPost || postImages.length) {\n        if (!isDebugging) props.zipPost()\n        return withAdditionalContent(<DecryptPost whoAmI={whoAmI?.identifier || null} />)\n    }\n    return withAdditionalContent(null)\n    function withAdditionalContent(x: JSX.Element | null) {\n        const slot = hasEncryptedPost ? null : <slot />\n        return (\n            <>\n                {process.env.NODE_ENV === 'development' && !postBy ? (\n                    <h2 style={{ background: 'red', color: 'white' }}>Please fix me. Post author is not detected.</h2>\n                ) : null}\n                {props.slotPosition !== 'after' && slot}\n                {x}\n                <PossiblePluginSuggestionPostInspector />\n                <PluginHooksRenderer />\n                {props.slotPosition !== 'before' && slot}\n            </>\n        )\n    }\n}\n","import { memo } from 'react'\nimport type { DOMProxy } from '@dimensiondev/holoflows-kit'\nimport { type PostInfo, PostInfoProvider } from '@masknet/plugin-infra/content-script'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { PostInspector, type PostInspectorProps } from '../../../components/InjectedComponents/PostInspector.js'\nimport { noop } from 'lodash-es'\n\nexport function injectPostInspectorDefault(\n    config: InjectPostInspectorDefaultConfig = {},\n    props?: Pick<PostInspectorProps, 'slotPosition'>,\n) {\n    const PostInspectorDefault = memo(function PostInspectorDefault(props: { zipPost(): void }) {\n        return <PostInspector {...props} />\n    })\n\n    const { zipPost, injectionPoint } = config\n    const zipPostF = zipPost || noop\n\n    return function injectPostInspector(current: PostInfo, signal: AbortSignal) {\n        const jsx = (\n            <PostInfoProvider post={current}>\n                <PostInspectorDefault {...props} zipPost={() => zipPostF(current.rootElement)} />\n            </PostInfoProvider>\n        )\n        const root = attachReactTreeWithContainer(injectionPoint?.(current) ?? current.rootElement.afterShadow, {\n            key: 'post-inspector',\n            untilVisible: true,\n            signal,\n        })\n        root.render(jsx)\n        return root.destroy\n    }\n}\n\ninterface InjectPostInspectorDefaultConfig {\n    zipPost?(node: DOMProxy): void\n    injectionPoint?: (postInfo: PostInfo) => ShadowRoot\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20.5 11H19V7c0-1.1-.9-2-2-2h-4V3.5C13 2.12 11.88 1 10.5 1S8 2.12 8 3.5V5H4c-1.1 0-1.99.9-1.99 2v3.8H3.5c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7H2V20c0 1.1.9 2 2 2h3.8v-1.5c0-1.49 1.21-2.7 2.7-2.7 1.49 0 2.7 1.21 2.7 2.7V22H17c1.1 0 2-.9 2-2v-4h1.5c1.38 0 2.5-1.12 2.5-2.5S21.88 11 20.5 11z\"\n}), 'Extension');","import { Box, IconButton, Paper, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { SetupGuideStep } from '@masknet/shared-base'\nimport { Icons } from '@masknet/icons'\n\ninterface ContentUIProps {\n    dialogType: SetupGuideStep\n    content?: React.ReactNode\n    footer?: React.ReactNode\n    tip?: React.ReactNode\n    dismiss?: React.ReactNode\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    content: {\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        marginLeft: 0,\n        marginTop: theme.spacing(3),\n        flex: 1,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n}))\n\nfunction ContentUI(props: ContentUIProps) {\n    const { classes } = useStyles()\n    switch (props.dialogType) {\n        case SetupGuideStep.PinExtension:\n            return (\n                <Box>\n                    <main className={classes.content}>{props.content}</main>\n                    <div>{props.tip}</div>\n                    {props.footer ? <footer className={classes.footer}>{props.footer}</footer> : null}\n                    {props.dismiss ? <div>{props.dismiss}</div> : null}\n                </Box>\n            )\n        default:\n            return null\n    }\n}\n\nconst useWizardDialogStyles = makeStyles()((theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        position: 'relative',\n        boxShadow: theme.palette.mode === 'dark' ? 'none' : theme.shadows[4],\n        border: `${theme.palette.mode === 'dark' ? 'solid' : 'none'} 1px ${theme.palette.divider}`,\n        borderRadius: 20,\n        [theme.breakpoints.down('sm')]: {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            margin: 0,\n            alignSelf: 'center',\n            borderRadius: 0,\n            boxShadow: 'none',\n            border: `solid 1px ${theme.palette.divider}`,\n            width: '100%',\n        },\n        userSelect: 'none',\n        boxSizing: 'border-box',\n        width: 480,\n        '&.small': {\n            width: 384,\n        },\n        overflow: 'hidden',\n    },\n    close: {\n        color: theme.palette.text.primary,\n        position: 'absolute',\n        right: 10,\n        top: 10,\n        cursor: 'pointer',\n    },\n    header: {\n        height: 40,\n    },\n    content: {},\n    footer: {},\n}))\n\ninterface WizardDialogProps {\n    small?: boolean\n    title?: string\n    dialogType: SetupGuideStep\n    optional?: boolean\n    content?: React.ReactNode\n    tip?: React.ReactNode\n    footer?: React.ReactNode\n    dismiss?: React.ReactNode\n    onClose?: () => void\n}\n\nexport function WizardDialog(props: WizardDialogProps) {\n    const { small, title, dialogType, content, tip, footer, dismiss, onClose } = props\n    const { classes, cx } = useWizardDialogStyles()\n\n    return (\n        <Paper className={cx(classes.root, small ? 'small' : '')}>\n            <header className={classes.header}>\n                <Typography color=\"textPrimary\" variant=\"h3\" fontSize={24}>\n                    {title}\n                </Typography>\n            </header>\n            <ContentUI dialogType={dialogType} content={content} tip={tip} footer={footer} dismiss={dismiss} />\n            {onClose ? (\n                <IconButton className={classes.close} size=\"medium\" onClick={onClose}>\n                    <Icons.Close />\n                </IconButton>\n            ) : null}\n        </Paper>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { SetupGuideStep } from '@masknet/shared-base'\nimport { MaskColorVar, makeStyles } from '@masknet/theme'\nimport { Extension as ExtensionIcon } from '@mui/icons-material'\nimport { Box, Button, Typography } from '@mui/material'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { WizardDialog } from './WizardDialog.js'\n\ninterface PinExtensionProps {\n    onDone?: () => void\n    onClose?: () => void\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    button: {\n        minWidth: 150,\n        height: 40,\n        minHeight: 40,\n        marginLeft: 0,\n        marginTop: 0,\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n        },\n        fontSize: 14,\n        wordBreak: 'keep-all',\n        '&,&:hover': {\n            color: `${MaskColorVar.twitterButtonText} !important`,\n            background: `${MaskColorVar.twitterButton} !important`,\n        },\n    },\n    tip: {\n        fontSize: 16,\n        fontWeight: 500,\n        lineHeight: '22px',\n        paddingTop: 16,\n    },\n    connection: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n    },\n    connectItem: {\n        flex: 1,\n        height: 75,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    line: {\n        width: 100,\n        height: 1,\n        borderTop: `dashed 1px  ${MaskColorVar.borderSecondary}`,\n    },\n    name: {\n        fontSize: 16,\n        fontWeight: 500,\n    },\n}))\n\nexport function PinExtension({ onDone, onClose }: PinExtensionProps) {\n    const pinImg = new URL('../../../resources/extensionPinned.png', import.meta.url).toString()\n    const { classes } = useStyles()\n    const t = useMaskSharedTrans()\n\n    return (\n        <WizardDialog\n            dialogType={SetupGuideStep.PinExtension}\n            content={\n                <Box className={classes.connection}>\n                    <Box className={classes.connectItem}>\n                        <Icons.MaskBlue size={48} />\n                        <Typography variant=\"body2\" className={classes.name}>\n                            Mask Network\n                        </Typography>\n                    </Box>\n                    <Box className={classes.line} />\n                    <Box className={classes.connectItem}>\n                        <img\n                            src={pinImg}\n                            width={100}\n                            style={{ filter: 'drop-shadow(0 0 16px rgba(101, 119, 134, 0.2))' }}\n                        />\n                    </Box>\n                </Box>\n            }\n            tip={\n                <Typography className={classes.tip} component=\"div\">\n                    <div>{t.setup_guide_pin_tip()}</div>\n                    <ol style={{ paddingLeft: '24px' }}>\n                        <li>\n                            {t.setup_guide_pin_tip_step_click_left()}\n                            <ExtensionIcon sx={{ fontSize: 16, color: '#ababab' }} />\n                            {t.setup_guide_pin_tip_step_click_right()}\n                        </li>\n                        <li>\n                            {t.setup_guide_pin_tip_step_find_left()}\n                            <Icons.Pin size={16} />\n                            {t.setup_guide_pin_tip_step_find_right()}\n                        </li>\n                        <li>{t.setup_guide_pin_tip_successfully()}</li>\n                    </ol>\n                </Typography>\n            }\n            footer={\n                <Button className={classes.button} variant=\"contained\" onClick={onDone}>\n                    {t.start()}\n                </Button>\n            }\n            onClose={onClose}\n        />\n    )\n}\n","import { useTimeout } from 'react-use'\nimport { useLastRecognizedIdentity } from '../../../DataSource/useActivatedUI.js'\n\nexport function useCurrentUserId() {\n    const lastRecognized = useLastRecognizedIdentity()\n    const currentUserId = lastRecognized.identifier?.userId\n    // There is not state for getting current userId, setting a timeout for that.\n    const [timeout] = useTimeout(5000)\n    const [delay] = useTimeout(800)\n    const fakeLoading = !delay() // Getting userId is instantly fast, add a fake loading\n    const loading = timeout() ? false : fakeLoading || !currentUserId\n    return [loading, fakeLoading ? undefined : currentUserId] as const\n}\n","import { usePersonaProofs } from '@masknet/shared'\nimport { activatedSiteAdaptorUI } from '../../../../site-adaptor-infra/ui.js'\n\nexport function useConnectedVerified(pubkey: string | undefined, userId: string) {\n    const { data: proofs, isFetching, isLoading } = usePersonaProofs(pubkey)\n    const platform = activatedSiteAdaptorUI!.configuration.nextIDConfig?.platform\n    const checking = isLoading || isFetching\n    if (!platform || !proofs?.length) return [checking, false]\n    const verified = proofs.some((x) => x.platform === platform && x.identity === userId && x.is_valid)\n    return [checking, verified] as const\n}\n","import Services from '#services'\nimport {\n    EnhanceableSite,\n    MaskMessages,\n    SetupGuideStep,\n    userPinExtension,\n    type PersonaIdentifier,\n} from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { useQuery } from '@tanstack/react-query'\nimport { useEffect, useMemo, useState } from 'react'\nimport { createContainer } from 'unstated-next'\nimport { activatedSiteAdaptorUI } from '../../../site-adaptor-infra/index.js'\nimport { useLastRecognizedIdentity } from '../../DataSource/useActivatedUI.js'\nimport { useSetupGuideStatus } from '../../GuideStep/useSetupGuideStatus.js'\nimport { useCurrentUserId } from './hooks/useCurrentUserId.js'\nimport { useConnectedVerified } from './hooks/useConnectedVerified.js'\n\nexport function useSetupGuideStepInfo(persona?: PersonaIdentifier) {\n    // #region parse setup status\n    const lastPinExtensionSetting = useValueRef(userPinExtension)\n    const setupGuide = useSetupGuideStatus()\n    // #endregion\n\n    const myIdentity = useLastRecognizedIdentity()\n    const [loadingCurrentUserId, currentUserId] = useCurrentUserId()\n    const userId = setupGuide.username || currentUserId || ''\n\n    const {\n        data: personaInfo,\n        isFetching: checkingConnected,\n        refetch,\n    } = useQuery({\n        enabled: !!persona?.publicKeyAsHex,\n        queryKey: ['query-persona-info', persona?.publicKeyAsHex],\n        queryFn: async () => {\n            if (!persona?.publicKeyAsHex) return null\n            return Services.Identity.queryPersona(persona)\n        },\n    })\n    useEffect(() => MaskMessages.events.ownPersonaChanged.on(() => refetch()), [])\n    const { data: currentTabId } = useQuery(['current-tab-id'], async () => Services.Helper.getActiveTabId(), {\n        refetchOnWindowFocus: true,\n    })\n    const { networkIdentifier: site, configuration } = activatedSiteAdaptorUI!\n    const nextIdPlatform = configuration.nextIDConfig?.platform\n    const [checkingVerified, verified] = useConnectedVerified(personaInfo?.identifier?.publicKeyAsHex, userId)\n    const connected = personaInfo?.linkedProfiles.some(\n        (x) => x.identifier.network === site && x.identifier.userId === userId,\n    )\n\n    useEffect(() => {\n        if (userId || site !== EnhanceableSite.Twitter) return\n        // In order to collect user info after login, need to reload twitter once\n        let reloaded = false\n        const handler = () => {\n            // twitter will redirect to home page after login\n            if (!(!reloaded && location.pathname === '/home')) return\n            reloaded = true\n            location.reload()\n        }\n        window.addEventListener('locationchange', handler)\n        return () => window.removeEventListener('locationchange', handler)\n    }, [userId])\n\n    const [isFirstConnection, setIsFirstConnection] = useState(false)\n    const step = useMemo(() => {\n        if (!setupGuide.status) {\n            // Should show pin extension when not set\n            if (!lastPinExtensionSetting) {\n                return SetupGuideStep.PinExtension\n            } else {\n                return SetupGuideStep.Close\n            }\n        }\n        const nextStep = isFirstConnection ? SetupGuideStep.VerifyOnNextID : SetupGuideStep.CheckConnection\n        if (checkingVerified || checkingConnected || loadingCurrentUserId) return nextStep\n        if (!connected || (nextIdPlatform && !verified)) {\n            return SetupGuideStep.VerifyOnNextID\n        }\n        return nextStep\n    }, [\n        setupGuide.status,\n        checkingVerified,\n        checkingConnected,\n        connected,\n        verified,\n        isFirstConnection,\n        loadingCurrentUserId,\n    ])\n    const skip = !personaInfo || currentTabId !== setupGuide.tabId\n    // Will show connect result the first time for sites that don't need to verify nextId.\n    return {\n        step: skip ? SetupGuideStep.Close : step,\n        userId,\n        currentUserId,\n        loadingCurrentUserId,\n        myIdentity,\n        personaInfo,\n        isFirstConnection,\n        setIsFirstConnection,\n        checkingConnected,\n        checkingVerified,\n        verified,\n        connected,\n    }\n}\n\nexport const SetupGuideContext = createContainer(useSetupGuideStepInfo)\nSetupGuideContext.Provider.displayName = 'SetupGuideProvider'\n","export const EMOJI_LIST = [\n    '🐶',\n    '🐱',\n    '🐭',\n    '🐹',\n    '🐰',\n    '🦊',\n    '🐻',\n    '🐼',\n    '🐻',\n    '🐨',\n    '🐯',\n    '🦁',\n    '🐮',\n    '🐷',\n    '🐽',\n    '🐸',\n    '🐵',\n    '🙈',\n    '🙉',\n    '🙊',\n    '🐒',\n    '🐔',\n    '🐧',\n    '🐦',\n    '🐣',\n    '🐥',\n    '🦆',\n    '🦅',\n    '🦉',\n    '🦇',\n    '🐺',\n    '🐗',\n    '🐴',\n    '🦄',\n    '🐝',\n    '🐛',\n    '🦋',\n    '🐌',\n    '🐞',\n    '🐢',\n    '🐍',\n    '🦖',\n    '🦕',\n    '🐙',\n    '🦑',\n    '🦐',\n    '🦞',\n    '🦀',\n    '🐡',\n    '🐠',\n    '🐟',\n    '🐬',\n    '🐳',\n    '🐋',\n    '🦈',\n    '🐊',\n    '🐅',\n    '🐆',\n    '🦓',\n    '🦍',\n    '🦧',\n    '🐘',\n    '🦛',\n    '🦏',\n    '🐪',\n    '🐫',\n    '🦒',\n    '🦘',\n    '👻',\n    '🤖',\n    '🎃',\n    '🍏',\n    '🍎',\n    '🍐',\n    '🍊',\n    '🍋',\n    '🍌',\n    '🍉',\n    '🍇',\n    '🍓',\n    '🍈',\n    '🍒',\n    '🍑',\n    '🥭',\n    '🍍',\n    '🥥',\n    '🥝',\n    '🍅',\n    '🍆',\n    '🥑',\n    '🥦',\n    '🥬',\n    '🥒',\n    '🌶',\n    '🌽',\n    '🥕',\n    '🧄',\n    '🧅',\n    '🥔',\n    '🍠',\n    '⚽',\n    '🏀',\n    '🏈',\n    '⚾',\n    '🥎',\n    '🎾',\n    '🏐',\n    '🏉',\n    '🥏',\n    '🎱',\n    '🍭',\n    '🍬',\n    '🍫',\n]\n","import { generateContactAvatarColor, calculateHash } from '@masknet/shared-base'\nimport { isZeroAddress } from '@masknet/web3-shared-evm'\nimport { Avatar as MuiAvatar, alpha, useTheme, type AvatarProps } from '@mui/material'\nimport { useMemo } from 'react'\nimport { EMOJI_LIST } from './constants.js'\n\ninterface Props extends AvatarProps {\n    value: string\n}\n\nexport function EmojiAvatar({ value, ...props }: Props) {\n    const theme = useTheme()\n\n    const { emoji, backgroundColor } = useMemo(() => {\n        if (isZeroAddress(value) || !value) {\n            return { emoji: '🐼', backgroundColor: alpha('#627EEA', 0.2) }\n        }\n        const hash = calculateHash(value)\n        return {\n            emoji: EMOJI_LIST[hash % EMOJI_LIST.length],\n            backgroundColor: generateContactAvatarColor(value, theme.palette.mode),\n        }\n    }, [value, theme.palette.mode])\n\n    return (\n        <MuiAvatar\n            style={{\n                backgroundColor,\n            }}\n            {...props}>\n            {emoji}\n        </MuiAvatar>\n    )\n}\n","import { useAsyncFn } from 'react-use'\nimport { NextIDAction, type PersonaInformation, SignType, MaskMessages, toBase64, fromHex } from '@masknet/shared-base'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport Services from '#services'\nimport { activatedSiteAdaptorUI } from '../../site-adaptor-infra/index.js'\n\nasync function createAndSignMessage(persona: PersonaInformation, username: string) {\n    const platform = activatedSiteAdaptorUI!.configuration.nextIDConfig?.platform\n    if (!platform) return null\n\n    const payload = await NextIDProof.createPersonaPayload(\n        persona.identifier.publicKeyAsHex,\n        NextIDAction.Create,\n        username,\n        platform,\n    )\n    if (!payload) throw new Error('Failed to create persona payload.')\n\n    const signature = await Services.Identity.signWithPersona(\n        SignType.Message,\n        payload.signPayload,\n        persona.identifier,\n        location.origin,\n        true,\n    )\n    if (!signature) throw new Error('Failed to sign by persona.')\n    return { payload, signature }\n}\n\nexport function useNextIDVerify() {\n    const postMessage = activatedSiteAdaptorUI!.automation?.nativeCompositionDialog?.attachText\n    const platform = activatedSiteAdaptorUI!.configuration.nextIDConfig?.platform\n\n    return useAsyncFn(\n        async (persona?: PersonaInformation, username?: string, verifiedCallback?: () => void | Promise<void>) => {\n            if (!platform || !persona || !username) return\n\n            const message = await createAndSignMessage(persona, username)\n            if (!message) return\n            const { signature, payload } = message\n\n            const postContent = payload.postContent.replace('%SIG_BASE64%', toBase64(fromHex(signature)))\n            const postId = await activatedSiteAdaptorUI!.automation.endpoint?.publishPost?.([postContent], {\n                reason: 'verify',\n            })\n            if (!postId) throw new Error('Failed to verify.')\n            if (persona.identifier.publicKeyAsHex) {\n                await NextIDProof.bindProof(\n                    payload.uuid,\n                    persona.identifier.publicKeyAsHex,\n                    NextIDAction.Create,\n                    platform,\n                    username,\n                    payload.createdAt,\n                    {\n                        signature,\n                        proofLocation: postId,\n                    },\n                )\n            }\n\n            const isBound = await NextIDProof.queryIsBound(persona.identifier.publicKeyAsHex, platform, username)\n            if (!isBound) throw new Error('Failed to verify.')\n\n            MaskMessages.events.ownProofChanged.sendToAll()\n            await verifiedCallback?.()\n        },\n        [postMessage, platform],\n    )\n}\n","import { memo } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { IconButton, Box, type BoxProps } from '@mui/material'\nimport { Icons } from '@masknet/icons'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        container: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: 400,\n            height: 400,\n            position: 'fixed',\n            top: 24,\n            right: 24,\n            borderRadius: 12,\n            backgroundColor: theme.palette.maskColor.bottom,\n            boxShadow: theme.palette.maskColor.bottomBg,\n            color: theme.palette.maskColor.main,\n            overflow: 'auto',\n            overflowX: 'hidden',\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        title: {\n            flexShrink: 0,\n            background: theme.palette.maskColor.modalTitleBg,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            padding: theme.spacing(2),\n            borderBottom: `1px solid ${theme.palette.maskColor.line}`,\n        },\n        closeButton: {\n            padding: 0,\n        },\n    }\n})\n\nexport interface BindingDialogProps extends BoxProps {\n    onClose?(): void\n}\n\nexport const BindingDialog = memo<BindingDialogProps>(function BindingDialog({\n    className,\n    onClose,\n    children,\n    ...rest\n}) {\n    const { classes, cx } = useStyles()\n    return (\n        <Box role=\"dialog\" {...rest} className={cx(classes.container, className)}>\n            <Box className={classes.title}>\n                <Icons.Mask width={100} height={28.8} />\n                <IconButton size=\"large\" disableTouchRipple classes={{ root: classes.closeButton }} onClick={onClose}>\n                    <Icons.Close size={30} />\n                </IconButton>\n            </Box>\n            {children}\n        </Box>\n    )\n})\n","import { Icons } from '@masknet/icons'\nimport { LoadingStatus, SOCIAL_MEDIA_ROUND_ICON_MAPPING } from '@masknet/shared'\nimport { SOCIAL_MEDIA_NAME } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Button, Typography } from '@mui/material'\nimport { memo } from 'react'\nimport { Trans } from 'react-i18next'\nimport { activatedSiteAdaptorUI } from '../../../site-adaptor-infra/ui.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { BindingDialog, type BindingDialogProps } from './BindingDialog.js'\nimport { SetupGuideContext } from './SetupGuideContext.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        main: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            padding: theme.spacing(3),\n            height: '100%',\n            boxSizing: 'border-box',\n        },\n        icon: {\n            marginTop: theme.spacing(3),\n        },\n        title: {\n            fontSize: 18,\n            margin: theme.spacing(1.5),\n            fontWeight: 700,\n        },\n        loadingBox: {\n            width: 320,\n            height: 130,\n            padding: theme.spacing(2),\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        text: {\n            fontSize: 16,\n            textAlign: 'center',\n        },\n    }\n})\n\nfunction Frame({ children, ...rest }: BindingDialogProps) {\n    const { classes } = useStyles()\n    const t = useMaskSharedTrans()\n    const site = activatedSiteAdaptorUI!.networkIdentifier\n    const Icon = SOCIAL_MEDIA_ROUND_ICON_MAPPING[site] || Icons.Globe\n    return (\n        <BindingDialog {...rest}>\n            <div className={classes.main}>\n                <Icon size={48} className={classes.icon} />\n                <Typography className={classes.title}>{t.connect_persona()}</Typography>\n                {children}\n            </div>\n        </BindingDialog>\n    )\n}\n\ninterface Props extends BindingDialogProps {\n    currentUserId?: string\n    expectAccount: string\n    /** Loading current userId */\n    loading?: boolean\n}\n\nexport const AccountConnectStatus = memo<Props>(function AccountConnectStatus({\n    expectAccount,\n    currentUserId,\n    loading,\n    ...rest\n}) {\n    const { classes } = useStyles()\n    const t = useMaskSharedTrans()\n    const site = activatedSiteAdaptorUI!.networkIdentifier\n    const siteName = SOCIAL_MEDIA_NAME[site] || ''\n\n    const { connected } = SetupGuideContext.useContainer()\n\n    if (loading)\n        return (\n            <Frame {...rest}>\n                <div className={classes.loadingBox}>\n                    <LoadingStatus omitText />\n                </div>\n            </Frame>\n        )\n\n    if (connected)\n        return (\n            <Frame>\n                <Typography className={classes.text}>\n                    <Trans\n                        i18nKey=\"connected_already\"\n                        values={{\n                            account: currentUserId,\n                        }}\n                        components={{\n                            bold: <b />,\n                        }}\n                    />\n                </Typography>\n                <Typography className={classes.text} mt=\"1.5em\">\n                    {t.switch_for_more_connections()}\n                </Typography>\n                <Box mt=\"auto\" width=\"100%\">\n                    <Button fullWidth onClick={rest.onClose}>\n                        {t.done()}\n                    </Button>\n                </Box>\n            </Frame>\n        )\n\n    if (currentUserId)\n        return (\n            <Frame {...rest}>\n                <Typography className={classes.text}>{t.not_current_account()}</Typography>\n                <Typography className={classes.text} mt=\"1.5em\">\n                    <Trans\n                        i18nKey=\"request_to_switch_account\"\n                        values={{\n                            account: expectAccount,\n                        }}\n                        components={{\n                            bold: <b />,\n                        }}\n                    />\n                </Typography>\n            </Frame>\n        )\n\n    return (\n        <Frame {...rest}>\n            <Typography className={classes.text}>{t.request_to_login({ siteName })}</Typography>\n        </Frame>\n    )\n})\n","import { EnhanceableSite } from '@masknet/shared-base'\nimport { EventID } from '@masknet/web3-telemetry/types'\n\nexport const EventMap: Record<EnhanceableSite, EventID> = {\n    [EnhanceableSite.Twitter]: EventID.EntryPopupSocialAccountConnectTwitter,\n    [EnhanceableSite.Facebook]: EventID.EntryPopupSocialAccountConnectFb,\n    [EnhanceableSite.Minds]: EventID.EntryPopupSocialAccountConnectMinds,\n    [EnhanceableSite.Instagram]: EventID.EntryPopupSocialAccountConnectIns,\n    [EnhanceableSite.Localhost]: EventID.Debug,\n    [EnhanceableSite.App]: EventID.Debug,\n    [EnhanceableSite.OpenSea]: EventID.Debug,\n    [EnhanceableSite.Mirror]: EventID.Debug,\n}\n\nexport const DisconnectEventMap: Record<string, EventID> = {\n    [EnhanceableSite.Twitter]: EventID.EntryPopupSocialAccountDisconnectTwitter,\n    [EnhanceableSite.Facebook]: EventID.EntryPopupSocialAccountDisconnectFb,\n    [EnhanceableSite.Minds]: EventID.EntryPopupSocialAccountDisconnectMinds,\n    [EnhanceableSite.Instagram]: EventID.EntryPopupSocialAccountDisconnectIns,\n}\n","import { MaskMessages, ProfileIdentifier } from '@masknet/shared-base'\nimport { queryClient } from '@masknet/shared-base-ui'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventType } from '@masknet/web3-telemetry/types'\nimport { useAsync } from 'react-use'\nimport Services from '../../../../../shared-ui/service.js'\nimport { EventMap } from '../../../../../shared/definitions/event.js'\nimport { activatedSiteAdaptorUI } from '../../../../site-adaptor-infra/ui.js'\nimport { SetupGuideContext } from '../SetupGuideContext.js'\n\nexport function useConnectPersona() {\n    const { userId, myIdentity, personaInfo, setIsFirstConnection, connected } = SetupGuideContext.useContainer()\n    const site = activatedSiteAdaptorUI!.networkIdentifier\n    const persona = personaInfo?.identifier\n    return useAsync(async () => {\n        if (!persona || !userId || connected) return\n        const id = ProfileIdentifier.of(site, userId)\n        if (!id.isSome()) return\n        // attach persona with site profile\n        await Services.Identity.attachProfile(id.value, persona, {\n            connectionConfirmState: 'confirmed',\n        })\n\n        setIsFirstConnection(true)\n        if (myIdentity.avatar) {\n            await Services.Identity.updateProfileInfo(id.value, {\n                avatarURL: myIdentity.avatar,\n            })\n        }\n        // auto-finish the setup process\n        if (!personaInfo) throw new Error('invalid persona')\n        await Services.Identity.setupPersona(personaInfo?.identifier)\n        queryClient.invalidateQueries(['query-persona-info', persona.publicKeyAsHex])\n        MaskMessages.events.ownPersonaChanged.sendToAll()\n\n        Telemetry.captureEvent(EventType.Access, EventMap[activatedSiteAdaptorUI!.networkIdentifier])\n    }, [site, persona, userId, myIdentity.avatar, connected])\n}\n","import { useCallback } from 'react'\nimport { useCustomSnackbar } from '@masknet/theme'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\nimport { activatedSiteAdaptorUI } from '../../../../site-adaptor-infra/ui.js'\n\nexport function useNotifyConnected() {\n    const t = useMaskSharedTrans()\n    const { showSnackbar } = useCustomSnackbar()\n    const { configuration } = activatedSiteAdaptorUI!\n    const platform = configuration.nextIDConfig?.platform\n    const notify = useCallback(() => {\n        if (!platform) return\n        showSnackbar(t.setup_guide_connected_title(), {\n            variant: 'success',\n            message: t.setup_guide_connected_description(),\n        })\n    }, [t, showSnackbar])\n    return notify\n}\n","import { NextIDAction, SignType, fromHex, toBase64, type PersonaIdentifier } from '@masknet/shared-base'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { useQuery } from '@tanstack/react-query'\nimport Services from '../../../../../shared-ui/service.js'\nimport { activatedSiteAdaptorUI } from '../../../../site-adaptor-infra/ui.js'\n\nexport function usePostContent(personaIdentifier: PersonaIdentifier | undefined, userId: string) {\n    const platform = activatedSiteAdaptorUI!.configuration.nextIDConfig?.platform\n\n    return useQuery({\n        queryKey: ['create-persona-payload', personaIdentifier?.publicKeyAsHex, userId, platform],\n        queryFn: async () => {\n            if (!personaIdentifier?.publicKeyAsHex || !platform) return null\n            const payload = await NextIDProof.createPersonaPayload(\n                personaIdentifier.publicKeyAsHex,\n                NextIDAction.Create,\n                userId,\n                platform,\n            )\n            if (!payload) throw new Error('Failed to create persona payload.')\n\n            const signature = await Services.Identity.signWithPersona(\n                SignType.Message,\n                payload.signPayload,\n                personaIdentifier,\n                location.origin,\n                true,\n            )\n            return payload.postContent.replace('%SIG_BASE64%', toBase64(fromHex(signature)))\n        },\n    })\n}\n","import { Icons } from '@masknet/icons'\nimport { delay } from '@masknet/kit'\nimport { EmojiAvatar } from '@masknet/shared'\nimport { currentSetupGuideStatus, formatPersonaFingerprint } from '@masknet/shared-base'\nimport { queryClient } from '@masknet/shared-base-ui'\nimport { ActionButton, MaskColorVar, MaskTextField, makeStyles } from '@masknet/theme'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventID, EventType } from '@masknet/web3-telemetry/types'\nimport { Box, Link, Skeleton, Typography } from '@mui/material'\nimport { useQuery } from '@tanstack/react-query'\nimport { useCallback, useMemo, useState } from 'react'\nimport { Trans } from 'react-i18next'\nimport { useAsyncFn } from 'react-use'\nimport Services from '../../../../shared-ui/service.js'\nimport { activatedSiteAdaptorUI } from '../../../site-adaptor-infra/ui.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useNextIDVerify } from '../../DataSource/useNextIDVerify.js'\nimport { AccountConnectStatus } from './AccountConnectStatus.js'\nimport { BindingDialog, type BindingDialogProps } from './BindingDialog.js'\nimport { SetupGuideContext } from './SetupGuideContext.js'\nimport { useConnectPersona } from './hooks/useConnectPersona.js'\nimport { useNotifyConnected } from './hooks/useNotifyConnected.js'\nimport { usePostContent } from './hooks/usePostContent.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        overflow: 'auto',\n    },\n    main: {\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    avatar: {\n        display: 'block',\n        width: 36,\n        height: 36,\n        borderRadius: '50%',\n        border: `solid 1px ${MaskColorVar.border}`,\n        '&.connected': {\n            borderColor: MaskColorVar.success,\n        },\n    },\n    button: {\n        minWidth: 150,\n        height: 40,\n        minHeight: 40,\n        marginLeft: 0,\n        marginTop: 0,\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n        },\n        fontSize: 14,\n        wordBreak: 'keep-all',\n        '&,&:hover': {\n            color: `${MaskColorVar.twitterButtonText} !important`,\n            background: `${MaskColorVar.twitterButton} !important`,\n        },\n    },\n    tip: {\n        fontSize: 12,\n        fontWeight: 500,\n        lineHeight: '16px',\n        color: theme.palette.maskColor.second,\n        marginTop: theme.spacing(2),\n    },\n    connection: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: theme.spacing(1.5),\n        gap: theme.spacing(1.5),\n        color: theme.palette.maskColor.main,\n    },\n    connectItem: {\n        flex: 1,\n        width: 148,\n        flexShrink: 0,\n        display: 'flex',\n        alignItems: 'center',\n        gap: theme.spacing(0.5),\n    },\n    input: {\n        width: 136,\n    },\n    postContentTitle: {\n        fontSize: 12,\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n    },\n    postContent: {\n        color: theme.palette.maskColor.main,\n        fontSize: 12,\n        backgroundColor: theme.palette.maskColor.bg,\n        borderRadius: 12,\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1.5),\n        whiteSpace: 'pre-line',\n        wordBreak: 'break-all',\n    },\n    text: {\n        fontSize: 12,\n        fontWeight: 400,\n        color: theme.palette.maskColor.second,\n    },\n    info: {\n        overflow: 'auto',\n    },\n    name: {\n        display: 'block',\n        fontSize: 14,\n        fontWeight: 500,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n    },\n    second: {\n        color: theme.palette.maskColor.second,\n        fontSize: 12,\n        display: 'block',\n        alignItems: 'center',\n        marginTop: theme.spacing(0.5),\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n    },\n    linkIcon: {\n        fontSize: 0,\n        color: theme.palette.maskColor.second,\n        marginLeft: 2,\n    },\n    send: {\n        marginRight: theme.spacing(1),\n    },\n    footer: {\n        borderRadius: 12,\n        backdropFilter: 'blur(8px)',\n        boxShadow: theme.palette.maskColor.bottomBg,\n        padding: theme.spacing(2),\n        marginTop: 'auto',\n    },\n}))\n\ninterface VerifyNextIDProps extends BindingDialogProps {}\n\nexport function VerifyNextID({ onClose }: VerifyNextIDProps) {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles()\n\n    const { userId, myIdentity, personaInfo, checkingVerified, verified, loadingCurrentUserId, currentUserId } =\n        SetupGuideContext.useContainer()\n    const { nickname: username, avatar } = myIdentity\n    const personaName = personaInfo?.nickname\n    const personaIdentifier = personaInfo?.identifier\n\n    const [customUserId, setCustomUserId] = useState('')\n    const { data: post, isLoading: creatingPostContent } = usePostContent(personaIdentifier, userId || customUserId)\n    const { configuration, networkIdentifier } = activatedSiteAdaptorUI!\n    const nextIdPlatform = configuration.nextIDConfig?.platform\n\n    const { data: personaAvatar } = useQuery({\n        queryKey: ['my-own-persona-info'],\n        queryFn: () => Services.Identity.queryOwnedPersonaInformation(false),\n        select(data) {\n            const pubkey = personaInfo?.identifier.publicKeyAsHex\n            const info = data.find((x) => x.identifier.publicKeyAsHex === pubkey)\n            return info?.avatar\n        },\n    })\n\n    const disableVerify = useMemo(() => {\n        return !myIdentity?.identifier || !userId ? false : myIdentity.identifier.userId !== userId\n    }, [myIdentity, userId])\n\n    // Show connect result for the first time.\n    const { loading: connecting } = useConnectPersona()\n\n    const [, handleVerifyNextID] = useNextIDVerify()\n    const [{ loading: verifying }, onVerify] = useAsyncFn(async () => {\n        if (!userId) return\n        if (!personaInfo) return\n        if (!nextIdPlatform) return\n\n        const isBound = await NextIDProof.queryIsBound(personaInfo.identifier.publicKeyAsHex, nextIdPlatform, userId)\n        if (!isBound) {\n            await handleVerifyNextID(personaInfo, userId)\n            Telemetry.captureEvent(EventType.Access, EventID.EntryPopupSocialAccountVerifyTwitter)\n        }\n        await queryClient.invalidateQueries(['next-id', 'bindings-by-persona'])\n        await delay(1000)\n    }, [userId, personaInfo])\n\n    const notify = useNotifyConnected()\n\n    const onConfirm = useCallback(() => {\n        currentSetupGuideStatus[networkIdentifier].value = ''\n        notify()\n    }, [nextIdPlatform, notify])\n\n    // Need to verify for next id platform\n    if (currentUserId !== userId || loadingCurrentUserId || connecting) {\n        return (\n            <AccountConnectStatus\n                expectAccount={userId}\n                currentUserId={currentUserId}\n                loading={loadingCurrentUserId || connecting}\n                onClose={onClose}\n            />\n        )\n    }\n\n    if (!personaIdentifier) return null\n\n    const disabled = !(userId || customUserId) || !personaName || disableVerify || checkingVerified\n\n    return (\n        <BindingDialog onClose={onClose}>\n            <div className={classes.body}>\n                <Box p={2} overflow=\"auto\" className={classes.main}>\n                    <Box className={classes.connection}>\n                        {userId ? (\n                            <Box className={classes.connectItem}>\n                                <Box width={36}>\n                                    <img src={avatar} className={cx(classes.avatar, 'connected')} />\n                                </Box>\n                                <Box className={classes.info}>\n                                    <Typography className={classes.name}>{username}</Typography>\n                                    <Typography className={classes.second}>@{userId}</Typography>\n                                </Box>\n                            </Box>\n                        ) : (\n                            <Box className={classes.connectItem}>\n                                <Icons.Email size={24} />\n                                <Box ml={0.5}>\n                                    <MaskTextField\n                                        placeholder=\"handle\"\n                                        className={classes.input}\n                                        value={customUserId}\n                                        onChange={(e) => {\n                                            setCustomUserId(e.target.value.trim())\n                                        }}\n                                    />\n                                </Box>\n                            </Box>\n                        )}\n                        <Icons.Connect size={24} />\n                        <Box className={classes.connectItem}>\n                            {personaAvatar ? (\n                                <img src={personaAvatar} className={cx(classes.avatar, 'connected')} />\n                            ) : (\n                                <EmojiAvatar value={personaIdentifier.publicKeyAsHex} />\n                            )}\n                            <Box className={classes.info}>\n                                <Typography className={classes.name}>{personaName}</Typography>\n                                <Typography className={classes.second} component=\"div\">\n                                    {formatPersonaFingerprint(personaIdentifier.rawPublicKey, 4)}\n                                    <Link\n                                        className={classes.linkIcon}\n                                        href={`https://web3.bio/${personaIdentifier.publicKeyAsHex}`}\n                                        target=\"_blank\">\n                                        <Icons.LinkOut size={12} />\n                                    </Link>\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Box>\n                    {!nextIdPlatform || verified ? (\n                        <Typography className={classes.text}>\n                            <Trans\n                                i18nKey={nextIdPlatform ? 'send_post_successfully' : 'connect_successfully'}\n                                components={{ br: <br /> }}\n                            />\n                        </Typography>\n                    ) : creatingPostContent ? (\n                        <>\n                            <Typography className={classes.postContentTitle}>{t.setup_guide_post_content()}</Typography>\n                            <Typography className={classes.postContent}>\n                                <Skeleton variant=\"text\" />\n                                <Skeleton variant=\"text\" />\n                                <Skeleton variant=\"text\" />\n                                <Skeleton variant=\"text\" width=\"50%\" />\n                                <Skeleton variant=\"text\" />\n                                <Skeleton variant=\"text\" width=\"50%\" />\n                            </Typography>\n                            <Typography className={classes.tip} component=\"div\">\n                                {t.setup_guide_verify_tip()}\n                            </Typography>\n                        </>\n                    ) : post ? (\n                        <>\n                            <Typography className={classes.postContentTitle}>{t.setup_guide_post_content()}</Typography>\n                            <Typography className={classes.postContent}>{post}</Typography>\n                            <Typography className={classes.tip} component=\"div\">\n                                {t.setup_guide_verify_tip()}\n                            </Typography>\n                        </>\n                    ) : null}\n                </Box>\n\n                <Box className={classes.footer}>\n                    {!nextIdPlatform || (nextIdPlatform && verified) ? (\n                        <ActionButton\n                            className={classes.button}\n                            fullWidth\n                            variant=\"contained\"\n                            disabled={disabled}\n                            onClick={onConfirm}>\n                            {t.ok()}\n                        </ActionButton>\n                    ) : (\n                        <ActionButton\n                            className={classes.button}\n                            fullWidth\n                            variant=\"contained\"\n                            disabled={disabled}\n                            loading={verifying}\n                            onClick={onVerify}>\n                            <Icons.Send size={18} className={classes.send} />\n                            {t.send()}\n                        </ActionButton>\n                    )}\n                </Box>\n            </div>\n        </BindingDialog>\n    )\n}\n","import { AccountConnectStatus } from './AccountConnectStatus.js'\nimport type { BindingDialogProps } from './BindingDialog.js'\nimport { SetupGuideContext } from './SetupGuideContext.js'\n\nexport function CheckConnection({ onClose }: BindingDialogProps) {\n    const { userId, loadingCurrentUserId, currentUserId } = SetupGuideContext.useContainer()\n\n    return (\n        <AccountConnectStatus\n            expectAccount={userId}\n            currentUserId={currentUserId}\n            loading={loadingCurrentUserId}\n            onClose={onClose}\n        />\n    )\n}\n","import {\n    EncryptionTargetType,\n    EnhanceableSite,\n    SetupGuideStep,\n    currentSetupGuideStatus,\n    userGuideFinished,\n    userGuideStatus,\n    userPinExtension,\n    type PersonaIdentifier,\n} from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { makeTypedMessageText } from '@masknet/typed-message'\nimport { memo, useCallback } from 'react'\nimport { activatedSiteAdaptorUI } from '../../../site-adaptor-infra/index.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { PinExtension } from './PinExtension.js'\nimport { SetupGuideContext } from './SetupGuideContext.js'\nimport { VerifyNextID } from './VerifyNextID.js'\nimport { CheckConnection } from './CheckConnection.js'\n\n// #region setup guide ui\n\nfunction SetupGuideUI() {\n    const t = useMaskSharedTrans()\n\n    const { step } = SetupGuideContext.useContainer()\n    const { networkIdentifier } = activatedSiteAdaptorUI!\n\n    const onClose = useCallback(() => {\n        currentSetupGuideStatus[networkIdentifier].value = ''\n        userPinExtension.value = true\n    }, [])\n\n    const onCreate = useCallback(() => {\n        let content = t.setup_guide_say_hello_content()\n        if (networkIdentifier === EnhanceableSite.Twitter) {\n            content += t.setup_guide_say_hello_follow({ account: '@realMaskNetwork' })\n        }\n\n        activatedSiteAdaptorUI!.automation.maskCompositionDialog?.open?.(makeTypedMessageText(content), {\n            target: EncryptionTargetType.Public,\n        })\n    }, [t])\n\n    const onPinClose = useCallback(() => {\n        userPinExtension.value = true\n        onClose()\n    }, [])\n\n    const onPinDone = useCallback(() => {\n        const network = networkIdentifier\n        if (!userPinExtension.value) {\n            userPinExtension.value = true\n        }\n        if (network === EnhanceableSite.Twitter && !userGuideFinished[network].value) {\n            userGuideStatus[network].value = '1'\n        } else {\n            onCreate()\n        }\n    }, [onCreate])\n\n    switch (step) {\n        case SetupGuideStep.CheckConnection:\n            return <CheckConnection onClose={onClose} />\n        case SetupGuideStep.VerifyOnNextID:\n            return <VerifyNextID onClose={onClose} />\n        case SetupGuideStep.PinExtension:\n            return <PinExtension onDone={onPinDone} onClose={onPinClose} />\n        default:\n            return null\n    }\n}\n// #endregion\n\n// #region setup guide\nconst useSetupGuideStyles = makeStyles()({\n    root: {\n        position: 'fixed',\n        zIndex: 9999,\n        maxWidth: 550,\n        top: '2em',\n        right: '2em',\n    },\n})\n\ninterface SetupGuideProps {\n    persona: PersonaIdentifier\n}\n\nexport const SetupGuide = memo(function SetupGuide({ persona }: SetupGuideProps) {\n    const { classes } = useSetupGuideStyles()\n\n    return (\n        <div className={classes.root}>\n            <SetupGuideContext.Provider initialState={persona}>\n                <SetupGuideUI />\n            </SetupGuideContext.Provider>\n        </div>\n    )\n})\n// #endregion\n","import type { PersonaIdentifier } from '@masknet/shared-base'\nimport { attachReactTreeWithoutContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { SetupGuide } from '../../../components/InjectedComponents/SetupGuide/index.js'\n\nexport function createTaskStartSetupGuideDefault() {\n    return (signal: AbortSignal, persona: PersonaIdentifier) => {\n        attachReactTreeWithoutContainer('setup-guide', <SetupGuide persona={persona} />, signal)\n    }\n}\n","import type { Option } from 'ts-results-es'\nimport { collectTwitterEmoji } from './collectTwitterEmoji.js'\n\ninterface CollectNodeTextOptions {\n    onHTMLAnchorElement?(node: HTMLAnchorElement): Option<string>\n}\n\nexport function collectNodeText(node: HTMLElement | null | undefined, options: CollectNodeTextOptions = {}): string {\n    if (!node) return ''\n    if (!node.querySelector('a, img')) return node.innerText\n    return [...node.childNodes]\n        .map((each) => {\n            if (each.nodeType === document.TEXT_NODE) return (each as Text).nodeValue || ''\n            if (each instanceof HTMLAnchorElement) {\n                const result = options.onHTMLAnchorElement?.(each)\n                if (result?.isSome()) return result.value\n                const href = each.getAttribute('href')\n                return [href, each.innerText].join(' ')\n            }\n            if (each instanceof HTMLImageElement) {\n                const src = each.getAttribute('src')\n                const alt = each.getAttribute('alt') ?? ''\n                const matched = src?.match(/emoji\\/v2\\/svg\\/([\\w-]+)\\.svg/)?.[1]\n                if (matched) return collectTwitterEmoji(matched.split('-').map((x) => Number.parseInt(x, 16))) || alt\n                return alt\n            }\n            if (each instanceof HTMLElement) return collectNodeText(each, options)\n            return ''\n        })\n        .join('')\n}\n","export function collectTwitterEmoji(points: readonly number[]) {\n    if (points.length === 0) return ''\n    if (points[0] < 35 || points[0] > 57) return String.fromCodePoint(...points)\n    if (points.includes(65039)) return String.fromCodePoint(...points)\n    return String.fromCodePoint(points[0], 65039, ...points.slice(1))\n}\n","import { memo, type PropsWithChildren, useCallback } from 'react'\nimport { Typography, Link as MaterialLink } from '@mui/material'\nimport type { RenderFragmentsContextType } from '@masknet/typed-message-react'\nimport { useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\n\nexport const Container = memo(function Container(props: PropsWithChildren<{}>) {\n    return (\n        <Typography color=\"textPrimary\" fontSize=\"inherit\">\n            {props.children}\n        </Typography>\n    )\n})\n\nexport const Link = memo(function Anchor(props: RenderFragmentsContextType.LinkProps) {\n    const text = props.children.startsWith('https://mask.io') ? 'Mask.io' : props.children\n    return (\n        <MaterialLink href={props.href} fontSize=\"inherit\">\n            {text}\n            {props.suggestedPostImage}\n        </MaterialLink>\n    )\n})\n\nexport function useTagEnhancer(kind: 'hash' | 'cash', content: string) {\n    const plugin = useActivatedPluginsSiteAdaptor('any')\n        .filter((x) => x.enhanceTag)\n        .at(0)\n\n    const onClick: React.EventHandler<React.MouseEvent<HTMLAnchorElement>> = useCallback(\n        (event) => {\n            plugin?.enhanceTag?.onClick?.(kind, content, event)\n        },\n        [plugin],\n    )\n    const onMouseEnter: React.EventHandler<React.MouseEvent<HTMLAnchorElement>> = useCallback(\n        (event) => {\n            const cancel = plugin?.enhanceTag?.onHover?.(kind, content, event)\n            event.currentTarget.addEventListener('mouseleave', () => cancel?.(), { once: true })\n        },\n        [plugin],\n    )\n    return { onClick, onMouseEnter, hasMatch: !!plugin }\n}\n","import { memo, Fragment, createElement, useContext } from 'react'\nimport { RenderFragmentsContext, type RenderFragmentsContextType, DefaultRenderFragments } from './RenderFragments.js'\nimport type { TypedMessageAnchor } from '@masknet/typed-message'\nimport { parseLink } from '@masknet/typed-message/internal'\n\n/** @internal */\ninterface RenderTextProps {\n    text: string\n    style?: React.CSSProperties\n}\n\n/** @internal */\nexport const RenderTextFragment = memo(function RenderText(props: RenderTextProps) {\n    const { Text = DefaultRenderFragments.Text } = useContext(RenderFragmentsContext)\n    return createElement(Fragment, {}, ...parseText(props.text, props.style, Text))\n})\n\n/** @internal */\nexport const RenderLinkFragment = memo(function RenderLink(\n    props: Pick<TypedMessageAnchor, 'category'> & RenderFragmentsContextType.LinkProps,\n) {\n    const { children, href, category, suggestedPostImage, style } = props\n    const context = useContext(RenderFragmentsContext)\n    const {\n        Text = DefaultRenderFragments.Text,\n        Link = DefaultRenderFragments.Link,\n        AtLink = Text,\n        CashLink = Text,\n        HashLink = Text,\n    } = context\n    const sharedProps = { style, children, suggestedPostImage }\n    if (category === 'cash') return <CashLink {...sharedProps} />\n    if (category === 'hash') return <HashLink {...sharedProps} />\n    if (category === 'user') return <AtLink {...sharedProps} />\n    return <Link {...sharedProps} href={href} />\n})\n\nfunction parseText(\n    string: string,\n    style: React.CSSProperties | undefined,\n    Text: NonNullable<RenderFragmentsContextType['Text']>,\n) {\n    const links = parseLink(string).flatMap((frag, index) => {\n        if (frag.type === 'text') {\n            return sliceString(frag.content).map((text, i) =>\n                text === '\\n' ? (\n                    <br style={style} key={`${index} of ${i}`} />\n                ) : (\n                    <Text children={text} style={style} key={`${index} of ${i}`} />\n                ),\n            )\n        }\n        if (frag.category === 'normal' && !frag.content.match(/^https?:\\/\\//gi)) frag.content = 'http://' + frag.content\n        return (\n            <RenderLinkFragment\n                style={style}\n                category={frag.category}\n                href={frag.content}\n                children={frag.content}\n                suggestedPostImage={undefined}\n            />\n        )\n    })\n    return links\n}\n\nfunction sliceString(x: string): string[] {\n    const result: string[] = []\n\n    let index = x.indexOf('\\n')\n\n    if (index === -1) return [x]\n    let pos = 0\n    while (index !== -1) {\n        result.push(x.slice(pos, index), '\\n')\n        pos = index + 1\n        index = x.indexOf('\\n', pos)\n    }\n    result.push(x.slice(pos))\n    return result.filter(Boolean)\n}\n","import { useContext } from 'react'\nimport { RenderFragmentsContext } from './utils/RenderFragments.js'\nimport type { TypedMessage } from '@masknet/typed-message'\n\nexport interface MetadataRenderProps {\n    metadata: TypedMessage['meta']\n    message: TypedMessage\n}\nexport function useMetadataRender(message: TypedMessage) {\n    const { Metadata } = useContext(RenderFragmentsContext)\n    if (!Metadata || !message.meta) return null\n    return <Metadata metadata={message.meta} message={message} />\n}\n","import { memo } from 'react'\nimport { type TypedMessageText, unstable_STYLE_META } from '@masknet/typed-message'\nimport { RenderTextFragment } from '../utils/renderText.js'\nimport { useMetadataRender } from '../MetadataRender.js'\n\nexport const TypedMessageTextRender = memo(function TypedMessageTextRender(props: TypedMessageText) {\n    const { content } = props\n    return (\n        <>\n            <RenderTextFragment style={Object(props.meta?.get(unstable_STYLE_META))} text={content} />\n            {useMetadataRender(props)}\n        </>\n    )\n})\n","import { memo, useContext, useEffect, useState } from 'react'\nimport { unstable_STYLE_META, type TypedMessageImage } from '@masknet/typed-message'\nimport { useMetadataRender } from '../MetadataRender.js'\nimport { RenderFragmentsContext, DefaultRenderFragments } from '../utils/RenderFragments.js'\n\nexport const TypedMessageImageRender = memo(function TypedMessageImageRender(props: TypedMessageImage) {\n    const { Image = DefaultRenderFragments.Image } = useContext(RenderFragmentsContext)\n    const { image, width, height } = props\n    const [blobSrc, setBlobSrc] = useState<string | null>(null)\n\n    useEffect(() => {\n        if (typeof image === 'string') return\n        const src = URL.createObjectURL(image)\n        setBlobSrc(src)\n        return () => {\n            setBlobSrc(null)\n            URL.revokeObjectURL(src)\n        }\n    }, [image])\n\n    const meta = useMetadataRender(props)\n    const finalSrc = blobSrc || image\n    if (typeof finalSrc !== 'string') return null\n\n    return (\n        <>\n            <Image style={Object(props.meta?.get(unstable_STYLE_META))} src={finalSrc} width={width} height={height} />\n            {meta}\n        </>\n    )\n})\n","/** @internal */\nexport function hasCircular(message: object) {\n    try {\n        JSON.stringify(message)\n        return false\n    } catch (err) {\n        console.warn(\n            '[@masknet/typed-message] TypedMessage',\n            message,\n            'may contains circular structure. Skip rendering.',\n        )\n        return true\n    }\n}\n","import { memo, useMemo } from 'react'\nimport { unstable_STYLE_META, type TypedMessageTuple } from '@masknet/typed-message'\nimport { hasCircular } from '../utils/circularDetect.js'\nimport { TypedMessageRenderInline } from '../Entry.js'\nimport { useMetadataRender } from '../MetadataRender.js'\n\nexport const TypedMessageTupleRender = memo(function TypedMessageTupleRender(props: TypedMessageTuple) {\n    const meta = useMetadataRender(props)\n    if (useMemo(() => hasCircular(props.items), [props.items])) return null\n\n    return (\n        <span style={Object(props.meta?.get(unstable_STYLE_META))}>\n            {props.items.map((message, index) => (\n                <TypedMessageRenderInline key={index} {...props} message={message} />\n            ))}\n            {meta}\n        </span>\n    )\n})\n","import * as React from 'react'\nimport { memo, Suspense, useEffect, useState } from 'react'\nimport type { TypedMessage, TypedMessagePromise } from '@masknet/typed-message'\nimport { TypedMessageRenderInline } from '../Entry.js'\nimport { useTransformedValue } from '../utils/TransformContext.js'\n\nexport const TypedMessagePromiseRender = memo(\n    'use' in React\n        ? function TypedMessagePromiseRender(props: TypedMessagePromise) {\n              const { promise, alt } = props\n              return (\n                  <Suspense fallback={alt ? <TypedMessageRenderInline message={alt} /> : null}>\n                      <Await_new promise={promise} />\n                  </Suspense>\n              )\n          }\n        : function TypedMessagePromiseRender(props: TypedMessagePromise) {\n              const { promise, alt } = props\n\n              const _ = useState(0)[1]\n              const rerender = () => _(Math.random())\n\n              useEffect(() => {\n                  promise.then(rerender)\n              }, [promise, _])\n\n              const transformedValue = useTransformedValue('value' in promise ? promise.value : undefined)\n              if (transformedValue) return <TypedMessageRenderInline message={transformedValue} />\n\n              return (\n                  <Suspense fallback={alt ? <TypedMessageRenderInline message={alt} /> : null}>\n                      <Await_old promise={promise} />\n                  </Suspense>\n              )\n          },\n)\n\nfunction Await_new({ promise }: { promise: Promise<TypedMessage> }): JSX.Element {\n    const resolved = Reflect.get(React, 'use')(promise)\n    const transformedValue = useTransformedValue(resolved)\n    return <TypedMessageRenderInline message={transformedValue} />\n}\n\nfunction Await_old({ promise }: { promise: Promise<TypedMessage> }): JSX.Element {\n    throw promise\n}\n","import { memo } from 'react'\nimport type { TypedMessageAnchor } from '@masknet/typed-message'\nimport { RenderLinkFragment } from '../utils/renderText.js'\n\nexport const TypedMessageAnchorRender = memo(function TypedMessageAnchorRender(props: TypedMessageAnchor) {\n    return (\n        <RenderLinkFragment\n            category={props.category}\n            children={props.content}\n            href={props.href}\n            suggestedPostImage={\n                typeof props.postImage?.image === 'string' ? (\n                    // TODO: support Blob image\n                    // Note: no need to add alt here because itself is a decorate image.\n                    <img\n                        src={props.postImage.image}\n                        // we use relative sizing here. ignore the original size\n                        style={{ height: '1.25em', marginLeft: '0.25em' }}\n                        alt=\"\"\n                    />\n                ) : null\n            }\n        />\n    )\n})\n","import type {\n    TypedMessage,\n    TypedMessageText,\n    TypedMessageImage,\n    TypedMessageUnknown,\n    TypedMessageAnchor,\n    TypedMessageTuple,\n    TypedMessagePromise,\n} from '@masknet/typed-message'\nimport { TypedMessageTextRender } from './Core/Text.js'\nimport { TypedMessageImageRender } from './Core/Image.js'\nimport { TypedMessageTupleRender } from './Core/Tuple.js'\nimport { TypedMessagePromiseRender } from './Core/Promise.js'\nimport { TypedMessageUnknownRender } from './Core/Unknown.js'\nimport { TypedMessageAnchorRender } from './Extension/Anchor.js'\n\nexport interface RenderConfig<T extends TypedMessage = TypedMessage> {\n    component: React.ComponentType<T>\n    priority: number\n    id: symbol\n}\n\nexport function createTypedMessageRenderRegistry() {\n    const registry = new Map<string, Map<symbol, RenderConfig<any>>>()\n    const event = new EventTarget()\n    let getterFunction: typeof getTypedMessageRender | undefined\n\n    function registerTypedMessageRender<T extends TypedMessage>(type: T['type'], config: RenderConfig<T>) {\n        if (!registry.has(type)) registry.set(type, new Map())\n        const map = registry.get(type)!\n\n        const id = config.id\n        map.set(id, config)\n        getterFunction = undefined\n        event.dispatchEvent(new Event('update'))\n        return () => {\n            map.delete(id)\n            getterFunction = undefined\n            event.dispatchEvent(new Event('update'))\n        }\n    }\n    function getTypedMessageRender<T extends TypedMessage>(type: T['type']): RenderConfig<T> | undefined {\n        return Array.from(registry.get(type)?.values() || []).sort((a, b) => b.priority - a.priority)[0]\n    }\n    const subscription = {\n        // generate a new function to make sure old !== new\n        getCurrentValue: () => (getterFunction ??= (type) => getTypedMessageRender(type)),\n        subscribe: (f: () => void) => {\n            event.addEventListener('update', f)\n            return () => event.removeEventListener('update', f)\n        },\n    }\n\n    registerTypedMessageRender<TypedMessageText>('text', {\n        component: TypedMessageTextRender,\n        id: Symbol('std.text'),\n        priority: 0,\n    })\n\n    registerTypedMessageRender<TypedMessageImage>('image', {\n        component: TypedMessageImageRender,\n        id: Symbol('std.image'),\n        priority: 0,\n    })\n\n    registerTypedMessageRender<TypedMessageUnknown>('unknown', {\n        component: TypedMessageUnknownRender,\n        id: Symbol('std.unknown'),\n        priority: 0,\n    })\n\n    registerTypedMessageRender<TypedMessageTuple>('tuple', {\n        component: TypedMessageTupleRender,\n        id: Symbol('std.tuple'),\n        priority: 0,\n    })\n\n    registerTypedMessageRender<TypedMessagePromise>('promise', {\n        component: TypedMessagePromiseRender,\n        id: Symbol('std.promise'),\n        priority: 0,\n    })\n\n    // Extension\n    registerTypedMessageRender<TypedMessageAnchor>('x-anchor', {\n        component: TypedMessageAnchorRender,\n        id: Symbol('std.anchor'),\n        priority: 0,\n    })\n\n    return {\n        registerTypedMessageRender,\n        getTypedMessageRender,\n        subscription,\n    }\n}\n","import { createTypedMessageRenderRegistry } from '@masknet/typed-message-react'\nexport const TypedMessageRenderRegistry = createTypedMessageRenderRegistry()\n","import { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport { emptyTransformationContext, type TransformationContext } from '@masknet/typed-message'\nimport {\n    RenderFragmentsContext,\n    type RenderFragmentsContextType,\n    type MetadataRenderProps,\n    RegistryContext,\n    TransformerProvider,\n    TransformationContextProvider,\n    TextResizeContext,\n    type TextResizer,\n} from '@masknet/typed-message-react'\nimport { TypedMessageRenderRegistry } from './registry.js'\nimport { Container, Link } from './Components/Text.js'\nimport { TypedMessageTransformers } from './transformer.js'\n\ninterface TypedMessageRenderContextProps extends React.PropsWithChildren<{}> {\n    context?: TransformationContext\n    metadataRender?: React.ComponentType<MetadataRenderProps>\n    renderFragments?: RenderFragmentsContextType\n    textResizer?: TextResizer | boolean\n}\n\nexport function TypedMessageRenderContext(props: TypedMessageRenderContextProps) {\n    const registry = useSubscription(TypedMessageRenderRegistry.subscription)\n    const transformerFunction = useSubscription(TypedMessageTransformers.subscription)\n    const Provider = useMemo((): RenderFragmentsContextType => {\n        return { Container, Link, Metadata: props.metadataRender, ...props.renderFragments }\n    }, [props.metadataRender, props.renderFragments])\n\n    return (\n        <TextResizeContext.Provider value={props.textResizer ?? true}>\n            {/* basic render fragments provider: Text, Link, Image and Metadata */}\n            <RenderFragmentsContext.Provider value={Provider}>\n                {/* transformer pipeline */}\n                <TransformerProvider.Provider value={transformerFunction}>\n                    {/* transformation context */}\n                    <TransformationContextProvider.Provider value={props.context || emptyTransformationContext}>\n                        {/* components provider */}\n                        <RegistryContext.Provider value={registry}>{props.children}</RegistryContext.Provider>\n                    </TransformationContextProvider.Provider>\n                </TransformerProvider.Provider>\n            </RenderFragmentsContext.Provider>\n        </TextResizeContext.Provider>\n    )\n}\n","import {\n    composeTransformers,\n    FlattenTypedMessage,\n    isTypedMessageAnchor,\n    isTypedMessageText,\n    makeTypedMessageAnchor,\n    makeTypedMessageText,\n    makeTypedMessageTuple,\n    ParseLinkTransformer,\n    type TypedMessage,\n    visitEachTypedMessageChild,\n    unstable_STYLE_META,\n} from '@masknet/typed-message'\n\nenum Order {\n    Flatten = 1000,\n    ParseLink = 900,\n    // MaskPayload = 800,\n    /** @deprecated */\n    PayloadReplacer = 700,\n    Plugins = 500,\n}\n/**\n * Message transformation order:\n *\n * parsed_message\n * |> flatten\n * |> parse links and tags (@user, #tag, $NAME)\n * |> Mask Payload parser (installed in Site Adaptor starts)\n * |> plugins\n */\nexport const TypedMessageTransformers = composeTransformers()\nexport const TypedMessagePluginTransformers = composeTransformers()\nTypedMessageTransformers.addTransformer(FlattenTypedMessage, Order.Flatten)\nTypedMessageTransformers.addTransformer(ParseLinkTransformer, Order.ParseLink)\nTypedMessageTransformers.addTransformer(TypedMessagePluginTransformers.subscription, Order.Plugins)\n\n// We will use MaskPayload transformer to replace it in the future PR.\nconst matcher = /^https?:\\/\\/mask(\\.io|book\\.com)/i\nconst textPayloadChar = /([\\w+/=|:])/iu\nconst emoji = '\\u{1F3BC}'\nTypedMessageTransformers.addTransformer(function visitor(message, context) {\n    if (isTypedMessageAnchor(message)) {\n        if (message.href && (matcher.test(message.href) || matcher.test(message.content))) {\n            return makeTypedMessageAnchor('normal', 'https://mask.io', 'Mask')\n        }\n    }\n\n    if (fbStyleTextPayloadReplace && isTypedMessageText(message) && message.content.includes(emoji)) {\n        const result: TypedMessage[] = []\n\n        const startFrom = message.content.indexOf(emoji)\n        if (startFrom !== 0) result.push(makeTypedMessageText(message.content.slice(0, startFrom)))\n\n        const pendingChar: string[] = []\n\n        let index = startFrom\n        while (index < message.content.length) {\n            const char = message.content[index]\n            if (char === '\\uD83C') {\n                if (pendingChar.length) {\n                    result.push(makeTypedMessageText(pendingChar.join('')))\n                    pendingChar.length = 0\n                }\n\n                index += 2 // unicode pair\n                // here we at the start of the payload char,\n                // then we should drop rest chars until it no longer matches the RegExp or we met \":||\".\n                while (message.content[index].match(textPayloadChar)) {\n                    index += 1\n                    if (\n                        message.content[index] === ':' &&\n                        message.content[index + 1] === '|' &&\n                        message.content[index + 2] === '|'\n                    ) {\n                        index += 3\n                        break\n                    }\n                }\n                // here we at the end of the payload char\n                result.push(\n                    makeTypedMessageTuple(\n                        [\n                            makeTypedMessageText(' ( \\u{1F510} '),\n                            makeTypedMessageAnchor('normal', 'https://mask.io', 'Mask.io'),\n                            makeTypedMessageText(') '),\n                        ],\n                        new Map([[unstable_STYLE_META, { opacity: 0.5 }]]),\n                    ),\n                )\n            } else {\n                pendingChar.push(char)\n                index += 1\n            }\n        }\n        return makeTypedMessageTuple(result, message.meta)\n    }\n    return visitEachTypedMessageChild(message, visitor, context)\n}, Order.PayloadReplacer)\nlet fbStyleTextPayloadReplace = false\nexport function enableFbStyleTextPayloadReplace() {\n    fbStyleTextPayloadReplace = true\n}\n","import { generateContactAvatarColor, type ProfileInformation as Profile } from '@masknet/shared-base'\nimport { useTheme, Avatar as MuiAvatar, type AvatarProps } from '@mui/material'\n\ninterface Props extends AvatarProps {\n    person: Profile\n}\n\nexport function Avatar({ person, ...props }: Props) {\n    const { avatar, nickname, identifier } = person\n    const name = identifier.userId || nickname || ''\n    const [first, last] = name.split(' ')\n    const theme = useTheme().palette.mode\n    return (\n        <MuiAvatar\n            aria-label={name}\n            src={avatar}\n            style={{ backgroundColor: generateContactAvatarColor(identifier.toText(), theme) }}\n            {...props}>\n            {first[0]}\n            {(last || '')[0]}\n        </MuiAvatar>\n    )\n}\n","import { useAsync } from 'react-use'\nimport { currentPersonaIdentifier } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport Services from '#services'\n\n/**\n * Get current setting persona\n */\nexport function useCurrentPersona() {\n    const currentIdentifier = useValueRef(currentPersonaIdentifier)\n\n    const { value } = useAsync(async () => {\n        const identifier = await Services.Settings.getCurrentPersonaIdentifier()\n\n        if (!identifier) return\n        return Services.Identity.queryPersona(identifier)\n    }, [currentIdentifier])\n\n    return value\n}\n","import { useSubscription } from 'use-subscription'\nimport { MaskMessages, createSubscriptionFromAsyncSuspense } from '@masknet/shared-base'\nimport Services from '#services'\n\nconst personas = createSubscriptionFromAsyncSuspense(\n    () => Services.Identity.queryOwnedPersonaInformation(true),\n    MaskMessages.events.ownPersonaChanged.on,\n)\n\n/**\n * Get all owned personas from DB\n */\nexport function usePersonasFromDB() {\n    return useSubscription(personas)\n}\n","import { type ProfileInformationFromNextID, ProfileIdentifier } from '@masknet/shared-base'\nimport Services from '#services'\nimport { batch, notify } from 'async-call-rpc/full'\n\nexport async function attachNextIDToProfile(nextID: ProfileInformationFromNextID) {\n    const whoAmI = await Services.Settings.getCurrentPersonaIdentifier()\n\n    if (!nextID?.fromNextID || !nextID.linkedPersona || !whoAmI) return\n    const [rpc, emit] = batch(notify(Services.Identity))\n    await Promise.allSettled(\n        nextID.linkedTwitterNames?.map((x) => {\n            return rpc.attachNextIDPersonaToProfile(\n                {\n                    ...nextID,\n                    nickname: x,\n                    identifier: ProfileIdentifier.of('twitter.com', x).expect(`${x} should be a valid user id`),\n                },\n                whoAmI,\n            )\n        }) ?? [],\n    )\n    emit()\n}\n","import type { Web3Helper } from '@masknet/web3-helpers'\nimport type { SearchResult } from '@masknet/web3-shared-base'\nimport { createInjectHooksRenderer } from '../dom/createInjectHooksRenderer.js'\nimport { useActivatedPluginsSiteAdaptor } from '../manager/site-adaptor.js'\n\nexport function getProfileTabContent(tabId?: string) {\n    return createInjectHooksRenderer(useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode, (x) => {\n        const tab = x.ProfileTabs?.find((x) => x.ID === tabId)\n        return tab?.UI?.TabContent\n    })\n}\n\nexport function getProfileCardTabContent(tabId?: string) {\n    return createInjectHooksRenderer(useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode, (x) => {\n        const tab = x.ProfileCardTabs?.find((x) => x.ID === tabId)\n        return tab?.UI?.TabContent\n    })\n}\n\nexport function getSettingsTabContent(tabId?: string) {\n    return createInjectHooksRenderer(useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode, (x) => {\n        const tab = x.SettingTabs?.find((x) => x.ID === tabId)\n        return tab?.UI?.TabContent\n    })\n}\n\nexport function getSearchResultContent(result: SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>) {\n    return createInjectHooksRenderer(useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode, (x) => {\n        const shouldDisplay = x.SearchResultInspector?.Utils?.shouldDisplay?.(result) ?? true\n        return shouldDisplay ? x.SearchResultInspector?.UI?.Content : undefined\n    })\n}\n\nexport function getSearchResultContentForProfileTab(\n    result: SearchResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>,\n) {\n    return createInjectHooksRenderer(useActivatedPluginsSiteAdaptor.visibility.useAnyMode, (x) => {\n        const shouldDisplay = x.SearchResultInspector?.Utils?.shouldDisplay?.(result) ?? true\n        return shouldDisplay ? x.SearchResultInspector?.UI?.Content : undefined\n    })\n}\n\nexport function getSearchResultTabContent(tabId?: string) {\n    return createInjectHooksRenderer(useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode, (x) => {\n        const tab = x.SearchResultTabs?.find((x) => x.ID === tabId)\n        return tab?.UI?.TabContent\n    })\n}\n","import type { Appearance, LanguageOptions } from '@masknet/public-api'\nimport type { SerializableTypedMessages } from '@masknet/typed-message'\nimport type { ProfileIdentifier, PersonaIdentifier, ECKeyIdentifier } from '@masknet/base'\nimport type { NetworkPluginID, PluginID } from '../types/PluginID.js'\nimport type { PersonaInformation, RelationFavor } from '../types/Persona.js'\nimport type { EnhanceableSite, ExtensionSite } from '../Site/types.js'\n\nexport interface MaskSettingsEvents {\n    appearanceSettings: Appearance\n    telemetrySettings: boolean\n    pluginIDSettings: Record<EnhanceableSite | ExtensionSite, NetworkPluginID>\n    languageSettings: LanguageOptions\n    currentPersonaIdentifier: ECKeyIdentifier | undefined\n}\nexport interface MaskContentScriptEvents {\n    // TODO: Maybe in-page UI related messages should use Context instead of messages?\n    autoPasteFailed: AutoPasteFailedEvent\n    replaceComposition: SerializableTypedMessages\n    // TODO: move to plugin message\n    profileTabUpdated: ProfileTabEvent\n    profileTabHidden: { hidden: boolean }\n    postReplacerHidden: postReplacerHiddenEvent\n    profileTabActive: { active: boolean }\n    NFTAvatarUpdated: NFTAvatarEvent\n    NFTAvatarTimelineUpdated: NFTAvatarEvent\n    nftAvatarSettingDialogUpdated: NFTAvatarSettingDialogEvent\n}\n\nexport interface MaskEvents extends MaskSettingsEvents, MaskContentScriptEvents {\n    telemetryIDReset: string\n    /** value is \"bulkKey\" */\n    legacySettings_bulkDiscoverNS: string\n    /** emit when the settings changed. */\n    legacySettings_set: SettingsUpdateEvent\n    /** emit when the settings finished syncing with storage. */\n    legacySettings_broadcast: SettingsUpdateEvent\n    ownPersonaChanged: void\n    ownProofChanged: void\n    NFTProjectTwitterDetect: NFTProjectTwitterDetectEvent\n    relationsChanged: RelationChangedEvent[]\n    pluginMinimalModeChanged: [id: string, newStatus: boolean]\n    hostPermissionChanged: void\n    personasChanged: void\n    allPluginsReady: boolean\n    requestExtensionPermission: RequestExtensionPermissionEvent\n    personaSignRequest: PersonaSignRequestEvent\n    maskSDKHotModuleReload: void\n    __kv_backend_persistent__: [string, unknown]\n    __kv_backend_in_memory__: [string, unknown]\n    popupRouteUpdated: string\n}\n\ninterface UpdateEvent<Data> {\n    readonly reason: 'update' | 'delete' | 'new'\n    readonly of: Data\n}\n\nexport interface CompositionDialogEvent {\n    readonly reason: 'timeline' | 'popup' | 'reply'\n    readonly open: boolean\n    readonly content?: SerializableTypedMessages\n    readonly options?: {\n        initialMetas?: Record<string, unknown>\n        target?: EncryptionTargetType\n        startupPlugin?: string\n        startupPluginProps?: any\n        isOpenFromApplicationBoard?: boolean\n    }\n}\n\nexport interface Web3ProfileDialogEvent {\n    open: boolean\n}\n\nexport interface CheckSecurityConfirmationDialogEvent {\n    open: boolean\n}\n\nexport type CheckSecurityDialogEvent =\n    | {\n          open: true\n          searchHidden: boolean\n          tokenAddress?: string\n          chainId?: number\n      }\n    | {\n          open: false\n      }\n\nexport type ApplicationDialogEvent = {\n    open: boolean\n    pluginID: string\n    selectedPersona?: PersonaInformation\n}\n\nexport type PersonaBindFinishEvent = {\n    pluginID?: string\n}\n\nexport type AvatarSettingDialogEvent = {\n    open: boolean\n    startPicking?: boolean\n}\n\nexport interface NFTProjectTwitterDetectEvent {\n    address?: string\n}\n\nexport interface SettingsDialogEvent {\n    open: boolean\n    targetTab?: string\n}\n\nexport type ProfileCardEvent =\n    | {\n          open: false\n      }\n    | {\n          open: true\n          userId: string\n          address?: string\n          anchorBounding: DOMRect\n          anchorEl: HTMLElement | null\n          external?: boolean\n      }\n\nexport type NonFungibleTokenDialogEvent =\n    | {\n          open: true\n          pluginID: NetworkPluginID\n          chainId: number\n          tokenId: string\n          tokenAddress: string\n          ownerAddress?: string\n          origin?: 'pfp' | 'web3-profile-card' | 'web3-profile-tab' | 'unknown'\n      }\n    | {\n          open: false\n      }\n\nexport enum EncryptionTargetType {\n    Public = 'public',\n    Self = 'self',\n    E2E = 'e2e',\n}\n\nexport interface NFTAvatarSettingDialogEvent {\n    open: boolean\n}\n\ninterface SettingsUpdateEvent {\n    key: string\n    value: any\n}\n\nexport interface redpacketDialogEvent {\n    open: boolean\n    source?: PluginID\n}\n\nexport interface SmartPayDialogEvent {\n    open: boolean\n}\n\nexport interface RenameWalletEvent {\n    address?: string\n}\n\nexport interface FollowLensDialogEvent {\n    open: boolean\n    handle: string\n}\n\nexport enum ProfileTabs {\n    WEB3 = 'web3',\n    DAO = 'dao',\n}\ninterface ProfileTabEvent {\n    show: boolean\n    type?: ProfileTabs\n}\n\nexport interface postReplacerHiddenEvent {\n    hidden: boolean\n    postId: string\n}\n\nexport interface HideSearchResultInspectorEvent {\n    hide: boolean\n}\nexport interface NFTAvatarEvent {\n    userId: string\n    avatarId: string\n    address?: string\n    tokenId?: string\n    schema?: number\n    chainId?: number\n    pluginID?: NetworkPluginID\n}\n\nexport interface TokenType {\n    name: string\n    symbol: string\n    address: string\n    decimals?: number\n}\nexport interface SwapDialogEvent {\n    open: boolean\n    traderProps?: {\n        defaultInputCoin?: TokenType\n        defaultOutputCoin?: TokenType\n        chainId?: number\n    }\n}\n\nexport interface SwitchLogoDialogEvent {\n    open: boolean\n}\n\nexport interface WalletSettingsDialogEvent {\n    pluginID?: string\n}\n\n/** This is a subset of browser.permissions.Permission */\nexport type PossiblyUsedWebExtensionPermission = 'clipboardRead'\n\nexport interface RequestExtensionPermissionEvent {\n    permissions?: PossiblyUsedWebExtensionPermission[]\n}\n\nexport interface AutoPasteFailedEvent {\n    text: string\n    image?: Blob\n}\n\nexport type RelationChangedEvent = UpdateEvent<ProfileIdentifier | PersonaIdentifier> & {\n    favor: RelationFavor\n}\n\nexport interface PersonaSignRequestEvent {\n    requestID: string\n    selectedPersona?: PersonaIdentifier\n}\n\nexport interface RequestsUpdatedEvent {\n    hasRequest: boolean\n}\n\nexport type WalletLockStatusUpdatedEvent = boolean\n\nexport type PasswordStatusUpdatedEvent = boolean\n\nexport interface PopupWalletConnectEvent {\n    open: boolean\n    uri?: string\n}\n","export function calculateHash(input: string) {\n    const hash = [...input].reduce((prev, current) => {\n        // eslint-disable-next-line no-bitwise\n        const next = current.charCodeAt(0) + (prev << 5) - prev\n        // eslint-disable-next-line no-bitwise\n        return next & next\n    }, 0)\n    return Math.abs(hash)\n}\n\nexport function generateContactAvatarColor(input: string, theme: 'light' | 'dark') {\n    const hash = calculateHash(input)\n    const values = [Math.abs(hash), theme === 'dark' ? '78%' : '98%', theme === 'dark' ? '50%' : '70%']\n    return `hsl(${values.join(', ')})`\n}\n","import { memo, type ReactNode, useCallback, useMemo } from 'react'\nimport { Button, Stack } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { Icons } from '@masknet/icons'\nimport { DashboardRoutes, type PersonaIdentifier, type PersonaInformation, type PluginID } from '@masknet/shared-base'\nimport { type PersonaConnectStatus, useCurrentPersonaConnectStatus, useSharedTrans } from '../../../index.js'\nimport type { IdentityResolved } from '@masknet/plugin-infra'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        flex: 1,\n        position: 'relative',\n    },\n    mask: {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        cursor: 'pointer',\n    },\n    button: {\n        borderRadius: '99px',\n        backgroundColor: theme.palette.maskColor.dark,\n        color: theme.palette.maskColor.white,\n        marginTop: 'auto',\n        ':hover': {\n            color: theme.palette.maskColor.white,\n            backgroundColor: theme.palette.maskColor.dark,\n        },\n    },\n}))\n\ntype SupportChildren = ((status: PersonaConnectStatus) => ReactNode) | ReactNode\n\ninterface ConnectPersonaBoundaryProps {\n    handlerPosition?: 'center' | 'top-right'\n    directTo?: PluginID\n    customHint?: boolean\n    children: SupportChildren\n    createConfirm?: boolean\n    enableVerify?: boolean\n    personas: readonly PersonaInformation[]\n    beforeAction?: (status: PersonaConnectStatus) => Promise<void> | void\n    afterAction?: (status: PersonaConnectStatus) => Promise<void> | void\n    currentPersonaIdentifier: PersonaIdentifier | undefined\n    openDashboard?: (route?: DashboardRoutes, search?: string) => void\n    identity?: IdentityResolved\n}\n\nexport const ConnectPersonaBoundary = memo<ConnectPersonaBoundaryProps>(\n    ({\n        children,\n        directTo,\n        handlerPosition = 'center',\n        customHint = false,\n        createConfirm = true,\n        enableVerify = true,\n        personas,\n        beforeAction,\n        afterAction,\n        currentPersonaIdentifier,\n        identity,\n        openDashboard,\n    }) => {\n        const t = useSharedTrans()\n        const { classes } = useStyles()\n\n        const { value: status, loading: statusLoading } = useCurrentPersonaConnectStatus(\n            personas,\n            currentPersonaIdentifier,\n            openDashboard,\n            identity,\n        )\n        const isFnChildren = typeof children === 'function'\n\n        const actionComponent = useMemo(() => {\n            if (children && customHint && !isFnChildren) return children\n            if (isFnChildren) return children(status)\n\n            if (!status.action) return null\n            if (!status.hasPersona)\n                return (\n                    <Button disabled={statusLoading} className={classes.button}>\n                        <Icons.Identity size={18} sx={{ marginRight: '8px' }} />\n                        {t.persona_boundary_create_persona()}\n                    </Button>\n                )\n\n            if (!status.connected)\n                return (\n                    <Button disabled={statusLoading} className={classes.button}>\n                        <Icons.Connect size={18} sx={{ marginRight: '8px', color: '#fff' }} />\n                        {t.persona_boundary_connect_persona()}\n                    </Button>\n                )\n            if (!status.verified)\n                return (\n                    <Button disabled={statusLoading} className={classes.button}>\n                        <Icons.Connect size={18} sx={{ marginRight: '8px', color: '#fff' }} />\n                        {t.persona_boundary_verify_persona()}\n                    </Button>\n                )\n            return null\n        }, [t, status, statusLoading, customHint, isFnChildren, children])\n\n        const handleClick = useCallback(() => {\n            beforeAction?.(status)\n\n            if (!status.hasPersona || !status.connected) {\n                status.action?.(\n                    directTo ?? DashboardRoutes.SignUpPersona,\n                    handlerPosition,\n                    enableVerify,\n                    !createConfirm,\n                )\n                return\n            }\n\n            if (!status.verified) status.action?.(directTo, handlerPosition, enableVerify, !createConfirm)\n            afterAction?.(status)\n        }, [directTo, handlerPosition, status, createConfirm])\n\n        if (statusLoading) return null\n        return (\n            <Stack className={classes.root} display=\"inline-flex\" onClick={handleClick}>\n                <Stack style={{ pointerEvents: status.action ? 'none' : 'auto' }} display=\"inline-flex\">\n                    {actionComponent}\n                </Stack>\n                {status.action || statusLoading ? <Stack className={classes.mask} display=\"inline-flex\" /> : null}\n            </Stack>\n        )\n    },\n)\n","import { Icons } from '@masknet/icons'\nimport { ActionButton, makeStyles } from '@masknet/theme'\nimport { Typography } from '@mui/material'\nimport { memo } from 'react'\nimport { useSharedTrans } from '../../../locales/i18n_generated.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    description: {\n        fontSize: 14,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.main,\n    },\n    action: {\n        marginTop: theme.spacing(10),\n    },\n}))\n\nexport interface GrantPermissionsProps extends withClasses<'description' | 'action'> {\n    permissions: string[]\n    onGrant: () => void\n}\nexport const GrantPermissions = memo<GrantPermissionsProps>(({ permissions, onGrant, ...props }) => {\n    const { classes } = useStyles(undefined, { props })\n    const t = useSharedTrans()\n    return (\n        <>\n            <Typography className={classes.description}>\n                {t.authorization_descriptions()}\n                <Typography component=\"div\">{permissions.join(',')}</Typography>\n            </Typography>\n            <ActionButton\n                startIcon={<Icons.Approve size={18} sx={{ lineHeight: 1 }} />}\n                variant=\"roundedDark\"\n                onClick={onGrant}\n                className={classes.action}>\n                {t.approve()}\n            </ActionButton>\n        </>\n    )\n})\n","import { useEffect } from 'react'\nimport { EMPTY_LIST, MaskMessages, type NextIDPersonaBindings, type NextIDPlatform } from '@masknet/shared-base'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { useQuery } from '@tanstack/react-query'\n\n/**\n * Get all personas bound with the given identity from NextID service\n */\nexport function usePersonasFromNextID(userId: string, platform: NextIDPlatform, exact?: boolean) {\n    const result = useQuery<NextIDPersonaBindings[], Error>({\n        queryKey: ['next-id', 'personas', userId],\n        enabled: Boolean(platform && userId),\n        queryFn: async () => {\n            if (!platform || !userId) return EMPTY_LIST\n            const res = await NextIDProof.queryAllExistedBindingsByPlatform(platform, userId, exact)\n            return res ? res : EMPTY_LIST\n        },\n    })\n\n    useEffect(() => MaskMessages.events.ownProofChanged.on(() => result.refetch), [result.refetch])\n    return result\n}\n","import { NextIDPlatform } from '@masknet/shared-base'\nimport { isValidAddress } from '@masknet/web3-shared-evm'\n\nexport const resolveNextIDPlatform = (value: string) => {\n    const address = value\n    if (isValidAddress(address)) return NextIDPlatform.Ethereum\n\n    const pubKey = value\n    if (pubKey.length >= 44) return NextIDPlatform.NextID\n\n    const domain = value\n\n    if (domain.endsWith('.eth') || domain.endsWith('.lens')) return NextIDPlatform.Ethereum\n\n    const userId = value\n    if (/^@?\\w{1,15}$/.test(userId)) return NextIDPlatform.Twitter\n\n    return\n}\n","import { ECKeyIdentifier, NextIDPlatform } from '@masknet/shared-base'\n\nexport const resolveValueToSearch = (value: string, type?: NextIDPlatform) => {\n    if (value.length === 44) return new ECKeyIdentifier('secp256k1', value).publicKeyAsHex ?? value\n    if (type === NextIDPlatform.Twitter) return value.replace(/^@/, '').toLowerCase()\n    return value.toLowerCase()\n}\n","import { composeSome } from '../utils/internal.js'\nimport * as anchor from './anchor.js'\nimport * as MaskPayload from './MaskPayload.js'\n\nexport * from './anchor.js'\nexport * from './MaskPayload.js'\n\n/** This key can be used in meta. It represents CSS when rendering this message. */\nexport const unstable_STYLE_META = 'unstable_STYLE'\nexport type WellKnownExtensionTypedMessages = anchor.TypedMessageAnchor | MaskPayload.TypedMessageMaskPayload\n\nexport const isWellKnownExtensionTypedMessages = composeSome(\n    anchor.isTypedMessageAnchor,\n    MaskPayload.isTypedMessageMaskPayload,\n)\n","import {\n    isTypedMessageEmpty,\n    isTypedMessagePromise,\n    isTypedMessageText,\n    isTypedMessageTuple,\n    makeTypedMessageEmpty,\n    makeTypedMessageText,\n    makeTypedMessageTuple,\n    makeTypedMessageTupleSerializable,\n} from '../core/index.js'\nimport type { Meta, TypedMessage } from '../base.js'\nimport { visitEachTypedMessageChild } from '../visitor/index.js'\nimport { isSerializableTypedMessage } from '../utils/index.js'\nimport { emptyTransformationContext, type TransformationContext } from './context.js'\nimport { unstable_STYLE_META } from '../extension/index.js'\nimport { isEqual } from 'lodash-es'\n\nexport function FlattenTypedMessage(message: TypedMessage, context: TransformationContext): TypedMessage {\n    if (isTypedMessagePromise(message) && 'value' in message.promise)\n        return FlattenTypedMessage(message.promise.value, context)\n    if (isTypedMessageTuple(message)) {\n        const next = message.items\n            .map((x) => FlattenTypedMessage(x, context))\n            .flatMap((x) => (isTypedMessageTuple(x) ? (x.meta ? x : x.items) : x))\n            .filter((x) => !isTypedMessageEmpty(x))\n            .reduce<TypedMessage[]>((result, current) => {\n                const lastItem = result.at(-1)\n                if (!lastItem) return result.concat(current)\n                if (!isTypedMessageText(current) || !isTypedMessageText(lastItem)) return result.concat(current)\n                if (!isTextWithMetaCanBeMerged(lastItem.meta, current.meta)) return result.concat(current)\n                // Only concat when last one and current one are both text and have no meta.\n                result.pop()\n                result.push(makeTypedMessageText(`${lastItem.content} ${current.content}`, lastItem.meta))\n                return result\n            }, [])\n\n        if (!message.meta) {\n            if (next.length === 0) return makeTypedMessageEmpty()\n            if (next.length === 1) return next[0]\n        }\n        if (next.every(isSerializableTypedMessage)) return makeTypedMessageTupleSerializable(next, message.meta)\n        return makeTypedMessageTuple(next, message.meta)\n    }\n    return visitEachTypedMessageChild(message, FlattenTypedMessage, context)\n}\n\nfunction isTextWithMetaCanBeMerged(a: Meta | undefined, b: Meta | undefined) {\n    if (a === b) return true\n    if (a?.size !== 1) return false\n    if (a?.size !== b?.size) return false\n    if (!a?.has(unstable_STYLE_META) || !b.has(unstable_STYLE_META)) return false\n    const a_style = a.get(unstable_STYLE_META)!\n    const b_style = b.get(unstable_STYLE_META)!\n    return isEqual(a_style, b_style)\n}\nFlattenTypedMessage.NoContext = (message: TypedMessage) => FlattenTypedMessage(message, emptyTransformationContext)\n","import type { TypedMessage } from '../base.js'\nimport { isTypedMessageText, makeTypedMessageTupleSerializable, makeTypedMessageText } from '../core/index.js'\nimport { makeTypedMessageAnchor } from '../extension/index.js'\nimport { parseLink } from '../utils/parseLink.js'\nimport { visitEachTypedMessageChild } from '../visitor/index.js'\nimport type { TransformationContext } from './context.js'\n\nexport function ParseLinkTransformer(message: TypedMessage, context: TransformationContext): TypedMessage {\n    if (isTypedMessageText(message)) {\n        const parsed = parseLink(message.content)\n        if (parsed.length === 1 && parsed[0].type === 'text') return message\n        return makeTypedMessageTupleSerializable(\n            parsed.map((i) => {\n                if (i.type === 'text') return makeTypedMessageText(i.content)\n                return makeTypedMessageAnchor(i.category, i.content, i.content)\n            }),\n            message.meta,\n        )\n    }\n    return visitEachTypedMessageChild(message, ParseLinkTransformer, context)\n}\n","import type { TypedMessage } from '../base.js'\nimport type { TransformationContext } from './context.js'\nimport type { Transformer } from './index.js'\nexport interface ComposedTransformers {\n    subscription: {\n        getCurrentValue: () => Transformer\n        subscribe(f: () => void): () => void\n    }\n    addTransformer(\n        transformer: Transformer | ComposedTransformers['subscription'],\n        priority: number,\n        signal?: AbortSignal,\n    ): () => void\n}\nexport function composeTransformers(): ComposedTransformers {\n    const event = new EventTarget()\n    const onUpdate = () => {\n        composedTransformer = undefined\n        event.dispatchEvent(new Event('update'))\n    }\n    const transformers = new Set<readonly [Transformer, number]>()\n\n    let composedTransformer: Transformer | undefined\n    function composed(message: TypedMessage, context: TransformationContext) {\n        return [...transformers].sort((a, b) => b[1] - a[1]).reduce((p, [c]) => c(p, context), message)\n    }\n\n    const subscription = {\n        getCurrentValue: () =>\n            (composedTransformer ??= (message, context) => {\n                return composed(message, context)\n            }),\n        subscribe(f: () => void) {\n            event.addEventListener('update', f)\n            return () => {\n                event.removeEventListener('update', f)\n            }\n        },\n    }\n    return {\n        subscription,\n        addTransformer(t, priority, signal) {\n            const f_priority = [\n                typeof t === 'function'\n                    ? t\n                    : (message: TypedMessage, context: TransformationContext) => t.getCurrentValue()(message, context),\n                priority,\n            ] as const\n            transformers.add(f_priority)\n            onUpdate()\n\n            const cancelSubscription = typeof t === 'function' ? () => {} : t.subscribe(onUpdate)\n\n            const remove = () => {\n                transformers.delete(f_priority)\n                cancelSubscription()\n                onUpdate()\n            }\n\n            signal?.addEventListener('abort', remove)\n            return remove\n        },\n    }\n}\n","export interface TransformationContext {\n    skipMaskPayloadTransform?: boolean\n    authorHint?: { network: string; userId: string }\n    currentProfile?: { network: string; userId: string }\n    postURL?: string\n    reportDecryptedInfo?(\n        iv?: Uint8Array,\n        claimedAuthor?: { network: string; userId: string },\n        publicShared?: boolean,\n    ): void\n}\nexport function createTransformationContext(): TransformationContext {\n    return Object.freeze({})\n}\nexport const emptyTransformationContext = createTransformationContext()\n","import * as anchorme from /* webpackDefer: true */ 'anchorme'\nimport type { TypedMessageAnchor } from '../extension/index.js'\n\nexport type ParseLinkResult =\n    | {\n          type: 'text'\n          content: string\n      }\n    | {\n          type: 'link'\n          content: string\n          category: TypedMessageAnchor['category']\n      }\n\nexport function parseLink(text: string): ParseLinkResult[] {\n    // ESM-CJS interop\n    const parsed = (anchorme.default.default || anchorme.default).list(text)\n\n    const result: ParseLinkResult[] = []\n\n    let start = 0\n    for (const x of parsed) {\n        if (x.isURL) {\n            result.push({ type: 'text', content: text.slice(start, x.start) })\n            result.push({ type: 'link', content: x.string, category: 'normal' })\n        } else {\n            result.push({ type: 'text', content: text.slice(start, x.end) })\n        }\n        start = x.end\n    }\n    result.push({ type: 'text', content: text.slice(start, text.length) })\n    return result.filter((x) => x.content).flatMap((x) => (x.type === 'text' ? parseTag(x.content) : x))\n}\n\nconst TagLike = /([#$@][\\w-]+)/g\nconst map = {\n    '@': 'user',\n    '#': 'hash',\n    $: 'cash',\n} as const\nfunction parseTag(x: string): ParseLinkResult[] {\n    return x\n        .split(TagLike)\n        .map<ParseLinkResult>((x) =>\n            TagLike.test(x)\n                ? { type: 'link', content: x, category: map[x[0] as keyof typeof map] || 'normal' }\n                : { type: 'text', content: x },\n        )\n}\n","import {\n    isTypedMessagePromise,\n    isTypedMessageTuple,\n    makeTypedMessagePromise,\n    makeTypedMessageTuple,\n    makeTypedMessageTupleSerializable,\n} from '../core/index.js'\nimport { isNonSerializableTypedMessageWithAlt, isSerializableTypedMessage } from '../utils/index.js'\nimport type { TypedMessage } from '../base.js'\nimport { isTypedMessageMaskPayload, makeTypedMessageMaskPayload } from '../extension/index.js'\nimport type { TransformationContext, Transformer } from '../transformer/index.js'\n\nexport function visitEachTypedMessageChild(\n    node: TypedMessage,\n    visitor: Transformer,\n    context: TransformationContext,\n): TypedMessage {\n    if (isTypedMessageTuple(node)) {\n        const after = node.items.flatMap((x) => {\n            const next = visitor(x, context)\n            if (isTypedMessageTuple(next)) return next.items\n            return next\n        })\n        if (after.every(isSerializableTypedMessage)) {\n            return makeTypedMessageTupleSerializable(after, node.meta)\n        }\n        return makeTypedMessageTuple(after, node.meta)\n    } else if (isTypedMessagePromise(node)) {\n        // we ignore alt if promise is resolved.\n        if ('value' in node.promise) return visitor(node.promise.value, context)\n        else if (node.alt) return makeTypedMessagePromise(node.promise, visitor(node.alt, context))\n        return node\n    } else if (isTypedMessageMaskPayload(node)) {\n        const next = visitor(node.message, context)\n        return makeTypedMessageMaskPayload(next, node.meta)\n    } else if (isNonSerializableTypedMessageWithAlt(node)) {\n        const alt = visitor(node.alt, context)\n        if (!isSerializableTypedMessage(alt)) {\n            console.warn(\n                '[@masknet/typed-message] You must return a serializable message in this position. Original:',\n                node,\n                'Transformed child \"alt\":',\n                alt,\n            )\n            // ignore the transform result\n            return node\n        }\n        return { ...node, alt } as TypedMessage\n    } else {\n        // return node with no child\n        return node\n    }\n}\n","import { memo, useRef } from 'react'\nimport type { TypedMessage } from '@masknet/typed-message'\n\n/** @internal */\nexport const TypedMessageUnknownRender = memo(function TypedMessageUnknownRender(props: TypedMessage) {\n    const warned = useRef(false)\n    if (!warned.current) {\n        warned.current = true\n        console.warn(\n            '[@masknet/typed-message] Trying to render an unknown TypedMessage (or a known TypedMessage with no renderer) with props',\n            props,\n        )\n    }\n    return null\n})\n","import { createContext } from 'react'\nexport const DebugElementProvider = createContext<boolean>(\n    (() => {\n        try {\n            return process.env.NODE_ENV === 'development'\n        } catch {}\n        return false\n    })(),\n)\nDebugElementProvider.displayName = 'DebugElementProvider'\n","import { useContext } from 'react'\nimport type { TypedMessage } from '@masknet/typed-message'\nimport { TypedMessageUnknownRender } from './Core/Unknown.js'\nimport { RegistryContext } from './utils/RegistryContext.js'\nimport { RenderFragmentsContext } from './utils/RenderFragments.js'\nimport { useTextResize } from './utils/TextResizerContext.js'\nimport { DebugElementProvider } from './utils/DebugElementProvider.js'\nexport interface RenderProps {\n    message: TypedMessage\n}\nexport function TypedMessageRender(props: RenderProps) {\n    const { Container = 'p' } = useContext(RenderFragmentsContext)\n    const isEmpty = props.message.type === 'empty'\n    const textResize = useTextResize(!isEmpty)\n\n    if (isEmpty) return null\n\n    return (\n        <span ref={textResize}>\n            <Container>\n                <TypedMessageRenderInline {...props} />\n            </Container>\n        </span>\n    )\n}\n\nexport function TypedMessageRenderInline(props: RenderProps) {\n    const { message } = props\n\n    const Registry = useContext(RegistryContext)\n    const isDebug = useContext(DebugElementProvider)\n\n    if (message.type === 'empty') return null\n\n    const Render = Registry(message.type)?.component || TypedMessageUnknownRender\n    if (isDebug) {\n        return (\n            <span data-kind={message.type} ref={(ref) => ref && Object.assign(ref, { message })}>\n                <Render {...message} />\n            </span>\n        )\n    }\n    return <Render {...message} />\n}\n","import { createContext } from 'react'\nimport type { RenderConfig } from '../registry.js'\n\nexport const RegistryContext = createContext<(type: string) => undefined | RenderConfig<any>>(() => {\n    console.error(\n        '[@masknet/typed-message] Please create a TypedMessageRenderRegistry and provide it via RegistryContext',\n    )\n    return undefined\n})\nRegistryContext.displayName = 'RegistryContext'\n","import { createContext, memo } from 'react'\nimport type { MetadataRenderProps } from '../MetadataRender.js'\n\nexport const DefaultRenderFragments = {\n    Text: memo(function TextFragment(props: RenderFragmentsContextType.TextProps) {\n        if (props.style) return <span style={props.style}>{props.children}</span>\n        return <>{props.children}</>\n    }),\n    Link: memo(function LinkFragment(props: RenderFragmentsContextType.LinkProps) {\n        return (\n            <a\n                href={props.href}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ fontSize: 'inherit', ...props.style }}>\n                {props.children}\n                {props.suggestedPostImage}\n            </a>\n        )\n    }),\n    Image: memo(function ImageFragment(props: RenderFragmentsContextType.ImageProps) {\n        return props.width === 0 ? null : (\n            <img src={props.src} width={props.width} height={props.height} style={props.style} />\n        )\n    }),\n    Metadata: memo(function MetadataFragment() {\n        return null\n    }),\n}\nexport interface RenderFragmentsContextType {\n    Container?: React.ComponentType\n    Text?: React.ComponentType<RenderFragmentsContextType.TextProps>\n    Image?: React.ComponentType<RenderFragmentsContextType.ImageProps>\n    Metadata?: React.ComponentType<MetadataRenderProps>\n    Link?: React.ComponentType<RenderFragmentsContextType.LinkProps>\n    /** #topic */\n    HashLink?: React.ComponentType<RenderFragmentsContextType.HashLinkProps>\n    /** @user */\n    AtLink?: React.ComponentType<RenderFragmentsContextType.AtLinkProps>\n    /** $CASH */\n    CashLink?: React.ComponentType<RenderFragmentsContextType.CashLinkProps>\n}\nexport declare namespace RenderFragmentsContextType {\n    export interface TextProps {\n        children: string\n        style?: React.CSSProperties\n    }\n    export interface LinkProps {\n        children: string\n        style?: React.CSSProperties\n        href: string\n        suggestedPostImage: React.ReactNode | undefined\n    }\n    export interface AtLinkProps {\n        children: string\n        style?: React.CSSProperties\n        suggestedPostImage: React.ReactNode | undefined\n    }\n    export interface CashLinkProps {\n        children: string\n        style?: React.CSSProperties\n        suggestedPostImage: React.ReactNode | undefined\n    }\n    export interface HashLinkProps {\n        children: string\n        style?: React.CSSProperties\n        suggestedPostImage: React.ReactNode | undefined\n    }\n    export interface ImageProps {\n        src: string\n        style?: React.CSSProperties\n        width?: number\n        height?: number\n        aspectRatio?: number\n    }\n}\nexport const RenderFragmentsContext = createContext<RenderFragmentsContextType>(DefaultRenderFragments)\nRenderFragmentsContext.displayName = 'RenderFragmentsContext'\n","import { createContext, useContext, useLayoutEffect, useState } from 'react'\n\nexport type TextResizer = (textCount: number) => number\nexport const TextResizeContext = createContext<TextResizer | boolean>(false)\nTextResizeContext.displayName = 'TextResizeContext'\n\nfunction defaultAlgr(length: number): number {\n    let scale = 1\n    if (length < 45) scale = 1.5\n    else if (length < 80) scale = 1.2\n    return scale\n}\n/** @internal */\nexport function useTextResize(shouldEnable: boolean) {\n    const provider = useContext(TextResizeContext)\n    const [element, setElement] = useState<HTMLElement | null>(null)\n\n    useLayoutEffect(() => {\n        if (!shouldEnable || !element || !provider) return\n\n        const updateFontSize = () => {\n            const algr = typeof provider === 'function' ? provider : defaultAlgr\n            const scale = algr(element.textContent?.length ?? 0)\n            element.style.fontSize = `${scale}rem`\n        }\n        updateFontSize()\n\n        const watcher = new MutationObserver(updateFontSize)\n        watcher.observe(element, { subtree: true, childList: true, characterData: true })\n        return () => watcher.disconnect()\n    }, [shouldEnable, provider, element])\n    return setElement\n}\n","import {\n    type Transformer,\n    type TypedMessage,\n    emptyTransformationContext,\n    type TransformationContext,\n} from '@masknet/typed-message'\nimport { createContext, useContext, useMemo } from 'react'\nexport const TransformerProvider = createContext<Transformer>((x) => x)\nTransformerProvider.displayName = 'TransformerProvider'\nexport const TransformationContextProvider = createContext<TransformationContext>(emptyTransformationContext)\nTransformationContextProvider.displayName = 'TransformationContextProvider'\n\nexport function useTransformedValue(message: TypedMessage): TypedMessage\nexport function useTransformedValue(message: undefined | TypedMessage): TypedMessage | undefined\nexport function useTransformedValue(message: undefined | TypedMessage): TypedMessage | undefined {\n    const transformer = useContext(TransformerProvider)\n    const context = useContext(TransformationContextProvider)\n    return useMemo(() => {\n        return message ? transformer(message, context) : undefined\n    }, [message, transformer, context])\n}\n","import { useCallback, useState } from 'react'\nimport { createContainer } from 'unstated-next'\n\nfunction useMap(initialState?: Record<string, string>) {\n    const [map, setMap] = useState<Record<string, string>>({})\n\n    const setPair = useCallback((address: string, domain: string) => {\n        setMap((map) => {\n            const key = address.toLowerCase()\n            if (map[key] === domain || !domain.includes('.')) return map\n            return { ...map, [key]: domain }\n        })\n    }, [])\n    const getDomain = useCallback(\n        (address: string) => {\n            return initialState?.[address.toLowerCase()] || map[address.toLowerCase()]\n        },\n        [map, initialState],\n    )\n\n    return { setPair, getDomain, map }\n}\n\nexport const ScopedDomainsContainer = createContainer(useMap)\n\nScopedDomainsContainer.Provider.displayName = 'ScopedDomainsContainer.Provider'\n","import { useAsyncRetry } from 'react-use'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useWeb3Others } from './useWeb3Others.js'\n\nexport function useLookupAddress<T extends NetworkPluginID>(\n    pluginID?: T,\n    domain?: string | null,\n    expectedChainId?: Web3Helper.Definition[T]['ChainId'],\n) {\n    const { chainId } = useChainContext({ chainId: expectedChainId })\n    const Others = useWeb3Others(pluginID)\n    const { NameService } = useWeb3State(pluginID)\n\n    return useAsyncRetry(async () => {\n        if (!domain || !Others.isValidDomain(domain) || !NameService) return\n        return NameService.lookup?.(domain)\n    }, [chainId, domain, NameService, Others])\n}\n","import { NetworkPluginID, type SocialAddress, type SocialAddressType, type SocialIdentity } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useQuery } from '@tanstack/react-query'\nimport { useWeb3State } from './useWeb3State.js'\n\ntype AddressList = Array<SocialAddress<Web3Helper.ChainIdAll>>\n\n/**\n * Get all social addresses across all networks.\n */\nexport function useSocialAddressesAll(\n    identity?: SocialIdentity | null,\n    includes?: SocialAddressType[],\n    sorter?: (a: SocialAddress<Web3Helper.ChainIdAll>, z: SocialAddress<Web3Helper.ChainIdAll>) => number,\n) {\n    // TODO: to add flow\n    const { IdentityService: EVM_IdentityService } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n    const { IdentityService: SolanaIdentityService } = useWeb3State(NetworkPluginID.PLUGIN_SOLANA)\n\n    const userId = identity?.identifier?.userId\n\n    return useQuery({\n        enabled: !!identity && userId !== '$unknown',\n        queryKey: ['all-social-addresses', userId, identity, includes],\n        queryFn: async () => {\n            const allSettled = await Promise.allSettled<AddressList>(\n                [EVM_IdentityService, SolanaIdentityService].map((x) => x?.lookup(identity!) ?? []),\n            )\n\n            const listOfAddress = allSettled.flatMap((x) => (x.status === 'fulfilled' ? x.value : []))\n            const sorted = sorter && listOfAddress.length ? listOfAddress.sort(sorter) : listOfAddress\n            return includes?.length ? sorted.filter((x) => includes.includes(x.type)) : sorted\n        },\n    })\n}\n","import { useMemo } from 'react'\nimport type { SocialAddress } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useWeb3State } from './useWeb3State.js'\n\n/**\n * Merge many social addresses into a social account.\n */\nexport function useSocialAccountsFrom(socialAddresses: Array<SocialAddress<Web3Helper.ChainIdAll>>) {\n    const { IdentityService } = useWeb3State()\n    return useMemo(() => {\n        return IdentityService?.__mergeSocialAddressesAll__(socialAddresses)\n    }, [socialAddresses, IdentityService])\n}\n","import { type SocialAccount, type SocialAddressType, type SocialIdentity, EMPTY_LIST } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useSocialAddressesAll } from './useSocialAddressesAll.js'\nimport { useSocialAccountsFrom } from './useSocialAccountsFrom.js'\n\n/**\n * Get all social addresses across all networks.\n */\nexport function useSocialAccountsAll(\n    identity?: SocialIdentity | null,\n    includes?: SocialAddressType[],\n    sorter?: (a: SocialAccount<Web3Helper.ChainIdAll>, z: SocialAccount<Web3Helper.ChainIdAll>) => number,\n) {\n    const { data: socialAddressList = EMPTY_LIST, ...rest } = useSocialAddressesAll(identity, includes, sorter)\n    const socialAccounts = useSocialAccountsFrom(socialAddressList) ?? EMPTY_LIST\n\n    return {\n        ...rest,\n        data: socialAccounts,\n    }\n}\n"],"names":["useCallback","useMemo","useState","useAsync","Services","useCurrentIdentity","useRecipientsList","current","identifier","value","hasRecipients","Crypto","hasRecipientAvailable","undefined","recipients","setRecipients","request","getRecipients","then","useEffect","useAsyncFn","useAsyncRetry","MaskMessages","usePluginHostPermissionCheck","plugins","plugins_","filter","x","enableRequirement","host_permissions","length","retry","lackPermission","Set","Promise","allSettled","map","plugin","Helper","hasHostPermission","result","add","ID","join","events","hostPermissionChanged","on","useCheckPermissions","permissions","asyncResult","useGrantPermissions","requestHostPermission","currentSetupGuideStatus","useValueRef","activatedSiteAdaptorUI","useSetupGuideStatus","context","networkIdentifier","JSON","parse","createInjectHooksRenderer","useActivatedPluginsSiteAdaptor","useSocialAccountsAll","EMPTY_LIST","makeStyles","useSocialIdentityByUserId","useStyles","root","Avatar","props","userId","sourceType","classes","data","identity","socialAccounts","isLoading","loadingSocialAccounts","component","Component","visibility","useNotMinimalMode","shouldDisplay","AvatarRealm","Utils","UI","Decorator","div","className","getAvailablePlugins","getSearchResultTabs","definitions","translate","displayPlugins","flatMap","SearchResultTabs","y","pluginID","sort","a","z","priority","id","label","useSearchedKeyword","keyword","setKeyword","onLocationChange","collecting","getSearchedKeyword","kw","window","addEventListener","removeEventListener","useLayoutEffect","first","TabContext","Stack","Tab","getSearchResultContent","getSearchResultContentForProfileTab","getSearchResultTabContent","usePluginTransField","useIsMinimalMode","PluginID","MaskTabList","useTabs","DSearch","ScopedDomainsContainer","SearchResultType","Telemetry","EventID","EventType","theme","isProfilePage","searchType","contentWrapper","background","EOA","Domain","tabContent","position","maxHeight","borderBottom","palette","divider","overflow","display","SearchResultInspector","profileTabType","isMinimalMode","Handle","keyword_","activatedPlugins","resultList","searchResults","search","type","timer","CollectionListByTwitterHandler","NonFungibleCollection","NonFungibleToken","setTimeout","captureEvent","Access","EntryTimelineDsearchNft","FungibleToken","EntryTimelineDsearchToken","clearTimeout","currentResult","currentSearchResult","contentComponent","tabs","defaultTab","Collectible","currentTab","onChange","setTab","tab","tabContentComponent","Provider","px","variant","aria-label","Icons","CopyButton","formatPersonaFingerprint","ShadowRootTooltip","Checkbox","ListItem","ListItemAvatar","ListItemText","truncate","memo","Highlighter","useMaskSharedTrans","borderRadius","cursor","padding","textOverflow","whiteSpace","highlighted","backgroundColor","color","fontWeight","flex","alignItems","actionIcon","marginLeft","spacing","badge","width","height","highLightBg","maskColor","bg","avatarBox","minWidth","avatar","highLightBase","lineHeight","fontSize","highLightSecond","listItemRoot","margin","columnReverse","flexDirection","toolTip","boxSizing","marginTop","ProfileInList","t","cx","profile","selected","disabled","highlightText","searchWords","rawPublicKey","linkedPersona","primaryText","fromNextID","nickname","mentions","linkedTwitterNames","len","tooltipTitle","linkedNames","select_friends_dialog_persona_connect","count","username","handleClick","secondaryText","toUpperCase","onClick","secondaryAction","checked","size","sx","person","primary","secondary","primaryTypographyProps","title","arrow","placement","tooltip","highlightClassName","autoEscape","textToHighlight","secondaryTypographyProps","text","NextIDMini","ProfileIdentifier","isProfileIdentifier","useCurrentPersona","useContacts","network","currentPersona","values","Identity","queryRelationPaged","pageOffset","identifiers","queryProfilesInformation","ECKeyIdentifier","NextIDPlatform","compact","uniqBy","useTwitterIdByWalletSearch","bindings","nextIdAccounts","binding","proofs","platform","Twitter","proof","of","expect","walletAddress","Ethereum","fromHexPublicKeyK256","persona","Typography","Card","Box","CircularProgress","colors","makeTypedMessageText","TypedMessageRender","TypedMessageRenderContext","Check","CheckIcon","Close","CloseIcon","AdditionalIcon","check","error","borderColor","icon","marginRight","content","overflowWrap","rightIcon","paddingLeft","AdditionalContent","stop","ev","stopPropagation","progress","message","ProgressJSX","RightIconJSX","htmlColor","green","titleIcon","header","gutterBottom","span","MaskBlue","headerActions","TypedMessage","elevation","main","textResizer","renderFragments","customization","componentOverwrite","RenderFragments","EmptyStatus","LoadingStatus","Boundary","useLookupAddress","Fuse","InputAdornment","InputBase","startTransition","useDeferredValue","selectedArea","flexWrap","input","marginBottom","empty","top","left","transform","gap","listParent","listBody","overflowY","list","gridGap","gridTemplateColumns","mainText","SelectProfileUI","frozenSelected","onSetSelected","items","setSearch","registeredAddress","selectedPubkeyList","publicKeyAsHex","frozenPubkeyList","onSelectedAllChange","onSelectedProfile","item","fuse","create","keys","isCaseSensitive","ignoreLocation","threshold","results","includes","profiles","e","target","onKeyDown","code","onSearch","startAdornment","Search","placeholder","post_dialog_share_with_input_placeholder","loading","compose_encrypt_share_dialog_empty","pubkey","toText","currentTarget","select_all","ActionButton","Button","DialogActions","DialogContent","alpha","InjectedDialog","resolveNextIDPlatform","resolveValueToSearch","usePersonasFromNextID","body","action","bottom","boxShadow","mode","backdropFilter","cancel","thirdMain","share","SelectProfileDialog","open","selectedProfiles","onClose","onSelect","people","select","committed","setCommitted","handleClose","recipientsList","rejection","onReject","valueToSearch","setValueToSearch","currentIdentity","searchLoading","NextIDResults","NextID","NextIDItems","myUserId","searchedList","profileItems","concat","EntryMaskComposeVisibleSelected","canCommit","select_specific_friends_dialog__title","console","fullWidth","done","useAuthorDifferentMessage","author","postBy","jsx","decrypted_postbox_author_mismatch","name","Suspense","forwardRef","useImperativeHandle","SnackbarContent","Link","MaskColorVar","MaskLightTheme","PluginTransFieldRender","useSharedTrans","card","backgroundGradient","provider","publish","justifyContent","textAlign","providerBy","second","MaskPostExtraInfoWrapper","children","publisher","publisherLink","wrapperProps","publisherInfo","textPluginColor","powered_by","href","underline","rel","style","inner","plugin_default_title","fallback","MaskPostExtraPluginWrapper","ref","definition","setWidth","setOpen","setTitle","refItem","setWrap","setWrapperName","field","link","lackHostPermission","useSubscription","registeredPlugins","usePostInfoDetails","BooleanPreference","extractTextFromTypedMessage","Skeleton","useTheme","useDisabledPlugins","activated","minimalMode","disabledPlugins","has","useDisabledPluginSuggestionFromPost","postContent","metaLinks","contribution","matches","pattern","isSome","match","some","useDisabledPluginSuggestionFromMeta","meta","metadataKeys","contributes","key","PossiblePluginSuggestionPostInspector","rawMessage","mentionedLinks","PossiblePluginSuggestionUI","_plugins","define","PossiblePluginSuggestionUISingle","find","Settings","setPluginMinimalModeEnabled","status","getPluginMinimalModeEnabled","True","ButtonIcon","Approve","Plugin","wrapperContent","FallbackContent","buttonLabel","approve","plugin_enable","startIcon","dark","rectangle","rest","plugin_disabled_tip","pl","animation","useRef","PermissionBoundary","hasPermissions","grantState","onGrant","MaskPostExtraPluginWrapperWithPermission","wrapperMethodsRef","publicMain","authorization_descriptions","methods","Decrypted","DecryptedInspector","DecryptedUI_PluginRendererWithSuggestion","metadata","b","suggest","Array","from","useSelectedRecipientsList","iv","postIVIdentifier","getIncompleteRecipientsOfPost","isMore","iconStack","zIndex","iconMore","iconAdd","RecipientsToolTip","openDialog","slice","recipient","More","AddNoBorder","white","useContext","attachNextIDToProfile","PostInfoContext","delay","useCanAppendShareTarget","whoAmI","version","sharedPublic","publicShared","currentPostBy","authorInPayload","postAuthor","DecryptPostSuccessBase","DecryptPostSuccessNoShare","postedBy","postReplacerHidden","sendToLocal","hidden","postId","decrypted_postbox_title","canAppendShareTarget","visibilityBox","DecryptPostSuccess","showDialog","setShowDialog","selectedRecipients","rightActions","section","decrypted_postbox_only_visible_to_yourself","AppendShareDetail","decrypted_postbox_visible_to_all","info","appendShareTarget","getCurrentValue","encryptPayloadNetwork","DecryptPostAwaiting","finding_post_key","decrypted_postbox_decrypting_finding_post_key","finding_person_public_key","decrypted_postbox_decrypting_finding_person_key","init","decrypted_postbox_decrypting","decode_post","decrypted_postbox_decoding","iv_decrypted","payload_decrypted","intermediate_success","DecryptPostFailed","service_decryption_failed","Fragment","useReducer","isTypedMessageEqual","GeneratorServices","encodeArrayBuffer","safeUnreachable","DecryptIntermediateProgressKind","DecryptProgressKind","Some","uniqWith","progressReducer","state","payload","currentProgressIndex","findIndex","currentProgress","isProgressEqual","internal","DecryptPost","deconstructedPayload","hasMaskPayload","postMetadataImages","postInfo","dispatch","setCommentFns","encryptComment","comment","decryptComment","encryptedComment","signal","AbortController","postURL","url","toString","report","kind","makeProgress","unwrapOr","decryptedReport","forEach","aborted","image","abort","every","index","renderProgress","Error","authorHint","currentProfile","reporter","reportProgress","decrypt","Success","Uint8Array","Info","isAuthorOfPost","Progress","event","TryDecryptByE2E","PersistentStorages","PluginHooksRenderer","PostInspector","hasEncryptedPost","postImages","isDebugging","storage","debugging","subscription","zipPost","withAdditionalContent","slot","process","env","NODE_ENV","h2","slotPosition","PostInfoProvider","attachReactTreeWithContainer","noop","injectPostInspectorDefault","config","PostInspectorDefault","injectionPoint","zipPostF","injectPostInspector","post","rootElement","afterShadow","untilVisible","render","destroy","IconButton","Paper","SetupGuideStep","footer","ContentUI","dialogType","PinExtension","tip","dismiss","useWizardDialogStyles","shadows","border","breakpoints","down","alignSelf","userSelect","close","right","WizardDialog","small","Extension","ExtensionIcon","button","minHeight","wordBreak","twitterButtonText","twitterButton","paddingTop","connection","connectItem","line","borderTop","borderSecondary","onDone","pinImg","URL","img","src","setup_guide_pin_tip","ol","li","setup_guide_pin_tip_step_click_left","setup_guide_pin_tip_step_click_right","setup_guide_pin_tip_step_find_left","Pin","setup_guide_pin_tip_step_find_right","setup_guide_pin_tip_successfully","start","useTimeout","useLastRecognizedIdentity","useCurrentUserId","lastRecognized","currentUserId","timeout","fakeLoading","usePersonaProofs","useConnectedVerified","isFetching","configuration","nextIDConfig","checking","verified","is_valid","EnhanceableSite","userPinExtension","useQuery","createContainer","useSetupGuideStepInfo","lastPinExtensionSetting","setupGuide","myIdentity","loadingCurrentUserId","personaInfo","checkingConnected","refetch","enabled","queryKey","queryFn","queryPersona","ownPersonaChanged","currentTabId","getActiveTabId","refetchOnWindowFocus","site","nextIdPlatform","checkingVerified","connected","linkedProfiles","reloaded","handler","location","pathname","reload","isFirstConnection","setIsFirstConnection","step","nextStep","VerifyOnNextID","CheckConnection","skip","tabId","SetupGuideContext","displayName","EMOJI_LIST","generateContactAvatarColor","calculateHash","isZeroAddress","MuiAvatar","EmojiAvatar","emoji","hash","NextIDAction","SignType","toBase64","fromHex","NextIDProof","createAndSignMessage","createPersonaPayload","Create","signature","signWithPersona","Message","signPayload","origin","useNextIDVerify","postMessage","automation","nativeCompositionDialog","attachText","verifiedCallback","replace","endpoint","publishPost","reason","bindProof","uuid","createdAt","proofLocation","isBound","queryIsBound","ownProofChanged","sendToAll","container","bottomBg","overflowX","flexShrink","modalTitleBg","closeButton","BindingDialog","role","Mask","disableTouchRipple","SOCIAL_MEDIA_ROUND_ICON_MAPPING","SOCIAL_MEDIA_NAME","Trans","loadingBox","Frame","Icon","Globe","connect_persona","AccountConnectStatus","expectAccount","siteName","useContainer","omitText","i18nKey","account","components","bold","mt","switch_for_more_connections","not_current_account","request_to_login","EventMap","EntryPopupSocialAccountConnectTwitter","Facebook","EntryPopupSocialAccountConnectFb","Minds","EntryPopupSocialAccountConnectMinds","Instagram","EntryPopupSocialAccountConnectIns","Localhost","Debug","App","OpenSea","Mirror","DisconnectEventMap","EntryPopupSocialAccountDisconnectTwitter","EntryPopupSocialAccountDisconnectFb","EntryPopupSocialAccountDisconnectMinds","EntryPopupSocialAccountDisconnectIns","queryClient","useConnectPersona","attachProfile","connectionConfirmState","updateProfileInfo","avatarURL","setupPersona","invalidateQueries","useCustomSnackbar","useNotifyConnected","showSnackbar","notify","setup_guide_connected_title","setup_guide_connected_description","usePostContent","personaIdentifier","MaskTextField","success","postContentTitle","linkIcon","send","VerifyNextID","personaName","customUserId","setCustomUserId","creatingPostContent","personaAvatar","queryOwnedPersonaInformation","disableVerify","connecting","handleVerifyNextID","verifying","onVerify","EntryPopupSocialAccountVerifyTwitter","onConfirm","p","Email","ml","trim","Connect","LinkOut","br","setup_guide_post_content","setup_guide_verify_tip","ok","Send","EncryptionTargetType","userGuideFinished","userGuideStatus","SetupGuideUI","onCreate","setup_guide_say_hello_content","setup_guide_say_hello_follow","maskCompositionDialog","Public","onPinClose","onPinDone","useSetupGuideStyles","maxWidth","SetupGuide","initialState","attachReactTreeWithoutContainer","createTaskStartSetupGuideDefault","collectTwitterEmoji","collectNodeText","node","options","querySelector","innerText","childNodes","each","nodeType","document","TEXT_NODE","nodeValue","HTMLAnchorElement","onHTMLAnchorElement","getAttribute","HTMLImageElement","alt","matched","split","Number","parseInt","HTMLElement","points","String","fromCodePoint","MaterialLink","Container","Anchor","startsWith","suggestedPostImage","useTagEnhancer","enhanceTag","at","onMouseEnter","onHover","once","hasMatch","createElement","RenderFragmentsContext","DefaultRenderFragments","parseLink","RenderTextFragment","RenderText","Text","parseText","RenderLinkFragment","RenderLink","category","AtLink","CashLink","HashLink","sharedProps","string","links","frag","sliceString","i","indexOf","pos","push","Boolean","useMetadataRender","Metadata","unstable_STYLE_META","TypedMessageTextRender","Object","get","TypedMessageImageRender","Image","blobSrc","setBlobSrc","createObjectURL","revokeObjectURL","finalSrc","hasCircular","stringify","err","warn","TypedMessageRenderInline","TypedMessageTupleRender","React","useTransformedValue","TypedMessagePromiseRender","promise","Await_new","_","rerender","Math","random","transformedValue","Await_old","resolved","Reflect","TypedMessageAnchorRender","postImage","TypedMessageUnknownRender","createTypedMessageRenderRegistry","registry","Map","EventTarget","getterFunction","registerTypedMessageRender","set","dispatchEvent","Event","delete","getTypedMessageRender","subscribe","f","Symbol","TypedMessageRenderRegistry","emptyTransformationContext","RegistryContext","TransformerProvider","TransformationContextProvider","TextResizeContext","TypedMessageTransformers","transformerFunction","metadataRender","composeTransformers","FlattenTypedMessage","isTypedMessageAnchor","isTypedMessageText","makeTypedMessageAnchor","makeTypedMessageTuple","ParseLinkTransformer","visitEachTypedMessageChild","Order","Flatten","ParseLink","PayloadReplacer","Plugins","TypedMessagePluginTransformers","addTransformer","matcher","textPayloadChar","visitor","test","fbStyleTextPayloadReplace","startFrom","pendingChar","char","opacity","enableFbStyleTextPayloadReplace","last","currentPersonaIdentifier","currentIdentifier","getCurrentPersonaIdentifier","createSubscriptionFromAsyncSuspense","personas","usePersonasFromDB","batch","nextID","rpc","emit","attachNextIDPersonaToProfile","getProfileTabContent","ProfileTabs","TabContent","getProfileCardTabContent","ProfileCardTabs","getSettingsTabContent","SettingTabs","Content","useAnyMode","Self","E2E","WEB3","DAO","reduce","prev","next","charCodeAt","abs","DashboardRoutes","useCurrentPersonaConnectStatus","mask","ConnectPersonaBoundary","directTo","handlerPosition","customHint","createConfirm","enableVerify","beforeAction","afterAction","openDashboard","statusLoading","isFnChildren","actionComponent","hasPersona","persona_boundary_create_persona","persona_boundary_connect_persona","persona_boundary_verify_persona","SignUpPersona","pointerEvents","description","GrantPermissions","exact","res","queryAllExistedBindingsByPlatform","isValidAddress","address","pubKey","domain","endsWith","toLowerCase","composeSome","anchor","MaskPayload","isWellKnownExtensionTypedMessages","isTypedMessageMaskPayload","isTypedMessageEmpty","isTypedMessagePromise","isTypedMessageTuple","makeTypedMessageEmpty","makeTypedMessageTupleSerializable","isSerializableTypedMessage","isEqual","lastItem","isTextWithMetaCanBeMerged","pop","a_style","b_style","NoContext","parsed","onUpdate","composedTransformer","transformers","composed","c","f_priority","cancelSubscription","remove","createTransformationContext","freeze","anchorme","default","isURL","end","parseTag","TagLike","$","makeTypedMessagePromise","isNonSerializableTypedMessageWithAlt","makeTypedMessageMaskPayload","after","warned","createContext","DebugElementProvider","useTextResize","isEmpty","textResize","Registry","isDebug","Render","data-kind","assign","TextFragment","LinkFragment","ImageFragment","MetadataFragment","defaultAlgr","scale","shouldEnable","element","setElement","updateFontSize","algr","textContent","watcher","MutationObserver","observe","subtree","childList","characterData","disconnect","transformer","useMap","setMap","setPair","getDomain","useChainContext","useWeb3State","useWeb3Others","expectedChainId","chainId","Others","NameService","isValidDomain","lookup","NetworkPluginID","useSocialAddressesAll","sorter","IdentityService","EVM_IdentityService","PLUGIN_EVM","SolanaIdentityService","PLUGIN_SOLANA","listOfAddress","sorted","useSocialAccountsFrom","socialAddresses","__mergeSocialAddressesAll__","socialAddressList"],"sourceRoot":"","x_google_ignoreList":[27]}