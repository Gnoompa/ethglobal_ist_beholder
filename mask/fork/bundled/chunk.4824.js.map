{"version":3,"file":"bundled/chunk.4824.js","mappings":"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","sources":["webpack://mask-network/./packages/mask/popups/hooks/useConnectedOrigins.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletSettings/useStyles.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletSettings/AutoLock.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletSettings/ChangeCurrency.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletSettings/ChangeNetwork.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletSettings/ChangeOwner.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletSettings/ChangePaymentPassword.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletSettings/ConnectedOrigins.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletSettings/Contacts.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletSettings/Rename.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletSettings/ShowPrivateKey.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletSettings/index.tsx"],"sourcesContent":["import { NetworkPluginID } from '@masknet/shared-base'\nimport { useQuery } from '@tanstack/react-query'\nimport { useWallet } from '@masknet/web3-hooks-base'\nimport Services from '#services'\n\nexport function useConnectedOrigins() {\n    const wallet = useWallet(NetworkPluginID.PLUGIN_EVM)\n    return useQuery(\n        ['wallet-granted-origins', wallet?.address],\n        async () => await Services.Wallet.getAllConnectedOrigins(wallet!.address),\n        {\n            enabled: !!wallet?.address,\n            networkMode: 'always',\n        },\n    )\n}\n","/* eslint-disable tss-unused-classes/unused-classes */\nimport { makeStyles } from '@masknet/theme'\nimport { alpha } from '@mui/material'\n\nexport const useStyles = makeStyles()((theme) => ({\n    content: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n    },\n    list: {\n        padding: '12px 16px 0px 16px',\n        overflow: 'auto',\n        flexGrow: 1,\n    },\n    primaryItem: {\n        margin: '16px 16px 0 16px',\n        background: theme.palette.maskColor.primary,\n    },\n    primaryItemText: {\n        fontSize: 14,\n        fontWeight: 700,\n        color: theme.palette.maskColor.white,\n    },\n    primaryItemSecondText: {\n        fontSize: 10,\n        fontWeight: 700,\n        color: alpha(theme.palette.maskColor.white, 0.8),\n    },\n    item: {\n        display: 'flex',\n        padding: theme.spacing(1.5),\n        marginBottom: 12,\n        alignItems: 'center',\n        cursor: 'pointer',\n        justifyContent: 'space-between',\n        background: theme.palette.maskColor.bottom,\n        borderRadius: 8,\n        boxShadow: `0px 0px 20px 0px ${alpha(theme.palette.maskColor.main, 0.05)}`,\n    },\n    itemText: {\n        marginLeft: 6,\n        fontSize: 14,\n        color: theme.palette.maskColor.main,\n    },\n    walletInfo: {\n        marginLeft: 12,\n    },\n    maskBlue: {\n        border: `1px solid ${theme.palette.maskColor.white}`,\n        borderRadius: 99,\n    },\n    primaryItemBox: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 36,\n    },\n    itemBox: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 24,\n    },\n    bottomAction: {\n        paddingTop: 16,\n        display: 'flex',\n        justifyContent: 'center',\n        background: theme.palette.maskColor.secondaryBottom,\n        boxShadow: '0px 0px 20px 0px rgba(0, 0, 0, 0.05)',\n        backdropFilter: 'blur(8px)',\n    },\n    ellipsis: {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        maxWidth: 150,\n    },\n    removeWalletButton: {\n        marginBottom: 16,\n    },\n    bold: {\n        fontSize: 14,\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n    },\n    confirmMessage: {\n        fontSize: 14,\n        lineHeight: '18px',\n        wordBreak: 'break-word',\n        maxHeight: '60vh',\n        overflow: 'auto',\n    },\n}))\n","import { useMemo } from 'react'\nimport { Icons } from '@masknet/icons'\nimport { Box, ListItem, Typography } from '@mui/material'\nimport { millisecondsToMinutes, millisecondsToHours } from 'date-fns'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useStyles } from './useStyles.js'\nimport { WalletAutoLockSettingModal } from '../../../modals/modals.js'\nimport { useWalletAutoLockTime } from '../hooks/useWalletAutoLockTime.js'\n\nexport function AutoLock() {\n    const t = useMaskSharedTrans()\n    const { classes, theme } = useStyles()\n\n    const { value } = useWalletAutoLockTime()\n\n    const minutes = useMemo(() => (value ? millisecondsToMinutes(value) : undefined), [value])\n    return (\n        <ListItem\n            className={classes.item}\n            onClick={() =>\n                WalletAutoLockSettingModal.open({\n                    title: t.popups_wallet_settings_auto_unlock_time_title(),\n                })\n            }>\n            <Box className={classes.itemBox}>\n                <Icons.Time size={20} color={theme.palette.maskColor.second} />\n                <Typography className={classes.itemText}>{t.popups_wallet_settings_auto_unlock_time()}</Typography>\n            </Box>\n            <Box className={classes.itemBox}>\n                {value ? (\n                    <Typography className={classes.itemText}>\n                        {minutes && minutes >= 60\n                            ? t['popups_wallet_settings_auto-unlock_time_hour']({ count: millisecondsToHours(value) })\n                            : t.popups_wallet_settings_auto_unlock_time_mins({\n                                  time: String(millisecondsToMinutes(value)),\n                              })}\n                    </Typography>\n                ) : null}\n                <Icons.ArrowRight color={theme.palette.maskColor.second} size={24} />\n            </Box>\n        </ListItem>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { Box, ListItem, Typography } from '@mui/material'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useStyles } from './useStyles.js'\nimport { useCallback } from 'react'\nimport { PopupModalRoutes } from '@masknet/shared-base'\nimport { useModalNavigate } from '../../../components/index.js'\nimport { useCurrencyType } from '@masknet/web3-hooks-base'\nimport { resolveCurrencyName } from '@masknet/web3-shared-base'\n\nexport function ChangeCurrency() {\n    const t = useMaskSharedTrans()\n    const { classes, theme } = useStyles()\n\n    const modalNavigate = useModalNavigate()\n\n    const chooseCurrency = useCallback(() => {\n        modalNavigate(PopupModalRoutes.ChooseCurrency)\n    }, [modalNavigate])\n\n    const currencyType = useCurrencyType()\n\n    return (\n        <ListItem className={classes.item} onClick={chooseCurrency}>\n            <Box className={classes.itemBox}>\n                <Icons.Currency size={20} color={theme.palette.maskColor.second} />\n                <Typography className={classes.itemText}>{t.currency()}</Typography>\n            </Box>\n            <Box className={classes.itemBox}>\n                {currencyType ? (\n                    <Typography className={classes.itemText}>{resolveCurrencyName(currencyType)}</Typography>\n                ) : null}\n                <Icons.ArrowRight color={theme.palette.maskColor.second} size={24} />\n            </Box>\n        </ListItem>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { Box, ListItem, Typography } from '@mui/material'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useStyles } from './useStyles.js'\nimport { useCallback } from 'react'\nimport { PopupModalRoutes } from '@masknet/shared-base'\nimport { useModalNavigate } from '../../../components/index.js'\n\nexport function ChangeNetwork() {\n    const t = useMaskSharedTrans()\n    const { classes, theme } = useStyles()\n    const modalNavigate = useModalNavigate()\n\n    const chooseNetwork = useCallback(() => {\n        modalNavigate(PopupModalRoutes.ChooseNetwork)\n    }, [modalNavigate])\n\n    return (\n        <ListItem className={classes.item} onClick={chooseNetwork}>\n            <Box className={classes.itemBox}>\n                <Icons.Globe size={20} color={theme.palette.maskColor.second} />\n                <Typography className={classes.itemText}>{t.popups_wallet_settings_change_network()}</Typography>\n            </Box>\n            <Box className={classes.itemBox}>\n                <Icons.ArrowRight color={theme.palette.maskColor.second} size={24} />\n            </Box>\n        </ListItem>\n    )\n}\n","import { useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Icons } from '@masknet/icons'\nimport { Box, ListItem, Typography } from '@mui/material'\nimport { PopupRoutes } from '@masknet/shared-base'\nimport { useWallet, useWallets } from '@masknet/web3-hooks-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useStyles } from './useStyles.js'\nimport { useQuery } from '@tanstack/react-query'\nimport Services from '#services'\n\nexport function ChangeOwner() {\n    const t = useMaskSharedTrans()\n    const { classes, cx, theme } = useStyles()\n    const navigate = useNavigate()\n    const wallet = useWallet()\n    const wallets = useWallets()\n\n    const { data: personaManagers } = useQuery(\n        ['persona-managers'],\n        async () => {\n            return Services.Identity.queryOwnedPersonaInformation(true)\n        },\n        { networkMode: 'always' },\n    )\n\n    const walletManager = useMemo(\n        () => wallets.find((x) => !x.owner && isSameAddress(wallet?.owner, x.address)),\n        [wallets, wallet],\n    )\n    const personaManager = useMemo(\n        () => personaManagers?.find((x) => isSameAddress(wallet?.owner, x.address)),\n        [personaManagers, wallet],\n    )\n\n    return (\n        <ListItem className={classes.item} onClick={() => navigate(PopupRoutes.ChangeOwner)}>\n            <Box className={classes.itemBox}>\n                <Icons.PersonasOutline size={20} color={theme.palette.maskColor.second} />\n                <Typography className={classes.itemText}>{t.popups_change_owner()}</Typography>\n            </Box>\n            <Box className={classes.itemBox}>\n                <Typography className={cx(classes.itemText, classes.ellipsis)}>\n                    {walletManager?.name ?? personaManager?.nickname}\n                </Typography>\n                <Icons.ArrowRight color={theme.palette.maskColor.second} size={24} />\n            </Box>\n        </ListItem>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { Box, ListItem, Typography } from '@mui/material'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useStyles } from './useStyles.js'\nimport { ChangePaymentPasswordModal } from '../../../modals/modals.js'\n\nexport function ChangePaymentPassword() {\n    const t = useMaskSharedTrans()\n    const { classes, theme } = useStyles()\n\n    return (\n        <ListItem\n            className={classes.item}\n            onClick={() =>\n                ChangePaymentPasswordModal.open({\n                    title: t.popups_wallet_settings_change_payment_password(),\n                })\n            }>\n            <Box className={classes.itemBox}>\n                <Icons.Lock size={20} color={theme.palette.maskColor.second} />\n                <Typography className={classes.itemText}>\n                    {t.popups_wallet_settings_change_payment_password()}\n                </Typography>\n            </Box>\n            <Icons.ArrowRight color={theme.palette.maskColor.second} size={24} />\n        </ListItem>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { Box, ListItem, Typography, useTheme } from '@mui/material'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useStyles } from './useStyles.js'\nimport { useNavigate } from 'react-router-dom'\nimport { PopupRoutes } from '@masknet/shared-base'\nimport { useConnectedOrigins } from '../../../hooks/useConnectedOrigins.js'\n\nexport function ConnectedOrigins() {\n    const t = useMaskSharedTrans()\n    const theme = useTheme()\n    const { classes } = useStyles()\n    const navigate = useNavigate()\n    const { data: origins } = useConnectedOrigins()\n\n    return (\n        <ListItem className={classes.item} onClick={() => navigate(PopupRoutes.ConnectedSites)}>\n            <Box className={classes.itemBox}>\n                <Icons.Appendices size={20} color={theme.palette.maskColor.second} />\n                <Typography className={classes.itemText}>{t.popups_wallet_connected_sites()}</Typography>\n            </Box>\n            <Box className={classes.itemBox}>\n                <Typography className={classes.itemText}>{origins ? origins.size : 0}</Typography>\n                <Icons.ArrowRight color={theme.palette.maskColor.second} size={24} />\n            </Box>\n        </ListItem>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { Box, ListItem, Typography } from '@mui/material'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useStyles } from './useStyles.js'\nimport { useNavigate } from 'react-router-dom'\nimport { PopupRoutes } from '@masknet/shared-base'\nimport { useContacts, useWallet, useWallets } from '@masknet/web3-hooks-base'\n\nexport function Contacts() {\n    const t = useMaskSharedTrans()\n    const wallet = useWallet()\n    const wallets = useWallets()\n    const contacts = useContacts()\n    const { classes, theme } = useStyles()\n    const navigate = useNavigate()\n    const totalContacts = wallets.length + contacts.length\n\n    return (\n        <ListItem\n            className={classes.item}\n            onClick={() => navigate(`${PopupRoutes.Contacts}/${wallet?.address}`, { state: { type: 'manage' } })}>\n            <Box className={classes.itemBox}>\n                <Icons.BaseUser size={20} color={theme.palette.maskColor.second} />\n                <Typography className={classes.itemText}>{t.contacts()}</Typography>\n            </Box>\n            <Box className={classes.itemBox}>\n                <Typography className={classes.itemText}>{totalContacts}</Typography>\n                <Icons.ArrowRight color={theme.palette.maskColor.second} size={24} />\n            </Box>\n        </ListItem>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { useWallet } from '@masknet/web3-hooks-base'\nimport { Box, ListItem, Typography } from '@mui/material'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useStyles } from './useStyles.js'\nimport { WalletRenameModal } from '../../../modals/modals.js'\n\nexport function Rename() {\n    const t = useMaskSharedTrans()\n    const wallet = useWallet()\n    const { classes, theme } = useStyles()\n\n    if (!wallet) return null\n\n    return (\n        <ListItem\n            className={classes.item}\n            onClick={() =>\n                WalletRenameModal.open({\n                    wallet,\n                    title: t.rename(),\n                })\n            }>\n            <Box className={classes.itemBox}>\n                <Icons.Edit2 size={20} color={theme.palette.maskColor.second} />\n                <Typography className={classes.itemText}>{t.rename()}</Typography>\n            </Box>\n            <Box className={classes.itemBox}>\n                <Typography className={classes.itemText}>{wallet.name}</Typography>\n                <Icons.ArrowRight color={theme.palette.maskColor.second} size={24} />\n            </Box>\n        </ListItem>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { Box, ListItem, Typography } from '@mui/material'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useStyles } from './useStyles.js'\nimport { ShowPrivateKeyModal } from '../../../modals/modals.js'\n\nexport function ShowPrivateKey() {\n    const t = useMaskSharedTrans()\n    const { classes, theme } = useStyles()\n\n    return (\n        <ListItem\n            className={classes.item}\n            onClick={() =>\n                ShowPrivateKeyModal.open({\n                    title: t.popups_wallet_settings_enter_payment_password(),\n                })\n            }>\n            <Box className={classes.itemBox}>\n                <Icons.PublicKey2 size={20} color={theme.palette.maskColor.second} />\n                <Typography className={classes.itemText}>{t.popups_wallet_settings_backup_wallet()}</Typography>\n            </Box>\n            <Icons.ArrowRight color={theme.palette.maskColor.second} size={24} />\n        </ListItem>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { ConfirmDialog } from '@masknet/shared'\nimport { EMPTY_LIST, NetworkPluginID, PopupModalRoutes } from '@masknet/shared-base'\nimport { ActionButton } from '@masknet/theme'\nimport { useWallet, useWallets } from '@masknet/web3-hooks-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { Box, List, Typography } from '@mui/material'\nimport { first } from 'lodash-es'\nimport { memo, useCallback, useMemo } from 'react'\nimport { Trans } from 'react-i18next'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useModalNavigate } from '../../../components/index.js'\nimport { useTitle } from '../../../hooks/index.js'\nimport { WalletRemoveModal } from '../../../modals/modals.js'\nimport { AutoLock } from './AutoLock.js'\nimport { ChangeCurrency } from './ChangeCurrency.js'\nimport { ChangeNetwork } from './ChangeNetwork.js'\nimport { ChangeOwner } from './ChangeOwner.js'\nimport { ChangePaymentPassword } from './ChangePaymentPassword.js'\nimport { ConnectedOrigins } from './ConnectedOrigins.js'\nimport { Contacts } from './Contacts.js'\nimport { Rename } from './Rename.js'\nimport { ShowPrivateKey } from './ShowPrivateKey.js'\nimport { useStyles } from './useStyles.js'\n\nfunction getPathIndex(path?: string) {\n    const rawIndex = path?.split('/').pop()\n    if (!rawIndex) return\n    return Number.parseInt(rawIndex, 10)\n}\nconst WalletSettings = memo(() => {\n    const t = useMaskSharedTrans()\n    const { classes, cx, theme } = useStyles()\n    const modalNavigate = useModalNavigate()\n    const wallet = useWallet(NetworkPluginID.PLUGIN_EVM)\n    const allWallets = useWallets()\n\n    const handleSwitchWallet = useCallback(() => {\n        modalNavigate(PopupModalRoutes.WalletAccount)\n    }, [modalNavigate])\n\n    useTitle(t.popups_wallet_setting())\n    const siblingWallets = useMemo(() => {\n        if (!wallet?.mnemonicId) return EMPTY_LIST\n        return allWallets\n            .filter((x) => x.mnemonicId === wallet.mnemonicId)\n            .sort((a, z) => {\n                const msA = a.createdAt.getTime()\n                const msZ = z.createdAt.getTime()\n                if (msA !== msZ) return msA - msZ\n                const pathIndexA = getPathIndex(a.derivationPath)\n                const pathIndexZ = getPathIndex(z.derivationPath)\n                if (pathIndexA === pathIndexZ) return 0\n                if (pathIndexA === undefined) return 1\n                if (pathIndexZ === undefined) return -1\n                return pathIndexA - pathIndexZ\n            })\n    }, [allWallets, wallet?.mnemonicId])\n\n    if (!wallet) return null\n\n    // The wallet has derivationPath is also the one with minimum derivation path\n    const isTheFirstWallet = wallet.mnemonicId ? isSameAddress(first(siblingWallets)?.address, wallet.address) : false\n\n    return (\n        <div className={classes.content}>\n            <Box className={cx(classes.item, classes.primaryItem)} onClick={handleSwitchWallet}>\n                <Box className={classes.primaryItemBox}>\n                    {wallet.owner ? (\n                        <Icons.SmartPay size={24} />\n                    ) : (\n                        <Icons.MaskBlue size={24} className={classes.maskBlue} />\n                    )}\n                    <div className={classes.walletInfo}>\n                        <Typography className={classes.primaryItemText}>{wallet.name}</Typography>\n                        <Typography className={classes.primaryItemSecondText}>{wallet.address}</Typography>\n                    </div>\n                </Box>\n                <Icons.ArrowDownRound color={theme.palette.maskColor.white} size={24} />\n            </Box>\n            <List dense className={classes.list} data-hide-scrollbar>\n                {wallet.owner ? <ChangeOwner /> : null}\n                <Rename />\n                <Contacts />\n                <ConnectedOrigins />\n                <AutoLock />\n                <ChangeCurrency />\n                <ChangePaymentPassword />\n                {wallet.owner ? null : (\n                    <>\n                        <ShowPrivateKey />\n                        <ChangeNetwork />\n                    </>\n                )}\n            </List>\n            {wallet.owner ? null : (\n                <Box className={classes.bottomAction}>\n                    <ActionButton\n                        fullWidth\n                        disabled={isTheFirstWallet}\n                        onClick={async () => {\n                            const ownedWallets = !wallet?.address\n                                ? []\n                                : allWallets.filter((x) => isSameAddress(x.owner, wallet.address))\n                            if (ownedWallets.length) {\n                                const currentWallet = formatEthereumAddress(wallet.address, 4)\n                                const other_wallets = ownedWallets\n                                    .map((x) => formatEthereumAddress(x.address, 4))\n                                    .join(',')\n                                const confirmed = await ConfirmDialog.openAndWaitForClose({\n                                    title: t.remove_wallet_title(),\n                                    message: (\n                                        <Typography className={classes.confirmMessage}>\n                                            <Trans\n                                                i18nKey=\"remove_wallet_message\"\n                                                values={{\n                                                    wallet: currentWallet,\n                                                    other_wallets,\n                                                }}\n                                                components={{\n                                                    bold: <Typography className={classes.bold} component=\"span\" />,\n                                                    br: <br />,\n                                                }}\n                                            />\n                                        </Typography>\n                                    ),\n                                })\n                                if (!confirmed) return\n                            }\n                            await WalletRemoveModal.openAndWaitForClose({\n                                title: t.remove(),\n                                wallet,\n                            })\n                        }}\n                        width={368}\n                        color=\"error\"\n                        className={classes.removeWalletButton}>\n                        {t.popups_wallet_settings_remove_wallet()}\n                    </ActionButton>\n                </Box>\n            )}\n        </div>\n    )\n})\n\nexport default WalletSettings\n"],"names":["NetworkPluginID","useQuery","useWallet","Services","useConnectedOrigins","wallet","PLUGIN_EVM","address","Wallet","getAllConnectedOrigins","enabled","networkMode","makeStyles","alpha","useStyles","theme","content","flex","display","flexDirection","overflow","list","padding","flexGrow","primaryItem","margin","background","palette","maskColor","primary","primaryItemText","fontSize","fontWeight","color","white","primaryItemSecondText","item","spacing","marginBottom","alignItems","cursor","justifyContent","bottom","borderRadius","boxShadow","main","itemText","marginLeft","walletInfo","maskBlue","border","primaryItemBox","height","itemBox","bottomAction","paddingTop","secondaryBottom","backdropFilter","ellipsis","whiteSpace","textOverflow","maxWidth","removeWalletButton","bold","confirmMessage","lineHeight","wordBreak","maxHeight","useMemo","Icons","Box","ListItem","Typography","millisecondsToMinutes","millisecondsToHours","useMaskSharedTrans","WalletAutoLockSettingModal","useWalletAutoLockTime","AutoLock","t","classes","value","minutes","undefined","className","onClick","open","title","popups_wallet_settings_auto_unlock_time_title","Time","size","second","popups_wallet_settings_auto_unlock_time","count","popups_wallet_settings_auto_unlock_time_mins","time","String","ArrowRight","useCallback","PopupModalRoutes","useModalNavigate","useCurrencyType","resolveCurrencyName","ChangeCurrency","modalNavigate","chooseCurrency","ChooseCurrency","currencyType","Currency","currency","ChangeNetwork","chooseNetwork","ChooseNetwork","Globe","popups_wallet_settings_change_network","useNavigate","PopupRoutes","useWallets","isSameAddress","ChangeOwner","cx","navigate","wallets","data","personaManagers","Identity","queryOwnedPersonaInformation","walletManager","find","x","owner","personaManager","PersonasOutline","popups_change_owner","name","nickname","ChangePaymentPasswordModal","ChangePaymentPassword","popups_wallet_settings_change_payment_password","Lock","useTheme","ConnectedOrigins","origins","ConnectedSites","Appendices","popups_wallet_connected_sites","useContacts","Contacts","contacts","totalContacts","length","state","type","BaseUser","WalletRenameModal","Rename","rename","Edit2","ShowPrivateKeyModal","ShowPrivateKey","popups_wallet_settings_enter_payment_password","PublicKey2","popups_wallet_settings_backup_wallet","ConfirmDialog","EMPTY_LIST","ActionButton","formatEthereumAddress","List","first","memo","Trans","useTitle","WalletRemoveModal","getPathIndex","path","rawIndex","split","pop","Number","parseInt","WalletSettings","allWallets","handleSwitchWallet","WalletAccount","popups_wallet_setting","siblingWallets","mnemonicId","filter","sort","a","z","msA","createdAt","getTime","msZ","pathIndexA","derivationPath","pathIndexZ","isTheFirstWallet","div","SmartPay","MaskBlue","ArrowDownRound","dense","data-hide-scrollbar","fullWidth","disabled","ownedWallets","currentWallet","other_wallets","map","join","confirmed","openAndWaitForClose","remove_wallet_title","message","i18nKey","values","components","component","br","remove","width","popups_wallet_settings_remove_wallet"],"sourceRoot":"","x_google_ignoreList":[]}