{"version":3,"file":"bundled/chunk.2666.js","mappings":"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","sources":["webpack://mask-network/./packages/mask/popups/components/AddContactInputPanel/index.tsx","webpack://mask-network/./packages/mask/popups/hooks/useGasOptionsMenu.tsx","webpack://mask-network/./packages/mask/popups/components/GasSettingMenu/index.tsx","webpack://mask-network/./packages/mask/popups/hooks/useContactsContext.ts","webpack://mask-network/./packages/mask/popups/hooks/useTokenParams.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/ContactList/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/CreateWallet/context.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/hooks/useUnConfirmedRequest.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/GasSetting/GasSetting1559.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/GasSetting/Prior1559GasSetting.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/GasSetting/index.tsx","webpack://mask-network/./packages/mask/popups/components/TransactionPreview/index.tsx","webpack://mask-network/./packages/mask/popups/components/UnlockERC20Token/index.tsx","webpack://mask-network/./packages/mask/popups/components/UnlockERC721Token/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/Interaction/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/Receive/index.tsx","webpack://mask-network/./packages/web3-hooks/evm/src/useGasLimit.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/Transfer/useDefaultGasConfig.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/Transfer/FungibleTokenSection.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/Transfer/NonFungibleTokenSection.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/Transfer/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/ImportCreateWallet/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleAsset.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/hooks/useAsset.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/hooks/useWalletAssets.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/EditNetwork/network-schema.ts","webpack://mask-network/./packages/web3-providers/src/helpers/fetchChains.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/EditNetwork/useWarnings.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/EditNetwork/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/NetworkManagement/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/SelectWallet/index.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/TabList/TabList.js","webpack://mask-network/./packages/mask/popups/pages/Wallet/utils.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/ActivityList/ActivityItem.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/ActivityList/useTransactions.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/ActivityList/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/hooks/useAssetExpand.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/AssetsList/MoreBar.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/AssetsList/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/WalletAssets/WalletCollections.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/WalletAssets/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/PriceChartRange/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/ActionGroup/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/TokenDetail/TrendingChart.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/TokenDetail/useCoinGeckoCoinId.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/TokenDetail/useCoinTrendingStats.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/TokenDetail/useTokenPrice.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/TokenDetail/useTrending.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/TokenDetail/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/TransactionDetail/useTransactionLogs.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/TransactionDetail/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/CollectibleDetail/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/Unlock/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/StartUp/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/WalletHeader/WalletSetupHeaderUI.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/hooks/useConnected.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/WalletHeader/WalletAssetsValue.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/WalletHeader/UI.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/components/WalletHeader/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/hooks/useWalletLockStatus.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletGuard/useMessageGuard.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletGuard/usePaymentPasswordGuard.ts","webpack://mask-network/./packages/mask/popups/pages/Wallet/WalletGuard/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/NoWalletGuard/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/index.tsx","webpack://mask-network/./packages/plugin-infra/src/manager/site-adaptor.ts","webpack://mask-network/./packages/shared/src/UI/components/CollectibleList/CollectibleCard.tsx","webpack://mask-network/./packages/shared/src/UI/components/CollectibleList/CollectibleItem.tsx","webpack://mask-network/./packages/shared/src/UI/components/CollectibleList/LoadingSkeleton.tsx","webpack://mask-network/./packages/shared/src/UI/components/CollectibleList/CollectibleList.tsx","webpack://mask-network/./packages/shared/src/UI/components/NFTFallbackImage/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/RestorableScroll/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useAddressType.ts","webpack://mask-network/./packages/web3-hooks/base/src/useLookupAddress.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNonFungibleAssets.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useERC20TokenAllowance.ts","webpack://mask-network/./packages/web3-shared/evm/src/helpers/addGasMargin.ts","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/LoadingButton/LoadingButton.js","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/useMutation.mjs"],"sourcesContent":["import { Icons } from '@masknet/icons'\nimport { type NetworkPluginID } from '@masknet/shared-base'\nimport { openWindow } from '@masknet/shared-base-ui'\nimport { MaskTextField, makeStyles } from '@masknet/theme'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { ExplorerResolver } from '@masknet/web3-providers'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { Box, Typography, useTheme, type BoxProps, type InputProps } from '@mui/material'\nimport { memo, useCallback, useMemo } from 'react'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport { ContactsContext } from '../../hooks/index.js'\nimport { AddContactModal } from '../../modals/modals.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    input: {\n        flex: 1,\n    },\n    toText: {\n        color: theme.palette.maskColor.second,\n        fontSize: 14,\n        fontWeight: 700,\n        height: 40,\n        minWidth: 32,\n        marginRight: theme.spacing(0.5),\n        display: 'flex',\n        alignItems: 'center',\n    },\n    receiverPanel: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    inputText: {\n        fontSize: 10,\n        paddingRight: '0px !important',\n        '&&::placeholder': {\n            color: theme.palette.maskColor.third,\n        },\n    },\n    save: {\n        color: theme.palette.maskColor.main,\n        marginRight: 4,\n    },\n    endAdornment: {\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(0.5),\n    },\n    receiver: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        color: theme.palette.maskColor.second,\n        fontSize: 13,\n    },\n    validation: {\n        color: theme.palette.maskColor.danger,\n        fontSize: 14,\n    },\n    warning: {\n        color: theme.palette.maskColor.warn,\n        fontSize: 14,\n    },\n    fieldWrapper: {\n        flex: 1,\n    },\n    linkOut: {\n        color: theme.palette.maskColor.main,\n        marginLeft: 4,\n        cursor: 'pointer',\n    },\n}))\n\ninterface Props extends BoxProps {\n    isManage?: boolean\n    autoFocus?: InputProps['autoFocus']\n}\n\nconst AddContactInputPanel = memo(function AddContactInputPanel({ isManage, autoFocus, ...props }: Props) {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const {\n        address,\n        userInput,\n        setUserInput,\n        contacts,\n        wallets,\n        inputValidationMessage: addressValidationMessage,\n        inputWarningMessage,\n    } = ContactsContext.useContainer()\n\n    const theme = useTheme()\n\n    const openAddContactModal = useCallback(() => {\n        if (!address) return\n        return AddContactModal.openAndWaitForClose({\n            title: t.wallet_add_contact(),\n            address,\n            name: '',\n        })\n    }, [address, userInput])\n\n    const isAdded = useMemo(\n        () => [...contacts, ...wallets].some((x) => isSameAddress(address, x.address)),\n        [contacts, wallets, address],\n    )\n\n    const addable = !addressValidationMessage && (address || userInput) && !isAdded\n    const shouldShowAddress = !!address && address !== userInput\n\n    return (\n        <Box padding={2} {...props} className={cx(classes.receiverPanel, props.className)}>\n            {isManage ? null : <Typography className={classes.toText}>{t.popups_wallet_transfer_to()}</Typography>}\n            <div className={classes.fieldWrapper}>\n                <MaskTextField\n                    placeholder={t.wallet_transfer_placeholder()}\n                    value={userInput}\n                    onChange={(ev) => setUserInput(ev.target.value)}\n                    wrapperProps={{ className: classes.input }}\n                    autoFocus={autoFocus}\n                    InputProps={{\n                        spellCheck: false,\n                        endAdornment: addable ? (\n                            <div className={classes.endAdornment} onClick={openAddContactModal}>\n                                <Typography className={classes.save}>{t.save()}</Typography>\n                                <Icons.AddUser size={18} color={theme.palette.maskColor.main} />\n                            </div>\n                        ) : undefined,\n                        classes: { input: classes.inputText },\n                    }}\n                />\n                {inputWarningMessage && !addressValidationMessage ? (\n                    <Typography className={classes.warning} mt={1}>\n                        {inputWarningMessage}\n                    </Typography>\n                ) : null}\n                {addressValidationMessage ? (\n                    <Typography className={classes.validation} mt={1}>\n                        {addressValidationMessage}\n                    </Typography>\n                ) : shouldShowAddress ? (\n                    <Typography className={classes.receiver} mt={1}>\n                        {address}\n                        <Icons.LinkOut\n                            size={18}\n                            className={classes.linkOut}\n                            onClick={() => openWindow(ExplorerResolver.addressLink(chainId, address))}\n                        />\n                    </Typography>\n                ) : null}\n            </div>\n        </Box>\n    )\n})\n\nexport default AddContactInputPanel\n","import { useMenuConfig } from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { useChainContext, useChainIdSupport, useGasOptions } from '@masknet/web3-hooks-base'\nimport { GasOptionType } from '@masknet/web3-shared-base'\nimport { formatWeiToGwei, type EIP1559GasConfig, type GasConfig, type GasOption } from '@masknet/web3-shared-evm'\nimport { MenuItem, Typography } from '@mui/material'\nimport { useCallback, useState } from 'react'\nimport { useMaskSharedTrans } from '../../shared-ui/index.js'\nimport { GasSettingModal } from '../modals/modals.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    paper: {\n        borderRadius: 16,\n        boxShadow: theme.palette.maskColor.bottomBg,\n    },\n    list: {\n        padding: theme.spacing(1.5),\n    },\n    item: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: theme.spacing(1, 0),\n        borderBottom: `1px solid ${theme.palette.maskColor.line}`,\n        minHeight: 'unset',\n        minWidth: 134,\n        cursor: 'pointer',\n        '&:first-of-type': {\n            paddingTop: 0,\n        },\n        '&:last-of-type': {\n            paddingBottom: 4,\n            border: 'unset',\n        },\n        '&.Mui-focusVisible': {\n            backgroundColor: 'transparent',\n        },\n    },\n    optionName: {\n        fontSize: 14,\n        lineHeight: '18px',\n        fontWeight: 700,\n    },\n    optionValue: {\n        fontSize: 14,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.third,\n    },\n}))\n\nexport function useGasOptionsMenu(\n    minimumGas: string,\n    callback: (config: GasConfig, type?: GasOptionType) => void,\n    paymentToken?: string,\n) {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const { data: gasOptions } = useGasOptions()\n\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const isSupport1559 = useChainIdSupport(NetworkPluginID.PLUGIN_EVM, 'EIP1559', chainId)\n\n    const [customGasConfig, setCustomGasConfig] = useState<GasConfig>()\n\n    const handleClickCustom = useCallback(async () => {\n        const result = await GasSettingModal.openAndWaitForClose({\n            chainId,\n            config: { gas: minimumGas, paymentToken, ...customGasConfig },\n        })\n        if (!result) return\n\n        setCustomGasConfig({\n            ...result,\n            gasPrice: result.gasPrice ? formatWeiToGwei(result.gasPrice).toFixed(2) : undefined,\n            maxFeePerGas: (result as EIP1559GasConfig).maxFeePerGas\n                ? formatWeiToGwei((result as EIP1559GasConfig).maxFeePerGas).toFixed(2)\n                : '',\n            maxPriorityFeePerGas: (result as EIP1559GasConfig).maxPriorityFeePerGas\n                ? formatWeiToGwei((result as EIP1559GasConfig).maxPriorityFeePerGas).toFixed(2)\n                : '',\n        })\n        callback(result)\n    }, [chainId, minimumGas, callback, customGasConfig, paymentToken])\n\n    const handleClick = useCallback(\n        (type?: GasOptionType, option?: GasOption) => {\n            if (!option) return\n            const config = isSupport1559\n                ? {\n                      gasOptionType: type,\n                      maxPriorityFeePerGas: option.suggestedMaxPriorityFeePerGas,\n                      maxFeePerGas: option.suggestedMaxFeePerGas,\n                  }\n                : {\n                      gasOptionType: type,\n                      gasPrice: option.suggestedMaxFeePerGas,\n                  }\n\n            callback(config, type)\n        },\n        [callback, isSupport1559],\n    )\n\n    return useMenuConfig(\n        [\n            <MenuItem\n                key=\"medium\"\n                className={classes.item}\n                onClick={() => handleClick(GasOptionType.SLOW, gasOptions?.slow)}>\n                <Typography className={classes.optionName}>{t.popups_wallet_gas_fee_settings_medium()}</Typography>\n                <Typography className={classes.optionValue}>\n                    {formatWeiToGwei(gasOptions?.slow.suggestedMaxFeePerGas ?? 0).toFixed(2)}\n                    <Typography component=\"span\">{t.wallet_transfer_gwei()}</Typography>\n                </Typography>\n            </MenuItem>,\n            <MenuItem\n                key=\"high\"\n                className={classes.item}\n                onClick={() => handleClick(GasOptionType.NORMAL, gasOptions?.normal)}>\n                <Typography className={classes.optionName}>{t.popups_wallet_gas_fee_settings_high()}</Typography>\n                <Typography className={classes.optionValue}>\n                    {formatWeiToGwei(gasOptions?.normal.suggestedMaxFeePerGas ?? 0).toFixed(2)}\n                    <Typography component=\"span\">{t.wallet_transfer_gwei()}</Typography>\n                </Typography>\n            </MenuItem>,\n            <MenuItem\n                key=\"instant\"\n                className={classes.item}\n                onClick={() => handleClick(GasOptionType.FAST, gasOptions?.fast)}>\n                <Typography className={classes.optionName}>{t.popups_wallet_gas_fee_settings_instant()}</Typography>\n                <Typography className={classes.optionValue}>\n                    {formatWeiToGwei(gasOptions?.fast.suggestedMaxFeePerGas ?? 0).toFixed(2)}\n                    <Typography component=\"span\">{t.wallet_transfer_gwei()}</Typography>\n                </Typography>\n            </MenuItem>,\n            <MenuItem key=\"custom\" className={classes.item} onClick={handleClickCustom}>\n                <Typography className={classes.optionName}>{t.popups_wallet_gas_fee_settings_custom()}</Typography>\n            </MenuItem>,\n        ],\n        {\n            classes: {\n                paper: classes.paper,\n                list: classes.list,\n            },\n            anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'right',\n            },\n        },\n    )\n}\n","import { memo, useCallback, useEffect, useMemo, useState } from 'react'\nimport { noop } from 'lodash-es'\nimport { BigNumber } from 'bignumber.js'\nimport { Box } from '@mui/system'\nimport { Typography, useTheme } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { FormattedBalance, FormattedCurrency, useGasCurrencyMenu } from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport {\n    useChainContext,\n    useChainIdSupport,\n    useFungibleToken,\n    useFungibleTokenPrice,\n    useGasOptions,\n    useNativeTokenAddress,\n} from '@masknet/web3-hooks-base'\nimport { GasOptionType, ZERO, formatBalance, formatCurrency, scale10, toFixed } from '@masknet/web3-shared-base'\nimport { type EIP1559GasConfig, type GasConfig, type ChainId, formatWeiToEther } from '@masknet/web3-shared-evm'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport { useGasOptionsMenu } from '../../hooks/index.js'\nimport { useGasRatio } from '../../hooks/useGasRatio.js'\n\ninterface GasSettingMenuProps {\n    minimumGas: string\n    initConfig?: GasConfig\n    defaultChainId?: ChainId\n    disable?: boolean\n    onChange?: (config: GasConfig) => void\n    onPaymentTokenChange?: (paymentToken: string) => void\n    /** Payment token address */\n    paymentToken?: string\n    owner?: string\n    allowMaskAsGas?: boolean\n}\n\nexport const GasSettingMenu = memo<GasSettingMenuProps>(function GasSettingMenu({\n    minimumGas,\n    defaultChainId,\n    initConfig,\n    paymentToken,\n    disable,\n    allowMaskAsGas,\n    owner,\n    onChange,\n    onPaymentTokenChange,\n}) {\n    const t = useMaskSharedTrans()\n    const theme = useTheme()\n    const gasRatio = useGasRatio(paymentToken)\n    const [gasConfig = initConfig, setGasConfig] = useState<GasConfig | undefined>()\n    const [gasOptionType, setGasOptionType] = useState<GasOptionType | undefined>(\n        initConfig?.gasOptionType ?? GasOptionType.SLOW,\n    )\n\n    const handleChange = useCallback(\n        (config: GasConfig, type?: GasOptionType) => {\n            setGasOptionType(type)\n            setGasConfig(config)\n            onChange?.(config)\n        },\n        [onChange],\n    )\n\n    const [menu, openMenu] = useGasOptionsMenu(minimumGas, !disable ? handleChange : noop, paymentToken)\n\n    const [paymentTokenMenu, openPaymentTokenMenu] = useGasCurrencyMenu(\n        NetworkPluginID.PLUGIN_EVM,\n        onPaymentTokenChange ?? noop,\n        paymentToken,\n    )\n\n    const { data: gasOptions } = useGasOptions()\n\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: defaultChainId })\n    const isSupport1559 = useChainIdSupport(NetworkPluginID.PLUGIN_EVM, 'EIP1559', chainId)\n\n    const nativeTokenAddress = useNativeTokenAddress(NetworkPluginID.PLUGIN_EVM, { chainId })\n\n    const { data: token } = useFungibleToken(\n        NetworkPluginID.PLUGIN_EVM,\n        paymentToken ? paymentToken : nativeTokenAddress,\n        undefined,\n        { chainId },\n    )\n\n    const { data: tokenPrice } = useFungibleTokenPrice(\n        NetworkPluginID.PLUGIN_EVM,\n        paymentToken ? paymentToken : nativeTokenAddress,\n    )\n\n    const gasOptionName = useMemo(() => {\n        switch (gasOptionType) {\n            case GasOptionType.FAST:\n                return t.popups_wallet_gas_fee_settings_instant()\n            case GasOptionType.NORMAL:\n                return t.popups_wallet_gas_fee_settings_high()\n            case GasOptionType.SLOW:\n                return t.popups_wallet_gas_fee_settings_medium()\n            default:\n                return t.popups_wallet_gas_fee_settings_custom()\n        }\n    }, [gasOptionType])\n\n    const totalGas = useMemo(() => {\n        if (!gasConfig) return ZERO\n        const result = new BigNumber(\n            (isSupport1559 ? (gasConfig as EIP1559GasConfig).maxFeePerGas : gasConfig.gasPrice) || ZERO,\n        ).times(minimumGas)\n\n        if (!gasRatio) return toFixed(result, 0)\n        return toFixed(result.multipliedBy(gasRatio), 0)\n    }, [gasConfig, minimumGas, gasRatio])\n\n    // If there is no init configuration, set a default config\n    useEffect(() => {\n        if (!!initConfig || !gasOptions || !onChange) return\n        const target = gasOptions[GasOptionType.SLOW]\n        const result = isSupport1559\n            ? {\n                  gasOptionType: GasOptionType.SLOW,\n                  maxPriorityFeePerGas: target.suggestedMaxPriorityFeePerGas,\n                  maxFeePerGas: target.suggestedMaxFeePerGas,\n                  gas: minimumGas,\n              }\n            : {\n                  gasOptionType: GasOptionType.SLOW,\n                  gasPrice: target.suggestedMaxFeePerGas,\n                  gas: minimumGas,\n              }\n\n        setGasConfig((prev) => {\n            if (prev) return\n            return result\n        })\n\n        onChange(result)\n    }, [onChange, initConfig, gasOptions, isSupport1559, minimumGas])\n\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <Typography fontWeight={700} fontSize={14} mr={0.5}>\n                <FormattedBalance\n                    value={totalGas}\n                    decimals={token?.decimals}\n                    significant={4}\n                    symbol={token?.symbol}\n                    formatter={formatBalance}\n                />\n                {' ≈ '}\n                <FormattedCurrency\n                    value={formatWeiToEther(totalGas).times(tokenPrice ?? 0)}\n                    options={{\n                        onlyRemainTwoOrZeroDecimal: false,\n                        customDecimalConfig: {\n                            boundary: scale10(1, -4),\n                            decimalExp: 4,\n                        },\n                    }}\n                    formatter={formatCurrency}\n                />\n            </Typography>\n            {!disable ? (\n                <Box\n                    py={0.5}\n                    px={1.5}\n                    border={`1px solid ${theme.palette.maskColor.line}`}\n                    onClick={openMenu}\n                    borderRadius={99}\n                    display=\"inline-flex\"\n                    alignItems=\"center\"\n                    columnGap={0.5}>\n                    <Typography fontWeight={700} lineHeight=\"18px\" fontSize={14}>\n                        {gasOptionName}\n                    </Typography>\n                    <Icons.Candle size={12} />\n                </Box>\n            ) : null}\n            {owner && allowMaskAsGas ? (\n                <>\n                    <Icons.ArrowDrop size={20} sx={{ ml: 0.5, cursor: 'pointer' }} onClick={openPaymentTokenMenu} />\n                    {paymentTokenMenu}\n                </>\n            ) : null}\n            {menu}\n        </Box>\n    )\n})\n","import { NetworkPluginID, type Wallet } from '@masknet/shared-base'\nimport { useAddressType, useChainContext, useContacts, useLookupAddress, useWallets } from '@masknet/web3-hooks-base'\nimport { GoPlusLabs } from '@masknet/web3-providers'\nimport { isSameAddress, type Contact } from '@masknet/web3-shared-base'\nimport { AddressType, type ChainId, isValidAddress, isValidDomain } from '@masknet/web3-shared-evm'\nimport { useMemo, useState } from 'react'\nimport { useAsync } from 'react-use'\nimport { createContainer } from 'unstated-next'\nimport { useMaskSharedTrans } from '../../shared-ui/index.js'\n\ninterface ContextOptions {\n    defaultName: string\n    defaultAddress: string\n    defaultChainId?: ChainId\n}\n\nfunction useContactsContext(\n    { defaultName, defaultChainId, defaultAddress }: ContextOptions = { defaultName: '', defaultAddress: '' },\n) {\n    const t = useMaskSharedTrans()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: defaultChainId })\n    const contacts = useContacts()\n    const wallets = useWallets()\n    const [userInput, setUserInput] = useState(defaultName || defaultAddress)\n    const { value: registeredAddress, error: resolveDomainError } = useLookupAddress(\n        NetworkPluginID.PLUGIN_EVM,\n        userInput,\n        chainId,\n    )\n    const address = useMemo(() => {\n        if (!userInput) return ''\n        if (isValidDomain(userInput) && registeredAddress) {\n            return registeredAddress\n        }\n        if (isValidAddress(userInput)) return userInput\n        // UserInput is wallet name\n        const matches = [...wallets, ...contacts].filter((x) => x.name === userInput)\n        if (!matches.length) return defaultAddress\n        const contact: Wallet | Contact =\n            matches.length > 1\n                ? // There might be wallets or contacts with the same name\n                  matches.find((x) => isSameAddress(x.address, defaultAddress)) || matches[0]\n                : matches[0]\n        return contact.address\n    }, [userInput, defaultAddress, registeredAddress, contacts, wallets])\n\n    const { value: addressType } = useAddressType(NetworkPluginID.PLUGIN_EVM, address, {\n        chainId,\n    })\n\n    const { value: security } = useAsync(async () => {\n        if (!isValidAddress(address)) return\n        return GoPlusLabs.getAddressSecurity(chainId, address)\n    }, [chainId, address])\n\n    const isMaliciousAddress = security && Object.values(security).filter((x) => x === '1').length > 1\n\n    const inputValidationMessage = useMemo(() => {\n        if (isMaliciousAddress) return t.wallets_transfer_error_address_scam()\n        if (!userInput || address) return ''\n        if (!(isValidAddress(userInput) || isValidDomain(userInput))) {\n            return t.wallets_transfer_error_invalid_address()\n        }\n        if (isValidDomain(userInput) && (resolveDomainError || !registeredAddress)) {\n            return t.wallets_transfer_error_invalid_domain()\n        }\n        return ''\n    }, [userInput, resolveDomainError, registeredAddress, isMaliciousAddress])\n\n    const inputWarningMessage = useMemo(() => {\n        if (addressType === AddressType.Contract) return t.wallets_transfer_warning_contract_address()\n        return ''\n    }, [addressType])\n\n    return {\n        contacts,\n        wallets,\n        address,\n        userInput,\n        setUserInput,\n        inputValidationMessage,\n        inputWarningMessage,\n    }\n}\n\nexport const ContactsContext = createContainer(useContactsContext)\nContactsContext.Provider.displayName = 'ContactsContextProvider'\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainId } from '@masknet/web3-hooks-base'\nimport { getNativeTokenAddress, type ChainId } from '@masknet/web3-shared-evm'\nimport { useSearchParams } from 'react-router-dom'\n\nexport function useTokenParams() {\n    const [params, setParams] = useSearchParams()\n    const defaultChainId = useChainId(NetworkPluginID.PLUGIN_EVM)\n    const rawChainId = params.get('chainId')\n    const chainId: ChainId = rawChainId ? Number.parseInt(rawChainId, 10) : defaultChainId\n    const rawAddress = params.get('address')\n    const address = rawAddress || getNativeTokenAddress(chainId)\n\n    return { chainId, address, rawChainId, rawAddress, params, setParams }\n}\n\n/**\n * No fallback for non-fungible token\n */\nexport function useNonFungibleTokenParams() {\n    const [params, setParams] = useSearchParams()\n    const defaultChainId = useChainId(NetworkPluginID.PLUGIN_EVM)\n    const rawChainId = params.get('nft:chainId')\n    const chainId: ChainId = rawChainId ? Number.parseInt(rawChainId, 10) : defaultChainId\n    const address = params.get('nft:address')\n    const tokenId = params.get('nft:tokenId')\n\n    return { chainId, address, tokenId, params, setParams }\n}\n","import { memo, useCallback, useContext, useEffect } from 'react'\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom'\nimport urlcat from 'urlcat'\nimport { Box, Link, List, ListItem, MenuItem, Typography, useTheme, type ListItemProps } from '@mui/material'\nimport { type NetworkPluginID, PopupRoutes } from '@masknet/shared-base'\nimport { ActionButton, makeStyles } from '@masknet/theme'\nimport { useChainContext, useWallets } from '@masknet/web3-hooks-base'\nimport { formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { Icons } from '@masknet/icons'\nimport { EmojiAvatar, FormattedAddress, useMenuConfig } from '@masknet/shared'\nimport { ExplorerResolver } from '@masknet/web3-providers'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useTitle, ContactsContext, PageTitleContext } from '../../../hooks/index.js'\nimport AddContactInputPanel from '../../../components/AddContactInputPanel/index.js'\nimport { DeleteContactModal, EditContactModal, AddContactModal } from '../../../modals/modals.js'\nimport { ContactType } from '../type.js'\n\nconst useStyles = makeStyles<{ showDivideLine?: boolean; isManage?: boolean }>()(\n    (theme, { showDivideLine, isManage }) => ({\n        root: {\n            overflowX: 'hidden',\n            height: '100%',\n        },\n        page: {\n            position: 'relative',\n            display: 'flex',\n            flexDirection: 'column',\n            overflow: 'auto',\n            height: '100%',\n        },\n        contactsPanel: {\n            display: 'flex',\n            flexDirection: 'column',\n            padding: '0',\n            maxHeight: isManage ? 470 : 400,\n            overflow: 'scroll',\n            '::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        contactsList: {\n            padding: 0,\n        },\n        nickname: {\n            color: theme.palette.maskColor.main,\n            lineHeight: '18px',\n            fontWeight: 700,\n            maxWidth: 290,\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n        },\n        identifier: {\n            fontSize: 14,\n            color: theme.palette.maskColor.second,\n            lineHeight: 1,\n            display: 'flex',\n            alignItems: 'center',\n        },\n        contactsListItem: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            paddingLeft: '16px !important',\n            paddingRight: '16px !important',\n            cursor: 'pointer',\n            '&:hover': {\n                backgroundColor: theme.palette.background.default,\n            },\n        },\n        contactsListItemInfo: {\n            display: 'flex',\n            alignItems: 'center',\n        },\n        contactTitle: {\n            color: theme.palette.maskColor.main,\n            fontSize: 14,\n            fontWeight: 700,\n            paddingLeft: 16,\n        },\n        icon: {\n            fontSize: 18,\n            height: 18,\n            width: 18,\n            cursor: 'pointer',\n            marginLeft: 4,\n        },\n        menu: {\n            padding: '4px 0px 8px 0px',\n            borderRadius: '16px',\n        },\n        menuItem: {\n            padding: '8px 12px',\n            width: 140,\n            minHeight: 'unset',\n            '&:first-of-type': showDivideLine\n                ? {\n                      '&:after': {\n                          content: '\"\"',\n                          background: theme.palette.divider,\n                          bottom: 0,\n                          position: 'absolute',\n                          width: 120,\n                          height: 1,\n                      },\n                  }\n                : {},\n        },\n        optionName: {\n            fontSize: 14,\n            fontWeight: 700,\n            marginLeft: 8,\n        },\n        emojiAvatar: {\n            marginRight: 10,\n            fontSize: 14,\n        },\n        iconMore: {\n            cursor: 'pointer',\n        },\n        bottomAction: {\n            position: 'absolute',\n            display: 'flex',\n            justifyContent: 'center',\n            background: theme.palette.maskColor.secondaryBottom,\n            boxShadow: '0px 0px 20px 0px rgba(0, 0, 0, 0.05)',\n            backdropFilter: 'blur(8px)',\n            width: '100%',\n            bottom: 0,\n            zIndex: 100,\n        },\n        confirmButton: {\n            margin: '16px 0',\n        },\n    }),\n)\n\nconst ContactListUI = memo(function ContactListUI() {\n    const t = useMaskSharedTrans()\n    const theme = useTheme()\n    const { setExtension } = useContext(PageTitleContext)\n    const state = useLocation().state as\n        | {\n              type: 'send' | 'manage'\n          }\n        | undefined\n    const isManage = state?.type === 'manage'\n    const { classes } = useStyles({ isManage })\n    const wallets = useWallets()\n    const { userInput, address, contacts, inputValidationMessage } = ContactsContext.useContainer()\n    const [params] = useSearchParams()\n\n    const addContact = useCallback(() => {\n        return AddContactModal.openAndWaitForClose({\n            title: t.wallet_add_contact(),\n            address: '',\n            name: '',\n        })\n    }, [t])\n\n    useEffect(() => {\n        if (!isManage) return\n        setExtension(<Icons.Add color={theme.palette.maskColor.main} sx={{ cursor: 'pointer' }} onClick={addContact} />)\n        return () => setExtension(undefined)\n    }, [isManage])\n\n    useTitle(isManage ? t.contacts() : t.popups_send())\n\n    const navigate = useNavigate()\n    const location = useLocation()\n\n    const handleSelectContact = useCallback(\n        (addr: string, recipientName: string) => {\n            if (isManage) return\n            const path = urlcat(PopupRoutes.Transfer, {\n                ...Object.fromEntries(params.entries()),\n                recipient: addr,\n                recipientName,\n            })\n            navigate(path, {\n                state: location.state,\n            })\n        },\n        [navigate, params, location.state, isManage],\n    )\n\n    return (\n        <div className={classes.root}>\n            <Box className={classes.page}>\n                <AddContactInputPanel isManage={isManage} autoFocus />\n                <Box className={classes.contactsPanel}>\n                    {contacts.length ? (\n                        <Typography className={classes.contactTitle}>\n                            {t.wallet_transfer_my_contacts_title()}\n                        </Typography>\n                    ) : null}\n                    <List className={classes.contactsList}>\n                        {contacts.map((contact, index) => {\n                            return (\n                                <ContactListItem\n                                    key={index}\n                                    address={contact.address}\n                                    name={contact.name}\n                                    contactType={ContactType.Recipient}\n                                    onSelectContact={handleSelectContact}\n                                />\n                            )\n                        })}\n                    </List>\n                    <Typography className={classes.contactTitle}>{t.wallet_transfer_my_wallets_title()}</Typography>\n                    <List className={classes.contactsList}>\n                        {wallets.map((wallet, index) => {\n                            return (\n                                <ContactListItem\n                                    key={index}\n                                    address={wallet.address}\n                                    name={wallet.name}\n                                    contactType={ContactType.Owned}\n                                    onSelectContact={handleSelectContact}\n                                />\n                            )\n                        })}\n                    </List>\n                </Box>\n                {isManage ? null : (\n                    <Box className={classes.bottomAction}>\n                        <ActionButton\n                            fullWidth\n                            onClick={() => {\n                                const path = urlcat(PopupRoutes.Transfer, {\n                                    ...Object.fromEntries(params.entries()),\n                                    recipient: address,\n                                })\n                                navigate(path, {\n                                    state: location.state,\n                                })\n                            }}\n                            width={368}\n                            className={classes.confirmButton}\n                            disabled={!!inputValidationMessage || !userInput}>\n                            {t.next()}\n                        </ActionButton>\n                    </Box>\n                )}\n            </Box>\n        </div>\n    )\n})\n\ninterface ContactListItemProps extends ListItemProps {\n    address: string\n    name: string\n    contactType: ContactType\n    onSelectContact?: (address: string, name: string) => void\n}\n\nfunction ContactListItem({ address, name, contactType, onSelectContact, ...rest }: ContactListItemProps) {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles({ showDivideLine: contactType === ContactType.Recipient })\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const theme = useTheme()\n\n    const editContact = useCallback(() => {\n        return EditContactModal.openAndWaitForClose({\n            title: t.wallet_edit_contact(),\n            address,\n            name,\n            type: contactType,\n        })\n    }, [address, name, contactType, t])\n\n    const deleteContact = useCallback(() => {\n        return DeleteContactModal.openAndWaitForClose({\n            title: t.wallet_delete_contact(),\n            address,\n            name,\n        })\n    }, [address, name, t])\n\n    const menuOptions = [\n        {\n            name: t.edit(),\n            icon: <Icons.Edit2 size={20} color={theme.palette.maskColor.second} />,\n            handler: editContact,\n        },\n        {\n            name: t.delete(),\n            icon: <Icons.Decrease size={20} color={theme.palette.maskColor.second} />,\n            handler: deleteContact,\n        },\n    ]\n\n    const [menu, openMenu, _, isOpenMenu] = useMenuConfig(\n        menuOptions.map((option, index) => (\n            <MenuItem key={index} className={classes.menuItem} onClick={option.handler}>\n                {option.icon}\n                <Typography className={classes.optionName}>{option.name}</Typography>\n            </MenuItem>\n        )),\n        {\n            anchorSibling: false,\n            anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'right',\n            },\n            transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right',\n            },\n            classes: { paper: classes.menu },\n        },\n    )\n\n    return (\n        <ListItem\n            classes={{ root: classes.contactsListItem }}\n            onClick={() => !isOpenMenu && onSelectContact?.(address, name)}\n            {...rest}>\n            <div className={classes.contactsListItemInfo}>\n                <EmojiAvatar value={address} className={classes.emojiAvatar} sx={{ width: 24, height: 24 }} />\n                <div>\n                    <Typography className={classes.nickname}>{name}</Typography>\n                    <Typography className={classes.identifier}>\n                        <FormattedAddress address={address} formatter={formatEthereumAddress} size={4} />\n                        <Link\n                            onClick={(event) => event.stopPropagation()}\n                            href={ExplorerResolver.addressLink(chainId, address ?? '')}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\">\n                            <Icons.PopupLink className={classes.icon} color={theme.palette.maskColor.second} />\n                        </Link>\n                    </Typography>\n                </div>\n            </div>\n            {contactType === ContactType.Recipient ? (\n                <Icons.More\n                    size={24}\n                    className={classes.iconMore}\n                    onClick={(event) => {\n                        event.stopPropagation()\n                        openMenu(event)\n                    }}\n                />\n            ) : null}\n            {menu}\n        </ListItem>\n    )\n}\n\nfunction ContactList() {\n    return (\n        <ContactsContext.Provider>\n            <ContactListUI />\n        </ContactsContext.Provider>\n    )\n}\n\nexport default ContactList\n","import { useState } from 'react'\nimport { createContainer } from 'unstated-next'\n\nfunction useDeriveState() {\n    return useState(false)\n}\n\nexport const DeriveStateContext = createContainer(useDeriveState)\n","import { omit } from 'lodash-es'\nimport { useEffect } from 'react'\nimport { useAsyncRetry } from 'react-use'\nimport type { JsonRpcPayload } from 'web3-core-helpers'\nimport { PayloadEditor } from '@masknet/web3-shared-evm'\nimport { useChainContext, useNativeTokenAddress, useWeb3State } from '@masknet/web3-hooks-base'\nimport { CrossIsolationMessages, ECKeyIdentifier, NetworkPluginID } from '@masknet/shared-base'\nimport Services from '#services'\n\nexport const useUnconfirmedRequest = () => {\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { TransactionFormatter } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n    const nativeTokenAddress = useNativeTokenAddress()\n\n    const result = useAsyncRetry(async () => {\n        const payload = await Services.Wallet.topUnconfirmedRequest()\n        if (!payload) return\n\n        const computedPayload = PayloadEditor.fromPayload(payload).config\n        const formatterTransaction = await TransactionFormatter?.formatTransaction(chainId, computedPayload)\n        const transactionContext = await TransactionFormatter?.createContext(chainId, computedPayload)\n        return {\n            owner: payload.owner,\n            identifier: payload.identifier ? ECKeyIdentifier.from(payload.identifier).unwrapOr(undefined) : undefined,\n            paymentToken: payload.paymentToken,\n            allowMaskAsGas: payload.allowMaskAsGas,\n            payload: omit(payload, 'owner', 'identifier', 'paymentToken') as JsonRpcPayload,\n            computedPayload,\n            formatterTransaction,\n            transactionContext,\n        }\n    }, [chainId, TransactionFormatter, nativeTokenAddress])\n\n    useEffect(() => {\n        return CrossIsolationMessages.events.requestsUpdated.on(result.retry)\n    }, [result.retry])\n\n    return result\n}\n","import { memo, useEffect, useMemo, useState } from 'react'\nimport { useAsync, useAsyncFn, useUpdateEffect } from 'react-use'\nimport { useNavigate } from 'react-router-dom'\nimport { Controller, useForm } from 'react-hook-form'\nimport { isEmpty } from 'lodash-es'\nimport { z as zod } from 'zod'\nimport { toHex, fromWei } from 'web3-utils'\nimport { BigNumber } from 'bignumber.js'\nimport { makeStyles } from '@masknet/theme'\nimport { formatGweiToEther, formatGweiToWei, formatWeiToEther, formatWeiToGwei } from '@masknet/web3-shared-evm'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { Typography } from '@mui/material'\nimport { LoadingButton } from '@mui/lab'\nimport { NetworkPluginID, PopupRoutes, NUMERIC_INPUT_REGEXP_PATTERN } from '@masknet/shared-base'\nimport {\n    formatCurrency,\n    GasOptionType,\n    isGreaterThan,\n    isGreaterThanOrEqualTo,\n    isLessThan,\n    isLessThanOrEqualTo,\n    isPositive,\n    multipliedBy,\n    toFixed,\n    TransactionDescriptorType,\n} from '@masknet/web3-shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { useGasOptions, useNativeToken, useNativeTokenPrice } from '@masknet/web3-hooks-base'\nimport { useUnconfirmedRequest } from '../hooks/useUnConfirmedRequest.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { StyledInput } from '../../../components/StyledInput/index.js'\nimport Services from '#services'\nimport { FormattedCurrency } from '@masknet/shared'\n\nconst useStyles = makeStyles()((theme) => ({\n    options: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3,1fr)',\n        gap: 10,\n        cursor: 'pointer',\n        width: '100%',\n        overflowX: 'scroll',\n        '& > *': {\n            backgroundColor: '#f7f9fa',\n            borderRadius: 8,\n            padding: 10,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n        },\n    },\n    optionsTitle: {\n        color: '#7B8192',\n        fontSize: 16,\n        lineHeight: '22px',\n    },\n    optionsContent: {\n        fontSize: 11,\n    },\n    gasUSD: {\n        color: '#7B8192',\n        fontSize: 12,\n        lineHeight: '14px',\n        wordBreak: 'break-all',\n    },\n    label: {\n        color: theme.palette.primary.main,\n        fontSize: 12,\n        lineHeight: '16px',\n        margin: '10px 0',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    selected: {\n        backgroundColor: theme.palette.primary.main,\n        '& > *': {\n            color: `${theme.palette.primary.contrastText}!important`,\n        },\n    },\n    button: {\n        fontWeight: 600,\n        marginTop: 10,\n        padding: '9px 10px',\n        borderRadius: 20,\n    },\n    unit: {\n        color: '#7B8192',\n        fontSize: 12,\n        lineHeight: '16px',\n        flex: 1,\n        marginLeft: '0.5em',\n    },\n    price: {\n        fontSize: 12,\n        lineHeight: '16px',\n        color: '#15181B',\n    },\n    disabled: {\n        opacity: 0.5,\n        backgroundColor: '#1C68F3!important',\n        color: '#ffffff!important',\n    },\n}))\n\nconst HIGH_FEE_WARNING_MULTIPLIER = 1.5\n\nexport const GasSetting1559 = memo(() => {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const navigate = useNavigate()\n    const [selected, setOption] = useState<number | null>(null)\n    const [getGasLimitError, setGetGasLimitError] = useState(false)\n    const { data: nativeToken } = useNativeToken(NetworkPluginID.PLUGIN_EVM)\n    const { data: nativeTokenPrice = 0 } = useNativeTokenPrice(NetworkPluginID.PLUGIN_EVM, {\n        chainId: nativeToken?.chainId,\n    })\n\n    const { value, loading: getValueLoading } = useUnconfirmedRequest()\n    const { data: gasOptions, isLoading: getGasOptionsLoading } = useGasOptions(NetworkPluginID.PLUGIN_EVM)\n\n    // #region Gas options\n    const options = useMemo(\n        () => [\n            {\n                title: t.popups_wallet_gas_fee_settings_low(),\n                content: gasOptions?.[GasOptionType.SLOW],\n            },\n            {\n                title: t.popups_wallet_gas_fee_settings_medium(),\n                content: gasOptions?.[GasOptionType.NORMAL],\n            },\n            {\n                title: t.popups_wallet_gas_fee_settings_high(),\n                content: gasOptions?.[GasOptionType.FAST],\n            },\n        ],\n        [gasOptions],\n    )\n    // #endregion\n\n    // #region If the payload type be TRANSFER or INTERACTION, get the gas from the payload\n    const gas = useMemo(() => {\n        if (\n            value &&\n            (value?.formatterTransaction?.type === TransactionDescriptorType.TRANSFER ||\n                value?.formatterTransaction?.type === TransactionDescriptorType.INTERACTION)\n        ) {\n            return new BigNumber(value?.formatterTransaction?._tx.gas ?? 0).toNumber()\n        }\n        return 0\n    }, [value])\n    // #endregion\n\n    // #region If the payload type be TRANSFER or INTERACTION, estimate min gas limit by tx data\n    const { value: minGasLimit } = useAsync(async () => {\n        if (\n            value &&\n            (value?.formatterTransaction?.type === TransactionDescriptorType.TRANSFER ||\n                value?.formatterTransaction?.type === TransactionDescriptorType.INTERACTION)\n        ) {\n            try {\n                return Web3.estimateTransaction?.({\n                    data: value.formatterTransaction._tx.data,\n                    from: value.formatterTransaction._tx.from,\n                    to: value.formatterTransaction._tx.to,\n                    value: value.formatterTransaction._tx.value,\n                })\n            } catch {\n                setGetGasLimitError(true)\n                return 0\n            }\n        }\n\n        return 0\n    }, [value])\n    // #endregion\n\n    // #region Form field define schema\n    const schema = useMemo(() => {\n        return zod\n            .object({\n                gasLimit: zod\n                    .string()\n                    .min(1, t.wallet_transfer_error_gas_limit_absence())\n                    .refine(\n                        (gasLimit) => isGreaterThanOrEqualTo(gasLimit, minGasLimit ?? 0),\n                        t.popups_wallet_gas_fee_settings_min_gas_limit_tips({ limit: String(minGasLimit) }),\n                    ),\n                maxPriorityFeePerGas: zod\n                    .string()\n                    .min(1, t.wallet_transfer_error_max_priority_fee_absence())\n                    .refine(isPositive, t.wallet_transfer_error_max_priority_gas_fee_positive()),\n                maxFeePerGas: zod.string().min(1, t.wallet_transfer_error_max_fee_absence()),\n            })\n            .refine((data) => isLessThanOrEqualTo(data.maxPriorityFeePerGas, data.maxFeePerGas), {\n                message: t.wallet_transfer_error_max_priority_gas_fee_imbalance(),\n                path: ['maxFeePerGas'],\n            })\n    }, [minGasLimit, gasOptions])\n    // #endregion\n\n    const {\n        control,\n        handleSubmit,\n        setValue,\n        setError,\n        watch,\n        formState: { errors },\n    } = useForm<zod.infer<typeof schema>>({\n        mode: 'onChange',\n        resolver: zodResolver(schema),\n        defaultValues: {\n            gasLimit: new BigNumber(gas).toString(),\n            maxPriorityFeePerGas: '',\n            maxFeePerGas: '0',\n        },\n        context: {\n            minGasLimit,\n            gasOptions,\n        },\n    })\n\n    // #region If the payload type be TRANSFER or INTERACTION and there are maxFeePerGas and maxPriorityFeePerGas parameters on tx, set them to the form data\n    useUpdateEffect(() => {\n        if (\n            value?.formatterTransaction?.type === TransactionDescriptorType.TRANSFER ||\n            value?.formatterTransaction?.type === TransactionDescriptorType.INTERACTION\n        ) {\n            if (value?.formatterTransaction._tx.maxFeePerGas && value?.formatterTransaction._tx.maxPriorityFeePerGas) {\n                setValue(\n                    'maxPriorityFeePerGas',\n                    fromWei(toFixed(value.formatterTransaction._tx.maxPriorityFeePerGas), 'gwei'),\n                )\n                setValue('maxFeePerGas', fromWei(toFixed(value.formatterTransaction._tx.maxFeePerGas), 'gwei'))\n            } else {\n                setOption(1)\n            }\n        }\n    }, [value, setValue])\n    // #endregion\n\n    // #region Set gas on tx to form data\n    useUpdateEffect(() => {\n        if (gas) setValue('gasLimit', new BigNumber(gas).toString())\n    }, [gas, setValue])\n    // #endregion\n\n    // #region If the selected changed, set the value on the option to the form data\n    useEffect(() => {\n        if (selected === null) return\n        const { content } = options[selected]\n        setValue('maxPriorityFeePerGas', formatWeiToGwei(content?.suggestedMaxPriorityFeePerGas ?? 0).toString() ?? '')\n        setValue('maxFeePerGas', formatWeiToGwei(content?.suggestedMaxFeePerGas ?? 0).toString() ?? '')\n    }, [selected, setValue, options])\n    // #endregion\n\n    const [{ loading }, handleConfirm] = useAsyncFn(\n        async (data: zod.infer<typeof schema>) => {\n            if (!value) return\n            const config = value.payload.params!.map((param) =>\n                param === 'latest'\n                    ? param\n                    : {\n                          ...param,\n                          gas: toHex(new BigNumber(data.gasLimit).toString()),\n                          maxPriorityFeePerGas: toHex(formatGweiToWei(data.maxPriorityFeePerGas).toFixed(0)),\n                          maxFeePerGas: toHex(formatGweiToWei(data.maxFeePerGas).toFixed(0)),\n                      },\n            )\n\n            await Services.Wallet.updateUnconfirmedRequest({\n                ...value.payload,\n                owner: value.owner,\n                identifier: value.identifier?.toText(),\n                paymentToken: value.paymentToken,\n                params: config,\n            })\n            navigate(-1)\n        },\n        [value],\n    )\n\n    const onSubmit = handleSubmit((data) => handleConfirm(data))\n\n    const [maxPriorityFeePerGas, maxFeePerGas, gasLimit] = watch(['maxPriorityFeePerGas', 'maxFeePerGas', 'gasLimit'])\n\n    // #region These are additional form rules that need to be prompted for but do not affect the validation of the form\n    const maxPriorFeeHelperText = useMemo(() => {\n        if (getGasOptionsLoading) return undefined\n        if (\n            isLessThan(\n                formatGweiToWei(maxPriorityFeePerGas),\n                gasOptions?.[GasOptionType.SLOW]?.suggestedMaxPriorityFeePerGas ?? 0,\n            )\n        )\n            return t.wallet_transfer_error_max_priority_gas_fee_too_low()\n        if (\n            isGreaterThan(\n                formatGweiToWei(maxPriorityFeePerGas),\n                multipliedBy(\n                    gasOptions?.[GasOptionType.FAST]?.suggestedMaxPriorityFeePerGas ?? 0,\n                    HIGH_FEE_WARNING_MULTIPLIER,\n                ),\n            )\n        )\n            return t.wallet_transfer_error_max_priority_gas_fee_too_high()\n        return undefined\n    }, [maxPriorityFeePerGas, gasOptions, getGasOptionsLoading])\n\n    const maxFeeGasHelperText = useMemo(() => {\n        if (getGasOptionsLoading) return undefined\n        if (isLessThan(formatGweiToWei(maxFeePerGas), gasOptions?.[GasOptionType.SLOW]?.estimatedBaseFee ?? 0))\n            return t.wallet_transfer_error_max_fee_too_low()\n        if (\n            isGreaterThan(\n                formatGweiToWei(maxFeePerGas),\n                multipliedBy(gasOptions?.[GasOptionType.FAST]?.suggestedMaxFeePerGas ?? 0, HIGH_FEE_WARNING_MULTIPLIER),\n            )\n        )\n            return t.wallet_transfer_error_max_fee_too_high()\n        return undefined\n    }, [maxFeePerGas, gasOptions, getGasOptionsLoading])\n    // #endregion\n\n    // #region If the payload is consumed it needs to be redirected\n    useUpdateEffect(() => {\n        if (!value && !getValueLoading) {\n            navigate(PopupRoutes.Wallet, { replace: true })\n        }\n    }, [value, getValueLoading])\n    // #endregion\n\n    // #region If the estimate gas be 0, Set error\n    useUpdateEffect(() => {\n        if (getGasLimitError) setError('gasLimit', { message: 'Cant not get estimate gas from contract' })\n    }, [getGasLimitError])\n\n    return (\n        <>\n            <div className={classes.options}>\n                {options.map(({ title, content }, index) => (\n                    <div\n                        key={index}\n                        onClick={() => setOption(index)}\n                        className={selected === index ? classes.selected : undefined}>\n                        <Typography className={classes.optionsTitle}>{title}</Typography>\n                        <Typography component=\"div\" className={classes.optionsContent}>\n                            {formatWeiToGwei(content?.suggestedMaxFeePerGas ?? 0).toFixed(2)}\n                            <Typography variant=\"inherit\" component=\"span\">\n                                {t.wallet_transfer_gwei()}\n                            </Typography>\n                        </Typography>\n                        <Typography className={classes.gasUSD}>\n                            ≈{' '}\n                            <FormattedCurrency\n                                value={formatWeiToEther(content?.suggestedMaxFeePerGas ?? 0)\n                                    .times(nativeTokenPrice)\n                                    .times(gasLimit ?? 21000)}\n                                formatter={formatCurrency}\n                            />\n                        </Typography>\n                    </div>\n                ))}\n            </div>\n            <form onSubmit={onSubmit}>\n                <Typography className={classes.label}>{t.popups_wallet_gas_fee_settings_gas_limit()}</Typography>\n                <Controller\n                    control={control}\n                    render={({ field }) => {\n                        return (\n                            <StyledInput\n                                {...field}\n                                onChange={(e) => {\n                                    setOption(null)\n                                    field.onChange(e)\n                                }}\n                                error={!!errors.gasLimit?.message}\n                                helperText={errors.gasLimit?.message}\n                                InputProps={{\n                                    inputProps: {\n                                        pattern: NUMERIC_INPUT_REGEXP_PATTERN,\n                                    },\n                                }}\n                            />\n                        )\n                    }}\n                    name=\"gasLimit\"\n                />\n                <Typography className={classes.label}>\n                    {t.popups_wallet_gas_fee_settings_max_priority_fee()}\n                    <Typography component=\"span\" className={classes.unit}>\n                        ({t.wallet_transfer_gwei()})\n                    </Typography>\n                    <Typography component=\"span\" className={classes.price}>\n                        ≈{' '}\n                        <FormattedCurrency\n                            value={formatGweiToEther(Number(maxPriorityFeePerGas))\n                                .times(nativeTokenPrice)\n                                .times(gasLimit)}\n                            formatter={formatCurrency}\n                        />\n                    </Typography>\n                </Typography>\n                <Controller\n                    control={control}\n                    render={({ field }) => (\n                        <StyledInput\n                            {...field}\n                            onChange={(e) => {\n                                setOption(null)\n                                field.onChange(e)\n                            }}\n                            error={!!errors.maxPriorityFeePerGas?.message || !!maxPriorFeeHelperText}\n                            helperText={errors.maxPriorityFeePerGas?.message || maxPriorFeeHelperText}\n                            InputProps={{\n                                inputProps: {\n                                    pattern: NUMERIC_INPUT_REGEXP_PATTERN,\n                                },\n                            }}\n                        />\n                    )}\n                    name=\"maxPriorityFeePerGas\"\n                />\n                <Typography className={classes.label}>\n                    {t.popups_wallet_gas_fee_settings_max_fee()}\n                    <Typography component=\"span\" className={classes.unit}>\n                        ({t.wallet_transfer_gwei()})\n                    </Typography>\n                    <Typography component=\"span\" className={classes.price}>\n                        ≈{' '}\n                        <FormattedCurrency\n                            value={formatGweiToEther(Number(maxFeePerGas)).times(nativeTokenPrice).times(gasLimit)}\n                            formatter={formatCurrency}\n                        />\n                    </Typography>\n                </Typography>\n                <Controller\n                    control={control}\n                    render={({ field }) => (\n                        <StyledInput\n                            {...field}\n                            onChange={(e) => {\n                                setOption(null)\n                                field.onChange(e)\n                            }}\n                            error={!!errors.maxFeePerGas?.message || !!maxFeeGasHelperText}\n                            helperText={errors.maxFeePerGas?.message || maxFeeGasHelperText}\n                            InputProps={{\n                                inputProps: {\n                                    pattern: NUMERIC_INPUT_REGEXP_PATTERN,\n                                },\n                            }}\n                        />\n                    )}\n                    name=\"maxFeePerGas\"\n                />\n            </form>\n            <LoadingButton\n                loading={loading}\n                variant=\"contained\"\n                fullWidth\n                classes={{ root: classes.button, disabled: classes.disabled }}\n                disabled={!isEmpty(errors)}\n                onClick={onSubmit}>\n                {t.confirm()}\n            </LoadingButton>\n        </>\n    )\n})\n","import { memo, useEffect, useMemo, useState } from 'react'\nimport { useAsync, useAsyncFn, useUpdateEffect } from 'react-use'\nimport { Controller, useForm } from 'react-hook-form'\nimport { useNavigate } from 'react-router-dom'\nimport { BigNumber } from 'bignumber.js'\nimport { isEmpty } from 'lodash-es'\nimport { toHex } from 'web3-utils'\nimport { z as zod } from 'zod'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { NetworkPluginID, NUMERIC_INPUT_REGEXP_PATTERN, PopupRoutes } from '@masknet/shared-base'\nimport { Typography } from '@mui/material'\nimport { LoadingButton } from '@mui/lab'\nimport { useChainContext, useGasOptions, useNativeToken, useNativeTokenPrice } from '@masknet/web3-hooks-base'\nimport {\n    ChainId,\n    formatGweiToWei,\n    formatWeiToGwei,\n    type ChainIdOptionalRecord,\n    formatWeiToEther,\n} from '@masknet/web3-shared-evm'\nimport { makeStyles } from '@masknet/theme'\nimport { Web3 } from '@masknet/web3-providers'\nimport { formatCurrency, GasOptionType, isLessThan, pow10, TransactionDescriptorType } from '@masknet/web3-shared-base'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useUnconfirmedRequest } from '../hooks/useUnConfirmedRequest.js'\nimport { StyledInput } from '../../../components/StyledInput/index.js'\nimport Services from '#services'\nimport { FormattedCurrency } from '@masknet/shared'\n\nconst useStyles = makeStyles()((theme) => ({\n    options: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3,1fr)',\n        gap: 10,\n        cursor: 'pointer',\n        width: '100%',\n        overflowX: 'scroll',\n        '& > *': {\n            backgroundColor: '#f7f9fa',\n            borderRadius: 8,\n            padding: 10,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n        },\n    },\n    optionsTitle: {\n        color: '#7B8192',\n        fontSize: 16,\n        lineHeight: '22px',\n    },\n    optionsContent: {\n        fontSize: 11,\n    },\n    gasUSD: {\n        color: '#7B8192',\n        fontSize: 12,\n        lineHeight: '14px',\n        wordBreak: 'break-all',\n    },\n    label: {\n        color: theme.palette.primary.main,\n        fontSize: 12,\n        lineHeight: '16px',\n        margin: '10px 0',\n    },\n    selected: {\n        backgroundColor: theme.palette.primary.main,\n        '& > *': {\n            color: theme.palette.primary.contrastText,\n        },\n    },\n    button: {\n        fontWeight: 600,\n        marginTop: 10,\n        padding: '9px 10px',\n        borderRadius: 20,\n    },\n    disabled: {\n        opacity: 0.5,\n        backgroundColor: '#1C68F3!important',\n        color: '#ffffff!important',\n    },\n}))\n\nconst minGasPriceOfChain: ChainIdOptionalRecord<BigNumber.Value> = {\n    [ChainId.BSC]: pow10(9).multipliedBy(5),\n    [ChainId.Conflux]: pow10(9).multipliedBy(5),\n    [ChainId.Matic]: pow10(9).multipliedBy(30),\n    [ChainId.Astar]: pow10(9).multipliedBy(5), // 5 Gwei\n}\n\nexport const Prior1559GasSetting = memo(() => {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const { data: gasOptions_ } = useGasOptions(NetworkPluginID.PLUGIN_EVM)\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { value, loading: getValueLoading } = useUnconfirmedRequest()\n    const navigate = useNavigate()\n    const [selected, setOption] = useState<number | null>(null)\n    const { data: nativeToken } = useNativeToken(NetworkPluginID.PLUGIN_EVM)\n    const { data: nativeTokenPrice = 0 } = useNativeTokenPrice(NetworkPluginID.PLUGIN_EVM, {\n        chainId: nativeToken?.chainId,\n    })\n\n    // #region Get gas options from debank\n    const gasOptions = useMemo(() => {\n        return {\n            slow: gasOptions_?.[GasOptionType.SLOW].suggestedMaxFeePerGas ?? 0,\n            standard: gasOptions_?.[GasOptionType.NORMAL].suggestedMaxFeePerGas ?? 0,\n            fast: gasOptions_?.[GasOptionType.FAST].suggestedMaxFeePerGas ?? 0,\n        }\n    }, [chainId, gasOptions_])\n    // #endregion\n\n    const options = useMemo(\n        () =>\n            gasOptions\n                ? [\n                      {\n                          title: t.popups_wallet_gas_fee_settings_low(),\n                          gasPrice: gasOptions.slow,\n                      },\n                      {\n                          title: t.popups_wallet_gas_fee_settings_medium(),\n                          gasPrice: gasOptions.standard,\n                      },\n                      {\n                          title: t.popups_wallet_gas_fee_settings_high(),\n                          gasPrice: gasOptions.fast,\n                      },\n                  ]\n                : null,\n        [gasOptions],\n    )\n\n    const gas = useMemo(() => {\n        if (\n            value &&\n            (value?.formatterTransaction?.type === TransactionDescriptorType.TRANSFER ||\n                value?.formatterTransaction?.type === TransactionDescriptorType.INTERACTION)\n        ) {\n            return new BigNumber(value?.formatterTransaction?._tx.gas ?? 0).toNumber()\n        }\n        return 0\n    }, [value])\n\n    const { value: minGasLimit } = useAsync(async () => {\n        if (\n            value &&\n            (value?.formatterTransaction?.type === TransactionDescriptorType.TRANSFER ||\n                value?.formatterTransaction?.type === TransactionDescriptorType.INTERACTION)\n        ) {\n            try {\n                return Web3.estimateTransaction?.(value.formatterTransaction._tx) ?? 0\n            } catch {\n                return 0\n            }\n        }\n\n        return 0\n    }, [value])\n\n    const schema = useMemo(() => {\n        return zod.object({\n            gasLimit: zod\n                .string()\n                .min(1, t.wallet_transfer_error_gas_limit_absence())\n                .refine(\n                    (gasLimit) => new BigNumber(gasLimit).gte(minGasLimit ?? 0),\n                    t.popups_wallet_gas_fee_settings_min_gas_limit_tips({ limit: String(minGasLimit) }),\n                ),\n            gasPrice: zod.string().min(1, t.wallet_transfer_error_gas_price_absence()),\n        })\n    }, [minGasLimit])\n\n    const {\n        control,\n        handleSubmit,\n        setValue,\n        formState: { errors },\n    } = useForm<zod.infer<typeof schema>>({\n        mode: 'onChange',\n        resolver: zodResolver(schema),\n        defaultValues: {\n            gasLimit: '',\n            gasPrice: '',\n        },\n        context: {\n            minGasLimit,\n        },\n    })\n\n    useUpdateEffect(() => {\n        if (\n            value?.formatterTransaction?.type === TransactionDescriptorType.TRANSFER ||\n            value?.formatterTransaction?.type === TransactionDescriptorType.INTERACTION\n        ) {\n            // if rpc payload contain gas price, set it to default values\n            if (value?.formatterTransaction._tx.gasPrice) {\n                const minGasPrice = minGasPriceOfChain[chainId]\n                // if the gas price in payload is lower than minimum value\n                if (minGasPrice && isLessThan(value.formatterTransaction._tx.gasPrice, minGasPrice)) {\n                    setValue('gasPrice', new BigNumber(minGasPrice).toString())\n                }\n                setValue('gasPrice', formatWeiToGwei(value.formatterTransaction._tx.gasPrice).toString())\n            } else {\n                setOption(1)\n            }\n        }\n    }, [value, setValue, chainId])\n\n    useUpdateEffect(() => {\n        const gasLimit = minGasLimit || gas\n        if (gasLimit) setValue('gasLimit', new BigNumber(gasLimit).toString())\n    }, [minGasLimit, gas, setValue])\n\n    useEffect(() => {\n        if (selected !== null && options) setValue('gasPrice', formatWeiToGwei(options[selected].gasPrice).toString())\n    }, [selected, setValue, options])\n\n    const [{ loading }, handleConfirm] = useAsyncFn(\n        async (data: zod.infer<typeof schema>) => {\n            if (!value) return\n            const config = value.payload.params!.map((param) => ({\n                ...param,\n                gas: toHex(new BigNumber(data.gasLimit).toString()),\n                gasPrice: toHex(formatGweiToWei(data.gasPrice).toString()),\n            }))\n            await Services.Wallet.updateUnconfirmedRequest({\n                ...value.payload,\n                params: config,\n            })\n            navigate(-1)\n        },\n        [value],\n    )\n\n    const onSubmit = handleSubmit((data) => handleConfirm(data))\n\n    useUpdateEffect(() => {\n        if (!value && !getValueLoading) {\n            navigate(PopupRoutes.Wallet, { replace: true })\n        }\n    }, [value, getValueLoading])\n\n    return (\n        <>\n            {options ? (\n                <div className={classes.options}>\n                    {options.map(({ title, gasPrice }, index) => (\n                        <div\n                            key={index}\n                            onClick={() => setOption(index)}\n                            className={selected === index ? classes.selected : undefined}>\n                            <Typography className={classes.optionsTitle}>{title}</Typography>\n                            <Typography className={classes.optionsContent}>\n                                {formatWeiToGwei(gasPrice ?? 0).toString()} Gwei\n                            </Typography>\n                            <Typography className={classes.gasUSD}>\n                                ≈{' '}\n                                <FormattedCurrency\n                                    value={formatWeiToEther(gasPrice)\n                                        .times(nativeTokenPrice)\n                                        .times(minGasLimit || 21000)}\n                                    formatter={formatCurrency}\n                                />\n                            </Typography>\n                        </div>\n                    ))}\n                </div>\n            ) : null}\n            <form onSubmit={onSubmit}>\n                <Typography className={classes.label}>{t.popups_wallet_gas_fee_settings_gas_limit()}</Typography>\n                <Controller\n                    control={control}\n                    render={({ field }) => {\n                        return (\n                            <StyledInput\n                                {...field}\n                                onChange={(e) => {\n                                    setOption(null)\n                                    field.onChange(e)\n                                }}\n                                error={!!errors.gasLimit?.message}\n                                helperText={errors.gasLimit?.message}\n                                InputProps={{\n                                    inputProps: {\n                                        pattern: NUMERIC_INPUT_REGEXP_PATTERN,\n                                    },\n                                }}\n                            />\n                        )\n                    }}\n                    name=\"gasLimit\"\n                />\n                <Typography className={classes.label}>{t.popups_wallet_gas_price()}</Typography>\n                <Controller\n                    control={control}\n                    render={({ field }) => (\n                        <StyledInput\n                            {...field}\n                            onChange={(e) => {\n                                setOption(null)\n                                field.onChange(e)\n                            }}\n                            error={!!errors.gasPrice?.message}\n                            helperText={errors.gasPrice?.message}\n                            InputProps={{\n                                inputProps: {\n                                    pattern: NUMERIC_INPUT_REGEXP_PATTERN,\n                                },\n                            }}\n                        />\n                    )}\n                    name=\"gasPrice\"\n                />\n            </form>\n            <LoadingButton\n                loading={loading}\n                variant=\"contained\"\n                fullWidth\n                classes={{ root: classes.button, disabled: classes.disabled }}\n                disabled={!isEmpty(errors)}\n                onClick={onSubmit}>\n                {t.confirm()}\n            </LoadingButton>\n        </>\n    )\n})\n","import { memo } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { Typography } from '@mui/material'\nimport { ChainResolver } from '@masknet/web3-providers'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useTitle } from '../../../hooks/index.js'\nimport { GasSetting1559 } from './GasSetting1559.js'\nimport { Prior1559GasSetting } from './Prior1559GasSetting.js'\n\nconst useStyles = makeStyles()(() => ({\n    container: {\n        padding: 16,\n        '& > *': {\n            marginTop: 10,\n        },\n    },\n    title: {\n        fontSize: 18,\n        lineHeight: '24px',\n        fontWeight: 500,\n    },\n    description: {\n        fontSize: 12,\n        lineHeight: '18px',\n        color: '#7B8192',\n    },\n}))\n\nconst GasSetting = memo(() => {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    useTitle(t.popups_gas_fee_settings())\n    return (\n        <main className={classes.container}>\n            <Typography className={classes.title} style={{ marginTop: 0 }}>\n                {t.popups_wallet_gas_fee_settings()}\n            </Typography>\n            <Typography className={classes.description}>{t.popups_wallet_gas_fee_settings_description()}</Typography>\n            {ChainResolver.isFeatureSupported(chainId, 'EIP1559') ? <GasSetting1559 /> : <Prior1559GasSetting />}\n        </main>\n    )\n})\n\nexport default GasSetting\n","import { makeStyles } from '@masknet/theme'\nimport { memo, useMemo } from 'react'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport {\n    TransactionDescriptorType,\n    formatBalance,\n    leftShift,\n    formatCurrency,\n    isGreaterThan,\n    pow10,\n    isSameAddress,\n} from '@masknet/web3-shared-base'\nimport { type GasConfig } from '@masknet/web3-shared-evm'\nimport { Box, Typography } from '@mui/material'\nimport {\n    useChainContext,\n    useChainIdSupport,\n    useContacts,\n    useFungibleToken,\n    useFungibleTokenPrice,\n    useNativeToken,\n    useNonFungibleAsset,\n    useReverseAddress,\n    useWeb3Others,\n} from '@masknet/web3-hooks-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { unreachable } from '@masknet/kit'\nimport { isString } from 'lodash-es'\nimport { FormattedCurrency, ImageIcon, TokenIcon } from '@masknet/shared'\nimport { GasSettingMenu } from '../GasSettingMenu/index.js'\nimport type { TransactionDetail } from '../../pages/Wallet/type.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    info: {\n        background: theme.palette.maskColor.modalTitleBg,\n        borderRadius: 8,\n        padding: theme.spacing(1.5),\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: 700,\n        lineHeight: '24px',\n    },\n    addressTitle: {\n        fontSize: 12,\n        fontWeight: 700,\n        color: theme.palette.maskColor.second,\n    },\n    tokenIcon: {\n        width: 24,\n        height: 24,\n        borderRadius: '50%',\n    },\n    amount: {\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 10,\n        fontSize: 18,\n        fontWeight: 700,\n    },\n    value: {\n        fontSize: 14,\n        lineHeight: '18px',\n    },\n    gasFeeTitle: {\n        fontSize: 14,\n        fontWeight: 700,\n        color: theme.palette.maskColor.second,\n    },\n}))\n\ninterface TransactionPreviewProps {\n    transaction?: TransactionDetail\n    paymentToken?: string\n    onConfigChange: (config: GasConfig) => void\n    onPaymentTokenChange: (paymentToken: string) => void\n}\n\nexport const TransactionPreview = memo<TransactionPreviewProps>(function TransactionPreview({\n    transaction,\n    onConfigChange,\n    paymentToken,\n    onPaymentTokenChange,\n}) {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const contacts = useContacts()\n    const Others = useWeb3Others()\n    const { title, to, tokenAddress, amount } = useMemo(() => {\n        const type = transaction?.formattedTransaction?.type\n\n        if (!type) return {}\n\n        switch (type) {\n            case TransactionDescriptorType.INTERACTION:\n                const to = transaction.formattedTransaction?.context?.methods?.find((x) =>\n                    ['transfer', 'transferFrom', 'safeTransferFrom'].includes(x.name ?? ''),\n                )?.parameters?.to\n\n                return {\n                    title: transaction.formattedTransaction?.title ?? t.popups_wallet_contract_interaction(),\n                    to: to && isString(to) ? to : transaction.computedPayload?.to,\n                    tokenAddress: transaction.formattedTransaction?.tokenInAddress,\n                    amount: transaction.formattedTransaction?.tokenInAmount ?? transaction.computedPayload.value,\n                }\n            case TransactionDescriptorType.TRANSFER:\n                return {\n                    title: t.wallet_transfer_send(),\n                    to: transaction.computedPayload.to,\n                    tokenAddress: '',\n                    amount: transaction.computedPayload.value,\n                }\n\n            case TransactionDescriptorType.DEPLOYMENT:\n            case TransactionDescriptorType.RETRY:\n            case TransactionDescriptorType.CANCEL:\n                throw new Error('Method not implemented.')\n            default:\n                unreachable(type)\n        }\n    }, [transaction])\n\n    const tokenId = transaction?.formattedTransaction?.popup?.tokenId\n\n    const { data: metadata } = useNonFungibleAsset(\n        NetworkPluginID.PLUGIN_EVM,\n        tokenId ? transaction.computedPayload.to : undefined,\n        tokenId,\n    )\n\n    const isSupport1559 = useChainIdSupport(NetworkPluginID.PLUGIN_EVM, 'EIP1559', chainId)\n\n    const { data: domain } = useReverseAddress(NetworkPluginID.PLUGIN_EVM, to)\n\n    const { data: nativeToken } = useNativeToken(NetworkPluginID.PLUGIN_EVM)\n    const { data: token } = useFungibleToken(NetworkPluginID.PLUGIN_EVM, tokenAddress || nativeToken?.address)\n    const { data: tokenPrice } = useFungibleTokenPrice(NetworkPluginID.PLUGIN_EVM, token?.address, { chainId })\n\n    const tokenValueUSD =\n        amount && tokenPrice\n            ? leftShift(amount, token?.decimals)\n                  .times(tokenPrice)\n                  .toString()\n            : '0'\n\n    const initConfig = useMemo(() => {\n        if (!transaction?.computedPayload) return\n        if (isSupport1559) {\n            if (transaction.computedPayload.maxFeePerGas && transaction.computedPayload.maxPriorityFeePerGas)\n                return {\n                    gasOptionType: transaction.gasOptionType,\n                    maxFeePerGas: transaction.computedPayload.maxFeePerGas,\n                    maxPriorityFeePerGas: transaction.computedPayload.maxPriorityFeePerGas,\n                }\n            return\n        }\n\n        if (!transaction.computedPayload.gasPrice) return\n\n        return {\n            gasPrice: transaction.computedPayload.gasPrice,\n            gasOptionType: transaction.gasOptionType,\n        }\n    }, [transaction?.computedPayload, transaction?.gasOptionType, isSupport1559])\n\n    const receiver = useMemo(() => {\n        if (domain) return Others.formatDomainName(domain)\n        const target = contacts.find((x) => isSameAddress(x.address, to))\n        return target?.name\n    }, [domain, to, contacts])\n\n    if (!transaction) return\n\n    return (\n        <Box>\n            <Box className={classes.info}>\n                <Box display=\"flex\" justifyContent=\"space-between\">\n                    <Typography className={classes.title}>{title}</Typography>\n                    {receiver ? <Typography className={classes.title}>{receiver}</Typography> : null}\n                </Box>\n                <Box mt={2} display=\"flex\" columnGap={0.5} alignItems=\"center\">\n                    <Typography className={classes.addressTitle}>{t.to()}:</Typography>\n                    <Typography fontSize={11} fontWeight={700} lineHeight=\"16px\">\n                        {to}\n                    </Typography>\n                </Box>\n            </Box>\n\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mt={3}>\n                <Typography component=\"div\" className={classes.amount}>\n                    {tokenId && metadata?.collection?.iconURL ? (\n                        <>\n                            <ImageIcon icon={metadata.collection.iconURL} className={classes.tokenIcon} />\n                            {metadata.collection.name}#{tokenId}\n                        </>\n                    ) : null}\n                    {!tokenId ? (\n                        <>\n                            <TokenIcon\n                                address={(tokenAddress || nativeToken?.address) ?? ''}\n                                chainId={chainId}\n                                name={token?.name}\n                                className={classes.tokenIcon}\n                            />\n                            {amount\n                                ? formatBalance(\n                                      amount,\n                                      token?.decimals,\n                                      4,\n                                      false,\n                                      true,\n                                      leftShift(amount, token?.decimals).isGreaterThan(1) ? 6 : 12,\n                                  )\n                                : null}\n                        </>\n                    ) : null}\n                </Typography>\n                {!isGreaterThan(tokenValueUSD, pow10(9)) && !tokenId ? (\n                    <Typography className={classes.value}>\n                        <FormattedCurrency\n                            value={tokenValueUSD}\n                            formatter={formatCurrency}\n                            options={{ onlyRemainTwoOrZeroDecimal: true }}\n                        />\n                    </Typography>\n                ) : null}\n            </Box>\n            <Box mt={3.75} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                <Typography className={classes.gasFeeTitle}>{t.popups_wallet_gas_fee()}</Typography>\n                {transaction.computedPayload.gas && !!initConfig ? (\n                    <GasSettingMenu\n                        minimumGas={transaction.computedPayload.gas}\n                        initConfig={initConfig}\n                        onChange={onConfigChange}\n                        paymentToken={paymentToken}\n                        allowMaskAsGas={transaction.allowMaskAsGas}\n                        owner={transaction.owner}\n                        onPaymentTokenChange={onPaymentTokenChange}\n                    />\n                ) : null}\n            </Box>\n        </Box>\n    )\n})\n","import { memo, useMemo, useState } from 'react'\nimport { Trans } from 'react-i18next'\nimport { Box, Button, Link, TextField, Typography, useTheme } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { NUMERIC_INPUT_REGEXP_PATTERN, NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext, useChainIdSupport, useFungibleToken, useFungibleTokenBalance } from '@masknet/web3-hooks-base'\nimport { ExplorerResolver } from '@masknet/web3-providers'\nimport { CopyButton, TokenIcon } from '@masknet/shared'\nimport { Icons } from '@masknet/icons'\nimport { isGreaterThan, isZero, leftShift, rightShift } from '@masknet/web3-shared-base'\nimport { GasSettingMenu } from '../GasSettingMenu/index.js'\nimport type { TransactionDetail } from '../../pages/Wallet/type.js'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport type { GasConfig } from '@masknet/web3-shared-evm'\n\nconst useStyles = makeStyles()((theme) => ({\n    title: {\n        fontSize: 18,\n        fontWeight: 700,\n        textAlign: 'center',\n        lineHeight: '22px',\n    },\n    tips: {\n        fontSize: 12,\n        fontWeight: 700,\n        textAlign: 'center',\n        color: theme.palette.maskColor.second,\n        marginTop: theme.spacing(1.25),\n    },\n    tokenInfo: {\n        background: theme.palette.maskColor.modalTitleBg,\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1.25),\n        display: 'flex',\n        alignItems: 'center',\n        borderRadius: 99,\n    },\n    tokenIcon: {\n        width: 24,\n        height: 24,\n        borderRadius: '50%',\n    },\n    name: {\n        fontSize: 12,\n        fontWeight: 700,\n        lineHeight: '16px',\n    },\n    address: {\n        fontSize: 12,\n        transform: 'scale(0.8333)',\n        color: theme.palette.maskColor.second,\n        fontWeight: 400,\n        transformOrigin: 'left',\n    },\n    link: {\n        width: 16,\n        height: 16,\n        color: theme.palette.maskColor.main,\n    },\n    amountInfo: {\n        marginTop: theme.spacing(3.25),\n        padding: theme.spacing(1.5),\n        borderRadius: 8,\n        border: `1px solid ${theme.palette.maskColor.line}`,\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: 10,\n    },\n    input: {\n        paddingRight: '0px !important',\n        background: theme.palette.maskColor.input,\n    },\n    max: {\n        fontWeight: 400,\n        textTransform: 'uppercase',\n    },\n    spender: {\n        color: theme.palette.maskColor.second,\n        fontSize: 12,\n        fontWeight: 700,\n        lineHeight: '16px',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    spenderAddress: {\n        marginTop: 4,\n        color: theme.palette.maskColor.main,\n        fontSize: 12,\n        fontWeight: 700,\n        lineHeight: '16px',\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 4,\n    },\n    gasFeeTitle: {\n        fontSize: 14,\n        fontWeight: 700,\n        color: theme.palette.maskColor.second,\n    },\n}))\n\ninterface UnlockERC20TokenProps {\n    transaction: TransactionDetail\n    handleChange: (amount: string) => void\n    paymentToken?: string\n    onConfigChange: (config: GasConfig) => void\n    onPaymentTokenChange: (paymentToken: string) => void\n}\n\nexport const UnlockERC20Token = memo<UnlockERC20TokenProps>(function UnlockERC20Token({\n    transaction,\n    handleChange,\n    onConfigChange,\n    onPaymentTokenChange,\n    paymentToken,\n}) {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const theme = useTheme()\n    const [value, setValue] = useState('')\n\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const isSupport1559 = useChainIdSupport(NetworkPluginID.PLUGIN_EVM, 'EIP1559', chainId)\n\n    const { data: token } = useFungibleToken(\n        NetworkPluginID.PLUGIN_EVM,\n        transaction.formattedTransaction?.tokenInAddress,\n        undefined,\n        { chainId },\n    )\n\n    const { data: balance = '0' } = useFungibleTokenBalance(\n        NetworkPluginID.PLUGIN_EVM,\n        transaction.formattedTransaction?.tokenInAddress,\n    )\n\n    const initConfig = useMemo(() => {\n        if (!transaction?.computedPayload) return\n        if (isSupport1559) {\n            if (transaction.computedPayload.maxFeePerGas && transaction.computedPayload.maxPriorityFeePerGas)\n                return {\n                    maxFeePerGas: transaction.computedPayload.maxFeePerGas,\n                    maxPriorityFeePerGas: transaction.computedPayload.maxPriorityFeePerGas,\n                }\n            return\n        }\n\n        if (!transaction.computedPayload.gasPrice) return\n\n        return {\n            gasPrice: transaction.computedPayload.gasPrice,\n        }\n    }, [transaction?.computedPayload, isSupport1559])\n\n    const tips = useMemo(() => {\n        if (isZero(value)) {\n            return t.popups_wallet_unlock_erc20_revoke_tips()\n        }\n        if (isGreaterThan(value, leftShift(balance, token?.decimals))) {\n            return t.popups_wallet_unlock_erc20_balance_too_high_tips()\n        }\n\n        return t.popups_wallet_unlock_erc20_balance_tips({ amount: value, symbol: String(token?.symbol) })\n    }, [value, balance, token])\n\n    if (!transaction.formattedTransaction) return null\n\n    return (\n        <Box>\n            <Typography className={classes.title}>\n                <Trans\n                    i18nKey=\"popups_wallet_unlock_erc20_title\"\n                    components={{ br: <br /> }}\n                    values={{ symbol: token?.symbol }}\n                />\n            </Typography>\n            <Typography className={classes.tips}>\n                <Trans i18nKey=\"popups_wallet_unlock_erc20_tips\" components={{ br: <br /> }} />\n            </Typography>\n            <Box className={classes.tokenInfo}>\n                <TokenIcon\n                    address={token?.address ?? ''}\n                    chainId={chainId}\n                    name={token?.name}\n                    className={classes.tokenIcon}\n                />\n                <Box width=\"262px\" mr=\"18px\" ml={1}>\n                    <Typography className={classes.name}>{token?.symbol}</Typography>\n                    <Typography className={classes.address}>{token?.address}</Typography>\n                </Box>\n                {token?.address ? (\n                    <Box display=\"flex\" columnGap={1} alignItems=\"center\">\n                        <CopyButton text={token.address} size={16} />\n                        <Link\n                            href={ExplorerResolver.addressLink(chainId, token.address)}\n                            className={classes.link}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\">\n                            <Icons.LinkOut size={16} />\n                        </Link>\n                    </Box>\n                ) : null}\n            </Box>\n            <Box className={classes.amountInfo}>\n                <TextField\n                    fullWidth\n                    placeholder={t.popups_wallet_unlock_erc20_placeholder()}\n                    value={value}\n                    onChange={(e) => {\n                        setValue(e.target.value)\n                        handleChange(rightShift(e.target.value, token?.decimals).toString())\n                    }}\n                    InputProps={{\n                        endAdornment: (\n                            <Button\n                                variant=\"text\"\n                                className={classes.max}\n                                onClick={() => {\n                                    setValue(leftShift(balance, token?.decimals).toString())\n                                    handleChange(balance)\n                                }}>\n                                {t.max()}\n                            </Button>\n                        ),\n                        disableUnderline: true,\n                        className: classes.input,\n                        type: 'number',\n                        inputProps: {\n                            pattern: NUMERIC_INPUT_REGEXP_PATTERN,\n                            min: 0,\n                        },\n                    }}\n                />\n                {value ? (\n                    <Typography\n                        fontSize={12}\n                        fontWeight={700}\n                        color={\n                            isGreaterThan(value, leftShift(balance, token?.decimals))\n                                ? theme.palette.maskColor.danger\n                                : theme.palette.maskColor.warn\n                        }>\n                        {tips}\n                    </Typography>\n                ) : null}\n                <Typography className={classes.name}>{t.popups_wallet_unlock_erc20_requested_by()}</Typography>\n                {transaction.formattedTransaction.popup?.spender ? (\n                    <Typography className={classes.spender} component=\"div\">\n                        {t.contract()}:\n                        <Typography className={classes.spenderAddress}>\n                            {transaction.formattedTransaction.popup?.spender}{' '}\n                            <Link\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={ExplorerResolver.addressLink(\n                                    chainId,\n                                    transaction.formattedTransaction.popup.spender,\n                                )}\n                                className={classes.link}\n                                style={{ color: theme.palette.maskColor.second }}>\n                                <Icons.LinkOut size={16} />\n                            </Link>\n                        </Typography>\n                    </Typography>\n                ) : null}\n            </Box>\n\n            <Box mt={3.75} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                <Typography className={classes.gasFeeTitle}>{t.popups_wallet_gas_fee()}</Typography>\n                {transaction.computedPayload.gas && initConfig ? (\n                    <GasSettingMenu\n                        minimumGas={transaction.computedPayload.gas}\n                        initConfig={initConfig}\n                        onChange={onConfigChange}\n                        onPaymentTokenChange={onPaymentTokenChange}\n                        owner={transaction.owner}\n                        paymentToken={paymentToken}\n                        allowMaskAsGas={transaction.allowMaskAsGas}\n                    />\n                ) : null}\n            </Box>\n        </Box>\n    )\n})\n","import { memo, useMemo } from 'react'\nimport { Trans } from 'react-i18next'\nimport { Box, Link, Typography, useTheme } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { EMPTY_LIST, NetworkPluginID } from '@masknet/shared-base'\nimport {\n    useChainContext,\n    useChainIdSupport,\n    useNetworkContext,\n    useNonFungibleCollections,\n    useWeb3Connection,\n} from '@masknet/web3-hooks-base'\nimport { ExplorerResolver } from '@masknet/web3-providers'\nimport { CopyButton, TokenIcon } from '@masknet/shared'\nimport { Icons } from '@masknet/icons'\nimport { GasSettingMenu } from '../GasSettingMenu/index.js'\nimport type { TransactionDetail } from '../../pages/Wallet/type.js'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport type { GasConfig } from '@masknet/web3-shared-evm'\nimport { useQuery } from '@tanstack/react-query'\nimport { TokenType, isSameAddress } from '@masknet/web3-shared-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    title: {\n        fontSize: 18,\n        fontWeight: 700,\n        textAlign: 'center',\n        lineHeight: '22px',\n    },\n    tips: {\n        fontSize: 12,\n        fontWeight: 700,\n        textAlign: 'center',\n        color: theme.palette.maskColor.second,\n        marginTop: theme.spacing(1.25),\n    },\n    tokenInfo: {\n        background: theme.palette.maskColor.modalTitleBg,\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1.25),\n        display: 'flex',\n        alignItems: 'center',\n        borderRadius: 99,\n    },\n    tokenIcon: {\n        width: 24,\n        height: 24,\n        borderRadius: '50%',\n    },\n    name: {\n        fontSize: 12,\n        fontWeight: 700,\n        lineHeight: '16px',\n    },\n    address: {\n        fontSize: 12,\n        transform: 'scale(0.8333)',\n        color: theme.palette.maskColor.second,\n        fontWeight: 400,\n        transformOrigin: 'left',\n    },\n    link: {\n        width: 16,\n        height: 16,\n        color: theme.palette.maskColor.main,\n    },\n    amountInfo: {\n        marginTop: theme.spacing(3.25),\n        padding: theme.spacing(1.5),\n        borderRadius: 8,\n        border: `1px solid ${theme.palette.maskColor.line}`,\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: 10,\n    },\n    spender: {\n        color: theme.palette.maskColor.second,\n        fontSize: 12,\n        fontWeight: 700,\n        lineHeight: '16px',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    spenderAddress: {\n        marginTop: 4,\n        color: theme.palette.maskColor.main,\n        fontSize: 12,\n        fontWeight: 700,\n        lineHeight: '16px',\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 4,\n    },\n    gasFeeTitle: {\n        fontSize: 14,\n        fontWeight: 700,\n        color: theme.palette.maskColor.second,\n    },\n}))\n\ninterface UnlockERC721TokenProps {\n    transaction: TransactionDetail\n\n    paymentToken?: string\n    onConfigChange: (config: GasConfig) => void\n    onPaymentTokenChange: (paymentToken: string) => void\n}\n\nexport const UnlockERC721Token = memo<UnlockERC721TokenProps>(function UnlockERC721Token({\n    transaction,\n\n    onConfigChange,\n    onPaymentTokenChange,\n    paymentToken,\n}) {\n    const { pluginID } = useNetworkContext()\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const theme = useTheme()\n\n    const { chainId, account } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const isSupport1559 = useChainIdSupport(NetworkPluginID.PLUGIN_EVM, 'EIP1559', chainId)\n\n    const connection = useWeb3Connection(pluginID, { chainId })\n\n    const { data: contract } = useQuery({\n        queryKey: ['nft-contract', chainId, transaction.computedPayload.to],\n        queryFn: () => {\n            if (!transaction.computedPayload.to) return\n            return connection.getNonFungibleTokenContract(transaction.computedPayload.to, undefined, { chainId })\n        },\n    })\n\n    const { data: collections = EMPTY_LIST } = useNonFungibleCollections(NetworkPluginID.PLUGIN_EVM, {\n        chainId,\n        account,\n    })\n\n    const collection = collections.find((x) => isSameAddress(contract?.address, x.address))\n\n    const initConfig = useMemo(() => {\n        if (!transaction?.computedPayload) return\n        if (isSupport1559) {\n            if (transaction.computedPayload.maxFeePerGas && transaction.computedPayload.maxPriorityFeePerGas)\n                return {\n                    maxFeePerGas: transaction.computedPayload.maxFeePerGas,\n                    maxPriorityFeePerGas: transaction.computedPayload.maxPriorityFeePerGas,\n                }\n            return\n        }\n\n        if (!transaction.computedPayload.gasPrice) return\n\n        return {\n            gasPrice: transaction.computedPayload.gasPrice,\n        }\n    }, [transaction?.computedPayload, isSupport1559])\n\n    if (!transaction.formattedTransaction) return null\n\n    return (\n        <Box>\n            <Typography className={classes.title}>\n                <Trans\n                    i18nKey=\"popups_wallet_unlock_erc721_title\"\n                    components={{ br: <br /> }}\n                    values={{ symbol: contract?.symbol }}\n                />\n            </Typography>\n            <Typography className={classes.tips}>\n                <Trans i18nKey=\"popups_wallet_unlock_erc721_tips\" components={{ br: <br /> }} />\n            </Typography>\n            <Box className={classes.tokenInfo}>\n                {contract?.address ? (\n                    <TokenIcon\n                        address={contract?.address}\n                        name={contract?.name}\n                        label=\"\"\n                        logoURL={collection?.iconURL ?? ''}\n                        className={classes.tokenIcon}\n                        tokenType={TokenType.NonFungible}\n                    />\n                ) : null}\n                <Box width=\"262px\" mr=\"18px\" ml={1}>\n                    <Typography className={classes.name}>{contract?.symbol}</Typography>\n                    <Typography className={classes.address}>{contract?.address}</Typography>\n                </Box>\n                {contract?.address ? (\n                    <Box display=\"flex\" columnGap={1} alignItems=\"center\">\n                        <CopyButton text={contract.address} size={16} />\n                        <Link\n                            href={ExplorerResolver.addressLink(chainId, contract.address)}\n                            className={classes.link}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\">\n                            <Icons.LinkOut size={16} />\n                        </Link>\n                    </Box>\n                ) : null}\n            </Box>\n            <Box className={classes.amountInfo}>\n                <Typography className={classes.name}>{t.popups_wallet_unlock_erc20_requested_by()}</Typography>\n                {transaction.formattedTransaction.popup?.erc721Spender ? (\n                    <Typography className={classes.spender}>\n                        {t.contract()}:\n                        <Typography className={classes.spenderAddress}>\n                            {transaction.formattedTransaction.popup?.erc721Spender}{' '}\n                            <Link\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={ExplorerResolver.addressLink(\n                                    chainId,\n                                    transaction.formattedTransaction.popup.erc721Spender,\n                                )}\n                                className={classes.link}\n                                style={{ color: theme.palette.maskColor.second }}>\n                                <Icons.LinkOut size={16} />\n                            </Link>\n                        </Typography>\n                    </Typography>\n                ) : null}\n            </Box>\n\n            <Box mt={3.75} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                <Typography className={classes.gasFeeTitle}>{t.popups_wallet_gas_fee()}</Typography>\n                {transaction.computedPayload.gas && initConfig ? (\n                    <GasSettingMenu\n                        minimumGas={transaction.computedPayload.gas}\n                        initConfig={initConfig}\n                        onChange={onConfigChange}\n                        onPaymentTokenChange={onPaymentTokenChange}\n                        owner={transaction.owner}\n                        paymentToken={paymentToken}\n                        allowMaskAsGas={transaction.allowMaskAsGas}\n                    />\n                ) : null}\n            </Box>\n        </Box>\n    )\n})\n","import urlcat from 'urlcat'\nimport { compact, mapValues, omit } from 'lodash-es'\nimport { toHex, toUtf8 } from 'web3-utils'\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAsync, useAsyncFn } from 'react-use'\nimport { useUpdateEffect } from '@react-hookz/web'\nimport { Icons } from '@masknet/icons'\nimport { Box, Typography } from '@mui/material'\nimport { useChainContext, useMessages, useWeb3State } from '@masknet/web3-hooks-base'\nimport {\n    abiCoder,\n    EthereumMethodType,\n    createJsonRpcPayload,\n    type GasConfig,\n    PayloadEditor,\n    formatEthereumAddress,\n    ChainId,\n    ErrorEditor,\n    addGasMargin,\n} from '@masknet/web3-shared-evm'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { NetworkPluginID, PopupRoutes } from '@masknet/shared-base'\nimport { ActionButton, makeStyles, usePopupCustomSnackbar } from '@masknet/theme'\nimport Services from '#services'\nimport { WalletAssetTabs } from '../type.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { SignRequestInfo } from '../../../components/SignRequestInfo/index.js'\nimport { BottomController } from '../../../components/BottomController/index.js'\nimport { TransactionPreview } from '../../../components/TransactionPreview/index.js'\nimport { LoadingPlaceholder } from '../../../components/LoadingPlaceholder/index.js'\nimport { UnlockERC20Token } from '../../../components/UnlockERC20Token/index.js'\nimport { UnlockERC721Token } from '../../../components/UnlockERC721Token/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    left: {\n        transform: 'rotate(90deg)',\n        cursor: 'pointer',\n    },\n    right: {\n        transform: 'rotate(-90deg)',\n        cursor: 'pointer',\n    },\n    disabled: {\n        color: theme.palette.maskColor.second,\n        cursor: 'unset',\n    },\n    text: {\n        fontSize: 12,\n        fontWeight: 700,\n        lineHeight: '16px',\n    },\n    arrowIcon: {\n        transition: 'transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    },\n    expand: {\n        transform: 'rotate(180deg)',\n    },\n    transactionDetail: {\n        padding: theme.spacing(1.5),\n        margin: theme.spacing(2, 0),\n        border: `1px solid ${theme.palette.maskColor.line}`,\n        borderRadius: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: 10,\n    },\n    document: {\n        color: theme.palette.maskColor.second,\n    },\n    data: {\n        fontSize: 12,\n        fontWeight: 700,\n        color: theme.palette.maskColor.second,\n        wordBreak: 'break-all',\n    },\n    itemTitle: {\n        fontSize: 12,\n        fontWeight: 700,\n        color: theme.palette.maskColor.second,\n    },\n    itemValue: {\n        fontSize: 12,\n        fontWeight: 700,\n    },\n}))\n\nconst signRequest = [\n    EthereumMethodType.ETH_SIGN,\n    EthereumMethodType.ETH_SIGN_TYPED_DATA,\n    EthereumMethodType.PERSONAL_SIGN,\n]\n\nconst approveParametersType = [\n    {\n        name: 'spender',\n        type: 'address',\n    },\n    {\n        name: 'value',\n        type: 'uint256',\n    },\n]\n\nconst Interaction = memo(function Interaction() {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles()\n    const navigate = useNavigate()\n    const [params] = useSearchParams()\n    const [index, setIndex] = useState(0)\n    const [approveAmount, setApproveAmount] = useState('')\n    const [expand, setExpand] = useState(false)\n    const [gasConfig, setGasConfig] = useState<GasConfig | undefined>()\n    const [paymentToken, setPaymentToken] = useState('')\n\n    const messages = useMessages()\n\n    const { showSnackbar } = usePopupCustomSnackbar()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { Message, TransactionFormatter } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n\n    const source = params.get('source')\n    const currentRequest = useMemo(() => {\n        if (!messages?.length) return\n        return messages[index]\n    }, [messages, index])\n\n    const message = useMemo(() => {\n        if (!currentRequest || !signRequest.includes(currentRequest.request.arguments.method)) return\n        const { method, params } = currentRequest.request.arguments\n        if (method === EthereumMethodType.ETH_SIGN || method === EthereumMethodType.ETH_SIGN_TYPED_DATA) {\n            try {\n                return toUtf8(params[1])\n            } catch {\n                return params[1]\n            }\n        } else if (method === EthereumMethodType.PERSONAL_SIGN) {\n            return params[0]\n        }\n    }, [currentRequest])\n\n    const { value: transaction, loading } = useAsync(async () => {\n        if (!currentRequest?.request) return\n\n        const payload = createJsonRpcPayload(0, currentRequest.request.arguments)\n        const computedPayload = PayloadEditor.fromPayload(payload).config\n        const formattedTransaction = await TransactionFormatter?.formatTransaction(chainId, computedPayload)\n        const transactionContext = await TransactionFormatter?.createContext(chainId, computedPayload)\n\n        return {\n            ...currentRequest.request.options,\n            payload,\n            computedPayload,\n            formattedTransaction,\n            transactionContext,\n        }\n    }, [currentRequest, chainId, TransactionFormatter])\n\n    const [{ loading: confirmLoading }, handleConfirm] = useAsyncFn(async () => {\n        try {\n            if (!currentRequest) return\n\n            let params = currentRequest.request.arguments.params\n\n            if (approveAmount) {\n                if (!transaction?.formattedTransaction?._tx.data) return\n\n                const parameters = abiCoder.decodeParameters(\n                    approveParametersType,\n                    transaction?.formattedTransaction._tx.data.slice(10),\n                )\n\n                const parametersString = abiCoder\n                    .encodeParameters(approveParametersType, [parameters.spender, toHex(approveAmount)])\n                    .slice(2)\n\n                const result = `${transaction.formattedTransaction._tx.data.slice(0, 10)}${parametersString}`\n\n                params = compact(\n                    currentRequest.request.arguments.params.map((x) =>\n                        x === 'latest'\n                            ? chainId !== ChainId.Celo\n                                ? x\n                                : undefined\n                            : {\n                                  ...x,\n                                  data: result,\n                              },\n                    ),\n                )\n            }\n\n            if (!signRequest.includes(currentRequest.request.arguments.method)) {\n                params = compact(\n                    params.map((x) => {\n                        if (x === 'latest') {\n                            if (chainId === ChainId.Celo) return\n                            return x\n                        }\n\n                        return {\n                            ...x,\n                            ...(gasConfig\n                                ? mapValues(omit(gasConfig, 'gasOptionType'), (value, key) => {\n                                      if (key === 'gasCurrency' || !value) return\n                                      return toHex(value)\n                                  })\n                                : {}),\n                            gas: toHex(addGasMargin(gasConfig?.gas ?? x.gas).toString()),\n                            chainId: toHex(x.chainId),\n                            nonce: toHex(x.nonce),\n                        }\n                    }),\n                )\n            }\n\n            const response = await Message?.approveRequest(currentRequest.ID, {\n                ...currentRequest.request,\n                arguments: {\n                    ...currentRequest.request.arguments,\n                    params,\n                },\n                options: {\n                    ...currentRequest.request.options,\n                    paymentToken,\n                },\n            })\n            const editor = response ? ErrorEditor.from(null, response) : undefined\n            if (editor?.presence) throw editor.error\n            if (source) await Services.Helper.removePopupWindow()\n            navigate(urlcat(PopupRoutes.Wallet, { tab: WalletAssetTabs.Activity }), { replace: true })\n        } catch (error) {\n            showSnackbar(\n                <Typography textAlign=\"center\" width=\"275px\">\n                    {t.popups_wallet_rpc_error()}\n                </Typography>,\n                {\n                    variant: 'error',\n                },\n            )\n        }\n    }, [\n        chainId,\n        currentRequest,\n        Message,\n        source,\n        gasConfig,\n        approveAmount,\n        transaction?.formattedTransaction?._tx.data,\n        paymentToken,\n    ])\n\n    const [{ loading: cancelLoading }, handleCancel] = useAsyncFn(async () => {\n        if (!currentRequest) return\n        await Message?.denyRequest(currentRequest.ID)\n        if (source) await Services.Helper.removePopupWindow()\n        navigate(PopupRoutes.Wallet, { replace: true })\n    }, [currentRequest, Message, source])\n\n    const [{ loading: cancelAllLoading }, handleCancelAllRequest] = useAsyncFn(async () => {\n        await Message?.denyAllRequests()\n        if (source) await Services.Helper.removePopupWindow()\n        navigate(PopupRoutes.Wallet, { replace: true })\n    }, [Message, source])\n\n    const handleChangeGasConfig = useCallback((config: GasConfig) => {\n        setGasConfig(config)\n    }, [])\n\n    const content = useMemo(() => {\n        if (currentRequest && signRequest.includes(currentRequest?.request.arguments.method)) {\n            return <SignRequestInfo message={message} source={source} />\n        }\n\n        if (transaction?.formattedTransaction?.popup?.spender) {\n            return (\n                <UnlockERC20Token\n                    onConfigChange={handleChangeGasConfig}\n                    paymentToken={paymentToken}\n                    onPaymentTokenChange={(paymentToken) => setPaymentToken(paymentToken)}\n                    transaction={transaction}\n                    handleChange={(value) => setApproveAmount(value)}\n                />\n            )\n        }\n\n        if (transaction?.formattedTransaction?.popup?.erc721Spender) {\n            return (\n                <UnlockERC721Token\n                    onConfigChange={handleChangeGasConfig}\n                    paymentToken={paymentToken}\n                    onPaymentTokenChange={(paymentToken) => setPaymentToken(paymentToken)}\n                    transaction={transaction}\n                />\n            )\n        }\n\n        return (\n            <TransactionPreview\n                transaction={transaction}\n                onConfigChange={handleChangeGasConfig}\n                paymentToken={paymentToken}\n                onPaymentTokenChange={(paymentToken) => setPaymentToken(paymentToken)}\n            />\n        )\n    }, [message, source, transaction, handleChangeGasConfig, currentRequest, paymentToken])\n\n    // clear gas config when index has been changed\n    useUpdateEffect(() => {\n        setGasConfig(undefined)\n        setExpand(false)\n        setApproveAmount('')\n        setPaymentToken('')\n    }, [index])\n\n    useEffect(() => {\n        if (!messages.length) return\n        setIndex(messages.length - 1)\n    }, [messages.length])\n\n    // update default payment token from transaction\n    useEffect(() => {\n        if (!transaction?.paymentToken) return\n\n        setPaymentToken((prev) => {\n            if (prev) return prev\n            return transaction.paymentToken ?? ''\n        })\n    }, [transaction?.paymentToken])\n\n    if (!currentRequest) return\n\n    if (loading) {\n        return <LoadingPlaceholder />\n    }\n\n    return (\n        <Box flex={1} display=\"flex\" flexDirection=\"column\">\n            <Box\n                p={2}\n                display=\"flex\"\n                flexDirection=\"column\"\n                flex={1}\n                maxHeight=\"458px\"\n                overflow=\"auto\"\n                data-hide-scrollbar>\n                {content}\n                {currentRequest && !signRequest.includes(currentRequest?.request.arguments.method) ? (\n                    <Box\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        mt={2}\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => setExpand(!expand)}>\n                        <Typography className={classes.text}>\n                            {t.popups_wallet_view_full_detail_transaction()}\n                        </Typography>\n                        <Icons.ArrowDrop\n                            size={16}\n                            sx={{ marginLeft: 0.5 }}\n                            className={cx(classes.arrowIcon, expand ? classes.expand : undefined)}\n                        />\n                    </Box>\n                ) : null}\n\n                {expand ? (\n                    <Box\n                        className={classes.transactionDetail}\n                        style={{ marginBottom: expand && messages.length <= 1 ? 0 : 16 }}>\n                        {transaction?.formattedTransaction?.popup?.spender && approveAmount ? (\n                            <>\n                                <Box display=\"flex\" alignItems=\"center\" columnGap={1.25}>\n                                    <Typography className={classes.itemTitle}>\n                                        {t.popups_wallet_unlock_erc20_approve_amount()}\n                                    </Typography>\n                                    <Typography className={classes.itemValue}>{approveAmount}</Typography>\n                                </Box>\n                                <Box display=\"flex\" alignItems=\"center\" columnGap={1.25}>\n                                    <Typography className={classes.itemTitle}>\n                                        {t.popups_wallet_unlock_erc20_granted_to()}\n                                    </Typography>\n                                    <Typography className={classes.itemValue}>\n                                        {formatEthereumAddress(transaction.formattedTransaction.popup.spender, 4)}\n                                    </Typography>\n                                </Box>\n                            </>\n                        ) : null}\n                        <Box display=\"flex\" columnGap={0.5} alignItems=\"center\">\n                            <Icons.Documents className={classes.document} size={16} />\n                            <Typography className={classes.text}>{t.data()}</Typography>\n                        </Box>\n                        {transaction?.formattedTransaction?.popup?.method ? (\n                            <Typography className={classes.text}>\n                                {t.popups_wallet_transaction_function_name({\n                                    name: transaction?.formattedTransaction.popup.method,\n                                })}\n                            </Typography>\n                        ) : null}\n                        {transaction?.formattedTransaction?._tx.data ? (\n                            <Typography className={classes.data}>\n                                {transaction.formattedTransaction._tx.data}\n                            </Typography>\n                        ) : null}\n                    </Box>\n                ) : null}\n\n                {messages.length > 1 ? (\n                    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" marginTop=\"auto\" marginBottom={9}>\n                        <Box display=\"flex\" alignItems=\"center\">\n                            <Icons.ArrowDrop\n                                size={16}\n                                className={cx(classes.left, index === 0 ? classes.disabled : undefined)}\n                                onClick={() => {\n                                    if (index === 0) return\n                                    setIndex(index - 1)\n                                }}\n                            />\n                            <Typography className={classes.text}>\n                                {t.popups_wallet_multiple_requests({\n                                    index: String(index + 1),\n                                    total: String(messages.length),\n                                })}\n                            </Typography>\n                            <Icons.ArrowDrop\n                                size={16}\n                                className={cx(\n                                    classes.right,\n                                    index === messages.length - 1 ? classes.disabled : undefined,\n                                )}\n                                onClick={() => {\n                                    if (index === messages.length - 1) return\n                                    setIndex(index + 1)\n                                }}\n                            />\n                        </Box>\n\n                        <ActionButton\n                            variant=\"text\"\n                            color=\"info\"\n                            onClick={handleCancelAllRequest}\n                            loading={cancelAllLoading}>\n                            {t.popups_wallet_reject_all_requests({ total: String(messages.length) })}\n                        </ActionButton>\n                    </Box>\n                ) : null}\n            </Box>\n            <BottomController>\n                <ActionButton loading={cancelLoading} onClick={handleCancel} fullWidth variant=\"outlined\">\n                    {t.cancel()}\n                </ActionButton>\n                <ActionButton loading={confirmLoading} onClick={handleConfirm} fullWidth>\n                    {signRequest.includes(currentRequest?.request.arguments.method) ? t.sign() : t.confirm()}\n                </ActionButton>\n            </BottomController>\n        </Box>\n    )\n})\n\nexport default Interaction\n","import { CopyButton, FormattedAddress, Icon, ImageIcon, NetworkIcon, TokenIcon } from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { useChainContext, useNetworks } from '@masknet/web3-hooks-base'\nimport { type ChainId, formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { Box, Skeleton, Typography, type AvatarProps } from '@mui/material'\nimport { memo } from 'react'\nimport { QRCode } from 'react-qrcode-logo'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useTitle, useTokenParams } from '../../../hooks/index.js'\nimport { useAsset } from '../hooks/useAsset.js'\n\nconst useStyles = makeStyles()((theme) => {\n    const isDark = theme.palette.mode === 'dark'\n    return {\n        header: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            padding: theme.spacing(2),\n        },\n        iconContainer: {\n            height: 60,\n            width: 60,\n            position: 'relative',\n        },\n        badge: {\n            position: 'absolute',\n            border: `1px solid ${theme.palette.maskColor.white}`,\n            width: 17,\n            height: 17,\n            borderRadius: '50%',\n            right: -3,\n            bottom: -3,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        name: {\n            color: theme.palette.maskColor.main,\n            marginTop: theme.spacing(1),\n            fontSize: 24,\n            fontWeight: 700,\n        },\n        address: {\n            color: theme.palette.maskColor.second,\n            marginTop: theme.spacing(1),\n            fontSize: 16,\n            height: 30,\n            display: 'flex',\n            alignItems: 'center',\n        },\n        qrcode: {\n            width: 250,\n            height: 250,\n            boxShadow: theme.palette.maskColor.bottomBg,\n            borderRadius: theme.spacing(2),\n            overflow: 'hidden',\n        },\n        halo: {\n            position: 'relative',\n            zIndex: 2,\n            overflow: 'hidden',\n            '&:before': {\n                position: 'absolute',\n                left: '-10%',\n                top: 10,\n                zIndex: 1,\n                content: '\"\"',\n                height: 256,\n                width: 256,\n                backgroundImage: isDark\n                    ? 'radial-gradient(50% 50.00% at 50% 50.00%, #443434 0%, rgba(68, 52, 52, 0.00) 100%)'\n                    : 'radial-gradient(50% 50.00% at 50% 50.00%, #FFE9E9 0%, rgba(255, 233, 233, 0.00) 100%)',\n            },\n            '&:after': {\n                position: 'absolute',\n                left: '70%',\n                top: 20,\n                zIndex: 1,\n                content: '\"\"',\n                height: 256,\n                width: 256,\n                backgroundImage: isDark\n                    ? 'radial-gradient(50% 50.00% at 50% 50.00%, #605675 0%, rgba(56, 51, 67, 0.00) 100%)'\n                    : 'radial-gradient(50% 50.00% at 50% 50.00%, #F0E9FF 0%, rgba(240, 233, 255, 0.00) 100%)',\n            },\n        },\n        qrcodeContainer: {\n            width: 282,\n            margin: theme.spacing(2, 'auto', 0),\n            padding: theme.spacing(2),\n            backgroundColor: theme.palette.maskColor.bottom,\n            position: 'relative',\n            zIndex: 10,\n        },\n        tip: {\n            fontSize: 16,\n            marginTop: 10,\n            textAlign: 'center',\n            color: theme.palette.maskColor.second,\n        },\n        copyButton: {\n            marginLeft: 8,\n            color: theme.palette.maskColor.main,\n        },\n    }\n})\n\nconst avatarProps: AvatarProps = {\n    sx: { fontSize: 26 },\n}\nexport default memo(function Receive() {\n    const { classes } = useStyles()\n    const t = useMaskSharedTrans()\n    const { account } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { chainId, address, rawAddress } = useTokenParams()\n    // No specific token but only for chain\n    const isChain = !rawAddress\n    const networks = useNetworks(NetworkPluginID.PLUGIN_EVM)\n    const currentNetwork = networks.find((network) => network.chainId === chainId)\n\n    const asset = useAsset(chainId, address ?? '', account)\n\n    useTitle(t.wallet_receive())\n\n    const name = isChain ? currentNetwork?.name : asset?.symbol\n    const MainIcon = isChain ? (\n        currentNetwork?.iconUrl ? (\n            <ImageIcon size={60} icon={currentNetwork.iconUrl} name={currentNetwork.name} />\n        ) : (\n            <Icon size={60} name={currentNetwork?.name} color={currentNetwork?.color} {...avatarProps} />\n        )\n    ) : (\n        <TokenIcon\n            chainId={chainId as ChainId}\n            address={address}\n            name={asset?.name}\n            logoURL={asset?.logoURL}\n            size={60}\n        />\n    )\n\n    return (\n        <Box>\n            <Box className={classes.header}>\n                <Box className={classes.iconContainer}>\n                    {MainIcon}\n                    {isChain || !currentNetwork ? null : (\n                        <div className={classes.badge}>\n                            <NetworkIcon\n                                pluginID={NetworkPluginID.PLUGIN_EVM}\n                                chainId={currentNetwork.chainId}\n                                size={16}\n                                network={currentNetwork}\n                            />\n                        </div>\n                    )}\n                </Box>\n                {name ? (\n                    <Typography className={classes.name}>{name}</Typography>\n                ) : (\n                    <Skeleton width={60} className={classes.name} />\n                )}\n                <Typography className={classes.address}>\n                    <FormattedAddress address={account} formatter={formatEthereumAddress} size={4} />\n                    <CopyButton text={account} size={18} className={classes.copyButton} />\n                </Typography>\n            </Box>\n            <div className={classes.halo}>\n                <div className={classes.qrcodeContainer}>\n                    <Box className={classes.qrcode}>\n                        <QRCode value={account} ecLevel=\"L\" size={220} quietZone={16} eyeRadius={100} qrStyle=\"dots\" />\n                    </Box>\n                </div>\n            </div>\n            <Typography className={classes.tip}>{t.scan_address_to_payment()}</Typography>\n        </Box>\n    )\n})\n","import { useQuery } from '@tanstack/react-query'\nimport { unreachable } from '@masknet/kit'\nimport { Contract, Web3 } from '@masknet/web3-providers'\nimport { type NetworkPluginID } from '@masknet/shared-base'\nimport { type ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { useChainContext, useNetworks } from '@masknet/web3-hooks-base'\n\nexport function useGasLimit(\n    schemaType?: SchemaType,\n    contractAddress?: string,\n    amount?: string,\n    recipient?: string,\n    tokenId?: string,\n    expectedChainId?: ChainId,\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({ chainId: expectedChainId })\n    const networks = useNetworks()\n    const network = networks.find((x) => x.chainId === chainId)\n    const options = {\n        chainId,\n        providerURL: network?.rpcUrl,\n    }\n\n    return useQuery({\n        queryKey: ['gas-limit', chainId, schemaType, account, recipient, tokenId, amount],\n        queryFn: async () => {\n            if (!recipient || schemaType === undefined) return 0\n            if ((schemaType === SchemaType.ERC20 && !amount) || !contractAddress) return 0\n            if ((schemaType === SchemaType.ERC721 && !tokenId) || !contractAddress) return 0\n\n            switch (schemaType) {\n                case SchemaType.Native:\n                    const gas = await Web3.estimateTransaction?.(\n                        {\n                            from: account,\n                            to: recipient,\n                            value: amount,\n                        },\n                        undefined,\n                        options,\n                    )\n                    return Number.parseInt(gas ?? '0', 16)\n                case SchemaType.ERC20:\n                    return Contract.getERC20Contract(contractAddress, options)\n                        ?.methods?.transfer(recipient, amount ?? 0)\n                        .estimateGas({\n                            from: account,\n                        })\n                case SchemaType.SBT:\n                case SchemaType.ERC721:\n                    return Contract.getERC721Contract(contractAddress, options)\n                        ?.methods.transferFrom(account, recipient, tokenId ?? '')\n                        .estimateGas({\n                            from: account,\n                        })\n                case SchemaType.ERC1155:\n                    throw new Error('Method not implemented.')\n                default:\n                    unreachable(schemaType)\n            }\n        },\n    })\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport { useGasOptions, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { GasOptionType } from '@masknet/web3-shared-base'\nimport type { ChainId } from '@masknet/web3-shared-evm'\n\nexport function useDefaultGasConfig(chainId: ChainId, gasLimit: string) {\n    const Others = useWeb3Others()\n    const isSupportEIP1559 = Others.chainResolver.isFeatureSupported(chainId, 'EIP1559')\n    const { data: gasOptions } = useGasOptions(NetworkPluginID.PLUGIN_EVM, {\n        chainId,\n    })\n\n    const gasOption = gasOptions?.[GasOptionType.SLOW]\n\n    if (!gasOption) return\n    return isSupportEIP1559\n        ? {\n              gasOptionType: GasOptionType.SLOW,\n              gas: gasLimit,\n              maxFeePerGas: gasOption.suggestedMaxFeePerGas,\n              maxPriorityFeePerGas: gasOption.suggestedMaxPriorityFeePerGas,\n          }\n        : {\n              gasOptionType: GasOptionType.SLOW,\n              gas: gasLimit,\n              gasPrice: gasOption.suggestedMaxFeePerGas,\n          }\n}\n","import { Icons } from '@masknet/icons'\nimport { NetworkIcon, ProgressiveText, TokenIcon, useAvailableBalance } from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { ActionButton, MaskColors, makeStyles, usePopupCustomSnackbar } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport {\n    ChainContextProvider,\n    useChainContext,\n    useFungibleToken,\n    useNetwork,\n    useWallet,\n    useWeb3Connection,\n} from '@masknet/web3-hooks-base'\nimport { useGasLimit } from '@masknet/web3-hooks-evm'\nimport { isLessThan, isLte, isZero, leftShift, minus, rightShift } from '@masknet/web3-shared-base'\nimport {\n    SchemaType,\n    isNativeTokenAddress,\n    type ChainId,\n    type GasConfig,\n    getNativeTokenAddress,\n} from '@masknet/web3-shared-evm'\nimport { Box, Input, Typography } from '@mui/material'\nimport { BigNumber } from 'bignumber.js'\nimport { memo, useCallback, useMemo, useState } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useAsyncFn } from 'react-use'\nimport { formatTokenBalance } from '../../../../shared/index.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { GasSettingMenu } from '../../../components/GasSettingMenu/index.js'\nimport { TokenPicker } from '../../../components/index.js'\nimport { useTokenParams, PopupContext } from '../../../hooks/index.js'\nimport { ChooseTokenModal } from '../../../modals/modals.js'\nimport { useDefaultGasConfig } from './useDefaultGasConfig.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    asset: {\n        padding: theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        borderRadius: 8,\n        color: theme.palette.maskColor.white,\n        backgroundColor: MaskColors.light.maskColor.primary,\n        cursor: 'pointer',\n        margin: theme.spacing(0, 2),\n    },\n    tokenPicker: {\n        margin: theme.spacing(0, 2),\n    },\n    tokenIcon: {\n        width: 36,\n        height: 36,\n    },\n    badgeIcon: {\n        position: 'absolute',\n        right: -6,\n        bottom: -4,\n        border: `1px solid ${theme.palette.common.white}`,\n        borderRadius: '50%',\n    },\n    maxButton: {\n        cursor: 'pointer',\n    },\n    label: {\n        fontSize: 14,\n        color: theme.palette.maskColor.second,\n        fontWeight: 700,\n    },\n    error: {\n        color: theme.palette.maskColor.danger,\n        margin: theme.spacing(2, 2, 0),\n    },\n    actionGroup: {\n        display: 'flex',\n        justifyContent: 'center',\n        background: theme.palette.maskColor.secondaryBottom,\n        boxShadow: '0px 0px 20px 0px rgba(0, 0, 0, 0.05)',\n        backdropFilter: 'blur(8px)',\n        gap: theme.spacing(2),\n        padding: theme.spacing(2),\n        width: '100%',\n        bottom: 0,\n        zIndex: 100,\n        marginTop: 'auto',\n    },\n}))\n\nconst ETH_GAS_LIMIT = '21000'\nconst ERC20_GAS_LIMIT = '50000'\n// Change chain in SelectNetworkSidebar is pending status, but it should affect ContactsContext\nconst PENDING_CHAIN_ID = 'pendingChainId'\nexport const FungibleTokenSection = memo(function FungibleTokenSection() {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const { chainId, address, params, setParams } = useTokenParams()\n    const { smartPayChainId } = PopupContext.useContainer()\n    const recipient = params.get('recipient')\n    const chainContextValue = useMemo(() => ({ chainId }), [chainId])\n    const navigate = useNavigate()\n    const [paymentAddress, setPaymentAddress] = useState<string>()\n\n    // Enter from wallet home page, sending token is not decided yet\n    const undecided = params.get('undecided') === 'true'\n    const locationAsset = useLocation().state?.asset as Web3Helper.FungibleAssetAll | undefined\n    const [selectedAsset = locationAsset, setSelectedAsset] = useState<Web3Helper.FungibleAssetAll>()\n    const handleSelectAsset = useCallback(\n        (asset: Web3Helper.FungibleAssetAll): void => {\n            setSelectedAsset(asset)\n            setParams(\n                (p) => {\n                    p.set('chainId', asset.chainId.toString())\n                    p.set('address', asset.address)\n                    p.delete('undecided')\n                    p.delete(PENDING_CHAIN_ID)\n                    return p.toString()\n                },\n                { replace: true },\n            )\n        },\n        [setParams],\n    )\n    const setPendingChainId = useCallback(\n        (chainId: Web3Helper.ChainIdAll | undefined) => {\n            setParams(\n                (p) => {\n                    if (!chainId) {\n                        p.delete(PENDING_CHAIN_ID)\n                    } else {\n                        p.set(PENDING_CHAIN_ID, chainId.toString())\n                    }\n                    return p.toString()\n                },\n                { replace: true },\n            )\n        },\n        [setParams],\n    )\n    const network = useNetwork(NetworkPluginID.PLUGIN_EVM, chainId)\n    const { data: token, isLoading } = useFungibleToken(NetworkPluginID.PLUGIN_EVM, address, undefined, { chainId })\n\n    const [amount, setAmount] = useState('')\n    const totalAmount = useMemo(\n        () => (amount && token?.decimals ? rightShift(amount, token.decimals).toFixed() : '0'),\n        [amount, token?.decimals],\n    )\n    const isNativeToken = isNativeTokenAddress(address)\n    const fallbackGasLimit = isNativeToken ? ETH_GAS_LIMIT : ERC20_GAS_LIMIT\n    const gasResult = useGasLimit(\n        isNativeToken ? SchemaType.Native : SchemaType.ERC20,\n        address,\n        totalAmount,\n        recipient || undefined,\n        undefined,\n        chainId,\n    )\n    const gasLimit = gasResult.data?.toString() ?? fallbackGasLimit\n    const { isLoading: isLoadingGasLimit } = gasResult\n    const defaultGasConfig = useDefaultGasConfig(chainId, gasLimit)\n    const [gasConfig = defaultGasConfig, setGasConfig] = useState<GasConfig>()\n    const patchedGasConfig = useMemo(\n        () => ({ ...gasConfig, gasCurrency: paymentAddress, gas: gasLimit }),\n        [gasConfig, paymentAddress, gasLimit],\n    )\n    const {\n        balance,\n        isLoading: isLoadingAvailableBalance,\n        isAvailableBalance,\n        isGasSufficient,\n        gasFee,\n    } = useAvailableBalance(NetworkPluginID.PLUGIN_EVM, address, patchedGasConfig as GasConfig, {\n        chainId,\n        providerURL: network?.rpcUrl,\n    })\n\n    const wallet = useWallet(NetworkPluginID.PLUGIN_EVM)\n    const { account } = useChainContext()\n    const Web3 = useWeb3Connection(NetworkPluginID.PLUGIN_EVM, {\n        account,\n        chainId,\n    })\n    const { showSnackbar } = usePopupCustomSnackbar()\n\n    const [state, transfer] = useAsyncFn(async () => {\n        if (!recipient || isZero(totalAmount) || !token?.decimals) return\n        const nativeTokenAddress = getNativeTokenAddress(chainId)\n        try {\n            await Web3.transferFungibleToken(address, recipient, totalAmount, '', {\n                overrides: gasConfig,\n                paymentToken: paymentAddress\n                    ? paymentAddress\n                    : chainId === smartPayChainId\n                    ? nativeTokenAddress\n                    : undefined,\n                chainId,\n                gasOptionType: gasConfig?.gasOptionType,\n                providerURL: network?.rpcUrl,\n            })\n        } catch (err) {\n            let message = (err as Error).message\n            message = message.includes('\"blockNumber\":') ? '' : message\n            showSnackbar(t.failed_to_transfer_token({ message }), { variant: 'error' })\n        }\n    }, [\n        address,\n        chainId,\n        recipient,\n        totalAmount,\n        token?.decimals,\n        gasConfig,\n        paymentAddress,\n        network?.rpcUrl,\n        smartPayChainId,\n    ])\n\n    if (undecided)\n        return (\n            <TokenPicker\n                className={classes.tokenPicker}\n                defaultChainId={chainId}\n                chainId={chainId}\n                address={address}\n                onSelect={handleSelectAsset}\n                onChainChange={setPendingChainId}\n            />\n        )\n\n    // Use selectedAsset balance eagerly\n    // balance passed from previous page, would be used if during fetching balance.\n    const isLoadingBalance = selectedAsset?.balance ? false : isLoadingAvailableBalance || isLoading\n    const optimisticBalance = BigNumber.max(0, minus(selectedAsset?.balance || 0, gasFee))\n    // Available token balance\n    const tokenBalance = (isLoadingAvailableBalance || isLoading) && isZero(balance) ? optimisticBalance : balance\n\n    const decimals = token?.decimals || selectedAsset?.decimals\n    const uiTokenBalance = tokenBalance && decimals ? leftShift(tokenBalance, decimals).toString() : '0'\n\n    const inputNotReady = !recipient || !amount || isLessThan(tokenBalance, totalAmount) || isLte(totalAmount, 0)\n    const tokenNotReady = !token?.decimals || isLessThan(tokenBalance, totalAmount) || !isGasSufficient\n    const transferDisabled = inputNotReady || tokenNotReady || isLoadingGasLimit\n\n    return (\n        <>\n            <Box\n                className={classes.asset}\n                data-hide-scrollbar\n                onClick={async () => {\n                    const picked = await ChooseTokenModal.openAndWaitForClose({\n                        chainId,\n                        address,\n                    })\n                    if (picked) handleSelectAsset(picked)\n                }}>\n                <Box position=\"relative\" height={36} width={36}>\n                    <TokenIcon\n                        className={classes.tokenIcon}\n                        chainId={chainId}\n                        address={address}\n                        logoURL={selectedAsset?.logoURL}\n                    />\n                    <NetworkIcon\n                        pluginID={NetworkPluginID.PLUGIN_EVM}\n                        chainId={network?.chainId as ChainId}\n                        className={classes.badgeIcon}\n                        size={16}\n                        network={network}\n                    />\n                </Box>\n                <Box mr=\"auto\" ml={2}>\n                    <ProgressiveText loading={isLoading} skeletonWidth={36}>\n                        {token?.symbol}\n                    </ProgressiveText>\n                    <ProgressiveText loading={isLoadingBalance} skeletonWidth={60}>\n                        {isAvailableBalance\n                            ? t.available_amount({\n                                  amount: formatTokenBalance(tokenBalance, token?.decimals),\n                              })\n                            : formatTokenBalance(tokenBalance, token?.decimals)}\n                    </ProgressiveText>\n                </Box>\n                <Icons.ArrowDrop size={24} />\n            </Box>\n            <Box mt={2} mx={2}>\n                <Input\n                    fullWidth\n                    disableUnderline\n                    placeholder={t.amount()}\n                    endAdornment={\n                        <Typography\n                            className={classes.maxButton}\n                            onClick={() => {\n                                if (!balance || !token?.decimals) return\n                                setAmount(uiTokenBalance)\n                            }}>\n                            {t.max()}\n                        </Typography>\n                    }\n                    value={amount}\n                    onChange={(e) => {\n                        let value = e.target.value\n                        if (!balance || !token?.decimals || !value) {\n                            setAmount(value)\n                            return\n                        }\n                        value = isLessThan(value, uiTokenBalance) ? value : uiTokenBalance\n                        return setAmount(value)\n                    }}\n                />\n            </Box>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mt={2} mx={2}>\n                <Typography className={classes.label}>{t.gas_fee()}</Typography>\n                <ChainContextProvider value={chainContextValue}>\n                    <GasSettingMenu\n                        initConfig={gasConfig}\n                        minimumGas={gasLimit}\n                        defaultChainId={chainId}\n                        paymentToken={paymentAddress}\n                        allowMaskAsGas\n                        onPaymentTokenChange={setPaymentAddress}\n                        owner={wallet?.owner}\n                        onChange={setGasConfig}\n                    />\n                </ChainContextProvider>\n            </Box>\n            {isGasSufficient ? null : (\n                <Typography className={classes.error}>{t.insufficient_funds_for_gas()}</Typography>\n            )}\n            <Box className={classes.actionGroup}>\n                <ActionButton variant=\"outlined\" fullWidth onClick={() => navigate(-2)}>\n                    {t.cancel()}\n                </ActionButton>\n                <ActionButton fullWidth onClick={transfer} disabled={transferDisabled} loading={state.loading}>\n                    {t.next()}\n                </ActionButton>\n            </Box>\n        </>\n    )\n})\n","import { CollectibleList, ElementAnchor } from '@masknet/shared'\nimport { EMPTY_LIST, NetworkPluginID } from '@masknet/shared-base'\nimport { ActionButton, LoadingBase, makeStyles, usePopupCustomSnackbar } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext, useNonFungibleAsset, useNonFungibleAssets, useWeb3Connection } from '@masknet/web3-hooks-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { isLensCollect, isLensFollower, isLensProfileAddress } from '@masknet/web3-shared-evm'\nimport { uniqWith } from 'lodash-es'\nimport { memo, useCallback, useMemo } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useNonFungibleTokenParams } from '../../../hooks/index.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        section: {\n            display: 'flex',\n            flexDirection: 'column',\n            position: 'relative',\n            height: '100%',\n            overflow: 'auto',\n            flexGrow: 1,\n        },\n        scroll: {\n            flexGrow: 1,\n            overflow: 'auto',\n            paddingBottom: theme.spacing(9),\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n        },\n        collectibleList: {\n            padding: 0,\n            flexGrow: 1,\n        },\n        actionGroup: {\n            position: 'absolute',\n            left: 0,\n            right: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            background: theme.palette.maskColor.secondaryBottom,\n            boxShadow: '0px 0px 20px 0px rgba(0, 0, 0, 0.05)',\n            backdropFilter: 'blur(8px)',\n            gap: theme.spacing(2),\n            padding: theme.spacing(2),\n            width: '100%',\n            bottom: 0,\n            zIndex: 100,\n            marginTop: 'auto',\n        },\n    }\n})\n\nfunction getCollectibleKey(token: Web3Helper.NonFungibleAssetAll) {\n    return `${token.chainId}.${token.address}.${token.tokenId}`\n}\nexport const NonFungibleTokenSection = memo(function NonFungibleTokenSection() {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const { chainId, address, tokenId, params, setParams } = useNonFungibleTokenParams()\n\n    const {\n        value: fetchedTokens = EMPTY_LIST,\n        done,\n        next,\n        loading,\n        dataUpdatedAt,\n    } = useNonFungibleAssets(NetworkPluginID.PLUGIN_EVM)\n    const tokens = useMemo(() => {\n        const filtered = fetchedTokens.filter((x) => {\n            if (isLensProfileAddress(x.address)) return false\n            if (x.metadata?.name && isLensFollower(x.metadata.name)) return false\n            if (x.collection?.name && isLensCollect(x.collection.name)) return false\n            return true\n        })\n        return uniqWith(filtered, (v1, v2) => {\n            return isSameAddress(v1.contract?.address, v2.contract?.address) && v1.tokenId === v2.tokenId\n        })\n    }, [fetchedTokens])\n\n    const hasSelected = address && tokenId\n    const selectedKey = hasSelected ? `${chainId}.${address}.${tokenId}` : undefined\n\n    const handleChange = useCallback((value: string | null) => {\n        setParams(\n            (p) => {\n                if (!value) {\n                    p.delete('nft:chainId')\n                    p.delete('nft:address')\n                    p.delete('nft:tokenId')\n                    return p.toString()\n                }\n                const [chainId, address, tokenId] = value.split('.')\n                p.set('nft:chainId', chainId)\n                p.set('nft:address', address)\n                p.set('nft:tokenId', tokenId)\n                return p.toString()\n            },\n            { replace: true },\n        )\n    }, [])\n\n    // Collectibles are lazy loading, we can't let the target token scroll into view before it's loaded\n    // So we fetch and prepend it to the list.\n    const { data: targetToken } = useNonFungibleAsset(NetworkPluginID.PLUGIN_EVM, address || '', tokenId || '', {\n        chainId,\n    })\n    const prependTokens = useMemo(() => {\n        if (!hasSelected || !targetToken) return tokens\n        const loadedTargetToken = tokens.find(\n            (x) => x.chainId === chainId && isSameAddress(x.address, address) && x.tokenId === tokenId,\n        )\n        if (loadedTargetToken) return tokens\n        return [targetToken, ...tokens]\n    }, [hasSelected, targetToken, tokens, chainId, address, tokenId])\n\n    const { account } = useChainContext()\n    const Web3 = useWeb3Connection(NetworkPluginID.PLUGIN_EVM, {\n        account,\n        chainId,\n    })\n    const recipient = params.get('recipient')\n\n    const { showSnackbar } = usePopupCustomSnackbar()\n\n    const [state, transfer] = useAsyncFn(async () => {\n        try {\n            if (!address || !tokenId || !recipient) return\n            await Web3.transferNonFungibleToken(address!, tokenId, recipient, '1')\n            return\n        } catch (error) {\n            showSnackbar(t.failed_to_transfer_nft(), { variant: 'error' })\n            return\n        }\n    }, [address, tokenId || recipient])\n\n    const tokenNotReady = !address || !tokenId\n    const disabled = tokenNotReady || state.loading\n\n    return (\n        <div className={classes.section}>\n            <div className={classes.scroll} data-hide-scrollbar>\n                <CollectibleList\n                    className={classes.collectibleList}\n                    retry={next}\n                    collectibles={prependTokens}\n                    pluginID={NetworkPluginID.PLUGIN_EVM}\n                    loading={loading || !done}\n                    columns={4}\n                    gap={1}\n                    selectable\n                    value={selectedKey}\n                    showNetworkIcon\n                    getCollectibleKey={getCollectibleKey}\n                    onChange={handleChange}\n                />\n                {done ? null : (\n                    // There might be chains that has no assets, setting key to token size might stuck the loading\n                    <ElementAnchor key={dataUpdatedAt} callback={() => next?.()}>\n                        <LoadingBase size={36} />\n                    </ElementAnchor>\n                )}\n            </div>\n            <div className={classes.actionGroup}>\n                <ActionButton fullWidth onClick={transfer} disabled={disabled} loading={state.loading}>\n                    {t.confirm()}\n                </ActionButton>\n            </div>\n        </div>\n    )\n})\n","import { MaskTabList, makeStyles } from '@masknet/theme'\nimport { TabContext, TabPanel } from '@mui/lab'\nimport { Box, Tab } from '@mui/material'\nimport { memo, useEffect, useMemo } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport AddContactInputPanel from '../../../components/AddContactInputPanel/index.js'\nimport { NormalHeader } from '../../../components/index.js'\nimport {\n    ContactsContext,\n    useParamTab,\n    useTitle,\n    useNonFungibleTokenParams,\n    useTokenParams,\n} from '../../../hooks/index.js'\nimport { FungibleTokenSection } from './FungibleTokenSection.js'\nimport { NonFungibleTokenSection } from './NonFungibleTokenSection.js'\nimport { TransferTabType } from '../type.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    page: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n        height: '100%',\n    },\n    body: {\n        flexGrow: 1,\n        // padding: theme.spacing(2, 2, 0),\n        overflow: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    panel: {\n        '&:not([hidden])': {\n            marginTop: theme.spacing(2),\n            padding: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n    },\n    tabs: {\n        flex: 'none!important',\n        paddingTop: '0px!important',\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n}))\n\nconst Transfer = memo(function Transfer() {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n\n    useTitle(t.popups_send())\n    const [params, setParams] = useSearchParams()\n    const undecided = params.get('undecided') === 'true'\n\n    const [currentTab, handleTabChange] = useParamTab<TransferTabType>(TransferTabType.Token)\n\n    const { address } = ContactsContext.useContainer()\n    useEffect(() => {\n        setParams(\n            (p) => {\n                p.set('recipient', address)\n                return p.toString()\n            },\n            { replace: true },\n        )\n    }, [address, setParams])\n\n    return (\n        <Box className={classes.page}>\n            <TabContext value={currentTab}>\n                <NormalHeader\n                    tabList={\n                        undecided ? (\n                            <MaskTabList\n                                onChange={handleTabChange}\n                                aria-label=\"persona-tabs\"\n                                classes={{ root: classes.tabs }}>\n                                <Tab label={t.popups_wallet_token()} value={TransferTabType.Token} />\n                                <Tab label={t.popups_wallet_collectible()} value={TransferTabType.NFT} />\n                            </MaskTabList>\n                        ) : null\n                    }\n                />\n                <div className={classes.body}>\n                    <AddContactInputPanel p={0} m=\"16px 16px 0\" autoFocus />\n                    <TabPanel value={TransferTabType.Token} className={classes.panel} data-hide-scrollbar>\n                        <FungibleTokenSection />\n                    </TabPanel>\n                    <TabPanel value={TransferTabType.NFT} className={classes.panel} data-hide-scrollbar>\n                        <NonFungibleTokenSection />\n                    </TabPanel>\n                </div>\n            </TabContext>\n        </Box>\n    )\n})\n\nconst TransferPage = memo(function TransferPage() {\n    const [params] = useSearchParams()\n    const defaultAddress = params.get('recipient') || ''\n    const defaultName = params.get('recipientName') || ''\n    const { chainId } = useTokenParams()\n    const { chainId: nftChainId } = useNonFungibleTokenParams()\n    const tab = params.get('tab')\n    const rawPendingChainId = params.get('pendingChainId')\n    const pendingChainId = rawPendingChainId ? Number.parseInt(rawPendingChainId, 10) : undefined\n    const defaultChainId = pendingChainId ?? (tab === TransferTabType.Token ? chainId : nftChainId)\n\n    const initialState = useMemo(\n        () => ({ defaultAddress, defaultName, defaultChainId }),\n        [defaultAddress, defaultName, defaultChainId],\n    )\n    return (\n        <ContactsContext.Provider initialState={initialState}>\n            <Transfer />\n        </ContactsContext.Provider>\n    )\n})\n\nexport default TransferPage\n","import { Icons } from '@masknet/icons'\nimport { DashboardRoutes } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Typography } from '@mui/material'\nimport { memo } from 'react'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\nimport { useAsyncFn } from 'react-use'\nimport Services from '#services'\nimport urlcat from 'urlcat'\nimport { useSearchParams } from 'react-router-dom'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        addWalletWrapper: {\n            display: 'flex',\n            width: 368,\n            padding: 12,\n            alignItems: 'center',\n            gap: 8,\n            marginBottom: 12,\n            boxShadow: '0px 0px 20px 0px rgba(0, 0, 0, 0.05)',\n            background: theme.palette.maskColor.bottom,\n            borderRadius: 8,\n            cursor: 'pointer',\n        },\n        subTitle: {\n            color: theme.palette.maskColor.main,\n            fontSize: 12,\n            fontWeight: 700,\n        },\n        description: {\n            color: theme.palette.maskColor.third,\n            fontSize: 12,\n            fontWeight: 400,\n        },\n        mnemonicIcon: {\n            background: theme.palette.maskColor.success,\n        },\n        walletIcon: {\n            background: theme.palette.maskColor.primary,\n        },\n        iconWrapper: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: 30,\n            height: 30,\n            borderRadius: '100%',\n        },\n    }\n})\n\ninterface Props {\n    /** Choose creating or importing wallet */\n    onChoose?(route: DashboardRoutes): void\n}\n\nexport const ImportCreateWallet = memo<Props>(function ImportCreateWallet({ onChoose }) {\n    const t = useMaskSharedTrans()\n    const { classes, cx, theme } = useStyles()\n    const [params] = useSearchParams()\n    const external_request = params.get('external_request')\n    const [, handleChoose] = useAsyncFn(\n        async (route: DashboardRoutes) => {\n            const hasPassword = await Services.Wallet.hasPassword()\n            const url = urlcat(hasPassword ? route : DashboardRoutes.CreateMaskWalletForm, {\n                recover: route === DashboardRoutes.RecoveryMaskWallet && !hasPassword ? true : undefined,\n                external_request,\n            })\n            await browser.tabs.create({\n                active: true,\n                url: browser.runtime.getURL(`/dashboard.html#${url}`),\n            })\n            onChoose?.(route)\n        },\n        [onChoose, external_request],\n    )\n\n    return (\n        <>\n            <Box\n                className={classes.addWalletWrapper}\n                onClick={() => handleChoose(DashboardRoutes.CreateMaskWalletMnemonic)}>\n                <div className={cx(classes.iconWrapper, classes.walletIcon)}>\n                    <Icons.Wallet size={20} color={theme.palette.maskColor.white} />\n                </div>\n                <div>\n                    <Typography className={classes.subTitle}>{t.popups_create_a_new_wallet_title()}</Typography>\n                    <Typography className={classes.description}>{t.popups_generate_a_new_wallet_address()}</Typography>\n                </div>\n            </Box>\n\n            <Box className={classes.addWalletWrapper} onClick={() => handleChoose(DashboardRoutes.RecoveryMaskWallet)}>\n                <div className={cx(classes.iconWrapper, classes.mnemonicIcon)}>\n                    <Icons.Mnemonic size={20} color={theme.palette.maskColor.white} />\n                </div>\n                <div>\n                    <Typography className={classes.subTitle}>{t.popups_import_wallets()}</Typography>\n                    <Typography className={classes.description}>{t.popups_import_wallets_description()}</Typography>\n                </div>\n            </Box>\n        </>\n    )\n})\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useQuery } from '@tanstack/react-query'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\nexport function useFungibleAsset<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    address?: string,\n    options?: ConnectionOptions<T>,\n) {\n    const Hub = useWeb3Hub(pluginID, options)\n\n    return useQuery<Web3Helper.FungibleAssetScope<S, T> | undefined>({\n        enabled: !!address,\n        queryKey: ['fungible-asset', pluginID, address, options],\n        queryFn: async () => {\n            if (!address) return\n            return Hub.getFungibleAsset(address, options)\n        },\n    })\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport { useFungibleAsset } from '@masknet/web3-hooks-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { type ChainId } from '@masknet/web3-shared-evm'\nimport { useWalletAssets } from './useWalletAssets.js'\n\n// Use token from list first, to make sure data is consistent\nexport function useAsset(chainId: ChainId, address?: string, account?: string) {\n    const { data: assets } = useWalletAssets()\n    const { data: asset } = useFungibleAsset(NetworkPluginID.PLUGIN_EVM, address, { account, chainId })\n    const matchedAsset = assets.find((x) => {\n        if (x.chainId !== chainId) return false\n        return isSameAddress(x.address, address)\n    })\n    return matchedAsset || asset\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext, useFungibleAssets } from '@masknet/web3-hooks-base'\n\nexport function useWalletAssets() {\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    return useFungibleAssets(NetworkPluginID.PLUGIN_EVM, undefined, { chainId })\n}\n","import { fetchChainId } from '@masknet/web3-providers/helpers'\nimport { isSameURL, type ReasonableNetwork } from '@masknet/web3-shared-base'\nimport { getRPCConstant, type ChainId, type NetworkType, type SchemaType } from '@masknet/web3-shared-evm'\nimport { z } from 'zod'\nimport type { useMaskSharedTrans } from '../../../../shared-ui/index.js'\n\ntype NameValidator = (name: string) => boolean | Promise<boolean>\n\n/**\n * schema with basic validation\n * duplicated name validator is injected as dependency, both frontend and\n * background can provide their own validator\n */\nfunction createBaseSchema(t: ReturnType<typeof useMaskSharedTrans>, duplicateNameValidator: NameValidator) {\n    const schema = z.object({\n        name: z.string().trim().nonempty().refine(duplicateNameValidator, t.network_already_exists()),\n        rpc: z\n            .string()\n            .trim()\n            .url(t.incorrect_rpc_url())\n            .refine((rpc) => rpc.startsWith('https'), t.rpc_requires_https()),\n        chainId: z.union([\n            z\n                .string()\n                .trim()\n                .regex(/^\\d+|0x[\\da-f]$/i, t.invalid_number())\n                .transform((v) => Number.parseInt(v, v.startsWith('0x') ? 16 : 10)),\n            z.number(),\n        ]),\n        currencySymbol: z.string().optional(),\n        explorer: z.string().url(t.incorrect_explorer_url()),\n    })\n    return schema\n}\n\nexport function createSchema(\n    t: ReturnType<typeof useMaskSharedTrans>,\n    duplicateNameValidator: NameValidator,\n    networks: Array<ReasonableNetwork<ChainId, SchemaType, NetworkType>>,\n    editingId: string | undefined,\n) {\n    const baseSchema = createBaseSchema(t, duplicateNameValidator)\n    const schema = baseSchema\n        .superRefine(async (schema, context) => {\n            if (!schema.rpc) return true\n            let rpcChainId: number\n            try {\n                rpcChainId = await fetchChainId(schema.rpc)\n            } catch (err) {\n                context.addIssue({\n                    code: z.ZodIssueCode.custom,\n                    path: ['rpc'],\n                    message: t.failed_to_fetch_chain_id(),\n                })\n                return false\n            }\n            if (!schema.chainId) return true\n            if (rpcChainId !== schema.chainId) {\n                // Background can pass i18n params by params field to frontend\n                context.addIssue({\n                    code: z.ZodIssueCode.custom,\n                    path: ['chainId'],\n                    message: t.rpc_return_different_chain_id({ chain_id: String(rpcChainId) }),\n                    params: { chain_id: rpcChainId },\n                })\n                return\n            }\n            return true\n        })\n        .superRefine((schema, context) => {\n            const { rpc } = schema\n            const network = networks.find((network) => isSameURL(network.rpcUrl, rpc) && network.ID !== editingId)\n            if (network) {\n                context.addIssue({\n                    code: z.ZodIssueCode.custom,\n                    path: ['rpc'],\n                    message: t.rpc_url_is_used_by({ name: network.name }),\n                })\n                return false\n            } else {\n                networks.some((network) => {\n                    if (getRPCConstant(network.chainId, 'RPC_URLS')?.includes(rpc)) {\n                        context.addIssue({\n                            code: z.ZodIssueCode.custom,\n                            path: ['rpc'],\n                            message: t.rpc_url_is_used_by({ name: network.name }),\n                        })\n                        return true\n                    }\n                    return false\n                })\n            }\n            return true\n        })\n    return schema\n}\n","import { Duration } from './fetchCached.js'\nimport { fetchCachedJSON } from './fetchJSON.js'\n\nexport interface ChainConfig {\n    name: string\n    chain: string\n    icon: string\n    rpc: string[]\n    features: Array<{ name: LiteralUnion<'EIP155' | 'EIP1559'> }>\n    faucets: []\n    nativeCurrency: {\n        name: string\n        symbol: string\n        decimals: number\n    }\n    infoURL: string\n    shortName: string\n    chainId: number\n    networkId: number\n    slip44: number\n    ens: {\n        registry: string\n    }\n    explorers: Array<{\n        name: string\n        url: string\n        standard: LiteralUnion<'EIP3091'>\n    }>\n}\n\nexport async function fetchChains() {\n    return fetchCachedJSON<ChainConfig[]>('https://chainid.network/chains.json', undefined, {\n        squashExpiration: 0,\n        cacheDuration: Duration.TWELVE_HOURS,\n    })\n}\n","import { EMPTY_LIST, NetworkPluginID } from '@masknet/shared-base'\nimport { useNetworks } from '@masknet/web3-hooks-base'\nimport { fetchChains } from '@masknet/web3-providers/helpers'\nimport { useQuery } from '@tanstack/react-query'\nimport { useMemo } from 'react'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\n\nexport function useWarnings(formChainId: number, formSymbol?: string) {\n    const t = useMaskSharedTrans()\n    const networks = useNetworks(NetworkPluginID.PLUGIN_EVM)\n\n    const chainIdWarning = useMemo(() => {\n        if (!formChainId) return\n        const duplicated = networks.find((x) => x.chainId === formChainId)\n        if (!duplicated?.isCustomized) return\n        return t.chain_id_is_used_by({ name: duplicated.name })\n    }, [formChainId, networks])\n    const { data: chains = EMPTY_LIST } = useQuery(['chain-list'], fetchChains)\n\n    const symbolWarning = useMemo(() => {\n        const match = chains.find((chain) => chain.chainId === formChainId)\n        if (!match) return\n        if (match.nativeCurrency.symbol !== formSymbol)\n            return t.rpc_return_different_symbol({ chain_id: String(formChainId), symbol: match.nativeCurrency.symbol })\n        return undefined\n    }, [chains, formSymbol, formChainId])\n\n    return {\n        chainIdWarning,\n        symbolWarning,\n    }\n}\n","import { zodResolver } from '@hookform/resolvers/zod'\nimport { Icons } from '@masknet/icons'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { queryClient } from '@masknet/shared-base-ui'\nimport { ActionButton, makeStyles, usePopupCustomSnackbar } from '@masknet/theme'\nimport { useChainContext, useNetworks, useWeb3State } from '@masknet/web3-hooks-base'\nimport { TokenType, type TransferableNetwork } from '@masknet/web3-shared-base'\nimport { NetworkType, SchemaType, ZERO_ADDRESS, ChainId, getRPCConstant, ProviderType } from '@masknet/web3-shared-evm'\nimport { Button, Input, Typography, alpha } from '@mui/material'\nimport { useMutation } from '@tanstack/react-query'\nimport { memo, useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { type z, type ZodCustomIssue } from 'zod'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { createSchema } from './network-schema.js'\nimport { PageTitleContext, useTitle } from '../../../hooks/index.js'\nimport { useWarnings } from './useWarnings.js'\nimport { fetchChains } from '@masknet/web3-providers/helpers'\nimport { Web3 } from '@masknet/web3-providers'\n\nconst useStyles = makeStyles()((theme) => ({\n    main: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n    },\n    form: {\n        overflow: 'auto',\n        flexGrow: 1,\n        padding: theme.spacing(0, 2, 2),\n    },\n    iconButton: {\n        padding: 0,\n        minWidth: 'auto',\n        width: 'auto',\n    },\n    footer: {\n        padding: theme.spacing(2),\n        borderRadius: 12,\n        background: alpha(theme.palette.maskColor.bottom, 0.8),\n        boxShadow: theme.palette.maskColor.bottomBg,\n        backdropFilter: 'blur(8px)',\n        display: 'flex',\n        alignItems: 'center',\n        gap: theme.spacing(2),\n    },\n    label: {\n        color: theme.palette.maskColor.second,\n        marginBottom: theme.spacing(0.5),\n        marginTop: theme.spacing(2),\n    },\n    error: {\n        color: theme.palette.maskColor.danger,\n        marginTop: theme.spacing(0.5),\n    },\n    warn: {\n        color: theme.palette.maskColor.main,\n        marginTop: theme.spacing(0.5),\n    },\n}))\n\nconst QUERY_KEY = ['system', 'wallet', 'networks']\nexport const EditNetwork = memo(function EditNetwork() {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const navigate = useNavigate()\n    const id = useParams<{ id: string }>().id\n    const chainId = id?.match(/^\\d+$/) ? Number.parseInt(id, 10) : undefined\n    const isEditing = !!id && !chainId\n    const { chainId: currentChainId, setChainId } = useChainContext()\n\n    // #region Get network\n    const { Network } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n    const networks = useNetworks(NetworkPluginID.PLUGIN_EVM)\n    const network = useMemo(() => {\n        const network = networks.find((x) => x.ID === id)\n        if (!network) return null\n        return {\n            name: network.name,\n            chainId: network.chainId,\n            rpc: network.isCustomized ? network.rpcUrl : getRPCConstant(network.chainId, 'RPC_URLS')?.[0],\n            currencySymbol: network.nativeCurrency.symbol,\n            explorer: network.explorerUrl.url,\n            isCustomized: network.isCustomized,\n        }\n    }, [chainId, networks])\n    // #endregion\n\n    const { showSnackbar } = usePopupCustomSnackbar()\n    useTitle(network ? network.name : t.network_management_add_network())\n    const { setExtension } = useContext(PageTitleContext)\n\n    const isBuiltIn = network ? !network.isCustomized : false\n    useEffect(() => {\n        if (isBuiltIn || !id || !Network) return\n        setExtension(\n            <Button\n                variant=\"text\"\n                className={classes.iconButton}\n                onClick={async () => {\n                    if (currentChainId === network?.chainId) {\n                        await Web3.switchChain?.(ChainId.Mainnet, {\n                            providerType: ProviderType.MaskWallet,\n                        })\n                        setChainId(ChainId.Mainnet)\n                    }\n                    await Network?.removeNetwork(id)\n                    showSnackbar(t.deleted_network_successfully())\n                    // Trigger UI update.\n                    queryClient.invalidateQueries(QUERY_KEY)\n                    navigate(-1)\n                }}>\n                <Icons.Trash size={24} />\n            </Button>,\n        )\n        return () => setExtension(undefined)\n    }, [isBuiltIn, id, classes.iconButton, showSnackbar, t, Network, currentChainId])\n\n    const schema = useMemo(() => {\n        return createSchema(\n            t,\n            async (name) => {\n                return !networks.find((network) => network.name === name && network.ID !== id)\n            },\n            networks,\n            id,\n        )\n    }, [t, id, networks])\n\n    type FormInputs = z.infer<typeof schema>\n    const {\n        getValues,\n        watch,\n        register,\n        setError,\n        formState: { errors, isValidating, isDirty, isValid: isFormValid },\n    } = useForm<FormInputs>({\n        mode: 'onChange',\n        resolver: zodResolver(schema),\n        defaultValues: network || {},\n    })\n    const checkZodError = useCallback(\n        (message: string) => {\n            try {\n                const issues = JSON.parse(message) as ZodCustomIssue[]\n                issues.forEach((issue) => {\n                    // We assume there is no multiple paths.\n                    setError(issue.path[0] as keyof FormInputs, {\n                        // @ts-expect-error i18n-todo: figure out type of issue.message.\n                        message: t[issue.message](issue.params),\n                    })\n                })\n            } catch {}\n            return false\n        },\n        [setError, t],\n    )\n\n    const formChainId = +watch('chainId')\n    const formSymbol = watch('currencySymbol')\n    const { chainIdWarning, symbolWarning } = useWarnings(formChainId, formSymbol)\n\n    const [isSubmitting, setIsSubmitting] = useState(false)\n    const { isLoading: isMutating, mutate } = useMutation<void, unknown, FormInputs>({\n        mutationFn: async (data) => {\n            if (!Network) return\n            setIsSubmitting(true)\n            try {\n                const parsedData = await schema.parseAsync(data)\n                const chainId = parsedData.chainId\n                let symbol = parsedData.currencySymbol\n                if (!symbol) {\n                    const chains = await queryClient.fetchQuery({\n                        queryKey: ['chain-list'],\n                        queryFn: fetchChains,\n                    })\n                    symbol = chains.find((x) => x.chainId === chainId)?.nativeCurrency.symbol\n                }\n                symbol ||= ''\n                const network: TransferableNetwork<ChainId, SchemaType, NetworkType> = {\n                    isCustomized: true,\n                    type: NetworkType.CustomNetwork,\n                    chainId,\n                    name: parsedData.name,\n                    fullName: parsedData.name,\n                    network: 'mainnet',\n                    rpcUrl: parsedData.rpc,\n                    nativeCurrency: {\n                        id: ZERO_ADDRESS,\n                        chainId,\n                        type: TokenType.Fungible,\n                        schema: SchemaType.Native,\n                        name: symbol,\n                        symbol,\n                        decimals: 18,\n                        address: ZERO_ADDRESS,\n                    },\n                    explorerUrl: {\n                        url: parsedData.explorer,\n                    },\n                }\n                if (isEditing) {\n                    await Network.updateNetwork(id, network)\n                    showSnackbar(t.saved_network_successfully())\n                } else {\n                    await Network.addNetwork(network)\n                    showSnackbar(t.adding_network_successfully())\n                }\n                navigate(-1)\n                queryClient.invalidateQueries(QUERY_KEY)\n            } catch (err) {\n                checkZodError((err as Error).message)\n                showSnackbar(t.failed_to_save_network())\n            }\n            setIsSubmitting(false)\n        },\n    })\n\n    const [isChecking, setIsChecking] = useState(false)\n    const isNotReady = isValidating || !isFormValid || !isDirty || isChecking\n    const disabled = isNotReady || isMutating || isSubmitting\n\n    const handleSubmit = useCallback(async () => {\n        if (disabled) return\n        setIsChecking(true)\n        const data = getValues()\n        const result = await schema.parseAsync(data).then(\n            () => true,\n            (err) => checkZodError((err as Error).message),\n        )\n        setIsChecking(false)\n        if (!result) return\n        mutate(data)\n    }, [disabled, getValues, isEditing])\n\n    return (\n        <main className={classes.main}>\n            <form className={classes.form} data-hide-scrollbar>\n                <Typography className={classes.label}>{t.network_name()}</Typography>\n                <Input\n                    fullWidth\n                    disableUnderline\n                    error={!!errors.name}\n                    {...register('name')}\n                    placeholder=\"Cel\"\n                    disabled={isBuiltIn}\n                    inputProps={{\n                        placeholder: '',\n                        maxLength: 24,\n                    }}\n                />\n                {errors.name ? <Typography className={classes.error}>{errors.name.message}</Typography> : null}\n\n                <Typography className={classes.label}>{t.rpc_url()}</Typography>\n                <Input\n                    fullWidth\n                    disableUnderline\n                    error={!!errors.rpc}\n                    {...register('rpc')}\n                    placeholder=\"https://\"\n                    disabled={isBuiltIn}\n                />\n                {errors.rpc ? <Typography className={classes.error}>{errors.rpc.message}</Typography> : null}\n\n                <Typography className={classes.label}>{t.chain_id()}</Typography>\n                <Input\n                    fullWidth\n                    disableUnderline\n                    error={!!errors.chainId}\n                    {...register('chainId')}\n                    placeholder=\"eg. 2\"\n                    disabled={isBuiltIn}\n                />\n                {errors.chainId ? (\n                    <Typography className={classes.error}>{errors.chainId.message}</Typography>\n                ) : chainIdWarning ? (\n                    <Typography className={classes.warn}>{chainIdWarning}</Typography>\n                ) : null}\n\n                <Typography className={classes.label}>{t.optional_currency_symbol()}</Typography>\n                <Input\n                    fullWidth\n                    disableUnderline\n                    error={!!errors.currencySymbol}\n                    {...register('currencySymbol', { required: false })}\n                    placeholder=\"eg. ETH\"\n                    disabled={isBuiltIn || !!errors.chainId}\n                />\n                {symbolWarning ? <Typography className={classes.warn}>{symbolWarning}</Typography> : null}\n\n                <Typography className={classes.label}>{t.optional_block_explorer_url()}</Typography>\n                <Input\n                    fullWidth\n                    disableUnderline\n                    {...register('explorer')}\n                    placeholder=\"https://\"\n                    disabled={isBuiltIn}\n                />\n                {errors.explorer ? <Typography className={classes.error}>{errors.explorer.message}</Typography> : null}\n            </form>\n            {!isBuiltIn ? (\n                <div className={classes.footer}>\n                    <ActionButton fullWidth variant=\"outlined\" onClick={() => navigate(-1)}>\n                        {t.cancel()}\n                    </ActionButton>\n                    <ActionButton fullWidth onClick={handleSubmit} disabled={disabled}>\n                        {t.confirm()}\n                    </ActionButton>\n                </div>\n            ) : null}\n        </main>\n    )\n})\n","import { Icons } from '@masknet/icons'\nimport { Icon, WalletIcon } from '@masknet/shared'\nimport { NetworkPluginID, PopupRoutes } from '@masknet/shared-base'\nimport { ActionButton, TextOverflowTooltip, makeStyles } from '@masknet/theme'\nimport { Box, List, ListItem, Typography, alpha } from '@mui/material'\nimport { memo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useTitle } from '../../../hooks/index.js'\nimport { useNetworks } from '@masknet/web3-hooks-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    main: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n    },\n    list: {\n        overflow: 'auto',\n        padding: theme.spacing(2),\n        flexGrow: 1,\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    network: {\n        borderRadius: 8,\n        border: `1px solid ${theme.palette.maskColor.line}`,\n        height: theme.spacing(6),\n        padding: theme.spacing(1.5),\n        boxSizing: 'border-box',\n        marginBottom: theme.spacing(2),\n        cursor: 'pointer',\n    },\n    text: {\n        marginLeft: theme.spacing(1),\n        marginRight: 'auto',\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    name: {\n        marginRight: theme.spacing(0.5),\n        fontSize: 12,\n        maxWidth: '50%',\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        lineHeight: '16px',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n    },\n    footer: {\n        padding: theme.spacing(2),\n        borderRadius: 12,\n        background: alpha(theme.palette.maskColor.bottom, 0.8),\n        boxShadow: theme.palette.maskColor.bottomBg,\n        backdropFilter: 'blur(8px)',\n    },\n}))\n\nexport const NetworkManagement = memo(function NetworkManagement() {\n    const t = useMaskSharedTrans()\n    const { classes, theme } = useStyles()\n    const navigate = useNavigate()\n    useTitle(t.manage_network())\n\n    const networks = useNetworks(NetworkPluginID.PLUGIN_EVM)\n\n    return (\n        <main className={classes.main}>\n            <List className={classes.list}>\n                {networks.map((network) => {\n                    return (\n                        <ListItem\n                            key={network.ID}\n                            className={classes.network}\n                            role=\"link\"\n                            onClick={() => {\n                                navigate(`${PopupRoutes.EditNetwork}/${network.ID}`)\n                            }}>\n                            {network.iconUrl ? (\n                                <WalletIcon size={24} mainIcon={network.iconUrl} />\n                            ) : (\n                                <Icon size={24} name={network.name} sx={{ fontSize: 12 }} />\n                            )}\n                            <Box className={classes.text}>\n                                <TextOverflowTooltip title={network.name}>\n                                    <Typography className={classes.name}>{network.name}</Typography>\n                                </TextOverflowTooltip>\n                                {network.isCustomized ? null : <Icons.Lock size={16} />}\n                            </Box>\n                            <Icons.RightArrow color={theme.palette.maskColor.second} size={20} />\n                        </ListItem>\n                    )\n                })}\n            </List>\n            {process.env.NODE_ENV === 'development' ? (\n                <div className={classes.footer}>\n                    <ActionButton fullWidth onClick={() => navigate(PopupRoutes.AddNetwork)}>\n                        {t.network_management_add_network()}\n                    </ActionButton>\n                </div>\n            ) : null}\n        </main>\n    )\n})\n","import { memo, useCallback, useMemo, useState } from 'react'\nimport { useAsync } from 'react-use'\nimport { first } from 'lodash-es'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { ECKeyIdentifier, EMPTY_LIST, NetworkPluginID, PopupRoutes } from '@masknet/shared-base'\nimport { useChainContext, useChainIdValid, useNetworks, useWallets, useWeb3State } from '@masknet/web3-hooks-base'\nimport { ProviderType, ChainId } from '@masknet/web3-shared-evm'\nimport { Box, Button, Typography } from '@mui/material'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { ActionButton, makeStyles } from '@masknet/theme'\nimport { PersonaContext } from '@masknet/shared'\nimport { Web3 } from '@masknet/web3-providers'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useTitle, PopupContext, useVerifiedWallets } from '../../../hooks/index.js'\nimport { WalletItem } from '../../../components/WalletItem/index.js'\nimport { BottomController } from '../../../components/BottomController/index.js'\nimport Services from '#services'\nimport { ProfilePhotoType } from '../type.js'\nimport urlcat from 'urlcat'\n\nconst useStyles = makeStyles()((theme) => ({\n    item: {\n        color: theme.palette.maskColor.main,\n    },\n    disabled: {\n        opacity: '0.5',\n        cursor: 'default',\n    },\n    placeholder: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n}))\n\nconst SelectWallet = memo(function SelectWallet() {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles()\n    const navigate = useNavigate()\n    const [params] = useSearchParams()\n    const external_request_id = params.get('external_request')\n    const source = params.get('source')\n    const { value: external_request } = useAsync(async () => {\n        if (!external_request_id) return null\n        return Services.Wallet.getEIP2255PermissionDetail(external_request_id)\n    }, [external_request_id])\n    const chainIdSearched = params.get('chainId')\n    const isVerifyWalletFlow = params.get('verifyWallet')\n    const isSettingNFTAvatarFlow = params.get('setNFTAvatar')\n\n    const { Network } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n    const { proofs } = PersonaContext.useContainer()\n\n    const bindingWallets = useVerifiedWallets(proofs)\n\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({\n        chainId: chainIdSearched ? (Number.parseInt(chainIdSearched, 10) as ChainId) : undefined,\n    })\n\n    const networks = useNetworks(NetworkPluginID.PLUGIN_EVM)\n    const chainIdValid = useChainIdValid(NetworkPluginID.PLUGIN_EVM, chainId)\n    const { smartPayChainId } = PopupContext.useContainer()\n\n    const { value: localWallets = EMPTY_LIST } = useAsync(async () => Services.Wallet.getWallets(), [])\n\n    const allWallets = useWallets()\n\n    const wallets = useMemo(() => {\n        if (!allWallets.length && localWallets.length) return localWallets\n        return allWallets\n    }, [localWallets, allWallets])\n    const defaultWallet = params.get('address') || account || (first(wallets)?.address ?? '')\n    const [selected = defaultWallet, setSelected] = useState<string>()\n\n    const handleCancel = useCallback(async () => {\n        if (isVerifyWalletFlow) {\n            navigate(-1)\n        } else {\n            // TODO Open the popup via a RPC request, and reject the request\n            const rejected = await Promise.allSettled([\n                Promise.reject({\n                    message: 'User rejected the request.',\n                }),\n            ])\n            await Services.Wallet.resolveMaskAccount(rejected[0])\n            await Services.Helper.removePopupWindow()\n        }\n    }, [isVerifyWalletFlow])\n\n    const handleConfirm = useCallback(async () => {\n        if (external_request_id && external_request) {\n            await Services.Wallet.grantEIP2255Permission(external_request_id, [selected])\n            return Services.Helper.removePopupWindow()\n        }\n        if (isVerifyWalletFlow || isSettingNFTAvatarFlow) {\n            await Web3.connect({\n                account: selected,\n                chainId,\n                providerType: ProviderType.MaskWallet,\n            })\n\n            navigate(\n                isSettingNFTAvatarFlow\n                    ? urlcat(PopupRoutes.PersonaAvatarSetting, { tab: ProfilePhotoType.NFT })\n                    : PopupRoutes.ConnectWallet,\n                { replace: true },\n            )\n            return\n        }\n\n        const wallet = wallets.find((x) => isSameAddress(x.address, selected))\n\n        if (wallet && source && !external_request_id)\n            await Services.Wallet.internalWalletConnect(wallet.address, source)\n\n        await Services.Wallet.resolveMaskAccount([\n            wallet?.owner\n                ? {\n                      address: selected,\n                      owner: wallet.owner,\n                      identifier: ECKeyIdentifier.from(wallet.identifier).unwrapOr(undefined),\n                  }\n                : {\n                      address: selected,\n                  },\n        ])\n\n        if (smartPayChainId && wallet?.owner && chainId !== smartPayChainId) {\n            await Web3.switchChain?.(smartPayChainId, {\n                providerType: ProviderType.MaskWallet,\n            })\n\n            const network = networks.find((x) => x.chainId === smartPayChainId)\n            if (network) await Network?.switchNetwork(network.ID)\n        }\n        return Services.Helper.removePopupWindow()\n    }, [\n        source,\n        external_request,\n        external_request_id,\n        isVerifyWalletFlow,\n        selected,\n        chainId,\n        wallets,\n        smartPayChainId,\n        isSettingNFTAvatarFlow,\n        networks,\n        Network,\n    ])\n\n    useTitle(external_request ? 'Connecting External Site' : t.popups_select_wallet())\n\n    if (!chainIdValid)\n        return (\n            <Box className={classes.placeholder}>\n                <Typography>{t.popups_wallet_unsupported_network()}</Typography>\n            </Box>\n        )\n\n    return (\n        <Box overflow=\"auto\" data-hide-scrollbar>\n            {external_request ? (\n                <Box textAlign=\"center\" paddingX={2}>\n                    Connecting: <i>{external_request.origin}</i>\n                    <br />\n                    Be aware of fraud!\n                </Box>\n            ) : null}\n            <Box pt={1} pb={9} px={2} display=\"flex\" flexDirection=\"column\" rowGap=\"6px\">\n                {wallets\n                    .filter((x) => {\n                        if (x.owner && chainId !== ChainId.Matic) return false\n                        if (!isVerifyWalletFlow && !isSettingNFTAvatarFlow) return true\n                        return !x.owner\n                    })\n                    .map((item) => {\n                        const disabled =\n                            isVerifyWalletFlow && bindingWallets?.some((x) => isSameAddress(x.identity, item.address))\n\n                        return (\n                            <WalletItem\n                                className={cx(classes.item, disabled ? classes.disabled : undefined)}\n                                wallet={item}\n                                key={item.address}\n                                isSelected={isSameAddress(item.address, selected)}\n                                onSelect={() => {\n                                    if (!disabled) setSelected(item.address)\n                                }}\n                            />\n                        )\n                    })}\n            </Box>\n            <BottomController>\n                <Button variant=\"outlined\" fullWidth onClick={handleCancel}>\n                    {t.cancel()}\n                </Button>\n                <ActionButton\n                    fullWidth\n                    onClick={handleConfirm}\n                    disabled={\n                        isVerifyWalletFlow\n                            ? !!wallets?.some((x) => isSameAddress(x.address, selected) && !!x.owner)\n                            : false\n                    }>\n                    {t.confirm()}\n                </ActionButton>\n            </BottomController>\n        </Box>\n    )\n})\n\nexport default SelectWallet\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n    children: childrenProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import { mapKeys } from 'lodash-es'\nimport type { BigNumber } from 'bignumber.js'\nimport { toHex, type AbiItem } from 'web3-utils'\nimport { Web3 } from '@masknet/web3-providers'\nimport ERC20_ABI from '@masknet/web3-contracts/abis/ERC20.json'\nimport { toFixed, type RecentTransaction } from '@masknet/web3-shared-base'\nimport {\n    ProviderType,\n    formatWeiToGwei,\n    type ChainId,\n    type Transaction as EvmTransaction,\n    decodeFunctionData,\n} from '@masknet/web3-shared-evm'\nimport { GasSettingModal } from '../../modals/modals.js'\nimport { ReplaceType } from './type.js'\n\nconst MaxUint256 = toFixed('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n\nexport async function modifyTransaction(\n    transaction: RecentTransaction<ChainId, EvmTransaction>,\n    replaceType: ReplaceType,\n) {\n    const candidate = transaction.candidates[transaction.indexId]\n    if (!candidate) return\n    const oldGasSettings = {\n        gas: candidate.gas!,\n        gasPrice: candidate.gasPrice ? formatWeiToGwei(candidate.gasPrice).toFixed() : undefined,\n        maxFeePerGas: candidate.maxFeePerGas ? formatWeiToGwei(candidate.maxFeePerGas).toFixed() : undefined,\n        maxPriorityFeePerGas: candidate.maxPriorityFeePerGas\n            ? formatWeiToGwei(candidate.maxPriorityFeePerGas).toFixed()\n            : undefined,\n    }\n    const gasSettings = await GasSettingModal.openAndWaitForClose({\n        chainId: transaction.chainId,\n        config: oldGasSettings,\n        nonce: candidate.nonce!,\n        replaceType,\n    })\n    if (!gasSettings) return\n    const newConfig = {\n        ...candidate,\n        ...oldGasSettings,\n        ...mapKeys(gasSettings, (value) => (typeof value === 'undefined' ? value : toHex(value))),\n    }\n    if (replaceType === ReplaceType.CANCEL) {\n        await Web3.cancelTransaction(transaction.id, newConfig, {\n            providerType: ProviderType.MaskWallet,\n        })\n    } else {\n        await Web3.replaceTransaction(transaction.id, newConfig, {\n            providerType: ProviderType.MaskWallet,\n        })\n    }\n}\n\n// The Debank transaction history api does not return the input data,\n//  so can not do the decoding within its scope.\nexport function parseReceiverFromERC20TransferInput(input?: string) {\n    if (!input) return ''\n    try {\n        const decodedInputParam = decodeFunctionData(ERC20_ABI as AbiItem[], input ?? '', 'transfer')\n        return decodedInputParam[0] as string\n    } catch {\n        return ''\n    }\n}\n\n// The Debank transaction history api does not return the input data and approved token info,\n//  so can not do the decoding within its scope.\nexport function parseAmountFromERC20ApproveInput(input?: string) {\n    if (!input) return\n    try {\n        const decodedInputParam = decodeFunctionData(ERC20_ABI as AbiItem[], input ?? '', 'approve')\n        const result = (decodedInputParam[1] as BigNumber).toString()\n        return MaxUint256 === result ? 'Infinite' : result\n    } catch {\n        return\n    }\n}\n","import { Icons } from '@masknet/icons'\nimport { ImageIcon, NetworkIcon, ProgressiveText, ReversedAddress } from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { useEverSeen } from '@masknet/shared-base-ui'\nimport { TextOverflowTooltip, makeStyles, useBoundedPopperProps } from '@masknet/theme'\nimport {\n    useAccount,\n    useFungibleToken,\n    useNativeToken,\n    useNetwork,\n    useNetworkDescriptors,\n    useReverseAddress,\n} from '@masknet/web3-hooks-base'\nimport { ChainbaseHistory, Web3 } from '@masknet/web3-providers'\nimport { chainbase } from '@masknet/web3-providers/helpers'\nimport { DebankTransactionDirection } from '@masknet/web3-providers/types'\nimport {\n    TransactionStatusType,\n    isLessThan,\n    isSameAddress,\n    toFixed,\n    trimZero,\n    type RecentTransaction,\n    type Transaction,\n} from '@masknet/web3-shared-base'\nimport {\n    formatDomainName,\n    formatEthereumAddress,\n    type ChainId,\n    type Transaction as EvmTransaction,\n    type SchemaType,\n} from '@masknet/web3-shared-evm'\nimport { Box, ListItem, ListItemText, Skeleton, Typography, alpha, type ListItemProps } from '@mui/material'\nimport { useQuery } from '@tanstack/react-query'\nimport { memo, useMemo } from 'react'\nimport { Trans } from 'react-i18next'\nimport { formatTokenBalance } from '../../../../../shared/index.js'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\nimport { parseAmountFromERC20ApproveInput, parseReceiverFromERC20TransferInput } from '../../utils.js'\n\nconst useStyles = makeStyles<{ cateType?: string }>()((theme, { cateType = '' }, __) => {\n    const colorMap: Record<string, string> = {\n        send: theme.palette.maskColor.warn,\n        receive: theme.palette.maskColor.success,\n        default: theme.palette.maskColor.primary,\n    }\n    const backgroundColorMap: Record<string, string> = {\n        send: alpha(theme.palette.maskColor.warn, 0.1),\n        receive: alpha(theme.palette.maskColor.success, 0.1),\n        default: alpha(theme.palette.maskColor.success, 0.1),\n    }\n    const boxShadowMap: Record<string, string> = {\n        send: alpha(theme.palette.maskColor.warn, 0.2),\n        receive: alpha(theme.palette.maskColor.success, 0.2),\n        default: alpha(theme.palette.maskColor.primary, 0.2),\n    }\n    const iconColor = colorMap[cateType] || colorMap.default\n    const iconBoxShadow = `0px 6px 12px 0px ${boxShadowMap[cateType] || boxShadowMap.default}`\n    const iconBackgroundColor = backgroundColorMap[cateType] || backgroundColorMap.default\n\n    return {\n        item: {\n            padding: theme.spacing(0.5, 0),\n            cursor: 'pointer',\n        },\n        scamItem: {\n            opacity: 0.5,\n        },\n        txIconContainer: {\n            height: 32,\n            width: 32,\n            position: 'relative',\n            flexShrink: 0,\n        },\n        txIcon: {\n            height: 32,\n            width: 32,\n            borderRadius: '50%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            border: '1px solid',\n            borderColor: alpha(iconColor, 0.5),\n            boxShadow: iconBoxShadow,\n            backgroundColor: iconBackgroundColor,\n            backdropFilter: 'blur(8px)',\n            position: 'absolute',\n        },\n        badgeIcon: {\n            position: 'absolute',\n            right: -4.5,\n            bottom: -1,\n            border: `1px solid ${theme.palette.common.white}`,\n            borderRadius: '50%',\n        },\n        txName: {\n            textTransform: 'capitalize',\n            whiteSpace: 'nowrap',\n            fontWeight: 700,\n        },\n        scamLabel: {\n            display: 'inline-block',\n            padding: '4px 6px',\n            backgroundColor: theme.palette.maskColor.third,\n            color: theme.palette.maskColor.white,\n            fontSize: 12,\n            lineHeight: '16px',\n            fontWeight: 700,\n            marginLeft: 4,\n            borderRadius: 4,\n        },\n        toAddress: {\n            whiteSpace: 'nowrap',\n            color: theme.palette.maskColor.second,\n        },\n        operations: {\n            display: 'flex',\n            gap: 6,\n            marginTop: theme.spacing(0.5),\n        },\n        button: {\n            borderRadius: 4,\n            padding: '4px 6px',\n            border: 'none',\n            fontSize: 12,\n            fontWeight: 700,\n            cursor: 'pointer',\n        },\n        speedupButton: {\n            backgroundColor: alpha(theme.palette.maskColor.primary, 0.1),\n            color: theme.palette.maskColor.primary,\n        },\n        cancelButton: {\n            backgroundColor: alpha(theme.palette.maskColor.danger, 0.1),\n            color: theme.palette.maskColor.danger,\n        },\n        failedLabel: {\n            fontSize: 14,\n            color: theme.palette.maskColor.danger,\n            fontWeight: 400,\n            marginRight: 4,\n        },\n        assets: {\n            marginLeft: theme.spacing(1),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-end',\n        },\n        asset: {\n            fontSize: 14,\n            fontWeight: 700,\n            color: theme.palette.maskColor.main,\n            textAlign: 'right',\n            display: 'inline-flex',\n            alignItems: 'center',\n        },\n        amount: {\n            fontWeight: 700,\n        },\n        symbol: {\n            display: 'inline-block',\n            fontWeight: 400,\n            maxWidth: '9ch',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            marginLeft: theme.spacing(0.5),\n        },\n    }\n})\n\ninterface TransactionIconProps {\n    cateType: Transaction<ChainId, SchemaType>['cateType']\n}\nconst TransactionIcon = memo(function TransactionIcon({ cateType }: TransactionIconProps) {\n    const { classes, theme } = useStyles({ cateType })\n    const mapType = cateType || 'default'\n    const IconMap: Record<string, JSX.Element> = {\n        send: <Icons.BaseUpload color={theme.palette.maskColor.warn} size={20} />,\n        receive: <Icons.Download color={theme.palette.maskColor.success} size={20} />,\n        default: <Icons.Cached color={theme.palette.maskColor.primary} size={20} />,\n    }\n\n    return <div className={classes.txIcon}>{IconMap[mapType] || IconMap.default}</div>\n})\n\ninterface ActivityItemProps extends ListItemProps {\n    transaction: Transaction<ChainId, SchemaType>\n    onView: (tx: Transaction<ChainId, SchemaType>) => void\n}\n\nexport const ActivityItem = memo<ActivityItemProps>(function ActivityItem({ transaction, className, onView, ...rest }) {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles({})\n    const descriptors = useNetworkDescriptors(NetworkPluginID.PLUGIN_EVM)\n    const networkDescriptor = descriptors.find((x) => x.chainId === transaction.chainId)\n\n    const blockNumber = transaction && 'blockNumber' in transaction ? (transaction.blockNumber as number) : undefined\n    const [seen, ref] = useEverSeen<HTMLLIElement>()\n    const { data: tx, isLoading: loadingTx } = useQuery({\n        // This could be a transaction of SmartPay which Debank doesn't provide detailed info for it.\n        // This also could be an ERC20 transfer, which Debank returns the token contract rather than receiver as `to_address`.\n        // So we fetch via Chainbase\n        enabled: (!transaction.to || transaction.type === 'transfer' || transaction.type === 'approve') && seen,\n        queryKey: ['chainbase', 'transaction', transaction.chainId, transaction.id, blockNumber],\n        queryFn: async () => {\n            if (!transaction.chainId || !transaction.id) return\n            return ChainbaseHistory.getTransaction(transaction.chainId, transaction.id, blockNumber)\n        },\n    })\n    const { data: txInput, isLoading: loadingTxInput } = useQuery({\n        // Enable this when chainbase does not support the current chain.\n        enabled: !!transaction && !loadingTx && !tx?.input && transaction.type === 'transfer',\n        queryKey: [transaction?.chainId, transaction?.id],\n        queryFn: async () => {\n            if (!transaction?.chainId || !transaction?.id) return\n            const tx = await Web3.getTransaction(transaction.id, { chainId: transaction.chainId })\n            return tx?.input\n        },\n    })\n\n    const receiverAddress = parseReceiverFromERC20TransferInput(tx?.input ?? txInput)\n    const status = transaction.status ?? (tx ? chainbase.normalizeTxStatus(tx.status) : undefined)\n    const account = useAccount(NetworkPluginID.PLUGIN_EVM)\n    const fromAddress = (transaction.from || tx?.from_address) as string\n    const toAddress = (receiverAddress || transaction.to || tx?.to_address) as string\n    const loadingToAddress =\n        transaction.type === 'transfer' ? !receiverAddress && (loadingTx || loadingTxInput) : !toAddress && loadingTx\n    const isOut = isSameAddress(fromAddress, account)\n    const popperProps = useBoundedPopperProps()\n    const approveAmount = parseAmountFromERC20ApproveInput(tx?.input ?? txInput)\n    const { data: approveToken } = useFungibleToken(\n        NetworkPluginID.PLUGIN_EVM,\n        transaction.type === 'approve' ? tx?.to_address : '',\n        undefined,\n        { chainId: transaction.chainId },\n    )\n\n    return (\n        <ListItem\n            className={cx(classes.item, className, transaction.isScam ? classes.scamItem : null)}\n            onClick={() => onView(transaction)}\n            ref={ref}\n            {...rest}>\n            <Box className={classes.txIconContainer}>\n                <TransactionIcon cateType={transaction.cateType} />\n                <ImageIcon className={classes.badgeIcon} size={16} icon={networkDescriptor?.icon} />\n            </Box>\n            <ListItemText\n                secondaryTypographyProps={{ component: 'div' }}\n                style={{ marginLeft: 15 }}\n                secondary={\n                    <ProgressiveText\n                        className={classes.toAddress}\n                        loading={loadingToAddress}\n                        skeletonWidth={100}\n                        component=\"div\">\n                        {status === TransactionStatusType.FAILED ? (\n                            <Typography className={classes.failedLabel} component=\"span\">\n                                {t.failed()}\n                            </Typography>\n                        ) : null}\n                        <Trans\n                            i18nKey=\"other_address\"\n                            context={isOut ? 'to' : 'from'}\n                            value={{\n                                address: isOut ? toAddress : fromAddress,\n                            }}\n                            components={{\n                                addr: <ReversedAddress address={isOut ? toAddress : fromAddress} component=\"span\" />,\n                            }}\n                        />\n                    </ProgressiveText>\n                }>\n                <Typography className={classes.txName}>\n                    {transaction.cateName}\n                    {transaction.isScam ? <span className={classes.scamLabel}>{t.scam_tx()}</span> : null}\n                </Typography>\n            </ListItemText>\n\n            {transaction.type === 'approve' && approveAmount && approveToken ? (\n                <Typography className={classes.asset} component=\"div\">\n                    <strong className={classes.amount}>\n                        {approveAmount === 'Infinite'\n                            ? approveAmount\n                            : formatTokenBalance(approveAmount, approveToken.decimals)}\n                    </strong>\n                    <TextOverflowTooltip title={approveToken.symbol} PopperProps={popperProps}>\n                        <span className={classes.symbol}>{approveToken.symbol}</span>\n                    </TextOverflowTooltip>\n                </Typography>\n            ) : (\n                <div className={classes.assets}>\n                    {transaction.assets.map((token, i) => {\n                        const isSend = token.direction === DebankTransactionDirection.SEND\n                        const amount = isLessThan(token.amount, '0.0001')\n                            ? '<0.0001'\n                            : trimZero(toFixed(token.amount, 4))\n                        return (\n                            <Typography key={i} className={classes.asset} component=\"div\">\n                                <strong className={classes.amount}>{`${isSend ? '-' : '+'} ${amount} `}</strong>\n                                <TextOverflowTooltip title={token.symbol} PopperProps={popperProps}>\n                                    <span className={classes.symbol}>{token.symbol}</span>\n                                </TextOverflowTooltip>\n                            </Typography>\n                        )\n                    })}\n                </div>\n            )}\n        </ListItem>\n    )\n})\n\ninterface RecentActivityItemProps extends Omit<ActivityItemProps, 'transaction' | 'onView'> {\n    transaction: RecentTransaction<ChainId, EvmTransaction>\n    onView: (tx: RecentTransaction<ChainId, EvmTransaction>, candidate?: EvmTransaction) => void\n    onSpeedup?: (tx: RecentTransaction<ChainId, EvmTransaction>) => void\n    onCancel?: (tx: RecentTransaction<ChainId, EvmTransaction>) => void\n}\n\nexport const RecentActivityItem = memo<RecentActivityItemProps>(function RecentActivityItem({\n    transaction,\n    className,\n    onSpeedup,\n    onCancel,\n    onView,\n    ...rest\n}) {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles({})\n    // candidate is current transaction\n    const candidate = transaction.candidates[transaction.indexId]\n    const receiverAddress = parseReceiverFromERC20TransferInput(candidate.data)\n    const toAddress = receiverAddress || candidate.to\n    const { data: domain } = useReverseAddress(NetworkPluginID.PLUGIN_EVM, toAddress)\n    const { data: nativeToken } = useNativeToken(NetworkPluginID.PLUGIN_EVM, { chainId: transaction.chainId })\n    const network = useNetwork(NetworkPluginID.PLUGIN_EVM, transaction.chainId)\n\n    const recipient = useMemo(() => {\n        if (domain) return t.to_address({ address: formatDomainName(domain) })\n        if (toAddress) return t.to_address({ address: formatEthereumAddress(toAddress, 4) })\n        return undefined\n    }, [domain, t])\n\n    return (\n        <ListItem className={cx(classes.item, className)} onClick={() => onView(transaction, candidate)} {...rest}>\n            <Box className={classes.txIconContainer}>\n                {/* TODO specify cateType */}\n                <TransactionIcon cateType={'send'} />\n                <NetworkIcon\n                    pluginID={NetworkPluginID.PLUGIN_EVM}\n                    className={classes.badgeIcon}\n                    chainId={transaction.chainId}\n                    size={16}\n                    network={network}\n                />\n            </Box>\n            <ListItemText\n                secondaryTypographyProps={{ component: 'div' }}\n                style={{ marginLeft: 15 }}\n                secondary={\n                    <Box>\n                        <Typography>\n                            {transaction.status === TransactionStatusType.FAILED ? (\n                                <Typography className={classes.failedLabel} component=\"span\">\n                                    {t.failed()}\n                                </Typography>\n                            ) : null}\n                            {recipient}\n                        </Typography>\n                        {transaction.status === 1 ? (\n                            <Box className={classes.operations}>\n                                <button\n                                    type=\"button\"\n                                    className={cx(classes.button, classes.speedupButton)}\n                                    onClick={(e) => {\n                                        e.stopPropagation()\n                                        onSpeedup?.(transaction)\n                                    }}>\n                                    {t.speed_up()}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className={cx(classes.button, classes.cancelButton)}\n                                    onClick={(e) => {\n                                        e.stopPropagation()\n                                        onCancel?.(transaction)\n                                    }}>\n                                    {t.cancel()}\n                                </button>\n                            </Box>\n                        ) : null}\n                    </Box>\n                }>\n                {/* TODO specify cateType */}\n                <Typography className={classes.txName}>{t.send()}</Typography>\n            </ListItemText>\n            <Box ml=\"auto\">\n                {candidate.value && nativeToken ? (\n                    <Typography className={classes.asset}>\n                        <strong className={classes.amount}>\n                            {`- ${formatTokenBalance(candidate.value, nativeToken.decimals)} `}\n                        </strong>\n                        <span className={classes.symbol}>{nativeToken.symbol}</span>\n                    </Typography>\n                ) : null}\n            </Box>\n        </ListItem>\n    )\n})\n\nexport const ActivityItemSkeleton = memo<ListItemProps>(function ActivityItemSkeleton({ className, ...rest }) {\n    const { classes, cx } = useStyles({})\n\n    return (\n        <ListItem className={cx(classes.item, className)} {...rest}>\n            <Box className={classes.txIconContainer}>\n                <Skeleton variant=\"circular\" width={32} height={32} />\n                <Skeleton variant=\"circular\" className={classes.badgeIcon} width={16} height={16} />\n            </Box>\n            <ListItemText\n                secondaryTypographyProps={{ component: 'div' }}\n                style={{ marginLeft: 15 }}\n                secondary={<Skeleton variant=\"text\" width={100} />}>\n                <Skeleton variant=\"text\" width={90} />\n            </ListItemText>\n            <Box ml=\"auto\">\n                <Skeleton variant=\"text\" width={40} />\n            </Box>\n        </ListItem>\n    )\n})\n","import { EMPTY_LIST } from '@masknet/shared-base'\nimport { queryClient } from '@masknet/shared-base-ui'\nimport { useChainContext, useNetworks, useWeb3State } from '@masknet/web3-hooks-base'\nimport { DeBankHistory } from '@masknet/web3-providers'\nimport { type RecentTransaction } from '@masknet/web3-shared-base'\nimport type { ChainId, Transaction as EvmTransaction } from '@masknet/web3-shared-evm'\nimport { useInfiniteQuery, useQueries } from '@tanstack/react-query'\nimport { sortBy } from 'lodash-es'\nimport { useEffect, useMemo } from 'react'\n\n/**\n * Get locale transitions and merge them with ones from debank history.\n * Transactions from debank are fetching page by page.\n */\nexport function useTransactions() {\n    const { account } = useChainContext()\n    const result = useInfiniteQuery({\n        queryKey: ['debank', 'all-history', account],\n        queryFn: async ({ pageParam }) => {\n            return DeBankHistory.getAllTransactions(account, { indicator: pageParam })\n        },\n        getNextPageParam: (lastPage) => lastPage.nextIndicator,\n    })\n    const data = result.data\n    const transactions = useMemo(() => data?.pages.flatMap((p) => p.data) || EMPTY_LIST, [data?.pages])\n\n    const networks = useNetworks()\n\n    const { Transaction } = useWeb3State()\n    // TODO invalidQueries after sending transitions\n    const queries = useQueries({\n        queries: networks.map((network) => {\n            return {\n                enabled: !!account && (transactions.length > 0 || !result.isLoading),\n                queryKey: ['transitions', network.chainId, account],\n                queryFn: async () => {\n                    return Transaction?.getTransactions?.(network.chainId, account) ?? []\n                },\n            }\n        }),\n    })\n    useEffect(() => {\n        return Transaction?.transactions?.subscribe(() => {\n            queryClient.invalidateQueries(['transitions'])\n        })\n    }, [])\n\n    const allLocaleTxes = useMemo(() => {\n        return queries.flatMap((x) => x.data ?? []) as Array<RecentTransaction<ChainId, EvmTransaction>>\n    }, [queries])\n\n    // Some are already in debank history\n    const localeTxes = useMemo(() => {\n        const now = Date.now()\n        const duration = 1800_000\n        return sortBy(\n            allLocaleTxes.filter((tx) => {\n                // show txes from the past half txes\n                return !transactions.find((x) => x.id === tx.id) && now - tx.updatedAt.getTime() < duration\n            }),\n            (x) => -x.createdAt.getTime(),\n        )\n    }, [allLocaleTxes, transactions])\n\n    return { ...result, data: transactions, localeTxes }\n}\n","import { ElementAnchor, EmptyStatus } from '@masknet/shared'\nimport { PopupRoutes } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport type { RecentTransaction, Transaction } from '@masknet/web3-shared-base'\nimport { type ChainId, type Transaction as EvmTransaction, type SchemaType } from '@masknet/web3-shared-evm'\nimport { List } from '@mui/material'\nimport { range } from 'lodash-es'\nimport { memo, useCallback } from 'react'\nimport { useNavigate, useOutletContext } from 'react-router-dom'\nimport { ReplaceType } from '../../type.js'\nimport { ActivityItem, ActivityItemSkeleton, RecentActivityItem } from './ActivityItem.js'\nimport { useTransactions } from './useTransactions.js'\nimport { modifyTransaction } from '../../utils.js'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\n\nconst useStyles = makeStyles<{ hasNav?: boolean }>()((theme, { hasNav }) => ({\n    container: {\n        paddingBottom: hasNav ? 72 : undefined,\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n    },\n    list: {\n        backgroundColor: theme.palette.maskColor.bottom,\n        padding: theme.spacing(2),\n    },\n    item: {\n        '&:not(:last-of-type)': {\n            marginBottom: theme.spacing(1.5),\n        },\n    },\n}))\n\nexport const ActivityList = memo(function ActivityList() {\n    const t = useMaskSharedTrans()\n    const { hasNavigator } = useOutletContext() as { hasNavigator: boolean }\n    const { classes } = useStyles({ hasNav: hasNavigator })\n    const navigate = useNavigate()\n    const { data: transactions, localeTxes, isLoading, isFetching, fetchNextPage } = useTransactions()\n\n    const handleSpeedup = useCallback(async (transaction: RecentTransaction<ChainId, EvmTransaction>) => {\n        modifyTransaction(transaction, ReplaceType.SPEED_UP)\n    }, [])\n\n    const handleCancel = useCallback((transaction: RecentTransaction<ChainId, EvmTransaction>) => {\n        modifyTransaction(transaction, ReplaceType.CANCEL)\n    }, [])\n\n    const handleView = useCallback(\n        (\n            transaction: Transaction<ChainId, SchemaType> | RecentTransaction<ChainId, EvmTransaction>,\n            candidate?: EvmTransaction,\n        ) => {\n            navigate(PopupRoutes.TransactionDetail, {\n                // No available API to fetch a transaction info yet.\n                // Just pass target transaction to the detail page.\n                state: { transaction, candidate },\n            })\n        },\n        [navigate],\n    )\n\n    if (!isLoading && !localeTxes.length && !transactions.length)\n        return <EmptyStatus height=\"100%\">{t.no_data()}</EmptyStatus>\n\n    return (\n        <div className={classes.container} data-hide-scrollbar>\n            <List dense className={classes.list}>\n                {localeTxes.map((transaction) => (\n                    <RecentActivityItem\n                        key={transaction.id}\n                        transaction={transaction}\n                        onSpeedup={handleSpeedup}\n                        onCancel={handleCancel}\n                        onView={handleView}\n                    />\n                ))}\n                {transactions.map((transaction) => (\n                    <ActivityItem\n                        key={transaction.id}\n                        className={classes.item}\n                        transaction={transaction}\n                        onView={handleView}\n                    />\n                ))}\n                {isFetching ? range(4).map((i) => <ActivityItemSkeleton key={i} className={classes.item} />) : null}\n            </List>\n            <ElementAnchor callback={() => fetchNextPage()} key={transactions.length} height={10} />\n        </div>\n    )\n})\n","import { ValueRef } from '@masknet/shared-base'\nimport { useCallback } from 'react'\nimport { useSubscription, type Subscription } from 'use-subscription'\n\nconst assetExpandRef = new ValueRef(false)\n\nconst subscription: Subscription<boolean> = {\n    getCurrentValue() {\n        return assetExpandRef.value\n    },\n    subscribe(callback: () => void) {\n        return assetExpandRef.addListener(callback)\n    },\n}\nexport function useAssetExpand() {\n    const isExpand = useSubscription(subscription)\n    const setAssetsIsExpand = useCallback((val: boolean | ((oldVal: boolean) => boolean)) => {\n        assetExpandRef.value = typeof val === 'function' ? val(assetExpandRef.value) : val\n    }, [])\n    return [isExpand, setAssetsIsExpand] as const\n}\n","import { Icons } from '@masknet/icons'\nimport { ActionButton, type ActionButtonProps } from '@masknet/theme'\nimport { memo } from 'react'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\n\ninterface MoreBarProps extends ActionButtonProps {\n    isExpand: boolean\n}\n\nexport const MoreBar = memo<MoreBarProps>(function MoreBar({ isExpand, ...rest }) {\n    const t = useMaskSharedTrans()\n    if (isExpand)\n        return (\n            <ActionButton variant=\"roundedOutlined\" {...rest}>\n                <span>{t.popups_wallet_more_collapse()}</span>\n                <Icons.ArrowDrop style={{ transform: 'rotate(180deg)' }} />\n            </ActionButton>\n        )\n    return (\n        <ActionButton variant=\"roundedOutlined\" {...rest}>\n            <span>{t.popups_wallet_more_expand()}</span>\n            <Icons.ArrowDrop />\n        </ActionButton>\n    )\n})\n","import { FormattedCurrency, NetworkIcon, ProgressiveText, TokenIcon } from '@masknet/shared'\nimport { NetworkPluginID, PopupRoutes } from '@masknet/shared-base'\nimport { useEverSeen } from '@masknet/shared-base-ui'\nimport { TextOverflowTooltip, makeStyles } from '@masknet/theme'\nimport { useFungibleTokenBalance, useNetworks, useWallet } from '@masknet/web3-hooks-base'\nimport { formatCurrency, isGte, isLessThan, isZero, type FungibleAsset } from '@masknet/web3-shared-base'\nimport { isNativeTokenAddress, ChainId, type SchemaType } from '@masknet/web3-shared-evm'\nimport { Box, List, ListItem, ListItemText, Skeleton, Typography, type ListItemProps } from '@mui/material'\nimport { range } from 'lodash-es'\nimport { memo, useCallback, useMemo } from 'react'\nimport { useNavigate, useOutletContext } from 'react-router-dom'\nimport urlcat from 'urlcat'\nimport { formatTokenBalance } from '../../../../../shared/index.js'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\nimport { useAssetExpand, useWalletAssets } from '../../hooks/index.js'\nimport { MoreBar } from './MoreBar.js'\n\nconst useStyles = makeStyles<{ hasNav?: boolean }>()((theme, { hasNav }) => ({\n    container: {\n        paddingBottom: hasNav ? 72 : undefined,\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n    },\n    list: {\n        backgroundColor: theme.palette.maskColor.bottom,\n        padding: theme.spacing(2),\n    },\n    item: {\n        padding: 14,\n        cursor: 'pointer',\n        borderRadius: 8,\n        '&:hover': {\n            backgroundColor: theme.palette.maskColor.bg,\n        },\n    },\n    tokenIcon: {\n        width: 36,\n        height: 36,\n    },\n    badgeIcon: {\n        position: 'absolute',\n        right: -6,\n        bottom: -4,\n        border: `1px solid ${theme.palette.common.white}`,\n        borderRadius: '50%',\n    },\n    text: {\n        marginLeft: 14,\n        maxWidth: '50%',\n        overflow: 'auto',\n    },\n    name: {\n        fontSize: 16,\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n    },\n    balance: {\n        fontSize: 14,\n        color: theme.palette.maskColor.second,\n        fontWeight: 400,\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n    },\n    customToken: {\n        color: theme.palette.maskColor.third,\n        fontSize: 13,\n        fontWeight: 400,\n        lineHeight: '18px',\n    },\n    value: {\n        fontSize: 16,\n        fontWeight: 700,\n    },\n    more: {\n        display: 'inline-flex',\n        width: 'auto',\n        margin: theme.spacing(0, 'auto', 2),\n    },\n}))\n\ntype Asset = FungibleAsset<ChainId, SchemaType>\ninterface AssetItemProps extends ListItemProps {\n    asset: Asset\n    onItemClick(asset: Asset): void\n}\n\nconst AssetItem = memo(function AssetItem({ asset, onItemClick, ...rest }: AssetItemProps) {\n    const { hasNavigator } = useOutletContext() as { hasNavigator: boolean }\n    const { classes, cx } = useStyles({ hasNav: hasNavigator })\n    const t = useMaskSharedTrans()\n    const networks = useNetworks(NetworkPluginID.PLUGIN_EVM)\n    const network = networks.find((x) => x.chainId === asset.chainId)\n    const providerURL = network?.isCustomized ? network.rpcUrl : undefined\n    const [seen, ref] = useEverSeen<HTMLLIElement>()\n    // Debank might not provide asset from current custom network\n    const tryRpc = (!asset.balance || isZero(asset.balance)) && network?.isCustomized && seen\n    const { data: rpcBalance, isLoading } = useFungibleTokenBalance(\n        NetworkPluginID.PLUGIN_EVM,\n        asset.address,\n        { chainId: asset.chainId, providerURL },\n        tryRpc,\n    )\n    const balance = useMemo(() => {\n        if (tryRpc) {\n            return {\n                pending: isLoading,\n                value: isLoading ? undefined : formatTokenBalance(rpcBalance, asset.decimals),\n            }\n        }\n        return {\n            pending: false,\n            value: formatTokenBalance(asset.balance, asset.decimals),\n        }\n    }, [tryRpc, rpcBalance, asset.balance, asset.decimals, isLoading])\n    return (\n        <ListItem\n            key={`${asset.chainId}.${asset.address}`}\n            {...rest}\n            ref={ref}\n            onClick={() => onItemClick(asset)}\n            className={cx(classes.item, rest.className)}\n            secondaryAction={\n                <Typography className={classes.value}>\n                    <FormattedCurrency\n                        value={asset.value?.usd || 0}\n                        formatter={formatCurrency}\n                        options={{ onlyRemainTwoOrZeroDecimal: true }}\n                    />\n                </Typography>\n            }>\n            <Box position=\"relative\">\n                <TokenIcon\n                    className={classes.tokenIcon}\n                    chainId={asset.chainId}\n                    address={asset.address}\n                    name={asset.name}\n                    logoURL={asset.logoURL}\n                    size={36}\n                />\n                <NetworkIcon\n                    pluginID={NetworkPluginID.PLUGIN_EVM}\n                    className={classes.badgeIcon}\n                    chainId={asset.chainId}\n                    size={16}\n                    network={network}\n                />\n            </Box>\n            <ListItemText\n                className={classes.text}\n                secondaryTypographyProps={{ component: 'div' }}\n                secondary={\n                    <>\n                        <TextOverflowTooltip title={`${balance.value} ${asset.symbol}`}>\n                            <ProgressiveText className={classes.balance} loading={balance.pending} skeletonWidth={60}>\n                                {balance.value} {asset.symbol}\n                            </ProgressiveText>\n                        </TextOverflowTooltip>\n                        {asset.isCustomToken ? (\n                            <Typography className={classes.customToken}>{t.added_by_user()}</Typography>\n                        ) : null}\n                    </>\n                }>\n                <TextOverflowTooltip title={asset.name}>\n                    <Typography className={classes.name}>{asset.name}</Typography>\n                </TextOverflowTooltip>\n            </ListItemText>\n        </ListItem>\n    )\n})\n\nexport const AssetsList = memo(function AssetsList() {\n    const { hasNavigator } = useOutletContext() as { hasNavigator: boolean }\n    const { classes } = useStyles({ hasNav: hasNavigator })\n    const navigate = useNavigate()\n    const { data: assets, isLoading } = useWalletAssets()\n    const [assetsIsExpand, setAssetsIsExpand] = useAssetExpand()\n    const onItemClick = useCallback((asset: Asset) => {\n        navigate(urlcat(PopupRoutes.TokenDetail, { chainId: asset.chainId, address: asset.address }))\n    }, [])\n    const onSwitch = useCallback(() => setAssetsIsExpand((x) => !x), [])\n    const isSmartPay = !!useWallet(NetworkPluginID.PLUGIN_EVM)?.owner\n    const filteredAssets = useMemo(() => {\n        if (isSmartPay) return assets.filter((x) => x.chainId === ChainId.Matic)\n        return assets\n    }, [assets, isSmartPay])\n\n    const hasLowValueToken = useMemo(() => {\n        return !!filteredAssets.find((x) => {\n            if (isNativeTokenAddress(x.address)) return false\n            return x.value?.usd ? isLessThan(x.value.usd, 1) : false\n        })\n    }, [filteredAssets])\n    const list = filteredAssets.filter(\n        (asset) => assetsIsExpand || isNativeTokenAddress(asset.address) || isGte(asset.value?.usd ?? 0, 1),\n    )\n    return (\n        <div className={classes.container} data-hide-scrollbar>\n            {isLoading ? (\n                <AssetsListSkeleton />\n            ) : (\n                <List dense className={classes.list}>\n                    {list.map((asset) => (\n                        <AssetItem key={`${asset.chainId}.${asset.address}`} asset={asset} onItemClick={onItemClick} />\n                    ))}\n                </List>\n            )}\n            {hasLowValueToken ? (\n                <MoreBar isExpand={assetsIsExpand} onClick={onSwitch} className={classes.more} />\n            ) : null}\n        </div>\n    )\n})\n\nconst AssetsListSkeleton = memo(function AssetsListSkeleton() {\n    const { classes } = useStyles({})\n    return (\n        <List dense className={classes.list}>\n            {range(10).map((i) => (\n                <ListItem\n                    key={i}\n                    className={classes.item}\n                    secondaryAction={\n                        <Typography className={classes.value}>\n                            <Skeleton width={60} />\n                        </Typography>\n                    }>\n                    <Box position=\"relative\">\n                        <Skeleton variant=\"circular\" className={classes.tokenIcon} />\n                        <Skeleton variant=\"circular\" width={16} height={16} className={classes.badgeIcon} />\n                    </Box>\n                    <ListItemText\n                        className={classes.text}\n                        secondary={\n                            <Typography className={classes.balance}>\n                                <Skeleton width={100} />\n                            </Typography>\n                        }>\n                        <Skeleton className={classes.name} width={90} />\n                    </ListItemText>\n                </ListItem>\n            ))}\n        </List>\n    )\n})\n","import { CollectionList, type CollectionListProps } from '@masknet/shared'\nimport { EMPTY_ENTRY, EMPTY_LIST, NetworkPluginID, PopupRoutes } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useAccount, useWeb3State } from '@masknet/web3-hooks-base'\nimport { Typography } from '@mui/material'\nimport { forwardRef, memo, useCallback, useMemo } from 'react'\nimport { useNavigate, useOutletContext, useSearchParams } from 'react-router-dom'\nimport urlcat from 'urlcat'\nimport { useSubscription } from 'use-subscription'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\nimport { useParamTab } from '../../../../hooks/index.js'\nimport { WalletAssetTabs } from '../../type.js'\n\nconst gridProps = {\n    columns: 'repeat(auto-fill, minmax(20%, 1fr))',\n    gap: '8px',\n}\nconst useStyles = makeStyles<{ hasNav: boolean }>()((theme, { hasNav }) => ({\n    grid: {\n        paddingBottom: hasNav ? 72 : undefined,\n    },\n    importNft: {\n        cursor: 'pointer',\n        color: theme.palette.maskColor.main,\n        fontSize: 14,\n        fontWeight: 700,\n        textAlign: 'center',\n    },\n}))\n\nfunction useAdditionalAssets() {\n    const { Token } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n    const collectionMap = useSubscription(Token?.nonFungibleCollectionMap ?? EMPTY_ENTRY)\n    const account = useAccount(NetworkPluginID.PLUGIN_EVM)\n    const additionalAssets = useMemo(() => {\n        const collections = collectionMap[account?.toLowerCase()]\n        if (!collections) return EMPTY_LIST\n        return collections.flatMap((collection) => {\n            const { contract } = collection\n            const tokens = collection.tokenIds.map((tokenId) => {\n                return {\n                    tokenId,\n                    chainId: contract.chainId,\n                    ownerId: account,\n                    address: contract.address,\n                    contract,\n                    metadata: {\n                        chainId: contract.chainId,\n                        name: contract.name,\n                        tokenId,\n                        symbol: contract.symbol,\n                    },\n                    collection: {\n                        name: contract.name,\n                        symbol: contract.symbol,\n                    },\n                } as Web3Helper.NonFungibleTokenScope<void, NetworkPluginID.PLUGIN_EVM>\n            })\n            return tokens\n        })\n    }, [collectionMap, account])\n    return additionalAssets\n}\n\ninterface Props {\n    onAddToken: (assetTab: WalletAssetTabs) => void\n    scrollTargetRef: CollectionListProps['scrollElementRef']\n}\n\nexport const WalletCollections = memo<Props>(\n    forwardRef<HTMLDivElement, Props>(function WalletCollections({ onAddToken, scrollTargetRef }, ref) {\n        const t = useMaskSharedTrans()\n        const { hasNavigator } = useOutletContext() as { hasNavigator: boolean }\n        const { classes } = useStyles({ hasNav: hasNavigator })\n        const [currentTab] = useParamTab<WalletAssetTabs>(WalletAssetTabs.Tokens)\n        const [, setParams] = useSearchParams()\n        const additionalAssets = useAdditionalAssets()\n        const navigate = useNavigate()\n        const handleItemClick = useCallback(\n            (asset: Web3Helper.NonFungibleTokenAll) => {\n                const path = urlcat(PopupRoutes.CollectibleDetail, {\n                    chainId: asset.chainId,\n                    address: asset.address,\n                    id: asset.tokenId,\n                })\n                navigate(path, { state: { asset } })\n            },\n            [navigate],\n        )\n        const handleCollectionChange = useCallback(\n            (id: string | undefined) => {\n                const SEARCH_KEY = 'collectionId'\n                setParams(\n                    (params) => {\n                        if (!id) params.delete(SEARCH_KEY)\n                        else params.set(SEARCH_KEY, id)\n                        return params.toString()\n                    },\n                    { replace: true },\n                )\n            },\n            [setParams],\n        )\n\n        const collectiblesEmptyText = (\n            <>\n                <Typography component=\"div\">{t.do_not_see_your_nft()}</Typography>\n                <Typography className={classes.importNft} role=\"button\" onClick={() => onAddToken(currentTab)}>\n                    {t.import_nft()}\n                </Typography>\n            </>\n        )\n        return (\n            <CollectionList\n                ref={ref}\n                classes={{ grid: classes.grid }}\n                gridProps={gridProps}\n                disableSidebar\n                disableWindowScroll\n                scrollElementRef={scrollTargetRef}\n                emptyText={collectiblesEmptyText}\n                additionalAssets={additionalAssets}\n                onItemClick={handleItemClick}\n                onCollectionChange={handleCollectionChange}\n            />\n        )\n    }),\n)\n","import { Icons } from '@masknet/icons'\nimport { RestorableScroll, UserAssetsProvider } from '@masknet/shared'\nimport { NetworkPluginID, PopupRoutes } from '@masknet/shared-base'\nimport { makeStyles, Boundary } from '@masknet/theme'\nimport { useAccount, useChainContext, useWallet } from '@masknet/web3-hooks-base'\nimport { TabContext, TabList, TabPanel } from '@mui/lab'\nimport { Box, Button, Tab, styled, tabClasses, tabsClasses } from '@mui/material'\nimport { memo, useCallback, useRef } from 'react'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\nimport { useParamTab } from '../../../../hooks/index.js'\nimport { WalletAssetTabs } from '../../type.js'\nimport { ActivityList } from '../ActivityList/index.js'\nimport { AssetsList } from '../AssetsList/index.js'\nimport { WalletCollections } from './WalletCollections.js'\n\nconst useStyles = makeStyles()((theme) => {\n    const isDark = theme.palette.mode === 'dark'\n    return {\n        content: {\n            flex: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            overflow: 'auto',\n            marginTop: -34,\n        },\n        header: {\n            display: 'flex',\n        },\n        tab: {\n            height: 34,\n            padding: '8px 12px',\n            fontSize: 14,\n            fontWeight: 700,\n            color: theme.palette.maskColor.second,\n            minHeight: 'unset',\n            backgroundColor: 'transparent',\n            borderRadius: '12px 12px 0 0',\n            boxShadow: 'none',\n            [`&.${tabClasses.selected}`]: {\n                backgroundColor: theme.palette.maskColor.bottom,\n                fontWeight: 700,\n                color: theme.palette.maskColor.main,\n                boxShadow: `0px 4px 6px 0px ${isDark ? 'rgba(0, 0, 0, 0.10)' : 'rgba(102, 108, 135, 0.10)'}`,\n                backdropFilter: 'blur(5px)',\n            },\n        },\n        panels: {\n            overflow: 'auto',\n            flexGrow: 1,\n            display: 'flex',\n            flexDirection: 'column',\n        },\n        tabPanel: {\n            '&:not([hidden])': {\n                padding: 0,\n                flexGrow: 1,\n                display: 'flex',\n                flexDirection: 'column',\n                overflow: 'auto',\n                '&::-webkit-scrollbar': {\n                    display: 'none',\n                },\n            },\n        },\n        addButton: {\n            minWidth: 'auto',\n            height: 24,\n            width: 24,\n            marginRight: theme.spacing(2),\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            boxSizing: 'border-box',\n            padding: theme.spacing(0.5),\n            backgroundColor: theme.palette.maskColor.bottom,\n            boxShadow: `0px 4px 6px 0px ${isDark ? 'rgba(0, 0, 0, 0.10)' : 'rgba(102, 108, 135, 0.10)'}`,\n            marginLeft: 'auto',\n        },\n    }\n})\n\nconst StyledTabList = styled(TabList)`\n    &.${tabsClasses.root} {\n        min-height: unset;\n        background-color: transparent;\n        padding: 0 16px;\n        flex-shrink: 0;\n    }\n    & .${tabsClasses.indicator} {\n        display: none;\n    }\n`\n\nexport const WalletAssets = memo(function WalletAssets() {\n    const navigate = useNavigate()\n    const { chainId } = useChainContext()\n    const wallet = useWallet(NetworkPluginID.PLUGIN_EVM)\n\n    const handleAdd = useCallback(\n        (assetTab: WalletAssetTabs) => navigate(`${PopupRoutes.AddToken}/${chainId}/${assetTab}`),\n        [chainId, navigate],\n    )\n\n    return wallet ? <WalletAssetsUI onAddToken={handleAdd} /> : null\n})\n\ninterface WalletAssetsUIProps {\n    onAddToken: (assetTab: WalletAssetTabs) => void\n}\n\nconst WalletAssetsUI = memo<WalletAssetsUIProps>(function WalletAssetsUI({ onAddToken }) {\n    const t = useMaskSharedTrans()\n    const [params] = useSearchParams()\n\n    const { classes } = useStyles()\n    const [currentTab, handleTabChange] = useParamTab<WalletAssetTabs>(WalletAssetTabs.Tokens)\n\n    const account = useAccount(NetworkPluginID.PLUGIN_EVM)\n    const SEARCH_KEY = 'collectionId'\n\n    const scrollTargetRef = useRef<HTMLDivElement>(null)\n\n    return (\n        <div className={classes.content}>\n            <TabContext value={currentTab}>\n                <Box className={classes.header}>\n                    <StyledTabList value={currentTab} onChange={handleTabChange}>\n                        <Tab\n                            className={classes.tab}\n                            label={t.popups_wallet_tab_assets()}\n                            value={WalletAssetTabs.Tokens}\n                        />\n                        <Tab\n                            className={classes.tab}\n                            label={t.popups_wallet_tab_collectibles()}\n                            value={WalletAssetTabs.Collectibles}\n                        />\n                        <Tab\n                            className={classes.tab}\n                            label={t.popups_wallet_tab_activity()}\n                            value={WalletAssetTabs.Activity}\n                        />\n                    </StyledTabList>\n                    <Button variant=\"text\" className={classes.addButton} onClick={() => onAddToken(currentTab)}>\n                        <Icons.AddNoBorder size={16} />\n                    </Button>\n                </Box>\n\n                <UserAssetsProvider\n                    pluginID={NetworkPluginID.PLUGIN_EVM}\n                    account={account}\n                    defaultCollectionId={params.get(SEARCH_KEY) || undefined}>\n                    <Boundary>\n                        <Box className={classes.panels}>\n                            <RestorableScroll scrollKey=\"assets\">\n                                <TabPanel value={WalletAssetTabs.Tokens} className={classes.tabPanel}>\n                                    <AssetsList />\n                                </TabPanel>\n                            </RestorableScroll>\n                            <TabPanel value={WalletAssetTabs.Collectibles} className={classes.tabPanel}>\n                                <RestorableScroll scrollKey=\"collectibles\" targetRef={scrollTargetRef}>\n                                    <WalletCollections onAddToken={onAddToken} scrollTargetRef={scrollTargetRef} />\n                                </RestorableScroll>\n                            </TabPanel>\n\n                            <RestorableScroll scrollKey=\"activities\">\n                                <TabPanel value={WalletAssetTabs.Activity} className={classes.tabPanel}>\n                                    <ActivityList />\n                                </TabPanel>\n                            </RestorableScroll>\n                        </Box>\n                    </Boundary>\n                </UserAssetsProvider>\n            </TabContext>\n        </div>\n    )\n})\n","import { Link, Typography, type StackProps, Box } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { Days } from '@masknet/shared-base'\n\nconst useStyles = makeStyles<{ columns: number }>()((theme, { columns }) => ({\n    container: {\n        background: theme.palette.maskColor.input,\n        borderRadius: 28,\n        padding: theme.spacing(0.5),\n        display: 'grid',\n        gridTemplateColumns: `repeat(${columns}, 1fr)`,\n    },\n    active: {\n        boxShadow: '0px 2px 5px 1px rgba(0, 0, 0, 0.05)',\n        background: theme.palette.background.paper,\n        fontWeight: 700,\n    },\n    link: {\n        padding: theme.spacing(1, 1.5),\n        cursor: 'pointer',\n        flexGrow: 1,\n        flexShrink: 0,\n        borderRadius: 18,\n        textAlign: 'center',\n        color: theme.palette.text.primary,\n        textDecoration: 'none !important',\n    },\n}))\n\nexport const DEFAULT_RANGE_OPTIONS = [Days.ONE_DAY, Days.ONE_WEEK, Days.ONE_MONTH, Days.ONE_YEAR, Days.MAX]\n\nfunction resolveDaysName(days: number) {\n    if (days === 0) return 'MAX'\n    if (days >= 365) return `${Math.floor(days / 365)}Y`\n    if (days >= 30) return `${Math.floor(days / 30)}M`\n    if (days >= 7) return `${Math.floor(days / 7)}W`\n    if (days === 1) return '24H'\n    return `${days}d`\n}\ninterface PriceChartDaysControlProps extends StackProps {\n    days: number\n    rangeOptions?: Days[]\n    onDaysChange?: (days: number) => void\n}\n\nexport function PriceChartRange({\n    rangeOptions = DEFAULT_RANGE_OPTIONS,\n    days,\n    onDaysChange,\n    ...rest\n}: PriceChartDaysControlProps) {\n    const { classes, cx } = useStyles({ columns: rangeOptions.length })\n    return (\n        <Box className={cx(classes.container, rest.className)} direction=\"row\" gap={2} {...rest}>\n            {rangeOptions.map((daysOption) => (\n                <Link\n                    className={cx(classes.link, days === daysOption ? classes.active : '')}\n                    key={daysOption}\n                    onClick={() => onDaysChange?.(daysOption)}>\n                    <Typography sx={{ ':hover': { fontWeight: 700 } }} component=\"span\">\n                        {resolveDaysName(daysOption)}\n                    </Typography>\n                </Link>\n            ))}\n        </Box>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { PopupRoutes, NetworkPluginID, PluginID } from '@masknet/shared-base'\nimport { openWindow } from '@masknet/shared-base-ui'\nimport { makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { isNativeTokenAddress, type ChainId } from '@masknet/web3-shared-evm'\nimport { Box, Typography, type BoxProps } from '@mui/material'\nimport { memo, useCallback, useMemo } from 'react'\nimport { matchPath, useLocation, useNavigate } from 'react-router-dom'\nimport urlcat from 'urlcat'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\nimport { useActivatedPlugin } from '@masknet/plugin-infra/dom'\n\nconst useStyles = makeStyles()((theme) => {\n    const isDark = theme.palette.mode === 'dark'\n    return {\n        container: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            paddingTop: 16,\n            paddingBottom: 16,\n            gap: theme.spacing(2),\n        },\n        button: {\n            color: theme.palette.maskColor.second,\n            width: 112,\n            height: theme.spacing(4.5),\n            boxSizing: 'border-box',\n            backgroundColor: theme.palette.maskColor.bottom,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 8,\n            border: 'none',\n            boxShadow: `0px 4px 6px 0px ${isDark ? 'rgba(0, 0, 0, 0.10)' : 'rgba(102, 108, 135, 0.10)'}`,\n            backdropFilter: 'blur(5px)',\n            cursor: 'pointer',\n            transition: 'transform 0.1s ease',\n            '&:hover': {\n                transform: 'scale(1.03)',\n            },\n            '&:active': {\n                transform: 'scale(0.97)',\n            },\n        },\n        disabled: {\n            opacity: 0.5,\n            cursor: 'unset',\n        },\n        label: {\n            color: theme.palette.maskColor.main,\n            marginLeft: theme.spacing(1),\n            fontWeight: 700,\n            fontSize: 14,\n        },\n    }\n})\n\ninterface Props extends BoxProps {\n    chainId: ChainId\n    address?: string\n    asset?: Web3Helper.FungibleAssetScope<void, NetworkPluginID.PLUGIN_EVM>\n}\n\nexport const ActionGroup = memo(function ActionGroup({ className, chainId, address, asset, ...rest }: Props) {\n    const { classes, cx, theme } = useStyles()\n    const t = useMaskSharedTrans()\n    const navigate = useNavigate()\n    const location = useLocation()\n    const traderDefinition = useActivatedPlugin(PluginID.Trader, 'any')\n    const chainIdList = traderDefinition?.enableRequirement.web3?.[NetworkPluginID.PLUGIN_EVM]?.supportedChainIds ?? []\n\n    const disabledSwap = useMemo(() => !chainIdList.includes(chainId), [chainId, chainIdList])\n\n    const handleSwap = useCallback(() => {\n        if (disabledSwap) return\n        const url = urlcat(\n            'popups.html#/',\n            PopupRoutes.Swap,\n            isNativeTokenAddress(asset?.address)\n                ? {\n                      chainId: asset?.chainId,\n                  }\n                : {\n                      id: asset?.address,\n                      chainId: asset?.chainId,\n                      name: asset?.name,\n                      symbol: asset?.symbol,\n                      contract_address: asset?.address,\n                      decimals: asset?.decimals,\n                  },\n        )\n        openWindow(browser.runtime.getURL(url), 'SWAP_DIALOG')\n    }, [asset, disabledSwap])\n\n    return (\n        <Box className={cx(classes.container, className)} {...rest}>\n            <button\n                type=\"button\"\n                className={classes.button}\n                onClick={() => {\n                    const path = urlcat(PopupRoutes.Contacts, {\n                        address,\n                        chainId,\n                        token: matchPath(PopupRoutes.TokenDetail, location.pathname) ? true : undefined,\n                        undecided: address ? undefined : true,\n                    })\n                    navigate(path, {\n                        state: { asset },\n                    })\n                }}>\n                <Icons.Send size={20} color={theme.palette.maskColor.main} />\n                <Typography className={classes.label}>{t.wallet_send()}</Typography>\n            </button>\n            <button\n                type=\"button\"\n                className={classes.button}\n                onClick={() => {\n                    navigate(\n                        urlcat(PopupRoutes.Receive, {\n                            chainId,\n                            address,\n                        }),\n                    )\n                }}>\n                <Icons.ArrowDownward size={20} color={theme.palette.maskColor.main} />\n                <Typography className={classes.label}>{t.wallet_receive()}</Typography>\n            </button>\n            <button\n                disabled={disabledSwap}\n                type=\"button\"\n                className={cx(classes.button, disabledSwap ? classes.disabled : undefined)}\n                onClick={handleSwap}>\n                <Icons.Cached size={20} color={theme.palette.maskColor.main} />\n                <Typography className={classes.label}>{t.wallet_swap()}</Typography>\n            </button>\n        </Box>\n    )\n})\n","import { usePriceLineChart, type Dimension, useDimension } from '@masknet/shared'\nimport type { TrendingAPI } from '@masknet/web3-providers/types'\nimport { useRef, type HTMLProps, useMemo } from 'react'\nimport { multipliedBy } from '@masknet/web3-shared-base'\nimport { useCurrencyType, useFiatCurrencyRate } from '@masknet/web3-hooks-base'\n\nexport const DIMENSION: Dimension = {\n    top: 32,\n    right: 16,\n    bottom: 32,\n    left: 16,\n    width: 368,\n    height: 174,\n}\n\ninterface TrendingChartProps extends HTMLProps<SVGSVGElement> {\n    stats: TrendingAPI.Stat[]\n}\n\nexport function TrendingChart({ stats, ...props }: TrendingChartProps) {\n    const svgRef = useRef<SVGSVGElement>(null)\n    const currencyType = useCurrencyType()\n    const { data: fiatCurrencyRate = 1 } = useFiatCurrencyRate()\n    const chartData = useMemo(\n        () =>\n            stats.map(([date, price]) => ({\n                date: new Date(date),\n                value: multipliedBy(price, fiatCurrencyRate).toNumber(),\n            })),\n        [stats],\n    )\n\n    useDimension(svgRef, DIMENSION)\n    usePriceLineChart(svgRef, chartData, DIMENSION, 'token-price-line-chart', { sign: currencyType })\n\n    return (\n        <svg\n            ref={svgRef}\n            width={DIMENSION.width}\n            height={DIMENSION.height}\n            viewBox={`0 0 ${DIMENSION.width} ${DIMENSION.height}`}\n            preserveAspectRatio=\"xMidYMid meet\"\n            {...props}\n        />\n    )\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useNativeToken } from '@masknet/web3-hooks-base'\nimport { CoinGeckoTrending, DSearch } from '@masknet/web3-providers'\nimport { fetchChains } from '@masknet/web3-providers/helpers'\nimport { SearchResultType } from '@masknet/web3-shared-base'\nimport { type ChainId, isNativeTokenAddress, getCoinGeckoConstant } from '@masknet/web3-shared-evm'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useCoinGeckoCoinId(chainId: ChainId, address?: string) {\n    const isNativeToken = isNativeTokenAddress(address)\n    const erc20CoinId = useQuery({\n        enabled: !isNativeToken && !!address,\n        queryKey: ['coin-gecko', 'coin-id', 'by-address', address],\n        queryFn: async () => {\n            const coinInfo = await CoinGeckoTrending.getCoinInfoByAddress(address!, chainId)\n            return coinInfo?.id\n        },\n    })\n\n    const { data: nativeToken } = useNativeToken(NetworkPluginID.PLUGIN_EVM, { chainId })\n    const { data: fallbackSymbol } = useQuery(['chain-list'], fetchChains, {\n        select: (chains) => chains.find((x) => x.chainId === chainId)?.nativeCurrency.symbol,\n    })\n    const symbol = nativeToken?.symbol || fallbackSymbol\n\n    const nativeCoinId = useQuery({\n        enabled: isNativeToken,\n        queryKey: ['native-token', 'coin-id', chainId, symbol],\n        queryFn: async () => {\n            const constantCoinId = getCoinGeckoConstant(chainId, 'COIN_ID')\n            if (constantCoinId) return constantCoinId\n            const results = await DSearch.search<Web3Helper.TokenResultAll>(symbol!, SearchResultType.FungibleToken)\n            return results[0]?.id\n        },\n    })\n    return isNativeToken ? nativeCoinId : erc20CoinId\n}\n","import { useQuery } from '@tanstack/react-query'\nimport { CoinGeckoTrending } from '@masknet/web3-providers'\nimport { trending } from '@masknet/web3-providers/helpers'\nimport type { TrendingAPI } from '@masknet/web3-providers/types'\nimport { SourceType } from '@masknet/web3-shared-base'\nimport { useCoinGeckoCoinId } from './useCoinGeckoCoinId.js'\n\nexport function useCoinTrendingStats(chainId: number, address?: string, days?: number) {\n    const { data: coinId, isLoading } = useCoinGeckoCoinId(chainId, address)\n    return useQuery({\n        enabled: !isLoading && days !== undefined,\n        queryKey: ['coin-stats', chainId, address, coinId, days],\n        queryFn: async (): Promise<TrendingAPI.Stat[] | undefined> => {\n            if (!coinId || days === undefined) return\n\n            const currency = trending.getCurrency(chainId, SourceType.CoinGecko)\n            if (!currency) return\n\n            return CoinGeckoTrending.getCoinPriceStats(chainId, coinId, currency, days)\n        },\n    })\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport { useFungibleTokenPrice, useNativeTokenAddress } from '@masknet/web3-hooks-base'\nimport type { ChainId } from '@masknet/web3-shared-evm'\n\nexport function useTokenPrice(chainId: ChainId, address?: string) {\n    const nativeTokenAddress = useNativeTokenAddress(NetworkPluginID.PLUGIN_EVM, { chainId })\n    return useFungibleTokenPrice(NetworkPluginID.PLUGIN_EVM, address ?? nativeTokenAddress, { chainId })\n}\n","import { CoinGeckoTrending } from '@masknet/web3-providers'\nimport { trending } from '@masknet/web3-providers/helpers'\nimport type { TrendingAPI } from '@masknet/web3-providers/types'\nimport { SourceType } from '@masknet/web3-shared-base'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport { useQuery } from '@tanstack/react-query'\nimport { useCoinGeckoCoinId } from './useCoinGeckoCoinId.js'\n\nexport function useTrending(chainId: ChainId, address?: string) {\n    const { data: coinId, isLoading } = useCoinGeckoCoinId(chainId, address)\n    return useQuery({\n        enabled: !isLoading,\n        queryKey: ['coin-trending', 'coin-gecko', chainId, coinId, address],\n        queryFn: async (): Promise<TrendingAPI.Trending | null | undefined> => {\n            const currency = trending.getCurrency(chainId, SourceType.CoinGecko)\n            if (!currency || !coinId) return null\n\n            return CoinGeckoTrending.getCoinTrending(chainId, coinId, currency)\n        },\n    })\n}\n","import { Icons } from '@masknet/icons'\nimport {\n    CoinMetadataTable,\n    CoinMetadataTableSkeleton,\n    EmptyStatus,\n    FormattedBalance,\n    FormattedCurrency,\n    FungibleCoinMarketTable,\n    FungibleCoinMarketTableSkeleton,\n    PriceChange,\n    PriceChartRange,\n    ProgressiveText,\n    ReloadStatus,\n    TokenIcon,\n} from '@masknet/shared'\nimport { Days, EMPTY_LIST, NetworkPluginID } from '@masknet/shared-base'\nimport { MaskDarkTheme, MaskLightTheme, makeStyles, usePopupCustomSnackbar } from '@masknet/theme'\nimport { useAccount, useFungibleTokenBalance, useWeb3State } from '@masknet/web3-hooks-base'\nimport { TokenType, formatBalance, formatCurrency, leftShift } from '@masknet/web3-shared-base'\nimport { SchemaType, isNativeTokenAddress } from '@masknet/web3-shared-evm'\nimport { Box, Button, Skeleton, ThemeProvider, Typography } from '@mui/material'\nimport { memo, useContext, useEffect, useMemo, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { PageTitleContext, useTitle, useTokenParams } from '../../../hooks/index.js'\nimport { ConfirmModal } from '../../../modals/modals.js'\nimport { ActionGroup } from '../components/index.js'\nimport { useAsset } from '../hooks/index.js'\nimport { DIMENSION, TrendingChart } from './TrendingChart.js'\nimport { useCoinTrendingStats } from './useCoinTrendingStats.js'\nimport { useTokenPrice } from './useTokenPrice.js'\nimport { useTrending } from './useTrending.js'\n\nconst useStyles = makeStyles()((theme) => {\n    const isDark = theme.palette.mode === 'dark'\n    return {\n        page: {\n            position: 'relative',\n            height: '100%',\n            overflow: 'auto',\n            // space for action group.\n            paddingBottom: 68,\n            zIndex: 3,\n            '::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        deleteButton: {\n            padding: 0,\n            minWidth: 'auto',\n            width: 'auto',\n        },\n        assetValue: {\n            fontSize: 24,\n            fontWeight: 700,\n            textAlign: 'center',\n            display: 'flex',\n            justifyContent: 'center',\n        },\n        priceChange: {\n            fontSize: 16,\n        },\n        tokenIcon: {\n            marginRight: 4,\n            fontSize: 12,\n        },\n        label: {\n            fontSize: 14,\n            fontWeight: 700,\n            color: theme.palette.maskColor.second,\n            textTransform: 'capitalize',\n        },\n        value: {\n            fontSize: 14,\n            fontWeight: 700,\n            color: theme.palette.maskColor.main,\n            marginTop: 2,\n            display: 'flex',\n            alignItems: 'center',\n        },\n        actions: {\n            position: 'fixed',\n            bottom: 0,\n            right: 0,\n            left: 0,\n        },\n        trending: {\n            display: 'flex',\n            boxSizing: 'border-box',\n            margin: theme.spacing(2, 'auto', 0),\n        },\n        info: {\n            backgroundColor: theme.palette.maskColor.bottom,\n            borderRadius: '20px 20px 0 0',\n            padding: theme.spacing(2),\n            boxShadow: theme.palette.maskColor.bottomBg,\n            backdropFilter: 'blur(8px)',\n        },\n        halo: {\n            position: 'relative',\n            zIndex: 1,\n            overflowX: 'hidden',\n            height: '100%',\n            '&:before': {\n                position: 'absolute',\n                left: '-10%',\n                top: 240,\n                zIndex: 1,\n                content: '\"\"',\n                height: 256,\n                width: 256,\n                backgroundImage: isDark\n                    ? 'radial-gradient(50% 50.00% at 50% 50.00%, #443434 0%, rgba(68, 52, 52, 0.00) 100%)'\n                    : 'radial-gradient(50% 50.00% at 50% 50.00%, #FFE9E9 0%, rgba(255, 233, 233, 0.00) 100%)',\n            },\n            '&:after': {\n                position: 'absolute',\n                left: '70%',\n                top: 240,\n                zIndex: 1,\n                content: '\"\"',\n                height: 256,\n                width: 256,\n                backgroundImage: isDark\n                    ? 'radial-gradient(50% 50.00% at 50% 50.00%, #605675 0%, rgba(56, 51, 67, 0.00) 100%)'\n                    : 'radial-gradient(50% 50.00% at 50% 50.00%, #F0E9FF 0%, rgba(240, 233, 255, 0.00) 100%)',\n            },\n        },\n    }\n})\n\nconst TokenDetail = memo(function TokenDetail() {\n    const { classes, theme } = useStyles()\n    const t = useMaskSharedTrans()\n    const { chainId, address } = useTokenParams()\n    const navigate = useNavigate()\n    const account = useAccount(NetworkPluginID.PLUGIN_EVM)\n    const isNativeToken = isNativeTokenAddress(address)\n    const asset = useAsset(chainId, address, account)\n    const { data: balance = asset?.balance } = useFungibleTokenBalance(NetworkPluginID.PLUGIN_EVM, address, { chainId })\n    const [chartRange, setChartRange] = useState(Days.ONE_DAY)\n    const {\n        data: stats = EMPTY_LIST,\n        refetch,\n        isLoading: isLoadingStats,\n    } = useCoinTrendingStats(chainId, address, chartRange)\n    const { data: tokenPrice = stats.at(-1)?.[1], isLoading: isLoadingPrice } = useTokenPrice(chainId, address)\n    const tokenValue = useMemo(() => {\n        if (asset?.value?.usd) return asset.value.usd\n        if (!asset?.decimals || !tokenPrice || !balance) return 0\n        return leftShift(balance, asset.decimals).times(tokenPrice)\n    }, [balance, asset, tokenPrice])\n\n    const { data: trending, isLoading: isLoadingTrending, isError } = useTrending(chainId, address)\n    const priceChange =\n        trending?.market?.price_change_percentage_24h_in_currency || trending?.market?.price_change_24h || 0\n\n    useTitle(asset ? `${asset.symbol}(${asset.name})` : 'Loading Asset...')\n    const { showSnackbar } = usePopupCustomSnackbar()\n    const { setExtension } = useContext(PageTitleContext)\n    const { Token } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n\n    useEffect(() => {\n        if (!asset || isNativeToken) return\n        setExtension(\n            <Button\n                variant=\"text\"\n                className={classes.deleteButton}\n                onClick={async () => {\n                    const result = await ConfirmModal.openAndWaitForClose({\n                        title: t.hide_token_symbol({ symbol: asset.symbol }),\n                        message: t.hide_token_description({ symbol: asset.symbol }),\n                    })\n                    if (!result) return\n                    // Actually, blocking.\n                    await Token?.blockToken?.(account, {\n                        id: asset.address,\n                        chainId,\n                        type: TokenType.Fungible,\n                        schema: SchemaType.ERC20,\n                        address: asset.address,\n                    })\n                    showSnackbar(t.hided_token_successfully())\n                    navigate(-1)\n                }}>\n                <Icons.Trash size={24} />\n            </Button>,\n        )\n        return () => setExtension(undefined)\n    }, [chainId, asset, isNativeToken, classes.deleteButton, showSnackbar, t, account])\n\n    return (\n        <div className={classes.halo}>\n            <Box className={classes.page}>\n                <Box padding={2}>\n                    <ProgressiveText className={classes.assetValue} loading={isLoadingPrice} skeletonWidth={80}>\n                        {typeof tokenPrice !== 'undefined' ? (\n                            <FormattedCurrency value={tokenPrice} formatter={formatCurrency} />\n                        ) : null}\n                    </ProgressiveText>\n                    <PriceChange className={classes.priceChange} change={priceChange} loading={isLoadingTrending} />\n                    <PriceChartRange days={chartRange} onDaysChange={setChartRange} gap=\"10px\" mt={2} />\n                    {!isLoadingStats && isError ? (\n                        <ReloadStatus\n                            onRetry={refetch}\n                            className={classes.trending}\n                            height={DIMENSION.height}\n                            width={DIMENSION.width}\n                        />\n                    ) : !isLoadingStats && !stats.length ? (\n                        <EmptyStatus className={classes.trending} height={DIMENSION.height} width={DIMENSION.width}>\n                            {t.not_enough_data_to_present()}\n                        </EmptyStatus>\n                    ) : (\n                        <TrendingChart key={`${chainId}.${address}`} className={classes.trending} stats={stats} />\n                    )}\n\n                    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n                        <Box>\n                            <Typography className={classes.label}>{t.balance()}</Typography>\n                            {asset ? (\n                                <Typography component=\"div\" className={classes.value} justifyContent=\"flex-start\">\n                                    <TokenIcon\n                                        className={classes.tokenIcon}\n                                        address={asset.address}\n                                        name={asset.name}\n                                        chainId={asset.chainId}\n                                        logoURL={asset.logoURL}\n                                        size={16}\n                                    />\n                                    <FormattedBalance\n                                        value={balance}\n                                        decimals={asset.decimals}\n                                        significant={6}\n                                        formatter={formatBalance}\n                                    />\n                                </Typography>\n                            ) : (\n                                <Typography component=\"div\" className={classes.value}>\n                                    <Skeleton className={classes.tokenIcon} variant=\"circular\" width={16} height={16} />\n                                    <Skeleton variant=\"text\" width={30} />\n                                </Typography>\n                            )}\n                        </Box>\n                        <Box textAlign=\"right\">\n                            <Typography className={classes.label}>{t.value()}</Typography>\n                            <Typography component=\"div\" className={classes.value} justifyContent=\"flex-end\">\n                                <FormattedCurrency value={tokenValue} formatter={formatCurrency} />\n                            </Typography>\n                        </Box>\n                    </Box>\n                </Box>\n                {isLoadingTrending ? (\n                    <Box className={classes.info}>\n                        <FungibleCoinMarketTableSkeleton />\n                        <CoinMetadataTableSkeleton />\n                    </Box>\n                ) : (\n                    <Box className={classes.info}>\n                        <FungibleCoinMarketTable trending={trending} />\n                        <CoinMetadataTable trending={trending} />\n                    </Box>\n                )}\n                <ThemeProvider theme={theme.palette.mode === 'light' ? MaskDarkTheme : MaskLightTheme}>\n                    <ActionGroup className={classes.actions} chainId={chainId} address={address} asset={asset} />\n                </ThemeProvider>\n            </Box>\n        </div>\n    )\n})\n\nexport default TokenDetail\n","import { EMPTY_LIST, NetworkPluginID } from '@masknet/shared-base'\nimport { useMemo } from 'react'\nimport { format } from 'date-fns'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport type { TransactionState } from './types.js'\nimport { useQuery } from '@tanstack/react-query'\nimport { useAccount, useWeb3State } from '@masknet/web3-hooks-base'\nimport type { RecentTransaction } from '@masknet/web3-shared-base'\nimport type { ChainId, Transaction as EvmTransaction } from '@masknet/web3-shared-evm'\n\n/**\n * Prefer to list online transaction.\n * But only local transaction record activity logs.\n * Would try to get activity from local record transaction for online transaction\n */\nexport function useTransactionLogs(transactionState: TransactionState) {\n    const t = useMaskSharedTrans()\n    const account = useAccount(NetworkPluginID.PLUGIN_EVM)\n    const { Transaction } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n    const { data: txes } = useQuery({\n        enabled: transactionState && !('candidates' in transactionState),\n        // Could already be cached through ActivityList page.\n        queryKey: ['transactions', transactionState?.chainId, account],\n        networkMode: 'always',\n        queryFn: async () => {\n            if (!transactionState?.chainId) return\n            return Transaction?.getTransactions?.(transactionState?.chainId, account) ?? EMPTY_LIST\n        },\n    })\n    const logs = useMemo(() => {\n        if (!transactionState) return EMPTY_LIST\n        const isRecentTx = 'candidates' in transactionState\n        const localTransaction: RecentTransaction<ChainId, EvmTransaction> | undefined = isRecentTx\n            ? transactionState\n            : txes?.find((x) => x.id === transactionState.id)\n        if (localTransaction) {\n            return [\n                t.transaction_confirmed_at({\n                    datetime: format(localTransaction.createdAt, \"HH:mm 'on' M/dd/yyyy\"),\n                }),\n                t.transaction_completed_at({\n                    datetime: format(localTransaction.updatedAt, \"HH:mm 'on' M/dd/yyyy\"),\n                }),\n            ].filter(Boolean)\n        }\n        return EMPTY_LIST\n    }, [transactionState, t, txes])\n\n    return logs\n}\n","import { Icons } from '@masknet/icons'\nimport { CopyButton, FormattedCurrency, ProgressiveText, ReversedAddress } from '@masknet/shared'\nimport { NetworkPluginID, PopupRoutes } from '@masknet/shared-base'\nimport { ActionButton, MaskColors, makeStyles } from '@masknet/theme'\nimport { useAccount, useNativeToken, useNativeTokenPrice } from '@masknet/web3-hooks-base'\nimport { ChainbaseHistory, ExplorerResolver, Web3 } from '@masknet/web3-providers'\nimport { chainbase } from '@masknet/web3-providers/helpers'\nimport {\n    TransactionStatusType,\n    formatBalance,\n    formatCurrency,\n    isSameAddress,\n    multipliedBy,\n    trimZero,\n} from '@masknet/web3-shared-base'\nimport {\n    formatHash,\n    formatWeiToEther,\n    formatWeiToGwei,\n    type Transaction as EvmTransaction,\n} from '@masknet/web3-shared-evm'\nimport { Box, Link, Typography, alpha } from '@mui/material'\nimport { useQuery } from '@tanstack/react-query'\nimport { BigNumber } from 'bignumber.js'\nimport { capitalize } from 'lodash-es'\nimport { memo, useCallback } from 'react'\nimport { Navigate, useLocation } from 'react-router-dom'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useTitle } from '../../../hooks/index.js'\nimport { ReplaceType, WalletAssetTabs } from '../type.js'\nimport { modifyTransaction, parseReceiverFromERC20TransferInput } from '../utils.js'\nimport type { TransactionState } from './types.js'\nimport { useTransactionLogs } from './useTransactionLogs.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    statusTitle: {\n        fontSize: 14,\n        fontWeight: 700,\n        textTransform: 'capitalize',\n    },\n    status: {\n        padding: theme.spacing(1),\n        borderRadius: 8,\n        display: 'inline-flex',\n        fontSize: 18,\n        fontWeight: 700,\n        marginLeft: 'auto',\n        alignItems: 'center',\n        gap: 4,\n        transition: 'all 0.3s ease-in-out',\n    },\n    statusFail: {\n        color: theme.palette.maskColor.danger,\n        backgroundColor: alpha(theme.palette.maskColor.danger, 0.1),\n    },\n    statusSuccess: {\n        color: theme.palette.maskColor.success,\n        backgroundColor: alpha(theme.palette.maskColor.success, 0.1),\n    },\n    statusPending: {\n        color: theme.palette.maskColor.warn,\n        backgroundColor: alpha(theme.palette.maskColor.warn, 0.1),\n    },\n    field: {\n        display: 'flex',\n        marginTop: theme.spacing(1.5),\n    },\n    fieldName: {\n        color: theme.palette.maskColor.second,\n        fontSize: 12,\n        fontWeight: 700,\n    },\n    fieldValue: {\n        minWidth: '5em',\n        color: theme.palette.maskColor.main,\n        marginLeft: 'auto',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        fontSize: 12,\n        fontWeight: 700,\n    },\n    sectionName: {\n        marginTop: theme.spacing(1.5),\n        backgroundColor: theme.palette.maskColor.bg,\n        padding: 10,\n        fontSize: 14,\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        borderRadius: 4,\n    },\n    logs: {\n        padding: 0,\n        margin: 0,\n        listStyleType: 'none',\n    },\n    log: {\n        marginTop: theme.spacing(1.5),\n        display: 'flex',\n        alignItems: 'center',\n    },\n    index: {\n        height: 22,\n        width: 22,\n        flexShrink: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: 'linear-gradient(180deg, #1C68F3 0%, #8EB6FF 99.00%)',\n        borderRadius: '50%',\n        color: MaskColors.light.maskColor.white,\n        fontSize: 12,\n        fontWeight: 700,\n    },\n    logText: {\n        lineHeight: '16px',\n        color: theme.palette.maskColor.main,\n        marginLeft: theme.spacing(1.5),\n        fontWeight: 700,\n        fontSize: 12,\n    },\n    actionGroup: {\n        display: 'flex',\n        justifyContent: 'center',\n        background: theme.palette.maskColor.secondaryBottom,\n        boxShadow: '0px 0px 20px 0px rgba(0, 0, 0, 0.05)',\n        backdropFilter: 'blur(8px)',\n        gap: theme.spacing(2),\n        padding: theme.spacing(2),\n        width: '100%',\n        bottom: 0,\n        zIndex: 100,\n        marginTop: 'auto',\n    },\n    speedupButton: {\n        backgroundColor: MaskColors.light.maskColor.primary,\n        color: MaskColors.light.maskColor.white,\n        '&:hover': {\n            backgroundColor: MaskColors.light.maskColor.primary,\n            color: MaskColors.light.maskColor.white,\n        },\n    },\n}))\n\nexport const TransactionDetail = memo(function TransactionDetail() {\n    const t = useMaskSharedTrans()\n    const { classes, cx, theme } = useStyles()\n    const location = useLocation()\n    const transactionState = location.state.transaction as TransactionState | undefined\n    const candidateState = location.state.candidate as EvmTransaction | undefined\n    const isRecentTx = transactionState && 'candidates' in transactionState\n    const transaction = isRecentTx ? transactionState.candidates[transactionState.id] : transactionState\n    const account = useAccount()\n    const chainId = transactionState?.chainId\n    const transactionId = transactionState?.id\n    const blockNumber = transaction && 'blockNumber' in transaction ? transaction.blockNumber : undefined\n    useTitle(capitalize(transaction && 'cateName' in transaction ? transaction.cateName : 'Transaction'))\n    const { data: nativeToken } = useNativeToken(NetworkPluginID.PLUGIN_EVM, { chainId: transaction?.chainId })\n    const { data: nativeTokenPrice } = useNativeTokenPrice(NetworkPluginID.PLUGIN_EVM, {\n        chainId: transaction?.chainId,\n    })\n\n    const { data: tx, isLoading: loadingTx } = useQuery({\n        enabled: !!transaction,\n        queryKey: ['chainbase', 'transaction', transaction?.chainId, transactionId, blockNumber],\n        queryFn: async () => {\n            if (!chainId || !transactionId) return null\n            return ChainbaseHistory.getTransaction(chainId, transactionId, blockNumber)\n        },\n    })\n\n    const { data: txInput, isLoading: loadingTxInput } = useQuery({\n        enabled:\n            !!transaction && !loadingTx && !tx?.input && transactionState?.type === 'transfer' && !candidateState?.data,\n        queryKey: [transaction?.chainId, transactionId],\n        queryFn: async () => {\n            if (!chainId || !transactionId) return\n            const tx = await Web3.getTransaction(transactionId, { chainId })\n            return tx?.input\n        },\n    })\n\n    const handleSpeedup = useCallback(() => {\n        if (!isRecentTx) return\n        return modifyTransaction(transactionState, ReplaceType.SPEED_UP)\n    }, [isRecentTx, transactionState])\n\n    const handleCancel = useCallback(() => {\n        if (!isRecentTx) return\n        modifyTransaction(transactionState, ReplaceType.CANCEL)\n    }, [isRecentTx, transactionState])\n\n    const logs = useTransactionLogs(transactionState)\n    if (!transaction) {\n        return <Navigate to={`${PopupRoutes.Wallet}?tab=${WalletAssetTabs.Activity}`} replace />\n    }\n\n    const { FAILED, SUCCEED, NOT_DEPEND } = TransactionStatusType\n    const StatusIconMap = {\n        [FAILED]: <Icons.BaseClose size={20} />,\n        [SUCCEED]: <Icons.FillSuccess size={20} />,\n        [NOT_DEPEND]: <Icons.WarningTriangle size={20} />,\n    }\n    const StatusClassesMap = {\n        [FAILED]: classes.statusFail,\n        [SUCCEED]: classes.statusSuccess,\n        [NOT_DEPEND]: classes.statusPending,\n    }\n    const StatusLabelMap = {\n        [FAILED]: t.transaction_failed(),\n        [SUCCEED]: t.transaction_success(),\n        [NOT_DEPEND]: t.transaction_pending(),\n    }\n    const status = tx ? chainbase.normalizeTxStatus(tx.status) : transactionState?.status!\n    const statusPending = status === undefined && loadingTx\n    const isOut = isSameAddress(transaction.from, account)\n    const link = transactionId ? ExplorerResolver.transactionLink(chainId!, transactionId) : undefined\n\n    const gasUsedPercent = tx ? (tx.gas_used * 100) / tx.gas : 0\n    const gasFeeInState = !isRecentTx && !tx ? transactionState?.fee?.eth : undefined\n    const gasFee = tx\n        ? formatWeiToEther(multipliedBy(tx.gas_used, tx.effective_gas_price))\n        : gasFeeInState\n        ? new BigNumber(gasFeeInState)\n        : undefined\n    const gasCost = gasFee && nativeTokenPrice ? gasFee.times(nativeTokenPrice) : undefined\n\n    const receiverAddress = parseReceiverFromERC20TransferInput(candidateState?.data || tx?.input || txInput)\n    const toAddress = receiverAddress || transaction.to || tx?.to_address\n\n    const loadingToAddress =\n        transactionState?.type === 'transfer'\n            ? !receiverAddress && (loadingTx || loadingTxInput)\n            : !transaction.to && loadingTx\n    return (\n        <>\n            <Box p={2} overflow=\"auto\" data-hide-scrollbar>\n                <Box display=\"flex\" alignItems=\"center\">\n                    <Typography variant=\"h2\" className={classes.statusTitle}>\n                        {t.transaction_status()}\n                    </Typography>\n                    <ProgressiveText\n                        component=\"div\"\n                        className={cx(classes.status, StatusClassesMap[status])}\n                        loading={statusPending}\n                        skeletonWidth={90}>\n                        {StatusIconMap[status]}\n                        {StatusLabelMap[status]}\n                    </ProgressiveText>\n                </Box>\n                {transactionId ? (\n                    <Box className={classes.field}>\n                        <Typography className={classes.fieldName}>{t.transaction_hash()}</Typography>\n                        <Typography className={classes.fieldValue}>\n                            {formatHash(transactionId, 4)}\n                            <CopyButton size={16} text={transactionId} sx={{ ml: 0.5 }} />\n                        </Typography>\n                    </Box>\n                ) : null}\n                <Box className={classes.field}>\n                    <Typography className={classes.fieldName}>{t.transaction_link()}</Typography>\n                    <Typography className={classes.fieldValue}>\n                        {t.view_on_explorer()}\n                        <Link href={link} target=\"_blank\" ml={0.5} fontSize={0}>\n                            <Icons.LinkOut size={16} color={theme.palette.maskColor.second} />\n                        </Link>\n                    </Typography>\n                </Box>\n                <Typography variant=\"h2\" className={classes.sectionName}>\n                    {t.transaction_base()}\n                </Typography>\n                <Box className={classes.field}>\n                    <Typography className={classes.fieldName}>{t.transaction_from()}</Typography>\n                    <ProgressiveText\n                        className={classes.fieldValue}\n                        component=\"div\"\n                        loading={!transaction.from && loadingTx}>\n                        <ReversedAddress address={(transaction.from || tx?.from_address) as string} />\n                    </ProgressiveText>\n                </Box>\n                <Box className={classes.field}>\n                    <Typography className={classes.fieldName}>{t.transaction_to()}</Typography>\n                    <ProgressiveText className={classes.fieldValue} component=\"div\" loading={loadingToAddress}>\n                        <ReversedAddress address={toAddress as string} />\n                    </ProgressiveText>\n                </Box>\n                <Typography variant=\"h2\" className={classes.sectionName}>\n                    Transaction\n                </Typography>\n                <Box className={classes.field}>\n                    <Typography className={classes.fieldName}>{t.nonce()}</Typography>\n                    <ProgressiveText loading={loadingTx} className={classes.fieldValue}>\n                        {tx?.nonce}\n                    </ProgressiveText>\n                </Box>\n                <Box className={classes.field}>\n                    <Typography className={classes.fieldName}>{t.amount()}</Typography>\n                    <ProgressiveText loading={loadingTx} className={classes.fieldValue}>\n                        {tx && nativeToken\n                            ? `${isOut ? '-' : '+'}${formatBalance(tx.value || '0', nativeToken.decimals, 6)} ${\n                                  nativeToken.symbol\n                              }`\n                            : ''}\n                    </ProgressiveText>\n                </Box>\n                <Box className={classes.field}>\n                    <Typography className={classes.fieldName}>{t.transaction_gas_limit()}</Typography>\n                    <ProgressiveText loading={loadingTx} className={classes.fieldValue}>\n                        {tx?.gas}\n                    </ProgressiveText>\n                </Box>\n                <Box className={classes.field}>\n                    <Typography className={classes.fieldName}>{t.transaction_gas_used()}</Typography>\n                    <ProgressiveText loading={loadingTx} className={classes.fieldValue}>\n                        {tx?.gas_used}\n                        {gasUsedPercent ? ` (${trimZero(gasUsedPercent.toFixed(1))}%)` : ''}\n                    </ProgressiveText>\n                </Box>\n                <Box className={classes.field}>\n                    <Typography className={classes.fieldName}>{t.transaction_gas_price()}</Typography>\n                    <ProgressiveText loading={loadingTx} className={classes.fieldValue}>\n                        {tx ? formatWeiToGwei(tx.effective_gas_price).toFixed(6) : ''}\n                    </ProgressiveText>\n                </Box>\n                {tx?.max_priority_fee_per_gas ? (\n                    <Box className={classes.field}>\n                        <Typography className={classes.fieldName}>{t.transaction_priority_fee()}</Typography>\n                        <ProgressiveText loading={loadingTx} className={classes.fieldValue}>\n                            {tx ? formatWeiToGwei(tx.max_priority_fee_per_gas).toFixed(6) : ''}\n                        </ProgressiveText>\n                    </Box>\n                ) : null}\n                {tx?.max_fee_per_gas ? (\n                    <Box className={classes.field}>\n                        <Typography className={classes.fieldName}>{t.transaction_max_fee()}</Typography>\n                        <ProgressiveText loading={loadingTx} className={classes.fieldValue}>\n                            {tx ? formatWeiToGwei(tx.max_fee_per_gas).toFixed(6) : ''}\n                        </ProgressiveText>\n                    </Box>\n                ) : null}\n                <Box className={classes.field}>\n                    <Typography className={classes.fieldName}>{t.transaction_fee()}</Typography>\n                    <ProgressiveText loading={loadingTx} className={classes.fieldValue}>\n                        {gasFee ? `${gasFee.toFixed(6)} ${nativeToken?.symbol}` : ''}\n                        {gasCost ? (\n                            <>\n                                {' ≈ '}\n                                <FormattedCurrency value={gasCost} formatter={formatCurrency} />\n                            </>\n                        ) : (\n                            ''\n                        )}\n                    </ProgressiveText>\n                </Box>\n                {logs?.length ? (\n                    <>\n                        <Typography variant=\"h2\" className={classes.sectionName}>\n                            {t.activity_log()}\n                        </Typography>\n                        <ol className={classes.logs}>\n                            {logs.map((log, index) => (\n                                <li key={index} className={classes.log}>\n                                    <div className={classes.index}>{index + 1}</div>\n                                    <Typography className={classes.logText}>{log}</Typography>\n                                </li>\n                            ))}\n                        </ol>\n                    </>\n                ) : null}\n            </Box>\n            {isRecentTx && status === NOT_DEPEND ? (\n                <Box className={classes.actionGroup}>\n                    <ActionButton className={classes.speedupButton} fullWidth onClick={handleSpeedup}>\n                        {t.speed_up()}\n                    </ActionButton>\n                    <ActionButton color=\"error\" fullWidth onClick={handleCancel}>\n                        {t.cancel()}\n                    </ActionButton>\n                </Box>\n            ) : null}\n        </>\n    )\n})\n","import { Icons } from '@masknet/icons'\nimport { AssetPreviewer, Image, NFTFallbackImage, NFTSpamBadge, ProgressiveText, useReportSpam } from '@masknet/shared'\nimport { NetworkPluginID, PopupRoutes } from '@masknet/shared-base'\nimport { LoadingBase, TextOverflowTooltip, makeStyles, usePopupCustomSnackbar } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useAccount, useNonFungibleAsset, useWeb3State } from '@masknet/web3-hooks-base'\nimport { TokenType, formatBalance } from '@masknet/web3-shared-base'\nimport {\n    SchemaType,\n    formatTrait,\n    isLensCollect,\n    isLensFollower,\n    isLensProfileAddress,\n    resolveImageURL,\n} from '@masknet/web3-shared-evm'\nimport { Button, IconButton, Skeleton, Typography } from '@mui/material'\nimport { memo, useContext, useEffect, useMemo } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport urlcat from 'urlcat'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { PageTitleContext, useTitle, useTokenParams } from '../../../hooks/index.js'\nimport { ConfirmModal } from '../../../modals/modals.js'\nimport { TransferTabType } from '../type.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    page: {\n        padding: theme.spacing(2),\n        overflow: 'auto',\n        paddingBottom: 74,\n    },\n    image: {\n        width: 178,\n        height: 178,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        borderRadius: 12,\n        overflow: 'hidden',\n    },\n    name: {\n        fontSize: 16,\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n        textAlign: 'center',\n        margin: theme.spacing(1.5, 'auto', 0),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    collectionName: {\n        fontSize: 14,\n        fontWeight: 400,\n        textAlign: 'center',\n        marginTop: theme.spacing(1.5),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    collectionNameLabel: {\n        marginLeft: 4,\n        marginRight: 4,\n    },\n    fallbackImage: {\n        minHeight: '0 !important',\n        maxWidth: 'none',\n        width: '100%',\n        height: '100%',\n    },\n    icon: {\n        borderRadius: '50%',\n        overflow: 'hidden',\n    },\n    prices: {\n        display: 'flex',\n        gap: theme.spacing(1.5),\n        marginTop: theme.spacing(4),\n    },\n    price: {\n        flexGrow: 1,\n    },\n    priceLabel: {\n        fontSize: 14,\n        fontWeight: 700,\n        color: theme.palette.maskColor.second,\n    },\n    priceValue: {\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        marginTop: theme.spacing(1.5),\n    },\n    noneValue: {\n        color: theme.palette.maskColor.second,\n    },\n    sectionTitle: {\n        fontSize: 14,\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1.5),\n    },\n    text: {\n        fontSize: 12,\n        color: theme.palette.maskColor.second,\n        fontWeight: 400,\n        wordWrap: 'break-word',\n    },\n    traits: {\n        flexWrap: 'wrap',\n        gap: theme.spacing(1.5),\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n    },\n    trait: {\n        border: `1px solid ${theme.palette.maskColor.line}`,\n        borderRadius: 8,\n        padding: 6,\n        overflow: 'auto',\n    },\n    traitType: {\n        fontSize: 12,\n        color: theme.palette.maskColor.primaryMain,\n        textTransform: 'capitalize',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    traitValue: {\n        fontSize: 13,\n        fontWeight: 700,\n        color: theme.palette.maskColor.primary,\n        marginTop: theme.spacing(0.5),\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    sendButton: {\n        position: 'fixed',\n        left: 18,\n        right: 18,\n        bottom: 18,\n        boxShadow: '0px 6px 12px 0px rgba(7, 16, 27, 0.20)',\n        backdropFilter: 'blur(8px)',\n    },\n    iconButton: {\n        padding: 0,\n        minWidth: 'auto',\n        width: 'auto',\n    },\n    reportButton: {\n        color: theme.palette.maskColor.main,\n        height: 20,\n        width: 20,\n        padding: 0,\n        borderRadius: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}))\n\nexport const CollectibleDetail = memo(function CollectibleDetail() {\n    const { classes, cx } = useStyles()\n    const t = useMaskSharedTrans()\n    const navigate = useNavigate()\n    const location = useLocation()\n    const { chainId, address, params } = useTokenParams()\n    const account = useAccount(NetworkPluginID.PLUGIN_EVM)\n    const id = params.get('id') || ''\n    const stateAsset = location.state?.asset as\n        | Web3Helper.NonFungibleTokenScope<void, NetworkPluginID.PLUGIN_EVM>\n        | undefined\n    const { data: asset, isLoading } = useNonFungibleAsset(NetworkPluginID.PLUGIN_EVM, address, id, { chainId })\n\n    useEffect(() => {\n        if (!asset && !isLoading) navigate(-1)\n    }, [!asset && !isLoading, navigate])\n    useTitle(asset?.metadata?.name || t.collectible_title())\n\n    const availableAsset = asset || stateAsset\n\n    const name = availableAsset?.metadata?.name\n    const collectionName = availableAsset?.collection?.name\n    const assetDesc = availableAsset?.metadata?.description\n    const collectionDesc = availableAsset?.collection?.description\n    const floorPrice = useMemo(() => {\n        if (!asset?.collection?.floorPrices) return null\n        return (\n            asset.collection.floorPrices.find((x) => x.marketplace_id === 'opensea') || asset.collection.floorPrices[0]\n        )\n    }, [asset?.collection?.floorPrices])\n\n    const { showSnackbar } = usePopupCustomSnackbar()\n    const { setExtension } = useContext(PageTitleContext)\n    const { Token } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n    useEffect(() => {\n        setExtension(\n            <Button\n                variant=\"text\"\n                className={classes.iconButton}\n                onClick={async () => {\n                    const result = await ConfirmModal.openAndWaitForClose({\n                        title: t.hide_collectible({ name: String(name) }),\n                        message: t.hide_collectible_description({ name: String(name) }),\n                    })\n                    if (!result || !Token?.blockToken || !availableAsset) return\n                    await Token.blockToken(account, {\n                        id: `${availableAsset.chainId}.${availableAsset.address}.${availableAsset.tokenId}`,\n                        chainId: availableAsset.chainId,\n                        type: TokenType.NonFungible,\n                        schema: SchemaType.ERC721,\n                        address: availableAsset.address,\n                        tokenId: availableAsset.tokenId,\n                    })\n                    await Token.removeNonFungibleTokens?.(\n                        account,\n                        {\n                            chainId: availableAsset.chainId,\n                            name: '', // Name is not necessary but satisfies typing.\n                            address: availableAsset.address,\n                            schema: SchemaType.ERC721,\n                        },\n                        [availableAsset.tokenId],\n                    )\n                    showSnackbar(t.hided_token_successfully())\n                    navigate(-1)\n                }}>\n                <Icons.Trash size={24} />\n            </Button>,\n        )\n        return () => setExtension(undefined)\n    }, [classes.iconButton, t, name, account, navigate, showSnackbar])\n\n    const lastSale = asset?.priceInToken\n    const transferable = useMemo(() => {\n        if (!availableAsset) return false\n        if (isLensProfileAddress(availableAsset.address)) return false\n        if (availableAsset.metadata?.name && isLensFollower(availableAsset.metadata.name)) return false\n        if (availableAsset.collection?.name && isLensCollect(availableAsset.collection.name)) return false\n        return true\n    }, [availableAsset])\n\n    const fallbackImage = availableAsset\n        ? resolveImageURL(\n              undefined,\n              availableAsset.metadata?.name,\n              availableAsset.collection?.name,\n              availableAsset.contract?.address,\n          )\n        : NFTFallbackImage\n    const { isReporting, isSpam, promptReport } = useReportSpam({\n        address: availableAsset?.address,\n        chainId: availableAsset?.chainId,\n        collectionId: availableAsset?.collection?.id,\n    })\n    return (\n        <article className={classes.page} data-hide-scrollbar>\n            {availableAsset ? (\n                <AssetPreviewer\n                    classes={{ root: classes.image, fallbackImage: classes.fallbackImage }}\n                    url={availableAsset?.metadata?.imageURL}\n                    fallbackImage={fallbackImage}\n                />\n            ) : (\n                <Skeleton className={classes.image} />\n            )}\n            <ProgressiveText\n                variant=\"h1\"\n                className={classes.name}\n                loading={isLoading || !name}\n                skeletonWidth={100}\n                skeletonHeight={18}>\n                {name}\n            </ProgressiveText>\n            <div className={classes.collectionName}>\n                {availableAsset?.collection?.iconURL ? (\n                    <Image size={24} classes={{ container: classes.icon }} src={availableAsset.collection.iconURL} />\n                ) : null}\n                <ProgressiveText\n                    className={classes.collectionNameLabel}\n                    loading={isLoading || !collectionName}\n                    skeletonWidth={80}>\n                    {collectionName}\n                </ProgressiveText>\n                {isSpam ? (\n                    <NFTSpamBadge />\n                ) : (\n                    <IconButton className={classes.reportButton} onClick={promptReport} disabled={isReporting}>\n                        {isReporting ? <LoadingBase size={16} /> : <Icons.Flag size={16} />}\n                    </IconButton>\n                )}\n            </div>\n            <div className={classes.prices}>\n                <div className={classes.price}>\n                    <Typography variant=\"h2\" className={classes.priceLabel}>\n                        {t.collectible_last_sale_price()}\n                    </Typography>\n                    <Typography className={cx(classes.priceValue, lastSale ? '' : classes.noneValue)}>\n                        {lastSale\n                            ? `${formatBalance(lastSale.amount, lastSale.token.decimals)} ${lastSale.token.symbol}`\n                            : t.none()}\n                    </Typography>\n                </div>\n                <div className={classes.price}>\n                    <Typography variant=\"h2\" className={classes.priceLabel}>\n                        {t.floor_price()}\n                    </Typography>\n                    <Typography className={cx(classes.priceValue, floorPrice ? '' : classes.noneValue)}>\n                        {floorPrice\n                            ? `${formatBalance(floorPrice.value, floorPrice.payment_token.decimals)} ${\n                                  floorPrice.payment_token.symbol\n                              }`\n                            : t.none()}\n                    </Typography>\n                </div>\n            </div>\n            <Typography variant=\"h2\" className={classes.sectionTitle}>\n                {t.collectible_description()}\n            </Typography>\n            <Typography variant=\"body1\" className={classes.text}>\n                {assetDesc || t.none()}\n            </Typography>\n            {isLoading || asset?.traits?.length ? (\n                <>\n                    <Typography variant=\"h2\" className={classes.sectionTitle}>\n                        {t.collectible_properties()}\n                    </Typography>\n                    <div className={classes.traits}>\n                        {asset?.traits?.map((trait, index) => {\n                            const uiValue = formatTrait(trait)\n\n                            return (\n                                <div key={index} className={classes.trait}>\n                                    <TextOverflowTooltip title={trait.type}>\n                                        <Typography className={classes.traitType}>{trait.type}</Typography>\n                                    </TextOverflowTooltip>\n                                    <TextOverflowTooltip title={trait.value}>\n                                        <Typography className={classes.traitValue}>{uiValue}</Typography>\n                                    </TextOverflowTooltip>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </>\n            ) : null}\n            {isLoading || collectionDesc ? (\n                <>\n                    <Typography variant=\"h2\" className={classes.sectionTitle}>\n                        {t.about_collection({ name: String(collectionName) })}\n                    </Typography>\n                    <ProgressiveText variant=\"body1\" loading={isLoading} className={classes.text} skeletonWidth={100}>\n                        {collectionDesc}\n                    </ProgressiveText>\n                </>\n            ) : null}\n            {transferable ? (\n                <Button\n                    className={classes.sendButton}\n                    onClick={() => {\n                        const path = urlcat(PopupRoutes.Contacts, {\n                            tab: TransferTabType.NFT,\n                            'nft:chainId': chainId,\n                            'nft:address': address,\n                            'nft:tokenId': availableAsset?.tokenId,\n                        })\n                        navigate(path)\n                    }}>\n                    <Icons.Send size={16} style={{ marginRight: 4 }} />\n                    {t.send()}\n                </Button>\n            ) : null}\n        </article>\n    )\n})\n","import urlcat from 'urlcat'\nimport { memo, useCallback, useState } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport { LoadingButton } from '@mui/lab'\nimport { Box, Typography, useTheme } from '@mui/material'\nimport { PopupRoutes } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport Services from '#services'\nimport { PasswordField } from '../../../components/PasswordField/index.js'\nimport { PopupHomeTabType } from '@masknet/shared'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        background: theme.palette.maskColor.secondaryBottom,\n    },\n    content: {\n        padding: '0px 16px',\n        display: 'flex',\n        justifyContent: 'flex-start',\n        flexDirection: 'column',\n    },\n    titleWrapper: {\n        paddingTop: 8,\n        height: 100,\n        padding: 16,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    title: {\n        fontSize: 24,\n        lineHeight: '120%',\n        fontStyle: 'normal',\n        fontWeight: 700,\n        marginBottom: 12,\n    },\n    inputWrapper: {\n        paddingTop: 18,\n        height: 192,\n        width: '100%',\n    },\n    pointer: {\n        cursor: 'pointer',\n    },\n}))\n\nconst Unlock = memo(function Unlock() {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const [password, setPassword] = useState('')\n    const theme = useTheme()\n    const navigate = useNavigate()\n    const [params] = useSearchParams()\n\n    const [{ value: verified, loading }, handleUnlock] = useAsyncFn(async () => {\n        const from = params.get('from')\n        const close_after_unlock = params.get('close_after_unlock')\n        const verified = await Services.Wallet.unlockWallet(password)\n\n        if (verified) {\n            if (close_after_unlock && !from) {\n                await Services.Helper.removePopupWindow()\n            } else if (from) {\n                const path = urlcat(from, {\n                    tab: from === PopupRoutes.Personas ? PopupHomeTabType.ConnectedWallets : undefined,\n                })\n                navigate(path, { replace: true })\n            }\n        }\n        return verified\n    }, [password, params])\n\n    const navigateToResetWallet = useCallback(() => {\n        navigate({ pathname: PopupRoutes.ResetWallet })\n    }, [])\n\n    return (\n        <Box className={classes.container}>\n            <Box className={classes.content}>\n                <Box className={classes.titleWrapper}>\n                    <Typography className={classes.title}>{t.welcome_back()}</Typography>\n                </Box>\n                <Box className={classes.inputWrapper}>\n                    <PasswordField\n                        placeholder=\"Password\"\n                        value={password}\n                        autoFocus\n                        onKeyDown={(event) => {\n                            if (event.key === 'Enter') handleUnlock()\n                        }}\n                        type=\"password\"\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    {verified === false ? (\n                        <Typography fontSize={14} color={theme.palette.maskColor.danger} marginTop=\"12px\">\n                            {t.popups_wallet_unlock_error_password()}\n                        </Typography>\n                    ) : null}\n                </Box>\n\n                <LoadingButton\n                    loading={loading}\n                    fullWidth\n                    variant=\"contained\"\n                    disabled={!password || loading}\n                    onClick={handleUnlock}>\n                    {t.unlock()}\n                </LoadingButton>\n\n                <Typography\n                    color={theme.palette.maskColor.main}\n                    marginTop=\"16px\"\n                    onClick={navigateToResetWallet}\n                    className={classes.pointer}\n                    fontSize={14}\n                    textAlign=\"center\"\n                    fontWeight={700}>\n                    {t.popups_wallet_reset_tips()}\n                </Typography>\n            </Box>\n        </Box>\n    )\n})\n\nexport default Unlock\n","import { memo } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { Box, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { Sniffings } from '@masknet/shared-base'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\nimport Services from '#services'\nimport { ImportCreateWallet } from '../ImportCreateWallet/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        background: theme.palette.maskColor.secondaryBottom,\n    },\n    content: {\n        padding: 16,\n        display: 'flex',\n        justifyContent: 'flex-start',\n        flexDirection: 'column',\n    },\n    titleWrapper: {\n        padding: theme.spacing(2, 0),\n        display: 'flex',\n        marginBottom: 12,\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    title: {\n        fontSize: 24,\n        lineHeight: '120%',\n        fontStyle: 'normal',\n        fontWeight: 700,\n    },\n    placeholderDescription: {\n        fontSize: 14,\n        lineHeight: '18px',\n        fontWeight: 700,\n        color: theme.palette.maskColor.third,\n        marginTop: theme.spacing(1.5),\n        textAlign: 'center',\n    },\n}))\n\nexport const WalletStartUp = memo(function WalletStartUp() {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n\n    const [, onEnterCreateWallet] = useAsyncFn(async () => {\n        if (Sniffings.is_firefox) {\n            window.close()\n        }\n\n        await Services.Helper.removePopupWindow()\n    }, [])\n\n    return (\n        <Box className={classes.container} data-hide-scrollbar>\n            <Box className={classes.content}>\n                <Box className={classes.titleWrapper}>\n                    <Typography className={classes.title}>{t.popups_add_wallet()}</Typography>\n                    <Typography className={classes.placeholderDescription}>\n                        {t.popups_add_wallet_description()}\n                    </Typography>\n                </Box>\n                <ImportCreateWallet onChoose={onEnterCreateWallet} />\n            </Box>\n        </Box>\n    )\n})\n","import { memo, useCallback } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { Box } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { useLocation, useNavigate } from 'react-router-dom'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        display: 'flex',\n        height: 140,\n        padding: 16,\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexShrink: 0,\n        alignSelf: 'stretch',\n        background:\n            theme.palette.mode === 'light'\n                ? 'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, #FFFFFF 100%), linear-gradient(90deg, rgba(98, 126, 234, 0.2) 0%, rgba(59, 153, 252, 0.2) 100%)'\n                : theme.palette.maskColor.bottom,\n        lineHeight: 0,\n    },\n    backIcon: {\n        position: 'absolute',\n        top: 16,\n        left: 16,\n        fontSize: 24,\n        cursor: 'pointer',\n        color: theme.palette.maskColor.main,\n    },\n}))\n\ninterface WalletSetupHeaderUIProps {\n    showBack?: boolean\n}\n\nexport const WalletSetupHeaderUI = memo<WalletSetupHeaderUIProps>(function WalletSetupHeaderUI({ showBack }) {\n    const { classes } = useStyles()\n    const navigate = useNavigate()\n    const location = useLocation()\n    const handleBack = useCallback(() => navigate(-1), [location])\n\n    return (\n        <Box className={classes.container}>\n            {showBack ? <Icons.Comeback className={classes.backIcon} onClick={handleBack} /> : null}\n            <Icons.MaskWallet width={64} height={64} />\n        </Box>\n    )\n})\n","import { useQuery } from '@tanstack/react-query'\nimport Services from '#services'\n\nexport function useConnectedWallets(origin: string | null) {\n    return useQuery(\n        ['origin-connected-wallets', origin],\n        async () => {\n            if (origin === null) {\n                const result = await Services.Helper.queryCurrentActiveTab()\n                if (!result.url || !URL.canParse(result.url)) return null\n                origin = new URL(result.url).origin\n            }\n            const connected = await Services.Wallet.getAllConnectedWallets(origin)\n            return connected\n        },\n        { networkMode: 'always' },\n    )\n}\n","import { FormattedCurrency, ProgressiveText, type ProgressiveTextProps } from '@masknet/shared'\nimport { formatCurrency } from '@masknet/web3-shared-base'\nimport { sum } from 'lodash-es'\nimport { memo, useMemo } from 'react'\nimport { useWalletAssets } from '../../hooks/index.js'\n\ninterface WalletAssetsValueProps extends Omit<ProgressiveTextProps, 'loading'> {\n    account?: string\n}\n\nexport const WalletAssetsValue = memo(function WalletAssetsValue({ account, ...props }: WalletAssetsValueProps) {\n    const { data: assets, isLoading } = useWalletAssets()\n\n    const value = useMemo(() => {\n        return sum(assets.map((x) => (x.value?.usd ? Number.parseFloat(x.value.usd) : 0)))\n    }, [assets])\n\n    return (\n        <ProgressiveText {...props} loading={isLoading}>\n            <FormattedCurrency\n                value={value}\n                formatter={formatCurrency}\n                options={{ onlyRemainTwoOrZeroDecimal: true }}\n            />\n        </ProgressiveText>\n    )\n})\n","import { Icons } from '@masknet/icons'\nimport { ChainIcon, CopyButton, FormattedAddress, ImageIcon, ProgressiveText } from '@masknet/shared'\nimport type { Wallet } from '@masknet/shared-base'\nimport { makeStyles, TextOverflowTooltip } from '@masknet/theme'\nimport { ExplorerResolver } from '@masknet/web3-providers'\nimport type { ReasonableNetwork } from '@masknet/web3-shared-base'\nimport { formatEthereumAddress, type ChainId, type NetworkType, type SchemaType } from '@masknet/web3-shared-evm'\nimport { Box, Link, Typography } from '@mui/material'\nimport { memo, type MouseEvent } from 'react'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\nimport { useConnectedWallets } from '../../hooks/useConnected.js'\nimport { ActionGroup } from '../ActionGroup/index.js'\nimport { WalletAssetsValue } from './WalletAssetsValue.js'\n\nconst useStyles = makeStyles<{ disabled: boolean }>()((theme, { disabled }) => {\n    const isDark = theme.palette.mode === 'dark'\n    return {\n        container: {\n            padding: '16px',\n            lineHeight: 0,\n            // padding bottom space for assets tabs\n            paddingBottom: !disabled ? 34 : 16,\n            background: isDark\n                ? theme.palette.maskColor.modalTitleBg\n                : 'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.8) 100%), linear-gradient(90deg, rgba(98, 126, 234, 0.2) 0%, rgba(59, 153, 252, 0.2) 100%)',\n        },\n        topbar: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            height: 38,\n            gap: theme.spacing(1),\n        },\n        action: {\n            background: theme.palette.maskColor.bg,\n            borderRadius: 99,\n            padding: '5px 8px 5px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            cursor: 'pointer',\n            maxWidth: '50%',\n            boxShadow: `0px 4px 6px 0px ${isDark ? 'rgba(0, 0, 0, 0.10)' : 'rgba(102, 108, 135, 0.10)'}`,\n            backdropFilter: 'blur(5px)',\n        },\n        nickname: {\n            color: theme.palette.maskColor.main,\n            lineHeight: '18px',\n            fontWeight: 700,\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n        },\n        identifier: {\n            fontSize: 10,\n            color: theme.palette.maskColor.second,\n            lineHeight: 1,\n            display: 'flex',\n            alignItems: 'center',\n        },\n        icon: {\n            height: 12,\n            width: 12,\n            color: theme.palette.maskColor.second,\n            cursor: 'pointer',\n            marginLeft: 4,\n        },\n        arrow: {\n            fontSize: 20,\n            transition: 'all 300ms',\n            flexShrink: 0,\n            color: theme.palette.maskColor.secondaryDark,\n        },\n        networkSelector: {\n            display: 'flex',\n            flexGrow: 1,\n            alignItems: 'center',\n            cursor: 'pointer',\n            overflow: 'auto',\n        },\n        chainName: {\n            flexGrow: 1,\n            lineHeight: '18px',\n            color: theme.palette.maskColor.main,\n            fontWeight: 700,\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            maxWidth: 154,\n        },\n        connected: {\n            display: 'flex',\n            alignItems: 'center',\n            lineHeight: '18px',\n            fontSize: 12,\n            color: theme.palette.maskColor.second,\n            columnGap: 4,\n        },\n        dot: {\n            display: 'inline-block',\n            width: 7,\n            height: 7,\n            borderRadius: 99,\n        },\n        connectedDot: {\n            backgroundColor: theme.palette.maskColor.success,\n        },\n        unconnectedDot: {\n            backgroundColor: theme.palette.maskColor.third,\n        },\n        balance: {\n            fontSize: 36,\n            fontWeight: 700,\n            color: theme.palette.maskColor.main,\n            height: 54,\n            paddingTop: theme.spacing(1.5),\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginTop: theme.spacing(2),\n        },\n    }\n})\ninterface WalletHeaderUIProps {\n    origin: string | null\n    currentNetwork?: ReasonableNetwork<ChainId, SchemaType, NetworkType>\n    chainId: ChainId\n    onOpenNetworkSelector: (event: MouseEvent<HTMLDivElement>) => void\n    onActionClick: () => void\n    wallet: Wallet\n    disabled?: boolean\n    disableCopy?: boolean\n}\n\nexport const WalletHeaderUI = memo<WalletHeaderUIProps>(function WalletHeaderUI({\n    currentNetwork,\n    chainId,\n    onOpenNetworkSelector,\n    onActionClick,\n    wallet,\n    disabled = false,\n    disableCopy = false,\n    origin,\n}) {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles({ disabled })\n    const { data: connectedWallets, isLoading } = useConnectedWallets(origin)\n    const connected = connectedWallets?.has(wallet.address)\n    const addressLink = ExplorerResolver.addressLink(chainId, wallet.address)\n\n    const networkName = currentNetwork?.name || currentNetwork?.fullName\n    return (\n        <Box className={classes.container}>\n            <div className={classes.topbar}>\n                <div\n                    className={classes.networkSelector}\n                    onClick={(event) => {\n                        if (!disabled && !wallet.owner) onOpenNetworkSelector(event)\n                    }}>\n                    {currentNetwork?.iconUrl ? (\n                        <ImageIcon size={30} icon={currentNetwork?.iconUrl} name={currentNetwork?.name || '?'} />\n                    ) : (\n                        <ChainIcon size={30} color={currentNetwork?.color} name={currentNetwork?.name} />\n                    )}\n\n                    <Box ml={0.5} overflow=\"auto\">\n                        <Box overflow=\"auto\" display=\"flex\">\n                            <TextOverflowTooltip title={networkName}>\n                                <Typography className={classes.chainName} component=\"div\">\n                                    {networkName}\n                                </Typography>\n                            </TextOverflowTooltip>\n                            {!disabled && !wallet.owner ? (\n                                <Icons.ArrowDrop\n                                    size={20}\n                                    className={classes.arrow}\n                                    style={{ transform: status ? 'rotate(-180deg)' : undefined }}\n                                />\n                            ) : null}\n                        </Box>\n                        {isLoading ? null : (\n                            <ProgressiveText className={classes.connected} loading={isLoading} skeletonWidth={50}>\n                                <span\n                                    className={cx(\n                                        classes.dot,\n                                        connected ? classes.connectedDot : classes.unconnectedDot,\n                                    )}\n                                />\n                                <span>\n                                    {t.popups_wallet_connected_status({\n                                        context: connected ? 'connected' : 'unconnected',\n                                    })}\n                                </span>\n                            </ProgressiveText>\n                        )}\n                    </Box>\n                </div>\n                <div\n                    className={classes.action}\n                    onClick={() => {\n                        if (!disabled) onActionClick()\n                    }}>\n                    {wallet.owner ? <Icons.SmartPay size={30} /> : <Icons.MaskBlue size={30} />}\n                    <Box ml={0.5} overflow=\"hidden\">\n                        <TextOverflowTooltip title={wallet.name}>\n                            <Typography className={classes.nickname}>{wallet.name}</Typography>\n                        </TextOverflowTooltip>\n                        <Typography className={classes.identifier}>\n                            <FormattedAddress address={wallet.address} formatter={formatEthereumAddress} size={4} />\n                            {!disableCopy ? (\n                                <CopyButton text={wallet.address} className={classes.icon} size={12} />\n                            ) : null}\n                            {addressLink ? (\n                                <Link\n                                    className={classes.icon}\n                                    onClick={(event) => event.stopPropagation()}\n                                    href={addressLink}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\">\n                                    <Icons.PopupLink size={12} />\n                                </Link>\n                            ) : null}\n                        </Typography>\n                    </Box>\n                    {!disabled ? <Icons.ArrowDrop className={classes.arrow} /> : null}\n                </div>\n            </div>\n            {!disabled ? (\n                <>\n                    <WalletAssetsValue className={classes.balance} skeletonWidth={100} skeletonHeight=\"2em\" />\n                    <ActionGroup chainId={chainId} mt={2} />\n                </>\n            ) : null}\n        </Box>\n    )\n})\n","import { NetworkPluginID, PopupModalRoutes, PopupRoutes } from '@masknet/shared-base'\nimport { useChainContext, useNetwork, useWallet } from '@masknet/web3-hooks-base'\nimport { useQuery } from '@tanstack/react-query'\nimport { memo, useCallback } from 'react'\nimport { matchPath, useLocation, useMatch, useSearchParams } from 'react-router-dom'\nimport Services from '#services'\nimport { NormalHeader, useModalNavigate } from '../../../../components/index.js'\nimport { WalletHeaderUI } from './UI.js'\nimport { WalletSetupHeaderUI } from './WalletSetupHeaderUI.js'\n\nconst CUSTOM_HEADER_PATTERNS = [\n    `${PopupRoutes.AddToken}/:chainId/:assetType`,\n    PopupRoutes.Transfer,\n    PopupRoutes.ExportWalletPrivateKey,\n]\n\nexport const WalletHeader = memo(function WalletHeader() {\n    const modalNavigate = useModalNavigate()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const location = useLocation()\n    const wallet = useWallet(NetworkPluginID.PLUGIN_EVM)\n    const { data: hasPassword } = useQuery(['@@has-password'], Services.Wallet.hasPassword, { networkMode: 'always' })\n    const [params] = useSearchParams()\n    const origin = params.get('source')\n\n    const currentNetwork = useNetwork(NetworkPluginID.PLUGIN_EVM, chainId)\n    const matchResetWallet = useMatch(PopupRoutes.ResetWallet)\n    const matchWallet = PopupRoutes.Wallet === location.pathname\n    const customHeader = CUSTOM_HEADER_PATTERNS.some((pattern) => matchPath(pattern, location.pathname))\n    const matchContractInteraction = useMatch(PopupRoutes.ContractInteraction)\n\n    const chooseNetwork = useCallback(() => {\n        modalNavigate(PopupModalRoutes.ChooseNetwork)\n    }, [modalNavigate])\n\n    const handleActionClick = useCallback(() => {\n        modalNavigate(PopupModalRoutes.SwitchWallet)\n    }, [modalNavigate])\n\n    if (customHeader) return null\n\n    if (matchContractInteraction) {\n        if (!wallet) return null\n        return (\n            <WalletHeaderUI\n                origin={origin}\n                chainId={chainId}\n                currentNetwork={currentNetwork}\n                disabled\n                disableCopy\n                onActionClick={handleActionClick}\n                onOpenNetworkSelector={chooseNetwork}\n                wallet={wallet}\n            />\n        )\n    }\n\n    if (!wallet || !hasPassword || matchResetWallet) return <WalletSetupHeaderUI showBack={!!matchResetWallet} />\n\n    return matchWallet ? (\n        <WalletHeaderUI\n            origin={origin}\n            chainId={chainId}\n            currentNetwork={currentNetwork}\n            onActionClick={handleActionClick}\n            onOpenNetworkSelector={chooseNetwork}\n            wallet={wallet}\n        />\n    ) : (\n        <NormalHeader onClose={() => Services.Helper.removePopupWindow()} />\n    )\n})\n","import { useEffect } from 'react'\nimport Services from '#services'\nimport { CrossIsolationMessages } from '@masknet/shared-base'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useWalletLockStatus() {\n    const {\n        data: isLocked,\n        isLoading,\n        error,\n        refetch,\n    } = useQuery(['@@is-locked'], Services.Wallet.isLocked, { networkMode: 'always' })\n\n    useEffect(() => {\n        refetch()\n        return CrossIsolationMessages.events.walletLockStatusUpdated.on(() => refetch())\n    }, [])\n\n    return {\n        error,\n        isLoading,\n        isLocked,\n    }\n}\n","import { PopupRoutes } from '@masknet/shared-base'\nimport { useMatch } from 'react-router-dom'\nimport { useMessages } from '@masknet/web3-hooks-base'\n\n/**\n * Guardian for pending tasks\n */\nexport function useMessageGuard() {\n    const matchInteraction = useMatch(PopupRoutes.ContractInteraction)\n    const messages = useMessages()\n\n    return !matchInteraction && messages.length > 0\n}\n","import { PopupRoutes } from '@masknet/shared-base'\nimport { useMatch } from 'react-router-dom'\nimport { useHasPassword } from '../../../hooks/index.js'\n\nexport function usePaymentPasswordGuard() {\n    const { hasPassword, isLoading } = useHasPassword()\n    const matchSetPaymentPassword = useMatch(PopupRoutes.SetPaymentPassword)\n\n    return !matchSetPaymentPassword && !hasPassword && !isLoading\n}\n","import { memo } from 'react'\nimport { Navigate, Outlet, useLocation, useOutletContext, useSearchParams } from 'react-router-dom'\nimport { PopupRoutes } from '@masknet/shared-base'\nimport { useWallets } from '@masknet/web3-hooks-base'\nimport Unlock from '../Unlock/index.js'\nimport { WalletStartUp } from '../components/StartUp/index.js'\nimport { WalletSetupHeaderUI } from '../components/WalletHeader/WalletSetupHeaderUI.js'\nimport { WalletHeader } from '../components/WalletHeader/index.js'\nimport { useWalletLockStatus } from '../hooks/index.js'\nimport { useMessageGuard } from './useMessageGuard.js'\nimport { usePaymentPasswordGuard } from './usePaymentPasswordGuard.js'\n\nexport const WalletGuard = memo(function WalletGuard() {\n    const wallets = useWallets()\n    const outletContext = useOutletContext()\n    const location = useLocation()\n    const [params] = useSearchParams()\n    const { isLocked, isLoading } = useWalletLockStatus()\n\n    const hitPaymentPasswordGuard = usePaymentPasswordGuard()\n    const hitMessageGuard = useMessageGuard()\n\n    if (!wallets.length) {\n        return (\n            <>\n                <WalletHeader />\n                <WalletStartUp />\n            </>\n        )\n    }\n    if (hitPaymentPasswordGuard) {\n        params.set('from', location.pathname)\n        return <Navigate to={{ pathname: PopupRoutes.SetPaymentPassword, search: params.toString() }} />\n    }\n    if (isLocked && !isLoading) {\n        return (\n            <>\n                <WalletSetupHeaderUI />\n                <Unlock />\n            </>\n        )\n    }\n    if (hitMessageGuard) return <Navigate to={PopupRoutes.ContractInteraction} />\n\n    return (\n        <>\n            <WalletHeader />\n            <Outlet context={outletContext} />\n        </>\n    )\n})\n","import { memo } from 'react'\nimport { Outlet, useOutletContext } from 'react-router-dom'\nimport { WalletHeader } from '../components/WalletHeader/index.js'\n\nexport const NoWalletGuard = memo(function NoWalletGuard() {\n    const outletContext = useOutletContext()\n    return (\n        <>\n            <WalletHeader />\n            <Outlet context={outletContext} />\n        </>\n    )\n})\n","import { Suspense, lazy } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { PopupRoutes, relativeRouteOf } from '@masknet/shared-base'\nimport { RestorableScrollContext } from '@masknet/shared'\nimport { LoadingPlaceholder } from '../../components/LoadingPlaceholder/index.js'\nimport { EditNetwork } from './EditNetwork/index.js'\nimport { NetworkManagement } from './NetworkManagement/index.js'\nimport SelectWallet from './SelectWallet/index.js'\nimport { WalletAssets } from './components/WalletAssets/index.js'\n\nimport TokenDetail from './TokenDetail/index.js'\nimport { TransactionDetail } from './TransactionDetail/index.js'\nimport { CollectibleDetail } from './CollectibleDetail/index.js'\nimport { WalletGuard } from './WalletGuard/index.js'\nimport { NoWalletGuard } from './NoWalletGuard/index.js'\nimport { DeriveStateContext } from './CreateWallet/context.js'\n\nconst WalletSettings = lazy(() => import('./WalletSettings/index.js'))\nconst CreateWallet = lazy(() => import('./CreateWallet/index.js'))\nconst DeriveWallet = lazy(() => import('./CreateWallet/Derive.js'))\nconst AddToken = lazy(() => import('./AddToken/index.js'))\nconst GasSetting = lazy(() => import(/* webpackMode: 'eager' */ './GasSetting/index.js'))\nconst Transfer = lazy(() => import(/* webpackMode: 'eager' */ './Transfer/index.js'))\nconst ContactList = lazy(() => import(/* webpackMode: 'eager' */ './ContactList/index.js'))\nconst ContractInteraction = lazy(() => import(/* webpackMode: 'eager' */ './Interaction/index.js'))\nconst ResetWallet = lazy(() => import('./ResetWallet/index.js'))\nconst SetPaymentPassword = lazy(() => import('./SetPaymentPassword/index.js'))\nconst ChangeOwner = lazy(() => import('./ChangeOwner/index.js'))\nconst Receive = lazy(() => import(/* webpackMode: 'eager' */ './Receive/index.js'))\nconst ExportPrivateKey = lazy(() => import('./ExportPrivateKey/index.js'))\nconst ConnectedSites = lazy(() => import('./ConnectedSites/index.js'))\n\nconst r = relativeRouteOf(PopupRoutes.Wallet)\n\nexport default function Wallet() {\n    return (\n        <Suspense fallback={<LoadingPlaceholder />}>\n            <RestorableScrollContext.Provider>\n                <DeriveStateContext.Provider>\n                    <Routes>\n                        <Route path=\"/\" element={<WalletGuard />}>\n                            <Route index element={<WalletAssets />} />\n                            <Route path={r(PopupRoutes.WalletSettings)} element={<WalletSettings />} />\n                            <Route path={r(PopupRoutes.CreateWallet)} element={<CreateWallet />} />\n                            <Route path={r(PopupRoutes.DeriveWallet)} element={<DeriveWallet />} />\n                            <Route\n                                path={r(`${PopupRoutes.Contacts}/:address?` as PopupRoutes)}\n                                element={<ContactList />}\n                            />\n                            <Route\n                                path={r(`${PopupRoutes.AddToken}/:chainId/:assetType` as PopupRoutes)}\n                                element={<AddToken />}\n                            />\n                            <Route path={r(PopupRoutes.GasSetting)} element={<GasSetting />} />\n                            <Route path={r(PopupRoutes.Transfer)} element={<Transfer />} />\n                            <Route path={r(PopupRoutes.ContractInteraction)} element={<ContractInteraction />} />\n                            <Route path={r(PopupRoutes.SelectWallet)} element={<SelectWallet />} />\n                            <Route path={r(PopupRoutes.ChangeOwner)} element={<ChangeOwner />} />\n                            <Route path={r(PopupRoutes.NetworkManagement)} element={<NetworkManagement />} />\n                            <Route path={r(PopupRoutes.AddNetwork)} element={<EditNetwork />} />\n                            <Route\n                                path={r(`${PopupRoutes.EditNetwork}/:id?` as PopupRoutes)}\n                                element={<EditNetwork />}\n                            />\n                            <Route path={r(PopupRoutes.Receive)} element={<Receive />} />\n                            <Route path={r(PopupRoutes.ExportWalletPrivateKey)} element={<ExportPrivateKey />} />\n                            <Route path={r(PopupRoutes.ConnectedSites)} element={<ConnectedSites />} />\n                        </Route>\n                        <Route path=\"*\" element={<NoWalletGuard />}>\n                            <Route path={r(PopupRoutes.SetPaymentPassword)} element={<SetPaymentPassword />} />\n                            <Route path={r(PopupRoutes.TokenDetail)} element={<TokenDetail />} />\n                            <Route path={r(PopupRoutes.TransactionDetail)} element={<TransactionDetail />} />\n                            <Route path={r(PopupRoutes.CollectibleDetail)} element={<CollectibleDetail />} />\n                            <Route path={r(PopupRoutes.ResetWallet)} element={<ResetWallet />} />\n                            <Route path=\"*\" element={<Navigate to={PopupRoutes.Wallet} />} />\n                        </Route>\n                    </Routes>\n                </DeriveStateContext.Provider>\n            </RestorableScrollContext.Provider>\n        </Suspense>\n    )\n}\n","import { useMemo } from 'react'\nimport { isEqual } from 'lodash-es'\nimport { unreachable } from '@masknet/kit'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { type EnhanceableSite, ValueRefWithReady } from '@masknet/shared-base'\nimport { createManager } from './manage.js'\nimport { getPluginDefine } from './store.js'\nimport type { Plugin } from '../types.js'\n\nconst { events, activated, startDaemon, minimalMode } = createManager(\n    (def) => def.SiteAdaptor,\n    createManager.NoManagedContext,\n)\nconst activatedSub = new ValueRefWithReady<Plugin.SiteAdaptor.Definition[]>([], isEqual)\nevents.on('activateChanged', () => (activatedSub.value = [...activated.plugins]))\n\nconst minimalModeSub = new ValueRefWithReady<string[]>([], isEqual)\nevents.on('minimalModeChanged', () => (minimalModeSub.value = [...minimalMode]))\n\nexport function useActivatedPluginsSiteAdaptor(minimalModeEqualsTo: 'any' | boolean) {\n    const minimalMode = useValueRef(minimalModeSub)\n    const result = useValueRef(activatedSub)\n    return useMemo(() => {\n        if (minimalModeEqualsTo === 'any') return result\n        else if (minimalModeEqualsTo === true) return result.filter((x) => minimalMode.includes(x.ID))\n        else if (minimalModeEqualsTo === false) return result.filter((x) => !minimalMode.includes(x.ID))\n        unreachable(minimalModeEqualsTo)\n    }, [result, minimalMode, minimalModeEqualsTo])\n}\nuseActivatedPluginsSiteAdaptor.visibility = {\n    useMinimalMode: useActivatedPluginsSiteAdaptor.bind(null, true),\n    useNotMinimalMode: useActivatedPluginsSiteAdaptor.bind(null, false),\n    useAnyMode: useActivatedPluginsSiteAdaptor.bind(null, 'any'),\n}\n\nexport function useIsMinimalMode(pluginID: string) {\n    return useValueRef(minimalModeSub).includes(pluginID)\n}\n\n/**\n *\n * @param pluginID Get the plugin ID\n * @param visibility Should invisible plugin included?\n * @returns\n */\nexport function useActivatedPluginSiteAdaptor(pluginID: string, minimalModeEqualsTo: 'any' | boolean) {\n    const plugins = useActivatedPluginsSiteAdaptor(minimalModeEqualsTo)\n    const minimalMode = useValueRef(minimalModeSub)\n\n    return useMemo(() => {\n        const result = plugins.find((x) => x.ID === pluginID)\n        if (!result) return result\n        if (minimalModeEqualsTo === 'any') return result\n        else if (minimalModeEqualsTo === true) {\n            if (minimalMode.includes(result.ID)) return result\n            return undefined\n        } else if (minimalModeEqualsTo === false) {\n            if (minimalMode.includes(result.ID)) return undefined\n            return result\n        }\n        unreachable(minimalModeEqualsTo)\n    }, [pluginID, plugins, minimalMode, minimalModeEqualsTo])\n}\n\nexport function startPluginSiteAdaptor(\n    currentNetwork: EnhanceableSite,\n    host: Plugin.__Host.Host<Plugin.SiteAdaptor.Definition, Plugin.SiteAdaptor.SiteAdaptorContext>,\n) {\n    startDaemon(host, (id) => {\n        const def = getPluginDefine(id)\n        if (!def) return false\n\n        const status = def.enableRequirement.supports.sites[currentNetwork]\n        if (def.enableRequirement.supports.type === 'opt-in' && status !== true) return false\n        if (def.enableRequirement.supports.type === 'opt-out' && status === true) return false\n        return true\n    })\n}\n","import { memo, useMemo } from 'react'\nimport { Card, Link } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { useWeb3Others, useNetworkDescriptor } from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { AssetPreviewer, ImageIcon } from '@masknet/shared'\nimport { NETWORK_DESCRIPTORS } from '@masknet/web3-shared-evm'\nimport type { SourceType } from '@masknet/web3-shared-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: '8px 8px 0 0',\n        position: 'absolute',\n        zIndex: 1,\n        backgroundColor: theme.palette.mode === 'light' ? '#F7F9FA' : '#2F3336',\n        width: '100%',\n        height: '100%',\n    },\n    fallbackImage: {\n        minHeight: '0 !important',\n        maxWidth: 'none',\n        width: 30,\n        height: 30,\n    },\n    blocker: {\n        position: 'absolute',\n        zIndex: 2,\n        width: '100%',\n        height: '100%',\n    },\n    linkWrapper: {\n        position: 'relative',\n        display: 'block',\n    },\n    networkIcon: {\n        position: 'absolute',\n        top: 6,\n        left: 6,\n    },\n}))\n\nexport interface CollectibleCardProps {\n    className?: string\n    provider: SourceType\n    asset: Web3Helper.NonFungibleAssetAll\n    link?: string\n    pluginID?: NetworkPluginID\n    disableLink?: boolean\n    showNetworkIcon?: boolean\n}\n\nexport const CollectibleCard = memo(function CollectibleCard({\n    className,\n    asset,\n    pluginID,\n    disableLink,\n    showNetworkIcon,\n    ...rest\n}: CollectibleCardProps) {\n    const { classes, cx } = useStyles()\n    const Others = useWeb3Others()\n\n    const networkDescriptor = useNetworkDescriptor(pluginID)\n\n    const networkIcon = useMemo(() => {\n        // None is better than incorrect.\n        if (!pluginID) return\n        if (pluginID === NetworkPluginID.PLUGIN_EVM) {\n            return NETWORK_DESCRIPTORS.find((network) => network?.chainId === asset.chainId)?.icon\n        }\n        return networkDescriptor?.icon\n    }, [asset.chainId, pluginID, networkDescriptor?.icon])\n\n    const content = (\n        <>\n            <div className={classes.blocker} />\n            <Card className={classes.root}>\n                <div>\n                    <AssetPreviewer\n                        url={asset.metadata?.mediaURL || asset.metadata?.imageURL}\n                        classes={{\n                            fallbackImage: classes.fallbackImage,\n                        }}\n                    />\n                    {networkIcon && showNetworkIcon !== false ? (\n                        <ImageIcon icon={networkIcon} size={24} className={classes.networkIcon} />\n                    ) : null}\n                </div>\n            </Card>\n        </>\n    )\n\n    if (disableLink) return <div className={cx(classes.linkWrapper, className)}>{content}</div>\n\n    return (\n        <Link\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={\n                asset.link ?? Others.explorerResolver.nonFungibleTokenLink(asset.chainId, asset.address, asset.tokenId)\n            }\n            className={cx(classes.linkWrapper, className)}\n            {...rest}>\n            {content}\n        </Link>\n    )\n})\n\nCollectibleCard.displayName = 'CollectibleCard'\n","import { forwardRef, type HTMLProps, memo } from 'react'\nimport { useWeb3Others } from '@masknet/web3-hooks-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Checkbox, Radio, Skeleton, Typography, useForkRef } from '@mui/material'\nimport { CollectibleCard, type CollectibleCardProps } from './CollectibleCard.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        position: 'relative',\n        zIndex: 0,\n        background: theme.palette.maskColor.bg,\n        borderRadius: theme.spacing(1),\n    },\n    inactive: {\n        opacity: 0.5,\n    },\n    selectable: {\n        cursor: 'pointer',\n    },\n    collectibleCard: {\n        width: '100%',\n        height: '100%',\n        aspectRatio: '1/1',\n        borderRadius: theme.spacing(1),\n        overflow: 'hidden',\n    },\n    description: {\n        alignSelf: 'stretch',\n        borderRadius: theme.spacing(0, 0, 1, 1),\n    },\n    name: {\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        lineHeight: '36px',\n        minHeight: '1em',\n        textIndent: '8px',\n    },\n    select: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: 6,\n        zIndex: 9,\n    },\n}))\n\nexport interface ChangeEventOptions {\n    checked: boolean\n    value: string\n}\nexport interface SelectableProps {\n    selectable?: boolean\n    checked?: boolean\n    inactive?: boolean\n    multiple?: boolean\n    value?: string\n    onChange?(options: ChangeEventOptions): void\n}\n\ninterface CollectibleItemProps\n    extends Omit<HTMLProps<HTMLDivElement>, keyof SelectableProps>,\n        CollectibleCardProps,\n        SelectableProps {}\n\n// TODO lazy render in big list.\nexport const CollectibleItem = memo(\n    forwardRef<HTMLDivElement, CollectibleItemProps>(function CollectibleItem(props: CollectibleItemProps, ref) {\n        const {\n            provider,\n            asset,\n            pluginID,\n            checked,\n            inactive,\n            selectable,\n            multiple,\n            value,\n            onChange,\n            className,\n            showNetworkIcon,\n            disableLink,\n            ...rest\n        } = props\n        const { classes, cx } = useStyles()\n        const Others = useWeb3Others()\n\n        const uiTokenId = Others.formatTokenId(asset.tokenId, 4)\n\n        const SelectableButton = selectable && multiple ? Checkbox : Radio\n        const scrollIntoViewRef = (node: HTMLDivElement) => {\n            if (!checked || multiple || !node) return\n            node.scrollIntoView({ block: 'nearest', behavior: 'smooth' })\n        }\n        const forkedRef = useForkRef(ref, scrollIntoViewRef)\n\n        return (\n            <div\n                className={cx(classes.card, className, {\n                    [classes.inactive]: inactive,\n                    [classes.selectable]: selectable,\n                })}\n                onClick={() => {\n                    if (selectable) {\n                        onChange?.({\n                            checked: !checked,\n                            value: value!,\n                        })\n                    }\n                }}\n                {...rest}\n                ref={forkedRef}>\n                <CollectibleCard\n                    className={classes.collectibleCard}\n                    asset={asset}\n                    provider={provider}\n                    pluginID={pluginID}\n                    showNetworkIcon={showNetworkIcon}\n                    disableLink={disableLink || selectable}\n                />\n                {asset.metadata?.name || uiTokenId ? (\n                    <div className={classes.description}>\n                        <Typography className={classes.name} color=\"textPrimary\" variant=\"body2\">\n                            {asset.metadata?.name || uiTokenId}\n                        </Typography>\n                    </div>\n                ) : null}\n                {checked ? <SelectableButton className={classes.select} value={value} checked /> : null}\n            </div>\n        )\n    }),\n)\n\nexport function CollectibleItemSkeleton(props: HTMLProps<HTMLDivElement>) {\n    const { classes, cx } = useStyles()\n    return (\n        <div {...props} className={cx(classes.card, props.className)}>\n            <div className={classes.collectibleCard}>\n                <Skeleton animation=\"wave\" variant=\"rectangular\" height=\"100%\" />\n            </div>\n            <div className={classes.description}>\n                <Typography className={classes.name} color=\"textPrimary\" variant=\"body2\">\n                    <Skeleton animation=\"wave\" variant=\"text\" height=\"100%\" />\n                </Typography>\n            </div>\n        </div>\n    )\n}\n","import { range } from 'lodash-es'\nimport type { HTMLProps } from 'react'\nimport { CollectibleItemSkeleton } from './CollectibleItem.js'\n\ninterface Props extends Pick<HTMLProps<HTMLDivElement>, 'className'> {}\n\nexport function LoadingSkeleton({ className }: Props) {\n    return (\n        <div className={className}>\n            {range(7).map((i) => (\n                <CollectibleItemSkeleton key={i} />\n            ))}\n        </div>\n    )\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport { ShadowRootTooltip, makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useWeb3Others } from '@masknet/web3-hooks-base'\nimport { SourceType } from '@masknet/web3-shared-base'\nimport { Box, type BoxProps } from '@mui/material'\nimport { memo, useCallback, useMemo, useRef } from 'react'\nimport { useSharedTrans } from '../../../index.js'\nimport { ReloadStatus } from '../index.js'\nimport { CollectibleItem, type ChangeEventOptions, type SelectableProps } from './CollectibleItem.js'\nimport { LoadingSkeleton } from './LoadingSkeleton.js'\nimport type { CollectibleGridProps } from './type.js'\n\nconst useStyles = makeStyles<CollectibleGridProps>()((theme, { columns = 3, gap = 2 }) => {\n    const gapIsNumber = typeof gap === 'number'\n    return {\n        root: {\n            width: '100%',\n            display: 'grid',\n            gridTemplateColumns: `repeat(${columns}, 1fr)`,\n            gridGap: gapIsNumber ? theme.spacing(gap) : gap,\n            padding: gapIsNumber ? theme.spacing(0, gap, 0) : `0 ${gap} 0`,\n            boxSizing: 'border-box',\n        },\n        collectibleItem: {\n            overflowX: 'hidden',\n        },\n        text: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: 260,\n        },\n        list: {\n            overflow: 'auto',\n            position: 'relative',\n        },\n    }\n})\n\nexport interface CollectibleListProps\n    extends CollectibleGridProps,\n        Omit<SelectableProps, 'value' | 'checked' | 'onChange'>,\n        Omit<BoxProps, 'gap' | 'onChange'> {\n    pluginID?: NetworkPluginID\n    collectibles: Web3Helper.NonFungibleAssetAll[]\n    error?: string\n    loading: boolean\n    disableLink?: boolean\n    showNetworkIcon?: boolean\n    /**\n     * Collectible key, in format of `${contractAddress}_${tokenId}`.\n     * You can also customize, but don't forget pass a customized getCollectibleKey as well.\n     * */\n    value?: string | string[]\n    getCollectibleKey?(collectible: Web3Helper.NonFungibleAssetAll): string\n    retry(): void\n    onChange?(value: string | string[] | null): void\n}\n\nconst getKey = (collectible: Web3Helper.NonFungibleAssetAll) => {\n    return `${collectible.address}_${collectible.tokenId}`\n}\n\nexport const CollectibleList = memo(function CollectibleList(props: CollectibleListProps) {\n    const {\n        pluginID,\n        collectibles,\n        columns,\n        gap,\n        loading,\n        error,\n        selectable,\n        multiple,\n        disableLink,\n        showNetworkIcon,\n        value,\n        retry,\n        getCollectibleKey = getKey,\n        onChange,\n        className,\n        ...rest\n    } = props\n    const t = useSharedTrans()\n    const { classes, cx } = useStyles({ columns, gap })\n    const Others = useWeb3Others()\n\n    const availableKeys = useMemo(() => collectibles.map(getCollectibleKey), [collectibles])\n    const handleItemChange = useCallback(\n        (event: ChangeEventOptions) => {\n            if (multiple) {\n                const newValue = availableKeys.filter((x) => {\n                    return x === event.value ? event.checked : value?.includes(x)\n                })\n                onChange?.(newValue)\n            } else {\n                onChange?.(event.checked ? event.value : null)\n            }\n        },\n        [multiple, availableKeys, value],\n    )\n    const listRef = useRef<typeof Box>(null)\n\n    return (\n        <Box className={cx(classes.list, className)} {...rest} ref={listRef}>\n            {loading && collectibles.length === 0 ? (\n                <LoadingSkeleton className={classes.root} />\n            ) : error || (collectibles.length === 0 && !loading) ? (\n                <ReloadStatus className={classes.text} message={t.no_collectible_found()} onRetry={retry} />\n            ) : (\n                <Box className={classes.root}>\n                    {collectibles.map((token, index) => {\n                        const name = token.metadata?.name\n                        const uiTokenId = Others.formatTokenId(token.tokenId, 4) ?? `#${token.tokenId}`\n                        const title = `${name || token.collection?.name || token.contract?.name} ${uiTokenId}`\n                        const collectibleKey = getCollectibleKey(token)\n                        const checked = selectable ? value?.includes(collectibleKey) : false\n                        const inactive = value ? !!value?.length && !checked : false\n                        return (\n                            <ShadowRootTooltip\n                                key={index}\n                                title={title}\n                                placement=\"top\"\n                                disableInteractive\n                                PopperProps={{\n                                    placement: 'top',\n                                    popperOptions: {\n                                        strategy: 'absolute',\n                                    },\n                                    modifiers: [\n                                        {\n                                            name: 'preventOverflow',\n                                            options: {\n                                                rootBoundary: listRef.current,\n                                                boundary: listRef.current,\n                                            },\n                                        },\n                                    ],\n                                }}\n                                arrow>\n                                <CollectibleItem\n                                    className={classes.collectibleItem}\n                                    asset={token}\n                                    provider={SourceType.OpenSea}\n                                    pluginID={pluginID}\n                                    selectable={selectable}\n                                    multiple={multiple}\n                                    disableLink={disableLink}\n                                    showNetworkIcon={showNetworkIcon}\n                                    checked={checked}\n                                    inactive={inactive}\n                                    value={collectibleKey}\n                                    onChange={handleItemChange}\n                                />\n                            </ShadowRootTooltip>\n                        )\n                    })}\n                </Box>\n            )}\n        </Box>\n    )\n})\n","export const NFTFallbackImage = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 126 126\">\n        <path fill=\"url(#FallbackImage_svg__a)\" d=\"M0 .191h126v126H0z\" />\n        <path fill=\"url(#FallbackImage_svg__b)\" d=\"M0 .191h126v126H0z\" />\n        <rect width=\"30.238\" height=\"30\" x=\"46.869\" y=\"46.691\" fill=\"url(#FallbackImage_svg__c)\" rx=\"15\" />\n        <rect width=\"30.238\" height=\"30\" x=\"46.869\" y=\"46.691\" fill=\"url(#FallbackImage_svg__d)\" rx=\"15\" />\n        <path\n            fill=\"#fff\"\n            fillRule=\"evenodd\"\n            d=\"M70.75 58.288v4.861H55.518a6.62 6.62 0 0 0 6.459 5.153 6.622 6.622 0 0 0 5.942-3.694h2.83v4.083c0 .966-.784 1.75-1.752 1.75h-14.02a1.751 1.751 0 0 1-1.752-1.75V58.288H70.75Zm-4.511 6.32a5.156 5.156 0 0 1-4.263 2.247c-1.77 0-3.332-.89-4.262-2.247h8.525Zm-8-5.153a2.725 2.725 0 0 0-2.698 2.333h1.494a1.266 1.266 0 0 1 2.409 0h1.494a2.726 2.726 0 0 0-2.699-2.333Zm7.497 0a2.726 2.726 0 0 0-2.699 2.333h1.494a1.266 1.266 0 0 1 2.41 0h1.493a2.726 2.726 0 0 0-2.698-2.333Zm3.261-6.514c.968 0 1.753.783 1.753 1.75v2.139H53.225v-2.14c0-.966.785-1.75 1.753-1.75h14.02Z\"\n            clipRule=\"evenodd\"\n        />\n        <defs>\n            <linearGradient\n                id=\"FallbackImage_svg__a\"\n                x1=\"0\"\n                x2=\"126\"\n                y1=\"63.191\"\n                y2=\"63.191\"\n                gradientUnits=\"userSpaceOnUse\">\n                <stop offset=\".01\" stopColor=\"#6298EA\" stopOpacity=\".2\" />\n                <stop offset=\".01\" stopColor=\"#6298EA\" stopOpacity=\".2\" />\n                <stop offset=\"1\" stopColor=\"#627EEA\" stopOpacity=\".2\" />\n            </linearGradient>\n            <linearGradient\n                id=\"FallbackImage_svg__b\"\n                x1=\"63\"\n                x2=\"63\"\n                y1=\".191\"\n                y2=\"126.191\"\n                gradientUnits=\"userSpaceOnUse\">\n                <stop stopColor=\"#fff\" stopOpacity=\"0\" />\n                <stop offset=\"1\" stopColor=\"#fff\" stopOpacity=\".9\" />\n            </linearGradient>\n            <linearGradient\n                id=\"FallbackImage_svg__c\"\n                x1=\"46.869\"\n                x2=\"77.107\"\n                y1=\"61.691\"\n                y2=\"61.691\"\n                gradientUnits=\"userSpaceOnUse\">\n                <stop offset=\".01\" stopColor=\"#6298EA\" stopOpacity=\".2\" />\n                <stop offset=\".01\" stopColor=\"#6298EA\" stopOpacity=\".2\" />\n                <stop offset=\"1\" stopColor=\"#627EEA\" stopOpacity=\".2\" />\n            </linearGradient>\n            <linearGradient\n                id=\"FallbackImage_svg__d\"\n                x1=\"61.988\"\n                x2=\"61.988\"\n                y1=\"46.691\"\n                y2=\"76.691\"\n                gradientUnits=\"userSpaceOnUse\">\n                <stop stopColor=\"#fff\" stopOpacity=\"0\" />\n                <stop offset=\"1\" stopColor=\"#fff\" stopOpacity=\".9\" />\n            </linearGradient>\n        </defs>\n    </svg>\n)\n","import { memo, useRef, type ReactElement, cloneElement, useLayoutEffect, type RefObject } from 'react'\nimport { createContainer } from 'unstated-next'\n\nfunction useScrollState() {\n    return useRef(new Map<string, number>())\n}\n\nexport const RestorableScrollContext = createContainer(useScrollState)\nRestorableScrollContext.Provider.displayName = 'RestorableScrollProvider'\n\ninterface Props {\n    scrollKey: string\n    targetRef?: RefObject<HTMLElement>\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    children: ReactElement\n}\n\nexport const RestorableScroll = memo(function RestorableScroll({ scrollKey, targetRef, children }: Props) {\n    const containerRef = useRef<HTMLElement>(null)\n    const mapRef = RestorableScrollContext.useContainer()\n\n    useLayoutEffect(() => {\n        const target = targetRef?.current || containerRef.current\n        if (!target) return\n\n        target.scrollTop = mapRef.current.get(scrollKey) || 0\n        return () => {\n            mapRef.current.set(scrollKey, target.scrollTop)\n        }\n    }, [scrollKey])\n\n    return cloneElement(children, { ...children.props, ref: targetRef ? undefined : containerRef })\n})\n","import { useAsyncRetry } from 'react-use'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useAddressType<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    address?: string,\n    options?: ConnectionOptions<T>,\n) {\n    const Web3 = useWeb3Connection(pluginID, options)\n\n    return useAsyncRetry<Web3Helper.AddressTypeScope<S, T> | undefined>(async () => {\n        if (!address) return\n        return Web3.getAddressType(address, options)\n    }, [address, Web3, options?.chainId])\n}\n","import { useAsyncRetry } from 'react-use'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useWeb3Others } from './useWeb3Others.js'\n\nexport function useLookupAddress<T extends NetworkPluginID>(\n    pluginID?: T,\n    domain?: string | null,\n    expectedChainId?: Web3Helper.Definition[T]['ChainId'],\n) {\n    const { chainId } = useChainContext({ chainId: expectedChainId })\n    const Others = useWeb3Others(pluginID)\n    const { NameService } = useWeb3State(pluginID)\n\n    return useAsyncRetry(async () => {\n        if (!domain || !Others.isValidDomain(domain) || !NameService) return\n        return NameService.lookup?.(domain)\n    }, [chainId, domain, NameService, Others])\n}\n","import { EMPTY_LIST, type NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useInfiniteQuery } from '@tanstack/react-query'\nimport { useCallback, useMemo } from 'react'\nimport { useBlockedNonFungibleTokens } from './useBlockedNonFungibleTokens.js'\nimport { useChainContext } from './useContext.js'\nimport { useNetworkDescriptors } from './useNetworkDescriptors.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\n/**\n * Blocked tokens would be filtered out\n */\nexport function useNonFungibleAssets<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    schemaType?: Web3Helper.SchemaTypeScope<S, T>,\n    options?: HubOptions<T>,\n) {\n    const { account, chainId } = useChainContext({ account: options?.account })\n    const Hub = useWeb3Hub(pluginID, { account, chainId, ...options })\n    const networks = useNetworkDescriptors(pluginID)\n    const availableChainIds = useMemo(() => {\n        return networks\n            .filter((x) => x.isMainnet && (options?.chainId ? x.chainId === options.chainId : true))\n            .map((x) => x.chainId)\n    }, [networks, options?.chainId])\n\n    const blockedTokens = useBlockedNonFungibleTokens()\n    const blockedTokenIds = useMemo(() => {\n        return blockedTokens.filter((x) => availableChainIds.includes(x.chainId)).map((x) => x.id)\n    }, [blockedTokens, availableChainIds])\n    const { data, isLoading, fetchNextPage, hasNextPage, refetch, error, dataUpdatedAt } = useInfiniteQuery({\n        queryKey: ['non-fungible-assets', account, availableChainIds, blockedTokenIds],\n        queryFn: async ({ pageParam }) => {\n            const chainId = pageParam?.chainId || availableChainIds[0]\n            const res = await Hub.getNonFungibleAssets!(account, {\n                indicator: pageParam?.indicator,\n                size: 20,\n                chainId,\n            })\n            const data = blockedTokenIds.length\n                ? res.data.filter((x) => {\n                      const id = `${x.chainId}.${x.address}.${x.tokenId}`.toLowerCase()\n                      return !blockedTokenIds.includes(id)\n                  })\n                : res.data\n            return {\n                ...res,\n                data,\n                chainId,\n            }\n        },\n        getNextPageParam: (lastPage) => {\n            const { nextIndicator, chainId } = lastPage\n            const nextChainId = nextIndicator ? chainId : availableChainIds[availableChainIds.indexOf(chainId) + 1]\n            if (!nextChainId) return\n            return {\n                indicator: nextIndicator,\n                chainId: nextChainId,\n            }\n        },\n    })\n\n    const list = useMemo(() => data?.pages.flatMap((x) => x.data) || EMPTY_LIST, [data?.pages])\n    const nextPage = useCallback(() => fetchNextPage(), [fetchNextPage])\n\n    // TODO rename these fields in style of react-query\n    return {\n        value: list,\n        next: nextPage,\n        loading: isLoading,\n        done: !hasNextPage,\n        retry: refetch,\n        error,\n        dataUpdatedAt,\n    }\n}\n","import { Contract } from '@masknet/web3-providers'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useERC20TokenAllowance(\n    address?: string,\n    spender?: string,\n    options?: ConnectionOptions<NetworkPluginID.PLUGIN_EVM>,\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({\n        account: options?.account,\n        chainId: options?.chainId,\n    })\n\n    return useQuery({\n        queryKey: ['erc20-allowance', address, account, spender],\n        queryFn: async () => {\n            if (!account || !address || !spender) return '0'\n            return Contract.getERC20Contract(address, { chainId })?.methods.allowance(account, spender).call({\n                from: account,\n            })\n        },\n        refetchInterval: 30 * 1000,\n    })\n}\n","import { BigNumber } from 'bignumber.js'\n\nexport function addGasMargin(value: BigNumber.Value, scale = 3000) {\n    return new BigNumber(value).multipliedBy(new BigNumber(10000).plus(scale)).dividedToIntegerBy(10000)\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n}; // TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\n\n\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\n\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: (theme.vars || theme).palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n\n  const {\n    children,\n    disabled = false,\n    id: idProp,\n    loading = false,\n    loadingIndicator: loadingIndicatorProp,\n    loadingPosition = 'center',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n    className: classes.loadingIndicator,\n    ownerState: ownerState,\n    children: loadingIndicator\n  }) : null;\n  return /*#__PURE__*/_jsxs(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;","'use client';\nimport { parseQueryArgs, InfiniteQueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}\n\nexport { useInfiniteQuery };\n//# sourceMappingURL=useInfiniteQuery.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { parseMutationArgs, MutationObserver, notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { shouldThrowError } from './utils.mjs';\n\nfunction useMutation(arg1, arg2, arg3) {\n  const options = parseMutationArgs(arg1, arg2, arg3);\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const [observer] = React.useState(() => new MutationObserver(queryClient, options));\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = useSyncExternalStore(React.useCallback(onStoreChange => observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  const mutate = React.useCallback((variables, mutateOptions) => {\n    observer.mutate(variables, mutateOptions).catch(noop);\n  }, [observer]);\n\n  if (result.error && shouldThrowError(observer.options.useErrorBoundary, [result.error])) {\n    throw result.error;\n  }\n\n  return { ...result,\n    mutate,\n    mutateAsync: result.mutate\n  };\n} // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nfunction noop() {}\n\nexport { useMutation };\n//# sourceMappingURL=useMutation.mjs.map\n"],"names":["Icons","openWindow","MaskTextField","makeStyles","useChainContext","ExplorerResolver","isSameAddress","Box","Typography","useTheme","memo","useCallback","useMemo","useMaskSharedTrans","ContactsContext","AddContactModal","useStyles","theme","input","flex","toText","color","palette","maskColor","second","fontSize","fontWeight","height","minWidth","marginRight","spacing","display","alignItems","receiverPanel","inputText","paddingRight","third","save","main","endAdornment","cursor","paddingLeft","receiver","validation","danger","warning","warn","fieldWrapper","linkOut","marginLeft","AddContactInputPanel","isManage","autoFocus","props","t","classes","cx","chainId","address","userInput","setUserInput","contacts","wallets","inputValidationMessage","addressValidationMessage","inputWarningMessage","useContainer","openAddContactModal","openAndWaitForClose","title","wallet_add_contact","name","isAdded","some","x","addable","shouldShowAddress","padding","className","popups_wallet_transfer_to","div","placeholder","wallet_transfer_placeholder","value","onChange","ev","target","wrapperProps","InputProps","spellCheck","onClick","AddUser","size","undefined","mt","LinkOut","addressLink","useMenuConfig","NetworkPluginID","useChainIdSupport","useGasOptions","GasOptionType","formatWeiToGwei","MenuItem","useState","GasSettingModal","paper","borderRadius","boxShadow","bottomBg","list","item","justifyContent","borderBottom","line","minHeight","paddingTop","paddingBottom","border","backgroundColor","optionName","lineHeight","optionValue","useGasOptionsMenu","minimumGas","callback","paymentToken","data","gasOptions","isSupport1559","PLUGIN_EVM","customGasConfig","setCustomGasConfig","handleClickCustom","result","config","gas","gasPrice","toFixed","maxFeePerGas","maxPriorityFeePerGas","handleClick","type","option","gasOptionType","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","SLOW","slow","popups_wallet_gas_fee_settings_medium","component","wallet_transfer_gwei","NORMAL","normal","popups_wallet_gas_fee_settings_high","FAST","fast","popups_wallet_gas_fee_settings_instant","popups_wallet_gas_fee_settings_custom","anchorOrigin","vertical","horizontal","useEffect","noop","BigNumber","FormattedBalance","FormattedCurrency","useGasCurrencyMenu","useFungibleToken","useFungibleTokenPrice","useNativeTokenAddress","ZERO","formatBalance","formatCurrency","scale10","formatWeiToEther","useGasRatio","GasSettingMenu","defaultChainId","initConfig","disable","allowMaskAsGas","owner","onPaymentTokenChange","gasRatio","gasConfig","setGasConfig","setGasOptionType","handleChange","menu","openMenu","paymentTokenMenu","openPaymentTokenMenu","nativeTokenAddress","token","tokenPrice","gasOptionName","totalGas","times","multipliedBy","prev","mr","decimals","significant","symbol","formatter","options","onlyRemainTwoOrZeroDecimal","customDecimalConfig","boundary","decimalExp","py","px","columnGap","Candle","ArrowDrop","sx","ml","useAddressType","useContacts","useLookupAddress","useWallets","GoPlusLabs","AddressType","isValidAddress","isValidDomain","useAsync","createContainer","useContactsContext","defaultName","defaultAddress","registeredAddress","error","resolveDomainError","matches","filter","length","contact","find","addressType","security","getAddressSecurity","isMaliciousAddress","Object","values","wallets_transfer_error_address_scam","wallets_transfer_error_invalid_address","wallets_transfer_error_invalid_domain","Contract","wallets_transfer_warning_contract_address","Provider","displayName","useChainId","getNativeTokenAddress","useSearchParams","useTokenParams","params","setParams","rawChainId","get","Number","parseInt","rawAddress","useNonFungibleTokenParams","tokenId","useContext","useLocation","useNavigate","urlcat","Link","List","ListItem","PopupRoutes","ActionButton","formatEthereumAddress","EmojiAvatar","FormattedAddress","useTitle","PageTitleContext","DeleteContactModal","EditContactModal","ContactType","showDivideLine","root","overflowX","page","position","flexDirection","overflow","contactsPanel","maxHeight","contactsList","nickname","maxWidth","whiteSpace","textOverflow","identifier","contactsListItem","background","default","contactsListItemInfo","contactTitle","icon","width","menuItem","content","divider","bottom","emojiAvatar","iconMore","bottomAction","secondaryBottom","backdropFilter","zIndex","confirmButton","margin","ContactListUI","setExtension","state","addContact","Add","popups_send","navigate","location","handleSelectContact","addr","recipientName","path","Transfer","fromEntries","entries","recipient","wallet_transfer_my_contacts_title","map","index","ContactListItem","contactType","Recipient","onSelectContact","wallet_transfer_my_wallets_title","wallet","Owned","fullWidth","disabled","next","rest","editContact","wallet_edit_contact","deleteContact","wallet_delete_contact","menuOptions","edit","Edit2","handler","delete","Decrease","_","isOpenMenu","anchorSibling","transformOrigin","event","stopPropagation","href","rel","PopupLink","More","ContactList","useDeriveState","DeriveStateContext","omit","useAsyncRetry","PayloadEditor","useWeb3State","CrossIsolationMessages","ECKeyIdentifier","Services","useUnconfirmedRequest","TransactionFormatter","payload","Wallet","topUnconfirmedRequest","computedPayload","fromPayload","formatterTransaction","formatTransaction","transactionContext","createContext","from","unwrapOr","events","requestsUpdated","on","retry","useAsyncFn","useUpdateEffect","Controller","useForm","isEmpty","z","zod","toHex","fromWei","formatGweiToEther","formatGweiToWei","zodResolver","LoadingButton","NUMERIC_INPUT_REGEXP_PATTERN","isGreaterThan","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo","isPositive","TransactionDescriptorType","Web3","useNativeToken","useNativeTokenPrice","StyledInput","gridTemplateColumns","gap","optionsTitle","optionsContent","gasUSD","wordBreak","label","primary","selected","contrastText","button","marginTop","unit","price","opacity","HIGH_FEE_WARNING_MULTIPLIER","GasSetting1559","setOption","getGasLimitError","setGetGasLimitError","nativeToken","nativeTokenPrice","loading","getValueLoading","isLoading","getGasOptionsLoading","popups_wallet_gas_fee_settings_low","TRANSFER","INTERACTION","_tx","toNumber","minGasLimit","estimateTransaction","to","schema","object","gasLimit","string","min","wallet_transfer_error_gas_limit_absence","refine","popups_wallet_gas_fee_settings_min_gas_limit_tips","limit","String","wallet_transfer_error_max_priority_fee_absence","wallet_transfer_error_max_priority_gas_fee_positive","wallet_transfer_error_max_fee_absence","message","wallet_transfer_error_max_priority_gas_fee_imbalance","control","handleSubmit","setValue","setError","watch","formState","errors","mode","resolver","defaultValues","toString","context","handleConfirm","param","updateUnconfirmedRequest","onSubmit","maxPriorFeeHelperText","wallet_transfer_error_max_priority_gas_fee_too_low","wallet_transfer_error_max_priority_gas_fee_too_high","maxFeeGasHelperText","estimatedBaseFee","wallet_transfer_error_max_fee_too_low","wallet_transfer_error_max_fee_too_high","replace","variant","form","popups_wallet_gas_fee_settings_gas_limit","render","field","e","helperText","inputProps","pattern","popups_wallet_gas_fee_settings_max_priority_fee","popups_wallet_gas_fee_settings_max_fee","confirm","ChainId","pow10","minGasPriceOfChain","BSC","Conflux","Matic","Astar","Prior1559GasSetting","gasOptions_","standard","gte","wallet_transfer_error_gas_price_absence","minGasPrice","popups_wallet_gas_price","ChainResolver","container","description","GasSetting","popups_gas_fee_settings","style","popups_wallet_gas_fee_settings","popups_wallet_gas_fee_settings_description","isFeatureSupported","leftShift","useNonFungibleAsset","useReverseAddress","useWeb3Others","unreachable","isString","ImageIcon","TokenIcon","info","modalTitleBg","addressTitle","tokenIcon","amount","gasFeeTitle","TransactionPreview","transaction","onConfigChange","Others","tokenAddress","formattedTransaction","methods","includes","parameters","popups_wallet_contract_interaction","tokenInAddress","tokenInAmount","wallet_transfer_send","DEPLOYMENT","RETRY","CANCEL","Error","popup","metadata","domain","tokenValueUSD","formatDomainName","collection","iconURL","popups_wallet_gas_fee","Trans","Button","TextField","useFungibleTokenBalance","CopyButton","isZero","rightShift","textAlign","tips","tokenInfo","transform","link","amountInfo","rowGap","max","textTransform","spender","spenderAddress","UnlockERC20Token","balance","popups_wallet_unlock_erc20_revoke_tips","popups_wallet_unlock_erc20_balance_too_high_tips","popups_wallet_unlock_erc20_balance_tips","i18nKey","components","br","text","popups_wallet_unlock_erc20_placeholder","disableUnderline","popups_wallet_unlock_erc20_requested_by","contract","EMPTY_LIST","useNetworkContext","useNonFungibleCollections","useWeb3Connection","useQuery","TokenType","UnlockERC721Token","pluginID","account","connection","queryKey","queryFn","getNonFungibleTokenContract","collections","logoURL","tokenType","NonFungible","erc721Spender","compact","mapValues","toUtf8","useMessages","abiCoder","EthereumMethodType","createJsonRpcPayload","ErrorEditor","addGasMargin","usePopupCustomSnackbar","WalletAssetTabs","SignRequestInfo","BottomController","LoadingPlaceholder","left","right","arrowIcon","transition","expand","transactionDetail","document","itemTitle","itemValue","signRequest","ETH_SIGN","ETH_SIGN_TYPED_DATA","PERSONAL_SIGN","approveParametersType","Interaction","setIndex","approveAmount","setApproveAmount","setExpand","setPaymentToken","messages","showSnackbar","Message","source","currentRequest","request","arguments","method","confirmLoading","decodeParameters","slice","parametersString","encodeParameters","Celo","key","nonce","response","approveRequest","ID","editor","presence","Helper","removePopupWindow","tab","Activity","popups_wallet_rpc_error","cancelLoading","handleCancel","denyRequest","cancelAllLoading","handleCancelAllRequest","denyAllRequests","handleChangeGasConfig","p","data-hide-scrollbar","popups_wallet_view_full_detail_transaction","marginBottom","popups_wallet_unlock_erc20_approve_amount","popups_wallet_unlock_erc20_granted_to","Documents","popups_wallet_transaction_function_name","popups_wallet_multiple_requests","total","popups_wallet_reject_all_requests","cancel","sign","Icon","NetworkIcon","useNetworks","Skeleton","QRCode","useAsset","isDark","header","iconContainer","badge","white","qrcode","halo","top","backgroundImage","qrcodeContainer","tip","copyButton","avatarProps","Receive","isChain","networks","currentNetwork","network","asset","wallet_receive","MainIcon","iconUrl","ecLevel","quietZone","eyeRadius","qrStyle","scan_address_to_payment","SchemaType","useGasLimit","schemaType","contractAddress","expectedChainId","providerURL","rpcUrl","ERC20","ERC721","Native","getERC20Contract","transfer","estimateGas","SBT","getERC721Contract","transferFrom","ERC1155","useDefaultGasConfig","isSupportEIP1559","chainResolver","gasOption","ProgressiveText","useAvailableBalance","MaskColors","ChainContextProvider","useNetwork","useWallet","isLte","minus","isNativeTokenAddress","Input","formatTokenBalance","TokenPicker","PopupContext","ChooseTokenModal","light","tokenPicker","badgeIcon","common","maxButton","actionGroup","ETH_GAS_LIMIT","ERC20_GAS_LIMIT","PENDING_CHAIN_ID","FungibleTokenSection","smartPayChainId","chainContextValue","paymentAddress","setPaymentAddress","undecided","locationAsset","selectedAsset","setSelectedAsset","handleSelectAsset","set","setPendingChainId","setAmount","totalAmount","isNativeToken","fallbackGasLimit","gasResult","isLoadingGasLimit","defaultGasConfig","patchedGasConfig","gasCurrency","isLoadingAvailableBalance","isAvailableBalance","isGasSufficient","gasFee","transferFungibleToken","overrides","err","failed_to_transfer_token","onSelect","onChainChange","isLoadingBalance","optimisticBalance","tokenBalance","uiTokenBalance","inputNotReady","tokenNotReady","transferDisabled","picked","skeletonWidth","available_amount","mx","gas_fee","insufficient_funds_for_gas","CollectibleList","ElementAnchor","LoadingBase","useNonFungibleAssets","isLensCollect","isLensFollower","isLensProfileAddress","uniqWith","section","flexGrow","scroll","collectibleList","getCollectibleKey","NonFungibleTokenSection","fetchedTokens","done","dataUpdatedAt","tokens","filtered","v1","v2","hasSelected","selectedKey","split","targetToken","prependTokens","loadedTargetToken","transferNonFungibleToken","failed_to_transfer_nft","collectibles","columns","selectable","showNetworkIcon","MaskTabList","TabContext","TabPanel","Tab","NormalHeader","useParamTab","TransferTabType","body","panel","tabs","currentTab","handleTabChange","Token","tabList","aria-label","popups_wallet_token","popups_wallet_collectible","NFT","m","TransferPage","nftChainId","rawPendingChainId","pendingChainId","initialState","DashboardRoutes","addWalletWrapper","subTitle","mnemonicIcon","success","walletIcon","iconWrapper","ImportCreateWallet","onChoose","external_request","handleChoose","route","hasPassword","url","CreateMaskWalletForm","recover","RecoveryMaskWallet","browser","create","active","runtime","getURL","CreateMaskWalletMnemonic","popups_create_a_new_wallet_title","popups_generate_a_new_wallet_address","Mnemonic","popups_import_wallets","popups_import_wallets_description","useWeb3Hub","useFungibleAsset","Hub","enabled","getFungibleAsset","useWalletAssets","assets","matchedAsset","useFungibleAssets","fetchChainId","isSameURL","getRPCConstant","createBaseSchema","duplicateNameValidator","trim","nonempty","network_already_exists","rpc","incorrect_rpc_url","startsWith","rpc_requires_https","union","regex","invalid_number","v","number","currencySymbol","optional","explorer","incorrect_explorer_url","createSchema","editingId","baseSchema","superRefine","rpcChainId","addIssue","code","ZodIssueCode","custom","failed_to_fetch_chain_id","rpc_return_different_chain_id","chain_id","rpc_url_is_used_by","Duration","fetchCachedJSON","fetchChains","squashExpiration","cacheDuration","TWELVE_HOURS","useWarnings","formChainId","formSymbol","chainIdWarning","duplicated","isCustomized","chain_id_is_used_by","chains","symbolWarning","match","chain","nativeCurrency","rpc_return_different_symbol","queryClient","NetworkType","ZERO_ADDRESS","ProviderType","alpha","useMutation","useParams","iconButton","footer","QUERY_KEY","EditNetwork","id","isEditing","currentChainId","setChainId","Network","explorerUrl","network_management_add_network","isBuiltIn","switchChain","Mainnet","providerType","MaskWallet","removeNetwork","deleted_network_successfully","invalidateQueries","Trash","getValues","register","isValidating","isDirty","isValid","isFormValid","checkZodError","issues","JSON","parse","forEach","issue","isSubmitting","setIsSubmitting","isMutating","mutate","mutationFn","parsedData","parseAsync","fetchQuery","CustomNetwork","fullName","Fungible","updateNetwork","saved_network_successfully","addNetwork","adding_network_successfully","failed_to_save_network","isChecking","setIsChecking","isNotReady","then","network_name","maxLength","rpc_url","optional_currency_symbol","required","optional_block_explorer_url","WalletIcon","TextOverflowTooltip","boxSizing","NetworkManagement","manage_network","role","mainIcon","Lock","RightArrow","process","env","NODE_ENV","AddNetwork","first","useChainIdValid","PersonaContext","useVerifiedWallets","WalletItem","ProfilePhotoType","SelectWallet","external_request_id","getEIP2255PermissionDetail","chainIdSearched","isVerifyWalletFlow","isSettingNFTAvatarFlow","proofs","bindingWallets","chainIdValid","localWallets","getWallets","allWallets","defaultWallet","setSelected","rejected","Promise","allSettled","reject","resolveMaskAccount","grantEIP2255Permission","connect","PersonaAvatarSetting","ConnectWallet","internalWalletConnect","switchNetwork","popups_select_wallet","popups_wallet_unsupported_network","paddingX","i","origin","pt","pb","identity","isSelected","mapKeys","ERC20_ABI","decodeFunctionData","ReplaceType","MaxUint256","modifyTransaction","replaceType","candidate","candidates","indexId","oldGasSettings","gasSettings","newConfig","cancelTransaction","replaceTransaction","parseReceiverFromERC20TransferInput","decodedInputParam","parseAmountFromERC20ApproveInput","ReversedAddress","useEverSeen","useBoundedPopperProps","useAccount","useNetworkDescriptors","ChainbaseHistory","chainbase","DebankTransactionDirection","TransactionStatusType","trimZero","ListItemText","cateType","__","colorMap","send","receive","backgroundColorMap","boxShadowMap","iconColor","iconBoxShadow","iconBackgroundColor","scamItem","txIconContainer","flexShrink","txIcon","borderColor","txName","scamLabel","toAddress","operations","speedupButton","cancelButton","failedLabel","TransactionIcon","mapType","IconMap","BaseUpload","Download","Cached","ActivityItem","onView","descriptors","networkDescriptor","blockNumber","seen","ref","tx","loadingTx","getTransaction","txInput","loadingTxInput","receiverAddress","status","normalizeTxStatus","fromAddress","from_address","to_address","loadingToAddress","isOut","popperProps","approveToken","isScam","secondaryTypographyProps","secondary","FAILED","failed","cateName","span","scam_tx","strong","PopperProps","isSend","direction","SEND","RecentActivityItem","onSpeedup","onCancel","speed_up","ActivityItemSkeleton","DeBankHistory","useInfiniteQuery","useQueries","sortBy","useTransactions","pageParam","getAllTransactions","indicator","getNextPageParam","lastPage","nextIndicator","transactions","pages","flatMap","Transaction","queries","getTransactions","subscribe","allLocaleTxes","localeTxes","now","Date","duration","updatedAt","getTime","createdAt","EmptyStatus","range","useOutletContext","hasNav","ActivityList","hasNavigator","isFetching","fetchNextPage","handleSpeedup","SPEED_UP","handleView","TransactionDetail","no_data","dense","ValueRef","useSubscription","assetExpandRef","subscription","getCurrentValue","addListener","useAssetExpand","isExpand","setAssetsIsExpand","val","MoreBar","popups_wallet_more_collapse","popups_wallet_more_expand","isGte","bg","customToken","more","AssetItem","onItemClick","tryRpc","rpcBalance","pending","secondaryAction","usd","isCustomToken","added_by_user","AssetsList","assetsIsExpand","TokenDetail","onSwitch","isSmartPay","filteredAssets","hasLowValueToken","AssetsListSkeleton","CollectionList","EMPTY_ENTRY","forwardRef","gridProps","grid","importNft","useAdditionalAssets","collectionMap","nonFungibleCollectionMap","additionalAssets","toLowerCase","tokenIds","ownerId","WalletCollections","onAddToken","scrollTargetRef","Tokens","handleItemClick","CollectibleDetail","handleCollectionChange","SEARCH_KEY","collectiblesEmptyText","do_not_see_your_nft","import_nft","disableSidebar","disableWindowScroll","scrollElementRef","emptyText","onCollectionChange","RestorableScroll","UserAssetsProvider","Boundary","TabList","styled","tabClasses","tabsClasses","useRef","panels","tabPanel","addButton","StyledTabList","WalletAssets","handleAdd","assetTab","AddToken","WalletAssetsUI","popups_wallet_tab_assets","popups_wallet_tab_collectibles","Collectibles","popups_wallet_tab_activity","AddNoBorder","defaultCollectionId","scrollKey","targetRef","Days","textDecoration","DEFAULT_RANGE_OPTIONS","ONE_DAY","ONE_WEEK","ONE_MONTH","ONE_YEAR","MAX","resolveDaysName","days","Math","floor","PriceChartRange","rangeOptions","onDaysChange","daysOption","PluginID","matchPath","useActivatedPlugin","ActionGroup","traderDefinition","Trader","chainIdList","enableRequirement","web3","supportedChainIds","disabledSwap","handleSwap","Swap","contract_address","Contacts","pathname","Send","wallet_send","ArrowDownward","wallet_swap","usePriceLineChart","useDimension","useCurrencyType","useFiatCurrencyRate","DIMENSION","TrendingChart","stats","svgRef","currencyType","fiatCurrencyRate","chartData","date","svg","viewBox","preserveAspectRatio","CoinGeckoTrending","DSearch","SearchResultType","getCoinGeckoConstant","useCoinGeckoCoinId","erc20CoinId","coinInfo","getCoinInfoByAddress","fallbackSymbol","select","nativeCoinId","constantCoinId","results","search","FungibleToken","trending","SourceType","useCoinTrendingStats","coinId","currency","getCurrency","CoinGecko","getCoinPriceStats","useTokenPrice","useTrending","getCoinTrending","CoinMetadataTable","CoinMetadataTableSkeleton","FungibleCoinMarketTable","FungibleCoinMarketTableSkeleton","PriceChange","ReloadStatus","MaskDarkTheme","MaskLightTheme","ThemeProvider","ConfirmModal","deleteButton","assetValue","priceChange","actions","chartRange","setChartRange","refetch","isLoadingStats","at","isLoadingPrice","tokenValue","isLoadingTrending","isError","market","price_change_percentage_24h_in_currency","price_change_24h","hide_token_symbol","hide_token_description","blockToken","hided_token_successfully","change","onRetry","not_enough_data_to_present","format","useTransactionLogs","transactionState","txes","networkMode","logs","isRecentTx","localTransaction","transaction_confirmed_at","datetime","transaction_completed_at","Boolean","formatHash","capitalize","Navigate","statusTitle","statusFail","statusSuccess","statusPending","fieldName","fieldValue","sectionName","listStyleType","log","logText","candidateState","transactionId","SUCCEED","NOT_DEPEND","StatusIconMap","BaseClose","FillSuccess","WarningTriangle","StatusClassesMap","StatusLabelMap","transaction_failed","transaction_success","transaction_pending","transactionLink","gasUsedPercent","gas_used","gasFeeInState","fee","eth","effective_gas_price","gasCost","transaction_status","transaction_hash","transaction_link","view_on_explorer","transaction_base","transaction_from","transaction_to","transaction_gas_limit","transaction_gas_used","transaction_gas_price","max_priority_fee_per_gas","transaction_priority_fee","max_fee_per_gas","transaction_max_fee","transaction_fee","activity_log","ol","li","AssetPreviewer","Image","NFTFallbackImage","NFTSpamBadge","useReportSpam","formatTrait","resolveImageURL","IconButton","image","collectionName","collectionNameLabel","fallbackImage","prices","priceLabel","priceValue","noneValue","sectionTitle","wordWrap","traits","flexWrap","trait","traitType","primaryMain","traitValue","sendButton","reportButton","stateAsset","collectible_title","availableAsset","assetDesc","collectionDesc","floorPrice","floorPrices","marketplace_id","hide_collectible","hide_collectible_description","removeNonFungibleTokens","lastSale","priceInToken","transferable","isReporting","isSpam","promptReport","collectionId","article","imageURL","skeletonHeight","src","Flag","collectible_last_sale_price","none","floor_price","payment_token","collectible_description","collectible_properties","uiValue","about_collection","PasswordField","PopupHomeTabType","titleWrapper","fontStyle","inputWrapper","pointer","Unlock","password","setPassword","verified","handleUnlock","close_after_unlock","unlockWallet","Personas","ConnectedWallets","navigateToResetWallet","ResetWallet","welcome_back","onKeyDown","popups_wallet_unlock_error_password","unlock","popups_wallet_reset_tips","Sniffings","placeholderDescription","WalletStartUp","onEnterCreateWallet","is_firefox","window","close","popups_add_wallet","popups_add_wallet_description","alignSelf","backIcon","WalletSetupHeaderUI","showBack","handleBack","Comeback","useConnectedWallets","queryCurrentActiveTab","URL","canParse","connected","getAllConnectedWallets","sum","WalletAssetsValue","parseFloat","ChainIcon","topbar","action","arrow","secondaryDark","networkSelector","chainName","dot","connectedDot","unconnectedDot","WalletHeaderUI","onOpenNetworkSelector","onActionClick","disableCopy","connectedWallets","has","networkName","popups_wallet_connected_status","SmartPay","MaskBlue","PopupModalRoutes","useMatch","useModalNavigate","CUSTOM_HEADER_PATTERNS","ExportWalletPrivateKey","WalletHeader","modalNavigate","matchResetWallet","matchWallet","customHeader","matchContractInteraction","ContractInteraction","chooseNetwork","ChooseNetwork","handleActionClick","SwitchWallet","onClose","useWalletLockStatus","isLocked","walletLockStatusUpdated","useMessageGuard","matchInteraction","useHasPassword","usePaymentPasswordGuard","matchSetPaymentPassword","SetPaymentPassword","Outlet","WalletGuard","outletContext","hitPaymentPasswordGuard","hitMessageGuard","NoWalletGuard","Suspense","lazy","Route","Routes","relativeRouteOf","RestorableScrollContext","WalletSettings","CreateWallet","DeriveWallet","ChangeOwner","ExportPrivateKey","ConnectedSites","r","fallback","element","isEqual","useValueRef","ValueRefWithReady","createManager","getPluginDefine","activated","startDaemon","minimalMode","def","SiteAdaptor","NoManagedContext","activatedSub","plugins","minimalModeSub","useActivatedPluginsSiteAdaptor","minimalModeEqualsTo","visibility","useMinimalMode","bind","useNotMinimalMode","useAnyMode","useIsMinimalMode","useActivatedPluginSiteAdaptor","startPluginSiteAdaptor","host","supports","sites","Card","useNetworkDescriptor","NETWORK_DESCRIPTORS","blocker","linkWrapper","networkIcon","CollectibleCard","disableLink","mediaURL","explorerResolver","nonFungibleTokenLink","Checkbox","Radio","useForkRef","card","inactive","collectibleCard","aspectRatio","textIndent","CollectibleItem","provider","checked","multiple","uiTokenId","formatTokenId","SelectableButton","scrollIntoViewRef","node","scrollIntoView","block","behavior","forkedRef","CollectibleItemSkeleton","animation","LoadingSkeleton","ShadowRootTooltip","useSharedTrans","gapIsNumber","gridGap","collectibleItem","getKey","collectible","availableKeys","handleItemChange","newValue","listRef","no_collectible_found","collectibleKey","placement","disableInteractive","popperOptions","strategy","modifiers","rootBoundary","current","OpenSea","xmlns","fill","d","rect","y","rx","fillRule","clipRule","defs","linearGradient","x1","x2","y1","y2","gradientUnits","stop","offset","stopColor","stopOpacity","cloneElement","useLayoutEffect","useScrollState","Map","children","containerRef","mapRef","scrollTop","getAddressType","NameService","lookup","useBlockedNonFungibleTokens","availableChainIds","isMainnet","blockedTokens","blockedTokenIds","hasNextPage","res","getNonFungibleAssets","nextChainId","indexOf","nextPage","useERC20TokenAllowance","allowance","call","refetchInterval","scale","plus","dividedToIntegerBy"],"sourceRoot":"","x_google_ignoreList":[31,77,78,79,80]}