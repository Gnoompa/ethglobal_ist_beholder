{"version":3,"file":"bundled/chunk.3256.js","mappings":";;;;;;;;;;;;;;;;;;;AAAgF;AAC5C;AACM;AACiC;AACJ;AAKnE,oDAAoD;AAOjD,SAASU,WAAWC,KAAsB;IAC7C,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,KAAK,EAAEC,OAAOX,sEAAWA,CAACY,IAAI,EAAE,GAAGP;IAC5E,MAAM,CAACQ,QAAQC,UAAU,GAAGlB,+CAAQA,CAAC;IACrC,MAAMmB,WAAWb,4EAAUA;IAE3B,MAAMc,cAActB,kDAAWA,CAAC;QAC5BK,uEAAYA,CAACkB,MAAM,CAACC,iBAAiB,CAACC,WAAW,CAAC;YAAEC,MAAM;YAAMT;QAAK;QACrEG,UAAU;QACVP;IACJ,GAAG;QAACA;QAAOI;KAAK;IAEhB,MAAMU,UAAU3B,kDAAWA,CAAC;QACxB,+GAA+G;QAC/GO,oEAASA,CAACqB,eAAe,IAAIC,SAASC,MAAM,CAAC,MAAMb;QACnDK;IACJ,GAAG;QAACA;QAAaL;KAAK;IAEtBd,8DAAQA,CAAC;QACL,IAAI0B,SAASE,IAAI,KAAK,MAAMd,QAAQE,UAAUU,SAASG,QAAQ,KAAK,WAAW;QAC/EV;IACJ;IAEAb,mFAAiBA,CAAC;QACd,MAAMwB,SAAUC,SAASC,aAAa,EAAyBC,SAASC;QACxE,IAAIJ,WAAW,0BAA0B;QAEzC5B,uEAAYA,CAACkB,MAAM,CAACC,iBAAiB,CAACC,WAAW,CAAC;YAAEC,MAAM;QAAM;QAChEN,UAAU;QACVR;IACJ;IAEAX,gDAASA,CAAC;QACN,OAAOI,uEAAYA,CAACkB,MAAM,CAACe,gBAAgB,CAACC,EAAE,CAAC,CAACC;YAC5CpB,UAAUoB,KAAKrB,MAAM;QACzB;IACJ,GAAG,EAAE;IAEL,qBACI,uDAACsB;QAAeC,WAAW3B,QAAQ4B,IAAI;kBACnC,sEAACvC,8DAAUA;YACPsC,WAAW3B,QAAQ6B,MAAM,GAAG,MAAOzB,CAAAA,SAASJ,QAAQ8B,QAAQ,GAAG,EAAC;YAChElB,SAASA;YACTmB,WAAU;;gBACTnC,MAAMoC,IAAI;gBACV1B,YAAYV,MAAMoC,IAAI,GAAG,OAAO/B;gBAChCG,UAAUL,WAAWA,WAAW;;;OAPhC;AAWjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEsC;AACuB;AAClB;AACc;AAC7B;AACiC;AAE7D,MAAMyC,YAAYL,gCAAUA,GAAG,CAACM,QAAW;QACvCZ,QAAQ;YACJa,SAAS;YACTC,KAAKF,MAAMG,OAAO,CAAC;YACnBC,UAAU;YACVC,cAAc;YACdC,OAAO;QACX;IACJ;AAEA,SAASC;IACLd,kDAAsBA,CAAC1B,MAAM,CAACyC,sBAAsB,CAACvC,WAAW,CAAC;QAC7DwC,MAAM;IACV;AACJ;AACO,MAAMC,mCAAqBb,cAAIA,CAAC,SAASa;IAC5C,MAAMC,IAAIb,wCAAcA;IACxB,MAAM,EAAEvC,OAAO,EAAEyC,KAAK,EAAE,GAAGD;IAE3B,qBACI;;0BACI,oBAACH,oBAAKA;gBAACgB,MAAM;0BACT,kCAAChE,yBAAUA;oBAACiE,YAAY;oBAAKC,UAAU;oBAAIC,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAACC,MAAM;8BAC3EP,EAAEQ,yBAAyB;;;0BAGpC,oBAACvB,oBAAKA;gBAACwB,WAAU;gBAAMC,gBAAe;0BAClC,mCAAC1B,qBAAMA;oBAACT,WAAW3B,QAAQ6B,MAAM;oBAAEjB,SAASoC;;sCACxC,oBAACf,8BAAc;4BAAC+B,MAAM;;wBACrBZ,EAAEa,0BAA0B;;;;;;AAKjD,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCuE;AAC9B;AACV;AACI;AAC8C;AAC7C;AACU;AACG;AACe;AAMrB;AACc;AAanC;AAUK;AAC2C;AACS;AAC5B;AACI;AAC2C;AACpC;AAMxB;AACoE;AAC1C;AACe;AACjD;AAEhC,MAAMzB,2BAASA,GAAGL,gCAAUA,GAAG,CAACM,QAAW;QACvCb,MAAM;YACFmB,OAAOvD,0BAASA,CAAC2H,gBAAgB,GAAG,MAAM;YAC1C3D,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC0D,IAAI;QACvC;QACAC,WAAW;YACPC,YACI;YACJC,SAAS;QACb;QACAtH,OAAO;YACHyC,SAAS;YACToB,gBAAgB;YAChB0D,YAAY;YACZC,cAAc;QAClB;QACAC,YAAY;YACRhF,SAAS;YACT8E,YAAY;YACZjE,UAAU;YACVD,YAAY;QAChB;QACAqE,aAAa;YACTC,QAAQ;YACRC,WAAW;YACXC,QAAQ;YACR,WAAW;gBACPC,gBAAgB;YACpB;QACJ;QACAC,SAAS;YACLC,UAAU;QACd;QACAC,cAAc;YACVX,SAAS;YACThE,UAAU;YACVV,UAAU;YACVyE,YAAY;YACZ,WAAW;gBACPA,YAAY;YAChB;QACJ;QACAa,aAAa;YACTzF,SAAS;YACT8E,YAAY;QAChB;QACAY,MAAM;YACF1F,SAAS;YACTuF,UAAU;QACd;QACAI,UAAU;YACN7E,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC4E,IAAI;QACvC;QACAC,aAAa;YACT/E,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC8E,aAAa;QAChD;QACAC,cAAc;YACVC,QAAQ;YACRlF,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC8E,aAAa;QAChD;QACAG,QAAQ;YACJ7F,cAAc;YACdD,UAAU;QACd;IACJ;AAIO,SAAS+F,kBAAkBhJ,KAA6B;IAC3D,qBACI,oBAAC2G,2CAAsBA,CAACsC,QAAQ;kBAC5B,kCAACC;YAAS,GAAGlJ,KAAK;;;AAG9B;AAEA,SAASoD,8CAA4BA;IACjCd,kDAAsBA,CAAC1B,MAAM,CAACyC,sBAAsB,CAACvC,WAAW,CAAC;QAC7DwC,MAAM;IACV;AACJ;AAEA,SAAS4F,QAAQlJ,KAA6B;IAC1C,MAAM,EAAEI,OAAO,EAAE,GAAGwC,2BAASA,CAACuG,WAAW;QAAEnJ;IAAM;IAEjD,MAAMwD,IAAIqD,oDAAkBA;IAC5B,MAAMuC,YAAYhE,uCAAmBA;IAErC,MAAM,CAACiE,QAAQC,UAAU,GAAG/J,kBAAQA,CAAC;IACrC,MAAM,CAACgK,gBAAgBC,kBAAkB,GAAGjK,kBAAQA,CAACI,yBAAWA,CAACY,IAAI;IACrE,MAAM,CAACkJ,UAAUC,YAAY,GAAGnK,kBAAQA,CAAC;IACzC,MAAMoK,YAAYtK,qBAAWA,CAAC,IAAMqK,YAAY,QAAQ,EAAE;IAC1D,MAAME,cAAcvC,8CAAiBA;IACrC,MAAMwC,iBAAiB9C,oDAAyBA;IAChD,MAAM+C,oBAAoBzD,kCAAWA,CAACD,yCAAwBA;IAE9D,MAAM,EACF2D,OAAOC,aAAa,EACpBC,SAASC,oBAAoB,EAC7BC,OAAOC,sBAAsB,EAC7BC,OAAOC,sBAAsB,EAChC,GAAG3E,wEAA8BA,CAACiE,aAAaE,mBAAmBxC,uBAAQA,CAACiD,MAAM,CAACC,aAAa,EAAEX;IAElG,MAAMY,gCAAgC3D,qDAA0BA;IAChE,MAAM,EAAEjF,MAAM6I,qBAAqB,EAAE,GAAG1D,4CAAiBA,CAACyD;IAC1D,MAAME,wBAAwBF,+BAA+BG,YAAYC;IACzE,MAAMC,kBAAkBL,+BAA+BM;IAEvD,MAAM,EACFlJ,MAAMmJ,iBAAiB/E,4BAAU,EACjCgF,WAAWC,qBAAqB,EAChCf,OAAOgB,kBAAkB,EACzBC,SAASC,mBAAmB,EAC/B,GAAGzF,kEAA2BA,CAAC8E,uBAAuBvB,WAAWnD,kCAAaA,EAAE,CAACsF,GAAGC,GAAGC,GAAGC,IACvFnE,uBAAQA,CAACoE,QAAQ,CAACC,eAAe,CAACL,GAAGC,GAAGC,GAAGtK,SAAS0K,MAAM,EAAEH;IAEhE,MAAM,CAACI,kBAAkBpH,uBAAKA,CAACuG,iBAAiBc,OAAO,EAAEC,mBAAmB,GAAGxM,kBAAQA;IACvF,MAAMyM,wBAAwBhB,eAAeiB,IAAI,CAAC,CAACC,IAAMxF,sCAAaA,CAACwF,EAAEJ,OAAO,EAAED;IAClF,MAAM,EAAEM,OAAO,EAAE,GAAGxF,2CAAsBA,CAACyF,YAAY;IACvD9M,mBAASA,CAAC;QACN,IAAI0M,uBAAuBF,WAAWE,uBAAuBK,OAAO;YAChEF,QAAQH,sBAAsBF,OAAO,EAAEE,sBAAsBK,KAAK;QACtE;IACJ,GAAG;QAACL,uBAAuBF;QAASE,uBAAuBK;KAAM;IAEjE/M,mBAASA,CAAC;QACN,OAAOI,4BAAYA,CAACkB,MAAM,CAAC0L,eAAe,CAAC1K,EAAE,CAAC;YAC1CyJ;QACJ;IACJ,GAAG;QAACA;KAAoB;IAExB,MAAMkB,mBAAmBrH,uDAA8BA,CAAC;IACxD,MAAMsH,iBAAiBlH,kDAAmBA,CAACiH,kBAAkB,CAACE;QAC1D,OAAOA,QACFC,OAAO,CAAC,CAACR,IAAMA,EAAEvM,WAAW,EAAEgN,IAAI,CAACC,IAAO;oBAAE,GAAGA,CAAC;oBAAEC,UAAUX,EAAEY,EAAE;gBAAC,OAAO7G,4BAAUA,EAClF8G,MAAM,CAAC,CAACb;YACL,MAAMc,gBACFd,EAAEe,KAAK,EAAED,gBAAgBvC,+BAA+BuB,0BAA0B;YACtF,OAAOE,EAAEW,QAAQ,KAAK1G,wBAAQA,CAAC+G,MAAM,IAAIF;QAC7C,GACCG,IAAI,CAAC,CAAC7B,GAAG8B,IAAM9B,EAAE+B,QAAQ,GAAGD,EAAEC,QAAQ;IAC/C;IAEA,MAAM7E,OAAOgE,eAAeG,GAAG,CAAC,CAACT,IAAO;YACpCoB,IAAIpB,EAAEY,EAAE;YACRT,OAAO,OAAOH,EAAEG,KAAK,KAAK,WAAWH,EAAEG,KAAK,GAAGjD,UAAU8C,EAAEW,QAAQ,EAAEX,EAAEG,KAAK;QAChF;IAEA,MAAM,CAACkB,YAAYC,SAAS,GAAGhH,0BAAOA,CAAC/B,uBAAKA,CAAC+D,OAAO8E,MAAMnH,wBAAQA,CAACsH,WAAW,KAAKjF,KAAKmE,GAAG,CAAC,CAACe,MAAQA,IAAIJ,EAAE;IAE3G,MAAMK,wBAAwBxI,yCAAgBA,CAACgB,wBAAQA,CAACyH,WAAW;IAEnE,MAAMC,cAAcjO,0BAASA,CAACqB,eAAe;IAC7C,MAAM6M,yBACFhD,mBAAmBd,cAAc+D,KAAK,EAAEC,UAAU,CAACC,IAAMA,EAAEC,QAAQ,KAAKhI,kCAAcA,CAACiI,QAAQ,MAAM,CAAC;IAE1G,mDAAmD;IACnD,MAAMC,0BAA0BtD,mBAAmB,CAACd,cAAcqE,QAAQ;IAC1E,MAAMC,aACFT,eACA,qBAAqB;IACpBF,CAAAA,yBACGS,2BACA,2EAA2E;IAC3EN,0BACA,oDAAoD;IACnD,CAAChD,mBAAmB,CAACE,eAAeuD,MAAM;IAEnD,MAAMC,iBAAiBF,aAAa,CAAC,EAAEnI,wBAAQA,CAAC+G,MAAM,CAAC,WAAW,CAAC,GAAGK;IAEtE,MAAMkB,mBAAmBnK,iBAAOA,CAAC;QAC7B,MAAMoK,YAAYrJ,8CAAoBA,CAACmJ;QACvC,IAAI,CAACE,WAAW,OAAO;QAEvB,qBAAO,oBAACA;YAAUC,UAAUjE;YAAuBkE,eAAe5C;;IACtE,GAAG;QAACwC;QAAgBxC;QAAuBtB;KAAsB;IAEjE,MAAMmE,qBAAqB1H,gEAA4BA,CAACoF,iBAAiBQ,MAAM,CAAC,CAACb,IAAMA,EAAE4C,eAAe,EAAEP;IAE1G,MAAMQ,eAAetK,uBAAKA,CAACoK,qBAAqB;WAAIA;KAAmB,GAAG,EAAE;IAC5E,MAAMG,mBAAmBzC,iBAAiBN,IAAI,CAAC,CAACC,IAAMA,EAAEY,EAAE,KAAKiC;IAE/D,MAAM,GAAGE,QAAQ,GAAG/H,uDAAmBA,CAAC8H,kBAAkBE,kBAAkBC;IAC5ErP,8CAAiBA,CAAC;QACd0N,SAASrE,WAAW1E,uBAAKA,CAAC+D,OAAO8E;IACrC;IAEA9I,kCAAeA,CAAC;QACZgJ,SAASrE,WAAW1E,uBAAKA,CAAC+D,OAAO8E;QACjCvB,mBAAmB5C;IACvB,GAAG;QAACwB;KAAsB;IAE1BrL,mBAASA,CAAC;QACN,IAAIiK,mBAAmB5J,yBAAWA,CAACY,IAAI,EAAE;QACzC,IAAIgN,eAAe,CAAC,EAAEpH,wBAAQA,CAACiJ,IAAI,CAAC,OAAO,CAAC,EACxCrK,0BAASA,CAACsK,YAAY,CAACrK,uBAASA,CAACsK,MAAM,EAAErK,qBAAOA,CAACsK,8BAA8B;QACnF,IAAIhC,eAAe,CAAC,EAAEpH,wBAAQA,CAACiJ,IAAI,CAAC,WAAW,CAAC,EAC5CrK,0BAASA,CAACsK,YAAY,CAACrK,uBAASA,CAACsK,MAAM,EAAErK,qBAAOA,CAACuK,kCAAkC;QACvF,IAAIjC,eAAe,CAAC,EAAEpH,wBAAQA,CAACiJ,IAAI,CAAC,SAAS,CAAC,EAC1CrK,0BAASA,CAACsK,YAAY,CAACrK,uBAASA,CAACsK,MAAM,EAAErK,qBAAOA,CAACwK,iCAAiC;IAC1F,GAAG;QAAClG;QAAgBgE;KAAW;IAE/BjO,mBAASA,CAAC;QACN,OAAOI,4BAAYA,CAACkB,MAAM,CAAC8O,gBAAgB,CAAC9N,EAAE,CAAC,CAACC;YAC5C,IAAIA,KAAKwH,MAAM,EAAEC,UAAUzH,KAAKwH,MAAM;QAC1C;IACJ,GAAG;QAACsB;KAAsB;IAE1B,MAAM,CAACgF,iBAAiBC,cAAc,GAAGrQ,kBAAQA,CAAC;IAElDD,mBAASA,CAAC;QACN,OAAOgD,kDAAsBA,CAAC1B,MAAM,CAACiP,8BAA8B,CAACjO,EAAE,CAAC,CAACkO;YACpEF,cAAcE,GAAGC,IAAI;QACzB;IACJ,GAAG,EAAE;IAELzQ,mBAASA,CAAC;QACN,OAAOI,4BAAYA,CAACkB,MAAM,CAACC,iBAAiB,CAACe,EAAE,CAAC,CAACC;YAC7CyH,UAAU,CAACzH,KAAKd,IAAI;YACpBc,KAAKvB,IAAI,IAAIkJ,kBAAkB3H,KAAKvB,IAAI;QAC5C;IACJ,GAAG;QAACqK;KAAsB;IAE1BrL,mBAASA,CAAC;QACN,MAAM0Q,WAAW,IAAMtG,YAAY;QACnCuG,OAAOC,gBAAgB,CAAC,UAAUF,UAAU;QAC5C,iEAAiE;QACjEC,OAAOC,gBAAgB,CAAC,SAASF,UAAU;QAE3C,OAAO;YACHC,OAAOE,mBAAmB,CAAC,UAAUH,UAAU;YAC/CC,OAAOE,mBAAmB,CAAC,SAASH,UAAU;QAClD;IACJ,GAAG,EAAE;IAEL,MAAMI,YAAY7L,gBAAMA,CAAoB;IAC5C,MAAM8L,WAAW,CAACvE;QACdC,mBAAmBD;QACnBpC,YAAY;IAChB;IAEA,MAAM,EAAEK,OAAOuG,iBAAiBrK,4BAAU,EAAE,GAAGF,sEAA6BA,CACxEwD,mBAAmB5J,yBAAWA,CAACY,IAAI,GAAGoK,wBAAwB;IAGlE,MAAM,EAAEZ,OAAOwG,YAAYtK,4BAAU,EAAE,GAAGW,8EAAiCA,CACvE2C,mBAAmB5J,yBAAWA,CAAC6Q,GAAG,GAAG7F,yBAAyB,KAAK;IAGvE,MAAM,CAAC8F,sBAAsBC,wBAAwB,GAAGnR,kBAAQA,CAAC;IACjE,MAAMoR,iBAAiBL,gBAAgB,CAACG,qBAAqB;IAE7D,MAAM,EAAE5O,MAAM8M,QAAQ,EAAE,GAAG1H,oDAAyBA,CAAC0D;IAErD,MAAM,EAAE9I,MAAM+O,iBAAiB3K,4BAAU,EAAE,GAAGnB,4BAAQA,CAAC;QAAC;QAAY;QAAiB6F;KAAsB,EAAE;QACzG,IAAI,CAACA,uBAAuB,OAAO1E,4BAAUA;QAC7C,OAAOQ,yBAAWA,CAACoK,wBAAwB,CAAClG;IAChD;IAEA,IAAItB,QAAQ,OAAO;IAEnB,MAAMyH,UACFvH,mBAAmB5J,yBAAWA,CAACY,IAAI,GAAGoQ,gBAAgB7E,WAAW6E,gBAAgBI,OAAOpG;IAE5F,MAAMqG,gBAAgBzH,mBAAmB5J,yBAAWA,CAACY,IAAI,GAAG+P,iBAAiBC;IAE7E,IAAIO,WAAW,CAACnB,iBACZ,qBACI,oBAAC7N;QAAIC,WAAW3B,QAAQ4B,IAAI;kBACxB,kCAACoF,kDAAqBA;YAClB0J,SAASA;YACTG,aAAa;YACb1H,gBAAgBA;YAChB2H,qBAAqBP;YACrBK,eAAeA;YACfrC,UAAUA;;;IAK1B,IAAIE,oBAAoBzK,MAAM;QAC1B,qBACI,oBAACS,4BAAaA;YAAChC,OAAOyD,2BAAcA;sBAChC,kCAACxE;gBAAIC,WAAW3B,QAAQ4B,IAAI;0BACxB,kCAAC0D,0CAAmBA;8BAChB,kCAACD,uCAAgBA;wBACb0L,aAAanC,kBAAkBE,kBAAkBC,oBAAoBlJ,4BAAUA;wBAC/EgJ,SAASA;;;;;IAMjC;IAEA,IAAI,CAACtE,yBAA0BO,yBAAyB,CAACF,eAAeuD,MAAM,IAAKrE,sBAC/E,qBACI,oBAACrF,4BAAaA;QAAChC,OAAOyD,2BAAcA;kBAChC,kCAACxE;YAAIC,WAAW3B,QAAQ4B,IAAI;sBACxB,kCAAC0D,0CAAmBA;;;IAKpC,IAAI,CAAC,mBAAoB0E,0BAA2Be,kBAAiB,KAAMH,eAAeuD,MAAM,KAAK,GAAG;QACpG,MAAM6C,cAAc;YAChB,IAAIhH,wBAAwBE;YAC5B,IAAIa,oBAAoBE;QAC5B;QACA,qBACI,oBAACxG,4BAAaA;YAAChC,OAAOyD,2BAAcA;sBAChC,kCAACxE;gBAAIC,WAAW3B,QAAQ4B,IAAI;0BACxB,kCAAC0D,0CAAmBA;8BAChB,mCAACjD,oBAAKA;wBAACK,SAAQ;wBAAcC,KAAK;wBAAGmB,gBAAe;wBAAS0D,YAAW;;0CACpE,oBAACnI,yBAAUA;gCACPkE,UAAU;gCACVD,YAAY;gCACZ2N,YAAW;gCACXzN,OAAO,CAACJ,IAAMA,EAAEK,OAAO,CAACC,SAAS,CAACwN,MAAM;0CACvC9N,EAAE+N,WAAW;;0CAElB,oBAAC/O,qBAAMA;gCAACoB,OAAM;gCAAU7B,WAAW3B,QAAQ2I,MAAM;gCAAE/H,SAASoQ;0CACvD5N,EAAEuF,MAAM;;;;;;;IAOrC;IAEA,mCAAmC;IACnC,IAAIiC,eAAeuD,MAAM,KAAK,KAAK,CAACD,cAAc,CAACT,aAAa;QAC5D,qBACI,oBAAChJ,4BAAaA;YAAChC,OAAOyD,2BAAcA;sBAChC,kCAACxE;gBAAIC,WAAW3B,QAAQ4B,IAAI;0BACxB,kCAAC0D,0CAAmBA;8BAChB,kCAACjD,oBAAKA;wBAACK,SAAQ;wBAAcC,KAAK;wBAAGmB,gBAAe;wBAAS0D,YAAW;kCACpE,kCAACnI,yBAAUA;4BACPkE,UAAU;4BACVD,YAAY;4BACZ2N,YAAW;4BACXzN,OAAO,CAACJ,IAAMA,EAAEK,OAAO,CAACC,SAAS,CAAC0N,UAAU;sCAC3ChO,EAAEiO,mCAAmC;;;;;;IAOlE;IAEA,IAAI,CAACzG,eAAeuD,MAAM,IAAI,CAACD,YAAY;QACvC,qBACI,oBAACzJ,4BAAaA;YAAChC,OAAOyD,2BAAcA;sBAChC,kCAACxE;gBAAIC,WAAW3B,QAAQ4B,IAAI;0BACxB,kCAAC0D,0CAAmBA;8BAChB,kCAACjD,oBAAKA;wBAACK,SAAQ;wBAAcC,KAAK;wBAAGmB,gBAAe;wBAAS0D,YAAW;kCACpE,kCAACrE,kBAAkBA;;;;;IAM3C;IAEA,qBACI,qBAACzB;QAAIC,WAAW3B,QAAQ4B,IAAI;;YACvBwG,KAAK+F,MAAM,GAAG,KAAK,CAACD,2BACjB,qBAACxM;gBAAIC,WAAW3B,QAAQqH,SAAS;;kCAC7B,qBAAC3F;wBAAIC,WAAW3B,QAAQC,KAAK;;0CACzB,qBAACyB;gCAAIC,WAAW3B,QAAQ0H,UAAU;;kDAC9B,oBAACtF,qBAAMA;wCAACkP,SAAQ;wCAAOtN,MAAK;wCAAQuN,KAAKvB;wCAAWrO,WAAW3B,QAAQkI,YAAY;kDAC/E,kCAAC/C,8BAAWA;4CACRqM,MAAM;4CACN5Q,SAAS,CAAC6Q;gDACNA,MAAMC,cAAc;gDACpBD,MAAME,eAAe;gDACrBrI,YAAY;4CAChB;4CACAsI,mBAAmB5R,QAAQyI,YAAY;4CACvCoJ,iBAAiB;gDACbtO,UAAU;gDACVD,YAAY;gDACZE,OAAO,CAACf,QAAUA,MAAMgB,OAAO,CAACC,SAAS,CAAC4E,IAAI;4CAClD;4CACAkG,eAAe5C;;;kDAIvB,oBAACnG,wDAAwBA;wCACrBvC,MAAMmG;wCACNyI,SAASvI;wCACTwI,UAAU/B,UAAUgC,OAAO;wCAC3BC,iBAAiBhC;wCACjBiC,gBAAgBzG;wCAChByE,gBAAgBA;wCAChBtF,gBAAgBA;wCAChBuH,mBAAmB5B;wCACnB6B,eAAe,CAACC,GAAGC;4CACfhC,wBAAwBgC;4CACxB9C,cAAc;4CACdlG,YAAY;wCAChB;wCACAiJ,cAAc;;kDAGlB,oBAAC7M,0CAAiBA;wCAAC8K,gBAAgBA;wCAAgB/F,QAAQF;;;;0CAE/D,qBAAC7I;gCAAIC,WAAW3B,QAAQmI,WAAW;;kDAC/B,oBAAC9I,yBAAUA;wCACPkE,UAAS;wCACTD,YAAY;wCACZkP,aAAY;wCACZhP,OAAO,CAACf,QAAUA,MAAMgB,OAAO,CAACC,SAAS,CAAC8E,aAAa;kDACtDpF,EAAEqP,UAAU;;kDAEjB,oBAACpT,yBAAUA;wCACPkE,UAAS;wCACTD,YAAY;wCACZkP,aAAY;wCACZhP,OAAO,CAACf,QAAUA,MAAMgB,OAAO,CAACC,SAAS,CAAC4E,IAAI;kDAC7ClF,EAAEsP,YAAY;;oCAElBhI,mBAAmB+C,4BAChB,oBAACrI,oDAAsBA;wCACnBuN,UAAUnJ;wCACV+E,UAAU9E;wCACVzD,0BAA0B0D;wCAC1BU,eAAelD,uBAAQA,CAACiD,MAAM,CAACC,aAAa;wCAC5CwI,UAAU;wCACVC,iBAAgB;wCAChBC,UAAU/M,wBAAQA,CAACyH,WAAW;kDAC9B,kCAACvL,0BAAU;4CACPqP,SAAQ;4CACR1Q,SAASoC,8CAA4BA;4CACrCrB,WAAW3B,QAAQqI,QAAQ;4CAC3B2K,IAAI;gDAAEpL,QAAQ;4CAAU;;uDAIhC,oBAACrD,mBAAIA;wCACD5C,WAAW3B,QAAQ2H,WAAW;wCAC9BsL,MAAK;wCACLC,QAAO;wCACPC,KAAI;kDACJ,kCAAClR,6BAAa;4CAACN,WAAW3B,QAAQuI,WAAW;4CAAEvE,MAAM;;;;;;;kCAKrE,oBAACtC;wBAAIC,WAAW3B,QAAQoI,IAAI;kCACxB,kCAAC9D,0BAAUA;4BAACqF,OAAOwD;sCACf,kCAAChH,uBAAWA;gCAACmL,SAAQ;gCAAOlE,UAAUA;gCAAUiG,cAAW;0CACtDjL,KAAKmE,GAAG,CAAC,CAACe,oBACP,oBAAC9I,kBAAGA;wCAAcyH,OAAOqB,IAAIrB,KAAK;wCAAEtC,OAAO2D,IAAIJ,EAAE;uCAAvCI,IAAIJ,EAAE;;;;;iBAMpC;0BACJ,oBAACxL;gBAAIC,WAAW3B,QAAQgI,OAAO;0BAAGqG;;;;AAG9C;;;;;;;;;;;;;;;;;;ACzgBsC;AACK;AACM;AACY;AAE7D,MAAM7L,YAAYL,mEAAUA,GAAG,CAACM,QAAW;QACvCb,MAAM;YACF2R,WAAW;YACX7Q,SAAS;YACToB,gBAAgB;YAChB0D,YAAY;YACZ1E,cAAc;YACd0Q,aAAa/Q,MAAMG,OAAO,CAAC;YAC3B6Q,cAAchR,MAAMG,OAAO,CAAC;YAC5BY,OAAOf,MAAMgB,OAAO,CAACiQ,IAAI,CAACC,OAAO;YACjC/L,QAAQ;YACRgM,iBAAiBnR,MAAMgB,OAAO,CAACC,SAAS,CAAC0D,IAAI;QACjD;QACAyM,SAAS;YACL9Q,OAAO;YACP+Q,QAAQ;YACRC,YAAY;QAChB;QACA/R,MAAM;YACFwB,OAAOf,MAAMgB,OAAO,CAACiQ,IAAI,CAACM,UAAU;QACxC;QACAN,MAAM;YACFlQ,OAAOf,MAAMgB,OAAO,CAACiQ,IAAI,CAACM,UAAU;QACxC;IACJ;AAOO,SAASC,gBAAgBrU,KAA2B;IACvD,MAAM,EAAEgB,OAAO,EAAE,GAAGhB;IACpB,MAAMwD,IAAIkQ,mFAAcA;IACxB,MAAM,EAAEtT,OAAO,EAAE,GAAGwC,UAAUuG,WAAW;QAAEnJ;IAAM;IAEjD,qBACI,wDAAC8B;QAAIC,WAAW3B,QAAQ4B,IAAI;QAAEhB,SAASA;QAASsT,MAAK;;0BACjD,uDAACjS,kDAAY;gBAACN,WAAW3B,QAAQgC,IAAI;gBAAEgC,MAAM;;0BAC7C,wDAAC3B,8DAAKA;gBAACK,SAAQ;gBAAcC,KAAK;;kCAC9B,uDAACtD,8DAAUA;wBAAC+U,OAAO;4BAAEL,YAAY;wBAAE;wBAAGpS,WAAW3B,QAAQ0T,IAAI;kCACxDtQ,EAAEiR,UAAU;;oBAEhBzU,MAAM0U,WAAW,iBAAG,uDAACrS,wDAAkB;wBAACN,WAAW3B,QAAQ6T,OAAO;yBAAO;;;;;AAI1F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpD2C;AACK;AACJ;AAE5C,MAAMrR,YAAYL,gCAAUA,GAAG,CAACM,QAAW;QACvCb,MAAM;YACF6S,UAAU;QACd;QACApN,WAAW;YACPqN,WAAW;YACXC,YAAY;YACZ7R,cAAc;YACdJ,SAAS;YACToB,gBAAgB;YAChB0D,YAAY;YACZyJ,YAAY;YACZ2D,QAAQ;QACZ;IACJ;AAaO,SAASC,cAAcjV,KAAyB;IACnD,MAAM,EAAEI,OAAO,EAAE,GAAGwC;IACpB,MAAM,EAAEsS,MAAM,EAAEC,WAAW,EAAExR,QAAQ,EAAEmQ,IAAI,EAAE3Q,KAAK,EAAEmK,EAAE,EAAE8H,KAAK,EAAEC,aAAa,IAAI,EAAEC,aAAa,CAAC,EAAE,GAAGtV;IAErG,MAAMuV,aAAaF,aAAalS,QAAQmS,aAAanS,QAAQ;IAC7D,MAAMqS,IAAID,aAAa;IACvB,MAAME,SAASD,IAAIL,cAAcxR,WAAW;IAC5C,MAAM+R,KAAKF,IAAIC;IACf,MAAME,KAAKH;IACX,MAAMI,KAAKJ,IAAIC;IAEf,MAAMI,wBACF,qBAACC;QAAI/T,WAAW3B,QAAQ4B,IAAI;QAAEmB,OAAM;QAAO+Q,QAAO;QAAO6B,SAAS,CAAC,IAAI,EAAER,WAAW,CAAC,EAAEA,WAAW,CAAC;QAAEjI,IAAIA;;0BACrG,qBAAC0I;;kCACG,oBAACC;wBACG3I,IAAI,CAAC,EAAEA,GAAG,UAAU,CAAC;wBACrB4I,MAAK;wBACLhB,QAAO;wBACPC,aAAY;wBACZ1J,GAAG,CAAC,CAAC,EAAEiK,GAAG,CAAC,EAAEC,GAAG,EAAE,EAAEF,OAAO,CAAC,EAAEA,OAAO,OAAO,EAAEG,GAAG,CAAC,EAAED,GAAG,CAAC;;kCAE5D,oBAACM;wBACG3I,IAAI,CAAC,EAAEA,GAAG,WAAW,CAAC;wBACtB4I,MAAK;wBACLhB,QAAO;wBACPC,aAAY;wBACZ1J,GAAG,CAAC,CAAC,EAAEiK,GAAG,CAAC,EAAEC,GAAG,EAAE,EAAEF,OAAO,CAAC,EAAEA,OAAO,OAAO,EAAEG,GAAG,CAAC,EAAED,GAAG,CAAC;;kCAE5D,qBAACQ;wBAAe7I,IAAI,CAAC,EAAEA,GAAG,SAAS,CAAC;wBAAEoI,IAAG;wBAAKC,IAAG;wBAAKC,IAAG;wBAAOQ,IAAG;;0CAC/D,oBAACC;gCAAKC,QAAO;gCAAKC,WAAU;;0CAC5B,oBAACF;gCAAKC,QAAO;gCAAMC,WAAU;;0CAC7B,oBAACF;gCAAKC,QAAO;gCAAMC,WAAU;;0CAC7B,oBAACF;gCAAKC,QAAO;gCAAMC,WAAU;;0CAC7B,oBAACF;gCAAKC,QAAO;gCAAMC,WAAU;;0CAC7B,oBAACF;gCAAKC,QAAO;gCAAOC,WAAU;;;;;;0BAItC,qBAACC;;kCACG,oBAACC;wBACGC,IAAIlB;wBACJmB,IAAInB;wBACJoB,GAAGpB,IAAIL,cAAc,IAAI;wBACzBe,MAAK;wBACLhB,QAAQA;wBACRC,aAAaA;;kCAEjB,oBAAC0B;wBACGvJ,IAAI,CAAC,EAAEA,GAAG,QAAQ,CAAC;wBACnBpB,GAAE;wBACFU,GAAE;wBACFzJ,OAAM;wBACN+Q,QAAO;wBACP4C,cAAcC,UAAUC,SAAS,CAACC,QAAQ,CAAC,aAAa,KAAK;kCAC7D,kCAACR;4BAAOC,IAAIlB;4BAAGmB,IAAInB;4BAAGoB,GAAGpB;4BAAGU,MAAM,CAAC,KAAK,EAAE5I,GAAG,UAAU,CAAC;sCACpD,kCAAC4J;gCACGC,eAAc;gCACd7W,MAAK;gCACL8W,eAAc;gCACdC,KAAI;gCACJC,aAAY;gCACZC,MAAM,CAAC,EAAE,EAAE/B,EAAE,CAAC,EAAEA,EAAE,CAAC;gCACnBgC,IAAI,CAAC,IAAI,EAAEhC,EAAE,CAAC,EAAEA,EAAE,CAAC;;;;kCAI/B,oBAACgB;kCACG,kCAAC1C;4BAAK5H,GAAE;4BAAKuL,YAAW;4BAASvB,MAAM,CAAC,KAAK,EAAE5I,GAAG,SAAS,CAAC;4BAAEoK,YAAW;sCACrE,kCAACC;gCAASC,WAAW,CAAC,CAAC,EAAEtK,GAAG,UAAU,CAAC;gCAAEuK,aAAY;gCAAMC,QAAO;0CAC9D,kCAACC;oCAAMrU,YAAW;oCAAOC,UAAUA;8CAC9BmQ;;;;;kCAKjB,oBAACA;wBACG5H,GAAE;wBACFuL,YAAW;wBACXvB,MAAMtW,0BAASA,CAACoY,UAAU,GAAG,iBAAiB,CAAC,KAAK,EAAE1K,GAAG,SAAS,CAAC;wBACnEoK,YAAW;kCACX,kCAACC;4BAASC,WAAW,CAAC,CAAC,EAAEtK,GAAG,WAAW,CAAC;4BAAEuK,aAAY;4BAAMC,QAAO;sCAC/D,kCAACC;gCAAMrU,YAAW;gCAAOC,UAAUA;gCAAUsU,IAAG;0CAC3C7C;;;;;;;;IAQzB,OAAOC,2BACH,oBAACT,4BAAUA;QAACU,YAAYA;kBAAaO;uBAErC,oBAAC/T;QAAIC,WAAW3B,QAAQqH,SAAS;kBAAGoO;;AAE5C;;;;;;AC9HoD;AACT;AACP;AAEuB;AACT;AACW;AAE7D,MAAMjT,kBAASA,GAAGL,gCAAUA,GAAG,CAACM,QAAW;QACvCb,MAAM;YACFc,SAAS;YACToB,gBAAgB;YAChB0D,YAAY;QAChB;IACJ;AAUO,SAASyQ,SAASrY,KAAoB;IACzC,MAAM,EAAEsY,OAAO,EAAElU,OAAO,GAAG,EAAEiR,UAAU,EAAEC,UAAU,EAAE,GAAGtV;IACxD,MAAM,EAAEI,OAAO,EAAE,GAAGwC,kBAASA,CAACuG,WAAW;QAAEnJ;IAAM;IACjD,MAAMwD,IAAIkQ,wCAAcA;IAExB,IAAI,CAAC4E,SACD,qBACI,oBAACxW;QAAIC,WAAW3B,QAAQ4B,IAAI;kBACxB,kCAACiT,aAAaA;YACV3H,IAAG;YACHnK,OAAOiB;YACP+Q,aAAa;YACbD,QAAO;YACPG,YAAYA;YACZC,YAAYA;YACZ3R,UAAU;YACVmQ,MAAMtQ,EAAEyG,OAAO;YACfmL,OAAM;;;IAItB,qBACI,oBAACtT;QACGC,WAAW3B,QAAQ4B,IAAI;QACvBhB,SAAS,CAACuX;YACNA,EAAEzG,cAAc;YAChB,IAAI,CAACwG,QAAQE,SAAS,EAAE;YACxBN,iCAAUA,CAACI,QAAQE,SAAS;QAChC;kBACA,kCAAC7T,mBAAIA;YAAC0O,MAAMiF,SAASE,aAAa;YAAIlF,QAAO;YAASC,KAAI;sBACtD,kCAAC0B,aAAaA;gBACV3H,IAAG;gBACHnK,OAAOiB;gBACP+Q,aAAa;gBACbD,QAAO;gBACPG,YAAYA;gBACZC,YAAYA;gBACZ3R,UAAU;gBACVmQ,MAAMsE,4BAAUA,CAACE,QAAQvH,IAAI,IAAI,IAAIuH,QAAQG,OAAO;gBACpDrD,OAAO+C,6BAAWA,CAACG,QAAQI,MAAM,IAAI,KAAKJ,QAAQK,MAAM,IAAI;;;;AAKhF;;;;;;;;;;;;;;;;;;;;ACpE2C;AACH;AAEI;AAEY;AACF;AACH;AAWnD,MAAM/V,YAAYL,mEAAUA,GAAG,IAAO;QAClCP,MAAM;YACF+W,WAAW;QACf;IACJ;AAEO,SAASC,iBAAiBhZ,KAA4B;IACzD,MAAM,EAAE6K,MAAM,EAAEoO,QAAQ,EAAE9V,KAAK,EAAE+Q,MAAM,EAAEgF,OAAO,EAAE,GAAGlZ;IACrD,MAAM,EAAEiK,OAAO,EAAEF,OAAOoP,OAAO,EAAE,GAAGL,4EAAwBA,CAACjO,QAAQoO,UAAU,IAAIC;IAEnF,MAAM,CAACE,QAAQC,UAAU,GAAG9Z,+CAAQA;IACpC,MAAM,CAAC+Z,WAAWC,aAAa,GAAGha,+CAAQA,CAAC0Z;IAC3C,MAAM,EAAE7Y,OAAO,EAAE,GAAGwC,UAAUuG,WAAW;QAAEnJ;IAAM;IAEjD,MAAMwZ,WAAW,CAAC3X;QACd,IAAI,CAACA,KAAKiK,OAAO,IAAI,CAACjK,KAAK4W,OAAO,EAAE;YAChCY,UAAUlQ;YACV;QACJ;QACAkQ,UAAUxX;QACV0X,aAAa1X,KAAKoX,QAAQ;IAC9B;IAEA3Z,gDAASA,CAAC;QACNia,aAAaN;IACjB,GAAG;QAACA;KAAS;IAEb3Z,gDAASA,CAAC;QACN+Z,UAAUF;IACd,GAAG;QAACA;KAAQ;IAEZ7Z,gDAASA,CAAC,IAAMI,uEAAYA,CAACkB,MAAM,CAAC6Y,wBAAwB,CAAC7X,EAAE,CAAC,CAACC,OAAS2X,SAAS3X,QAAwB,EAAE;IAE7G,IAAI,CAACuX,UAAU,CAACH,YAAYG,OAAOH,QAAQ,KAAKK,WAAW,OAAO;IAElE,OAAOrP,wBACH,uDAAC4O,gEAAWA;QAACzU,MAAMjB;uBAEnB,uDAACyR,+DAAUA;QACPzR,OAAOA;QACP+Q,QAAQA;QACRwF,QAAQ1Z,MAAM2Z,UAAU,KAAKf,0DAAUA,CAACgB,MAAM,GAAG,QAAQ;QACzDxZ,SAAS;YAAE4B,MAAM5B,QAAQ4B,IAAI;QAAC;;AAG1C;;;;;;;;;;;;;;;;AC/DsD;AAG/C,MAAM8X,yBAAoCD,mEAAS,CAAC;;;;;;;;;;;;;;;;;;;;;AAqB3D,CAAC;AAQD,MAAMjX,YAAYL,mEAAUA,GAAe,CAACM,OAAO,EAAEM,KAAK,EAAE+Q,MAAM,EAAEwF,SAAS,MAAM,EAAEtV,OAAO,CAAC,EAAE,GAAM;QACjGpC,MAAM;YACF+X,WAAW,CAAC,EAAED,uBAAuB,mBAAmB,CAAC;YACzD3W;YACA+Q;YACAY,WAAW;YACXC,YAAY;YACZ7R,cAAcwW;YACd5W,SAAS;YACToB,gBAAgB;YAChB0D,YAAY;YACZyJ,YAAY;YACZ2D,QAAQ,CAAC,EAAE5Q,KAAK,gBAAgB,CAAC;QACrC;IACJ;AASO,SAASwQ,WAAW5U,KAAsB;IAC7C,MAAM,EAAEI,OAAO,EAAE,GAAGwC,UAChB;QACIO,OAAOnD,MAAMmD,KAAK;QAClB+Q,QAAQlU,MAAMkU,MAAM;QACpBwF,QAAQ1Z,MAAM0Z,MAAM;QACpBtV,MAAMpE,MAAMsV,UAAU;IAC1B,GACA;QAAEtV;IAAM;IAGZ,qBAAO,uDAAC8B;QAAIC,WAAW3B,QAAQ4B,IAAI;kBAAGhC,MAAMG,QAAQ;;AACxD;;;;;;;;;;;;;;;ACnEmC;AACkB;AACuB;AACrB;AAGhD,SAASga,eAAetN,QAA0B;IACrD,OAAOxN,kDAAWA,CACd,OAAOwL,QAAgBgC,UAA2BuN,SAAiBC;QAC/D,MAAMC,iBAAiBN,0EAAWA,CAACO,eAAe,CAC9C,CAAC,EAAEL,uEAAkBA,CAAC,CAAC,EAAEG,WAAWJ,0EAAeA,CAACO,OAAO,CAAC,CAAC;QAEjE,IAAI,CAACF,gBAAgB;QAErB,MAAMG,WAAY,MAAMH,eAAeI,GAAG,CAAmB7P,QAAQ8P,KAAK,CAAC,IAAO,EAAC;QAInF,MAAML,eAAeM,GAAG,CAAmB/P,QAAQ;YAC/C,GAAG4P,QAAQ;YACX,CAAC5N,SAAS,EAAEuN;YACZ,CAACvP,OAAO,EAAE;gBAAEiB,SAASsO;gBAASS,iBAAiBhO;YAAS;QAC5D;IACJ,GACA,EAAE;AAEV;;;;;;;;;;;;;;;;;AC1BmC;AACkB;AAC4D;AACrE;AAEI;AAEzC,SAASoO,qBAAqBpO,QAAyB;IAC1D,MAAMqO,cAAcf,kEAAcA;IAElC,OAAO9a,kDAAWA,CACd,OAAOwL,QAAgBiB,SAAiBqP;QACpC,MAAMC,gBAAgBpB,0EAAWA,CAACqB,oBAAoB,CAClD,CAAC,EAAEL,gEAAWA,CAAC,CAAC,EAAE,CAACD,2EAAWA,MAAMd,0EAAeA,CAACO,OAAO,EAAEc,OAAO,CAAC,QAAQ,IAAI,CAAC,EAClFxP;QAEJ,IAAI;YACA,MAAMsP,cAAcR,GAAG,GAAG/P,QAAQsQ;YAClC,MAAMD,YAAYC,IAAItQ,MAAM,EAAEgC,UAAUf,SAASgP,sFAAsBA;YACvE,OAAOK;QACX,EAAE,OAAM;YACJ;QACJ;IACJ,GACA;QAACI;QAASL;KAAY;AAE9B;;;;;;;;;;;;;;;AC1BmC;AACkB;AACuB;AACxB;AAG7C,SAASO;IACZ,OAAOpc,kDAAWA,CAAC,OAAOqc,MAAuB7Q;QAC7C,IAAIA,WAAW,YAAY;QAE3B,IAAI8Q,WAAWC;QACf,IAAI;YACA,MAAMC,UAAU,MAAM7B,0EAAWA,CAACO,eAAe,CAAC,CAAC,EAAEL,uEAAkBA,CAAC,CAAC,EAAEwB,KAAK,CAAC,EAAEhB,GAAG,CAAC7P;YACvF8Q,YAAaE,WAAW,CAAC;YACzBD,YAAaC,WAAW,CAAC;QAC7B,EAAE,OAAM;YACJF,YAAY,CAAC;YACbC,YAAY,CAAC;QACjB;QAEA,IAAIA,SAAS,CAAC/Q,OAAO,EAAE,OAAO+Q,SAAS,CAAC/Q,OAAO;QAC/C,IAAI+Q,SAAS,CAACJ,0EAAeA,CAACM,UAAU,CAAC,EACrC,OAAO;YACHhQ,SAAS8P,SAAS,CAACJ,0EAAeA,CAACM,UAAU,CAAC;YAC9CjB,iBAAiBW,0EAAeA,CAACM,UAAU;QAC/C;QAEJ,uBAAuB;QACvB,IAAIH,UAAU7P,OAAO,EAAE,OAAO6P;QAE9B;IACJ,GAAG,EAAE;AACT;;;;;;;;;;;;;;;;;;;;;;;;;AChCmC;AACkB;AACN;AAGxC,SAASK;IACZ,OAAO3c,qBAAWA,CACd,OAAOwL,QAAgBiB;QACnB,MAAMsP,gBAAgBpB,yBAAWA,CAACqB,oBAAoB,CAACU,4BAAUA,EAAEjQ;QACnE,OAAOsP,cAAcV,GAAG,GAAqB7P;IACjD,GACA;QAAC0Q;KAAQ;AAEjB;;;ACbmC;AACkB;AAI9C,SAASU;IACZ,OAAO5c,qBAAWA,CAAC,OAAOwL,QAAgBiB,SAAiBoQ;QACvD,MAAMC,cAAcnC,yBAAWA,CAACoC,iBAAiB,CAACtQ;QAClD,MAAMuQ,SAAS,MAAMF,YAAYzB,GAAG,CAA6BwB;QACjE,IAAIG,QAAQ,OAAOA,MAAM,CAACxR,OAAO,CAACsQ,GAAG;QAErC,OAAQ,OAAMgB,YAAYzB,GAAG,CAAa,OAAM,GAAIS;IACxD,GAAG,EAAE;AACT;;;ACbmC;AACkB;AACuB;AAC1B;AACkC;AACH;AAExB;AAElD,SAASoB;IACZ,MAAMC,sBAAsBP,uBAAuBA;IACnD,MAAMQ,0BAA0BT,0BAA0BA;IAC1D,MAAMU,aAAajB,sCAAaA;IAChC,OAAOpc,qBAAWA,CACd,OAAOwL,QAAiBwP,SAA2B6B;QAC/C,IAAI,CAACrR,UAAU,CAACwP,WAAW,CAAC6B,KAAK;QACjC,MAAM5B,iBAAiB,MAAMoC,WAAWrC,SAASxP;QACjD,IAAI,CAACyP,gBAAgBxO,SAAS;QAC9B,IAAIwO,gBAAgBO,mBAAmBP,eAAeO,eAAe,KAAKW,+BAAeA,CAACM,UAAU,EAAE;YAClG,OAAO9B,yBAAWA,CAACO,eAAe,CAAC,CAAC,EAAE+B,6CAA2BA,CAAC,CAAC,EAAEjC,QAAQ,CAAC,EAAEK,GAAG,CAC/E7P;QAER;QACA,MAAM8R,OAAO,MAAMF,wBAAwB5R,QAAQyP,eAAexO,OAAO;QACzE,IAAI6Q,MAAM,OAAOA;QACjB,OAAOH,oBAAoB3R,QAAQyP,eAAexO,OAAO,EAAEoQ;IAC/D,GACA;QAACO;QAAyBC;QAAYnB;QAASiB;KAAoB;AAE3E;;;;;;;;;;;;;;;;;;;AC7ByC;AACS;AACqC;AAChB;AACjB;AAI/C,SAASW,OACZ/C,OAAe,EACftO,OAAgB,EAChB2M,OAAgB,EAChB5L,WAA4B2O,0EAAeA,CAACM,UAAU,EACtDsB,UAAmBP,uEAAOA,CAACQ,OAAO,EAClCC,YAAqB;IAErB,MAAMC,SAASP,gFAAaA,CAACnQ;IAC7B,MAAM2Q,MAAMT,6EAAUA,CAAClQ,UAAU;QAC7BuQ;QACAhD;IACJ;IACA,MAAMqD,OAAOX,oFAAiBA,CAACjQ,UAAU;QACrCuQ;QACAhD;IACJ;IACA,OAAOwC,8DAAaA,CAAC;QACjB,IAAI,CAAC9Q,WAAW,CAAC2M,SAAS;QAC1B,MAAMiF,aAAa,MAAMC,QAAQD,UAAU,CAAC;YACxCD,KAAKG,mBAAmB,CAAC9R,SAAS2M;YAClC+E,IAAIK,mBAAmB,CAAC/R,SAAS2M,SAAS;gBACtC2E;gBACAhD,SAASkD;YACb;SACH;QAED,MAAM,CAACQ,OAAOC,MAAM,GAAGL,WAAW/Q,GAAG,CAAC,CAACT,IAAOA,EAAE8R,MAAM,KAAK,cAAc9R,EAAEnC,KAAK,GAAGZ;QAKnF,MAAM8U,WAAWF,OAAOE,YAAYH,OAAOG;QAC3C,MAAMvF,SAASqF,OAAOG,eAChBjB,iFAAaA,CAACc,MAAMG,YAAY,CAACxF,MAAM,EAAEqF,MAAMG,YAAY,CAACJ,KAAK,CAACK,QAAQ,IAC1EJ,OAAO3I,OAAO,CAAC8H,6EAAYA,CAACkB,GAAG,CAAC,IAAI;QAC1C,MAAMrN,OAAOkN,UAAUlN,QAAQ;QAC/B,MAAMsN,WAAWJ,UAAUI;QAC3B,MAAM7F,YAAYuF,OAAOO,QAAQf,OAAOgB,gBAAgB,CAACC,oBAAoB,CAACpB,SAAStR,SAAS2M;QAEhG,OAAO;YACHC;YACA3H;YACA4H,QAAQoF,OAAOG,eAAeH,MAAMG,YAAY,CAACJ,KAAK,CAACnF,MAAM,GAAG;YAChE8F,OAAOJ;YACPK,OAAOZ,OAAOa,WAAWZ,OAAOW,OAAO5S,WAAWiS,OAAOY;YACzD,2CAA2C;YAC3CC,MAAMd,QAAQ3U,YAAY4U,OAAOc,YAAYD;YAC7CpG;YACAC;QACJ;IACJ,GAAG;QAACgF;QAAMD;QAAKD;QAAQzR;QAAS2M;QAAS2E;QAASE;KAAa;AACnE;;;;;;;;;;;;;;;;;;;;;AC5DoC;AACK;AAOZ;AACqB;AACD;AAGK;AACE;AAExD,MAAM0B,QAAQ,IAAIF,wDAAQA,CAA2B;IACjDG,KAAK;IACLC,KAAK,KAAK;AACd;AAQO,SAASC,oBAAoBtU,MAAc,EAAEoO,QAAgB,EAAEmG,OAAe,EAAElG,OAAsB;IACzG,MAAMmG,eAAe9C,6EAAeA;IAEpC,OAAOK,8DAAaA,CAAC;QACjB,IAAI,CAAC/R,QAAQ;QACb,MAAMqR,MAAM,CAAC,EAAErR,OAAO,CAAC,EAAEkQ,2EAAWA,GAAG,CAAC;QACxC,IAAI,CAACiE,MAAMM,GAAG,CAACpD,MAAM;YACjB,MAAMqD,YAAY,MAAMC,qBAAqB3U,QAAQqO,SAASD,UAAUmG,SAASC;YACjF,IAAIE,WAAWP,MAAMpE,GAAG,CAACsB,KAAKqD;QAClC;QACA,OAAOP,MAAMtE,GAAG,CAACwB;IACrB,GAAG;QAACrR;QAAQuU;QAASlG;QAASmG;QAAcpG;KAAS;AACzD;AAEA,eAAeuG,qBACX3U,MAAc,EACdqR,GAAkB,EAClBjD,QAAgB,EAChBmG,OAAe,EACfK,EAAgB;IAEhB,MAAMC,wBAAwB,MAAMX,+EAAoBA,CAAClU,QAAQoO,UAAUmG;IAC3E,IAAIM,uBAAuB,OAAOA;IAClC,MAAMC,WAAW7E,sFAAsBA;IACvC,IAAI,CAAC6E,UAAU;IACf,MAAMC,aAAa,MAAMH,GAAG5U,QAAQ8U,UAAUzD;IAC9C,IAAI,CAAC0D,YAAY;IACjB,IAAI3G,YAAYA,aAAa2G,WAAW3G,QAAQ,EAAE;IAClD,IAAI2G,WAAWC,QAAQ,KAAKrE,0EAAeA,CAACsE,aAAa,EAAE;QACvD,OAAO;YAAEC,UAAU;YAAIC,UAAU;YAAI,GAAGJ,UAAU;YAAE9T,SAAS8T,WAAWnH,OAAO;QAAC;IACpF;IACA,OAAO;QAAEsH,UAAU;QAAIC,UAAU;QAAIH,UAAUrE,0EAAeA,CAACM,UAAU;QAAEsB,SAASP,uEAAOA,CAACQ,OAAO;QAAE,GAAGuC,UAAU;IAAC;AACvH;AAEO,SAAS9G,yBAAyBjO,MAAc,EAAEoO,QAAgB,EAAEmG,OAAe,EAAElG,OAAsB;IAC9G,MAAMmG,eAAe9C,6EAAeA;IAEpC,OAAOK,8DAAaA,CAAC;QACjB,IAAI,CAAC/R,QAAQ;QACb,MAAMqR,MAAM,CAAC,EAAErR,OAAO,CAAC,EAAEkQ,2EAAWA,GAAG,CAAC;QACxC,IAAI,CAACiE,MAAMM,GAAG,CAACpD,MAAM;YACjB,MAAMqD,YAAY,MAAMC,qBAAqB3U,QAAQqO,SAASD,UAAUmG,SAASC;YACjF,IAAIE,WAAWP,MAAMpE,GAAG,CAACsB,KAAKqD;QAClC;QACA,MAAMU,WAAWjB,MAAMtE,GAAG,CAACwB;QAC3B,IAAI,CAAC+D,YAAYrgB,oEAASA,CAACqB,eAAe,EAAE;YACxC,MAAMka,MAAM,MAAMX,sEAAOA,CAAC0F,mBAAmB,CAACrV;YAC9C,IAAIsQ,KACA,kBAAkB;YAClB,OAAO;gBACHrP,SAASqP,IAAIrP,OAAO;gBACpB2M,SAAS0C,IAAIgF,QAAQ;gBACrBtV;gBACAoO;gBACA4G,UAAUrE,0EAAeA,CAACM,UAAU;gBACpCsB,SAASP,uEAAOA,CAACQ,OAAO;YAC5B;QACR;QACA,OAAO4C;IACX,GAAG;QAACpV;QAAQuU;QAASlG;QAASmG;QAAcpG;KAAS;AACzD;;;;;;;;;;;;;;ACvFyC;AACS;AACsB;AAEjE,SAASmH,UAAUvV,MAAe;IACrC,MAAM6R,aAAajB,yEAAaA;IAChC,OAAOmB,8DAAaA,CAAC;QACjB,IAAI,CAAC/R,QAAQ;QACb,OAAO6R,WAAW3B,2EAAWA,IAAuBlQ;IACxD,GAAG;QAACA;QAAQ6R;KAAW;AAC3B;;;;;;;;;;;;;;ACVA,cAAc;AACd,kBAAkB,GACiD;AACI;AAMvE,SAAS8D,YAAYC,SAA+B;IAChD,SAASC,OAAOxE,GAAW;QACvB,MAAMnS,QAAQ0W,UAAUvE;QACxByE,OAAOC,cAAc,CAACnZ,WAAWyU,KAAK;YAAEnS;YAAO8W,cAAc;QAAK;QAClE,OAAO9W;IACX;IACA,MAAMtC,YAAY;QACdqZ,WAAW,IAAIC,MAAM;YAAED,WAAW;QAAK,GAAG;YACtCpG,KAAIjI,CAAC,EAAEyJ,GAAG;gBACN,IAAI,OAAOA,QAAQ,UACf,OAAO/S;gBACX,OAAOuX,OAAOxE;YAClB;QACJ;IACJ;IACA,OAAO,IAAI6E,MAAMtZ,WAAW;QACxBuZ,gBAAgB,IAAM;QACtBC,gBAAgB,CAACxO,GAAGyO,IAAMA,MAAM;QAChCC,0BAA0B,CAAC1O,GAAGyJ;YAC1B,IAAI,OAAOA,QAAQ,UACf,OAAO/S;YACX,IAAI,CAAE+S,CAAAA,OAAOzU,SAAQ,GACjBiZ,OAAOxE;YACX,OAAOyE,OAAOQ,wBAAwB,CAAC1Z,WAAWyU;QACtD;IACJ;AACJ;AACO,SAASxI,iBACZ;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;MAEE,GAEF;;;;MAIE;IAIF,MAAM,EAAElQ,CAAC,EAAE,GAAG8c,uEAAcA,CAAC;IAAwB,OAAOhc,8CAAOA,CAAC,IAAMkc,YAAY,CAACtE,MAAQ1Y,EAAE4d,IAAI,CAAC,MAAMlF,OAAO;QAAC1Y;KAAE;AAAG;AAC7H,SAAS6d,gBAAgBC,OAAe;IACpC,OAAO,CAACthB,QAAUqgB,cAAcE,OAAO;YAAEe;YAASC,IAAI;YAAuBC,gBAAgB;YAAM,GAAGxhB,KAAK;QAAC;AAChH;AACO,MAAMyhB,cACT;;MAEE,GAIF;;MAEE,GAIF,WAAW,GAAGjB,gDAAAA,YAAYa,gBAAgBA,EAAAA,CAAC;;;;;;;;;;;;ICxNxC;UAAKK,QAAQ;IAARA,SACRC,gBAAa;IADLD,SAERE,SAAM;GAFEF,aAAAA;IAUL;UAAK9I,UAAU;IAAVA,WACRgB,YAAS;IADDhB,WAERiJ,UAAO;IAFCjJ,WAGRkJ,YAAS;IAHDlJ,WAIRmJ,aAAU;GAJFnJ,eAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEZ,SAASoJ,oBAAoBC,GAAqB,EAAE9e,KAAa,EAAE+Q,MAAc;IAC7E,OAAO,IAAIyJ,QAAqB,CAACuE;QAC7B,MAAMC,SAAS5gB,SAAS8e,aAAa,CAAC;QACtC,MAAM+B,UAAUD,OAAOE,UAAU,CAAC;QAClC,MAAMC,IAAIL,IAAIM,YAAY;QAC1B,MAAMC,IAAIP,IAAIQ,aAAa;QAC3B,MAAMC,QAAQC,KAAKC,GAAG,CAACzf,QAAQmf,GAAGpO,SAASsO;QAC3CL,OAAOjO,MAAM,GAAGA;QAChBiO,OAAOhf,KAAK,GAAGA;QACfif,SAASS,aAAaH,OAAO,GAAG,GAAGA,OAAOP,OAAOhf,KAAK,GAAG,GAAGgf,OAAOjO,MAAM,GAAG;QAC5EkO,SAASU,UAAUb,KAAK,CAACK,IAAI,GAAG,CAACE,IAAI,GAAGF,GAAGE;QAC3CL,OAAOY,MAAM,CAAC,CAACxX,IAAM2W,QAAQ3W,IAAI;IACrC;AACJ;AAEA;;;;;CAKC,GACM,SAASyX,iBAAiBC,GAAW;IACxC,OAAO,IAAItF,QAAqB,CAACuE,SAASgB;QACtC,MAAMjB,MAAM1gB,SAAS8e,aAAa,CAAC;QACnC,MAAM8C,UAAU;YACZlB,IAAI9R,mBAAmB,CAAC,QAAQiT;YAChCnB,IAAI9R,mBAAmB,CAAC,SAAS+S;QACrC;QACA,MAAME,SAAS;YACX,IAAI;gBACAlB,QAAQ,MAAMF,oBAAoBC,KAAK,KAAK;YAChD,EAAE,OAAM,CAER,SADI,aAAa;YACP;gBACNkB;YACJ;QACJ;QACA,MAAME,UAAU;YACZH;YACAC;QACJ;QACAlB,IAAIqB,QAAQ,GAAG;QACfrB,IAAIsB,WAAW,GAAG;QAClBtB,IAAI/R,gBAAgB,CAAC,QAAQkT;QAC7BnB,IAAI/R,gBAAgB,CAAC,SAASmT;QAC9BpB,IAAIuB,GAAG,GAAGP;IACd;AACJ;AAEA;;;;;CAKC,GACM,eAAeQ,kBAAkBR,GAAW;IAC/C,MAAMS,WAAW,MAAMC,MAAMV,KAAK;QAC9BjE,OAAO;QACP4E,SAAS;YACLC,QAAQ;QACZ;IACJ;IACA,IAAIH,SAASI,EAAE,EAAE,OAAOJ,SAASK,IAAI;IACrC,OAAO;AACX;;;;;;;;;;;;;;;AChEyC;AACD;AAQN;AAC6E;AACnC;AAEjC;AACgB;AAEpD,eAAeU,SAAShG,KAAa;IACxC,MAAMsF,OAAO,MAAMS,UAAU/F;IAC7B,OAAQ,MAAMiG,aAAaX;AAC/B;AAEA,SAASW,aAAaX,IAAU;IAC5B,OAAO,IAAIpG,QAAQ,CAACuE,SAASzP;QACzB,MAAMkS,SAAS,IAAIC;QACnBD,OAAOE,SAAS,GAAG,IAAM3C,QAAQyC,OAAOtI,MAAM;QAC9CsI,OAAOG,aAAa,CAACf;IACzB;AACJ;AAEA,eAAegB,WAAW9B,GAAW;IACjC,MAAM+B,cAAcZ,0CAAqBA,CAACnB;IAC1C,IAAI,CAAC+B,aAAa,OAAOvB,iBAAiBA,CAACR;IAC3C,OAAOiB,oCAAYA,CACf;QACI,UAAYT,iBAAiBA,CAACR;QAC9B,UAAYD,gBAAgBA,CAACgC;QAC7B,UAAYvB,iBAAiBA,CAACuB;KACjC,EACD;AAER;AAEO,eAAeC,MAAMxG,KAAa;IACrC,MAAMyG,WAAWf,qCAAgBA,CAAC1F;IAClC,MAAMuG,cAAcX,uCAAkBA,CAAC5F;IACvC,MAAM0G,YAAY,MAAMJ,WAAWC,eAAevG;IAClD,OAAO,IAAId,QAAqB,CAACuE,SAASgB;QACtC,MAAMjB,MAAM,IAAImD;QAChB,MAAMjD,SAAS5gB,SAAS8e,aAAa,CAAC;QACtC,MAAMgF,MAAMlD,OAAOE,UAAU,CAAC;QAC9B,IAAI2B,yBAAMA,CAACqB,MAAM,MAAM,IAAIC,MAAM;QACjCrD,IAAI/R,gBAAgB,CAAC,QAAQ;YACxB,CAACiS,OAAOhf,KAAK,EAAEgf,OAAOjO,MAAM,CAAC,GAAG;gBAAC+N,IAAI9e,KAAK;gBAAE8e,IAAI/N,MAAM;aAAC;YACxDmR,IAAIvC,SAAS,CAACb,KAAK,GAAG,GAAGE,OAAOhf,KAAK,EAAEgf,OAAOjO,MAAM;YACpDiO,OAAOY,MAAM,CAAC,CAACgB;gBACX7B,QAAQ6B;YACZ,GAAG;QACP;QACA9B,IAAI/R,gBAAgB,CAAC,SAAS;YAC1BgT,OAAO,IAAIoC,MAAM;QACrB;QACArD,IAAIsD,YAAY,CAAC,eAAe;QAChC,IAAI,CAACL,YAAYC,WAAWlD,IAAIuB,GAAG,GAAGgC,IAAIC,eAAe,CAACN;aACrDlD,IAAIuB,GAAG,GAAG/E;IACnB;AACJ;AAEO,SAAStG,YAAYO,MAAc,EAAEC,MAAc;IACtD,MAAM+M,UAAU,IAAIzB,0BAASA,CAACvL,UAAU;IACxC,IAAIgN,QAAQC,MAAM,MAAMD,QAAQE,UAAU,CAAC,OAAO,OAAO;IACzD,IAAIF,QAAQE,UAAU,CAAC,IAAI,OAAO,CAAC,EAAEF,QAAQG,OAAO,CAAC,GAAG,CAAC,EAAElN,OAAO,CAAC;IACnE,IAAI+M,QAAQE,UAAU,CAAC,OAAO,OAAO,CAAC,EAAEF,QAAQG,OAAO,CAAC,GAAG,CAAC,EAAElN,OAAO,CAAC;IACtE,IAAI+M,QAAQE,UAAU,CAAC,UAAU,OAAO,CAAC,EAAEF,QAAQ5jB,GAAG,CAAC,SAAS+jB,OAAO,CAAC,GAAG,EAAE,EAAElN,OAAO,CAAC;IACvF,OAAO,CAAC,EAAE+M,QAAQ5jB,GAAG,CAAC,SAAS+jB,OAAO,CAAC,GAAG,EAAE,EAAElN,OAAO,CAAC;AAC1D;AAEO,SAASP,WAAWrH,IAAY,EAAE0H,OAAe;IACpD,OAAO1H,KAAKxC,MAAM,GAAG,KAAK,CAAC,EAAEwC,KAAK+U,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG/U;AAC1D;AAEO,SAASgV,cAAcpN,MAAc,EAAEF,OAAe;IACzD,MAAM1H,OAAO0H;IACb,OAAO1H,KAAKxC,MAAM,GAAG,KAAKwC,KAAK+U,KAAK,CAAC,GAAG,MAAM,QAAQ/U;AAC1D;AAEO,SAASiV,cAAcla,OAAe,EAAE1H,OAAO,CAAC;IACnD,IAAIA,SAAS,KAAKA,QAAQ,IAAI,OAAO0H;IACrC,OAAO,CAAC,EAAEA,QAAQga,KAAK,CAAC,GAAGnD,KAAK1D,GAAG,CAAC,GAAG,IAAI7a,OAAO,GAAG,EAAE0H,QAAQga,KAAK,CAAC,CAAC1hB,MAAM,CAAC;AACjF;AAEA,eAAe6hB,2BACX7G,OAAe,EACflR,QAAwB,EACxBrD,MAAc,EACdoO,QAAiB;IAEjB,MAAMyK,WAAW,MAAMY,mCAAqBA,CAAC4B,aAAa,CACtD9G,SACAlR,UACArD,OAAOsb,WAAW,IAClB5B,2BAASA;IAGb,IAAI,CAACtL,YAAYyK,SAAS0C,IAAI,IAAI,OAAO1C,SAAS3Z,KAAK;IACvD,IAAI2Z,SAAS0C,IAAI,MAAM1C,SAAS3Z,KAAK,EAAEkP,aAAaA,UAAU,OAAOyK,SAAS3Z,KAAK;IACnF;AACJ;AAEA;;CAEC,GAEM,MAAMsc,sBAAsB,CAAC/a,GAA0BC,GAA0BV;IACpF,IAAI,CAACA,QAAQ,OAAO;IAEpB,MAAMyb,MAAM7hB,uBAAKA,CAAC6G,EAAEib,MAAM,CAACxZ,MAAM,CAAC,CAACb,IAAMA,EAAEyC,QAAQ,KAAK9D,OAAOsb,WAAW;IAC1E,MAAMK,MAAM/hB,uBAAKA,CAAC8G,EAAEgb,MAAM,CAACxZ,MAAM,CAAC,CAACb,IAAMA,EAAEyC,QAAQ,KAAK9D,OAAOsb,WAAW;IAE1E,IAAI,CAACG,OAAO,CAACE,KAAK,OAAO;IACzB,IAAIF,IAAIG,eAAe,GAAGD,IAAIC,eAAe,EAAE,OAAO,CAAC;IACvD,OAAO;AACX,EAAC;AAEM,eAAe1H,qBAClBlU,MAAc,EACdoO,QAAgB,EAChBmG,OAAe;IAEf,MAAMlR,WAAW6M,4BAAWA,OAAOd,4BAAeA,CAACO,OAAO,GAAGtU,kCAAcA,CAACsU,OAAO,GAAGrR;IACtF,IAAI,CAAC+E,UAAU;IACf,MAAMwY,WAAW,MAAMjgB,yBAAWA,CAACkgB,iCAAiC,CAACzY,UAAUrD;IAE/E,IAAIuU,SAAS;QACT,MAAMwH,UAAUF,SAAS3Z,MAAM,CAAC,CAACb,IAAMA,EAAEkT,OAAO,CAAC+G,WAAW,OAAO/G,QAAQ+G,WAAW,KAAK,CAAC,EAAE;QAC9F,IAAIS,SAAS;YACT,OAAOX,2BAA2BW,QAAQxH,OAAO,EAAElR,UAAUrD,QAAQoO;QACzE;IACJ;IACA,KAAK,MAAM2N,WAAWF,SAASvZ,IAAI,CAAC,CAAC7B,GAAGC,IAAM8a,oBAAoB/a,GAAGC,GAAGV,SAAU;QAC9E,MAAMuO,SAAS,MAAM6M,2BAA2BW,QAAQxH,OAAO,EAAElR,UAAUrD,QAAQoO;QACnF,IAAIG,QAAQ,OAAOA;IACvB;IACA;AACJ;;;;;;;;;;;;AC/IiC;AAE1B,SAAStZ,kBAAkB+mB,OAAgC;IAC9DvnB,gDAASA,CAAC;QACN2Q,OAAOC,gBAAgB,CAAC,kBAAkB2W;QAC1C,OAAO,IAAM5W,OAAOE,mBAAmB,CAAC,kBAAkB0W;IAC9D,GAAG;QAACA;KAAQ;AAChB;;;;;;;;;;;;;;;;;;;;;;;ACPsC;AACsC;AACd;AAEM;AACD;AAChC;AACQ;AACe;AAE1D,MAAMjkB,YAAYL,mEAAUA,GAAG,CAACM;IAC5B,OAAO;QACHT,MAAM;YACFe,OAAO;YACP+Q,QAAQ;QACZ;QACAiT,WAAW;YACPrkB,SAAS;YACT8E,YAAY;QAChB;QACAwf,aAAa;YACTxU,aAAa,CAAC;YACd9P,SAAS;YACT8E,YAAY;QAChB;QACAyf,SAAS;YACLrf,QAAQ;YACRlF,SAAS;YACT8E,YAAY;QAChB;QACA0W,MAAM;YACF1a,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAACiQ,OAAO;YACtC5L,gBAAgB;QACpB;QACAmf,YAAY;YACRnT,YAAYtR,MAAMG,OAAO,CAAC;YAC1BY,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC0D,IAAI;QACvC;QACA+f,aAAa;YACTrkB,cAAc;QAClB;QACAskB,SAAS;YACLC,UAAU;QACd;IACJ;AACJ;IAEA;UAAKC,eAAe;IAAfA,gBACDC,cAAW;IADVD,gBAEDlN,aAAU;IAFTkN,gBAGDE,YAAS;GAHRF,oBAAAA;AAWL,SAASG,gBAAgB,EAAE3Z,QAAQ,EAAE5N,IAAI,EAAEH,QAAQ,EAAwB;IACvE,MAAM,EAAEC,OAAO,EAAE,GAAGwC;IACpB,MAAMY,IAAIb,0EAAcA;IACxB,qBACI,uDAACokB,sEAAiBA;QACd3mB,SAAS;YAAEonB,SAASpnB,QAAQonB,OAAO;QAAC;QACpCM,kBAAkB;QAClBznB,qBACI,uDAACZ,8DAAUA;YAACkE,UAAU;YAAI0N,YAAW;sBAChCyV,4EAAiBA,CAACiB,OAAO,KAAKznB,OACzBkD,EAAEwkB,0BAA0B,CAAC;gBACzB5F,SAASlU;YACb,KACA1K,EAAEykB,qBAAqB,CAAC;gBACpBC,QAAQ5nB,MAAMgb,QAAQ,KAAK,QAAQ;gBACnC8G,SAASlU;YACb;;QAGdia,KAAK;kBACJhoB;;AAGb;AAMO,SAASioB,aAAa,EAAExZ,aAAa,EAAExO,SAASioB,eAAe,EAAoB;IACtF,MAAM7kB,IAAIb,0EAAcA;IACxB,MAAM,EAAEvC,OAAO,EAAEsW,EAAE,EAAE7T,KAAK,EAAE,GAAGD,UAAUuG,WAAW;QAAEnJ,OAAO;YAAEI,SAASioB;QAAgB;IAAE;IAE1F,MAAM,EAAEC,qBAAqB,EAAE,GAAG1Z;IAClC,IAAI,CAAC0Z,uBAAuB/Z,QAAQ,OAAO;IAE3C,MAAMga,YACF1lB,MAAMgB,OAAO,CAAC2kB,IAAI,KAAK,UACjB;QACI1T,WAAW;QACX2T,gBAAgB;IACpB,IACAtf;IAEV,MAAMuf,cAAc;QAChB5B,4EAAiBA,CAAC6B,GAAG;QACrB7B,4EAAiBA,CAAC8B,QAAQ;QAC1B9B,4EAAiBA,CAAC+B,KAAK;QACvB/B,4EAAiBA,CAACgC,IAAI;QACtBhC,4EAAiBA,CAACiC,WAAW;QAC7BjC,4EAAiBA,CAACiB,OAAO;KAC5B,CAAC9b,IAAI,CAAC,CAACC,IAAMoc,sBAAsBrR,QAAQ,CAAC/K;IAC7C,MAAM8c,aAAaV,sBAAsBrR,QAAQ,CAAC6P,4EAAiBA,CAACmC,OAAO;IAE3E,MAAMC,gBAAgBxS,GAAGtW,QAAQknB,UAAU,EAAElnB,QAAQgC,IAAI;IACzD,MAAM+mB,iBAAiBzS,GAAGtW,QAAQknB,UAAU,EAAElnB,QAAQgC,IAAI,EAAEhC,QAAQmnB,WAAW;IAC/E,MAAM6B,UAAUnC,8DAAOA,CAAC;QACpB+B,aACM;YACI1K,MAAM0I,6FAAwBA,CAACF,4EAAiBA,CAACmC,OAAO;YACxD/a,UAAUwZ,gBAAgBE,MAAM;YAChCxlB,oBAAM,uDAACC,sDAAgB;gBAACN,WAAWmnB;gBAAe1U,OAAO;oBAAE,GAAG+T,SAAS;oBAAEplB,OAAO;oBAAI+Q,QAAQ;gBAAG;;QACnG,IACA;QACNwU,cACM;YACIxa,UAAUwZ,gBAAgBlN,OAAO;YACjCla,MAAMooB;YACNtmB,oBAAM,uDAACC,yDAAmB;gBAACN,WAAWonB;gBAAgB3U,OAAO+T;;QACjE,IACA;QACND,sBAAsBrR,QAAQ,CAAC6P,4EAAiBA,CAACyC,YAAY,IACvD;YACIjL,MAAM0I,6FAAwBA,CAACF,4EAAiBA,CAACyC,YAAY;YAC7DjpB,MAAMwmB,4EAAiBA,CAACyC,YAAY;YACpCnnB,oBAAM,uDAACC,wDAAkB;gBAACN,WAAWmnB;gBAAe9kB,MAAM;gBAAIoQ,OAAO+T;;QACzE,IACA;QAEND,sBAAsBrR,QAAQ,CAAC6P,4EAAiBA,CAAC0C,WAAW,IACtD;YACIlL,MAAM0I,6FAAwBA,CAACF,4EAAiBA,CAAC0C,WAAW;YAC5DlpB,MAAMwmB,4EAAiBA,CAAC0C,WAAW;YACnCpnB,oBAAM,uDAACC,uDAAiB;gBAACN,WAAWmnB;gBAAe9kB,MAAM;gBAAIoQ,OAAO+T;;QACxE,IACA;QACND,sBAAsBrR,QAAQ,CAAC6P,4EAAiBA,CAAC2C,KAAK,IAChD;YACInL,MAAM0I,6FAAwBA,CAACF,4EAAiBA,CAAC2C,KAAK;YACtDnpB,MAAMwmB,4EAAiBA,CAAC2C,KAAK;YAC7BrnB,oBAAM,uDAACC,iDAAW;gBAACN,WAAWonB;gBAAgB/kB,MAAM;gBAAIoQ,OAAO+T;;QACnE,IACA;QACND,sBAAsBrR,QAAQ,CAAC6P,4EAAiBA,CAAC4C,IAAI,IAC/C;YACIppB,MAAMwmB,4EAAiBA,CAAC4C,IAAI;YAC5BtnB,oBAAM,uDAACC,oDAAc;gBAACN,WAAWonB;gBAAgB/kB,MAAM;gBAAIoQ,OAAO+T;;QACtE,IACA;QACND,sBAAsBrR,QAAQ,CAAC6P,4EAAiBA,CAAC8C,OAAO,IAClD;YACItpB,MAAMwmB,4EAAiBA,CAAC8C,OAAO;YAC/BxnB,oBAAM,uDAACC,mDAAa;gBAACN,WAAWmnB;gBAAe9kB,MAAM;gBAAIoQ,OAAO+T;;QACpE,IACA;QACND,sBAAsBrR,QAAQ,CAAC6P,4EAAiBA,CAAC+C,OAAO,IAClD;YACIvpB,MAAMwmB,4EAAiBA,CAAC+C,OAAO;YAC/BznB,oBAAM,uDAACC,mDAAa;gBAACN,WAAWonB;gBAAgB/kB,MAAM;gBAAIoQ,OAAO+T;;QACrE,IACA;QACND,sBAAsBrR,QAAQ,CAAC6P,4EAAiBA,CAAC1X,IAAI,IAC/C;YACI9O,MAAMwmB,4EAAiBA,CAAC1X,IAAI;YAC5BhN,oBAAM,uDAACC,gDAAU;gBAACN,WAAWonB;gBAAgB/kB,MAAM;gBAAIoQ,OAAO+T;;QAClE,IACA;QACND,sBAAsBrR,QAAQ,CAAC6P,4EAAiBA,CAAC8B,QAAQ,IACnD;YACItoB,MAAMwmB,4EAAiBA,CAAC8B,QAAQ;YAChCxmB,oBAAM,uDAACC,mDAAa;gBAACN,WAAWonB;gBAAgB/kB,MAAM;gBAAIoQ,OAAO+T;;QACrE,IACA;QACND,sBAAsBrR,QAAQ,CAAC6P,4EAAiBA,CAACgC,IAAI,IAC/C;YACIxoB,MAAMwmB,4EAAiBA,CAACgC,IAAI;YAC5B1mB,oBAAM,uDAACC,gDAAU;gBAACN,WAAWonB;gBAAgB/kB,MAAM;gBAAIoQ,OAAO+T;;QAClE,IACA;KACT;IAED,IAAIa,QAAQ7a,MAAM,IAAI,GAAG;QACrB,qBACI;sBACK6a,QAAQzc,GAAG,CAAC,CAAC,EAAEuB,QAAQ,EAAE5N,IAAI,EAAEge,IAAI,EAAElc,IAAI,EAAE,EAAEsQ;gBAC1C,MAAMqX,qBACF,uDAAClC;oBAAwB3Z,UAAUA;oBAAU5N,MAAMA;8BAC9C8B;mBADiBsQ;gBAI1B,IAAI4L,MACA,qBACI,uDAAC4I,uDAAOA;oBAAS7T,MAAMiL;oBAAM0L,WAAW;wBAAEjoB,WAAW3B,QAAQinB,OAAO;oBAAC;8BAChE0C;mBADSrX;gBAItB,OAAOqX;YACX;;IAGZ;IACA,MAAME,UAAUhD,8DAAOA,CACnBmC,QAAQ1c,OAAO,CAAC,CAACwd,QAAQxX;QACrB,OAAOwX,OAAO5pB,IAAI,IAAI4pB,OAAO5L,IAAI,GAC3B;0BACI,uDAAC3Z,+DAAIA;gBACD5C,WAAW3B,QAAQke,IAAI;gBACvBjL,MAAM6W,OAAO5L,IAAI;gBACjBhL,QAAO;gBACPC,KAAI;0BAEH2W,OAAO5pB,IAAI;eADP4pB,OAAO5pB,IAAI;YAGpBoS,MAAM0W,QAAQ7a,MAAM,GAAG,KAAK;SAC/B,GACD;IACV;IAEJ,qBACI,uDAACwY,sEAAiBA;QACd3mB,SAAS;YAAEonB,SAASpnB,QAAQonB,OAAO;QAAC;QACpCnnB,qBACI,wDAACZ,8DAAUA;YAACkE,UAAU;YAAI0N,YAAW;YAAOlP,WAAU;;gBACjDqB,EAAE2mB,2BAA2B,CAAC;oBAC3B/H,SAASsG,cAAchB,gBAAgBlN,OAAO,GAAGwO,aAAatB,gBAAgBE,MAAM,GAAG;gBAC3F;8BACA;8BAAGqC;;;;kBAGX,qEAACG;YAAKroB,WAAW3B,QAAQ+mB,SAAS;sBAC7BiC,QAAQzc,GAAG,CAAC,CAAC,EAAEvK,IAAI,EAAE,EAAEsQ;gBACpB,qBACI,uDAAC0X;oBAAKroB,WAAW3B,QAAQgnB,WAAW;8BAC/BhlB;mBADsCsQ;YAInD;;;AAIhB;;;;;;;;;;;;;;;;;;;;;;;;ACxPiC;AACK;AACK;AACgC;AACC;AACpB;AACC;AACA;AAEN;AAEnD,MAAM9P,YAAYL,mEAAUA,GAAG,CAACM,QAAW;QACvCyb,MAAM;YACFtW,QAAQ;YACRE,QAAQ;YACR,WAAW;gBACPC,gBAAgB;YACpB;YACAkJ,YAAY;QAChB;QACAmZ,eAAe;YACX5mB,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC4E,IAAI;QACvC;IACJ;AAWO,SAASnD,YAAY,EACxBqJ,aAAa,EACbqD,kBAAkB;IAAEtO,UAAU;IAAQD,YAAY;AAAI,CAAC,EACvDsO,iBAAiB,EACjByY,eAAe,EACfzpB,OAAO,EACP4Q,SAAS,KAAK,EACC;IACf,MAAM,EAAExR,OAAO,EAAE,GAAGwC;IACpB,MAAM2a,SAASP,gFAAaA,CAACpO,eAAe/B;IAE5C,IAAI,CAAC+B,eAAe,OAAO;IAE3B,MAAM8b,gBACF,CAAC9b,cAAcvC,KAAK,IACpBie,iFAAcA,CAAC1b,cAAcvC,KAAK,KAClCuC,cAAc0Z,qBAAqB,EAAErR,SAAS6P,4EAAiBA,CAAC8C,OAAO,KAAK,qCAAqC;IACjHljB,iFAAaA,CAACkI,cAAcvC,KAAK,EAAEuC,cAAc9C,OAAO;IAE5D,qBACI;;0BACI,uDAACue,8DAAGA;gBAACrpB,SAAS,CAAC8O,KAAyB9O,UAAU8O;0BAC7C4a,8BACG,uDAACH,+DAAeA;oBACX,GAAGtY,eAAe;oBACnBnG,SAAS8C,cAAc9C,OAAO;oBAC9Be,UAAU+B,cAAc/B,QAAQ;mCAGpC,uDAACpN,8DAAUA;oBAACkE,UAAS;oBAAOD,YAAY;oBAAM,GAAGuO,eAAe;8BAC3DrD,cAAcvC,KAAK;;;YAI/Boe,kBAAkB,qBACf,uDAAC9lB,8DAAIA;gBACD5C,WAAW3B,QAAQke,IAAI;gBACvBjL,MAAMkK,OAAOgB,gBAAgB,CAACoM,WAAW,CACrClmB,+DAAKA,CAACmK,cAAcgc,iBAAiB,KAAKrN,OAAOsN,iBAAiB,IAClEjc,cAAc9C,OAAO;gBAEzBwH,QAAO;gBACPC,KAAI;0BACJ,qEAAClR,oDAAa;oBAAC+B,MAAM;oBAAIrC,WAAWiQ;;;YAG3CJ,uBAAS,uDAACvP,sDAAe;gBAACN,WAAW3B,QAAQoqB,aAAa;gBAAExpB,SAASA;iBAAc;;;AAGhG;;;;;;;;;;;;;;;ACnFsF;AAS/E,SAASkmB,QAAQlnB,KAAmB;IACvC,MAAM,EAAEqT,IAAI,EAAE2W,SAAS,EAAE/X,eAAe,EAAE9R,QAAQ,EAAE,GAAGH;IACvD,IAAIqT,QAAQmS,IAAIuF,QAAQ,CAAC1X,OAAO;QAC5B,MAAM,EAAE2X,QAAQ,EAAE,GAAG,IAAIxF,IAAInS;QAC7B,qBACI,uDAAC1O,8DAAIA;YACDf,OAAO,CAACf,QAAUA,MAAMgB,OAAO,CAACC,SAAS,CAAC0D,IAAI;YAC9C8L,QAAO;YACPC,KAAI;YACJF,MAAMrT,MAAMqT,IAAI;YACf,GAAG2W,SAAS;sBACZ7pB,WACGA,yBAEA,uDAACV,8DAAUA;gBAACiS,SAAQ;gBAAQvP,WAAU;gBAAQ,GAAG8P,eAAe;0BAC3D+Y,SAAS1P,OAAO,CAAC,UAAU;;;IAKhD,OAAO;QACH,qBACI,uDAAC8O;YAAKroB,WAAWioB,WAAWjoB;YAAW1B,OAAO2pB,WAAW3pB;sBACpDF,WACGA,yBAEA,uDAACV,8DAAUA;gBAACiS,SAAQ;gBAAQvP,WAAU;gBAAQ,GAAG8P,eAAe;0BAC3DoB;;;IAKrB;AACJ;;;;;;;;;;;;;;;;;;;;AC1C2C;AACY;AACjB;AACoB;AACf;AAE3C,MAAMzQ,YAAYL,mEAAUA,GAAG,CAACM,QAAW;QACvCxC,OAAO;YACHyC,SAAS;YACT8E,YAAY;YACZ1D,gBAAgB;YAChBN,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC0D,IAAI;QACvC;QACAC,WAAW;YACPC,YACI;YACJwjB,WAAW;YACXhnB,gBAAgB;YAChBN,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC0D,IAAI;QACvC;QACA2jB,UAAU;YACNvY,aAAa;YACb3K,WAAW;QACf;QACAmjB,OAAO;YACHxnB,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC8E,aAAa;YAC5CjF,UAAU;YACVD,YAAY;QAChB;QACA2nB,OAAO;YACHznB,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC4E,IAAI;YACnC/E,UAAU;YACVD,YAAY;YACZyQ,YAAY;QAChB;QACAxL,aAAa;YACT/E,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC8E,aAAa;QAChD;IACJ;AAUO,SAASlD,oBAAoB,EAAEtD,IAAI,EAAE/B,KAAK,EAAEirB,QAAQ,EAAEC,YAAY,EAAEprB,QAAQ,EAA4B;IAC3G,MAAMqD,IAAIb,0EAAcA;IACxB,MAAM,EAAEvC,OAAO,EAAEyC,KAAK,EAAE,GAAGD;IAE3B,MAAM4oB,2BACF,wDAAC/oB,8DAAKA;QAACV,WAAW3B,QAAQC,KAAK;QAAE4D,WAAU;;YACtC7B,sBAAQ,uDAACC,uDAAiB;gBAACN,WAAW3B,QAAQ+qB,QAAQ;;0BACvD,uDAAC1rB,8DAAUA;gBAACkE,UAAU;gBAAID,YAAY;gBAAKE,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC0D,IAAI;0BACzEnH,SAASmD,EAAEioB,+BAA+B;;;;IAKvD,qBACI,wDAAChpB,8DAAKA;QAACV,WAAW3B,QAAQqH,SAAS;;0BAC/B,wDAAChF,8DAAKA;gBAACwB,WAAU;gBAAMC,gBAAe;gBAAgB+J,GAAG;;oBACpDud;kCACD,wDAAC/oB,8DAAKA;wBAACwB,WAAU;wBAAMlB,KAAK;;0CACxB,uDAACtD,8DAAUA;gCAACsC,WAAW3B,QAAQgrB,KAAK;0CAAG5nB,EAAEkoB,qCAAqC;;0CAC9E,uDAACjsB,8DAAUA;gCAACsC,WAAW3B,QAAQirB,KAAK;0CAC/BC,YAAY9nB,EAAEmoB,2CAA2C;;0CAE9D,uDAAChnB,8DAAIA;gCACDinB,WAAU;gCACVtY,QAAO;gCACPC,KAAI;gCACJ3P,OAAM;gCACNyP,MAAMkY,gBAAgB;gCACtBpoB,OAAM;gCACN+Q,QAAO;gCACPM,OAAO;oCAAEqX,WAAW;oCAAU1X,YAAY;gCAAM;0CAChD,qEAAC9R,mDAAa;oCAAC+B,MAAM;oCAAIrC,WAAW3B,QAAQuI,WAAW;;;;;;;0BAInE,uDAAClG,8DAAKA;gBAACgB,MAAM;gBAAGS,gBAAe;gBAAS0D,YAAW;gBAASqG,GAAG;0BAC1D9N,0BACG,uDAAC8qB,6DAAaA;oBAACa,UAAU;oBAAIloB,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC0D,IAAI;8BAC3DhE,EAAEuoB,yBAAyB;;;;;AAMpD;;;;;;;;;;;;;;;;;;;;AC5FiD;AAE0B;AACjC;AAC+B;AAChB;AAMrD,yCAAyC;AAItC,MAAMxB,gCAAkB7nB,2CAAIA,CAAsB,CAAC,EAAEoJ,OAAO,EAAEe,QAAQ,EAAEzI,OAAO,CAAC,EAAE,GAAG8nB,MAAM;IAC9F,MAAM,EAAErqB,MAAMsqB,MAAM,EAAE,GAAGH,oFAAiBA,CAACnf,UAAUf;IACrD,MAAMyR,SAASP,gFAAaA,CAACnQ;IAE7B,MAAMuf,aAAa,CAAC,CAACD,UAAU5O,OAAO8O,aAAa,CAACF;IACpD,MAAMG,UAAUF,aAAa7O,OAAOgP,gBAAgB,CAACJ,UAAU5O,OAAOyI,aAAa,CAACla,SAAS1H,SAAS0H;IACtG,MAAM0gB,cAAcJ,aAAaE,YAAYH,SAAS,CAACzlB,iFAAaA,CAAC4lB,SAASxgB;IAC9E,MAAMie,qBACF,uDAACtqB,8DAAUA;QAACiE,YAAY;QAAM,GAAGwoB,IAAI;kBAChCI;;IAGT,MAAMG,cAAcR,8EAAqBA;IAEzC,OAAOO,4BACH,uDAACzF,sEAAiBA;QACd1mB,OAAO+rB,aAAaD,SAASrgB;QAC7B4gB,aAAa;YAAE,GAAGD,WAAW;YAAEjY,OAAO;gBAAEmY,YAAY;YAAe;QAAE;kBACpE5C;SAGLA;AAER,GAAE;AAEFQ,gBAAgBqC,WAAW,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCkB;AAEc;AACO;AAC3B;AACuB;AAGjE,MAAMhqB,YAAYL,gCAAUA,GAAG;IAC3BlC,OAAO;QACHsH,SAAS;IACb;AACJ;AAII,wBAAwB;AACxB,wDAAwD;AAGrD,SAASolB,cAAc,EAAE5sB,QAAQ,EAAE+N,QAAQ,EAAsB;IACpE,MAAM,EAAE9N,OAAO,EAAE,GAAGwC;IACpB,MAAM,CAACoqB,QAAQC,UAAU,GAAG1tB,kBAAQA,CAAC;IAErC,MAAMiE,IAAIb,wCAAcA;IACxB,MAAMgP,MAAMpN,gBAAMA,CAAc;IAChC,MAAMlE,QAAQ6N,yBACV,oBAACzO,yBAAUA;QAACsC,WAAW3B,QAAQC,KAAK;QAAEsD,UAAU;kBAC3CH,EAAEykB,qBAAqB,CAAC;YAAEC,QAAQ2E,8CAAyBA,CAAC3e,aAAaA;QAAS;SAEvF;IAEJ5O,mBAASA,CAAC;QACN,MAAM4tB,KAAKvb,IAAIS,OAAO;QACtB,IAAI,CAAC8a,IAAI;QACT,MAAMC,WAAW,IAAIC,qBACjB,CAACC;YACG,MAAM,CAACC,MAAM,GAAGD;YAChBJ,UAAUK,MAAMC,cAAc;QAClC,GACA;YACIvrB,MAAM;YACNwrB,YAAY;QAChB;QAGJL,SAASM,OAAO,CAACP;QACjB,OAAO,IAAMC,SAASO,SAAS,CAACR;IACpC,GAAG,EAAE;IAEL,qBACI,oBAACnG,0CAAiBA;QACd2F,aAAa;YAAEtZ,IAAI;gBAAEtQ,SAASkqB,SAAS,UAAU;YAAO;QAAE;QAC1DlF,kBAAkB;QAClBK,KAAK;QACLwF,WAAU;QACVttB,OAAOA;kBACNysB,cAAAA,sBAAYA,CAAC3sB,UAAU;YAAE,GAAGA,SAASH,KAAK;YAAE2R;QAAI;;AAG7D;;;;;AC5DgF;AACtB;AAEnD,MAAMkc,4BAA4BD,8DAAyBA,CAC9D;IACI,CAAC1nB,2BAAcA,CAACiI,QAAQ,CAAC,EAAE9L,yBAAS;IACpC,CAAC6D,2BAAcA,CAACgH,MAAM,CAAC,EAAE;IACzB,CAAChH,2BAAcA,CAAC6nB,MAAM,CAAC,EAAE1rB,4BAAY;IACrC,CAAC6D,2BAAcA,CAAC8nB,OAAO,CAAC,EAAE3rB,6BAAa;IACvC,CAAC6D,2BAAcA,CAACsU,OAAO,CAAC,EAAEnY,mCAAmB;IAC7C,CAAC6D,2BAAcA,CAACyiB,GAAG,CAAC,EAAEtmB,yBAAS;IAC/B,CAAC6D,2BAAcA,CAACkJ,IAAI,CAAC,EAAE;IACvB,CAAClJ,2BAAcA,CAAC+nB,IAAI,CAAC,EAAE5rB,0BAAU;IACjC,CAAC6D,2BAAcA,CAACgoB,MAAM,CAAC,EAAE7rB,iCAAiB;IAC1C,CAAC6D,2BAAcA,CAACkoB,KAAK,CAAC,EAAE;IACxB,CAACloB,2BAAcA,CAACmoB,cAAc,CAAC,EAAE;IACjC,CAACnoB,2BAAcA,CAAC4jB,OAAO,CAAC,EAAEznB,6BAAa;IACvC,CAAC6D,2BAAcA,CAACooB,SAAS,CAAC,EAAEjsB,+BAAe;IAC3C,CAAC6D,2BAAcA,CAACqoB,GAAG,CAAC,EAAElsB,yBAAS;IAC/B,CAAC6D,2BAAcA,CAACsoB,WAAW,CAAC,EAAEnsB,iCAAiB;IAC/C,CAAC6D,2BAAcA,CAACqjB,YAAY,CAAC,EAAElnB,kCAAkB;AACrD,GACAA,yBAAS,EACZ;;;;ACvBqC;AAC6B;AAC6B;AAC5C;AACiB;AACI;AACtB;AACiC;AAChC;AACxB;AACQ;AACc;AACI;AAEtD,MAAMO,wBAASA,GAAGL,gCAAUA,GAAG,CAACM,QAAW;QACvCosB,UAAU;YACNtb,WAAW;YACXhM,SAAS9E,MAAMG,OAAO,CAAC;YACvBE,cAAc;YACdU,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC0D,IAAI;YACnC1E,SAAS;YACT,WAAW;gBACP4E,YAAY7E,MAAMgB,OAAO,CAACC,SAAS,CAACorB,EAAE;YAC1C;YACArnB,cAAc;YACd,kBAAkB;gBACdA,cAAc;YAClB;QACJ;QACAO,SAAS;YACLukB,YAAY;YACZzY,QAAQ;YACRpR,SAAS;YACT8E,YAAY;QAChB;QACAwR,QAAQ;YACJlW,cAAc;QAClB;QACAisB,YAAY;YACRvrB,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC0D,IAAI;YACnC9D,YAAY;YACZyQ,YAAY;YACZxQ,UAAU;QACd;QACAyrB,aAAa;YACTxrB,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC0D,IAAI;YACnC6nB,cAAc;YACdxa,UAAU;YACVhB,cAAchR,MAAMG,OAAO,CAAC;QAChC;QACA8I,SAAS;YACLlI,OAAOgrB,wBAAUA,CAACU,KAAK,CAACxb,IAAI,CAACyb,SAAS;YACtCtnB,WAAW;YACXnF,SAAS;YACT8E,YAAY;YACZ+kB,YAAY;YACZ9X,UAAU;QACd;QACA2a,aAAa;YACT7rB,UAAU;YACVkR,UAAU;YACV8X,YAAY;YACZ0C,cAAc;YACd,uBAAuB;gBACnBvsB,SAAS;YACb;QACJ;QACA2sB,YAAY;YACRtb,YAAYtR,MAAMG,OAAO,CAAC;YAC1BY,OAAOgrB,wBAAUA,CAACU,KAAK,CAACxb,IAAI,CAACyb,SAAS;YACtC5nB,SAAS;QACb;QACA+nB,cAAc;YACVvb,YAAY;YACZD,QAAQ;YACRvM,SAAS9E,MAAMG,OAAO,CAAC,GAAG;YAC1BgR,iBAAiB;YACjBpQ,OAAO;YACPV,cAAc;YACdD,UAAU;YACVU,UAAU;YACV,WAAW;gBACPqQ,iBAAiB;gBACjBpQ,OAAO;YACX;QACJ;QACA+rB,UAAU;YACN7sB,SAAS;YACTqR,YAAY;QAChB;QACAxL,aAAa;YACTX,QAAQ;QACZ;QACA4nB,SAAS;YACLjD,YAAY;YACZkD,WAAW;YACX/sB,SAAS;YACTgtB,UAAU;YACV/sB,KAAK;QACT;QACAgtB,KAAK;YACDpD,YAAY;YACZhlB,SAAS9E,MAAMG,OAAO,CAAC,MAAM;YAC7B4P,aAAa;YACbjP,UAAU;YACV8jB,UAAU;YACV3kB,SAAS;YACTusB,cAAc;YACdxa,UAAU;YACVb,iBAAiBnR,MAAMgB,OAAO,CAACC,SAAS,CAACksB,MAAM;YAC/C9sB,cAAc;QAClB;IACJ;AAEA,MAAM+sB,2BAAavtB,cAAIA,CAAC,CAAC,EAAEypB,MAAM,EAAsB;IACnD,MAAM,EAAE/rB,OAAO,EAAE,GAAGwC,wBAASA;IAC7B,MAAM,EAAEmH,OAAO+B,OAAO,EAAE,GAAGkjB,2BAAQA,CAAC;QAChC,OAAOrG,iBAAGA,CAACuH,MAAM,CAAC/D;IACtB,GAAG;QAACA;KAAO;IAEX,IAAI,CAACrgB,SAAS,OAAO;IAErB,qBACI,qBAAChK;QAAIC,WAAW3B,QAAQ0L,OAAO;;0BAC3B,oBAACrM,yBAAUA;gBAACsC,WAAW3B,QAAQovB,WAAW;0BAAG1jB;;0BAC7C,oBAAC4iB,4BAAUA;gBAAC5a,MAAMhI;gBAAS1H,MAAM;gBAAIrC,WAAW3B,QAAQqvB,UAAU;;;;AAG9E;AACAQ,WAAWrD,WAAW,GAAG;AAYlB,SAASuD,sBAAsB,EAClCjiB,QAAQ,EACRoQ,IAAI,EACJ3P,QAAQ,EACRoC,IAAI,EACJmB,OAAO,EACPke,WAAW,EACXC,UAAU,EACe;IACzB,MAAM7sB,IAAIb,wCAAcA;IACxB,MAAM,EAAEyX,OAAO,EAAE,GAAGyU,sCAAeA;IACnC,MAAM,EAAEzuB,OAAO,EAAEsW,EAAE,EAAE,GAAG9T,wBAASA;IACjC,MAAM2a,SAASP,sCAAaA;IAE5B,MAAM,EAAE/S,OAAO,EAAEF,KAAK,EAAE,GAAGilB,2BAAQA,CAAC;QAChC,IAAI9gB,aAAahI,2BAAcA,CAAC+nB,IAAI,IAAI,CAACtf,UAAU;QACnD,MAAM2hB,UAAU,MAAMxH,kBAAIA,CAACyH,kBAAkB,CAAC5hB;QAC9C,MAAM6hB,cAAc,MAAM1H,kBAAIA,CAAC2H,iBAAiB,CAACrW,SAASkW,QAAQhjB,EAAE;QACpE,OAAO;YACHojB,SAASJ,QAAQI,OAAO;YACxBF;QACJ;IACJ,GAAG;QAAC7hB;QAAUT;QAAUkM;KAAQ;IAEhC,MAAMuW,eAAe9C,yBAAyBA,CAAC3f;IAC/C,MAAM0iB,aAAaD,6BAAe,oBAACA;QAAavsB,MAAM;SAAS;IAE/D,MAAMhC,OAAOiuB,2BACT,oBAACjL,kBAAKA;QAAChhB,MAAM;QAAIof,KAAK6M;QAAYtuB,WAAW3B,QAAQgZ,MAAM;QAAEyX,UAAUD;SAEvEA;IAGJ,qBACI,oBAAC7D,aAAaA;QAAC7e,UAAUA;kBACrB,mCAAC6gB,uBAAQA;YACLhtB,WAAW3B,QAAQ6uB,QAAQ;YAC3B6B,aAAa;YACbC,UAAU;YACV/vB,SAAS;gBACL,IAAIkN,aAAahI,2BAAcA,CAACyiB,GAAG,EAAE;oBACjC,MAAM7c,UAAU,MAAM6c,iBAAGA,CAACuH,MAAM,CAACvhB;oBACjC,IAAI,CAAC7C,SAAS;oBACdoM,iCAAUA,CAAC,CAAC,gCAAgC,EAAEpM,QAAQ,CAAC;gBAC3D;gBACA,OAAOoM,iCAAUA,CAACoG,QAAQwQ,8CAAyBA,CAAC5gB,UAAUS,UAAUoC;YAC5E;;8BACA,qBAACjP;oBAAIC,WAAW3B,QAAQgI,OAAO;;wBAC1BhG;sCAED,qBAAC3C,yBAAUA;4BAACsC,WAAW2U,GAAGtW,QAAQ+uB,UAAU,EAAE/uB,QAAQgvB,WAAW;4BAAGjtB,WAAU;;gCACzEob,OAAOyT,cAAc,CAACjgB,QAAQpC,0BAC3B;;wCACK4O,OAAOyI,aAAa,CAACjV,QAAQpC,UAAU;sDACxC,oBAAC+f,4BAAUA;4CAACtqB,MAAM;4CAAI0P,MAAM/C,QAAQpC;;;qCAGxCoC,QAAQpC;gCAEXT,aAAahI,2BAAcA,CAACyiB,GAAG,iBAAG,oBAACsH;oCAAW9D,QAAQxd;qCAAe;;;wBAEzET,aAAahI,2BAAcA,CAAC+nB,IAAI,iBAC7B,oBAACU,gCAAYA;4BACT1kB,SAASA;4BACTyH,SAAQ;4BACR3P,WAAW3B,QAAQsvB,YAAY;4BAC/BuB,gBAAgB;4BAChBjwB,SAAS,CAAC6Q;gCACNA,MAAME,eAAe;gCACrBG;gCACA5P,kDAAsBA,CAAC1B,MAAM,CAACswB,qBAAqB,CAACpwB,WAAW,CAAC;oCAC5DwC,MAAM;oCACN6tB,QAAQxiB;gCACZ;4BACJ;sCACCjI,sCAAaA,CAAC0T,SAASrQ,OAAO2mB,WACzBltB,EAAE4tB,IAAI,KACNrnB,OAAOymB,cACPhtB,EAAE6tB,cAAc,KAChB7tB,EAAE8tB,WAAW;2CAGvB,oBAACxvB;4BAAIC,WAAW3B,QAAQuvB,QAAQ;sCAC5B,kCAACttB,6BAAa;gCAAC+B,MAAM;gCAAIrC,WAAW3B,QAAQuI,WAAW;;;;;gBAIlEuF,aAAahI,2BAAcA,CAACyiB,GAAG,IAAIyH,aAAa7hB,uBAC7C,oBAACzM;oBAAIC,WAAW3B,QAAQwvB,OAAO;8BAC1BQ,YAAYzjB,GAAG,CAAC,CAACC,kBACd,oBAACnN,yBAAUA;4BAAC0C,WAAU;4BAAoBJ,WAAW3B,QAAQ2vB,GAAG;sCAC3DnjB,EAAEmE,IAAI;2BADuBnE,EAAEmE,IAAI;qBAKhD;;;;AAIpB;;;;;;AChPwC;AACO;AACqC;AACzC;AACW;AACpB;AACsC;AACb;AACL;AAEW;AAEjE,MAAMnO,2BAASA,GAAGL,gCAAUA,GAAG,CAACM;IAC5B,OAAO;QACHskB,WAAW;YACPjT,QAAQ;YACRvM,SAAS9E,MAAMG,OAAO,CAAC;YACvB2Q,WAAW;YACXzQ,cAAc;YACdD,UAAU;YACV,WAAW;gBACP+Q,iBAAiB;YACrB;YACA,YAAY;gBACRA,iBAAiB;YACrB;QACJ;QACA5R,MAAM;YACF+R,YAAY;YACZ,mBAAmB;gBACfjM,QAAQ;gBACRiM,YAAY;YAChB;YACA,mBAAmB;gBACfjM,QAAQ;YACZ;YACA,mBAAmB;gBACfA,QAAQ;YACZ;QACJ;QACAypB,MAAM;YACF1uB,UAAU;YACVwkB,UAAU;YACV9T,WAAW;YACXie,WAAW;YACX1uB,cAAc;YACdyE,SAAS9E,MAAMG,OAAO,CAAC;YACvBoG,WAAWvG,MAAMG,OAAO,CAAC,KAAK;YAC9B0E,YAAY7E,MAAMgB,OAAO,CAACC,SAAS,CAACksB,MAAM;YAC1C,uBAAuB;gBACnBltB,SAAS;YACb;QACJ;QACA+uB,UAAU;YACNlqB,SAAS;QACb;IACJ;AACJ;AASA,MAAMmqB,0BAA0B,CAAC1X;IAC7B,OAAO;QACHlM,UAAUhI,2BAAcA,CAAC+nB,IAAI;QAC7Bld,MAAMqJ,QAAQrJ,IAAI;QAClBpC,UAAUyL,QAAQ+W,MAAM;QACxBY,YAAY;QACZC,UAAU;QACVvL,iBAAiB;IACrB;AACJ;AAEO,MAAM3gB,kCAAoBpD,cAAIA,CAAC,SAASoD,kBAAkB,EAC7D8K,cAAc,EACdqhB,aAAa,EACbC,cAAc,EACdC,eAAe,EACftnB,MAAM,EACN,GAAGqhB,MACkB;IACrB,MAAM,EAAE9rB,OAAO,EAAE,GAAGwC,2BAASA;IAC7B,MAAM+O,MAAMpN,gBAAMA,CAAwB;IAE1C,MAAM,EAAE1C,MAAMuwB,eAAensB,4BAAU,EAAE,GAAGyrB,wDAAsBA,CAAC7mB;IACnE,iBAAiB;IACjB,MAAMwnB,kBAAkB/tB,iBAAOA,CAAC;QAC5B,MAAMguB,SAASb,yBAAMA,CACjB;eAAIW,aAAazlB,GAAG,CAACmlB;eAA6BlhB;SAAe,EACjE,CAAC1E,IAAM,CAAC,EAAEA,EAAEgC,QAAQ,CAAC,CAAC,EAAEhC,EAAEyC,QAAQ,CAAC,CAAC;QAExC,OAAO2jB,OAAOnlB,IAAI,CAAC,CAAC7B,GAAG8B;YACnB,IAAI9B,EAAE4C,QAAQ,KAAKd,EAAEc,QAAQ,EAAE,OAAO;YACtC,OAAO5C,EAAE4C,QAAQ,KAAKhI,2BAAcA,CAAC+nB,IAAI,GAAG,CAAC,IAAI;QACrD;IACJ,GAAG;QAACmE;QAAcxhB;KAAe;IAEjC,MAAM,CAAC+gB,MAAMY,UAAU5oB,UAAU,GAAG6nB,gCAAaA,CAC7Ca,gBAAgB1lB,GAAG,CAAC,CAACT,GAAGwG;QACpB,MAAM8f,SAAStmB,EAAEgC,QAAQ,KAAKhI,2BAAcA,CAAC+nB,IAAI;QACjD,MAAMwE,aAAaD,SAASJ,aAAanmB,IAAI,CAAC,CAACW,IAAMA,EAAEukB,MAAM,KAAKjlB,EAAEyC,QAAQ,GAAG8jB,aAAatpB;QAC5F,qBAAO,oBAACgnB,qBAAqBA;YAAU,GAAGjkB,CAAC;YAAEmkB,YAAYoC,YAAY,CAAC,EAAE;YAAEvgB,SAAS,IAAMvI;WAAtD+I;IACvC,IACA;QACIggB,cAAc;QACdC,eAAe;QACfV;QACAW,cAAc;YACVC,UAAU;YACVC,YAAY;QAChB;QACAC,iBAAiB;YACbF,UAAU;YACVC,YAAY;QAChB;QACAZ;QACAC;QACAa,YAAY;YACRjxB,WAAW3B,QAAQuxB,IAAI;QAC3B;QACAsB,eAAe;YACXlxB,WAAW3B,QAAQyxB,QAAQ;YAC3B,6BAA6B;YAC7Brd,OAAO;gBACHX,cAAc;gBACd1Q,OAAO;YACX;QACJ;IACJ,GACAwO;IAGJrS,mBAASA,CAAC;QACN2Q,OAAOC,gBAAgB,CAAC,UAAUvG;QAClC,OAAO,IAAMsG,OAAOE,mBAAmB,CAAC,UAAUxG;IACtD,GAAG;QAACA;KAAU;IAEd,MAAMupB,gBAAgB5uB,iBAAOA,CAAC;QAC1B,OAAOmtB,yBAAMA,CAACY,iBAAiB,CAACnmB,IAAMA,EAAEgC,QAAQ,EAC3CvB,GAAG,CAAC,CAACT,IAAM2hB,yBAAyBA,CAAC3hB,EAAEgC,QAAQ,GAC/CnB,MAAM,CAACwkB,qBAASA,EAChBzL,KAAK,CAAC,GAAG;IAClB,GAAG;QAACuM;KAAgB;IAEpB,IAAI,CAACa,cAAc3kB,MAAM,EAAE,OAAO;IAElC,qBACI,qBAACzM;QAAK,GAAGoqB,IAAI;;0BACT,oBAAC1pB,qBAAMA;gBAACkP,SAAQ;gBAAO1Q,SAASuxB;gBAAUxwB,WAAW3B,QAAQ+mB,SAAS;gBAAE2J,aAAa;0BAChFoC,cAAcvmB,GAAG,CAAC,CAACwmB,MAAMC,sBACtB,oBAACD;wBAAqCpxB,WAAW3B,QAAQgC,IAAI;wBAAEgC,MAAM;uBAA1D+uB,KAAKvG,WAAW,IAAIwG;;YAGtCzB;;;AAGb,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChKiC;AACG;AAEK;AACA;AAC2C;AAC3B;AACrB;AAEtC,MAAM/uB,YAAYL,gCAAUA,GAAG,CAACM,QAAW;QACvC6wB,UAAU;YACN5wB,SAAS;YACT+R,UAAU;YACVjN,YAAY;YACZsM,QAAQ;YACRvM,SAAS;QACb;QACAgsB,UAAU;YACNC,eAAe;YACfC,UAAU;YACV3vB,gBAAgB;YAChBnB,KAAKF,MAAMG,OAAO,CAAC;YACnB4E,YAAY;YACZiN,UAAU;QACd;QACAif,cAAc;YACVhxB,SAAS;YACT8E,YAAY;QAChB;QACAmsB,MAAM;YACFnhB,aAAa;QACjB;QACA7B,MAAM;YACFse,cAAc;YACdxa,UAAU;QACd;QACA8D,QAAQ;YACJxE,YAAYtR,MAAMG,OAAO,CAAC;QAC9B;QACAgxB,UAAU;YACNphB,aAAa;QACjB;QACAqhB,aAAa;YACTlnB,QAAQ;YACRnJ,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAACiQ,OAAO;QAC1C;IACJ;AASO,SAASmgB,cAAc,EAAEC,OAAO,EAAEC,aAAa,EAAE/jB,QAAQ,EAAEsC,iBAAiB,KAAK,EAAsB;IAC1G,MAAM,EAAEvS,OAAO,EAAE,GAAGwC;IACpB,MAAMC,QAAQ4wB,2BAAQA;IACtB,qBACI;kBACKU,QAAQxnB,GAAG,CAAC,CAACT,GAAGwG;YACb,MAAMxQ,WAAWmxB,0BAAOA,CAACnnB,GAAGkoB;YAC5B,qBACI,qBAACrF,uBAAQA;gBAAChtB,WAAW3B,QAAQszB,QAAQ;gBAAU1yB,SAAS,IAAMqP,SAASnE,GAAGwG;;kCACtE,oBAAC4gB,0BAASA;wBACNvxB,WAAW3B,QAAQ4zB,QAAQ;wBAC3BK,SAASnoB,EAAEmoB,OAAO;wBAClBvoB,SAASI,EAAEJ,OAAO,IAAI;wBACtB6M,QAAQzM,EAAEyM,MAAM;wBAChBvU,MAAM;;kCAGV,qBAAC3B,oBAAKA;wBAACV,WAAW3B,QAAQuzB,QAAQ;;0CAC9B,qBAACl0B,yBAAUA;gCACPkE,UAAU;gCACVD,YAAY;gCACZmwB,UAAU;gCACVhf,UAAS;gCACTwa,cAAa;;kDACb,oBAACjF;wCAAKroB,WAAW3B,QAAQ2Q,IAAI;kDAAG7E,EAAE6E,IAAI;;oCACrC7E,EAAEyM,MAAM,iBAAG,qBAACyR;wCAAKroB,WAAW3B,QAAQuY,MAAM;;4CAAE;4CAAEzM,EAAEyM,MAAM;4CAAC;;yCAAW;;;0CAEvE,qBAAC7W;gCAAIC,WAAW3B,QAAQ0zB,YAAY;;oCAC/B5nB,EAAE6nB,IAAI,iBACH,qBAACt0B,yBAAUA;wCACPkE,UAAU;wCACVD,YAAY;wCACZmwB,UAAU;wCACVhf,UAAS;wCACT9S,WAAW3B,QAAQ2zB,IAAI;wCACvB1E,cAAa;;4CAAW;4CACtBnjB,EAAE6nB,IAAI;;yCAEZ;oCACHphB,iBAAiB,OAAOzQ,yBACrB,oBAACG,iCAAiB;wCAAC+B,MAAM;wCAAIrC,WAAW3B,QAAQ6zB,WAAW;uDAE3D,oBAACT,mCAAwBA;wCACrBhf,OAAO;4CACH7Q,UAAU;4CACVC,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAACywB,aAAa;4CAC5CC,YAAY;wCAChB;;;;;;;eAvCwB9hB;QA8CpD;;AAGZ;;;;;;;;;;;;;;;;;;;;;;AChHsC;AACgE;AAE3D;AAEqC;AACG;AACvC;AACqB;AACP;AAE1D,MAAMoiB,mBAAmB;AACzB,MAAMC,oBAAoB;AAE1B,MAAMnyB,kCAASA,GAAGL,gCAAUA,GAAG,CAACM,QAAW;QACvCmyB,WAAW;YACP9gB,QAAQ;YACRjM,WAAW;YACXvE,YAAY;YACZC,UAAU;YACVgE,SAAS;QACb;QAEAstB,OAAO;YACHnyB,SAAS;YACT8wB,eAAe;YACf1vB,gBAAgB;QACpB;QAEAgxB,aAAa;YACTtD,WAAWkD,mBAAmB,IAAIC,oBAAoB;YACtD9xB,UAAU;YACV+Q,iBAAiBnR,MAAMgB,OAAO,CAACC,SAAS,CAACksB,MAAM;YAC/Clb,WACIjS,MAAMgB,OAAO,CAAC2kB,IAAI,KAAK,SACjB,2CACA;YACVtlB,cAAc;QAClB;QAEAiyB,SAAS;YACLrsB,QAAQjG,MAAMG,OAAO,CAAC,GAAG;YACzBG,OAAO;YACPS,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAACsxB,IAAI;YACnCC,aAAaxyB,MAAMgB,OAAO,CAACC,SAAS,CAACsxB,IAAI;YACzC/sB,UAAU;YACVitB,MAAM;QACV;QACA5B,UAAU;YACNxf,QAAQ4gB;YACRnhB,WAAW;YACX7Q,SAAS;YACT8E,YAAY;YACZisB,UAAU;YACV3vB,gBAAgB;QACpB;QACAqxB,aAAa;YACTzyB,SAAS;YACT8E,YAAY;QAChB;QACA4tB,gBAAgB;YACZ5xB,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAAC8E,aAAa;QAChD;QACA6sB,cAAc;YACV7xB,OAAOf,MAAMgB,OAAO,CAACC,SAAS,CAACiQ,OAAO;YACtCI,YAAYtR,MAAMG,OAAO,CAAC;QAC9B;IACJ;AAaA,MAAM0yB,mBAAmG;IACrGC,eAAe;IACfC,kBAAkB;IAClBC,uBAAuB;AAC3B;AAEO,MAAMhwB,yCAA2BnD,cAAIA,CAAC,SAASmD,yBAAyB,EAC3E0M,iBAAiB,EACjBjC,gBAAgBwlB,eAAe,EAC/B7D,gBAAgB,IAAI,EACpB8D,oBAAoB,IAAI,EACxB/qB,cAAc,EACdsH,cAAc,EACdD,eAAe,EACfM,cAAc,EACdH,aAAa,EACbN,OAAO,EACP,GAAGga,MACqB;IACxB,MAAM,EAAE9rB,OAAO,EAAE,GAAGwC,kCAASA;IAC7B,MAAMY,IAAIb,wCAAcA;IAExB,MAAM0N,WAAWhR,qBAAWA,CACxB,CAAC0K,OAAkCqpB;QAC/B5gB,gBAAgBzI,OAAOqpB;QACvBlhB;IACJ,GACA;QAACM;QAAeN;KAAQ;IAG5B,MAAM5B,iBAAiBmkB,gEAA0BA,CAACqB,iBAAiBvjB;IAEnE,MAAMyjB,SAKFnB,0BAAOA,CAACD,0BAAOA,CAACtkB,gBAAgB,CAACpE,IAAMA,EAAE5L,IAAI,GAAGqM,GAAG,CAAC,CAAC,CAACrM,MAAMgQ,eAAe,GAAK;YAChFhQ;YACAgQ;SACH;IAED,qBACI,qBAACqkB,mBAAIA;QACD1C,eAAeA;QACf8D,mBAAmBA;QACnB/C,YAAY;YACRjxB,WAAW3B,QAAQ80B,WAAW;QAClC;QACAhjB,SAASA;QACR,GAAGga,IAAI;;YACP8J,OAAOrpB,GAAG,CAAC,CAAC,CAACrM,MAAM21B,aAAa,iBAC7B,qBAACn0B;oBAAeC,WAAW3B,QAAQ60B,KAAK;;sCACpC,oBAACx1B,yBAAUA;4BAACsC,WAAW3B,QAAQ40B,SAAS;sCAAGU,gBAAgB,CAACp1B,KAAK;;sCACjE,oBAACo0B,sBAAOA;4BAAC3yB,WAAW3B,QAAQ+0B,OAAO;;sCACnC,oBAACjB,aAAaA;4BACVC,SAAS8B;4BACT7B,eAAe7hB;4BACflC,UAAUA;4BACVsC,gBAAgBA;;;mBAPdrS;0BAYd,qBAACwB;gBAAeC,WAAW3B,QAAQ60B,KAAK;;oBACnC3kB,gBAAgB/B,SAAS,KAAKvD,gBAAgBuD,uBAC3C;;0CACI,oBAAC9O,yBAAUA;gCAACsC,WAAW3B,QAAQ40B,SAAS;0CAAGxxB,EAAE0yB,mCAAmC;;0CAChF,oBAACxB,sBAAOA;gCAAC3yB,WAAW3B,QAAQ+0B,OAAO;;;yBAEvC;oBACHnqB,gBAAgB2B,IAAI,CAACT;wBAClB,qBACI,qBAAC6iB,uBAAQA;4BACLhtB,WAAW3B,QAAQszB,QAAQ;4BAE3B3pB,OAAOmC,EAAEJ,OAAO;4BAChB9K,SAAS;gCACLqR,kBAAkBnG,EAAEJ,OAAO;gCAC3BoG;4BACJ;;8CACA,qBAACpQ;oCAAIC,WAAW3B,QAAQm1B,WAAW;;sDAC/B,oBAAChwB,8BAAWA;4CAACqJ,eAAe1C;4CAAG8F,mBAAmB5R,QAAQo1B,cAAc;;sDACxE,oBAACpN,gCAAYA;4CAACxZ,eAAe1C;;;;gCAEhCxF,sCAAaA,CAAC4L,gBAAgBpG,EAAEJ,OAAO,mBACpC,oBAACzJ,iCAAiB;oCAAC+B,MAAM;oCAAIrC,WAAW3B,QAAQq1B,YAAY;;;2BAX3DvpB,EAAEJ,OAAO;oBAe1B;;eA1BK;;;AA8BrB,GAAE;;;;;;;;;;;;;;AC7K+C;AACW;AACxB;AAE7B,SAAS/F,8BAA8BswB,cAAuB;IACjE,OAAOrH,8DAAQA,CAAC;QACZ,IAAI,CAACqH,gBAAgB;QACrB,OAAOF,sEAAOA,CAACG,MAAM,CACjBD,gBACAD,iFAAgBA,CAACG,8BAA8B;IAEvD,GAAG;QAACF;KAAe;AACvB;;;;;;;;;;;;;;;;;ACLc;AACuB;AACe;AACO;AAE3D;;;;CAIC,GACD,mEAAmE;AAC5D,SAASM,QAAQ,GAAGC,QAAmC;IAC1D,OAAOpF,cAAcoF,UAAU,CAAC;AACpC;AAOA,MAAMh0B,YAAYL,mEAAUA,GAAG,CAACM,QAAW;QACvC8uB,MAAM;YACF,mCAAmC;YACnC7c,WACIjS,MAAMgB,OAAO,CAAC2kB,IAAI,KAAK,SACjB,2CACA;QACd;IACJ;AAEO,SAASgJ,cACZoF,QAAmC,EACnC1M,MAAyB,EACzBvY,GAA6C;IAO7C,MAAM,EAAEvR,OAAO,EAAE,GAAGwC;IACpB,MAAM,EAAE+vB,gBAAgB,KAAK,EAAEkE,gBAAgB,IAAI,EAAE,GAAGC,WAAW,GAAG5M;IACtE,MAAM,CAAC5mB,MAAMyzB,QAAQ,GAAGx3B,+CAAQA,CAAC;IACjC,MAAM,CAAC4S,UAAU6kB,YAAY,GAAGz3B,+CAAQA,CAAqB;IAC7D,MAAM03B,QAAQ;QACVF,QAAQ;QACRC,YAAY;IAChB;IACA,MAAME,SAAST,8DAASA;IACxB,OAAO;sBACHpW,oDAAaA,CACTwW,gBAAgBH,mEAAcA,GAAG/B,8DAAIA,EACrC;YACI,GAAGmC,SAAS;YACZ9D,YAAY8D,WAAW9D;YACvB5yB,SAAS;gBAAE+2B,OAAO/2B,QAAQuxB,IAAI;gBAAE,GAAGmF,UAAU12B,OAAO;YAAC;YACrD6yB,eAAe6D,WAAW7D;YAC1B3vB;YACA6O;YACAR;YACAO,SAAS+kB;YACTj2B,SAASi2B;YACTrE,cAAckE,WAAWlE;YACzBG,iBAAiB+D,WAAW/D;YAC5BgD,mBAAmB;QACvB,GACAa,UAAUjqB,IAAI,CAACyqB,SAASlb,oBACpBsa,qDAAcA,CAASY,yBAAWtK,mDAAYA,CAACsK,SAAS;gBAAE,GAAGA,QAAQp3B,KAAK;gBAAEkc;YAAI,KAAKkb;QAG7F/3B,kDAAWA,CAAC,CAACg4B;YACT,IAAID;YACJ,IAAIC,2BAA2BC,aAAa;gBACxCF,UAAUC;YACd,OAAO;gBACHD,UAAUC,gBAAgBE,aAAa;YAC3C;YAEA,oEAAoE;YACpE,4EAA4E;YAC5E,MAAMC,cAAc7E,gBAAgB,QAAS8E,kBAAkB,IAAoBtuB,YAAYiuB;YAC/FJ,YAAYQ;YACZT,QAAQ;YACR,oDAAoD;YACpD,6CAA6C;YAC7C9mB,OAAOynB,qBAAqB,CAACR;QACjC,GAAG,EAAE;QACL73B,kDAAWA,CAAC;YACR03B,QAAQ;YACRC,YAAY;QAChB,GAAG,EAAE;QACL1zB;KACH;AACL;;;;;;;;;;;;;;;;;ACrG4C;AAC+D;AAClB;AAC7B;AAIrD,SAASsC,4BACZ+I,QAA2C,EAC3CmpB,aAA8C,EAC9CC,MAAkH,EAClHpsB,eAAuD;IAEvD,MAAM,EACF9J,MAAMmJ,cAAc,EACpBC,WAAWC,qBAAqB,EAChCf,OAAO6tB,uBAAuB,EAC9B5sB,SAAS6sB,qBAAqB,EACjC,GAAGL,uFAAoBA,CAACjpB,UAAUmpB,eAAeC;IAClD,MAAMltB,SAAS8D,UAAU/D,YAAYC;IACrC,MAAM,EACFhJ,MAAMq2B,aAAa,EACnBC,YAAYC,oBAAoB,EAChCC,gBAAgB,EAChBluB,OAAOmuB,yBAAyB,EAChCltB,SAASmtB,wBAAwB,EACpC,GAAGZ,4FAAwBA,CAAChpB,UAAU6pB,WAAWryB,mEAAQA,CAACyH,WAAW,EAAE/C,QAAQc;IAEhF,MAAM8sB,YAAYn0B,8CAAOA,CAAC;QACtB,IAAI,CAAC4zB,iBAAiB,CAACltB,gBAAgB,OAAOA;QAE9C,OAAOA,eAAe+B,MAAM,CAAC,CAACb;YAC1B,IAAI,CAACA,EAAEoc,qBAAqB,EAAErR,SAAS6P,4EAAiBA,CAACmC,OAAO,GAAG,OAAO;YAC1E,OAAO,CAACiP,cAAcQ,IAAI,CAACb,oFAAgBA,CAAC3rB,EAAEJ,OAAO;QACzD;IACJ,GAAG;QAACd;QAAgBktB;QAAeE;KAAqB;IAExD,MAAMhtB,UAAU/L,kDAAWA,CAAC;QACxB44B;QACAM;IACJ,GAAG,EAAE;IAEL,OAAO;QACH12B,MAAM42B;QACNxtB,WAAWC,yBAAyBktB;QACpCC;QACAluB,OAAO6tB,2BAA2BM;QAClCltB;IACJ;AACJ;;;;;;;;;;;;;ACjDkC;AAEoB;AAE/C,SAASqpB,2BACZqB,eAA4C,EAC5CvjB,iBAA6C;IAE7C,MAAMjC,iBAAiBmhB,8DAAMA,CACzBqE,iBACA,CAAC5pB,IAAM,CAAC,EAAEA,EAAEJ,OAAO,EAAEqa,cAAc,CAAC,EAAEja,EAAEkR,OAAO,CAAC,CAAC,EAAElR,EAAE5L,IAAI,CAAC,CAAC,EAAE4L,EAAE6E,IAAI,EAAEoV,cAAc,CAAC,EAAEja,EAAEgc,MAAM,CAAC,CAAC;IAGpG,MAAM0Q,iBAAiBtoB,eAAe3D,GAAG,CAAC,CAACT,IAAMA,EAAEgc,MAAM;IAEzD,OAAO5X,eAAevD,MAAM,CAAC,CAACb;QAC1B,IACIqG,qBACArG,EAAEgc,MAAM,KAAK3V,kBAAkB2V,MAAM,IACrC;YAACyQ,2EAAUA,CAACE,aAAa;YAAEF,2EAAUA,CAACG,SAAS;SAAC,CAAC7hB,QAAQ,CAAC1E,kBAAkB2V,MAAM,KAClF;YAACyQ,2EAAUA,CAACE,aAAa;YAAEF,2EAAUA,CAACG,SAAS;SAAC,CAAC7hB,QAAQ,CAAC/K,EAAEgc,MAAM,GACpE;YACE,OAAO;QACX;QAEA,IACI,CAAC3V,mBAAmB2V,WAAWyQ,2EAAUA,CAACI,OAAO,IAAI,CAACxmB,iBAAgB,KACtEqmB,eAAe3hB,QAAQ,CAAC0hB,2EAAUA,CAACG,SAAS,KAC5C5sB,EAAEgc,MAAM,KAAKyQ,2EAAUA,CAACE,aAAa,EACvC;YACE,OAAO;QACX;QAEA,OAAO;IACX;AACJ;;;;;;;;;;;;AClC4E;AAErE,SAAS7yB,cACZsF,CAAuC,EACvC8B,CAAuC;IAEvC,IAAI9B,EAAEgd,qBAAqB,EAAErR,SAAS6P,4EAAiBA,CAACmC,OAAO,GAAG,OAAO,CAAC;IAC1E,IAAI7b,EAAEkb,qBAAqB,EAAErR,SAAS6P,4EAAiBA,CAACmC,OAAO,GAAG,OAAO;IACzE,OAAO;AACX;;;;;;;;;;;;;ACVoC;AAC0C;AAEvE,MAAMyN,iBAAiBsC,kGAAkCA,CAACrE,8DAAIA,EAAC;AACtE+B,eAAe9J,WAAW,GAAG;;;;;;;;;;;;;ACJmB;AACC;AAG1C,SAAS8E,uBAAuBuH,SAAkB,EAAEC,UAAoB;IAC3E,OAAOp0B,wEAAQA,CAA+B;QAC1Cq0B,UAAU;YAAC;YAAW;YAAQF;YAAWC;SAAW;QACpDE,SAAS,CAAC,CAACH;QACXI,SAAS,IAAMzP,sEAAOA,CAAC0P,kBAAkB,CAACL,WAAWC;IACzD;AACJ;;;;;;;;;;;;;;;;;;ACVsH;AACjD;AAChB;AACT;AAU5C;;;;;;;CAOC,GACM,SAASM,uBACZC,aAAiC,EACjC5sB,QAA8B,EAC9BlB,eAAuD;IAEvD,OAAO7G,wEAAQA,CAAC;QACZq0B,UAAU;YAAC;YAAW;YAAkBtsB;YAAU4sB;SAAc;QAChEL,SAAS,CAAC,CAACK;QACXJ,SAAS;YACL,IAAI,CAACxsB,YAAY,CAAC4sB,eAAe,OAAOF,wEAAYA;YACpD,MAAM1d,UAAU7B,0EAAWA,CAAC0f,mBAAmB,CAC3CD,eACAvzB,yEAAcA,CAACgH,MAAM,EACrBusB,eACA9tB;YAGJ,MAAM0Q,SAAS,MAAMR,QAAQnB,GAAG,CAAe7N;YAC/C,IAAI,CAACwP,QAAQ,OAAOkd,wEAAYA;YAEhC,+BAA+B;YAC/B,IAAII,MAAMC,OAAO,CAACvd,SAAS,OAAOA;YAElC,IAAI,CAACA,OAAOwd,eAAe,EAAE,OAAON,wEAAYA;YAEhD,IAAII,MAAMC,OAAO,CAACvd,OAAOwd,eAAe,GAAG,OAAOxd,OAAOwd,eAAe;YACxE,OAAOxd,OAAOwd,eAAe,IAAIN,wEAAYA;QACjD;IACJ;AACJ;AAEO,SAAS5B,yBACZ8B,aAAiC,EACjC5sB,QAA8B,EAC9BitB,QAA4B,EAC5BnuB,eAAuD;IAEvD,MAAM0Q,SAASmd,uBAAuBC,eAAe5sB,UAAUlB;IAC/D,OAAO;QACH,GAAG0Q,MAAM;QACT,gDAAgD;QAChDxa,MAAMwa,OAAOxa,IAAI,GAAGk4B,qBAAqB1d,OAAOxa,IAAI,EAAEi4B,UAAU3T,iBAAiBhd;IACrF;AACJ;AAGI,4CAA4C,GAG5C,uBAAuB,GAK3B;;CAEC,GACM,SAAS6wB,yBACZ,EAAEpvB,UAAU,EAAEiC,QAAQ,EAAEotB,SAAS,EAAW,EAC5CtuB,eAAuD;IAEvD,MAAMuuB,QAAQV,uBAAuB5uB,YAAYuvB,gBAAgBttB,UAAUlB;IAC3E,MAAM,EAAE9J,MAAMu4B,qBAAqB,EAAE,GAAGF;IAExC,MAAMG,gCAAgC/1B,8CAAOA,CAAC;QAC1C,IAAI,CAAC81B,yBAAyB,CAACH,WAAW1rB,QAAQ,OAAOgrB,wEAAYA;QACrE,IAAI,CAACI,MAAMC,OAAO,CAACQ,wBAAwB,OAAOA;QAElD,OAAOE,uBAAuBF,uBAAuBH;IACzD,GAAG;QAACG;QAAuBH;KAAU;IAErC,MAAMM,eAAel7B,kDAAWA,CAC5B,OAAO6qB;QACH,IAAI,CAACtf,YAAY;QACjB,MAAMiR,UAAU7B,0EAAWA,CAAC0f,mBAAmB,CAC3C9uB,WAAWuvB,cAAc,EACzBj0B,yEAAcA,CAACgH,MAAM,EACrBtC,YACAe;QAEJ,MAAMkQ,QAAQjB,GAAG,CAAsB/N,UAAU;YAC7CgtB,iBAAiB3P;QACrB;IACJ,GACA;QAACrd;QAAUjC;KAAW;IAG1B,OAAO;QAAC;YAAE,GAAGsvB,KAAK;YAAEr4B,MAAMw4B;QAA8B;QAA+CE;KAAa;AACxH;AAEO,SAASD,uBAAuBE,IAAc,EAAEC,QAAkB;IACrE,OAAO9Z,OAAO+Z,WAAW,CAACD,SAAS9tB,GAAG,CAAC,CAACyN,UAAY;YAACA;YAASogB;SAAK;AACvE;AAEO,SAAST,qBAAqB7P,MAAoB,EAAE4P,QAAiB;IACxE,IAAI,CAAC5P,QAAQ,OAAOjkB,sEAAUA;IAC9B,IAAI0zB,MAAMC,OAAO,CAAC1P,SAAS,OAAOA;IAClC,OAAO4P,WAAW5P,MAAM,CAAC4P,SAAS,IAAI7zB,sEAAUA,GAAGA,sEAAUA;AACjE;;;;;;;;;;;;;ACvHwD;AACf;AAElC,SAASW,kCAAkCyvB,cAAsB;IACpE,OAAOzZ,8DAAaA,CAAC;QACjB,IAAI,CAACyZ,gBAAgB;QACrB,MAAM9lB,YAAY,MAAMoqB,6EAAcA,CAACjgB,GAAG;QAC1C,OAAOnK,UAAUxD,MAAM,CAAC,CAACb,IAAMA,EAAEmqB,cAAc,EAAElQ,kBAAkBkQ,eAAelQ,WAAW;IACjG,GAAG;QAACkQ;KAAe;AACvB","sources":["webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/ProfileTab.tsx","webpack://mask-network/./packages/shared/src/UI/components/ProfileTabContent/ProfileTab/WalletSettingEntry.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/ProfileTabContent.tsx","webpack://mask-network/./packages/plugins/Avatar/src/SiteAdaptor/NFTAvatarButton.tsx","webpack://mask-network/./packages/plugins/Avatar/src/SiteAdaptor/NFTAvatarRing.tsx","webpack://mask-network/./packages/plugins/Avatar/src/SiteAdaptor/NFTBadge.tsx","webpack://mask-network/./packages/plugins/Avatar/src/SiteAdaptor/NFTBadgeTimeline.tsx","webpack://mask-network/./packages/plugins/Avatar/src/SiteAdaptor/RainbowBox.tsx","webpack://mask-network/./packages/plugins/Avatar/src/hooks/save/useSaveAddress.ts","webpack://mask-network/./packages/plugins/Avatar/src/hooks/storage/useSaveStringStorage.ts","webpack://mask-network/./packages/plugins/Avatar/src/hooks/useGetAddress.ts","webpack://mask-network/./packages/plugins/Avatar/src/hooks/storage/useGetNFTAvatarFromStorage.ts","webpack://mask-network/./packages/plugins/Avatar/src/hooks/rss3/index.ts","webpack://mask-network/./packages/plugins/Avatar/src/hooks/useGetNFTAvatar.ts","webpack://mask-network/./packages/plugins/Avatar/src/hooks/useNFT.ts","webpack://mask-network/./packages/plugins/Avatar/src/hooks/usePersonaNFTAvatar.ts","webpack://mask-network/./packages/plugins/Avatar/src/hooks/useWallet.ts","webpack://mask-network/./packages/plugins/Avatar/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/Avatar/src/types.ts","webpack://mask-network/./packages/web3-shared/base/src/helpers/fetch.ts","webpack://mask-network/./packages/plugins/Avatar/src/utils/index.ts","webpack://mask-network/./packages/shared-base-ui/src/hooks/useLocationChange.ts","webpack://mask-network/./packages/shared/src/UI/components/AccountIcons/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/AddressItem/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/Linking.tsx","webpack://mask-network/./packages/shared/src/UI/components/PluginCardFrame/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/ReversedAddress/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/SocialAccountList/SocialTooltip.tsx","webpack://mask-network/./packages/shared/src/UI/components/SocialAccountList/utils.tsx","webpack://mask-network/./packages/shared/src/UI/components/SocialAccountList/SocialListItem.tsx","webpack://mask-network/./packages/shared/src/UI/components/SocialAccountList/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/TokenMenuList/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/TokenWithSocialGroupMenu/index.tsx","webpack://mask-network/./packages/shared/src/hooks/useCollectionByTwitterHandler.ts","webpack://mask-network/./packages/shared/src/hooks/useMenu.tsx","webpack://mask-network/./packages/shared/src/hooks/useSocialAccountsBySettings.ts","webpack://mask-network/./packages/shared/src/hooks/useTokenMenuCollectionList.ts","webpack://mask-network/./packages/shared/src/utils/addressSorter.ts","webpack://mask-network/./packages/theme/src/Components/WrappedComponents/ShadowRootMenu.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFireflyLensAccounts.ts","webpack://mask-network/./packages/web3-hooks/base/src/useHiddenAddressConfig.ts","webpack://mask-network/./packages/web3-hooks/base/src/useSnapshotSpacesByTwitterHandler.ts"],"sourcesContent":["import { useCallback, useEffect, useState, type PropsWithChildren } from 'react'\nimport { useMount } from 'react-use'\nimport { Typography } from '@mui/material'\nimport { MaskMessages, ProfileTabs, Sniffings } from '@masknet/shared-base'\nimport { useMatchXS, useLocationChange } from '@masknet/shared-base-ui'\n\ninterface ProfileTabProps extends withClasses<'tab' | 'button' | 'selected'>, PropsWithChildren<{}> {\n    clear(): void\n    reset(): void\n    // Required! This component don't have it own style.\n    classes: Record<'root' | 'button' | 'selected', string>\n    title: string\n    type?: ProfileTabs\n    icon?: React.ReactNode\n}\n\nexport function ProfileTab(props: ProfileTabProps) {\n    const { reset, clear, children, classes, title, type = ProfileTabs.WEB3 } = props\n    const [active, setActive] = useState(false)\n    const isMobile = useMatchXS()\n\n    const switchToTab = useCallback(() => {\n        MaskMessages.events.profileTabUpdated.sendToLocal({ show: true, type })\n        setActive(true)\n        clear()\n    }, [clear, type])\n\n    const onClick = useCallback(() => {\n        // Change the url hashtag to trigger `locationchange` event from e.g. 'hostname/medias#web3 => hostname/medias'\n        Sniffings.is_twitter_page && location.assign('#' + type)\n        switchToTab()\n    }, [switchToTab, type])\n\n    useMount(() => {\n        if (location.hash !== '#' + type || active || location.pathname === '/search') return\n        switchToTab()\n    })\n\n    useLocationChange(() => {\n        const testId = (document.activeElement as HTMLElement | null)?.dataset?.testid\n        if (testId === 'SearchBox_Search_Input') return\n\n        MaskMessages.events.profileTabUpdated.sendToLocal({ show: false })\n        setActive(false)\n        reset()\n    })\n\n    useEffect(() => {\n        return MaskMessages.events.profileTabActive.on((data) => {\n            setActive(data.active)\n        })\n    }, [])\n\n    return (\n        <div key=\"nfts\" className={classes.root}>\n            <Typography\n                className={classes.button + ' ' + (active ? classes.selected : '')}\n                onClick={onClick}\n                component=\"div\">\n                {props.icon}\n                {isMobile && props.icon ? null : title}\n                {active && children ? children : null}\n            </Typography>\n        </div>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { CrossIsolationMessages } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Button, Stack, Typography } from '@mui/material'\nimport { memo } from 'react'\nimport { useSharedTrans } from '../../../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    button: {\n        display: 'inline-flex',\n        gap: theme.spacing(1),\n        minWidth: 254,\n        borderRadius: '20px',\n        width: 'fit-content !important',\n    },\n}))\n\nfunction openWeb3ProfileSettingDialog() {\n    CrossIsolationMessages.events.web3ProfileDialogEvent.sendToLocal({\n        open: true,\n    })\n}\nexport const WalletSettingEntry = memo(function WalletSettingEntry() {\n    const t = useSharedTrans()\n    const { classes, theme } = useStyles()\n\n    return (\n        <>\n            <Stack flex={1}>\n                <Typography fontWeight={400} fontSize={14} color={theme.palette.maskColor.second}>\n                    {t.show_wallet_setting_intro()}\n                </Typography>\n            </Stack>\n            <Stack direction=\"row\" justifyContent=\"center\">\n                <Button className={classes.button} onClick={openWeb3ProfileSettingDialog}>\n                    <Icons.Settings size={18} />\n                    {t.show_wallet_setting_button()}\n                </Button>\n            </Stack>\n        </>\n    )\n})\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { useUpdateEffect } from 'react-use'\nimport { first } from 'lodash-es'\nimport { TabContext } from '@mui/lab'\nimport { Link, Button, Stack, Tab, ThemeProvider, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { useQuery } from '@tanstack/react-query'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventType, EventID } from '@masknet/web3-telemetry/types'\nimport {\n    useActivatedPluginsSiteAdaptor,\n    useIsMinimalMode,\n    usePluginTransField,\n    getProfileTabContent,\n} from '@masknet/plugin-infra/content-script'\nimport { getAvailablePlugins } from '@masknet/plugin-infra'\nimport {\n    AddressItem,\n    ConnectPersonaBoundary,\n    GrantPermissions,\n    PluginCardFrameMini,\n    useCurrentPersonaConnectStatus,\n    useSocialAccountsBySettings,\n    TokenWithSocialGroupMenu,\n    SocialAccountList,\n    useCollectionByTwitterHandler,\n    addressSorter,\n    WalletSettingEntry,\n} from '@masknet/shared'\nimport {\n    CrossIsolationMessages,\n    EMPTY_LIST,\n    MaskMessages,\n    NextIDPlatform,\n    PluginID,\n    ProfileTabs,\n    Sniffings,\n    currentPersonaIdentifier,\n} from '@masknet/shared-base'\nimport { useValueRef, useLocationChange } from '@masknet/shared-base-ui'\nimport { makeStyles, MaskLightTheme, MaskTabList, useTabs } from '@masknet/theme'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { ScopedDomainsContainer, useSnapshotSpacesByTwitterHandler } from '@masknet/web3-hooks-base'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport {\n    useCurrentVisitingIdentity,\n    useLastRecognizedIdentity,\n    useSocialIdentity,\n    useSocialIdentityByUserId,\n} from '../DataSource/useActivatedUI.js'\nimport { useGrantPermissions, usePluginHostPermissionCheck } from '../DataSource/usePluginHostPermission.js'\nimport { SearchResultInspector } from './SearchResultInspector.js'\nimport { usePersonasFromDB } from '../../../shared-ui/hooks/usePersonasFromDB.js'\nimport Services from '#services'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        width: Sniffings.is_facebook_page ? 876 : 'auto',\n        color: theme.palette.maskColor.main,\n    },\n    container: {\n        background:\n            'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.8) 100%), linear-gradient(90deg, rgba(28, 104, 243, 0.2) 0%, rgba(69, 163, 251, 0.2) 100%), #FFFFFF;',\n        padding: '16px 16px 0 16px',\n    },\n    title: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '16px',\n    },\n    walletItem: {\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: 18,\n        fontWeight: 700,\n    },\n    settingLink: {\n        cursor: 'pointer',\n        marginTop: 4,\n        zIndex: 0,\n        '&:hover': {\n            textDecoration: 'none',\n        },\n    },\n    content: {\n        position: 'relative',\n    },\n    walletButton: {\n        padding: 0,\n        fontSize: '18px',\n        minWidth: 0,\n        background: 'transparent',\n        '&:hover': {\n            background: 'none',\n        },\n    },\n    settingItem: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    tabs: {\n        display: 'flex',\n        position: 'relative',\n    },\n    gearIcon: {\n        color: theme.palette.maskColor.dark,\n    },\n    linkOutIcon: {\n        color: theme.palette.maskColor.secondaryDark,\n    },\n    mainLinkIcon: {\n        margin: '0px 2px',\n        color: theme.palette.maskColor.secondaryDark,\n    },\n    reload: {\n        borderRadius: 20,\n        minWidth: 254,\n    },\n}))\n\ninterface ProfileTabContentProps extends withClasses<'text' | 'button' | 'root'> {}\n\nexport function ProfileTabContent(props: ProfileTabContentProps) {\n    return (\n        <ScopedDomainsContainer.Provider>\n            <Content {...props} />\n        </ScopedDomainsContainer.Provider>\n    )\n}\n\nfunction openWeb3ProfileSettingDialog() {\n    CrossIsolationMessages.events.web3ProfileDialogEvent.sendToLocal({\n        open: true,\n    })\n}\n\nfunction Content(props: ProfileTabContentProps) {\n    const { classes } = useStyles(undefined, { props })\n\n    const t = useMaskSharedTrans()\n    const translate = usePluginTransField()\n\n    const [hidden, setHidden] = useState(true)\n    const [profileTabType, setProfileTabType] = useState(ProfileTabs.WEB3)\n    const [menuOpen, setMenuOpen] = useState(false)\n    const closeMenu = useCallback(() => setMenuOpen(false), [])\n    const allPersonas = usePersonasFromDB()\n    const lastRecognized = useLastRecognizedIdentity()\n    const currentIdentifier = useValueRef(currentPersonaIdentifier)\n\n    const {\n        value: personaStatus,\n        loading: loadingPersonaStatus,\n        error: loadPersonaStatusError,\n        retry: retryLoadPersonaStatus,\n    } = useCurrentPersonaConnectStatus(allPersonas, currentIdentifier, Services.Helper.openDashboard, lastRecognized)\n\n    const currentVisitingSocialIdentity = useCurrentVisitingIdentity()\n    const { data: currentSocialIdentity } = useSocialIdentity(currentVisitingSocialIdentity)\n    const currentVisitingUserId = currentVisitingSocialIdentity?.identifier?.userId\n    const isOwnerIdentity = currentVisitingSocialIdentity?.isOwner\n\n    const {\n        data: socialAccounts = EMPTY_LIST,\n        isLoading: loadingSocialAccounts,\n        error: loadSocialAccounts,\n        refetch: retrySocialAccounts,\n    } = useSocialAccountsBySettings(currentSocialIdentity, undefined, addressSorter, (a, b, c, d) =>\n        Services.Identity.signWithPersona(a, b, c, location.origin, d),\n    )\n    const [selectedAddress = first(socialAccounts)?.address, setSelectedAddress] = useState<string>()\n    const selectedSocialAccount = socialAccounts.find((x) => isSameAddress(x.address, selectedAddress))\n    const { setPair } = ScopedDomainsContainer.useContainer()\n    useEffect(() => {\n        if (selectedSocialAccount?.address && selectedSocialAccount?.label) {\n            setPair(selectedSocialAccount.address, selectedSocialAccount.label)\n        }\n    }, [selectedSocialAccount?.address, selectedSocialAccount?.label])\n\n    useEffect(() => {\n        return MaskMessages.events.ownProofChanged.on(() => {\n            retrySocialAccounts()\n        })\n    }, [retrySocialAccounts])\n\n    const activatedPlugins = useActivatedPluginsSiteAdaptor('any')\n    const displayPlugins = getAvailablePlugins(activatedPlugins, (plugins) => {\n        return plugins\n            .flatMap((x) => x.ProfileTabs?.map((y) => ({ ...y, pluginID: x.ID })) ?? EMPTY_LIST)\n            .filter((x) => {\n                const shouldDisplay =\n                    x.Utils?.shouldDisplay?.(currentVisitingSocialIdentity, selectedSocialAccount) ?? true\n                return x.pluginID !== PluginID.NextID && shouldDisplay\n            })\n            .sort((a, z) => a.priority - z.priority)\n    })\n\n    const tabs = displayPlugins.map((x) => ({\n        id: x.ID,\n        label: typeof x.label === 'string' ? x.label : translate(x.pluginID, x.label),\n    }))\n\n    const [currentTab, onChange] = useTabs(first(tabs)?.id ?? PluginID.Collectible, ...tabs.map((tab) => tab.id))\n\n    const isWeb3ProfileDisabled = useIsMinimalMode(PluginID.Web3Profile)\n\n    const isOnTwitter = Sniffings.is_twitter_page\n    const doesOwnerHaveNoAddress =\n        isOwnerIdentity && personaStatus.proof?.findIndex((p) => p.platform === NextIDPlatform.Ethereum) === -1\n\n    // the owner persona and site not verify on next ID\n    const myPersonaNotVerifiedYet = isOwnerIdentity && !personaStatus.verified\n    const showNextID =\n        isOnTwitter &&\n        // enabled the plugin\n        (isWeb3ProfileDisabled ||\n            myPersonaNotVerifiedYet ||\n            // the owner persona and site verified on next ID but not verify the wallet\n            doesOwnerHaveNoAddress ||\n            // the visiting persona not have social address list\n            (!isOwnerIdentity && !socialAccounts.length))\n\n    const componentTabId = showNextID ? `${PluginID.NextID}_tabContent` : currentTab\n\n    const contentComponent = useMemo(() => {\n        const Component = getProfileTabContent(componentTabId)\n        if (!Component) return null\n\n        return <Component identity={currentSocialIdentity} socialAccount={selectedSocialAccount} />\n    }, [componentTabId, selectedSocialAccount, currentSocialIdentity])\n\n    const lackHostPermission = usePluginHostPermissionCheck(activatedPlugins.filter((x) => x.ProfileCardTabs?.length))\n\n    const lackPluginId = first(lackHostPermission ? [...lackHostPermission] : [])\n    const lackPluginDefine = activatedPlugins.find((x) => x.ID === lackPluginId)\n\n    const [, onGrant] = useGrantPermissions(lackPluginDefine?.enableRequirement.host_permissions)\n    useLocationChange(() => {\n        onChange(undefined, first(tabs)?.id)\n    })\n\n    useUpdateEffect(() => {\n        onChange(undefined, first(tabs)?.id)\n        setSelectedAddress(undefined)\n    }, [currentVisitingUserId])\n\n    useEffect(() => {\n        if (profileTabType !== ProfileTabs.WEB3) return\n        if (currentTab === `${PluginID.RSS3}_Social`)\n            Telemetry.captureEvent(EventType.Access, EventID.EntryProfileUserSocialSwitchTo)\n        if (currentTab === `${PluginID.RSS3}_Activities`)\n            Telemetry.captureEvent(EventType.Access, EventID.EntryProfileUserActivitiesSwitchTo)\n        if (currentTab === `${PluginID.RSS3}_Donation`)\n            Telemetry.captureEvent(EventType.Access, EventID.EntryProfileUserDonationsSwitchTo)\n    }, [profileTabType, currentTab])\n\n    useEffect(() => {\n        return MaskMessages.events.profileTabHidden.on((data) => {\n            if (data.hidden) setHidden(data.hidden)\n        })\n    }, [currentVisitingUserId])\n\n    const [isHideInspector, hideInspector] = useState(false)\n\n    useEffect(() => {\n        return CrossIsolationMessages.events.hideSearchResultInspectorEvent.on((ev) => {\n            hideInspector(ev.hide)\n        })\n    }, [])\n\n    useEffect(() => {\n        return MaskMessages.events.profileTabUpdated.on((data) => {\n            setHidden(!data.show)\n            data.type && setProfileTabType(data.type)\n        })\n    }, [currentVisitingUserId])\n\n    useEffect(() => {\n        const listener = () => setMenuOpen(false)\n        window.addEventListener('scroll', listener, false)\n        // <ClickAwayListener /> not work, when it is out of shadow root.\n        window.addEventListener('click', listener, false)\n\n        return () => {\n            window.removeEventListener('scroll', listener, false)\n            window.removeEventListener('click', listener, false)\n        }\n    }, [])\n\n    const buttonRef = useRef<HTMLButtonElement>(null)\n    const onSelect = (address: string) => {\n        setSelectedAddress(address)\n        setMenuOpen(false)\n    }\n\n    const { value: collectionList = EMPTY_LIST } = useCollectionByTwitterHandler(\n        profileTabType === ProfileTabs.WEB3 ? currentVisitingUserId : '',\n    )\n\n    const { value: spaceList = EMPTY_LIST } = useSnapshotSpacesByTwitterHandler(\n        profileTabType === ProfileTabs.DAO ? currentVisitingUserId ?? '' : '',\n    )\n\n    const [currentTrendingIndex, setCurrentTrendingIndex] = useState(0)\n    const trendingResult = collectionList?.[currentTrendingIndex]\n\n    const { data: identity } = useSocialIdentityByUserId(currentVisitingUserId)\n\n    const { data: nextIdBindings = EMPTY_LIST } = useQuery(['profiles', 'by-twitter-id', currentVisitingUserId], () => {\n        if (!currentVisitingUserId) return EMPTY_LIST\n        return NextIDProof.queryProfilesByTwitterId(currentVisitingUserId)\n    })\n\n    if (hidden) return null\n\n    const keyword =\n        profileTabType === ProfileTabs.WEB3 ? trendingResult?.address || trendingResult?.name : currentVisitingUserId\n\n    const searchResults = profileTabType === ProfileTabs.WEB3 ? collectionList : spaceList\n\n    if (keyword && !isHideInspector)\n        return (\n            <div className={classes.root}>\n                <SearchResultInspector\n                    keyword={keyword}\n                    isProfilePage\n                    profileTabType={profileTabType}\n                    currentSearchResult={trendingResult}\n                    searchResults={searchResults}\n                    identity={identity}\n                />\n            </div>\n        )\n\n    if (lackHostPermission?.size) {\n        return (\n            <ThemeProvider theme={MaskLightTheme}>\n                <div className={classes.root}>\n                    <PluginCardFrameMini>\n                        <GrantPermissions\n                            permissions={lackPluginDefine?.enableRequirement.host_permissions ?? EMPTY_LIST}\n                            onGrant={onGrant}\n                        />\n                    </PluginCardFrameMini>\n                </div>\n            </ThemeProvider>\n        )\n    }\n\n    if (!currentVisitingUserId || (loadingSocialAccounts && !socialAccounts.length) || loadingPersonaStatus)\n        return (\n            <ThemeProvider theme={MaskLightTheme}>\n                <div className={classes.root}>\n                    <PluginCardFrameMini />\n                </div>\n            </ThemeProvider>\n        )\n\n    if (((isOwnerIdentity && loadPersonaStatusError) || loadSocialAccounts) && socialAccounts.length === 0) {\n        const handleClick = () => {\n            if (loadPersonaStatusError) retryLoadPersonaStatus()\n            if (loadSocialAccounts) retrySocialAccounts()\n        }\n        return (\n            <ThemeProvider theme={MaskLightTheme}>\n                <div className={classes.root}>\n                    <PluginCardFrameMini>\n                        <Stack display=\"inline-flex\" gap={3} justifyContent=\"center\" alignItems=\"center\">\n                            <Typography\n                                fontSize={14}\n                                fontWeight={400}\n                                lineHeight=\"18px\"\n                                color={(t) => t.palette.maskColor.danger}>\n                                {t.load_failed()}\n                            </Typography>\n                            <Button color=\"primary\" className={classes.reload} onClick={handleClick}>\n                                {t.reload()}\n                            </Button>\n                        </Stack>\n                    </PluginCardFrameMini>\n                </div>\n            </ThemeProvider>\n        )\n    }\n\n    // Maybe should merge in NextIdPage\n    if (socialAccounts.length === 0 && !showNextID && !isOnTwitter) {\n        return (\n            <ThemeProvider theme={MaskLightTheme}>\n                <div className={classes.root}>\n                    <PluginCardFrameMini>\n                        <Stack display=\"inline-flex\" gap={3} justifyContent=\"center\" alignItems=\"center\">\n                            <Typography\n                                fontSize={14}\n                                fontWeight={400}\n                                lineHeight=\"18px\"\n                                color={(t) => t.palette.maskColor.publicMain}>\n                                {t.web3_profile_no_social_address_list()}\n                            </Typography>\n                        </Stack>\n                    </PluginCardFrameMini>\n                </div>\n            </ThemeProvider>\n        )\n    }\n\n    if (!socialAccounts.length && !showNextID) {\n        return (\n            <ThemeProvider theme={MaskLightTheme}>\n                <div className={classes.root}>\n                    <PluginCardFrameMini>\n                        <Stack display=\"inline-flex\" gap={3} justifyContent=\"center\" alignItems=\"center\">\n                            <WalletSettingEntry />\n                        </Stack>\n                    </PluginCardFrameMini>\n                </div>\n            </ThemeProvider>\n        )\n    }\n\n    return (\n        <div className={classes.root}>\n            {tabs.length > 0 && !showNextID ? (\n                <div className={classes.container}>\n                    <div className={classes.title}>\n                        <div className={classes.walletItem}>\n                            <Button variant=\"text\" size=\"small\" ref={buttonRef} className={classes.walletButton}>\n                                <AddressItem\n                                    isMenu\n                                    onClick={(event) => {\n                                        event.preventDefault()\n                                        event.stopPropagation()\n                                        setMenuOpen(true)\n                                    }}\n                                    linkIconClassName={classes.mainLinkIcon}\n                                    TypographyProps={{\n                                        fontSize: '18px',\n                                        fontWeight: 700,\n                                        color: (theme) => theme.palette.maskColor.dark,\n                                    }}\n                                    socialAccount={selectedSocialAccount}\n                                />\n                            </Button>\n\n                            <TokenWithSocialGroupMenu\n                                open={menuOpen}\n                                onClose={closeMenu}\n                                anchorEl={buttonRef.current}\n                                onAddressChange={onSelect}\n                                currentAddress={selectedAddress}\n                                collectionList={collectionList}\n                                socialAccounts={socialAccounts}\n                                currentCollection={trendingResult}\n                                onTokenChange={(_, i) => {\n                                    setCurrentTrendingIndex(i)\n                                    hideInspector(false)\n                                    setMenuOpen(false)\n                                }}\n                                fromSocialCard\n                            />\n\n                            <SocialAccountList nextIdBindings={nextIdBindings} userId={currentVisitingUserId} />\n                        </div>\n                        <div className={classes.settingItem}>\n                            <Typography\n                                fontSize=\"14px\"\n                                fontWeight={700}\n                                marginRight=\"5px\"\n                                color={(theme) => theme.palette.maskColor.secondaryDark}>\n                                {t.powered_by()}\n                            </Typography>\n                            <Typography\n                                fontSize=\"14px\"\n                                fontWeight={700}\n                                marginRight=\"4px\"\n                                color={(theme) => theme.palette.maskColor.dark}>\n                                {t.mask_network()}\n                            </Typography>\n                            {isOwnerIdentity && isOnTwitter ? (\n                                <ConnectPersonaBoundary\n                                    personas={allPersonas}\n                                    identity={lastRecognized}\n                                    currentPersonaIdentifier={currentIdentifier}\n                                    openDashboard={Services.Helper.openDashboard}\n                                    customHint\n                                    handlerPosition=\"top-right\"\n                                    directTo={PluginID.Web3Profile}>\n                                    <Icons.Gear\n                                        variant=\"light\"\n                                        onClick={openWeb3ProfileSettingDialog}\n                                        className={classes.gearIcon}\n                                        sx={{ cursor: 'pointer' }}\n                                    />\n                                </ConnectPersonaBoundary>\n                            ) : (\n                                <Link\n                                    className={classes.settingLink}\n                                    href=\"https://mask.io\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\">\n                                    <Icons.LinkOut className={classes.linkOutIcon} size={20} />\n                                </Link>\n                            )}\n                        </div>\n                    </div>\n                    <div className={classes.tabs}>\n                        <TabContext value={currentTab}>\n                            <MaskTabList variant=\"base\" onChange={onChange} aria-label=\"Web3Tabs\">\n                                {tabs.map((tab) => (\n                                    <Tab key={tab.id} label={tab.label} value={tab.id} />\n                                ))}\n                            </MaskTabList>\n                        </TabContext>\n                    </div>\n                </div>\n            ) : null}\n            <div className={classes.content}>{contentComponent}</div>\n        </div>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { Stack, Typography } from '@mui/material'\nimport { useAvatarTrans } from '../locales/i18n_generated.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 9999,\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        color: theme.palette.text.primary,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.maskColor.main,\n    },\n    setIcon: {\n        width: 14,\n        height: 14,\n        marginLeft: 2,\n    },\n    icon: {\n        color: theme.palette.text.buttonText,\n    },\n    text: {\n        color: theme.palette.text.buttonText,\n    },\n}))\n\nexport interface NFTAvatarButtonProps extends withClasses<'root' | 'text'> {\n    onClick: () => void\n    showSetting?: boolean\n}\n\nexport function NFTAvatarButton(props: NFTAvatarButtonProps) {\n    const { onClick } = props\n    const t = useAvatarTrans()\n    const { classes } = useStyles(undefined, { props })\n\n    return (\n        <div className={classes.root} onClick={onClick} role=\"button\">\n            <Icons.Avatar className={classes.icon} size={20} />\n            <Stack display=\"inline-flex\" gap={1}>\n                <Typography style={{ marginLeft: 4 }} className={classes.text}>\n                    {t.nft_avatar()}\n                </Typography>\n                {props.showSetting ? <Icons.GearSettings className={classes.setIcon} /> : null}\n            </Stack>\n        </div>\n    )\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Sniffings } from '@masknet/shared-base'\nimport { RainbowBox } from './RainbowBox.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        overflow: 'unset',\n    },\n    container: {\n        boxShadow: '0 5px 15px rgba(0, 248, 255, 0.4), 0 10px 30px rgba(37, 41, 46, 0.2)',\n        transition: 'none',\n        borderRadius: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        lineHeight: 0,\n        border: '2px solid #00f8ff',\n    },\n}))\ninterface NFTAvatarRingProps {\n    stroke: string\n    strokeWidth: number\n    fontSize: number\n    text: string\n    price: string\n    width: number\n    id: string\n    hasRainbow?: boolean\n    borderSize?: number\n}\n\nexport function NFTAvatarRing(props: NFTAvatarRingProps) {\n    const { classes } = useStyles()\n    const { stroke, strokeWidth, fontSize, text, width, id, price, hasRainbow = true, borderSize = 2 } = props\n\n    const avatarSize = hasRainbow ? width - borderSize : width + 1\n    const R = avatarSize / 2\n    const path_r = R - strokeWidth + fontSize / 2\n    const x1 = R - path_r\n    const y1 = R\n    const x2 = R + path_r\n\n    const svgNode = (\n        <svg className={classes.root} width=\"100%\" height=\"100%\" viewBox={`0 0 ${avatarSize} ${avatarSize}`} id={id}>\n            <defs>\n                <path\n                    id={`${id}-path-name`}\n                    fill=\"none\"\n                    stroke=\"none\"\n                    strokeWidth=\"0\"\n                    d={`M${x1} ${y1} A${path_r} ${path_r} 0 1 1 ${x2} ${y1}`}\n                />\n                <path\n                    id={`${id}-path-price`}\n                    fill=\"none\"\n                    stroke=\"none\"\n                    strokeWidth=\"0\"\n                    d={`M${x1} ${y1} A${path_r} ${path_r} 0 1 0 ${x2} ${y1}`}\n                />\n                <linearGradient id={`${id}-gradient`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                    <stop offset=\"0%\" stopColor=\"#00f8ff\" />\n                    <stop offset=\"20%\" stopColor=\"#a4ff00\" />\n                    <stop offset=\"40%\" stopColor=\"#f7275e\" />\n                    <stop offset=\"60%\" stopColor=\"#ffd300\" />\n                    <stop offset=\"80%\" stopColor=\"#ff8a00\" />\n                    <stop offset=\"100%\" stopColor=\"#00f8ff\" />\n                </linearGradient>\n            </defs>\n\n            <g>\n                <circle\n                    cx={R}\n                    cy={R}\n                    r={R - strokeWidth / 2 + 1}\n                    fill=\"none\"\n                    stroke={stroke}\n                    strokeWidth={strokeWidth}\n                />\n                <pattern\n                    id={`${id}-pattern`}\n                    x=\"0\"\n                    y=\"0\"\n                    width=\"300%\"\n                    height=\"100%\"\n                    patternUnits={navigator.userAgent.includes('Firefox') ? '' : 'userSpaceOnUse'}>\n                    <circle cx={R} cy={R} r={R} fill={`url(#${id}-gradient)`}>\n                        <animateTransform\n                            attributeName=\"transform\"\n                            type=\"rotate\"\n                            attributeType=\"XML\"\n                            dur=\"10s\"\n                            repeatCount=\"indefinite\"\n                            from={`0 ${R} ${R}`}\n                            to={`360 ${R} ${R}`}\n                        />\n                    </circle>\n                </pattern>\n                <g>\n                    <text x=\"0%\" textAnchor=\"middle\" fill={`url(#${id}-pattern)`} fontFamily=\"sans-serif\">\n                        <textPath xlinkHref={`#${id}-path-name`} startOffset=\"50%\" rotate=\"auto\">\n                            <tspan fontWeight=\"bold\" fontSize={fontSize}>\n                                {text}\n                            </tspan>\n                        </textPath>\n                    </text>\n                </g>\n                <text\n                    x=\"0%\"\n                    textAnchor=\"middle\"\n                    fill={Sniffings.is_firefox ? 'currentColor' : `url(#${id}-pattern)`}\n                    fontFamily=\"sans-serif\">\n                    <textPath xlinkHref={`#${id}-path-price`} startOffset=\"50%\" rotate=\"auto\">\n                        <tspan fontWeight=\"bold\" fontSize={fontSize} dy=\"0.5em\">\n                            {price}\n                        </tspan>\n                    </textPath>\n                </text>\n            </g>\n        </svg>\n    )\n\n    return hasRainbow ? (\n        <RainbowBox borderSize={borderSize}>{svgNode}</RainbowBox>\n    ) : (\n        <div className={classes.container}>{svgNode}</div>\n    )\n}\n","import { openWindow } from '@masknet/shared-base-ui'\nimport { makeStyles } from '@masknet/theme'\nimport { Link } from '@mui/material'\nimport type { NFTInfo } from '../types.js'\nimport { formatPrice, formatText } from '../utils/index.js'\nimport { NFTAvatarRing } from './NFTAvatarRing.js'\nimport { useAvatarTrans } from '../locales/i18n_generated.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n}))\n\ninterface NFTBadgeProps extends withClasses<'root' | 'text' | 'icon'> {\n    nftInfo?: NFTInfo\n    size?: number\n    width?: number\n    hasRainbow?: boolean\n    borderSize?: number\n}\n\nexport function NFTBadge(props: NFTBadgeProps) {\n    const { nftInfo, size = 140, hasRainbow, borderSize } = props\n    const { classes } = useStyles(undefined, { props })\n    const t = useAvatarTrans()\n\n    if (!nftInfo)\n        return (\n            <div className={classes.root}>\n                <NFTAvatarRing\n                    id=\"NFTAvatarRing\"\n                    width={size}\n                    strokeWidth={14}\n                    stroke=\"black\"\n                    hasRainbow={hasRainbow}\n                    borderSize={borderSize}\n                    fontSize={9}\n                    text={t.loading()}\n                    price=\"\"\n                />\n            </div>\n        )\n    return (\n        <div\n            className={classes.root}\n            onClick={(e) => {\n                e.preventDefault()\n                if (!nftInfo.permalink) return\n                openWindow(nftInfo.permalink)\n            }}>\n            <Link href={nftInfo?.permalink ?? ''} target=\"_blank\" rel=\"noopener noreferrer\">\n                <NFTAvatarRing\n                    id=\"NFTAvatarRing\"\n                    width={size}\n                    strokeWidth={14}\n                    stroke=\"black\"\n                    hasRainbow={hasRainbow}\n                    borderSize={borderSize}\n                    fontSize={9}\n                    text={formatText(nftInfo.name ?? '', nftInfo.tokenId)}\n                    price={formatPrice(nftInfo.amount ?? '0', nftInfo.symbol ?? 'ETH')}\n                />\n            </Link>\n        </div>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport { AvatarType } from '../types.js'\nimport type { AvatarMetaDB } from '../types.js'\nimport { RainbowBox } from './RainbowBox.js'\nimport type { RSS3_KEY_SITE } from '../constants.js'\nimport { LoadingBase, makeStyles } from '@masknet/theme'\nimport { useCheckPersonaNFTAvatar } from '../index.js'\nimport { MaskMessages } from '@masknet/shared-base'\n\ninterface NFTBadgeTimelineProps extends withClasses<'root'> {\n    userId: string\n    avatarId: string\n    width: number\n    height: number\n    siteKey: RSS3_KEY_SITE\n    avatarType?: AvatarType\n}\n\nconst useStyles = makeStyles()(() => ({\n    root: {\n        transform: 'scale(0.97)',\n    },\n}))\n\nexport function NFTBadgeTimeline(props: NFTBadgeTimelineProps) {\n    const { userId, avatarId, width, height, siteKey } = props\n    const { loading, value: _avatar } = useCheckPersonaNFTAvatar(userId, avatarId, '', siteKey)\n\n    const [avatar, setAvatar] = useState<AvatarMetaDB>()\n    const [avatarId_, setAvatarId_] = useState(avatarId)\n    const { classes } = useStyles(undefined, { props })\n\n    const onUpdate = (data: AvatarMetaDB) => {\n        if (!data.address || !data.tokenId) {\n            setAvatar(undefined)\n            return\n        }\n        setAvatar(data)\n        setAvatarId_(data.avatarId)\n    }\n\n    useEffect(() => {\n        setAvatarId_(avatarId)\n    }, [avatarId])\n\n    useEffect(() => {\n        setAvatar(_avatar)\n    }, [_avatar])\n\n    useEffect(() => MaskMessages.events.NFTAvatarTimelineUpdated.on((data) => onUpdate(data as AvatarMetaDB)), [])\n\n    if (!avatar || !avatarId || avatar.avatarId !== avatarId_) return null\n\n    return loading ? (\n        <LoadingBase size={width} />\n    ) : (\n        <RainbowBox\n            width={width}\n            height={height}\n            radius={props.avatarType === AvatarType.Square ? '5px' : '100%'}\n            classes={{ root: classes.root }}\n        />\n    )\n}\n","import { keyframes, makeStyles } from '@masknet/theme'\nimport type { Keyframes } from '@emotion/serialize'\n\nexport const rainbowBorderKeyFrames: Keyframes = keyframes`\n    0%, to {\n        border-color: #00f8ff;\n        box-shadow: 0 5px 15px rgba(0, 248, 255, 0.4), 0 10px 30px rgba(37, 41, 46, 0.2);\n    }\n    20% {\n        border-color: #a4ff00;\n        box-shadow: 0 5px 15px rgba(164, 255, 0, 0.4), 0 10px 30px rgba(37, 41, 46, 0.2);\n    }\n    40% {\n        border-color: #f7275e;\n        box-shadow: 0 5px 15px rgba(247, 39, 94, 0.4), 0 10px 30px rgba(37, 41, 46, 0.2);\n    }\n    60% {\n        border-color: #ffd300;\n        box-shadow: 0 5px 15px rgba(255, 211, 0, 0.4), 0 10px 30px rgba(37, 41, 46, 0.2);\n    }\n    80% {\n        border-color: #ff8a00;\n        box-shadow: 0 5px 15px rgba(255, 138, 0, 0.4), 0 10px 30px rgba(37, 41, 46, 0.2);\n    }\n`\n\ninterface StyleProps {\n    width?: number\n    height?: number\n    radius?: string\n    size?: number\n}\nconst useStyles = makeStyles<StyleProps>()((theme, { width, height, radius = '100%', size = 2 }) => ({\n    root: {\n        animation: `${rainbowBorderKeyFrames} 6s linear infinite`,\n        width,\n        height,\n        boxShadow: '0 5px 15px rgba(0, 248, 255, 0.4), 0 10px 30px rgba(37, 41, 46, 0.2)',\n        transition: 'none',\n        borderRadius: radius,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        lineHeight: 0,\n        border: `${size}px solid #00f8ff`,\n    },\n}))\n\ninterface RainbowBoxProps extends withClasses<'root'> {\n    borderSize?: number\n    width?: number\n    height?: number\n    radius?: string\n    children?: React.ReactNode\n}\nexport function RainbowBox(props: RainbowBoxProps) {\n    const { classes } = useStyles(\n        {\n            width: props.width,\n            height: props.height,\n            radius: props.radius,\n            size: props.borderSize,\n        },\n        { props },\n    )\n\n    return <div className={classes.root}>{props.children}</div>\n}\n","import { useCallback } from 'react'\nimport { Web3Storage } from '@masknet/web3-providers'\nimport { type NetworkPluginID, EnhanceableSite } from '@masknet/shared-base'\nimport { NFT_AVATAR_DB_NAME } from '../../constants.js'\nimport type { AddressStorageV2 } from '../../types.js'\n\nexport function useSaveAddress(pluginID?: NetworkPluginID) {\n    return useCallback(\n        async (userId: string, pluginID: NetworkPluginID, account: string, network?: EnhanceableSite) => {\n            const addressStorage = Web3Storage.createKVStorage(\n                `${NFT_AVATAR_DB_NAME}_${network ?? EnhanceableSite.Twitter}`,\n            )\n            if (!addressStorage) return\n\n            const prevData = (await addressStorage.get<AddressStorageV2>(userId).catch(() => ({}))) as\n                | AddressStorageV2\n                | undefined\n\n            await addressStorage.set<AddressStorageV2>(userId, {\n                ...prevData,\n                [pluginID]: account,\n                [userId]: { address: account, networkPluginID: pluginID },\n            } as AddressStorageV2)\n        },\n        [],\n    )\n}\n","import { useCallback } from 'react'\nimport { Web3Storage } from '@masknet/web3-providers'\nimport { type NetworkPluginID, getEnhanceableSiteType, EnhanceableSite, getSiteType } from '@masknet/shared-base'\nimport { useSaveAddress } from '../index.js'\nimport type { NextIDAvatarMeta } from '../../types.js'\nimport { PLUGIN_NAME } from '../../constants.js'\n\nexport function useSaveStringStorage(pluginID: NetworkPluginID) {\n    const saveAddress = useSaveAddress()\n\n    return useCallback(\n        async (userId: string, address: string, nft: NextIDAvatarMeta) => {\n            const stringStorage = Web3Storage.createFireflyStorage(\n                `${PLUGIN_NAME}-${(getSiteType() || EnhanceableSite.Twitter).replace('.com', '')}`,\n                address,\n            )\n            try {\n                await stringStorage.set?.(userId, nft)\n                await saveAddress(nft.userId, pluginID, address, getEnhanceableSiteType())\n                return nft\n            } catch {\n                return\n            }\n        },\n        [Storage, saveAddress],\n    )\n}\n","import { useCallback } from 'react'\nimport { Web3Storage } from '@masknet/web3-providers'\nimport { type EnhanceableSite, NetworkPluginID } from '@masknet/shared-base'\nimport { NFT_AVATAR_DB_NAME } from '../constants.js'\nimport type { AddressStorageV1, AddressStorageV2 } from '../types.js'\n\nexport function useGetAddress() {\n    return useCallback(async (site: EnhanceableSite, userId: string) => {\n        if (userId === '$unknown') return\n\n        let storageV1, storageV2\n        try {\n            const storage = await Web3Storage.createKVStorage(`${NFT_AVATAR_DB_NAME}_${site}`).get(userId)\n            storageV1 = (storage ?? {}) as AddressStorageV1\n            storageV2 = (storage ?? {}) as AddressStorageV2\n        } catch {\n            storageV1 = {} as AddressStorageV1\n            storageV2 = {} as AddressStorageV2\n        }\n\n        if (storageV2[userId]) return storageV2[userId]\n        if (storageV2[NetworkPluginID.PLUGIN_EVM])\n            return {\n                address: storageV2[NetworkPluginID.PLUGIN_EVM],\n                networkPluginID: NetworkPluginID.PLUGIN_EVM,\n            }\n\n        // V1 only supports EVM\n        if (storageV1.address) return storageV1\n\n        return\n    }, [])\n}\n","import { useCallback } from 'react'\nimport { Web3Storage } from '@masknet/web3-providers'\nimport { StorageKey } from '../../constants.js'\nimport type { NextIDAvatarMeta } from '../../types.js'\n\nexport function useGetNFTAvatarFromStorage() {\n    return useCallback(\n        async (userId: string, address: string) => {\n            const stringStorage = Web3Storage.createFireflyStorage(StorageKey, address)\n            return stringStorage.get?.<NextIDAvatarMeta>(userId)\n        },\n        [Storage],\n    )\n}\n","import { useCallback } from 'react'\nimport { Web3Storage } from '@masknet/web3-providers'\nimport type { RSS3_KEY_SITE } from '../../constants.js'\nimport type { NFTRSSNode } from '../../types.js'\n\nexport function useGetNFTAvatarFromRSS3() {\n    return useCallback(async (userId: string, address: string, key: RSS3_KEY_SITE) => {\n        const rss3Storage = Web3Storage.createRSS3Storage(address)\n        const result = await rss3Storage.get<Record<string, NFTRSSNode>>(key)\n        if (result) return result[userId].nft\n\n        return (await rss3Storage.get<NFTRSSNode>('_nft'))?.nft\n    }, [])\n}\n","import { useCallback } from 'react'\nimport { Web3Storage } from '@masknet/web3-providers'\nimport { NetworkPluginID, type EnhanceableSite } from '@masknet/shared-base'\nimport { useGetAddress } from './useGetAddress.js'\nimport { useGetNFTAvatarFromStorage } from './storage/useGetNFTAvatarFromStorage.js'\nimport { NFT_AVATAR_METADATA_STORAGE, type RSS3_KEY_SITE } from '../constants.js'\nimport type { NextIDAvatarMeta } from '../types.js'\nimport { useGetNFTAvatarFromRSS3 } from './rss3/index.js'\n\nexport function useGetNFTAvatar() {\n    const getNFTAvatarFromRSS = useGetNFTAvatarFromRSS3()\n    const getNFTAvatarFromStorage = useGetNFTAvatarFromStorage()\n    const getAddress = useGetAddress()\n    return useCallback(\n        async (userId?: string, network?: EnhanceableSite, key?: RSS3_KEY_SITE) => {\n            if (!userId || !network || !key) return\n            const addressStorage = await getAddress(network, userId)\n            if (!addressStorage?.address) return\n            if (addressStorage?.networkPluginID && addressStorage.networkPluginID !== NetworkPluginID.PLUGIN_EVM) {\n                return Web3Storage.createKVStorage(`${NFT_AVATAR_METADATA_STORAGE}_${network}`).get<NextIDAvatarMeta>(\n                    userId,\n                )\n            }\n            const user = await getNFTAvatarFromStorage(userId, addressStorage.address)\n            if (user) return user\n            return getNFTAvatarFromRSS(userId, addressStorage.address, key)\n        },\n        [getNFTAvatarFromStorage, getAddress, Storage, getNFTAvatarFromRSS],\n    )\n}\n","import { useAsyncRetry } from 'react-use'\nimport { ChainId } from '@masknet/web3-shared-evm'\nimport { useWeb3Connection, useWeb3Hub, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { formatBalance, CurrencyType } from '@masknet/web3-shared-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { NFTInfo } from '../types.js'\n\nexport function useNFT(\n    account: string,\n    address?: string,\n    tokenId?: string,\n    pluginID: NetworkPluginID = NetworkPluginID.PLUGIN_EVM,\n    chainId: ChainId = ChainId.Mainnet,\n    ownerAddress?: string,\n) {\n    const Others = useWeb3Others(pluginID)\n    const Hub = useWeb3Hub(pluginID, {\n        chainId,\n        account,\n    })\n    const Web3 = useWeb3Connection(pluginID, {\n        chainId,\n        account,\n    })\n    return useAsyncRetry(async () => {\n        if (!address || !tokenId) return\n        const allSettled = await Promise.allSettled([\n            Web3.getNonFungibleToken(address, tokenId),\n            Hub.getNonFungibleAsset(address, tokenId, {\n                chainId,\n                account: ownerAddress,\n            }),\n        ])\n\n        const [token, asset] = allSettled.map((x) => (x.status === 'fulfilled' ? x.value : undefined)) as [\n            Web3Helper.NonFungibleTokenAll | undefined,\n            Web3Helper.NonFungibleAssetAll | undefined,\n        ]\n\n        const metadata = asset?.metadata || token?.metadata\n        const amount = asset?.priceInToken\n            ? formatBalance(asset.priceInToken.amount, asset.priceInToken.token.decimals)\n            : asset?.price?.[CurrencyType.USD] ?? '0'\n        const name = metadata?.name ?? ''\n        const imageURL = metadata?.imageURL\n        const permalink = asset?.link ?? Others.explorerResolver.nonFungibleTokenLink(chainId, address, tokenId)\n\n        return {\n            amount,\n            name,\n            symbol: asset?.priceInToken ? asset.priceInToken.token.symbol : 'USD',\n            image: imageURL,\n            owner: token?.ownerId ?? asset?.owner?.address ?? asset?.ownerId,\n            // Not all NFT markets have slug in the URL\n            slug: token ? undefined : asset?.collection?.slug,\n            permalink,\n            tokenId,\n        } as NFTInfo\n    }, [Web3, Hub, Others, address, tokenId, chainId, ownerAddress])\n}\n","import { LRUCache } from 'lru-cache'\nimport { useAsyncRetry } from 'react-use'\nimport {\n    type EnhanceableSite,\n    NetworkPluginID,\n    Sniffings,\n    getEnhanceableSiteType,\n    getSiteType,\n} from '@masknet/shared-base'\nimport { ChainId } from '@masknet/web3-shared-evm'\nimport { Twitter } from '@masknet/web3-providers'\nimport type { RSS3_KEY_SITE } from '../constants.js'\nimport type { AvatarMetaDB, NextIDAvatarMeta } from '../types.js'\nimport { useGetNFTAvatar } from './useGetNFTAvatar.js'\nimport { getNFTAvatarByUserId } from '../utils/index.js'\n\nconst cache = new LRUCache<string, NextIDAvatarMeta>({\n    max: 500,\n    ttl: 60 * 1000,\n})\n\ntype GetNFTAvatar = (\n    userId?: string,\n    network?: EnhanceableSite,\n    key?: RSS3_KEY_SITE,\n) => Promise<AvatarMetaDB | undefined>\n\nexport function usePersonaNFTAvatar(userId: string, avatarId: string, persona: string, siteKey: RSS3_KEY_SITE) {\n    const getNFTAvatar = useGetNFTAvatar()\n\n    return useAsyncRetry(async () => {\n        if (!userId) return\n        const key = `${userId}-${getSiteType()}`\n        if (!cache.has(key)) {\n            const nftAvatar = await getNFTAvatarForCache(userId, siteKey, avatarId, persona, getNFTAvatar)\n            if (nftAvatar) cache.set(key, nftAvatar)\n        }\n        return cache.get(key)\n    }, [userId, persona, siteKey, getNFTAvatar, avatarId])\n}\n\nasync function getNFTAvatarForCache(\n    userId: string,\n    key: RSS3_KEY_SITE,\n    avatarId: string,\n    persona: string,\n    fn: GetNFTAvatar,\n) {\n    const avatarMetaFromPersona = await getNFTAvatarByUserId(userId, avatarId, persona)\n    if (avatarMetaFromPersona) return avatarMetaFromPersona\n    const siteType = getEnhanceableSiteType()\n    if (!siteType) return\n    const avatarMeta = await fn(userId, siteType, key)\n    if (!avatarMeta) return\n    if (avatarId && avatarId !== avatarMeta.avatarId) return\n    if (avatarMeta.pluginId === NetworkPluginID.PLUGIN_SOLANA) {\n        return { imageUrl: '', nickname: '', ...avatarMeta, address: avatarMeta.tokenId }\n    }\n    return { imageUrl: '', nickname: '', pluginId: NetworkPluginID.PLUGIN_EVM, chainId: ChainId.Mainnet, ...avatarMeta }\n}\n\nexport function useCheckPersonaNFTAvatar(userId: string, avatarId: string, persona: string, siteKey: RSS3_KEY_SITE) {\n    const getNFTAvatar = useGetNFTAvatar()\n\n    return useAsyncRetry(async () => {\n        if (!userId) return\n        const key = `${userId}-${getSiteType()}`\n        if (!cache.has(key)) {\n            const nftAvatar = await getNFTAvatarForCache(userId, siteKey, avatarId, persona, getNFTAvatar)\n            if (nftAvatar) cache.set(key, nftAvatar)\n        }\n        const metaData = cache.get(key)\n        if (!metaData && Sniffings.is_twitter_page) {\n            const nft = await Twitter.getUserNftContainer(userId)\n            if (nft)\n                // is twitter blue\n                return {\n                    address: nft.address,\n                    tokenId: nft.token_id,\n                    userId,\n                    avatarId,\n                    pluginId: NetworkPluginID.PLUGIN_EVM,\n                    chainId: ChainId.Mainnet,\n                }\n        }\n        return metaData\n    }, [userId, persona, siteKey, getNFTAvatar, avatarId])\n}\n","import { useAsyncRetry } from 'react-use'\nimport { useGetAddress } from './useGetAddress.js'\nimport { type EnhanceableSite, getSiteType } from '@masknet/shared-base'\n\nexport function useWallet(userId?: string) {\n    const getAddress = useGetAddress()\n    return useAsyncRetry(async () => {\n        if (!userId) return\n        return getAddress(getSiteType() as EnhanceableSite, userId)\n    }, [userId, getAddress])\n}\n","// @ts-nocheck\n/* eslint-disable */\nimport { createElement, useMemo, type ComponentType } from \"react\";\nimport { useTranslation, Trans, type TransProps } from \"react-i18next\";\ntype TypedTransProps<Value, Components> = Omit<TransProps<string>, \"values\" | \"ns\" | \"i18nKey\"> & ({} extends Value ? {} : {\n    values: Value;\n}) & {\n    components: Components;\n};\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useAvatarTrans(): {\n    /**\n      * `NFT PFP`\n      */\n    application_dialog_title(): string;\n    /**\n      * `Edit Profile`\n      */\n    application_edit_profile_dialog_title(): string;\n    /**\n      * `Set NFT PFPs`\n      */\n    set_nft(): string;\n    /**\n      * `Set up NFT PFP successfully`\n      */\n    nft_set_success(): string;\n    /**\n      * `NFT PFP verification failed`\n      */\n    persona_verification_failed(): string;\n    /**\n      * `Cancel`\n      */\n    cancel(): string;\n    /**\n      * `Save`\n      */\n    save(): string;\n    /**\n      * `Change`\n      */\n    change(): string;\n    /**\n      * `Connect your wallet`\n      */\n    connect_your_wallet(): string;\n    /**\n      * `Sorry, failed to save NFT Avatar. Please set again.`\n      */\n    upload_avatar_failed_message(): string;\n    /**\n      * `Update NFT Avatar Success!`\n      */\n    upload_avatar_success_message(): string;\n    /**\n      * `No collectible found.`\n      */\n    collectible_not_found(): string;\n    /**\n      * `Add Collectibles`\n      */\n    add_collectible(): string;\n    /**\n      * `Set NFT Avatar`\n      */\n    set_avatar_title(): string;\n    /**\n      * `Set NFT PFP`\n      */\n    set_up_title$pfp(): string;\n    /**\n      * `Set NFT NFT Background`\n      */\n    set_up_title$background(): string;\n    /**\n      * `Wallet Settings`\n      */\n    wallet_settings(): string;\n    /**\n      * `Customize NFT experience by connecting social accounts. Enjoy Web2 with a whole new Web3 vibe.`\n      */\n    persona_hint(): string;\n    /**\n      * `Copy wallet address successfully!`\n      */\n    copy_success_of_wallet_address(): string;\n    /**\n      * `Copied`\n      */\n    copied(): string;\n    /**\n      * `No any collectible is available to preview. Please add your collectible here.`\n      */\n    collectible_no_eth(): string;\n    /**\n      * `No NFTs found in current wallet.`\n      */\n    collectible_no_collectible(): string;\n    /**\n      * `Load failed`\n      */\n    load_failed(): string;\n    /**\n      * `Reload`\n      */\n    reload(): string;\n    /**\n      * `Socialize and show off your NFTs. People can bid, buy and view your valuable NFTs without leaving Twitter.`\n      */\n    application_hint(): string;\n    /**\n      * `Provided by`\n      */\n    provider_by(): string;\n    /**\n      * `Downloading image...`\n      */\n    downloading_image(): string;\n    /**\n      * `Saving...`\n      */\n    saving(): string;\n    /**\n      * `Download image error`\n      */\n    download_image_error(): string;\n    /**\n      * `Please connect a wallet.`\n      */\n    connect_wallet(): string;\n    /**\n      * `NFT background`\n      */\n    background_title(): string;\n    /**\n      * `Powered by`\n      */\n    powered_by(): string;\n    /**\n      * `Loading...`\n      */\n    loading(): string;\n    /**\n      * `No valid wallet detected. Please connect wallet or verify wallet firstly.`\n      */\n    no_wallet_message(): string;\n    /**\n      * `Not current account. Please switch to this account to set up NFTs Profile.`\n      */\n    inactive_persona_tooltip(): string;\n    /**\n      * `Do not support the current network.`\n      */\n    unsupported_network(): string;\n    /**\n      * `NFT PFP`\n      */\n    nft_avatar(): string;\n    /**\n      * `Retry`\n      */\n    retry(): string;\n    /**\n      * `NFT Avatar Setting`\n      */\n    nft_list_title(): string;\n    /**\n      * `Wallet`\n      */\n    nft_wallet_label(): string;\n    /**\n      * `Change`\n      */\n    nft_wallet_change(): string;\n    /**\n      * `Please input contract address`\n      */\n    nft_input_address_label(): string;\n    /**\n      * `Please input token ID`\n      */\n    nft_input_tokenid_label(): string;\n    /**\n      * `web3 error`\n      */\n    plugin_avatar_web3_error(): string;\n    /**\n      * `Cannot found asset.`\n      */\n    plugin_avatar_asset(): string;\n    /**\n      * `Chain does not match.`\n      */\n    plugin_avatar_chain_error(): string;\n    /**\n      * `The contract address is incorrect or the collection does not belong to you`\n      */\n    nft_owner_hint(): string;\n    /**\n      * `Checking`\n      */\n    nft_add_button_label_checking(): string;\n    /**\n      * `Add`\n      */\n    nft_add_button_label(): string;\n    /**\n      * `Input Contract Address`\n      */\n    plugin_avatar_input_token_address(): string;\n    /**\n      * `Token ID`\n      */\n    plugin_avatar_input_token_id(): string;\n    /**\n      * `No collectible found.`\n      */\n    dashboard_no_collectible_found(): string;\n    /**\n      * - set_up_title$pfp: `Set NFT PFP`\n    \n      * - set_up_title$background: `Set NFT NFT Background`\n      */\n    set_up_title(options: {\n        readonly context: \"pfp\" | \"background\";\n    }): string;\n} { const { t } = useTranslation(\"com.maskbook.avatar\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\nfunction createComponent(i18nKey: string) {\n    return (props) => createElement(Trans, { i18nKey, ns: \"com.maskbook.avatar\", shouldUnescape: true, ...props });\n}\nexport const AvatarTrans: {\n    /**\n      * `Only NFTs on Ethereum are supported to preview. We are currently<br/>working on supporting Polygon NFTs as well. <br/>Please add your collectibles here.`\n      */\n    collectible_on_polygon: ComponentType<TypedTransProps<Readonly<{}>, {\n        br: JSX.Element;\n    }>>;\n    /**\n      * `The NFT PFP feature currently supports only EVM chains. Support for other<br>chains will be added in the future.`\n      */\n    wallet_non_evm_warning: ComponentType<TypedTransProps<Readonly<{}>, {\n        br: JSX.Element;\n    }>>;\n} = /*#__PURE__*/ createProxy(createComponent);\n","import type { Web3Helper } from '@masknet/web3-helpers'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ChainId, SchemaType } from '@masknet/web3-shared-evm'\n\nexport interface AvatarMetaDB {\n    userId: string\n    tokenId: string\n    address: string\n    avatarId: string\n    chainId?: ChainId\n    schema?: SchemaType\n    pluginId?: NetworkPluginID\n    ownerAddress?: string\n}\n\nexport interface NFT {\n    amount: string\n    symbol: string\n    name: string\n    image: string\n    owner: string\n    slug: string\n}\n\nexport type AllChainsNonFungibleToken = Web3Helper.NonFungibleTokenAll\n\nexport interface SelectTokenInfo {\n    account: string\n    token: AllChainsNonFungibleToken\n    image: string\n    pluginID: NetworkPluginID\n}\n\nexport interface NextIDAvatarMeta extends AvatarMetaDB {\n    nickname: string\n    imageUrl: string\n}\n\nexport interface NFTRSSNode {\n    signature: string\n    nft: AvatarMetaDB\n}\n\nexport interface NFTInfo {\n    amount: string\n    name: string\n    symbol: string\n    image?: string\n    owner?: string\n    slug?: string\n    permalink?: string\n    tokenId: string\n}\n\nexport enum PFP_TYPE {\n    BACKGROUND = 'background',\n    PFP = 'pfp',\n}\n\nexport type AvatarMeta = NextIDAvatarMeta & { sign: string }\n\nexport type AddressStorageV1 = { address: string; networkPluginID: NetworkPluginID }\nexport type AddressStorageV2 = Record<string, AddressStorageV1> & Record<NetworkPluginID, string>\n\nexport enum AvatarType {\n    Square = 'shape-square',\n    Clip = 'shape-hex',\n    Circle = 'circle',\n    Default = 'default',\n}\n","function getImageBlobResized(img: HTMLImageElement, width: number, height: number) {\n    return new Promise<Blob | null>((resolve) => {\n        const canvas = document.createElement('canvas')\n        const context = canvas.getContext('2d')\n        const w = img.naturalWidth\n        const h = img.naturalHeight\n        const scale = Math.min(width / w, height / h)\n        canvas.height = height\n        canvas.width = width\n        context?.setTransform(scale, 0, 0, scale, canvas.width / 2, canvas.height / 2)\n        context?.drawImage(img, -w / 2, -h / 2, w, h)\n        canvas.toBlob((b) => resolve(b), 'image/png')\n    })\n}\n\n/**\n * Fetch image by creating an image element.\n * It's not supporting in mv3 on background page.\n * @param url\n * @returns\n */\nexport function fetchImageViaDOM(url: string) {\n    return new Promise<Blob | null>((resolve, reject) => {\n        const img = document.createElement('img')\n        const cleanup = () => {\n            img.removeEventListener('load', onload)\n            img.removeEventListener('error', reject)\n        }\n        const onload = async () => {\n            try {\n                resolve(await getImageBlobResized(img, 450, 450))\n            } catch {\n                // do nothing\n            } finally {\n                cleanup()\n            }\n        }\n        const onerror = () => {\n            reject()\n            cleanup()\n        }\n        img.decoding = 'async'\n        img.crossOrigin = 'Anonymous'\n        img.addEventListener('load', onload)\n        img.addEventListener('error', onerror)\n        img.src = url\n    })\n}\n\n/**\n * Fetch image by fetching with HTTP request.\n * This manner will constraint by browser safe policy (CORS).\n * @param url\n * @returns\n */\nexport async function fetchImageViaHTTP(url: string) {\n    const response = await fetch(url, {\n        cache: 'force-cache',\n        headers: {\n            accept: 'image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8',\n        },\n    })\n    if (response.ok) return response.blob()\n    return null\n}\n","import { first, isNull } from 'lodash-es'\nimport { BigNumber } from 'bignumber.js'\nimport {\n    attemptUntil,\n    fetchImageViaDOM,\n    fetchImageViaHTTP,\n    isLocaleResource,\n    resolveCrossOriginURL,\n    resolveResourceURL,\n} from '@masknet/web3-shared-base'\nimport { EnhanceableSite, type NextIDPersonaBindings, NextIDPlatform, getSiteType } from '@masknet/shared-base'\nimport { NextIDProof, NextIDStorageProvider } from '@masknet/web3-providers'\nimport type { NextIDAvatarMeta } from '../types.js'\nimport { PLUGIN_ID } from '../constants.js'\nimport { fetchBlob } from '@masknet/web3-providers/helpers'\n\nexport async function getImage(image: string): Promise<string> {\n    const blob = await fetchBlob(image)\n    return (await blobToBase64(blob)) as string\n}\n\nfunction blobToBase64(blob: Blob) {\n    return new Promise((resolve, _) => {\n        const reader = new FileReader()\n        reader.onloadend = () => resolve(reader.result)\n        reader.readAsDataURL(blob)\n    })\n}\n\nasync function fetchImage(url: string) {\n    const resolvedURL = resolveCrossOriginURL(url)\n    if (!resolvedURL) return fetchImageViaHTTP(url)\n    return attemptUntil(\n        [\n            async () => fetchImageViaHTTP(url),\n            async () => fetchImageViaDOM(resolvedURL),\n            async () => fetchImageViaHTTP(resolvedURL),\n        ],\n        null,\n    )\n}\n\nexport async function toPNG(image: string) {\n    const isBase64 = isLocaleResource(image)\n    const resolvedURL = resolveResourceURL(image)\n    const imageData = await fetchImage(resolvedURL || image)\n    return new Promise<Blob | null>((resolve, reject) => {\n        const img = new Image()\n        const canvas = document.createElement('canvas')\n        const ctx = canvas.getContext('2d')\n        if (isNull(ctx)) throw new Error('Canvas was not supported')\n        img.addEventListener('load', () => {\n            ;[canvas.width, canvas.height] = [img.width, img.height]\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height)\n            canvas.toBlob((blob) => {\n                resolve(blob)\n            }, 'image/png')\n        })\n        img.addEventListener('error', () => {\n            reject(new Error('Could not load image'))\n        })\n        img.setAttribute('CrossOrigin', 'Anonymous')\n        if (!isBase64 && imageData) img.src = URL.createObjectURL(imageData)\n        else img.src = image\n    })\n}\n\nexport function formatPrice(amount: string, symbol: string) {\n    const _amount = new BigNumber(amount ?? '0')\n    if (_amount.isZero() || _amount.isLessThan(0.01)) return ''\n    if (_amount.isLessThan(1)) return `${_amount.toFixed(2)} ${symbol}`\n    if (_amount.isLessThan(1000)) return `${_amount.toFixed(1)} ${symbol}`\n    if (_amount.isLessThan(1000000)) return `${_amount.div(1000000).toFixed(1)}K ${symbol}`\n    return `${_amount.div(1000000).toFixed(1)}M ${symbol}`\n}\n\nexport function formatText(name: string, tokenId: string) {\n    return name.length > 28 ? `${name.slice(0, 28)}...` : name\n}\n\nexport function formatTokenId(symbol: string, tokenId: string) {\n    const name = tokenId\n    return name.length > 18 ? name.slice(0, 12) + '...' : name\n}\n\nexport function formatAddress(address: string, size = 0) {\n    if (size === 0 || size >= 20) return address\n    return `${address.slice(0, Math.max(0, 2 + size))}...${address.slice(-size)}`\n}\n\nasync function getAvatarFromNextIDStorage(\n    persona: string,\n    platform: NextIDPlatform,\n    userId: string,\n    avatarId?: string,\n) {\n    const response = await NextIDStorageProvider.getByIdentity<NextIDAvatarMeta>(\n        persona,\n        platform,\n        userId.toLowerCase(),\n        PLUGIN_ID,\n    )\n\n    if (!avatarId && response.isOk()) return response.value\n    if (response.isOk() && response.value?.avatarId === avatarId) return response.value\n    return\n}\n\n/**\n * find latest used persona binding\n */\n\nexport const sortPersonaBindings = (a: NextIDPersonaBindings, b: NextIDPersonaBindings, userId?: string): number => {\n    if (!userId) return 0\n\n    const p_a = first(a.proofs.filter((x) => x.identity === userId.toLowerCase()))\n    const p_b = first(b.proofs.filter((x) => x.identity === userId.toLowerCase()))\n\n    if (!p_a || !p_b) return 0\n    if (p_a.last_checked_at > p_b.last_checked_at) return -1\n    return 1\n}\n\nexport async function getNFTAvatarByUserId(\n    userId: string,\n    avatarId: string,\n    persona: string,\n): Promise<NextIDAvatarMeta | undefined> {\n    const platform = getSiteType() === EnhanceableSite.Twitter ? NextIDPlatform.Twitter : undefined\n    if (!platform) return\n    const bindings = await NextIDProof.queryAllExistedBindingsByPlatform(platform, userId)\n\n    if (persona) {\n        const binding = bindings.filter((x) => x.persona.toLowerCase() === persona.toLowerCase())?.[0]\n        if (binding) {\n            return getAvatarFromNextIDStorage(binding.persona, platform, userId, avatarId)\n        }\n    }\n    for (const binding of bindings.sort((a, b) => sortPersonaBindings(a, b, userId))) {\n        const avatar = await getAvatarFromNextIDStorage(binding.persona, platform, userId, avatarId)\n        if (avatar) return avatar\n    }\n    return\n}\n","import { useEffect } from 'react'\n\nexport function useLocationChange(handler: (event?: Event) => void) {\n    useEffect(() => {\n        window.addEventListener('locationchange', handler)\n        return () => window.removeEventListener('locationchange', handler)\n    }, [handler])\n}\n","import { Icons } from '@masknet/icons'\nimport { SocialAddressType, type SocialAccount } from '@masknet/shared-base'\nimport { makeStyles, ShadowRootTooltip } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { resolveSocialAddressLink } from '@masknet/web3-shared-base'\nimport { Typography, type TooltipProps, Link } from '@mui/material'\nimport { compact } from 'lodash-es'\nimport { Linking } from '../../../index.js'\nimport { useSharedTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        icon: {\n            width: 20,\n            height: 20,\n        },\n        iconStack: {\n            display: 'inline-flex',\n            alignItems: 'center',\n        },\n        stackedIcon: {\n            marginRight: -6,\n            display: 'inline-flex',\n            alignItems: 'center',\n        },\n        linking: {\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n        },\n        link: {\n            color: theme.palette.maskColor.primary,\n            textDecoration: 'none',\n        },\n        actionIcon: {\n            marginLeft: theme.spacing(0.5),\n            color: theme.palette.maskColor.main,\n        },\n        roundedIcon: {\n            borderRadius: '50%',\n        },\n        tooltip: {\n            maxWidth: 'unset',\n        },\n    }\n})\n\nenum AddressPlatform {\n    Facebook = 'facebook',\n    Twitter = 'twitter',\n    NextId = 'next_id',\n}\n\ninterface AccountTooltipsProps extends Omit<TooltipProps, 'title'> {\n    type?: SocialAddressType\n    platform?: AddressPlatform\n}\n\nfunction AccountTooltips({ platform, type, children }: AccountTooltipsProps) {\n    const { classes } = useStyles()\n    const t = useSharedTrans()\n    return (\n        <ShadowRootTooltip\n            classes={{ tooltip: classes.tooltip }}\n            disableInteractive\n            title={\n                <Typography fontSize={14} lineHeight=\"18px\">\n                    {SocialAddressType.Address === type\n                        ? t.account_icon_tooltips_only({\n                              context: platform!,\n                          })\n                        : t.account_icon_tooltips({\n                              source: type?.replace('_', ' ') ?? '',\n                              context: platform,\n                          })}\n                </Typography>\n            }\n            arrow>\n            {children}\n        </ShadowRootTooltip>\n    )\n}\n\nexport interface AccountIconProps extends withClasses<'icon'> {\n    socialAccount: SocialAccount<Web3Helper.ChainIdAll>\n}\n\nexport function AccountIcons({ socialAccount, classes: externalClasses }: AccountIconProps) {\n    const t = useSharedTrans()\n    const { classes, cx, theme } = useStyles(undefined, { props: { classes: externalClasses } })\n\n    const { supportedAddressTypes } = socialAccount\n    if (!supportedAddressTypes?.length) return null\n\n    const iconStyle =\n        theme.palette.mode === 'light'\n            ? {\n                  boxShadow: '0px 6px 12px rgba(28, 104, 243, 0.2)',\n                  backdropFilter: 'blur(8px)',\n              }\n            : undefined\n\n    const fromTwitter = [\n        SocialAddressType.ENS,\n        SocialAddressType.SPACE_ID,\n        SocialAddressType.ARBID,\n        SocialAddressType.Lens,\n        SocialAddressType.TwitterBlue,\n        SocialAddressType.Address,\n    ].find((x) => supportedAddressTypes.includes(x))\n    const fromNextId = supportedAddressTypes.includes(SocialAddressType.NEXT_ID)\n\n    const normalClasses = cx(classes.actionIcon, classes.icon)\n    const roundedClasses = cx(classes.actionIcon, classes.icon, classes.roundedIcon)\n    const configs = compact([\n        fromNextId\n            ? {\n                  link: resolveSocialAddressLink(SocialAddressType.NEXT_ID),\n                  platform: AddressPlatform.NextId,\n                  icon: <Icons.NextIDMini className={normalClasses} style={{ ...iconStyle, width: 32, height: 18 }} />,\n              }\n            : null,\n        fromTwitter\n            ? {\n                  platform: AddressPlatform.Twitter,\n                  type: fromTwitter,\n                  icon: <Icons.TwitterXRound className={roundedClasses} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.CyberConnect)\n            ? {\n                  link: resolveSocialAddressLink(SocialAddressType.CyberConnect),\n                  type: SocialAddressType.CyberConnect,\n                  icon: <Icons.CyberConnect className={normalClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n\n        supportedAddressTypes.includes(SocialAddressType.Leaderboard)\n            ? {\n                  link: resolveSocialAddressLink(SocialAddressType.Leaderboard),\n                  type: SocialAddressType.Leaderboard,\n                  icon: <Icons.Leaderboard className={normalClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.Sybil)\n            ? {\n                  link: resolveSocialAddressLink(SocialAddressType.Sybil),\n                  type: SocialAddressType.Sybil,\n                  icon: <Icons.Sybil className={roundedClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.Mask)\n            ? {\n                  type: SocialAddressType.Mask,\n                  icon: <Icons.MaskBlue className={roundedClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.Firefly)\n            ? {\n                  type: SocialAddressType.Firefly,\n                  icon: <Icons.Firefly className={normalClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.OpenSea)\n            ? {\n                  type: SocialAddressType.OpenSea,\n                  icon: <Icons.OpenSea className={roundedClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.RSS3)\n            ? {\n                  type: SocialAddressType.RSS3,\n                  icon: <Icons.RSS3 className={roundedClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.SPACE_ID)\n            ? {\n                  type: SocialAddressType.SPACE_ID,\n                  icon: <Icons.SpaceId className={roundedClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n        supportedAddressTypes.includes(SocialAddressType.Lens)\n            ? {\n                  type: SocialAddressType.Lens,\n                  icon: <Icons.Lens className={roundedClasses} size={18} style={iconStyle} />,\n              }\n            : null,\n    ])\n\n    if (configs.length <= 3) {\n        return (\n            <>\n                {configs.map(({ platform, type, link, icon }, i) => {\n                    const node = (\n                        <AccountTooltips key={i} platform={platform} type={type}>\n                            {icon}\n                        </AccountTooltips>\n                    )\n                    if (link)\n                        return (\n                            <Linking key={i} href={link} LinkProps={{ className: classes.linking }}>\n                                {node}\n                            </Linking>\n                        )\n                    return node\n                })}\n            </>\n        )\n    }\n    const sources = compact(\n        configs.flatMap((config, i) => {\n            return config.type && config.link\n                ? [\n                      <Link\n                          className={classes.link}\n                          href={config.link}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          key={config.type}>\n                          {config.type}\n                      </Link>,\n                      i === configs.length ? '' : ', ',\n                  ]\n                : null\n        }),\n    )\n    return (\n        <ShadowRootTooltip\n            classes={{ tooltip: classes.tooltip }}\n            title={\n                <Typography fontSize={14} lineHeight=\"18px\" component=\"div\">\n                    {t.account_icon_merged_tooltip({\n                        context: fromTwitter ? AddressPlatform.Twitter : fromNextId ? AddressPlatform.NextId : 'normal',\n                    })}\n                    <>{sources}</>\n                </Typography>\n            }>\n            <span className={classes.iconStack}>\n                {configs.map(({ icon }, i) => {\n                    return (\n                        <span className={classes.stackedIcon} key={i}>\n                            {icon}\n                        </span>\n                    )\n                })}\n            </span>\n        </ShadowRootTooltip>\n    )\n}\n","import { first } from 'lodash-es'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Link, Typography, type TypographyProps } from '@mui/material'\nimport { SocialAddressType, type SocialAccount } from '@masknet/shared-base'\nimport { useWeb3Others } from '@masknet/web3-hooks-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { isEnsSubdomain } from '@masknet/web3-shared-evm'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { ReversedAddress } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    link: {\n        cursor: 'pointer',\n        zIndex: 1,\n        '&:hover': {\n            textDecoration: 'none',\n        },\n        lineHeight: 0,\n    },\n    arrowDropIcon: {\n        color: theme.palette.maskColor.dark,\n    },\n}))\n\nexport interface AddressItemProps {\n    socialAccount?: SocialAccount<Web3Helper.ChainIdAll>\n    TypographyProps?: TypographyProps\n    linkIconClassName?: string\n    disableLinkIcon?: boolean\n    onClick?: (ev: React.MouseEvent) => void\n    isMenu?: boolean\n}\n\nexport function AddressItem({\n    socialAccount,\n    TypographyProps = { fontSize: '14px', fontWeight: 700 },\n    linkIconClassName,\n    disableLinkIcon,\n    onClick,\n    isMenu = false,\n}: AddressItemProps) {\n    const { classes } = useStyles()\n    const Others = useWeb3Others(socialAccount?.pluginID)\n\n    if (!socialAccount) return null\n\n    const preferAddress =\n        !socialAccount.label ||\n        isEnsSubdomain(socialAccount.label) ||\n        socialAccount.supportedAddressTypes?.includes(SocialAddressType.Firefly) || // Label from Firefly is not reliable\n        isSameAddress(socialAccount.label, socialAccount.address)\n\n    return (\n        <>\n            <Box onClick={(ev: React.MouseEvent) => onClick?.(ev)}>\n                {preferAddress ? (\n                    <ReversedAddress\n                        {...TypographyProps}\n                        address={socialAccount.address}\n                        pluginID={socialAccount.pluginID}\n                    />\n                ) : (\n                    <Typography fontSize=\"14px\" fontWeight={700} {...TypographyProps}>\n                        {socialAccount.label}\n                    </Typography>\n                )}\n            </Box>\n            {disableLinkIcon ? null : (\n                <Link\n                    className={classes.link}\n                    href={Others.explorerResolver.addressLink(\n                        first(socialAccount.supportedChainIds) ?? Others.getDefaultChainId(),\n                        socialAccount.address,\n                    )}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <Icons.LinkOut size={20} className={linkIconClassName} />\n                </Link>\n            )}\n            {isMenu ? <Icons.ArrowDrop className={classes.arrowDropIcon} onClick={onClick} /> : null}\n        </>\n    )\n}\n","import { Link, type LinkProps, Typography, type TypographyProps } from '@mui/material'\n\nexport interface LinkingProps {\n    href?: string\n    children?: React.ReactNode\n    LinkProps?: Partial<LinkProps>\n    TypographyProps?: Partial<TypographyProps>\n}\n\nexport function Linking(props: LinkingProps) {\n    const { href, LinkProps, TypographyProps, children } = props\n    if (href && URL.canParse(href)) {\n        const { hostname } = new URL(href)\n        return (\n            <Link\n                color={(theme) => theme.palette.maskColor.main}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={props.href}\n                {...LinkProps}>\n                {children ? (\n                    children\n                ) : (\n                    <Typography variant=\"body2\" component=\"span\" {...TypographyProps}>\n                        {hostname.replace(/^www./i, '')}\n                    </Typography>\n                )}\n            </Link>\n        )\n    } else {\n        return (\n            <span className={LinkProps?.className} title={LinkProps?.title}>\n                {children ? (\n                    children\n                ) : (\n                    <Typography variant=\"body2\" component=\"span\" {...TypographyProps}>\n                        {href}\n                    </Typography>\n                )}\n            </span>\n        )\n    }\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Link, Stack, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { LoadingStatus } from '../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    title: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.maskColor.main,\n    },\n    container: {\n        background:\n            'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.8) 100%), linear-gradient(90deg, rgba(28, 104, 243, 0.2) 0%, rgba(45, 41, 253, 0.2) 100%), #FFFFFF;',\n        minHeight: '196px',\n        justifyContent: 'space-between',\n        color: theme.palette.maskColor.main,\n    },\n    web3Icon: {\n        marginRight: 6,\n        marginTop: 2,\n    },\n    item1: {\n        color: theme.palette.maskColor.secondaryDark,\n        fontSize: '14px',\n        fontWeight: 400,\n    },\n    item2: {\n        color: theme.palette.maskColor.dark,\n        fontSize: '14px',\n        fontWeight: 500,\n        marginLeft: '2px',\n    },\n    linkOutIcon: {\n        color: theme.palette.maskColor.secondaryDark,\n    },\n}))\n\nexport interface PluginCardFrameMiniProps {\n    icon?: React.ReactNode\n    title?: React.ReactNode\n    provider?: React.ReactNode\n    providerLink?: string\n    children?: React.ReactNode\n}\n\nexport function PluginCardFrameMini({ icon, title, provider, providerLink, children }: PluginCardFrameMiniProps) {\n    const t = useSharedTrans()\n    const { classes, theme } = useStyles()\n\n    const PluginName = (\n        <Stack className={classes.title} direction=\"row\">\n            {icon ?? <Icons.Web3Profile className={classes.web3Icon} />}\n            <Typography fontSize={16} fontWeight={700} color={theme.palette.maskColor.main}>\n                {title ?? t.plugin_card_frame_default_title()}\n            </Typography>\n        </Stack>\n    )\n\n    return (\n        <Stack className={classes.container}>\n            <Stack direction=\"row\" justifyContent=\"space-between\" p={1.5}>\n                {PluginName}\n                <Stack direction=\"row\" gap={0.5}>\n                    <Typography className={classes.item1}>{t.plugin_card_frame_default_provided_by()}</Typography>\n                    <Typography className={classes.item2}>\n                        {provider ?? t.plugin_card_frame_default_provided_by_value()}\n                    </Typography>\n                    <Link\n                        underline=\"none\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        color=\"textPrimary\"\n                        href={providerLink ?? 'https://mask.io/'}\n                        width=\"22px\"\n                        height=\"22px\"\n                        style={{ alignSelf: 'center', marginLeft: '4px' }}>\n                        <Icons.LinkOut size={16} className={classes.linkOutIcon} />\n                    </Link>\n                </Stack>\n            </Stack>\n            <Stack flex={1} justifyContent=\"center\" alignItems=\"center\" p={1.5}>\n                {children ?? (\n                    <LoadingStatus iconSize={24} color={theme.palette.maskColor.main}>\n                        {t.plugin_card_frame_loading()}\n                    </LoadingStatus>\n                )}\n            </Stack>\n        </Stack>\n    )\n}\n","import { type ComponentProps, memo } from 'react'\nimport { type NetworkPluginID } from '@masknet/shared-base'\nimport { useReverseAddress, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { Typography } from '@mui/material'\nimport { ShadowRootTooltip, useBoundedPopperProps } from '@masknet/theme'\nimport { isSameAddress } from '@masknet/web3-shared-base'\n\nexport interface ReverseAddressProps extends ComponentProps<typeof Typography> {\n    address: string\n    pluginID?: NetworkPluginID\n    size?: number\n    // declare explicitly to avoid ts warning\n    component?: string\n}\n\nexport const ReversedAddress = memo<ReverseAddressProps>(({ address, pluginID, size = 4, ...rest }) => {\n    const { data: domain } = useReverseAddress(pluginID, address)\n    const Others = useWeb3Others(pluginID)\n\n    const showDomain = !!domain && Others.isValidDomain(domain)\n    const uiLabel = showDomain ? Others.formatDomainName(domain) : Others.formatAddress(address, size) ?? address\n    const hasEllipsis = showDomain ? uiLabel !== domain : !isSameAddress(uiLabel, address)\n    const node = (\n        <Typography fontWeight={700} {...rest}>\n            {uiLabel}\n        </Typography>\n    )\n    const popperProps = useBoundedPopperProps()\n\n    return hasEllipsis ? (\n        <ShadowRootTooltip\n            title={showDomain ? domain : address}\n            PopperProps={{ ...popperProps, style: { whiteSpace: 'break-spaces' } }}>\n            {node}\n        </ShadowRootTooltip>\n    ) : (\n        node\n    )\n})\n\nReversedAddress.displayName = 'ReversedAddress'\n","import { useSharedTrans } from '@masknet/shared'\nimport { type NextIDPlatform } from '@masknet/shared-base'\nimport { makeStyles, ShadowRootTooltip } from '@masknet/theme'\nimport { resolveNextIDPlatformName } from '@masknet/web3-shared-base'\nimport { Typography } from '@mui/material'\nimport { useRef, cloneElement, useEffect, useState } from 'react'\nimport type { ReactElement } from 'react-markdown/lib/react-markdown.js'\n\nconst useStyles = makeStyles()({\n    title: {\n        padding: '6px 2px',\n    },\n})\n\ninterface SocialTooltipProps {\n    platform?: NextIDPlatform\n    // cloneElement is used.\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    children: ReactElement\n}\nexport function SocialTooltip({ children, platform }: SocialTooltipProps) {\n    const { classes } = useStyles()\n    const [inView, setInView] = useState(false)\n\n    const t = useSharedTrans()\n    const ref = useRef<HTMLElement>(null)\n    const title = platform ? (\n        <Typography className={classes.title} fontSize={14}>\n            {t.account_icon_tooltips({ source: resolveNextIDPlatformName(platform) || platform })}\n        </Typography>\n    ) : null\n\n    useEffect(() => {\n        const el = ref.current\n        if (!el) return\n        const observer = new IntersectionObserver(\n            (entries) => {\n                const [entry] = entries\n                setInView(entry.isIntersecting)\n            },\n            {\n                root: null,\n                rootMargin: '0px',\n            },\n        )\n\n        observer.observe(el)\n        return () => observer.unobserve(el)\n    }, [])\n\n    return (\n        <ShadowRootTooltip\n            PopperProps={{ sx: { display: inView ? 'block' : 'none' } }}\n            disableInteractive\n            arrow\n            placement=\"top\"\n            title={title}>\n            {cloneElement(children, { ...children.props, ref } as any)}\n        </ShadowRootTooltip>\n    )\n}\n","import { createLookupTableResolver, NextIDPlatform } from '@masknet/shared-base'\nimport { type GeneratedIcon, Icons } from '@masknet/icons'\n\nexport const resolveNextIDPlatformIcon = createLookupTableResolver<NextIDPlatform, GeneratedIcon | null>(\n    {\n        [NextIDPlatform.Ethereum]: Icons.ETH,\n        [NextIDPlatform.NextID]: null,\n        [NextIDPlatform.GitHub]: Icons.GitHub,\n        [NextIDPlatform.Keybase]: Icons.Keybase,\n        [NextIDPlatform.Twitter]: Icons.TwitterXRound,\n        [NextIDPlatform.ENS]: Icons.ENS,\n        [NextIDPlatform.RSS3]: null,\n        [NextIDPlatform.LENS]: Icons.Lens,\n        [NextIDPlatform.REDDIT]: Icons.RedditRound,\n        [NextIDPlatform.SYBIL]: null,\n        [NextIDPlatform.EthLeaderboard]: null,\n        [NextIDPlatform.SpaceId]: Icons.SpaceId,\n        [NextIDPlatform.Farcaster]: Icons.Farcaster,\n        [NextIDPlatform.Bit]: Icons.Bit,\n        [NextIDPlatform.Unstoppable]: Icons.Unstoppable,\n        [NextIDPlatform.CyberConnect]: Icons.CyberConnect,\n    },\n    Icons.Web,\n)\n","import { Icons } from '@masknet/icons'\nimport { CopyButton, Image, useSharedTrans } from '@masknet/shared'\nimport { CrossIsolationMessages, NextIDPlatform, type BindingProof } from '@masknet/shared-base'\nimport { openWindow } from '@masknet/shared-base-ui'\nimport { ActionButton, MaskColors, makeStyles } from '@masknet/theme'\nimport { useChainContext, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { ENS, Lens } from '@masknet/web3-providers'\nimport { isSameAddress, resolveNextIDPlatformLink } from '@masknet/web3-shared-base'\nimport { MenuItem, Typography } from '@mui/material'\nimport { memo } from 'react'\nimport { useAsync } from 'react-use'\nimport { SocialTooltip } from './SocialTooltip.js'\nimport { resolveNextIDPlatformIcon } from './utils.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    listItem: {\n        boxSizing: 'border-box',\n        padding: theme.spacing(0.5),\n        borderRadius: 4,\n        color: theme.palette.maskColor.main,\n        display: 'block',\n        '&:hover': {\n            background: theme.palette.maskColor.bg,\n        },\n        marginBottom: 6,\n        '&:last-of-type': {\n            marginBottom: 0,\n        },\n    },\n    content: {\n        whiteSpace: 'nowrap',\n        height: 40,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    avatar: {\n        borderRadius: '50%',\n    },\n    socialName: {\n        color: theme.palette.maskColor.main,\n        fontWeight: 400,\n        marginLeft: 4,\n        fontSize: 14,\n    },\n    accountName: {\n        color: theme.palette.maskColor.main,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        paddingRight: theme.spacing(1),\n    },\n    address: {\n        color: MaskColors.light.text.secondary,\n        marginTop: 2,\n        display: 'flex',\n        alignItems: 'center',\n        whiteSpace: 'nowrap',\n        overflow: 'auto',\n    },\n    addressText: {\n        fontSize: '10px',\n        overflow: 'auto',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        '::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    copyButton: {\n        marginLeft: theme.spacing(0.5),\n        color: MaskColors.light.text.secondary,\n        padding: 0,\n    },\n    followButton: {\n        marginLeft: 'auto',\n        height: 32,\n        padding: theme.spacing(1, 1.5),\n        backgroundColor: '#ABFE2C',\n        color: '#000',\n        borderRadius: 99,\n        minWidth: 64,\n        fontSize: 12,\n        '&:hover': {\n            backgroundColor: '#ABFE2C',\n            color: '#000',\n        },\n    },\n    linkIcon: {\n        display: 'flex',\n        marginLeft: 'auto',\n    },\n    linkOutIcon: {\n        cursor: 'pointer',\n    },\n    related: {\n        whiteSpace: 'break-spaces',\n        lineBreak: 'anywhere',\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 4,\n    },\n    ens: {\n        whiteSpace: 'nowrap',\n        padding: theme.spacing(0.25, 0.5),\n        marginRight: 6,\n        fontSize: 12,\n        maxWidth: '100%',\n        display: 'inline-block',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.maskColor.bottom,\n        borderRadius: 4,\n    },\n}))\n\nconst ENSAddress = memo(({ domain }: { domain: string }) => {\n    const { classes } = useStyles()\n    const { value: address } = useAsync(() => {\n        return ENS.lookup(domain)\n    }, [domain])\n\n    if (!address) return null\n\n    return (\n        <div className={classes.address}>\n            <Typography className={classes.addressText}>{address}</Typography>\n            <CopyButton text={address} size={14} className={classes.copyButton} />\n        </div>\n    )\n})\nENSAddress.displayName = 'ENSAddress'\n\ninterface SocialAccountListItemProps {\n    platform: NextIDPlatform\n    identity: string\n    name: string\n    onClose: () => void\n    relatedList?: BindingProof[]\n    link?: string\n    profileUrl?: string\n}\n\nexport function SocialAccountListItem({\n    platform,\n    link,\n    identity,\n    name,\n    onClose,\n    relatedList,\n    profileUrl,\n}: SocialAccountListItemProps) {\n    const t = useSharedTrans()\n    const { account } = useChainContext()\n    const { classes, cx } = useStyles()\n    const Others = useWeb3Others()\n\n    const { loading, value } = useAsync(async () => {\n        if (platform !== NextIDPlatform.LENS || !identity) return\n        const profile = await Lens.getProfileByHandle(identity)\n        const isFollowing = await Lens.queryFollowStatus(account, profile.id)\n        return {\n            ownedBy: profile.ownedBy,\n            isFollowing,\n        }\n    }, [identity, platform, account])\n\n    const PlatformIcon = resolveNextIDPlatformIcon(platform)\n    const renderIcon = PlatformIcon ? <PlatformIcon size={20} /> : null\n\n    const icon = profileUrl ? (\n        <Image size={20} src={profileUrl} className={classes.avatar} fallback={renderIcon} />\n    ) : (\n        renderIcon\n    )\n\n    return (\n        <SocialTooltip platform={platform}>\n            <MenuItem\n                className={classes.listItem}\n                disableRipple\n                disabled={false}\n                onClick={async () => {\n                    if (platform === NextIDPlatform.ENS) {\n                        const address = await ENS.lookup(identity)\n                        if (!address) return\n                        openWindow(`https://app.ens.domains/address/${address}`)\n                    }\n                    return openWindow(link ?? resolveNextIDPlatformLink(platform, identity, name))\n                }}>\n                <div className={classes.content}>\n                    {icon}\n\n                    <Typography className={cx(classes.socialName, classes.accountName)} component=\"div\">\n                        {Others.isValidAddress(name || identity) ? (\n                            <>\n                                {Others.formatAddress(name || identity, 4)}\n                                <CopyButton size={14} text={name || identity} />\n                            </>\n                        ) : (\n                            name || identity\n                        )}\n                        {platform === NextIDPlatform.ENS ? <ENSAddress domain={identity} /> : null}\n                    </Typography>\n                    {platform === NextIDPlatform.LENS ? (\n                        <ActionButton\n                            loading={loading}\n                            variant=\"text\"\n                            className={classes.followButton}\n                            disableElevation\n                            onClick={(event) => {\n                                event.stopPropagation()\n                                onClose()\n                                CrossIsolationMessages.events.followLensDialogEvent.sendToLocal({\n                                    open: true,\n                                    handle: identity,\n                                })\n                            }}>\n                            {isSameAddress(account, value?.ownedBy)\n                                ? t.view()\n                                : value?.isFollowing\n                                ? t.lens_following()\n                                : t.lens_follow()}\n                        </ActionButton>\n                    ) : (\n                        <div className={classes.linkIcon}>\n                            <Icons.LinkOut size={16} className={classes.linkOutIcon} />\n                        </div>\n                    )}\n                </div>\n                {platform === NextIDPlatform.ENS && relatedList?.length ? (\n                    <div className={classes.related}>\n                        {relatedList.map((y) => (\n                            <Typography component=\"span\" key={y.name} className={classes.ens}>\n                                {y.name}\n                            </Typography>\n                        ))}\n                    </div>\n                ) : null}\n            </MenuItem>\n        </SocialTooltip>\n    )\n}\n","import { isNonNull } from '@masknet/kit'\nimport { useMenuConfig } from '@masknet/shared'\nimport { NextIDPlatform, type BindingProof, EMPTY_LIST } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Button, type MenuProps } from '@mui/material'\nimport { uniqBy } from 'lodash-es'\nimport { useEffect, useMemo, useRef, type HTMLProps, memo } from 'react'\nimport { SocialAccountListItem } from './SocialListItem.js'\nimport { resolveNextIDPlatformIcon } from './utils.js'\nimport type { FireflyBaseAPI } from '@masknet/web3-providers/types'\nimport { useFireflyLensAccounts } from '@masknet/web3-hooks-base'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        iconStack: {\n            height: 28,\n            padding: theme.spacing(0.5),\n            boxSizing: 'border-box',\n            borderRadius: 8,\n            minWidth: 'auto',\n            '&:hover': {\n                backgroundColor: 'transparent',\n            },\n            '&:active': {\n                backgroundColor: 'transparent',\n            },\n        },\n        icon: {\n            marginLeft: '-3.5px',\n            ':nth-of-type(1)': {\n                zIndex: 2,\n                marginLeft: 0,\n            },\n            ':nth-of-type(2)': {\n                zIndex: 1,\n            },\n            ':nth-of-type(3)': {\n                zIndex: 0,\n            },\n        },\n        menu: {\n            minWidth: 320,\n            maxWidth: 340,\n            boxSizing: 'border-box',\n            maxHeight: 296,\n            borderRadius: 16,\n            padding: theme.spacing(1.5),\n            translate: theme.spacing(1.9, 1),\n            background: theme.palette.maskColor.bottom,\n            '::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        menuList: {\n            padding: 0,\n        },\n    }\n})\n\ninterface SocialAccountListProps\n    extends HTMLProps<HTMLDivElement>,\n        Pick<MenuProps, 'disablePortal' | 'anchorPosition' | 'anchorReference'> {\n    nextIdBindings: BindingProof[]\n    userId?: string\n}\n\nconst FireflyLensToNextIdLens = (account: FireflyBaseAPI.LensAccount): BindingProof => {\n    return {\n        platform: NextIDPlatform.LENS,\n        name: account.name,\n        identity: account.handle,\n        created_at: '',\n        is_valid: true,\n        last_checked_at: '',\n    }\n}\n\nexport const SocialAccountList = memo(function SocialAccountList({\n    nextIdBindings,\n    disablePortal,\n    anchorPosition,\n    anchorReference,\n    userId,\n    ...rest\n}: SocialAccountListProps) {\n    const { classes } = useStyles()\n    const ref = useRef<HTMLDivElement | null>(null)\n\n    const { data: lensAccounts = EMPTY_LIST } = useFireflyLensAccounts(userId)\n    // Merge and sort\n    const orderedBindings = useMemo(() => {\n        const merged = uniqBy(\n            [...lensAccounts.map(FireflyLensToNextIdLens), ...nextIdBindings],\n            (x) => `${x.platform}.${x.identity}`,\n        )\n        return merged.sort((a, z) => {\n            if (a.platform === z.platform) return 0\n            return a.platform === NextIDPlatform.LENS ? -1 : 0\n        })\n    }, [lensAccounts, nextIdBindings])\n\n    const [menu, openMenu, closeMenu] = useMenuConfig(\n        orderedBindings.map((x, i) => {\n            const isLens = x.platform === NextIDPlatform.LENS\n            const profileUri = isLens ? lensAccounts.find((y) => y.handle === x.identity)?.profileUri : undefined\n            return <SocialAccountListItem key={i} {...x} profileUrl={profileUri?.[0]} onClose={() => closeMenu()} />\n        }),\n        {\n            hideBackdrop: true,\n            anchorSibling: false,\n            disablePortal,\n            anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'right',\n            },\n            transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right',\n            },\n            anchorPosition,\n            anchorReference,\n            PaperProps: {\n                className: classes.menu,\n            },\n            MenuListProps: {\n                className: classes.menuList,\n                // Remove space for scrollbar\n                style: {\n                    paddingRight: 0,\n                    width: '100%',\n                },\n            },\n        },\n        ref,\n    )\n\n    useEffect(() => {\n        window.addEventListener('scroll', closeMenu)\n        return () => window.removeEventListener('scroll', closeMenu)\n    }, [closeMenu])\n\n    const platformIcons = useMemo(() => {\n        return uniqBy(orderedBindings, (x) => x.platform)\n            .map((x) => resolveNextIDPlatformIcon(x.platform))\n            .filter(isNonNull)\n            .slice(0, 3)\n    }, [orderedBindings])\n\n    if (!platformIcons.length) return null\n\n    return (\n        <div {...rest}>\n            <Button variant=\"text\" onClick={openMenu} className={classes.iconStack} disableRipple>\n                {platformIcons.map((Icon, index) => (\n                    <Icon key={Icon.displayName || index} className={classes.icon} size={20} />\n                ))}\n            </Button>\n            {menu}\n        </div>\n    )\n})\n","import { isEqual } from 'lodash-es'\nimport { Icons } from '@masknet/icons'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { TokenIcon } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { RadioButtonUnchecked as RadioButtonUncheckedIcon } from '@mui/icons-material'\nimport { MenuItem, Stack, Typography } from '@mui/material'\nimport { useTheme } from '@mui/system'\n\nconst useStyles = makeStyles()((theme) => ({\n    menuItem: {\n        display: 'flex',\n        overflow: 'hidden',\n        alignItems: 'center',\n        height: 36,\n        padding: '0 12px',\n    },\n    itemText: {\n        flexDirection: 'row',\n        flexGrow: 1,\n        justifyContent: 'space-around',\n        gap: theme.spacing(1),\n        alignItems: 'center',\n        overflow: 'hidden',\n    },\n    itemCheckout: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    rank: {\n        marginRight: 4,\n    },\n    name: {\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n    },\n    symbol: {\n        marginLeft: theme.spacing(0.5),\n    },\n    coinIcon: {\n        marginRight: 4,\n    },\n    checkedIcon: {\n        filter: 'drop-shadow(0px 4px 10px rgba(28, 104, 243, 0.2))',\n        color: theme.palette.maskColor.primary,\n    },\n}))\n\nexport interface TokenMenuListProps {\n    options: Web3Helper.TokenResultAll[]\n    currentOption?: Web3Helper.TokenResultAll\n    onSelect(value: Web3Helper.TokenResultAll, index: number): void\n    fromSocialCard?: boolean\n}\n\nexport function TokenMenuList({ options, currentOption, onSelect, fromSocialCard = false }: TokenMenuListProps) {\n    const { classes } = useStyles()\n    const theme = useTheme()\n    return (\n        <>\n            {options.map((x, i) => {\n                const selected = isEqual(x, currentOption)\n                return (\n                    <MenuItem className={classes.menuItem} key={i} onClick={() => onSelect(x, i)}>\n                        <TokenIcon\n                            className={classes.coinIcon}\n                            logoURL={x.logoURL}\n                            address={x.address || ''}\n                            symbol={x.symbol}\n                            size={20}\n                        />\n\n                        <Stack className={classes.itemText}>\n                            <Typography\n                                fontSize={14}\n                                fontWeight={700}\n                                flexGrow={1}\n                                overflow=\"hidden\"\n                                textOverflow=\"ellipsis\">\n                                <span className={classes.name}>{x.name}</span>\n                                {x.symbol ? <span className={classes.symbol}>({x.symbol})</span> : null}\n                            </Typography>\n                            <div className={classes.itemCheckout}>\n                                {x.rank ? (\n                                    <Typography\n                                        fontSize={14}\n                                        fontWeight={700}\n                                        flexGrow={1}\n                                        overflow=\"hidden\"\n                                        className={classes.rank}\n                                        textOverflow=\"ellipsis\">\n                                        #{x.rank}\n                                    </Typography>\n                                ) : null}\n                                {fromSocialCard ? null : selected ? (\n                                    <Icons.CheckCircle size={20} className={classes.checkedIcon} />\n                                ) : (\n                                    <RadioButtonUncheckedIcon\n                                        style={{\n                                            fontSize: 20,\n                                            color: theme.palette.maskColor.secondaryLine,\n                                            visibility: 'hidden',\n                                        }}\n                                    />\n                                )}\n                            </div>\n                        </Stack>\n                    </MenuItem>\n                )\n            })}\n        </>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { AccountIcons, AddressItem, TokenMenuList, useTokenMenuCollectionList } from '@masknet/shared'\nimport type { SocialAccount } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { isSameAddress, type SearchResultType } from '@masknet/web3-shared-base'\nimport { Divider, Menu, MenuItem, Typography, type MenuProps } from '@mui/material'\nimport { groupBy, toPairs } from 'lodash-es'\nimport { memo, useCallback, type PropsWithChildren } from 'react'\nimport { useSharedTrans } from '../../../locales/index.js'\n\nconst MENU_ITEM_HEIGHT = 40\nconst MENU_LIST_PADDING = 8\n\nconst useStyles = makeStyles()((theme) => ({\n    groupName: {\n        height: 18,\n        marginTop: 5,\n        fontWeight: 700,\n        fontSize: 14,\n        padding: '0 12px',\n    },\n\n    group: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n\n    addressMenu: {\n        maxHeight: MENU_ITEM_HEIGHT * 9 + MENU_LIST_PADDING * 2,\n        minWidth: 320,\n        backgroundColor: theme.palette.maskColor.bottom,\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 4px 30px rgba(255, 255, 255, 0.15)'\n                : '0px 4px 30px rgba(0, 0, 0, 0.1)',\n        borderRadius: 16,\n    },\n\n    divider: {\n        margin: theme.spacing(1, 0),\n        width: 'calc(100% - 24px)',\n        color: theme.palette.maskColor.line,\n        borderColor: theme.palette.maskColor.line,\n        position: 'relative',\n        left: 12,\n    },\n    menuItem: {\n        height: MENU_ITEM_HEIGHT,\n        boxSizing: 'border-box',\n        display: 'flex',\n        alignItems: 'center',\n        flexGrow: 1,\n        justifyContent: 'space-between',\n    },\n    addressItem: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    secondLinkIcon: {\n        color: theme.palette.maskColor.secondaryDark,\n    },\n    selectedIcon: {\n        color: theme.palette.maskColor.primary,\n        marginLeft: theme.spacing(2),\n    },\n}))\n\nexport interface TokenWithSocialGroupProps extends PropsWithChildren<MenuProps> {\n    collectionList: Web3Helper.TokenResultAll[]\n    currentCollection?: Web3Helper.TokenResultAll\n    socialAccounts?: Array<SocialAccount<Web3Helper.ChainIdAll>>\n    currentAddress?: string\n    onTokenChange?: (a: Web3Helper.TokenResultAll, index: number) => void\n    onClose?: () => void\n    onAddressChange?: (address: string) => void\n    fromSocialCard?: boolean\n}\n\nconst menuGroupNameMap: Record<'FungibleToken' | 'NonFungibleToken' | 'NonFungibleCollection', string> = {\n    FungibleToken: 'Token',\n    NonFungibleToken: 'NFT',\n    NonFungibleCollection: 'NFT',\n}\n\nexport const TokenWithSocialGroupMenu = memo(function TokenWithSocialGroupMenu({\n    currentCollection,\n    collectionList: collectionList_,\n    disablePortal = true,\n    disableScrollLock = true,\n    socialAccounts,\n    currentAddress,\n    onAddressChange,\n    fromSocialCard,\n    onTokenChange,\n    onClose,\n    ...rest\n}: TokenWithSocialGroupProps) {\n    const { classes } = useStyles()\n    const t = useSharedTrans()\n\n    const onSelect = useCallback(\n        (value: Web3Helper.TokenResultAll, index: number) => {\n            onTokenChange?.(value, index)\n            onClose?.()\n        },\n        [onTokenChange, onClose],\n    )\n\n    const collectionList = useTokenMenuCollectionList(collectionList_, currentCollection)\n\n    const groups: Array<\n        [\n            type: SearchResultType.FungibleToken | SearchResultType.NonFungibleToken,\n            collectionList: Web3Helper.TokenResultAll[],\n        ]\n    > = toPairs(groupBy(collectionList, (x) => x.type)).map(([type, collectionList]) => [\n        type as SearchResultType.FungibleToken | SearchResultType.NonFungibleToken,\n        collectionList,\n    ])\n\n    return (\n        <Menu\n            disablePortal={disablePortal}\n            disableScrollLock={disableScrollLock}\n            PaperProps={{\n                className: classes.addressMenu,\n            }}\n            onClose={onClose}\n            {...rest}>\n            {groups.map(([type, groupOptions]) => (\n                <div key={type} className={classes.group}>\n                    <Typography className={classes.groupName}>{menuGroupNameMap[type]}</Typography>\n                    <Divider className={classes.divider} />\n                    <TokenMenuList\n                        options={groupOptions}\n                        currentOption={currentCollection}\n                        onSelect={onSelect}\n                        fromSocialCard={fromSocialCard}\n                    />\n                </div>\n            ))}\n\n            <div key=\"rss3\" className={classes.group}>\n                {collectionList?.length > 0 && socialAccounts?.length ? (\n                    <>\n                        <Typography className={classes.groupName}>{t.address_viewer_address_name_address()}</Typography>\n                        <Divider className={classes.divider} />\n                    </>\n                ) : null}\n                {socialAccounts?.map((x) => {\n                    return (\n                        <MenuItem\n                            className={classes.menuItem}\n                            key={x.address}\n                            value={x.address}\n                            onClick={() => {\n                                onAddressChange?.(x.address)\n                                onClose?.()\n                            }}>\n                            <div className={classes.addressItem}>\n                                <AddressItem socialAccount={x} linkIconClassName={classes.secondLinkIcon} />\n                                <AccountIcons socialAccount={x} />\n                            </div>\n                            {isSameAddress(currentAddress, x.address) && (\n                                <Icons.CheckCircle size={20} className={classes.selectedIcon} />\n                            )}\n                        </MenuItem>\n                    )\n                })}\n            </div>\n        </Menu>\n    )\n})\n","import type { Web3Helper } from '@masknet/web3-helpers'\nimport { DSearch } from '@masknet/web3-providers'\nimport { SearchResultType } from '@masknet/web3-shared-base'\nimport { useAsync } from 'react-use'\n\nexport function useCollectionByTwitterHandler(twitterHandler?: string) {\n    return useAsync(async () => {\n        if (!twitterHandler) return\n        return DSearch.search<Web3Helper.TokenResultAll>(\n            twitterHandler,\n            SearchResultType.CollectionListByTwitterHandler,\n        )\n    }, [twitterHandler])\n}\n","import {\n    type SyntheticEvent,\n    cloneElement,\n    isValidElement,\n    useCallback,\n    useState,\n    type MutableRefObject,\n    createElement,\n} from 'react'\nimport { useUpdate } from 'react-use'\nimport { Menu, type MenuProps } from '@mui/material'\nimport { makeStyles, ShadowRootMenu } from '@masknet/theme'\n\n/**\n * A util hooks for easier to use `<Menu>`s.\n *\n * If you need configuration, please use useMenuConfig\n */\n// ! Do not change signature of this. Change useMenuConfig instead.\nexport function useMenu(...elements: Array<JSX.Element | null>) {\n    return useMenuConfig(elements, {})\n}\n\nexport interface MenuConfigOptions extends Partial<MenuProps> {\n    anchorSibling?: boolean\n    useShadowRoot?: boolean\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    menu: {\n        // TODO: replace hard code to theme\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 0px 20px rgba(255, 255, 255, 0.12)'\n                : '0px 4px 30px rgba(0, 0, 0, 0.1)',\n    },\n}))\n\nexport function useMenuConfig(\n    elements: Array<JSX.Element | null>,\n    config: MenuConfigOptions,\n    ref?: MutableRefObject<HTMLDivElement | null>,\n): [\n    menu: React.ReactNode,\n    openDialog: (anchorElOrEvent: HTMLElement | SyntheticEvent<HTMLElement>) => void,\n    closeDialog: () => void,\n    open: boolean,\n] {\n    const { classes } = useStyles()\n    const { anchorSibling = false, useShadowRoot = true, ...menuProps } = config\n    const [open, setOpen] = useState(false)\n    const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n    const close = () => {\n        setOpen(false)\n        setAnchorEl(null)\n    }\n    const update = useUpdate()\n    return [\n        createElement(\n            useShadowRoot ? ShadowRootMenu : Menu,\n            {\n                ...menuProps,\n                PaperProps: menuProps?.PaperProps,\n                classes: { paper: classes.menu, ...menuProps.classes },\n                MenuListProps: menuProps?.MenuListProps,\n                open,\n                anchorEl,\n                ref,\n                onClose: close,\n                onClick: close,\n                anchorOrigin: menuProps?.anchorOrigin,\n                transformOrigin: menuProps?.transformOrigin,\n                disableScrollLock: true,\n            },\n            elements?.map((element, key) =>\n                isValidElement<object>(element) ? cloneElement(element, { ...element.props, key }) : element,\n            ),\n        ),\n        useCallback((anchorElOrEvent: HTMLElement | SyntheticEvent<HTMLElement>) => {\n            let element: HTMLElement\n            if (anchorElOrEvent instanceof HTMLElement) {\n                element = anchorElOrEvent\n            } else {\n                element = anchorElOrEvent.currentTarget\n            }\n\n            // when the essential content of currentTarget would be closed over,\n            //  we can set the anchorEl with currentTarget's bottom sibling to avoid it.\n            const finalAnchor = anchorSibling ? (element.nextElementSibling as HTMLElement) ?? undefined : element\n            setAnchorEl(finalAnchor)\n            setOpen(true)\n            // HACK: it seems like anchor doesn't work correctly\n            // but a force repaint can solve the problem.\n            window.requestAnimationFrame(update)\n        }, []),\n        useCallback(() => {\n            setOpen(false)\n            setAnchorEl(null)\n        }, []),\n        open,\n    ]\n}\n","import { useCallback, useMemo } from 'react'\nimport { PluginID, SocialAddressType, type SocialAccount, type SocialIdentity } from '@masknet/shared-base'\nimport { useHiddenAddressConfigOf, useSocialAccountsAll } from '@masknet/web3-hooks-base'\nimport { currySameAddress } from '@masknet/web3-shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { WalletAPI } from '@masknet/web3-providers/types'\n\nexport function useSocialAccountsBySettings(\n    identity: SocialIdentity | null | undefined,\n    typeWhitelist: SocialAddressType[] | undefined,\n    sorter: ((a: SocialAccount<Web3Helper.ChainIdAll>, z: SocialAccount<Web3Helper.ChainIdAll>) => number) | undefined,\n    signWithPersona: WalletAPI.IOContext['signWithPersona'],\n) {\n    const {\n        data: socialAccounts,\n        isLoading: loadingSocialAccounts,\n        error: loadSocialAccountsError,\n        refetch: refetchSocialAccounts,\n    } = useSocialAccountsAll(identity, typeWhitelist, sorter)\n    const userId = identity?.identifier?.userId\n    const {\n        data: hiddenAddress,\n        isFetching: loadingHiddenAddress,\n        isInitialLoading,\n        error: loadingHiddenAddressError,\n        refetch: refetchLoadHiddenAddress,\n    } = useHiddenAddressConfigOf(identity?.publicKey, PluginID.Web3Profile, userId, signWithPersona)\n\n    const addresses = useMemo(() => {\n        if (!hiddenAddress || !socialAccounts) return socialAccounts\n\n        return socialAccounts.filter((x) => {\n            if (!x.supportedAddressTypes?.includes(SocialAddressType.NEXT_ID)) return true\n            return !hiddenAddress.some(currySameAddress(x.address))\n        })\n    }, [socialAccounts, hiddenAddress, loadingHiddenAddress])\n\n    const refetch = useCallback(() => {\n        refetchSocialAccounts()\n        refetchLoadHiddenAddress()\n    }, [])\n\n    return {\n        data: addresses,\n        isLoading: loadingSocialAccounts || loadingHiddenAddress,\n        isInitialLoading,\n        error: loadSocialAccountsError || loadingHiddenAddressError,\n        refetch,\n    }\n}\n","import { uniqBy } from 'lodash-es'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { SourceType } from '@masknet/web3-shared-base'\n\nexport function useTokenMenuCollectionList(\n    collectionList_: Web3Helper.TokenResultAll[],\n    currentCollection?: Web3Helper.TokenResultAll,\n) {\n    const collectionList = uniqBy(\n        collectionList_,\n        (x) => `${x.address?.toLowerCase()}_${x.chainId}_${x.type}_${x.name?.toLowerCase()}_${x.source}`,\n    )\n\n    const SourceTypeList = collectionList.map((x) => x.source)\n\n    return collectionList.filter((x) => {\n        if (\n            currentCollection &&\n            x.source !== currentCollection.source &&\n            [SourceType.CoinMarketCap, SourceType.CoinGecko].includes(currentCollection.source) &&\n            [SourceType.CoinMarketCap, SourceType.CoinGecko].includes(x.source)\n        ) {\n            return false\n        }\n\n        if (\n            (currentCollection?.source === SourceType.NFTScan || !currentCollection) &&\n            SourceTypeList.includes(SourceType.CoinGecko) &&\n            x.source === SourceType.CoinMarketCap\n        ) {\n            return false\n        }\n\n        return true\n    })\n}\n","import type { Web3Helper } from '@masknet/web3-helpers'\nimport { type SocialAccount, SocialAddressType } from '@masknet/shared-base'\n\nexport function addressSorter(\n    a: SocialAccount<Web3Helper.ChainIdAll>,\n    z: SocialAccount<Web3Helper.ChainIdAll>,\n): number {\n    if (a.supportedAddressTypes?.includes(SocialAddressType.NEXT_ID)) return -1\n    if (z.supportedAddressTypes?.includes(SocialAddressType.NEXT_ID)) return 1\n    return 0\n}\n","import { Menu } from '@mui/material'\nimport { createShadowRootForwardedComponent } from '../../ShadowRoot/index.js'\n\nexport const ShadowRootMenu = createShadowRootForwardedComponent(Menu)\nShadowRootMenu.displayName = 'ShadowRootTooltip'\n","import { useQuery } from '@tanstack/react-query'\nimport { Firefly } from '@masknet/web3-providers'\nimport type { FireflyBaseAPI } from '@masknet/web3-providers/types'\n\nexport function useFireflyLensAccounts(twitterId?: string, isVerified?: boolean) {\n    return useQuery<FireflyBaseAPI.LensAccount[]>({\n        queryKey: ['firefly', 'lens', twitterId, isVerified],\n        enabled: !!twitterId,\n        queryFn: () => Firefly.getLensByTwitterId(twitterId, isVerified),\n    })\n}\n","import { EMPTY_LIST, EMPTY_OBJECT, NextIDPlatform, type PluginID, type PersonaIdentifier } from '@masknet/shared-base'\nimport { useQuery, type UseQueryResult } from '@tanstack/react-query'\nimport { Web3Storage } from '@masknet/web3-providers'\nimport { useCallback, useMemo } from 'react'\nimport type { WalletAPI } from '@masknet/web3-providers/types'\n\ntype AddressData = Record<string, string[]> | string[]\ntype StorageValueV1 = string[]\ntype StorageValueV2 = { hiddenAddresses?: string[] }\ntype StorageValueV3 = { hiddenAddresses?: Record<string, string[]> }\ntype CurrentStorageValue = StorageValueV3\ntype StorageValue = StorageValueV1 | StorageValueV2 | StorageValueV3\n\n/**\n *\n * Get unlisted address by persona pubkey.\n *\n * @param personaPubkey The persona identifier in hex string\n * @param pluginID The plugin id as store key\n * @returns\n */\nexport function useHiddenAddressConfig(\n    personaPubkey: string | undefined,\n    pluginID: PluginID | undefined,\n    signWithPersona: WalletAPI.IOContext['signWithPersona'],\n) {\n    return useQuery({\n        queryKey: ['next-id', 'hidden-address', pluginID, personaPubkey],\n        enabled: !!personaPubkey,\n        queryFn: async () => {\n            if (!pluginID || !personaPubkey) return EMPTY_OBJECT\n            const storage = Web3Storage.createNextIDStorage(\n                personaPubkey,\n                NextIDPlatform.NextID,\n                personaPubkey,\n                signWithPersona,\n            )\n\n            const result = await storage.get<StorageValue>(pluginID)\n            if (!result) return EMPTY_OBJECT\n\n            // When the tips data is legacy\n            if (Array.isArray(result)) return result\n\n            if (!result.hiddenAddresses) return EMPTY_OBJECT\n\n            if (Array.isArray(result.hiddenAddresses)) return result.hiddenAddresses\n            return result.hiddenAddresses ?? EMPTY_OBJECT\n        },\n    })\n}\n\nexport function useHiddenAddressConfigOf(\n    personaPubkey: string | undefined,\n    pluginID: PluginID | undefined,\n    socialId: string | undefined,\n    signWithPersona: WalletAPI.IOContext['signWithPersona'],\n) {\n    const result = useHiddenAddressConfig(personaPubkey, pluginID, signWithPersona)\n    return {\n        ...result,\n        // Identities of Twitter proof get lowered case.\n        data: result.data ? getHiddenAddressesOf(result.data, socialId?.toLowerCase()) : undefined,\n    }\n}\n\ninterface Options {\n    /** To update storage, a signer is required */\n    identifier?: PersonaIdentifier\n    pluginID: PluginID\n    /** For data migration */\n    socialIds?: string[]\n}\n\ntype ConfigResult = [UseQueryResult<Record<string, string[]>>, (config: Record<string, string[]>) => Promise<void>]\n/**\n * Provider address config and data updater\n */\nexport function useUnlistedAddressConfig(\n    { identifier, pluginID, socialIds }: Options,\n    signWithPersona: WalletAPI.IOContext['signWithPersona'],\n): ConfigResult {\n    const query = useHiddenAddressConfig(identifier?.publicKeyAsHex, pluginID, signWithPersona)\n    const { data: unlistedAddressConfig } = query\n\n    const migratedUnlistedAddressConfig = useMemo(() => {\n        if (!unlistedAddressConfig || !socialIds?.length) return EMPTY_OBJECT\n        if (!Array.isArray(unlistedAddressConfig)) return unlistedAddressConfig\n\n        return hiddenAddressesAdapter(unlistedAddressConfig, socialIds)\n    }, [unlistedAddressConfig, socialIds])\n\n    const updateConfig = useCallback(\n        async (config: Record<string, string[]>) => {\n            if (!identifier) return\n            const storage = Web3Storage.createNextIDStorage(\n                identifier.publicKeyAsHex,\n                NextIDPlatform.NextID,\n                identifier,\n                signWithPersona,\n            )\n            await storage.set<CurrentStorageValue>(pluginID, {\n                hiddenAddresses: config,\n            })\n        },\n        [pluginID, identifier],\n    )\n\n    return [{ ...query, data: migratedUnlistedAddressConfig } as UseQueryResult<Record<string, string[]>>, updateConfig]\n}\n\nexport function hiddenAddressesAdapter(list: string[], accounts: string[]): Record<string, string[]> {\n    return Object.fromEntries(accounts.map((account) => [account, list]))\n}\n\nexport function getHiddenAddressesOf(config?: AddressData, socialId?: string) {\n    if (!config) return EMPTY_LIST\n    if (Array.isArray(config)) return config\n    return socialId ? config[socialId] ?? EMPTY_LIST : EMPTY_LIST\n}\n","import { SnapshotSearch } from '@masknet/web3-providers'\nimport { useAsyncRetry } from 'react-use'\n\nexport function useSnapshotSpacesByTwitterHandler(twitterHandler: string) {\n    return useAsyncRetry(async () => {\n        if (!twitterHandler) return\n        const spaceList = await SnapshotSearch.get()\n        return spaceList.filter((x) => x.twitterHandler?.toLowerCase() === twitterHandler.toLowerCase())\n    }, [twitterHandler])\n}\n"],"names":["useCallback","useEffect","useState","useMount","Typography","MaskMessages","ProfileTabs","Sniffings","useMatchXS","useLocationChange","ProfileTab","props","reset","clear","children","classes","title","type","WEB3","active","setActive","isMobile","switchToTab","events","profileTabUpdated","sendToLocal","show","onClick","is_twitter_page","location","assign","hash","pathname","testId","document","activeElement","dataset","testid","profileTabActive","on","data","div","className","root","button","selected","component","icon","Icons","CrossIsolationMessages","makeStyles","Button","Stack","memo","useSharedTrans","useStyles","theme","display","gap","spacing","minWidth","borderRadius","width","openWeb3ProfileSettingDialog","web3ProfileDialogEvent","open","WalletSettingEntry","t","flex","fontWeight","fontSize","color","palette","maskColor","second","show_wallet_setting_intro","direction","justifyContent","Settings","size","show_wallet_setting_button","useMemo","useRef","useUpdateEffect","first","TabContext","Link","Tab","ThemeProvider","useQuery","Telemetry","EventType","EventID","useActivatedPluginsSiteAdaptor","useIsMinimalMode","usePluginTransField","getProfileTabContent","getAvailablePlugins","AddressItem","ConnectPersonaBoundary","GrantPermissions","PluginCardFrameMini","useCurrentPersonaConnectStatus","useSocialAccountsBySettings","TokenWithSocialGroupMenu","SocialAccountList","useCollectionByTwitterHandler","addressSorter","EMPTY_LIST","NextIDPlatform","PluginID","currentPersonaIdentifier","useValueRef","MaskLightTheme","MaskTabList","useTabs","NextIDProof","isSameAddress","ScopedDomainsContainer","useSnapshotSpacesByTwitterHandler","useMaskSharedTrans","useCurrentVisitingIdentity","useLastRecognizedIdentity","useSocialIdentity","useSocialIdentityByUserId","useGrantPermissions","usePluginHostPermissionCheck","SearchResultInspector","usePersonasFromDB","Services","is_facebook_page","main","container","background","padding","alignItems","marginBottom","walletItem","settingLink","cursor","marginTop","zIndex","textDecoration","content","position","walletButton","settingItem","tabs","gearIcon","dark","linkOutIcon","secondaryDark","mainLinkIcon","margin","reload","ProfileTabContent","Provider","Content","undefined","translate","hidden","setHidden","profileTabType","setProfileTabType","menuOpen","setMenuOpen","closeMenu","allPersonas","lastRecognized","currentIdentifier","value","personaStatus","loading","loadingPersonaStatus","error","loadPersonaStatusError","retry","retryLoadPersonaStatus","Helper","openDashboard","currentVisitingSocialIdentity","currentSocialIdentity","currentVisitingUserId","identifier","userId","isOwnerIdentity","isOwner","socialAccounts","isLoading","loadingSocialAccounts","loadSocialAccounts","refetch","retrySocialAccounts","a","b","c","d","Identity","signWithPersona","origin","selectedAddress","address","setSelectedAddress","selectedSocialAccount","find","x","setPair","useContainer","label","ownProofChanged","activatedPlugins","displayPlugins","plugins","flatMap","map","y","pluginID","ID","filter","shouldDisplay","Utils","NextID","sort","z","priority","id","currentTab","onChange","Collectible","tab","isWeb3ProfileDisabled","Web3Profile","isOnTwitter","doesOwnerHaveNoAddress","proof","findIndex","p","platform","Ethereum","myPersonaNotVerifiedYet","verified","showNextID","length","componentTabId","contentComponent","Component","identity","socialAccount","lackHostPermission","ProfileCardTabs","lackPluginId","lackPluginDefine","onGrant","enableRequirement","host_permissions","RSS3","captureEvent","Access","EntryProfileUserSocialSwitchTo","EntryProfileUserActivitiesSwitchTo","EntryProfileUserDonationsSwitchTo","profileTabHidden","isHideInspector","hideInspector","hideSearchResultInspectorEvent","ev","hide","listener","window","addEventListener","removeEventListener","buttonRef","onSelect","collectionList","spaceList","DAO","currentTrendingIndex","setCurrentTrendingIndex","trendingResult","nextIdBindings","queryProfilesByTwitterId","keyword","name","searchResults","isProfilePage","currentSearchResult","permissions","handleClick","lineHeight","danger","load_failed","publicMain","web3_profile_no_social_address_list","variant","ref","isMenu","event","preventDefault","stopPropagation","linkIconClassName","TypographyProps","onClose","anchorEl","current","onAddressChange","currentAddress","currentCollection","onTokenChange","_","i","fromSocialCard","marginRight","powered_by","mask_network","personas","customHint","handlerPosition","directTo","Gear","sx","href","target","rel","LinkOut","aria-label","useAvatarTrans","boxSizing","paddingLeft","paddingRight","text","primary","backgroundColor","setIcon","height","marginLeft","buttonText","NFTAvatarButton","role","Avatar","style","nft_avatar","showSetting","GearSettings","RainbowBox","overflow","boxShadow","transition","border","NFTAvatarRing","stroke","strokeWidth","price","hasRainbow","borderSize","avatarSize","R","path_r","x1","y1","x2","svgNode","svg","viewBox","defs","path","fill","linearGradient","y2","stop","offset","stopColor","g","circle","cx","cy","r","pattern","patternUnits","navigator","userAgent","includes","animateTransform","attributeName","attributeType","dur","repeatCount","from","to","textAnchor","fontFamily","textPath","xlinkHref","startOffset","rotate","tspan","is_firefox","dy","openWindow","formatPrice","formatText","NFTBadge","nftInfo","e","permalink","tokenId","amount","symbol","AvatarType","LoadingBase","useCheckPersonaNFTAvatar","transform","NFTBadgeTimeline","avatarId","siteKey","_avatar","avatar","setAvatar","avatarId_","setAvatarId_","onUpdate","NFTAvatarTimelineUpdated","radius","avatarType","Square","keyframes","rainbowBorderKeyFrames","animation","Web3Storage","EnhanceableSite","NFT_AVATAR_DB_NAME","useSaveAddress","account","network","addressStorage","createKVStorage","Twitter","prevData","get","catch","set","networkPluginID","getEnhanceableSiteType","getSiteType","PLUGIN_NAME","useSaveStringStorage","saveAddress","nft","stringStorage","createFireflyStorage","replace","Storage","NetworkPluginID","useGetAddress","site","storageV1","storageV2","storage","PLUGIN_EVM","StorageKey","useGetNFTAvatarFromStorage","useGetNFTAvatarFromRSS3","key","rss3Storage","createRSS3Storage","result","NFT_AVATAR_METADATA_STORAGE","useGetNFTAvatar","getNFTAvatarFromRSS","getNFTAvatarFromStorage","getAddress","user","useAsyncRetry","ChainId","useWeb3Connection","useWeb3Hub","useWeb3Others","formatBalance","CurrencyType","useNFT","chainId","Mainnet","ownerAddress","Others","Hub","Web3","allSettled","Promise","getNonFungibleToken","getNonFungibleAsset","token","asset","status","metadata","priceInToken","decimals","USD","imageURL","link","explorerResolver","nonFungibleTokenLink","image","owner","ownerId","slug","collection","LRUCache","getNFTAvatarByUserId","cache","max","ttl","usePersonaNFTAvatar","persona","getNFTAvatar","has","nftAvatar","getNFTAvatarForCache","fn","avatarMetaFromPersona","siteType","avatarMeta","pluginId","PLUGIN_SOLANA","imageUrl","nickname","metaData","getUserNftContainer","token_id","useWallet","createElement","useTranslation","Trans","createProxy","initValue","define","Object","defineProperty","configurable","__proto__","Proxy","getPrototypeOf","setPrototypeOf","v","getOwnPropertyDescriptor","bind","createComponent","i18nKey","ns","shouldUnescape","AvatarTrans","PFP_TYPE","BACKGROUND","PFP","Clip","Circle","Default","getImageBlobResized","img","resolve","canvas","context","getContext","w","naturalWidth","h","naturalHeight","scale","Math","min","setTransform","drawImage","toBlob","fetchImageViaDOM","url","reject","cleanup","onload","onerror","decoding","crossOrigin","src","fetchImageViaHTTP","response","fetch","headers","accept","ok","blob","isNull","BigNumber","attemptUntil","isLocaleResource","resolveCrossOriginURL","resolveResourceURL","NextIDStorageProvider","PLUGIN_ID","fetchBlob","getImage","blobToBase64","reader","FileReader","onloadend","readAsDataURL","fetchImage","resolvedURL","toPNG","isBase64","imageData","Image","ctx","Error","setAttribute","URL","createObjectURL","_amount","isZero","isLessThan","toFixed","slice","formatTokenId","formatAddress","getAvatarFromNextIDStorage","getByIdentity","toLowerCase","isOk","sortPersonaBindings","p_a","proofs","p_b","last_checked_at","bindings","queryAllExistedBindingsByPlatform","binding","handler","SocialAddressType","ShadowRootTooltip","resolveSocialAddressLink","compact","Linking","iconStack","stackedIcon","linking","actionIcon","roundedIcon","tooltip","maxWidth","AddressPlatform","Facebook","NextId","AccountTooltips","disableInteractive","Address","account_icon_tooltips_only","account_icon_tooltips","source","arrow","AccountIcons","externalClasses","supportedAddressTypes","iconStyle","mode","backdropFilter","fromTwitter","ENS","SPACE_ID","ARBID","Lens","TwitterBlue","fromNextId","NEXT_ID","normalClasses","roundedClasses","configs","NextIDMini","TwitterXRound","CyberConnect","Leaderboard","Sybil","Mask","MaskBlue","Firefly","OpenSea","SpaceId","node","LinkProps","sources","config","account_icon_merged_tooltip","span","Box","isEnsSubdomain","ReversedAddress","arrowDropIcon","disableLinkIcon","preferAddress","addressLink","supportedChainIds","getDefaultChainId","ArrowDrop","canParse","hostname","LoadingStatus","minHeight","web3Icon","item1","item2","provider","providerLink","PluginName","plugin_card_frame_default_title","plugin_card_frame_default_provided_by","plugin_card_frame_default_provided_by_value","underline","alignSelf","iconSize","plugin_card_frame_loading","useReverseAddress","useBoundedPopperProps","rest","domain","showDomain","isValidDomain","uiLabel","formatDomainName","hasEllipsis","popperProps","PopperProps","whiteSpace","displayName","resolveNextIDPlatformName","cloneElement","SocialTooltip","inView","setInView","el","observer","IntersectionObserver","entries","entry","isIntersecting","rootMargin","observe","unobserve","placement","createLookupTableResolver","resolveNextIDPlatformIcon","ETH","GitHub","Keybase","LENS","REDDIT","RedditRound","SYBIL","EthLeaderboard","Farcaster","Bit","Unstoppable","Web","CopyButton","ActionButton","MaskColors","useChainContext","resolveNextIDPlatformLink","MenuItem","useAsync","listItem","bg","socialName","accountName","textOverflow","light","secondary","addressText","copyButton","followButton","linkIcon","related","lineBreak","flexWrap","ens","bottom","ENSAddress","lookup","SocialAccountListItem","relatedList","profileUrl","profile","getProfileByHandle","isFollowing","queryFollowStatus","ownedBy","PlatformIcon","renderIcon","fallback","disableRipple","disabled","isValidAddress","disableElevation","followLensDialogEvent","handle","view","lens_following","lens_follow","isNonNull","useMenuConfig","uniqBy","useFireflyLensAccounts","menu","maxHeight","menuList","FireflyLensToNextIdLens","created_at","is_valid","disablePortal","anchorPosition","anchorReference","lensAccounts","orderedBindings","merged","openMenu","isLens","profileUri","hideBackdrop","anchorSibling","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","MenuListProps","platformIcons","Icon","index","isEqual","TokenIcon","RadioButtonUnchecked","RadioButtonUncheckedIcon","useTheme","menuItem","itemText","flexDirection","flexGrow","itemCheckout","rank","coinIcon","checkedIcon","TokenMenuList","options","currentOption","logoURL","CheckCircle","secondaryLine","visibility","useTokenMenuCollectionList","Divider","Menu","groupBy","toPairs","MENU_ITEM_HEIGHT","MENU_LIST_PADDING","groupName","group","addressMenu","divider","line","borderColor","left","addressItem","secondLinkIcon","selectedIcon","menuGroupNameMap","FungibleToken","NonFungibleToken","NonFungibleCollection","collectionList_","disableScrollLock","groups","groupOptions","address_viewer_address_name_address","DSearch","SearchResultType","twitterHandler","search","CollectionListByTwitterHandler","isValidElement","useUpdate","ShadowRootMenu","useMenu","elements","useShadowRoot","menuProps","setOpen","setAnchorEl","close","update","paper","element","anchorElOrEvent","HTMLElement","currentTarget","finalAnchor","nextElementSibling","requestAnimationFrame","useHiddenAddressConfigOf","useSocialAccountsAll","currySameAddress","typeWhitelist","sorter","loadSocialAccountsError","refetchSocialAccounts","hiddenAddress","isFetching","loadingHiddenAddress","isInitialLoading","loadingHiddenAddressError","refetchLoadHiddenAddress","publicKey","addresses","some","SourceType","SourceTypeList","CoinMarketCap","CoinGecko","NFTScan","createShadowRootForwardedComponent","twitterId","isVerified","queryKey","enabled","queryFn","getLensByTwitterId","EMPTY_OBJECT","useHiddenAddressConfig","personaPubkey","createNextIDStorage","Array","isArray","hiddenAddresses","socialId","getHiddenAddressesOf","useUnlistedAddressConfig","socialIds","query","publicKeyAsHex","unlistedAddressConfig","migratedUnlistedAddressConfig","hiddenAddressesAdapter","updateConfig","list","accounts","fromEntries","SnapshotSearch"],"sourceRoot":"","x_google_ignoreList":[]}