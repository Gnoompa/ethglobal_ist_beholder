{"version":3,"file":"bundled/chunk.6439.js","mappings":"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ACA;AACA,CAAC,KAAK,8BAAQ;AACd,SAAS,kCAAoB,uBAAuB,OAAO,kCAAoB,mBAAmB;AAClG;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH,QAAQ,kCAAoB,SAAS;AACrC;AACA;AACA,CAAC;AACD,SAAS,kCAAoB,uBAAuB,OAAO,kCAAoB,mBAAmB;AAClG;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD,SAAS,kCAAoB,uBAAuB,OAAO,kCAAoB,mBAAmB;AAClG;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD,sCAAsC,0BAAM;AAC5C;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,+DAA+D,6BAAU,6BAA6B;AACtG;AACA,CAAC;AACD;AACA;AACA,CAAC,KAAK,8BAAQ;AACd;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD,mCAAmC,gBAAgB;AACnD,gBAAgB,gCAAa;AAC7B;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,gBAAgB,+CAA6B;;AAE7C,aAAa,wBAAK;AAClB,8FAA8F,mBAAI,CAAC,+BAAgB;AACnH;AACA;AACA;AACA,GAAG;;AAEH,qBAAqB,8BAAQ,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,+DAA+D,mBAAI;AACnE;AACA;AACA;AACA,GAAG;AACH,sBAAsB,oBAAK,oBAAoB,8BAAQ;AACvD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAuEvC,CAAC;AACF,kEAAe,aAAa;;;;;;;AC3Of;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;;;;;;;AClCC;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,iEAAiE,UAAU;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C,oCAAoC,WAAW;AAC/C;AACA,wCAAwC,cAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,+BAA+B,gBAAgB;AAC/C,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;ACjDN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrGa;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D,yBAAgB,GAAG,UAAe;AAClC,eAAe,mBAAO,CAAC,KAAkB;AACzC,uBAAuB,mBAAO,CAAC,KAA0B;AACzD,kBAAkB,mBAAO,CAAC,KAAW;AACrC,mBAAmB,mBAAO,CAAC,KAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAgB;;;;;;;;ACzEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa,MAAM,mBAAO,CAAC,IAA8B,EAAE,uBAAuB,aAAa;;;;;;;;ACTlF;;AAEb,IAAI,IAAqC;AACzC,EAAE,2CAAoE;AACtE,EAAE,KAAK,EAEN;;;;;;;;ACND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa,MAAM,mBAAO,CAAC,KAAO,EAAE,gBAAgB,+CAA+C,iHAAiH,gBAAgB,eAAe,MAAM,uBAAuB,qBAAqB,aAAa,UAAU,gBAAgB,SAAS,OAAO,EAAE,UAAU,aAAa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","sources":["webpack://mask-network/./packages/shared/src/UI/components/CompositionDialog/BadgeRenderer.tsx","webpack://mask-network/./packages/shared/src/UI/components/CompositionDialog/TypedMessageEditor.tsx","webpack://mask-network/./packages/shared/src/hooks/usePluginHostPermission.ts","webpack://mask-network/./packages/shared/src/UI/components/ClickableChip/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/CompositionDialog/PluginEntryRender.tsx","webpack://mask-network/./packages/shared/src/UI/components/CompositionDialog/CharLimitIndicator.tsx","webpack://mask-network/./packages/mask/content-script/components/shared/SelectRecipients/SelectRecipientsDialog.tsx","webpack://mask-network/./packages/mask/content-script/components/shared/SelectRecipients/SelectRecipients.tsx","webpack://mask-network/./packages/mask/content-script/components/CompositionDialog/PopoverListTrigger.tsx","webpack://mask-network/./packages/mask/content-script/components/CompositionDialog/PopoverListItem.tsx","webpack://mask-network/./packages/mask/content-script/components/CompositionDialog/EncryptionMethodSelector.tsx","webpack://mask-network/./packages/mask/content-script/components/CompositionDialog/EncryptionTargetSelector.tsx","webpack://mask-network/./packages/mask/content-script/components/CompositionDialog/CompositionUI.tsx","webpack://mask-network/./packages/mask/content-script/components/CompositionDialog/useCompositionClipboardRequest.tsx","webpack://mask-network/./packages/encryption/src/image-steganography/index.ts","webpack://mask-network/./packages/mask/content-script/resources/image-payload/index.ts","webpack://mask-network/./packages/mask/content-script/components/CompositionDialog/SteganographyPayload.ts","webpack://mask-network/./packages/mask/content-script/components/CompositionDialog/useSubmit.ts","webpack://mask-network/./packages/mask/content-script/components/CompositionDialog/Composition.tsx","webpack://mask-network/./packages/mask/content-script/components/GuideStep/index.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/PostDialogHint.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/ProfileCover.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/FiberManualRecord.js","webpack://mask-network/./packages/web3-hooks/base/src/useChainColor.ts","webpack://mask-network/./packages/web3-hooks/base/src/useChainIdMainnet.ts","webpack://mask-network/./packages/mask/content-script/components/DataSource/usePersonaPerSiteConnectStatus.ts","webpack://mask-network/./packages/mask/content-script/components/shared/openApplicationBoardDialog.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/ToolboxUnstyled.tsx","webpack://mask-network/./packages/mask/content-script/components/Welcomes/Banner.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/PostReplacer.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptor-infra/defaults/inject/PostReplacer.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/utils/isMobile.ts","webpack://mask-network/./packages/mask/content-script/utils/downloadUrl.ts","webpack://mask-network/./packages/mask/content-script/utils/selectElementContents.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/CompositionContext.ts","webpack://mask-network/./packages/shared-base-ui/src/hooks/usePersistSubscription.ts","webpack://mask-network/./packages/shared-base/src/Subscriptions/index.ts","webpack://mask-network/./packages/shared-base/src/helpers/compose.ts","webpack://mask-network/./packages/shared/src/UI/components/PersonaAction/PersonaAction.tsx","webpack://mask-network/./packages/shared/src/UI/components/PersonaAction/PersonaImageIcon.tsx","webpack://mask-network/./packages/shared/src/UI/components/PersonaAction/PlatformAvatar.tsx","webpack://mask-network/./packages/typed-message/react/src/Metadata/index.ts","webpack://mask-network/./packages/web3-hooks/base/src/useAccount.ts","webpack://mask-network/./packages/web3-hooks/base/src/useChainId.ts","webpack://mask-network/./packages/web3-hooks/base/src/useProviderType.ts","webpack://mask-network/./packages/web3-hooks/base/src/useContext.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useDefaultChainId.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWeb3Others.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWeb3State.ts","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Done.js","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/LoadingButton/LoadingButton.js","webpack://mask-network/./node_modules/.pnpm/@rgba-image+copy@0.1.3/node_modules/@rgba-image/copy/dist/index.js","webpack://mask-network/./node_modules/.pnpm/@rgba-image+create-image@0.1.1/node_modules/@rgba-image/create-image/dist/index.js","webpack://mask-network/./node_modules/.pnpm/@rgba-image+lanczos@0.1.1/node_modules/@rgba-image/lanczos/dist/convolve.js","webpack://mask-network/./node_modules/.pnpm/@rgba-image+lanczos@0.1.1/node_modules/@rgba-image/lanczos/dist/filters.js","webpack://mask-network/./node_modules/.pnpm/@rgba-image+lanczos@0.1.1/node_modules/@rgba-image/lanczos/dist/index.js","webpack://mask-network/./node_modules/.pnpm/use-subscription@1.8.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-subscription/cjs/use-subscription.production.min.js","webpack://mask-network/./node_modules/.pnpm/use-subscription@1.8.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-subscription/index.js","webpack://mask-network/./node_modules/.pnpm/use-sync-external-store@1.2.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","webpack://mask-network/./node_modules/.pnpm/use-sync-external-store@1.2.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-sync-external-store/shim/index.js","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/suspense.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/useQuery.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/utils.mjs"],"sourcesContent":["import { useActivatedPluginsSiteAdaptor, type Plugin, usePluginTransField } from '@masknet/plugin-infra/content-script'\nimport { makeStyles, ShadowRootTooltip } from '@masknet/theme'\nimport type { TypedMessage } from '@masknet/typed-message'\nimport { Box, Chip } from '@mui/material'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    chip: {\n        maxWidth: 500,\n        background: theme.palette.background.paper,\n        boxShadow: `0px 0px 20px 0px ${theme.palette.mode === 'dark' ? '#FFFFFF1F' : '#0000000D'}`,\n    },\n}))\n\ninterface BadgeRendererProps {\n    meta: TypedMessage['meta']\n    onDeleteMeta(metaID: string): void\n    readonly: boolean\n}\n\nexport function BadgeRenderer({ meta, onDeleteMeta, readonly }: BadgeRendererProps) {\n    const plugins = useActivatedPluginsSiteAdaptor('any')\n    const i18n = usePluginTransField()\n    const t = useSharedTrans()\n    if (!meta) return null\n\n    const result = [...meta.entries()].flatMap(([metaKey, metaValue]) => {\n        return plugins.map((plugin) => {\n            const render = plugin.CompositionDialogMetadataBadgeRender\n            if (!render) return null\n\n            try {\n                if (typeof render === 'function') {\n                    return normalizeBadgeDescriptor(render(metaKey, metaValue))\n                } else {\n                    const f = render.get(metaKey)\n                    if (!f) return null\n                    return normalizeBadgeDescriptor(f(metaValue))\n                }\n            } catch (error) {\n                console.error(error)\n                return null\n            }\n\n            function normalizeBadgeDescriptor(desc: Plugin.SiteAdaptor.BadgeDescriptor | string | null) {\n                if (!desc) return null\n                if (typeof desc === 'string')\n                    desc = {\n                        text: desc,\n                        tooltip: `${t.badge_renderer_provided_by_plugin()} \"${i18n(plugin.ID, plugin.name)}\"`,\n                    }\n                return (\n                    <MetaBadge\n                        readonly={readonly}\n                        key={metaKey + ';' + plugin.ID}\n                        title={desc.tooltip || ''}\n                        onDelete={() => onDeleteMeta(metaKey)}>\n                        {desc.text}\n                    </MetaBadge>\n                )\n            }\n        })\n    })\n    return <>{result}</>\n}\ninterface MetaBadgeProps {\n    title: React.ReactNode\n    onDelete(): void\n    readonly: boolean\n}\n\nfunction MetaBadge({ title, children, onDelete, readonly }: React.PropsWithChildren<MetaBadgeProps>) {\n    const { classes } = useStyles()\n    return (\n        <Box sx={{ display: 'inline-block' }}>\n            <ShadowRootTooltip title={title ?? ''}>\n                <span>\n                    <Chip disabled={readonly} onDelete={onDelete} label={children} className={classes.chip} />\n                </span>\n            </ShadowRootTooltip>\n        </Box>\n    )\n}\n","import {\n    isTypedMessageEqual,\n    isTypedMessageText,\n    makeTypedMessageText,\n    type TypedMessage,\n    type SerializableTypedMessages,\n} from '@masknet/typed-message'\nimport { editTypedMessageMeta } from '@masknet/typed-message-react'\nimport { makeStyles } from '@masknet/theme'\nimport { InputBase, Alert, Button, inputBaseClasses, alpha } from '@mui/material'\nimport { useCallback, useImperativeHandle, useState, useRef, forwardRef, memo, useMemo, useEffect } from 'react'\nimport { BadgeRenderer } from './BadgeRenderer.js'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        padding: 0,\n    },\n    input: {\n        fontSize: 15,\n        position: 'relative',\n        display: 'flex',\n        height: '100%',\n        backgroundColor: theme.palette.maskColor.input,\n        [`& > .${inputBaseClasses.input}`]: {\n            height: 'calc(100% - 22px) !important',\n            overflow: 'unset',\n        },\n        [`&.${inputBaseClasses.focused}`]: {\n            backgroundColor: 'transparent',\n            border: 0,\n            outline: `2px solid ${alpha(theme.palette.maskColor.primary, 0.2)}`,\n        },\n    },\n    badgeInput: {\n        paddingTop: 48,\n    },\n    textarea: {\n        '::-webkit-scrollbar': {\n            backgroundColor: 'transparent',\n            width: 20,\n        },\n        '::-webkit-scrollbar-thumb': {\n            borderRadius: '20px',\n            width: 5,\n            border: '7px solid rgba(0, 0, 0, 0)',\n            backgroundColor: theme.palette.maskColor.secondaryLine,\n            backgroundClip: 'padding-box',\n        },\n    },\n    badge: {\n        position: 'absolute',\n        top: 14,\n        left: 14,\n    },\n}))\nexport interface TypedMessageEditorProps {\n    defaultValue?: SerializableTypedMessages\n    onChange?(message: TypedMessage): void\n    readonly?: boolean\n    autoFocus?: boolean\n}\nexport interface TypedMessageEditorRef {\n    /** Current message, it is a getter/setter. */\n    value: SerializableTypedMessages\n    /** The length of the current message. */\n    readonly estimatedLength: number\n    focus(): void\n    /** Clean the editor. */\n    reset(): void\n    /**\n     * Insert metadata into the current message.\n     * Might be async in the future.\n     * @param metaID The inserted meta key.\n     * @param meta Metadata.\n     */\n    attachMetadata(metaID: string, meta: unknown): void\n    dropMetadata(metaID: string): void\n}\nconst emptyMessage = makeTypedMessageText('')\n// This is an **uncontrolled** component. (performance consideration, because it will be re-rendered very frequently).\nexport const TypedMessageEditor = memo(\n    forwardRef<TypedMessageEditorRef, TypedMessageEditorProps>(function TypedMessageEditor(props, ref) {\n        const { onChange, readonly } = props\n        const { classes, cx } = useStyles()\n        const t = useSharedTrans()\n\n        const [value, setValue] = useState(props.defaultValue ?? emptyMessage)\n        const currentValue = useRef(value)\n        const [inputRef, setInputRef] = useState<{ focus(): void } | null>(null)\n        useEffect(() => {\n            props.autoFocus && inputRef?.focus()\n        }, [props.autoFocus, inputRef])\n\n        currentValue.current = value\n\n        const setMessage = useCallback(\n            (value: SerializableTypedMessages) => {\n                if (isTypedMessageEqual(currentValue.current, value)) return\n                setValue(value)\n                currentValue.current = value\n                onChange?.(value)\n            },\n            [onChange],\n        )\n        const setAsText = useCallback(\n            (val: string | React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n                const text = typeof val === 'string' ? val : val.target.value\n                const newValue = makeTypedMessageText(text, currentValue.current.meta)\n                setMessage(newValue)\n            },\n            [setMessage],\n        )\n        const deleteMetaID = useCallback(\n            (meta: string) => {\n                setMessage(editTypedMessageMeta(currentValue.current, (map) => map.delete(meta)))\n            },\n            [setMessage],\n        )\n        const refItem = useMemo((): TypedMessageEditorRef => {\n            return {\n                get estimatedLength() {\n                    // TODO: we should count metadata into the estimated size\n                    if (isTypedMessageText(currentValue.current)) return currentValue.current.content.length\n                    return 0\n                },\n                get value() {\n                    return currentValue.current\n                },\n                set value(val) {\n                    setMessage(val)\n                },\n                focus: () => inputRef?.focus(),\n                reset: () => setMessage(emptyMessage),\n                attachMetadata(meta, data) {\n                    setMessage(editTypedMessageMeta(currentValue.current, (map) => map.set(meta, data)))\n                },\n                dropMetadata: deleteMetaID,\n            }\n        }, [setMessage, deleteMetaID])\n        useImperativeHandle(ref, () => refItem, [refItem])\n\n        if (!isTypedMessageText(value)) {\n            const reset = () => setAsText('')\n            // We don't have an rich text editor yet.\n            return (\n                <Alert\n                    severity=\"error\"\n                    action={\n                        <Button onClick={reset}>\n                            {t.reset()} {t.editor()}\n                        </Button>\n                    }>\n                    {t.typed_message_text_alert()}\n                </Alert>\n            )\n        }\n        return (\n            <>\n                <InputBase\n                    inputRef={setInputRef}\n                    startAdornment={\n                        value.meta ? (\n                            <div className={classes.badge}>\n                                <BadgeRenderer readonly={!!readonly} meta={value.meta} onDeleteMeta={deleteMetaID} />\n                            </div>\n                        ) : null\n                    }\n                    readOnly={readonly}\n                    classes={{\n                        root: classes.root,\n                        input: classes.textarea,\n                    }}\n                    className={cx(classes.input, value.meta ? classes.badgeInput : undefined)}\n                    value={value.content}\n                    onChange={setAsText}\n                    fullWidth\n                    multiline\n                    placeholder={t.post_dialog__placeholder()}\n                    rows={value.meta ? 11 : 13}\n                />\n            </>\n        )\n    }),\n)\n","import { useEffect } from 'react'\nimport { useAsyncFn, useAsyncRetry } from 'react-use'\nimport type { Plugin } from '@masknet/plugin-infra'\nimport { MaskMessages } from '@masknet/shared-base'\nimport { hasHostPermission, requestHostPermission } from '@masknet/plugin-infra/dom/context'\n\nexport function usePluginHostPermissionCheck(plugins: Plugin.Shared.Definition[]) {\n    const plugins_ = plugins.filter((x) => x.enableRequirement.host_permissions?.length)\n    // query if plugin is disabled due to lack of permission\n    const { retry, value: lackPermission } = useAsyncRetry(async () => {\n        const lackPermission = new Set<string>()\n\n        await Promise.allSettled(\n            plugins_.map(\n                (plugin) =>\n                    hasHostPermission?.(plugin.enableRequirement.host_permissions!).then(\n                        (result) => !result && lackPermission.add(plugin.ID),\n                    ),\n            ),\n        )\n        return lackPermission\n    }, [plugins_.map((x) => x.ID).join(',')])\n\n    useEffect(() => MaskMessages.events.hostPermissionChanged.on(retry), [retry])\n    return lackPermission\n}\n\nexport function useCheckPermissions(permissions: string[]) {\n    const asyncResult = useAsyncRetry(async () => {\n        if (!permissions.length) return true\n        return hasHostPermission?.(permissions)\n    }, [permissions])\n\n    useEffect(() => MaskMessages.events.hostPermissionChanged.on(asyncResult.retry), [asyncResult.retry])\n\n    return asyncResult\n}\n\nexport function useGrantPermissions(permissions?: string[]) {\n    return useAsyncFn(async () => {\n        if (!permissions?.length) return\n        return requestHostPermission?.(permissions)\n    }, [permissions])\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Done as DoneIcon } from '@mui/icons-material'\nimport { Chip, type ChipProps } from '@mui/material'\nimport { noop } from 'lodash-es'\n\nexport interface ClickableChipProps extends ChipProps {\n    checked?: boolean\n}\n\ninterface StyleProps {\n    checked: boolean\n}\nconst useStyles = makeStyles<StyleProps>()((theme, { checked }) => ({\n    root: {\n        marginRight: 6,\n        marginBottom: 6,\n        cursor: 'pointer',\n        ...(checked ? { color: theme.palette.text.buttonText, backgroundColor: theme.palette.text.primary } : {}),\n        '&:hover': {\n            color: theme.palette.text.primary,\n            '& > svg': {\n                color: `${theme.palette.text.primary} !important`,\n            },\n        },\n    },\n    icon: {\n        backgroundColor: 'transparent !important',\n        ...(checked ? { color: `${theme.palette.text.buttonText} !important` } : {}),\n    },\n    label: {\n        display: 'flex',\n    },\n}))\n\nexport function ClickableChip(props: ClickableChipProps) {\n    const { classes, cx } = useStyles({ checked: !!props.checked })\n    return (\n        <Chip\n            deleteIcon={props.checked ? <DoneIcon className={classes.icon} /> : undefined}\n            onDelete={props.checked ? noop : undefined}\n            color={props.checked ? 'primary' : 'default'}\n            {...props}\n            classes={{\n                ...props.classes,\n                root: cx(classes.root, props.classes?.root),\n                label: cx(classes.label, props.classes?.label),\n            }}\n        />\n    )\n}\n","import { useCallback, useState, useRef, forwardRef, memo, useImperativeHandle, useMemo } from 'react'\nimport { Trans } from 'react-i18next'\nimport { Result } from 'ts-results-es'\nimport {\n    useActivatedPluginsSiteAdaptor,\n    type Plugin,\n    PluginTransFieldRender,\n    usePluginTransField,\n    useCompositionContext,\n} from '@masknet/plugin-infra/content-script'\nimport { DialogContent, alpha } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport {\n    ClickableChip,\n    GrantPermissions,\n    InjectedDialog,\n    useGrantPermissions,\n    usePluginHostPermissionCheck,\n    useSharedTrans,\n} from '@masknet/shared'\nimport { EMPTY_LIST, PluginID } from '@masknet/shared-base'\nimport { ErrorBoundary } from '@masknet/shared-base-ui'\n\nconst useStyles = makeStyles()((theme) => ({\n    sup: {\n        paddingLeft: 2,\n    },\n    clickRoot: {\n        background: theme.palette.maskColor.bottom,\n        boxShadow: `0px 0px 20px 0px ${alpha(theme.palette.maskColor.main, 0.05)}`,\n        marginBottom: 0,\n    },\n}))\n\nexport interface PluginEntryRenderRef {\n    openPlugin(id: string, pluginProps?: any): void\n}\nexport const PluginEntryRender = memo(\n    forwardRef<\n        PluginEntryRenderRef,\n        {\n            readonly: boolean\n            isOpenFromApplicationBoard: boolean\n        }\n    >((props, ref) => {\n        const [trackPluginRef] = useSetPluginEntryRenderRef(ref)\n        const pluginField = usePluginTransField()\n        const plugins = [...useActivatedPluginsSiteAdaptor('any')].sort((plugin) => {\n            // TODO: support priority order\n            if (plugin.ID === PluginID.RedPacket) return -1\n            return 1\n        })\n        const lackPermission = usePluginHostPermissionCheck(plugins)\n        const result = plugins.map((plugin) =>\n            Result.wrap(() => {\n                const entry = plugin.CompositionDialogEntry\n                const unstable = plugin.enableRequirement.target !== 'stable'\n                const ID = plugin.ID\n                if (!entry) return null\n                const extra: ExtraPluginProps = { unstable, id: ID, readonly: props.readonly }\n                if (lackPermission?.has(ID)) {\n                    return (\n                        <ErrorBoundary subject={`Plugin \"${pluginField(ID, plugin.name)}\"`} key={plugin.ID}>\n                            <DialogEntry\n                                label={entry.label}\n                                {...extra}\n                                dialog={getPluginEntryDisabledDialog(plugin)}\n                                ref={trackPluginRef(ID)}\n                                isOpenFromApplicationBoard={props.isOpenFromApplicationBoard}\n                            />\n                        </ErrorBoundary>\n                    )\n                }\n                return (\n                    <ErrorBoundary subject={`Plugin \"${pluginField(ID, plugin.name)}\"`} key={plugin.ID}>\n                        {'onClick' in entry ? (\n                            <CustomEntry {...entry} {...extra} ref={trackPluginRef(ID)} />\n                        ) : (\n                            <DialogEntry\n                                {...entry}\n                                {...extra}\n                                ref={trackPluginRef(ID)}\n                                isOpenFromApplicationBoard={props.isOpenFromApplicationBoard}\n                            />\n                        )}\n                    </ErrorBoundary>\n                )\n            }).unwrapOr(null),\n        )\n        return <>{result}</>\n    }),\n)\n\nconst usePermissionDialogStyles = makeStyles()((theme) => ({\n    root: {\n        width: 384,\n        padding: theme.spacing(1),\n    },\n    dialogTitle: {\n        background: theme.palette.maskColor.bottom,\n    },\n    action: {\n        width: '80%',\n    },\n}))\n\nconst cache = new Map<\n    Plugin.Shared.Definition,\n    React.ComponentType<Plugin.SiteAdaptor.CompositionDialogEntry_DialogProps>\n>()\nfunction getPluginEntryDisabledDialog(define: Plugin.Shared.Definition) {\n    if (!cache.has(define)) {\n        cache.set(define, (props: Plugin.SiteAdaptor.CompositionDialogEntry_DialogProps) => {\n            const t = useSharedTrans()\n            const { classes } = usePermissionDialogStyles()\n            const [, onGrant] = useGrantPermissions(define.enableRequirement.host_permissions)\n            return (\n                <InjectedDialog\n                    classes={{ paper: classes.root, dialogTitle: classes.dialogTitle }}\n                    title={t.domain_request()}\n                    open={props.open}\n                    onClose={props.onClose}\n                    maxWidth=\"sm\"\n                    titleBarIconStyle=\"close\">\n                    <DialogContent>\n                        <GrantPermissions\n                            classes={{ action: classes.action }}\n                            permissions={define.enableRequirement.host_permissions ?? EMPTY_LIST}\n                            onGrant={onGrant}\n                        />\n                    </DialogContent>\n                </InjectedDialog>\n            )\n        })\n    }\n    return cache.get(define)!\n}\n\nfunction useSetPluginEntryRenderRef(ref: React.ForwardedRef<PluginEntryRenderRef>) {\n    const pluginRefs = useRef<Record<string, PluginRef | undefined | null>>({})\n    const refItem: PluginEntryRenderRef = useMemo(\n        () => ({\n            openPlugin: function openPlugin(id: string, props: any = {}, tryTimes = 4) {\n                const ref = pluginRefs.current[id]\n                if (ref) return ref.open(props)\n\n                // If the plugin has not been loaded yet, we wait for at most 2000ms\n                if (tryTimes === 0) return\n                setTimeout(() => openPlugin(id, props, tryTimes - 1), 500)\n            },\n        }),\n        [],\n    )\n    useImperativeHandle(ref, () => refItem, [refItem])\n    const trackPluginRef = (pluginID: string) => (ref: PluginRef | null) => {\n        pluginRefs.current = { ...pluginRefs.current, [pluginID]: ref }\n    }\n    return [trackPluginRef]\n}\nfunction useSetPluginRef(ref: React.ForwardedRef<PluginRef>, onClick: (props: any) => void) {\n    const refItem = useMemo(() => ({ open: onClick }), [onClick])\n    useImperativeHandle(ref, () => refItem, [refItem])\n}\n\ntype PluginRef = {\n    open(props: any): void\n}\ntype ExtraPluginProps = {\n    unstable: boolean\n    id: string\n    readonly: boolean\n    isOpenFromApplicationBoard?: boolean\n}\nconst CustomEntry = memo(\n    forwardRef<PluginRef, Plugin.SiteAdaptor.CompositionDialogEntryCustom & ExtraPluginProps>((props, ref) => {\n        const { classes } = useStyles()\n        const { id, label, onClick, unstable } = props\n        useSetPluginRef(ref, onClick)\n        const { type, getMetadata } = useCompositionContext()\n        return (\n            <ClickableChip\n                classes={{\n                    root: classes.clickRoot,\n                }}\n                label={\n                    <>\n                        <PluginTransFieldRender field={label} pluginID={id} />\n                        {unstable ? (\n                            <Trans i18nKey=\"beta_sup\" components={{ sup: <sup className={classes.sup} /> }} />\n                        ) : null}\n                    </>\n                }\n                onClick={() => {\n                    const metadata = getMetadata()\n                    onClick?.({ compositionType: type, metadata })\n                }}\n                disabled={props.readonly}\n            />\n        )\n    }),\n)\n\nconst DialogEntry = memo(\n    forwardRef<PluginRef, Plugin.SiteAdaptor.CompositionDialogEntryDialog & ExtraPluginProps>((props, ref) => {\n        const { classes } = useStyles()\n        const { dialog: Dialog, id, label, unstable, keepMounted, isOpenFromApplicationBoard } = props\n        const [dialogProps, setDialogProps] = useState({})\n        const [open, setOpen] = useState(false)\n        const opener = useCallback((props: any = {}) => {\n            setDialogProps(props)\n            setOpen(true)\n        }, [])\n        const close = useCallback(() => {\n            setOpen(false)\n        }, [])\n\n        useSetPluginRef(ref, opener)\n        const chip = (\n            <ClickableChip\n                classes={{\n                    root: classes.clickRoot,\n                }}\n                label={\n                    <>\n                        <PluginTransFieldRender field={label} pluginID={id} />\n                        {unstable ? (\n                            <Trans i18nKey=\"beta_sup\" components={{ sup: <sup className={classes.sup} /> }} />\n                        ) : null}\n                    </>\n                }\n                disabled={props.readonly}\n                onClick={opener}\n            />\n        )\n        if (keepMounted || open)\n            return (\n                <>\n                    {chip}\n                    <span style={{ display: 'none' }}>\n                        {/* Dialog should use portals to render. */}\n                        <Dialog\n                            open={open}\n                            onClose={close}\n                            isOpenFromApplicationBoard={isOpenFromApplicationBoard}\n                            {...dialogProps}\n                        />\n                    </span>\n                </>\n            )\n        return chip\n    }),\n)\n\nDialogEntry.displayName = 'DialogEntry'\n","import { type CircularProgressProps, CircularProgress, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { memo } from 'react'\n\nconst useStyles = makeStyles<boolean>()((_theme, overflowed) => ({\n    root: {\n        position: 'relative',\n        display: 'inline-flex',\n        marginLeft: 8,\n        marginRight: 8,\n    },\n    circle: {\n        transitionProperty: 'transform, width, height, color',\n        color: overflowed ? 'red' : undefined,\n    },\n    label: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}))\nexport interface CharLimitIndicatorProps extends CircularProgressProps {\n    value: number\n    max: number\n}\nexport const CharLimitIndicator = memo(({ value, max, ...props }: CharLimitIndicatorProps) => {\n    const displayLabel = max - value < 40\n    const normalized = Math.min((value / max) * 100, 100)\n    const { classes, cx } = useStyles(value >= max)\n    return (\n        <div className={classes.root}>\n            <CircularProgress\n                variant=\"determinate\"\n                color={displayLabel ? 'secondary' : 'primary'}\n                size={displayLabel ? void 0 : 16}\n                {...props}\n                value={normalized}\n                className={cx(props.className, classes.circle)}\n            />\n            {displayLabel ? (\n                <span className={classes.label}>\n                    <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">\n                        {max - value}\n                    </Typography>\n                </span>\n            ) : null}\n        </div>\n    )\n})\n","import { startTransition, useCallback, useDeferredValue, useMemo, useState } from 'react'\nimport { compact } from 'lodash-es'\nimport { Icons } from '@masknet/icons'\nimport { ActionButtonPromise, EmptyStatus, InjectedDialog } from '@masknet/shared'\nimport type { ProfileInformation as Profile, ProfileInformationFromNextID } from '@masknet/shared-base'\nimport { Boundary, LoadingBase, makeStyles } from '@masknet/theme'\nimport { useLookupAddress } from '@masknet/web3-hooks-base'\nimport { Fuse } from '@masknet/web3-providers'\nimport {\n    Button,\n    Checkbox,\n    DialogActions,\n    DialogContent,\n    InputAdornment,\n    InputBase,\n    Stack,\n    Typography,\n    alpha,\n} from '@mui/material'\nimport { attachNextIDToProfile } from '../../../../shared/index.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { ProfileInList } from './ProfileInList.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        minHeight: 400,\n        minWidth: 400,\n        overflow: 'hidden',\n    },\n    inputRoot: {\n        padding: '4px 10px',\n        borderRadius: 8,\n        width: '100%',\n        background: theme.palette.maskColor.input,\n        fontSize: 14,\n        marginBottom: 16,\n    },\n    inputFocused: {\n        background: theme.palette.maskColor.bottom,\n        borderColor: theme.palette.text.third,\n    },\n    paper: {\n        height: 450,\n        position: 'relative',\n        padding: theme.spacing(2),\n        '::-webkit-scrollbar': {\n            display: 'none',\n        },\n        overflow: 'hidden',\n    },\n    empty: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%,-50%)',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        gap: 12,\n        color: theme.palette.text.secondary,\n        whiteSpace: 'nowrap',\n    },\n    mainText: {\n        color: theme.palette.text.primary,\n    },\n    listParent: {\n        height: 400,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    listBody: {\n        height: 400,\n        '::-webkit-scrollbar': {\n            display: 'none',\n        },\n        overflowY: 'auto',\n        flex: 1,\n        backgroundColor: theme.palette.maskColor.bottom,\n    },\n    list: {\n        gridGap: '12px',\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        alignItems: 'flex-start',\n    },\n    actions: {\n        display: 'flex',\n        gap: 16,\n        padding: 16,\n        boxSizing: 'border-box',\n        alignItems: 'center',\n        background: alpha(theme.palette.maskColor.bottom, 0.8),\n        boxShadow:\n            theme.palette.mode === 'light'\n                ? ' 0px 0px 20px rgba(0, 0, 0, 0.05)'\n                : '0px 0px 20px rgba(255, 255, 255, 0.12);',\n        borderRadius: '0px 0px 12px 12px',\n        flex: 1,\n        backdropFilter: 'blur(8px)',\n    },\n    back: {\n        color: theme.palette.maskColor.main,\n        background: theme.palette.maskColor.thirdMain,\n        fontSize: 14,\n        fontWeight: 700,\n        lineHeight: '18px',\n        '&:hover': {\n            color: theme.palette.maskColor.main,\n            background: theme.palette.maskColor.thirdMain,\n            fontSize: 14,\n            fontWeight: 700,\n            lineHeight: '18px',\n        },\n    },\n    done: {\n        color: theme.palette.maskColor.bottom,\n        background: theme.palette.maskColor.main,\n        fontSize: 14,\n        fontWeight: 700,\n        lineHeight: '18px',\n    },\n}))\n\ninterface SelectRecipientsDialogUIProps {\n    open: boolean\n    items: Profile[]\n    selected: Profile[]\n    disabled: boolean\n    submitDisabled: boolean\n    loading?: boolean\n    searchEmptyText?: string\n    onSubmit: () => void\n    onClose: () => void\n    onSearch(v: string): void\n    onSetSelected(selected: Profile[]): void\n}\nexport function SelectRecipientsDialogUI(props: SelectRecipientsDialogUIProps) {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles()\n    const { items, onSearch } = props\n    const [searchInput, setSearchInput] = useState('')\n    const { value: registeredAddress = '' } = useLookupAddress(undefined, useDeferredValue(searchInput))\n    const [selectedAllProfiles, setSelectedAllProfiles] = useState<readonly Profile[]>([])\n    const keyword = registeredAddress || searchInput\n\n    const results = useMemo(() => {\n        if (!keyword) return items\n\n        return Fuse.create(items, {\n            keys: [\n                'identifier.userId',\n                'nickname',\n                'walletAddress',\n                'linkedPersona.rawPublicKey',\n                'linkedPersona.publicKeyAsHex',\n                'linkedTwitterNames',\n            ],\n            isCaseSensitive: false,\n            ignoreLocation: true,\n            threshold: 0,\n        })\n            .search(keyword)\n            .map((item) => item.item)\n    }, [keyword, items])\n\n    const handleClose = () => {\n        props.onClose()\n        setSearchInput('')\n        onSearch('')\n    }\n\n    const handleSubmit = useCallback(async () => {\n        props.onSetSelected([...selectedAllProfiles])\n        for (const item of selectedAllProfiles) {\n            await attachNextIDToProfile(item as ProfileInformationFromNextID)\n        }\n        props.onSubmit()\n        setSearchInput('')\n        onSearch('')\n    }, [selectedAllProfiles])\n\n    const onSelectedProfile = useCallback((item: Profile, checked: boolean) => {\n        if (checked) {\n            setSelectedAllProfiles((profiles) => [...profiles, item])\n        } else setSelectedAllProfiles((profiles) => profiles.filter((x) => x !== item))\n    }, [])\n\n    const selectedPubkeyList = compact(selectedAllProfiles.map((x) => x.linkedPersona?.publicKeyAsHex))\n\n    const onSelectedAllChange = useCallback(\n        (checked: boolean) => {\n            if (checked) {\n                setSelectedAllProfiles([...results])\n            } else {\n                setSelectedAllProfiles([])\n            }\n        },\n        [results],\n    )\n\n    return (\n        <InjectedDialog\n            className={classes.root}\n            open={props.open}\n            title={t.select_specific_friends_dialog__title()}\n            onClose={handleClose}>\n            <DialogContent className={classes.paper}>\n                <InputBase\n                    className={classes.inputRoot}\n                    classes={{\n                        focused: classes.inputFocused,\n                    }}\n                    value={searchInput}\n                    onKeyUp={(e) => {\n                        if (e.code !== 'Enter') return\n                        startTransition(() => onSearch(keyword))\n                    }}\n                    onChange={(e) => setSearchInput(e.target.value.trim())}\n                    onBlur={() => onSearch(keyword)}\n                    startAdornment={\n                        <InputAdornment position=\"start\">\n                            <Icons.Search />\n                        </InputAdornment>\n                    }\n                    placeholder={t.post_dialog_share_with_input_placeholder()}\n                />\n                {props.loading ? (\n                    <div className={cx(classes.empty, classes.mainText)}>\n                        <LoadingBase />\n                        <Typography>{t.loading()}</Typography>\n                    </div>\n                ) : (\n                    <Boundary>\n                        <div className={classes.listParent}>\n                            <div className={classes.listBody}>\n                                <div className={classes.list}>\n                                    {results.length === 0 ? (\n                                        <EmptyStatus className={classes.empty}>\n                                            {props.searchEmptyText ?? t.compose_encrypt_share_dialog_empty()}\n                                        </EmptyStatus>\n                                    ) : (\n                                        results.map((item, index) => {\n                                            const pubkey = item.linkedPersona?.publicKeyAsHex as string\n                                            const selected = selectedPubkeyList.includes(pubkey)\n                                            return (\n                                                <ProfileInList\n                                                    key={index}\n                                                    profile={item as ProfileInformationFromNextID}\n                                                    highlightText={keyword}\n                                                    selected={selected}\n                                                    disabled={props.disabled}\n                                                    onChange={onSelectedProfile}\n                                                />\n                                            )\n                                        })\n                                    )}\n                                </div>\n                            </div>\n                            {results.length > 0 ? (\n                                <Stack alignItems=\"center\" flexDirection=\"row\" sx={{ padding: '16px 0' }}>\n                                    <Checkbox\n                                        size=\"small\"\n                                        sx={{ width: 20, height: 20 }}\n                                        onChange={(e) => onSelectedAllChange(e.currentTarget.checked)}\n                                    />\n                                    <Typography sx={{ paddingLeft: 1 }}>{t.select_all()}</Typography>\n                                </Stack>\n                            ) : null}\n                        </div>\n                    </Boundary>\n                )}\n            </DialogContent>\n            <DialogActions style={{ padding: 0 }}>\n                <div className={classes.actions}>\n                    <Button\n                        className={classes.back}\n                        fullWidth\n                        variant=\"roundedContained\"\n                        disabled={props.submitDisabled}\n                        onClick={handleClose}>\n                        {t.back()}\n                    </Button>\n                    <ActionButtonPromise\n                        className={classes.done}\n                        fullWidth\n                        variant=\"roundedContained\"\n                        disabled={props.submitDisabled}\n                        executor={handleSubmit}\n                        completeIcon={null}\n                        failIcon={null}\n                        failedOnClick=\"use executor\"\n                        complete={t.done()}\n                        init={t.done()}\n                        waiting={t.done()}\n                    />\n                </div>\n            </DialogActions>\n        </InjectedDialog>\n    )\n}\n","import { uniqBy } from 'lodash-es'\nimport { useEffect, useMemo, useState } from 'react'\nimport { EMPTY_LIST, NextIDPlatform, type ProfileInformation as Profile } from '@masknet/shared-base'\nimport type { LazyRecipients } from '../../CompositionDialog/CompositionUI.js'\nimport { useCurrentIdentity } from '../../DataSource/useActivatedUI.js'\nimport { SelectRecipientsDialogUI } from './SelectRecipientsDialog.js'\nimport { useTwitterIdByWalletSearch } from './useTwitterIdByWalletSearch.js'\nimport { resolveNextIDPlatform, resolveValueToSearch, usePersonasFromNextID } from '@masknet/shared'\nimport { useContacts } from './useContacts.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\n\ninterface SelectRecipientsUIProps {\n    items: LazyRecipients\n    selected: Profile[]\n    disabled?: boolean\n    hideSelectAll?: boolean\n    hideSelectNone?: boolean\n    open: boolean\n    onClose(): void\n    onSetSelected(selected: Profile[]): void\n}\n\nexport function SelectRecipientsUI(props: SelectRecipientsUIProps) {\n    const { items, selected, onSetSelected, open, onClose } = props\n    const t = useMaskSharedTrans()\n    const [valueToSearch, setValueToSearch] = useState('')\n    const currentIdentity = useCurrentIdentity()\n    const type = resolveNextIDPlatform(valueToSearch)\n    const _value = resolveValueToSearch(valueToSearch)\n    const { isInitialLoading: searchLoading, data: NextIDResults } = usePersonasFromNextID(\n        _value,\n        type ?? NextIDPlatform.NextID,\n        false,\n    )\n\n    const NextIDItems = useTwitterIdByWalletSearch(NextIDResults, _value, type)\n    const myUserId = currentIdentity?.identifier.userId\n    const searchedList = useMemo(() => {\n        if (!items.recipients) return EMPTY_LIST\n        const profileItems = items.recipients.filter((x) => x.identifier.userId !== myUserId)\n        // Selected might contain profiles that fetched asynchronously from\n        // Next.ID, which are not stored locally\n        return uniqBy(profileItems.concat(NextIDItems, selected), ({ linkedPersona }) => linkedPersona?.rawPublicKey)\n    }, [NextIDItems, selected, items.recipients, myUserId])\n\n    const { value = EMPTY_LIST } = useContacts(currentIdentity?.identifier.network!)\n\n    useEffect(() => {\n        if (!open) return\n        items.request()\n    }, [open, items.request])\n    return (\n        <SelectRecipientsDialogUI\n            searchEmptyText={valueToSearch ? t.wallet_search_no_result() : undefined}\n            loading={searchLoading}\n            onSearch={setValueToSearch}\n            open={open}\n            items={uniqBy([...searchedList, ...value], (x) => x.linkedPersona?.publicKeyAsHex)}\n            selected={selected}\n            disabled={false}\n            submitDisabled={false}\n            onSubmit={onClose}\n            onClose={onClose}\n            onSetSelected={onSetSelected}\n        />\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { makeStyles, usePortalShadowRoot } from '@masknet/theme'\nimport { RadioGroup, Typography, Popover } from '@mui/material'\nimport type { PropsWithChildren } from 'react'\n\nconst useStyles = makeStyles()((theme) => ({\n    popper: {\n        overflow: 'visible',\n        boxShadow: '0px 0px 16px 0px rgba(101, 119, 134, 0.2)',\n        borderRadius: 4,\n    },\n    paperRoot: {\n        background: theme.palette.maskColor.bottom,\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 4px 30px rgba(255, 255, 255, 0.15)'\n                : '0px 4px 30px rgba(0, 0, 0, 0.1)',\n    },\n    popperText: {\n        fontSize: 14,\n        fontWeight: 700,\n        lineHeight: '18px',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        gap: 4,\n        cursor: 'pointer',\n        padding: 0,\n        border: 0,\n        background: 'none',\n        minWidth: 70,\n    },\n    paper: {\n        width: 280,\n        padding: 12,\n        boxSizing: 'border-box',\n    },\n    selected: {\n        lineHeight: '18px',\n        fontSize: 14,\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n    },\n}))\n\ninterface PopoverListTriggerProp extends PropsWithChildren<{}> {\n    anchorEl: HTMLElement | null\n    setAnchorEl(v: HTMLElement | null): void\n    onChange(v: string): void\n    selected: string\n    selectedTitle: string | undefined\n}\n\nexport function PopoverListTrigger({\n    anchorEl,\n    selected,\n    selectedTitle,\n    children,\n    setAnchorEl,\n    onChange,\n}: PopoverListTriggerProp) {\n    const { classes } = useStyles()\n\n    return usePortalShadowRoot((ref) => (\n        <>\n            <button\n                type=\"button\"\n                className={classes.popperText}\n                onClick={(e) => {\n                    setAnchorEl(anchorEl ? null : e.currentTarget)\n                }}>\n                <Typography className={classes.selected}>{selectedTitle}</Typography>\n                <Icons.RightArrow className={classes.selected} size={20} />\n            </button>\n            <Popover\n                container={ref}\n                disableScrollLock\n                className={classes.popper}\n                classes={{ paper: classes.paperRoot }}\n                open={!!anchorEl}\n                anchorEl={anchorEl}\n                onClose={() => setAnchorEl(null)}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\n                <RadioGroup className={classes.paper} value={selected} onChange={(e) => onChange(e.target.value)}>\n                    {children}\n                </RadioGroup>\n            </Popover>\n        </>\n    ))\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Box, FormControlLabel, Radio, Typography } from '@mui/material'\nimport { type ReactNode } from 'react'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: { marginLeft: 'unset', marginRight: 'unset' },\n    label: {\n        display: 'flex',\n        alignItems: 'center',\n        flex: 1,\n    },\n    mainTitle: {\n        fontWeight: 700,\n        fontSize: 14,\n    },\n    subTitle: {\n        whiteSpace: 'nowrap',\n        fontSize: 14,\n    },\n    pointer: {\n        cursor: 'pointer',\n    },\n}))\ninterface PopoverListItemProps {\n    value: string\n    itemTail?: ReactNode\n    title: string\n    subTitle?: string\n    disabled?: boolean\n    onClick?: (v: string) => void\n}\nexport function PopoverListItem(props: PopoverListItemProps) {\n    const { title, subTitle, value, itemTail, disabled } = props\n    const { classes, cx } = useStyles()\n    return (\n        <FormControlLabel\n            classes={{\n                root: classes.root,\n                label: itemTail ? cx(classes.label, classes.pointer) : classes.label,\n            }}\n            disabled={disabled}\n            value={value}\n            control={<Radio />}\n            onClick={() => props.onClick?.(value)}\n            label={\n                <>\n                    <Box>\n                        <Typography className={classes.mainTitle}>{title}</Typography>\n                        <Typography className={classes.subTitle}>{subTitle}</Typography>\n                    </Box>\n                    {itemTail}\n                </>\n            }\n        />\n    )\n}\n","import { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport { makeStyles } from '@masknet/theme'\nimport { Typography } from '@mui/material'\nimport { PopoverListTrigger } from './PopoverListTrigger.js'\nimport { PopoverListItem } from './PopoverListItem.js'\nimport { type PropsWithChildren, useState } from 'react'\n\nconst useStyles = makeStyles()((theme) => ({\n    optionTitle: {\n        fontFamily: 'sans-serif',\n        fontSize: 14,\n        lineHeight: '18px',\n        color: theme.palette.text.secondary,\n        marginRight: 12,\n    },\n    divider: {\n        width: '100%',\n        height: 1,\n        background: theme.palette.divider,\n        margin: '8px 0',\n    },\n}))\n\ninterface EncryptionMethodSelectorProps extends PropsWithChildren<{}> {\n    onChange(v: EncryptionMethodType): void\n    method: EncryptionMethodType\n    textDisabled: boolean\n    imageDisabled: boolean\n}\nexport enum EncryptionMethodType {\n    Text = 'text',\n    Image = 'image',\n}\nexport function EncryptionMethodSelector(props: EncryptionMethodSelectorProps) {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n\n    return (\n        <>\n            <Typography className={classes.optionTitle}>{t.post_dialog_encryption_method()}</Typography>\n            <PopoverListTrigger\n                selected={props.method ?? EncryptionMethodType.Text}\n                anchorEl={anchorEl}\n                setAnchorEl={setAnchorEl}\n                onChange={props.onChange}\n                selectedTitle={\n                    props.method === EncryptionMethodType.Text\n                        ? t.compose_encrypt_method_text()\n                        : t.compose_encrypt_method_image()\n                }>\n                <PopoverListItem\n                    value={EncryptionMethodType.Text}\n                    title={t.compose_encrypt_method_text()}\n                    subTitle={t.compose_encrypt_method_text_sub_title()}\n                    disabled={props.textDisabled}\n                />\n                <div className={classes.divider} />\n                <PopoverListItem\n                    value={EncryptionMethodType.Image}\n                    title={t.compose_encrypt_method_image()}\n                    subTitle={t.compose_encrypt_method_image_sub_title()}\n                    disabled={props.imageDisabled}\n                />\n            </PopoverListTrigger>\n        </>\n    )\n}\n","import { useState } from 'react'\nimport { Box, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { Icons } from '@masknet/icons'\nimport { unreachable } from '@masknet/kit'\nimport { ConnectPersonaBoundary } from '@masknet/shared'\nimport { EncryptionTargetType, currentPersonaIdentifier } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { PopoverListTrigger } from './PopoverListTrigger.js'\nimport { PopoverListItem } from './PopoverListItem.js'\nimport { E2EUnavailableReason } from './CompositionUI.js'\nimport { usePersonasFromDB } from '../../../shared-ui/hooks/usePersonasFromDB.js'\nimport { useLastRecognizedIdentity } from '../DataSource/useActivatedUI.js'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport Services from '#services'\n\nconst useStyles = makeStyles()((theme) => ({\n    optionTitle: {\n        lineHeight: '18px',\n        fontSize: 14,\n        color: theme.palette.text.secondary,\n        marginRight: 12,\n    },\n    divider: {\n        width: '100%',\n        height: 1,\n        background: theme.palette.divider,\n        margin: '8px 0',\n    },\n    mainTitle: {\n        color: theme.palette.text.primary,\n        fontWeight: 700,\n    },\n    flex: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: 4,\n        boxSizing: 'border-box',\n    },\n    create: {\n        cursor: 'pointer',\n        fontWeight: 700,\n        color: theme.palette.maskColor.primary,\n        textAlign: 'right',\n    },\n    rightIcon: {\n        marginLeft: 'auto',\n    },\n}))\n\ninterface EncryptionTargetSelectorProps {\n    target: EncryptionTargetType\n    e2eDisabled: E2EUnavailableReason | undefined\n    onClick(v: EncryptionTargetType): void\n    selectedRecipientLength: number\n}\nexport function EncryptionTargetSelector(props: EncryptionTargetSelectorProps) {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n\n    const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n    const allPersonas = usePersonasFromDB()\n    const lastRecognized = useLastRecognizedIdentity()\n    const currentIdentifier = useValueRef(currentPersonaIdentifier)\n\n    const e2eDisabledMessage =\n        props.e2eDisabled && props.e2eDisabled !== E2EUnavailableReason.NoLocalKey ? (\n            <div className={classes.flex}>\n                <Typography className={classes.mainTitle}>{t.persona_required()}</Typography>\n                <Box flex={1} />\n                <ConnectPersonaBoundary\n                    personas={allPersonas}\n                    identity={lastRecognized}\n                    currentPersonaIdentifier={currentIdentifier}\n                    openDashboard={Services.Helper.openDashboard}\n                    customHint\n                    handlerPosition=\"top-right\"\n                    enableVerify={false}\n                    createConfirm={false}>\n                    {(s) => {\n                        if (!s.hasPersona) return <Typography className={classes.create}>{t.create()}</Typography>\n                        // TODO: how to handle verified\n                        if (!s.connected || !s.verified)\n                            return <Typography className={classes.create}>{t.connect()}</Typography>\n\n                        return null\n                    }}\n                </ConnectPersonaBoundary>\n            </div>\n        ) : null\n    const noLocalKeyMessage = props.e2eDisabled === E2EUnavailableReason.NoLocalKey && (\n        <div className={classes.flex}>\n            <Typography className={classes.mainTitle}>{t.compose_no_local_key()}</Typography>\n        </div>\n    )\n\n    const selectedTitle = () => {\n        const selected = props.target\n        const shareWithNum = props.selectedRecipientLength\n        if (selected === EncryptionTargetType.E2E)\n            return shareWithNum > 1\n                ? t.compose_shared_friends_other({ count: shareWithNum })\n                : t.compose_shared_friends_one()\n        else if (selected === EncryptionTargetType.Public) return t.compose_encrypt_visible_to_all()\n        else if (selected === EncryptionTargetType.Self) return t.compose_encrypt_visible_to_private()\n        unreachable(selected)\n    }\n    return (\n        <>\n            <Typography className={classes.optionTitle}>{t.post_dialog_visible_to()}</Typography>\n            <PopoverListTrigger\n                selected={props.target}\n                selectedTitle={selectedTitle()}\n                anchorEl={anchorEl}\n                setAnchorEl={setAnchorEl}\n                onChange={(v) => {\n                    props.onClick(v as EncryptionTargetType)\n                    if (v === EncryptionTargetType.E2E) setAnchorEl(null)\n                }}>\n                <PopoverListItem\n                    value={EncryptionTargetType.Public}\n                    title={t.compose_encrypt_visible_to_all()}\n                    subTitle={t.compose_encrypt_visible_to_all_sub()}\n                />\n                <div className={classes.divider} />\n                <PopoverListItem\n                    disabled={!!props.e2eDisabled}\n                    value={EncryptionTargetType.Self}\n                    title={t.compose_encrypt_visible_to_private()}\n                    subTitle={t.compose_encrypt_visible_to_private_sub()}\n                />\n                {e2eDisabledMessage}\n                {noLocalKeyMessage}\n                <div className={classes.divider} />\n                <PopoverListItem\n                    itemTail={<Icons.RightArrow className={classes.rightIcon} />}\n                    disabled={!!props.e2eDisabled}\n                    value={EncryptionTargetType.E2E}\n                    title={t.compose_encrypt_visible_to_share()}\n                    subTitle={t.compose_encrypt_visible_to_share_sub()}\n                    onClick={(v: string) => {\n                        if (props.e2eDisabled) return\n                        props.onClick(v as EncryptionTargetType)\n                        if (v === EncryptionTargetType.E2E) setAnchorEl(null)\n                    }}\n                />\n                {e2eDisabledMessage}\n                {noLocalKeyMessage}\n            </PopoverListTrigger>\n        </>\n    )\n}\n","import {\n    forwardRef,\n    startTransition,\n    useCallback,\n    useEffect,\n    useImperativeHandle,\n    useMemo,\n    useRef,\n    useState,\n} from 'react'\nimport { LoadingButton } from '@mui/lab'\nimport { Button, DialogActions, Typography, alpha } from '@mui/material'\nimport type { EncryptTargetPublic } from '@masknet/encryption'\nimport { Icons } from '@masknet/icons'\nimport {\n    TypedMessageEditor,\n    type TypedMessageEditorRef,\n    CharLimitIndicator,\n    PluginEntryRender,\n    type PluginEntryRenderRef,\n} from '@masknet/shared'\nimport { CompositionContext, type CompositionType } from '@masknet/plugin-infra/content-script'\nimport { EncryptionTargetType, type ProfileInformation } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport type { SerializableTypedMessages, TypedMessage } from '@masknet/typed-message'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventType, EventID } from '@masknet/web3-telemetry/types'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport { SelectRecipientsUI } from '../shared/SelectRecipients/SelectRecipients.js'\nimport { EncryptionMethodSelector, EncryptionMethodType } from './EncryptionMethodSelector.js'\nimport { EncryptionTargetSelector } from './EncryptionTargetSelector.js'\nimport type { EncryptTargetE2EFromProfileIdentifier } from '../../../background/services/crypto/encryption.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        '& > *': {\n            height: '36px !important',\n        },\n        minHeight: 450,\n        maxHeight: 464,\n        height: 464,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(2),\n    },\n    flex: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n    },\n    between: {\n        justifyContent: 'space-between',\n    },\n    optionTitle: {\n        lineHeight: '18px',\n        fontSize: 14,\n        color: theme.palette.text.secondary,\n        marginRight: 12,\n    },\n    editorWrapper: {\n        flex: 1,\n        width: 568,\n        background: theme.palette.maskColor.bottom,\n        padding: 0,\n        boxSizing: 'border-box',\n        borderRadius: 8,\n        marginBottom: 16,\n    },\n    icon: {\n        width: 18,\n        height: 18,\n        fill: theme.palette.text.buttonText,\n    },\n    action: {\n        height: 68,\n        padding: '0 16px',\n        boxShadow:\n            theme.palette.mode === 'light'\n                ? ' 0px 0px 20px rgba(0, 0, 0, 0.05)'\n                : '0px 0px 20px rgba(255, 255, 255, 0.12);',\n        background: alpha(theme.palette.maskColor.bottom, 0.8),\n        justifyContent: 'space-between',\n        display: 'flex',\n    },\n    personaAction: {\n        flex: 1,\n    },\n}))\n\nexport interface LazyRecipients {\n    request(): void\n    recipients?: ProfileInformation[]\n}\nexport interface CompositionProps {\n    type: CompositionType\n    maxLength?: number\n    onSubmit(data: SubmitComposition): Promise<void>\n    onChange?(message: TypedMessage): void\n    isOpenFromApplicationBoard: boolean\n    e2eEncryptionDisabled(encode: EncryptionMethodType): E2EUnavailableReason | undefined\n    recipients: LazyRecipients\n    // Enabled features\n    supportTextEncoding: boolean\n    supportImageEncoding: boolean\n    // Requirements\n    requireClipboardPermission?: boolean\n    hasClipboardPermission?: boolean\n    onRequestClipboardPermission?(): void\n    onQueryClipboardPermission?(): void\n    initialMetas?: Record<string, unknown>\n    personaAction?: React.ReactNode\n}\nexport interface SubmitComposition {\n    target: EncryptTargetPublic | EncryptTargetE2EFromProfileIdentifier\n    content: SerializableTypedMessages\n    encode: 'text' | 'image'\n    version: -37 | -38\n}\nexport interface CompositionRef {\n    setMessage(message: SerializableTypedMessages): void\n    setEncryptionKind(kind: EncryptionTargetType): void\n    startPlugin(id: string, props?: any): void\n    reset(): void\n}\nexport const CompositionDialogUI = forwardRef<CompositionRef, CompositionProps>(\n    function CompositionDialogUI(props, ref) {\n        const { classes, cx } = useStyles()\n        const t = useMaskSharedTrans()\n\n        const [currentPostSize, __updatePostSize] = useState(0)\n\n        const [isSelectRecipientOpen, setSelectRecipientOpen] = useState(false)\n        const Editor = useRef<TypedMessageEditorRef | null>(null)\n        const PluginEntry = useRef<PluginEntryRenderRef>(null)\n\n        const [sending, setSending] = useState(false)\n\n        const updatePostSize = useCallback((size: number) => {\n            startTransition(() => __updatePostSize(size))\n        }, [])\n\n        const { encodingKind, setEncoding } = useEncryptionEncode(props)\n        const { setEncryptionKind, encryptionKind, recipients, setRecipients } = useSetEncryptionKind(\n            props,\n            encodingKind,\n        )\n        const reset = useCallback(() => {\n            startTransition(() => {\n                Editor.current?.reset()\n                setEncryptionKind(EncryptionTargetType.Public)\n                setRecipients([])\n                // Don't clean up the image/text selection across different encryption.\n                // setEncoding('text')\n                setSending(false)\n            })\n        }, [])\n\n        const refItem = useMemo(\n            (): CompositionRef => ({\n                setMessage: (msg) => {\n                    if (Editor.current) Editor.current.value = msg\n                },\n                setEncryptionKind,\n                startPlugin: (id, props) => {\n                    PluginEntry.current?.openPlugin(id, props)\n                },\n                reset,\n            }),\n            [reset],\n        )\n\n        useImperativeHandle(ref, () => refItem, [refItem])\n\n        useEffect(() => {\n            if (!props.initialMetas || !Editor.current) return\n            for (const [meta, data] of Object.entries(props.initialMetas)) {\n                Editor.current.attachMetadata(meta, data)\n            }\n        }, [props.initialMetas, Editor.current])\n\n        const context = useMemo(\n            (): CompositionContext => ({\n                type: props.type,\n                getMetadata: () => Editor.current?.value.meta,\n                attachMetadata: (meta, data) => Editor.current?.attachMetadata(meta, data),\n                dropMetadata: (meta) => Editor.current?.dropMetadata(meta),\n            }),\n            [props.type, Editor.current],\n        )\n\n        const submitAvailable = currentPostSize > 0 && currentPostSize < (props.maxLength ?? Number.POSITIVE_INFINITY)\n        const onSubmit = useCallback(() => {\n            if (!Editor.current) return\n            setSending(true)\n            props\n                .onSubmit({\n                    content: Editor.current.value,\n                    encode: encodingKind,\n                    target:\n                        encryptionKind === EncryptionTargetType.Public\n                            ? { type: 'public' }\n                            : {\n                                  type: 'E2E',\n                                  target: recipients.map((x) => ({\n                                      profile: x.identifier,\n                                      persona: x.linkedPersona,\n                                  })),\n                              },\n                    version: encodingKind === EncryptionMethodType.Text ? -37 : -38,\n                })\n                .finally(reset)\n        }, [encodingKind, encryptionKind, recipients, props.onSubmit])\n        return (\n            <CompositionContext.Provider value={context}>\n                <div className={classes.root}>\n                    <div className={classes.editorWrapper}>\n                        <TypedMessageEditor\n                            autoFocus\n                            readonly={sending}\n                            ref={(element) => {\n                                Editor.current = element\n                                if (element) updatePostSize(element.estimatedLength)\n                            }}\n                            onChange={(message) => {\n                                startTransition(() => props.onChange?.(message))\n                                updatePostSize(Editor.current?.estimatedLength || 0)\n                            }}\n                        />\n                    </div>\n\n                    <div className={classes.flex}>\n                        <Typography className={classes.optionTitle}>{t.plugins()}</Typography>\n                        <PluginEntryRender\n                            readonly={sending}\n                            ref={PluginEntry}\n                            isOpenFromApplicationBoard={props.isOpenFromApplicationBoard}\n                        />\n                    </div>\n                    <div className={cx(classes.flex, classes.between)}>\n                        <EncryptionTargetSelector\n                            target={encryptionKind}\n                            e2eDisabled={props.e2eEncryptionDisabled(encodingKind)}\n                            selectedRecipientLength={recipients.length}\n                            onClick={(target) => {\n                                setEncryptionKind(target)\n                                if (target === EncryptionTargetType.E2E) {\n                                    Telemetry.captureEvent(EventType.Interact, EventID.EntryMaskComposeVisibleSelected)\n                                    setSelectRecipientOpen(true)\n                                }\n                                if (target === EncryptionTargetType.Public) {\n                                    Telemetry.captureEvent(EventType.Interact, EventID.EntryMaskComposeVisibleAll)\n                                }\n                                if (target === EncryptionTargetType.Self) {\n                                    Telemetry.captureEvent(EventType.Interact, EventID.EntryMaskComposeVisiblePrivate)\n                                }\n                            }}\n                        />\n\n                        <SelectRecipientsUI\n                            open={isSelectRecipientOpen}\n                            onClose={() => setSelectRecipientOpen(false)}\n                            disabled={sending}\n                            items={props.recipients}\n                            selected={recipients}\n                            onSetSelected={setRecipients}\n                        />\n                    </div>\n                    <div className={cx(classes.flex, classes.between)}>\n                        <EncryptionMethodSelector\n                            imageDisabled={!props.supportImageEncoding}\n                            textDisabled={!props.supportTextEncoding}\n                            method={encodingKind}\n                            onChange={setEncoding}\n                        />\n                    </div>\n                </div>\n                <DialogActions className={classes.action}>\n                    {props.personaAction ? <div className={classes.personaAction}>{props.personaAction}</div> : <div />}\n                    <div>\n                        {props.maxLength ? <CharLimitIndicator value={currentPostSize} max={props.maxLength} /> : null}\n                        {props.requireClipboardPermission && !props.hasClipboardPermission ? (\n                            <Button\n                                variant=\"roundedContained\"\n                                onClick={props.onRequestClipboardPermission}\n                                sx={{ marginRight: 1 }}>\n                                {t.post_dialog_enable_paste_auto()}\n                            </Button>\n                        ) : null}\n                        <LoadingButton\n                            style={{ opacity: 1 }}\n                            disabled={!submitAvailable}\n                            loading={sending}\n                            loadingPosition=\"start\"\n                            variant=\"roundedContained\"\n                            onClick={onSubmit}\n                            startIcon={<Icons.Send className={classes.icon} />}>\n                            {t.post_dialog__button()}\n                        </LoadingButton>\n                    </div>\n                </DialogActions>\n            </CompositionContext.Provider>\n        )\n    },\n)\n\nexport enum E2EUnavailableReason {\n    // These reasons only applies to E2E encryption.\n    NoPersona = 1,\n    NoLocalKey = 2,\n    NoConnection = 3,\n}\nfunction useSetEncryptionKind(props: Pick<CompositionProps, 'e2eEncryptionDisabled'>, encoding: EncryptionMethodType) {\n    const [internal_encryptionKind, setEncryptionKind] = useState<EncryptionTargetType>(EncryptionTargetType.Public)\n    // TODO: Change to ProfileIdentifier\n    const [recipients, setRecipients] = useState<ProfileInformation[]>([])\n\n    let encryptionKind = internal_encryptionKind\n    if (encryptionKind === EncryptionTargetType.E2E && recipients.length === 0)\n        encryptionKind = EncryptionTargetType.Self\n    if (props.e2eEncryptionDisabled(encoding)) encryptionKind = EncryptionTargetType.Public\n\n    return {\n        recipients,\n        setRecipients,\n        encryptionKind,\n        setEncryptionKind,\n    }\n}\n\nfunction useEncryptionEncode(props: Pick<CompositionProps, 'supportImageEncoding' | 'supportTextEncoding'>) {\n    const [encoding, setEncoding] = useState<EncryptionMethodType>(\n        props.supportTextEncoding ? EncryptionMethodType.Text : EncryptionMethodType.Image,\n    )\n\n    const imagePayloadSelected =\n        props.supportImageEncoding && (encoding === EncryptionMethodType.Image || !props.supportTextEncoding)\n    // XOR\n    const imagePayloadReadonly =\n        (props.supportImageEncoding && !props.supportTextEncoding) ||\n        (!props.supportImageEncoding && props.supportTextEncoding)\n    const imagePayloadVisible = props.supportImageEncoding\n    const encodingKind = imagePayloadSelected ? EncryptionMethodType.Image : EncryptionMethodType.Text\n\n    return {\n        encodingKind,\n        imagePayloadSelected,\n        imagePayloadReadonly,\n        imagePayloadVisible,\n        setEncoding,\n    }\n}\n","import { useCallback } from 'react'\nimport { useAsyncRetry } from 'react-use'\nimport Services from '#services'\nimport type { CompositionProps } from './CompositionUI.js'\nimport { MaskMessages } from '@masknet/shared-base'\n\nexport function useCompositionClipboardRequest(\n    requireClipboardPermission: boolean,\n): Pick<\n    CompositionProps,\n    | 'hasClipboardPermission'\n    | 'requireClipboardPermission'\n    | 'onRequestClipboardPermission'\n    | 'onQueryClipboardPermission'\n> {\n    const { retry, value: hasClipboardPermission = true } = useAsyncRetry(async () => {\n        if (!requireClipboardPermission) return true\n        return Services.Helper.queryExtensionPermission({ permissions: ['clipboardRead'] })\n    }, [requireClipboardPermission])\n\n    const onRequestClipboardPermission = useCallback(() => {\n        if (!requireClipboardPermission) return\n        Services.Helper.requestExtensionPermission({ permissions: ['clipboardRead'] }).finally(() => {\n            MaskMessages.events.requestExtensionPermission.sendToAll({ permissions: ['clipboardRead'] })\n        })\n    }, [requireClipboardPermission])\n\n    return {\n        onQueryClipboardPermission: retry,\n        requireClipboardPermission,\n        hasClipboardPermission,\n        onRequestClipboardPermission,\n    }\n}\n","import { encode, decode, type GrayscaleAlgorithm, DEFAULT_MASK, type EncodeOptions } from '@masknet/stego-js'\nimport { getDimension } from './utils.js'\nimport { getPreset, findPreset } from './presets.js'\nimport { decodeArrayBuffer, encodeArrayBuffer } from '@masknet/kit'\n\nexport { GrayscaleAlgorithm } from '@masknet/stego-js'\n\nexport interface SteganographyIO {\n    downloadImage: (url: string) => Promise<ArrayBuffer>\n}\nexport interface EncodeImageOptions extends SteganographyIO {\n    data: string | Uint8Array\n    password: string\n    grayscaleAlgorithm?: GrayscaleAlgorithm\n    preset: SteganographyPreset\n}\nexport enum SteganographyPreset {\n    Preset2021 = '2021',\n    Preset2022 = '2022',\n    Preset2023 = '2023',\n}\n\nexport async function steganographyEncodeImage(buf: ArrayBuffer, options: EncodeImageOptions) {\n    const { downloadImage, data, password, grayscaleAlgorithm } = options\n    const preset = getPreset(options.preset)\n    if (!preset) throw new Error('Failed to find preset.')\n\n    const optionalOptions: Partial<Readwrite<EncodeOptions>> = {}\n    if (grayscaleAlgorithm) optionalOptions.grayscaleAlgorithm = grayscaleAlgorithm\n\n    if (preset.type === 'string' && typeof data !== 'string')\n        throw new TypeError('The chosen preset must be used with string')\n    if (preset.type === 'raw' && typeof data === 'string')\n        throw new TypeError('The chosen preset must be used with Uint8Array')\n\n    const text = typeof data === 'string' ? data : encodeArrayBuffer(data)\n\n    return new Uint8Array(\n        await encode(buf, preset.mask ? await downloadImage(preset.mask) : new Uint8Array(DEFAULT_MASK), {\n            ...preset.options,\n            ...optionalOptions,\n            text,\n            pass: password,\n        }),\n    )\n}\n\nexport interface DecodeImageOptions extends SteganographyIO {\n    password: string\n}\nexport async function steganographyDecodeImage(image: Blob | string, options: DecodeImageOptions) {\n    const buffer = typeof image === 'string' ? await options.downloadImage(image) : await image.arrayBuffer()\n    const dimension = getDimension(buffer)\n    const preset = findPreset(dimension)\n    if (!preset) return null\n    const result = decode(\n        buffer,\n        preset.mask ? await options.downloadImage(preset.mask) : new Uint8Array(DEFAULT_MASK),\n        {\n            ...preset.options,\n            pass: options.password,\n        },\n    )\n    if (preset.type === 'raw') return new Uint8Array(decodeArrayBuffer(await result))\n    return result\n}\n","import { SteganographyPreset } from '@masknet/encryption'\nexport const SteganographyPresetImage: Record<SteganographyPreset, string> = {\n    [SteganographyPreset.Preset2021]: new URL('./normal/payload-2021.png', import.meta.url).toString(),\n    [SteganographyPreset.Preset2022]: new URL('./normal/payload-2022.png', import.meta.url).toString(),\n    [SteganographyPreset.Preset2023]: new URL('./normal/payload-2023.png', import.meta.url).toString(),\n}\n","import { GrayscaleAlgorithm, SteganographyPreset } from '@masknet/encryption'\nimport { SteganographyPresetImage } from '../../resources/image-payload/index.js'\nimport { activatedSiteAdaptorUI } from '../../site-adaptor-infra/index.js'\nimport Services from '#services'\nimport { downloadUrl } from '../../utils/downloadUrl.js'\n\nexport async function SteganographyPayload(data: string | Uint8Array) {\n    const password = activatedSiteAdaptorUI!.configuration.steganography?.password?.() || 'mask'\n    const preset = typeof data === 'string' ? SteganographyPreset.Preset2022 : SteganographyPreset.Preset2023\n    const blankImage = await downloadUrl(SteganographyPresetImage[preset]).then((x) => x.arrayBuffer())\n    const secretImage = await Services.Crypto.steganographyEncodeImage(new Uint8Array(blankImage), {\n        preset,\n        data,\n        password,\n        grayscaleAlgorithm:\n            activatedSiteAdaptorUI!.configuration.steganography?.grayscaleAlgorithm ?? GrayscaleAlgorithm.NONE,\n    })\n    const blob = new Blob([secretImage], { type: 'image/png' })\n    return blob\n}\n","import { useCallback } from 'react'\nimport { encodeByNetwork } from '@masknet/encryption'\nimport { PluginID, type ProfileIdentifier, Sniffings } from '@masknet/shared-base'\nimport type { Meta } from '@masknet/typed-message'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventID, EventType } from '@masknet/web3-telemetry/types'\nimport Services from '#services'\nimport { activatedSiteAdaptorUI, activatedSiteAdaptor_state } from '../../site-adaptor-infra/index.js'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport { useLastRecognizedIdentity } from '../DataSource/useActivatedUI.js'\nimport type { SubmitComposition } from './CompositionUI.js'\nimport { SteganographyPayload } from './SteganographyPayload.js'\n\nexport function useSubmit(onClose: () => void, reason: 'timeline' | 'popup' | 'reply') {\n    const t = useMaskSharedTrans()\n    const lastRecognizedIdentity = useLastRecognizedIdentity()\n\n    return useCallback(\n        async (info: SubmitComposition) => {\n            const { content, encode, target } = info\n            const fallbackProfile: ProfileIdentifier | undefined =\n                activatedSiteAdaptor_state!.profiles.value[0]?.identifier\n            if (encode === 'image' && !lastRecognizedIdentity) throw new Error('No Current Profile')\n\n            // rawEncrypted is either string or Uint8Array\n            // string is the old format, Uint8Array is the new format.\n            const rawEncrypted = await Services.Crypto.encryptTo(\n                info.version,\n                content,\n                target,\n                lastRecognizedIdentity?.identifier ?? fallbackProfile,\n                activatedSiteAdaptorUI!.encryptPayloadNetwork,\n            )\n            // Since we cannot directly send binary in the composition box, we need to encode it into a string.\n            const encrypted = encodeByNetwork(activatedSiteAdaptorUI!.encryptPayloadNetwork, rawEncrypted)\n\n            const decoratedText =\n                encode === 'image'\n                    ? decorateEncryptedText('', t, content.meta)\n                    : decorateEncryptedText(encrypted, t, content.meta)\n            const defaultText: string =\n                encode === 'image'\n                    ? t.additional_post_box__encrypted_post_pre({\n                          encrypted: 'https://mask.io/',\n                      })\n                    : t.additional_post_box__encrypted_post_pre({ encrypted })\n            const mediaObject =\n                encode === 'image'\n                    ? // We can send raw binary through the image, but for the text we still use the old way.\n                      // For text, it must send the text _after_ encodeByNetwork, otherwise it will break backward compatibility.\n                      await SteganographyPayload(typeof rawEncrypted === 'string' ? encrypted : rawEncrypted)\n                    : undefined\n\n            if (activatedSiteAdaptorUI?.automation.endpoint?.publishPost) {\n                await activatedSiteAdaptorUI.automation.endpoint.publishPost(\n                    mediaObject ? [decoratedText || defaultText, mediaObject] : [decoratedText || defaultText],\n                    {\n                        reason,\n                    },\n                )\n            } else {\n                if (encode === 'image') {\n                    if (!mediaObject) throw new Error('Failed to create image payload.')\n                    // Don't await this, otherwise the dialog won't disappear\n                    activatedSiteAdaptorUI?.automation.nativeCompositionDialog?.attachImage?.(mediaObject, {\n                        recover: true,\n                        relatedTextPayload: decoratedText || defaultText,\n                        reason,\n                    })\n                } else {\n                    activatedSiteAdaptorUI?.automation.nativeCompositionDialog?.attachText?.(\n                        decoratedText || defaultText,\n                        {\n                            recover: true,\n                            reason,\n                        },\n                    )\n                }\n            }\n\n            if (content.meta?.has(`${PluginID.RedPacket}:1`) || content.meta?.has(`${PluginID.RedPacket}_nft:1`))\n                Telemetry.captureEvent(EventType.Interact, EventID.EntryAppLuckSend)\n            Telemetry.captureEvent(EventType.Interact, EventID.EntryMaskComposeEncrypt)\n\n            onClose()\n        },\n        [t, lastRecognizedIdentity, onClose, reason],\n    )\n}\n\n// TODO: Provide API to plugin to post-process post content,\n// then we can move these -PreText's and meta readers into plugin's own context\nfunction decorateEncryptedText(\n    encrypted: string,\n    t: ReturnType<typeof useMaskSharedTrans>,\n    meta?: Meta,\n): string | null {\n    const hasOfficialAccount = Sniffings.is_twitter_page || Sniffings.is_facebook_page\n    const officialAccount = Sniffings.is_twitter_page ? t.twitter_account() : t.facebook_account()\n    const options = { interpolation: { escapeValue: false } }\n\n    // Note: since this is in the composition stage, we can assume plugins don't insert old version of meta.\n    if (meta?.has(`${PluginID.RedPacket}:1`) || meta?.has(`${PluginID.RedPacket}_nft:1`)) {\n        return hasOfficialAccount\n            ? t.additional_post_box__encrypted_post_pre_red_packet_sns_official_account({\n                  encrypted,\n                  account: officialAccount,\n                  ...options,\n              })\n            : t.additional_post_box__encrypted_post_pre_red_packet({ encrypted, ...options })\n    } else if (meta?.has(`${PluginID.FileService}:3`)) {\n        return hasOfficialAccount\n            ? t.additional_post_box__encrypted_post_pre_file_service_sns_official_account({\n                  encrypted,\n                  ...options,\n              })\n            : t.additional_post_box__encrypted_post_pre_file_service({\n                  encrypted,\n                  ...options,\n              })\n    }\n    return null\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { useAsync } from 'react-use'\nimport { DialogContent, alpha } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { useCurrentPersonaConnectStatus, InjectedDialog, PersonaAction } from '@masknet/shared'\nimport { CrossIsolationMessages, EMPTY_OBJECT, MaskMessages, currentPersonaIdentifier } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventID, EventType } from '@masknet/web3-telemetry/types'\nimport type { CompositionType } from '@masknet/plugin-infra/content-script'\nimport Services from '#services'\nimport { activatedSiteAdaptorUI } from '../../site-adaptor-infra/index.js'\nimport { useCurrentIdentity, useLastRecognizedIdentity } from '../DataSource/useActivatedUI.js'\nimport { CompositionDialogUI, type CompositionRef, E2EUnavailableReason } from './CompositionUI.js'\nimport { useCompositionClipboardRequest } from './useCompositionClipboardRequest.js'\nimport { useRecipientsList } from './useRecipientsList.js'\nimport { useSubmit } from './useSubmit.js'\nimport { usePersonasFromDB, useCurrentPersona } from '../../../shared-ui/hooks/index.js'\nimport { EncryptionMethodType } from './EncryptionMethodSelector.js'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    dialogRoot: {\n        minWidth: 400,\n        width: 600,\n        boxShadow: 'none',\n        backgroundImage: 'none',\n        maxWidth: 'none',\n    },\n    hideDialogRoot: {\n        visibility: 'hidden',\n    },\n    dialogContent: {\n        padding: 0,\n    },\n    persona: {\n        padding: 0,\n        background: alpha(theme.palette.maskColor.bottom, 0.8),\n        width: 'auto',\n        boxShadow: 'none',\n    },\n}))\n\ninterface PostDialogProps {\n    type?: CompositionType\n    requireClipboardPermission?: boolean\n}\n\nexport function Composition({ type = 'timeline', requireClipboardPermission }: PostDialogProps) {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles()\n    const currentIdentity = useCurrentIdentity()?.identifier\n    const allPersonas = usePersonasFromDB()\n    const lastRecognized = useLastRecognizedIdentity()\n    const currentIdentifier = useValueRef(currentPersonaIdentifier)\n    const { value: connectStatus } = useCurrentPersonaConnectStatus(\n        allPersonas,\n        currentIdentifier,\n        Services.Helper.openDashboard,\n        lastRecognized,\n    )\n    /** @deprecated */\n    const { value: hasLocalKey } = useAsync(\n        async () => (currentIdentity ? Services.Identity.hasLocalKey(currentIdentity) : false),\n        [currentIdentity, connectStatus],\n    )\n\n    const [reason, setReason] = useState<'timeline' | 'popup' | 'reply'>('timeline')\n    const [initialMetas, setInitialMetas] = useState<Record<string, unknown>>(EMPTY_OBJECT)\n\n    const [open, setOpen] = useState(false)\n    const [isOpenFromApplicationBoard, setIsOpenFromApplicationBoard] = useState(false)\n\n    const onClose = useCallback(() => {\n        setOpen(false)\n        setInitialMetas(EMPTY_OBJECT)\n\n        UI.current?.reset()\n    }, [])\n\n    const { onQueryClipboardPermission, hasClipboardPermission, onRequestClipboardPermission } =\n        useCompositionClipboardRequest(requireClipboardPermission || false)\n\n    useEffect(() => {\n        return MaskMessages.events.requestExtensionPermission.on(() => onQueryClipboardPermission?.())\n    }, [onQueryClipboardPermission])\n\n    useEffect(() => {\n        return CrossIsolationMessages.events.compositionDialogEvent.on(({ reason, open, content, options }) => {\n            if ((reason !== 'reply' && reason !== type) || (reason === 'reply' && type === 'popup')) return\n\n            setOpen(open)\n            setReason(reason)\n            setIsOpenFromApplicationBoard(!!options?.isOpenFromApplicationBoard)\n            setInitialMetas(options?.initialMetas ?? EMPTY_OBJECT)\n            if (content) UI.current?.setMessage(content)\n            if (options?.target) UI.current?.setEncryptionKind(options.target)\n            if (options?.startupPlugin) UI.current?.startPlugin(options.startupPlugin, options.startupPluginProps)\n        })\n    }, [type])\n\n    useEffect(() => {\n        if (!open) return\n\n        Telemetry.captureEvent(EventType.Access, EventID.EntryMaskComposeOpen)\n        Telemetry.captureEvent(EventType.Interact, EventID.EntryMaskComposeVisibleAll)\n\n        return MaskMessages.events.replaceComposition.on((message) => {\n            if (!UI.current) return\n            UI.current.setMessage(message)\n        })\n    }, [open])\n\n    const onSubmit_ = useSubmit(onClose, reason)\n\n    const UI = useRef<CompositionRef>(null)\n    const networkSupport = activatedSiteAdaptorUI!.injection.newPostComposition?.supportedOutputTypes\n    const recipients = useRecipientsList()\n    const isE2E_Disabled = (encode: EncryptionMethodType) => {\n        if (!connectStatus.currentPersona && !connectStatus.hasPersona) return E2EUnavailableReason.NoPersona\n        if (!connectStatus.connected && connectStatus.hasPersona) return E2EUnavailableReason.NoConnection\n        if (!hasLocalKey && encode === EncryptionMethodType.Image) return E2EUnavailableReason.NoLocalKey\n        return\n    }\n    const persona = useCurrentPersona()\n\n    return (\n        <InjectedDialog\n            classes={{ paper: cx(classes.dialogRoot, !open ? classes.hideDialogRoot : '') }}\n            open={open}\n            onClose={onClose}\n            title={t.post_dialog__title()}\n            independent>\n            <DialogContent classes={{ root: classes.dialogContent }}>\n                <CompositionDialogUI\n                    type={type}\n                    ref={UI}\n                    hasClipboardPermission={hasClipboardPermission}\n                    onRequestClipboardPermission={onRequestClipboardPermission}\n                    requireClipboardPermission={requireClipboardPermission}\n                    recipients={recipients}\n                    maxLength={560}\n                    onSubmit={onSubmit_}\n                    supportImageEncoding={networkSupport?.text ?? false}\n                    supportTextEncoding={networkSupport?.image ?? false}\n                    e2eEncryptionDisabled={isE2E_Disabled}\n                    isOpenFromApplicationBoard={isOpenFromApplicationBoard}\n                    initialMetas={initialMetas}\n                    personaAction={\n                        persona ? (\n                            <PersonaAction currentPersona={persona} classes={{ bottomFixed: classes.persona }} />\n                        ) : null\n                    }\n                />\n            </DialogContent>\n        </InjectedDialog>\n    )\n}\n","import { cloneElement, useRef, useState, type ReactElement, useLayoutEffect } from 'react'\nimport { makeStyles, usePortalShadowRoot } from '@masknet/theme'\nimport { Box, Modal, styled, Typography } from '@mui/material'\nimport { sayHelloShowed, userGuideFinished, userGuideStatus } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { activatedSiteAdaptorUI } from '../../site-adaptor-infra/index.js'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        position: 'absolute',\n        boxShadow: `0 0 0 3000px ${theme.palette.mode === 'light' ? 'rgba(0,0,0,.3)' : 'rgba(110,118,125,.3)'}`,\n        borderRadius: 8,\n    },\n    noBoxShadowCover: {\n        boxShadow: `0 0 0 3000px ${theme.palette.mode === 'light' ? 'rgba(0,0,0,.2)' : 'rgba(110,118,125,.2)'}`,\n    },\n    target: {\n        background: 'transparent',\n    },\n    mask: {\n        position: 'fixed',\n        top: 0,\n        width: '100vw',\n        height: '100vh',\n        background: 'transparent',\n        zIndex: 1000,\n    },\n    card: {\n        position: 'absolute',\n        left: 0,\n        width: 256,\n        padding: '16px',\n        borderRadius: '16px',\n        background: 'rgba(0,0,0,.85)',\n        boxShadow: '0 4px 8px rgba(0,0,0,.1)',\n        boxSizing: 'border-box',\n        color: '#fff',\n        '&.arrow-top:after': {\n            content: '\"\"',\n            display: 'inline-block',\n            width: 0,\n            height: 0,\n            border: 'solid 8px transparent',\n            borderBottomColor: 'rgba(0,0,0,.85)',\n            borderBottomWidth: '13px',\n            borderTopWidth: 0,\n            position: 'absolute',\n            top: '-13px',\n            left: '24px',\n        },\n        '&.arrow-bottom:after': {\n            content: '\"\"',\n            display: 'inline-block',\n            width: 0,\n            height: 0,\n            border: 'solid 8px transparent',\n            borderTopColor: 'rgba(0,0,0,.85)',\n            borderTopWidth: '13px',\n            borderBottomWidth: 0,\n            position: 'absolute',\n            bottom: '-13px',\n            left: '24px',\n        },\n    },\n    buttonContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingTop: '16px',\n    },\n}))\n\nconst ActionButton = styled('button')({\n    boxSizing: 'border-box',\n    width: 104,\n    height: 32,\n    lineHeight: '32px',\n    borderRadius: 16,\n    textAlign: 'center',\n    border: 'solid 1px #000',\n    borderColor: '#fff',\n    cursor: 'pointer',\n    fontFamily: 'PingFang SC',\n    background: 'none',\n    color: 'inherit',\n})\n\nconst NextButton = styled(ActionButton)({\n    border: 'none',\n    color: '#111418',\n    background: '#fff',\n})\n\ninterface GuideStepProps {\n    // cloneElement is used.\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    children: ReactElement\n    total: number\n    step: number\n    tip: string\n    arrow?: boolean\n    onComplete?: () => void\n}\n\nexport default function GuideStep({ total, step, tip, children, arrow = true, onComplete }: GuideStepProps) {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles()\n    const childrenRef = useRef<HTMLElement>()\n    const [clientRect, setClientRect] = useState<Pick<DOMRect, 'width' | 'height' | 'top' | 'left'>>()\n    const [bottomAvailable, setBottomAvailable] = useState(true)\n    const { networkIdentifier } = activatedSiteAdaptorUI!\n    const currentStep = useValueRef(userGuideStatus[networkIdentifier])\n    const finished = useValueRef(userGuideFinished[networkIdentifier])\n    const isCurrentStep = +currentStep === step\n\n    const box1Ref = useRef<HTMLDivElement>(null)\n    const box2Ref = useRef<HTMLDivElement>(null)\n    const box3Ref = useRef<HTMLDivElement>(null)\n\n    const stepVisible = isCurrentStep && !finished && !!clientRect?.top && !!clientRect.left\n\n    const onSkip = () => {\n        sayHelloShowed[networkIdentifier].value = true\n        userGuideFinished[networkIdentifier].value = true\n    }\n\n    const onNext = () => {\n        if (step !== total) {\n            userGuideStatus[networkIdentifier].value = String(step + 1)\n        }\n        if (step === total - 1) {\n            document.body.scrollIntoView()\n        }\n    }\n\n    const onTry = () => {\n        userGuideFinished[networkIdentifier].value = true\n        onComplete?.()\n    }\n\n    useLayoutEffect(() => {\n        let stopped = false\n        requestAnimationFrame(function fn() {\n            if (stopped) return\n            requestAnimationFrame(fn)\n            if (!childrenRef.current) return\n            const cr = childrenRef.current.getBoundingClientRect()\n            if (!cr.height) return\n            const bottomAvailable = window.innerHeight - cr.height - cr.top > 200\n            setBottomAvailable(bottomAvailable)\n            setClientRect((old) => {\n                if (\n                    old &&\n                    (old.height === cr.height || old.left === cr.left || old.top === cr.top || old.width === cr.width)\n                )\n                    return old\n                return cr\n            })\n            if (box1Ref.current) {\n                box1Ref.current.style.top = cr.top + 'px'\n                box1Ref.current.style.left = cr.left + 'px'\n            }\n            if (box2Ref.current) {\n                box2Ref.current.style.width = cr.width + 'px'\n                box2Ref.current.style.height = cr.height + 'px'\n            }\n            if (box3Ref.current) {\n                box3Ref.current.style.left = (cr.width < 50 ? -cr.width / 2 : 0) + 'px'\n                box3Ref.current.style.top = bottomAvailable ? cr.height + 16 + 'px' : ''\n                box3Ref.current.style.bottom = bottomAvailable ? '' : cr.height + 16 + 'px'\n            }\n        })\n        return () => void (stopped = true)\n    }, [])\n\n    return (\n        <>\n            {cloneElement(children, { ref: childrenRef })}\n            {usePortalShadowRoot((container) => {\n                if (!stepVisible) return null\n                return (\n                    <Modal open hideBackdrop container={container} className={classes.mask} onClose={onSkip}>\n                        {/* this extra div is feed to <FocusTrap /> If we remove it, it will show a blue outline on the box1 */}\n                        <div>\n                            <div\n                                ref={box1Ref}\n                                className={cx(classes.container, step === 3 ? classes.noBoxShadowCover : null)}>\n                                <Box ref={box2Ref} className={classes.target}>\n                                    <div\n                                        ref={box3Ref}\n                                        className={cx(\n                                            classes.card,\n                                            arrow ? (bottomAvailable ? 'arrow-top' : 'arrow-bottom') : '',\n                                        )}>\n                                        <Box paddingBottom=\"16px\">\n                                            <Typography fontSize={20}>\n                                                {step}/{total}\n                                            </Typography>\n                                        </Box>\n                                        <div>\n                                            <Typography fontSize={14} fontWeight={600}>\n                                                {tip}\n                                            </Typography>\n                                        </div>\n                                        <div className={classes.buttonContainer}>\n                                            {step === total ? (\n                                                <NextButton type=\"button\" style={{ width: '100%' }} onClick={onTry}>\n                                                    {t.try()}\n                                                </NextButton>\n                                            ) : (\n                                                <>\n                                                    <ActionButton type=\"button\" onClick={onSkip}>\n                                                        {t.skip()}\n                                                    </ActionButton>\n                                                    <NextButton type=\"button\" onClick={onNext}>\n                                                        {t.next()}\n                                                    </NextButton>\n                                                </>\n                                            )}\n                                        </div>\n                                    </div>\n                                </Box>\n                            </div>\n                        </div>\n                    </Modal>\n                )\n            })}\n        </>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { MaskColors, ShadowRootTooltip, makeStyles } from '@masknet/theme'\nimport { IconButton, Typography } from '@mui/material'\nimport { memo } from 'react'\nimport { isMobileFacebook } from '../../site-adaptors/facebook.com/utils/isMobile.js'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport GuideStep from '../GuideStep/index.js'\n\ninterface TooltipConfigProps {\n    placement?: 'bottom' | 'top'\n    disabled?: boolean\n}\n\ninterface PostDialogHintUIProps extends withClasses<'buttonTransform' | 'iconButton' | 'tooltip'> {\n    disableGuideTip?: boolean\n    size?: number\n    tooltip?: TooltipConfigProps\n    iconType?: string\n    onHintButtonClicked: () => void\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    button: {\n        // TODO: is it correct? (what about twitter?)\n        padding: isMobileFacebook ? 0 : 'var(--icon-padding, 10px)',\n    },\n    text: {\n        color: theme.palette.grey[300],\n        marginLeft: theme.spacing(1),\n    },\n    wrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        padding: '8px 10px',\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n}))\n\nconst ICON_MAP: Record<string, JSX.Element> = {\n    minds: <Icons.MaskInMinds size={18} />,\n    default: (\n        <Icons.SharpMask\n            style={{\n                height: 'var(--icon-size, 17px)',\n                width: 'var(--icon-size, 17px)',\n            }}\n            color={MaskColors.light.maskColor.publicTwitter}\n        />\n    ),\n}\n\nconst EntryIconButton = memo(function EntryIconButton(props: PostDialogHintUIProps) {\n    const t = useMaskSharedTrans()\n    const { tooltip, disableGuideTip } = props\n    const { classes, cx } = useStyles(undefined, { props })\n\n    const Entry = (\n        <ShadowRootTooltip\n            title={t.mask_network()}\n            placement={tooltip?.placement}\n            disableHoverListener={tooltip?.disabled}\n            PopperProps={{\n                disablePortal: false,\n            }}\n            arrow>\n            <IconButton\n                size=\"large\"\n                className={cx(classes.button, classes.iconButton)}\n                onClick={props.onHintButtonClicked}>\n                {ICON_MAP?.[props?.iconType ?? 'default']}\n            </IconButton>\n        </ShadowRootTooltip>\n    )\n\n    return disableGuideTip ? (\n        Entry\n    ) : (\n        <GuideStep step={4} total={4} tip={t.user_guide_tip_4()} onComplete={props.onHintButtonClicked}>\n            {Entry}\n        </GuideStep>\n    )\n})\n\nexport const PostDialogHint = memo(function PostDialogHintUI(props: PostDialogHintUIProps) {\n    const { onHintButtonClicked, size, ...others } = props\n    const { classes } = useStyles(undefined, { props })\n    const t = useMaskSharedTrans()\n\n    return isMobileFacebook ? (\n        <div className={classes.wrapper} onClick={onHintButtonClicked}>\n            <EntryIconButton size={size} onHintButtonClicked={() => undefined} />\n            <Typography className={classes.text}>{t.post_modal_hint__button()}</Typography>\n        </div>\n    ) : (\n        <div className={classes.buttonTransform}>\n            <EntryIconButton size={size} onHintButtonClicked={onHintButtonClicked} {...others} />\n        </div>\n    )\n})\n","import { useMemo } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { PluginID } from '@masknet/shared-base'\nimport { useActivatedPluginsSiteAdaptor, createInjectHooksRenderer } from '@masknet/plugin-infra/content-script'\nimport { useCurrentVisitingIdentity } from '../DataSource/useActivatedUI.js'\n\ninterface ProfileCoverProps extends withClasses<'root'> {}\n\nconst useStyles = makeStyles()(() => ({\n    root: {\n        position: 'absolute',\n        top: 0,\n        width: '100%',\n        height: '100%',\n    },\n}))\nexport function ProfileCover(props: ProfileCoverProps) {\n    const { classes } = useStyles(undefined, { props: { classes: props.classes } })\n    const currentVisitingIdentity = useCurrentVisitingIdentity()\n\n    // TODO: Multi-plugin rendering support\n    const component = useMemo(() => {\n        const Component = createInjectHooksRenderer(useActivatedPluginsSiteAdaptor.visibility.useAnyMode, (x) => {\n            const cover = x.ProfileCover?.find((x) => x.ID === `${PluginID.Debugger}_cover`)\n            return cover?.UI?.Cover\n        })\n\n        return <Component identity={currentVisitingIdentity} />\n    }, [currentVisitingIdentity])\n\n    if (!component) return null\n    return <div className={classes?.root}>{component}</div>\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Others } from './useWeb3Others.js'\n\nexport function useChainColor<T extends NetworkPluginID>(\n    pluginID?: T,\n    expectedChainId?: Web3Helper.Definition[T]['ChainId'],\n) {\n    const { chainId } = useChainContext({ chainId: expectedChainId })\n    const Others = useWeb3Others(pluginID)\n\n    return Others?.chainResolver.chainColor?.(chainId) ?? 'transparent'\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Others } from './useWeb3Others.js'\n\nexport function useChainIdMainnet<T extends NetworkPluginID>(\n    pluginID?: T,\n    expectedChainId?: Web3Helper.Definition[T]['ChainId'],\n) {\n    const { chainId } = useChainContext({ chainId: expectedChainId })\n    const Others = useWeb3Others(pluginID)\n    return Others.chainResolver.isMainnet?.(chainId) ?? false\n}\n","import { useCallback } from 'react'\nimport { useAsyncRetry } from 'react-use'\nimport type { PersonaPerSiteConnectStatus } from '@masknet/shared'\nimport type { PersonaInformation } from '@masknet/shared-base'\nimport Services from '#services'\nimport { useLastRecognizedIdentity } from './useActivatedUI.js'\nimport { usePersonasFromDB } from '../../../shared-ui/hooks/usePersonasFromDB.js'\nimport { useSetupGuideStatus } from '../GuideStep/useSetupGuideStatus.js'\n\nexport function usePersonaPerSiteConnectStatus() {\n    const personas = usePersonasFromDB()\n    const lastState = useSetupGuideStatus()\n    const lastRecognized = useLastRecognizedIdentity()\n    const username = lastState.username || lastRecognized.identifier?.userId\n    const checkSiteConnectedToCurrentPersona = useCallback(\n        (persona: PersonaInformation) =>\n            username ? persona.linkedProfiles.some((x) => x.identifier.userId === username) : false,\n        [username],\n    )\n\n    return useAsyncRetry<PersonaPerSiteConnectStatus | undefined>(async () => {\n        const currentPersonaIdentifier = await Services.Settings.getCurrentPersonaIdentifier()\n        const currentPersona = (await Services.Identity.queryOwnedPersonaInformation(true)).find(\n            (x) => x.identifier === currentPersonaIdentifier,\n        )\n        const currentSiteConnectedPersona = personas.find(checkSiteConnectedToCurrentPersona)\n        if (!currentPersona || !currentSiteConnectedPersona) return\n        return {\n            isSiteConnectedToCurrentPersona: currentPersona\n                ? checkSiteConnectedToCurrentPersona(currentPersona)\n                : false,\n            currentPersonaPublicKey: currentPersona?.identifier.rawPublicKey,\n            currentSiteConnectedPersonaPublicKey: currentSiteConnectedPersona?.identifier.rawPublicKey,\n        }\n    }, [checkSiteConnectedToCurrentPersona, personas.map((x) => x.identifier.toText()).join(',')])\n}\n","import { useCallback } from 'react'\nimport type { PluginID } from '@masknet/shared-base'\nimport { ApplicationBoardModal } from '@masknet/shared'\nimport { useLastRecognizedIdentity } from '../DataSource/useActivatedUI.js'\nimport { activatedSiteAdaptorUI } from '../../site-adaptor-infra/ui.js'\nimport { usePersonasFromDB } from '../../../shared-ui/hooks/usePersonasFromDB.js'\nimport { usePersonaPerSiteConnectStatus } from '../DataSource/usePersonaPerSiteConnectStatus.js'\nimport Services from '#services'\n\nexport function useOpenApplicationBoardDialog(quickMode?: boolean, focusPluginID?: PluginID) {\n    const lastRecognized = useLastRecognizedIdentity()\n    const allPersonas = usePersonasFromDB()\n    const { value: applicationCurrentStatus, loading: personaPerSiteConnectStatusLoading } =\n        usePersonaPerSiteConnectStatus()\n\n    return useCallback(\n        () =>\n            ApplicationBoardModal.open({\n                allPersonas,\n                lastRecognized,\n                openDashboard: Services.Helper.openDashboard,\n                currentSite: activatedSiteAdaptorUI!.networkIdentifier,\n                queryOwnedPersonaInformation: Services.Identity.queryOwnedPersonaInformation,\n                setPluginMinimalModeEnabled: Services.Settings.setPluginMinimalModeEnabled,\n                personaPerSiteConnectStatusLoading,\n                applicationCurrentStatus,\n                quickMode,\n                focusPluginID,\n            }),\n        [\n            allPersonas,\n            lastRecognized,\n            applicationCurrentStatus,\n            personaPerSiteConnectStatusLoading,\n            quickMode,\n            focusPluginID,\n        ],\n    )\n}\n","import { useCallback } from 'react'\nimport {\n    CircularProgress,\n    type ListItemButtonProps,\n    type ListItemIconProps,\n    type ListItemTextProps,\n    type TypographyProps,\n    Typography as MuiTypography,\n    ListItemButton as MuiListItemButton,\n    ListItemIcon as MuiListItemIcon,\n    ListItemText as MuiListItemText,\n    Box,\n    useTheme,\n} from '@mui/material'\nimport { FiberManualRecord as FiberManualRecordIcon } from '@mui/icons-material'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { TransactionStatusType } from '@masknet/web3-shared-base'\nimport {\n    useProviderDescriptor,\n    useChainContext,\n    useChainColor,\n    useChainIdValid,\n    useWeb3Others,\n    useReverseAddress,\n    useChainIdMainnet,\n    useRecentTransactions,\n} from '@masknet/web3-hooks-base'\nimport { WalletIcon, SelectProviderModal, WalletStatusModal } from '@masknet/shared'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport GuideStep from '../GuideStep/index.js'\nimport { useOpenApplicationBoardDialog } from '../shared/openApplicationBoardDialog.js'\n\nconst useStyles = makeStyles()(() => ({\n    title: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    chainIcon: {\n        fontSize: 18,\n        width: 18,\n        height: 18,\n    },\n}))\ninterface ToolboxHintProps {\n    Container?: React.ComponentType<React.PropsWithChildren<{}>>\n    ListItemButton?: React.ComponentType<Pick<ListItemButtonProps, 'onClick' | 'children'>>\n    ListItemText?: React.ComponentType<Pick<ListItemTextProps, 'primary'>>\n    ListItemIcon?: React.ComponentType<Pick<ListItemIconProps, 'children'>>\n    Typography?: React.ComponentType<Pick<TypographyProps, 'children' | 'className'>>\n    iconSize?: number\n    badgeSize?: number\n    mini?: boolean\n    category: 'wallet' | 'application'\n}\nexport function ToolboxHintUnstyled(props: ToolboxHintProps) {\n    return props.category === 'wallet' ? <ToolboxHintForWallet {...props} /> : <ToolboxHintForApplication {...props} />\n}\n\nfunction ToolboxHintForApplication(props: ToolboxHintProps) {\n    const {\n        ListItemButton = MuiListItemButton,\n        ListItemIcon = MuiListItemIcon,\n        Container = 'div',\n        Typography = MuiTypography,\n        iconSize = 24,\n        mini,\n        ListItemText = MuiListItemText,\n    } = props\n    const { classes } = useStyles()\n    const t = useMaskSharedTrans()\n\n    const openApplicationBoardDialog = useOpenApplicationBoardDialog()\n\n    return (\n        <GuideStep step={1} total={4} tip={t.user_guide_tip_1()}>\n            <Container>\n                <ListItemButton onClick={openApplicationBoardDialog}>\n                    <ListItemIcon>\n                        <Icons.MaskBlue size={iconSize} />\n                    </ListItemIcon>\n                    {mini ? null : (\n                        <ListItemText\n                            primary={\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        justifyContent: 'space-between',\n                                        alignItems: 'center',\n                                    }}>\n                                    <Typography className={classes.title}>{t.mask_network()}</Typography>\n                                </Box>\n                            }\n                        />\n                    )}\n                </ListItemButton>\n            </Container>\n        </GuideStep>\n    )\n}\n\nfunction ToolboxHintForWallet(props: ToolboxHintProps) {\n    const t = useMaskSharedTrans()\n    const {\n        ListItemButton = MuiListItemButton,\n        ListItemText = MuiListItemText,\n        ListItemIcon = MuiListItemIcon,\n        Container = 'div',\n        Typography = MuiTypography,\n        iconSize = 24,\n        badgeSize = 12,\n        mini,\n    } = props\n    const { classes } = useStyles()\n    const { onClickToolbox, title, chainColor, shouldDisplayChainIndicator, account, provider } = useToolbox()\n\n    const theme = useTheme()\n\n    return (\n        <GuideStep step={2} total={4} tip={t.user_guide_tip_2()}>\n            <Container>\n                <ListItemButton onClick={onClickToolbox}>\n                    <ListItemIcon>\n                        {account && provider && provider.type !== ProviderType.MaskWallet ? (\n                            <WalletIcon\n                                size={iconSize}\n                                badgeSize={badgeSize}\n                                mainIcon={provider.icon}\n                                badgeIconBorderColor={theme.palette.background.paper}\n                            />\n                        ) : (\n                            <Icons.Wallet size={iconSize} />\n                        )}\n                    </ListItemIcon>\n                    {mini ? null : (\n                        <ListItemText\n                            primary={\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        justifyContent: 'space-between',\n                                        alignItems: 'center',\n                                    }}>\n                                    <Typography className={classes.title}>{title}</Typography>\n                                    {shouldDisplayChainIndicator ? (\n                                        <FiberManualRecordIcon\n                                            className={classes.chainIcon}\n                                            style={{\n                                                color: chainColor,\n                                            }}\n                                        />\n                                    ) : null}\n                                </Box>\n                            }\n                        />\n                    )}\n                </ListItemButton>\n            </Container>\n        </GuideStep>\n    )\n}\n\nfunction useToolbox() {\n    const t = useMaskSharedTrans()\n    const { account } = useChainContext()\n    const chainColor = useChainColor()\n    const chainIdValid = useChainIdValid()\n    const chainIdMainnet = useChainIdMainnet()\n    const provider = useProviderDescriptor()\n    const Others = useWeb3Others()\n    const pendingTransactions = useRecentTransactions(undefined, TransactionStatusType.NOT_DEPEND)\n    const { data: domain } = useReverseAddress(undefined, account, true)\n\n    function getToolboxTitle() {\n        if (!account || !provider) return t.plugin_wallet_connect_wallet()\n        if (pendingTransactions.length <= 0)\n            return Others.formatDomainName?.(domain) || Others.formatAddress(account, 4) || account\n        return (\n            <>\n                <span style={{ marginRight: 12 }}>\n                    {t.plugin_wallet_pending_transactions({\n                        count: pendingTransactions.length,\n                    })}\n                </span>\n                <CircularProgress thickness={6} size={20} color=\"inherit\" />\n            </>\n        )\n    }\n\n    const onClickToolbox = useCallback(() => {\n        return account && provider ? WalletStatusModal.open() : SelectProviderModal.open()\n    }, [account, provider])\n\n    return {\n        account,\n        chainColor,\n        provider,\n        onClickToolbox,\n        title: getToolboxTitle(),\n        shouldDisplayChainIndicator: account && chainIdValid && !chainIdMainnet,\n    }\n}\n","import { useCallback, useState } from 'react'\nimport { useMount } from 'react-use'\nimport { IconButton } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { useCurrentPersonaConnectStatus } from '@masknet/shared'\nimport { DashboardRoutes, currentPersonaIdentifier } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { MaskColors, makeStyles } from '@masknet/theme'\nimport Services from '#services'\nimport { activatedSiteAdaptorUI, activatedSiteAdaptor_state } from '../../site-adaptor-infra/index.js'\nimport { useLastRecognizedIdentity } from '../DataSource/useActivatedUI.js'\nimport { usePersonasFromDB } from '../../../shared-ui/hooks/usePersonasFromDB.js'\n\ninterface BannerUIProps extends withClasses<'header' | 'content' | 'actions' | 'buttonText'> {\n    description?: string\n    nextStep:\n        | 'hidden'\n        | {\n              onClick(): void\n          }\n    username?:\n        | 'hidden'\n        | {\n              isValid(username: string): boolean\n              value: string\n              defaultValue: string\n              onChange(nextValue: string): void\n          }\n    iconType?: string\n}\n\nconst ICON_MAP: Record<string, JSX.Element> = {\n    minds: <Icons.MaskInMinds size={18} />,\n    default: <Icons.SharpMask size={17} color={MaskColors.light.maskColor.publicTwitter} />,\n}\nconst useStyles = makeStyles()({\n    buttonText: {\n        width: 38,\n        height: 38,\n        margin: '10px 0',\n    },\n})\n\nfunction BannerUI(props: BannerUIProps) {\n    const { classes } = useStyles(undefined, { props })\n\n    return props.nextStep === 'hidden' ? null : (\n        <IconButton size=\"large\" className={classes.buttonText} onClick={props.nextStep.onClick}>\n            {ICON_MAP?.[props?.iconType ?? 'default']}\n        </IconButton>\n    )\n}\n\ninterface BannerProps extends Partial<BannerUIProps> {}\n\nexport function Banner(props: BannerProps) {\n    const lastRecognizedIdentity = useLastRecognizedIdentity()\n    const allPersonas = usePersonasFromDB()\n    const currentIdentifier = useValueRef(currentPersonaIdentifier)\n    const { value: personaConnectStatus } = useCurrentPersonaConnectStatus(\n        allPersonas,\n        currentIdentifier,\n        Services.Helper.openDashboard,\n        lastRecognizedIdentity,\n    )\n    const { nextStep } = props\n    const networkIdentifier = activatedSiteAdaptorUI!.networkIdentifier\n    const identities = useValueRef(activatedSiteAdaptor_state!.profiles)\n    const [value, onChange] = useState('')\n    const defaultNextStep = useCallback(() => {\n        if (nextStep === 'hidden') return\n        if (!networkIdentifier) {\n            nextStep?.onClick()\n            nextStep ?? console.warn('You must provide one of networkIdentifier or nextStep.onClick')\n            return\n        }\n\n        Services.Helper.openDashboard(\n            personaConnectStatus.hasPersona ? DashboardRoutes.Personas : DashboardRoutes.SignUpPersona,\n        )\n    }, [networkIdentifier, nextStep])\n    const defaultUserName = networkIdentifier\n        ? {\n              defaultValue: lastRecognizedIdentity.identifier?.userId ?? '',\n              value,\n              onChange,\n              isValid: activatedSiteAdaptorUI!.utils.isValidUsername || (() => true),\n          }\n        : ('hidden' as const)\n\n    const [mounted, setMounted] = useState(false)\n    useMount(() => setMounted(true))\n\n    return identities.length === 0 && mounted ? (\n        <BannerUI\n            {...props}\n            username={props.username ?? defaultUserName}\n            nextStep={props.nextStep ?? { onClick: defaultNextStep }}\n        />\n    ) : null\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { produce } from 'immer'\nimport { makeStyles } from '@masknet/theme'\nimport {\n    type TransformationContext,\n    type TypedMessage,\n    isTypedMessageEqual,\n    emptyTransformationContext,\n    FlattenTypedMessage,\n    forEachTypedMessageChild,\n    isTypedMessageAnchor,\n    makeTypedMessageText,\n    isTypedMessageText,\n} from '@masknet/typed-message'\nimport { MaskMessages } from '@masknet/shared-base'\nimport { TypedMessageRender, useTransformedValue } from '@masknet/typed-message-react'\nimport { usePostInfoDetails } from '@masknet/plugin-infra/content-script'\nimport { TypedMessageRenderContext } from '../../../shared-ui/TypedMessageRender/context.js'\nimport { useCurrentIdentity } from '../DataSource/useActivatedUI.js'\nimport { activatedSiteAdaptorUI } from '../../site-adaptor-infra/ui.js'\n\nconst useStyles = makeStyles()({\n    root: {\n        overflowWrap: 'break-word',\n    },\n})\n\nexport interface PostReplacerProps {\n    zip: () => void\n    unzip: () => void\n}\n\nexport function PostReplacer(props: PostReplacerProps) {\n    const { classes } = useStyles()\n\n    const [postMessage, setPostMessage] = useState(usePostInfoDetails.rawMessage())\n    const iv = usePostInfoDetails.postIVIdentifier()\n    useEffect(() => {\n        if (postMessage?.meta || !iv?.toText()) return\n        return MaskMessages.events.postReplacerHidden.on(() => {\n            setPostMessage(\n                produce((draft) => {\n                    return { ...draft, items: [makeTypedMessageText('')] }\n                }),\n            )\n        })\n    }, [postMessage?.meta, iv?.toText])\n\n    const author = usePostInfoDetails.author()\n    const currentProfile = useCurrentIdentity()?.identifier\n    const url = usePostInfoDetails.url()\n\n    const initialTransformationContext = useMemo((): TransformationContext => {\n        return {\n            authorHint: author || undefined,\n            currentProfile,\n            postURL: url?.href,\n        }\n    }, [author, currentProfile, url])\n\n    return (\n        <span className={classes.root}>\n            <TypedMessageRenderContext\n                textResizer={activatedSiteAdaptorUI!.networkIdentifier !== 'twitter.com'}\n                renderFragments={activatedSiteAdaptorUI?.customization.componentOverwrite?.RenderFragments}\n                context={initialTransformationContext}>\n                <Transformer {...props} message={postMessage} />\n            </TypedMessageRenderContext>\n        </span>\n    )\n}\n\nfunction Transformer({\n    message,\n    zip,\n    unzip,\n}: {\n    message: TypedMessage\n} & PostReplacerProps) {\n    const after = useTransformedValue(message)\n\n    const shouldReplace = useMemo(() => {\n        const flatten = FlattenTypedMessage(message, emptyTransformationContext)\n        if (!isTypedMessageEqual(flatten, after)) return true\n        if (hasCashOrHashTag(after)) return true\n        if (shouldHiddenPostReplacer(message)) return true\n        return false\n    }, [message, after])\n\n    useEffect(() => {\n        if (shouldReplace) zip?.()\n        else unzip?.()\n\n        return () => unzip?.()\n    }, [])\n\n    if (shouldReplace) return <TypedMessageRender message={after} />\n    return null\n}\nfunction hasCashOrHashTag(message: TypedMessage): boolean {\n    let result = false\n    function visitor(node: TypedMessage): 'stop' | void {\n        if (isTypedMessageAnchor(node)) {\n            if (node.category === 'cash' || node.category === 'hash') {\n                result = true\n                return 'stop'\n            }\n        } else forEachTypedMessageChild(node, visitor)\n    }\n    visitor(message)\n    forEachTypedMessageChild(message, visitor)\n    return result\n}\n\nfunction shouldHiddenPostReplacer(message: TypedMessage): boolean {\n    return isTypedMessageText(message) && message.content === ''\n}\n","import { memo } from 'react'\nimport type { DOMProxy } from '@dimensiondev/holoflows-kit'\nimport { PostInfoProvider, type PostInfo } from '@masknet/plugin-infra/content-script'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { PostReplacer, type PostReplacerProps } from '../../../components/InjectedComponents/PostReplacer.js'\n\ninterface InjectPostReplacerConfig {\n    zipPost(node: DOMProxy): void\n    unzipPost(node: DOMProxy): void\n}\n\nexport function injectPostReplacer({ zipPost, unzipPost }: InjectPostReplacerConfig) {\n    const PostReplacerDefault = memo(function PostReplacerDefault(props: {\n        zipPost: PostReplacerProps['zip']\n        unZipPost: PostReplacerProps['unzip']\n    }) {\n        return <PostReplacer zip={props.zipPost} unzip={props.unZipPost} />\n    })\n\n    return function injectPostReplacer(current: PostInfo, signal: AbortSignal) {\n        signal.addEventListener('abort', unzipPost as () => void)\n\n        attachReactTreeWithContainer(current.rootElement.afterShadow, {\n            key: 'post-replacer',\n            untilVisible: true,\n            signal,\n        }).render(\n            <PostInfoProvider post={current}>\n                <PostReplacerDefault\n                    zipPost={() => zipPost(current.rootElement)}\n                    unZipPost={() => unzipPost(current.rootElement)}\n                    {...current}\n                />\n            </PostInfoProvider>,\n        )\n    }\n}\n","import { Environment, isEnvironment } from '@dimensiondev/holoflows-kit'\n\nexport const isMobileFacebook = isEnvironment(Environment.ContentScript)\n    ? location.hostname === 'm.facebook.com'\n    : navigator.userAgent.match(/Mobile|mobile/)\n","import Services from '#services'\n\n/**\n * Download given url return as Blob\n */\nexport async function downloadUrl(url: string) {\n    try {\n        if (url.startsWith(browser.runtime.getURL(''))) {\n            return Services.Helper.fetchBlob(url)\n        }\n    } catch {}\n    const res = await fetch(url)\n    if (!res.ok) throw new Error('Fetch failed.')\n    return res.blob()\n}\n","/**\n * Select all text in a node\n * @param el Element\n */\n\nexport function selectElementContents(el: Node) {\n    const range = document.createRange()\n    range.selectNodeContents(el)\n    const sel = globalThis.getSelection()!\n    sel.removeAllRanges()\n    sel.addRange(range)\n    return sel\n}\n","import { useContext, createContext } from 'react'\n\nexport type CompositionType = 'popup' | 'timeline'\n\nexport interface CompositionContext {\n    type: CompositionType\n    getMetadata(): ReadonlyMap<string, unknown> | undefined\n    attachMetadata(metaID: string, value: unknown): void\n    dropMetadata(metaID: string): void\n}\nexport const CompositionContext = createContext<CompositionContext>({\n    type: 'popup',\n    getMetadata: () => undefined,\n    attachMetadata() {},\n    dropMetadata() {},\n})\nCompositionContext.displayName = 'CompositionContext'\nexport const useCompositionContext = () => useContext(CompositionContext)\nimport.meta.webpackHot?.accept()\n","import { useQuery } from '@tanstack/react-query'\nimport { useEffect, useState } from 'react'\nimport { type Subscription } from 'use-subscription'\n\n/**\n * In favor of react-query's persist cache and cache management\n */\nexport function usePersistSubscription<T>(\n    persistKey: `@@${string}`,\n    subscription: Subscription<T>,\n    predicate?: (data: T) => boolean,\n): T {\n    const [initialValue] = useState(() => subscription.getCurrentValue())\n    const { data = initialValue, refetch } = useQuery({\n        queryKey: [persistKey],\n        networkMode: 'always',\n        queryFn: () => {\n            const value = subscription.getCurrentValue()\n            if (predicate && !predicate(value)) return undefined\n            return value\n        },\n    })\n    useEffect(() => {\n        refetch() // Actively fetch, make persist data act as placeholder data\n        return subscription.subscribe(refetch)\n    }, [subscription, refetch])\n\n    return data\n}\n","import { EMPTY_LIST } from '../constants.js'\nimport { createConstantSubscription } from '../helpers/subscription.js'\n\nexport const ZERO = createConstantSubscription(0)\nexport const UNDEFINED = createConstantSubscription(undefined)\nexport const EMPTY_STRING = createConstantSubscription('')\nexport const EMPTY_ARRAY = createConstantSubscription(EMPTY_LIST)\nexport const EMPTY_ENTRY = createConstantSubscription({} as Record<string, never>)\nexport const TRUE = createConstantSubscription(true)\nexport const FALSE = createConstantSubscription(false)\nexport const NULL = createConstantSubscription(null)\n","export function compose<T>(...args: [...composer: Array<((arg: T) => T) | null | false>, init: T]) {\n    if (args.length === 0) throw new TypeError()\n    const last = args.pop() as T\n\n    return (args as Array<((arg: T) => T) | null>).filter(Boolean).reduceRight((prev, fn) => fn!(prev), last)\n}\n","import type { IdentityResolved } from '@masknet/plugin-infra'\nimport type { PersonaInformation } from '@masknet/shared-base'\nimport { formatPersonaFingerprint } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Typography } from '@mui/material'\nimport { type PropsWithChildren } from 'react'\nimport { CopyButton } from '../CopyButton/index.js'\nimport { PlatformAvatar } from './PlatformAvatar.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    bottomFixed: {\n        width: '100%',\n        minHeight: 36,\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: 16,\n        boxShadow: theme.palette.shadow.popup,\n    },\n    linkIcon: {\n        marginRight: theme.spacing(1),\n        color: theme.palette.maskColor.second,\n        cursor: 'pointer',\n    },\n    personaKey: {\n        fontSize: '12px',\n        fontWeight: '400',\n        color: theme.palette.maskColor.third,\n    },\n}))\n\ninterface PersonaActionProps extends PropsWithChildren {\n    currentPersona?: PersonaInformation\n    currentVisitingProfile?: IdentityResolved\n    avatar?: string\n    classes?: {\n        bottomFixed: string\n    }\n}\n\nexport function PersonaAction(props: PersonaActionProps) {\n    const { classes } = useStyles(undefined, { props })\n    const { currentPersona, avatar, children } = props\n\n    return (\n        <div className={classes.bottomFixed}>\n            <Box display=\"flex\">\n                <PlatformAvatar networkIcon={avatar} size={36} />\n                <div style={{ marginLeft: '4px' }}>\n                    <Typography style={{ fontSize: '14px', fontWeight: '700', display: 'flex' }}>\n                        {currentPersona?.nickname}\n                    </Typography>\n                    <Box sx={{ display: 'flex' }}>\n                        <Typography className={classes.personaKey}>\n                            {currentPersona?.identifier\n                                ? formatPersonaFingerprint(currentPersona.identifier.rawPublicKey, 4)\n                                : '--'}\n                        </Typography>\n                        <CopyButton\n                            size={16}\n                            text={currentPersona?.identifier.rawPublicKey ?? ''}\n                            className={classes.linkIcon}\n                        />\n                    </Box>\n                </div>\n            </Box>\n            {children}\n        </div>\n    )\n}\n","import { makeStyles } from '@masknet/theme'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        icon: {\n            borderRadius: '50%',\n        },\n    }\n})\n\nexport interface PersonaImageIconProps extends withClasses<'icon'> {\n    size?: number\n    icon?: string\n    borderRadius?: string\n}\n\nexport function PersonaImageIcon(props: PersonaImageIconProps) {\n    const { size = 48, icon, borderRadius = '50%' } = props\n    const { classes } = useStyles(undefined, { props })\n    return <img height={size} width={size} src={icon?.toString()} className={classes.icon} style={{ borderRadius }} />\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Icons } from '@masknet/icons'\nimport { PersonaImageIcon } from './PersonaImageIcon.js'\nimport { memo } from 'react'\n\ninterface StyleProps {\n    size: number\n    isBorderColorNotDefault?: boolean\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, props) => ({\n    root: {\n        position: 'relative',\n        alignSelf: 'center',\n        display: 'flex',\n        height: props.size,\n        width: props.size,\n    },\n    mainIcon: {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n    },\n    badgeIcon: {\n        position: 'absolute',\n        right: -2,\n        bottom: -2,\n    },\n}))\n\ninterface PlatformAvatarProps extends withClasses<'networkIcon' | 'providerIcon'> {\n    size?: number\n    badgeSize?: number\n    inverse?: boolean\n    networkIcon?: string\n    providerIcon?: string\n    isBorderColorNotDefault?: boolean\n}\n\nexport const PlatformAvatar = memo(function PlatformAvatar(props: PlatformAvatarProps) {\n    const { size = 24, badgeSize = 14, inverse = false, networkIcon, providerIcon } = props\n    const { classes, cx } = useStyles(\n        {\n            size: badgeSize > size ? badgeSize : size,\n            isBorderColorNotDefault: props.isBorderColorNotDefault,\n        },\n        { props },\n    )\n\n    // #region icon names\n    const names = inverse\n        ? [cx(classes.badgeIcon, classes.providerIcon), cx(classes.mainIcon, classes.networkIcon)]\n        : [cx(classes.mainIcon, classes.networkIcon), cx(classes.badgeIcon, classes.providerIcon)]\n    // #endregion\n    return (\n        <div\n            className={classes.root}\n            style={{\n                height: size,\n                width: size,\n            }}>\n            {networkIcon ? (\n                <PersonaImageIcon\n                    classes={{\n                        icon: names[0],\n                    }}\n                    size={size}\n                    icon={networkIcon}\n                />\n            ) : (\n                <Icons.Masks\n                    size={size}\n                    sx={{\n                        display: 'inline-block',\n                        borderRadius: '50%',\n                    }}\n                />\n            )}\n            {providerIcon ? (\n                <PersonaImageIcon\n                    classes={{\n                        icon: names[1],\n                    }}\n                    size={badgeSize}\n                    icon={providerIcon}\n                />\n            ) : null}\n        </div>\n    )\n})\n","import type { TypedMessage } from '@masknet/typed-message'\nimport { type Result, Ok, Err, Some, type Option, None } from 'ts-results-es'\nimport type { ReactNode } from 'react'\nimport z_schema from 'z-schema'\nimport { produce, enableMapSet, type Draft } from 'immer'\n\nconst metadataSchemaStore = new Map<string, object>()\nexport function getKnownMetadataKeys() {\n    return [...metadataSchemaStore.keys()]\n}\n\nexport function getMetadataSchema(key: string): Option<object> {\n    return metadataSchemaStore.has(key) ? Some(metadataSchemaStore.get(key)!) : None\n}\n\n/**\n * Register your metadata with a JSON Schema so we can validate the schema for you.\n * @param key Metadata key\n * @param jsonSchema JSON Schema to validate the metadata\n */\nexport function registerMetadataSchema(key: string, jsonSchema: object) {\n    metadataSchemaStore.set(key, jsonSchema)\n}\n\n/**\n * Create a TypedMessage metadata reader for your plugin\n * @param key Metadata key\n * @param jsonSchema JSON Schema to validate the metadata\n * @example\n * export const getFilePluginMetadata = createTypedMessageMetadataReader('plugin.meta.key', schema)\n * getFilePluginMetadata(meta)\n */\nexport function createTypedMessageMetadataReader<T>(key: string, jsonSchema?: object) {\n    if (jsonSchema) registerMetadataSchema(key, jsonSchema)\n    return (meta: TypedMessage['meta']) => readTypedMessageMetadataUntyped<T>(meta, key)\n}\n\n/**\n * The raw parser of metadata reader\n * @param meta Metadata object\n * @param key Metadata key\n * @param jsonSchema JSON Schema to validate the metadata\n */\nexport function readTypedMessageMetadataUntyped<T>(\n    meta: TypedMessage['meta'],\n    key: string,\n    jsonSchema?: object,\n): Result<T, void> {\n    if (!meta) return Err.EMPTY\n    if (!meta.has(key)) return Err.EMPTY\n    if (metadataSchemaStore.has(key) && !jsonSchema) jsonSchema = metadataSchemaStore.get(key)!\n    const data = meta.get(key)! as T\n    if (!jsonSchema) console.warn('You should add a JSON Schema to verify the metadata in the TypedMessage')\n    else {\n        const match = isDataMatchJSONSchema(data, jsonSchema)\n        if (match.isErr()) {\n            console.warn('The problematic metadata is dropped', data, 'errors:', match.error)\n            return Err.EMPTY\n        }\n    }\n    return Ok(data)\n}\n\nexport function isDataMatchJSONSchema(data: any, jsonSchema: object) {\n    const validator = new z_schema({})\n    if (!validator.validate(data, jsonSchema)) return Err(validator.getLastErrors())\n    return Ok.EMPTY\n}\n\n/**\n * Create a render of Metadata.\n * @param metadataReader A metadata reader (can be return value of createTypedMessageMetadataReader)\n */\nexport function createRenderWithMetadata<T>(metadataReader: (meta: TypedMessage['meta']) => Result<T, void>) {\n    return (metadata: TypedMessage['meta'], render: (data: T) => ReactNode | null): ReactNode | null => {\n        const message = metadataReader(metadata)\n        if (message.isOk()) return render(message.value)\n        return null\n    }\n}\n\nlet immer_setup = false\nexport function editTypedMessageMeta<T extends TypedMessage>(\n    typedMessage: T,\n    edit: (meta: NonNullable<Draft<TypedMessage['meta']>>) => void,\n): T {\n    if (!immer_setup) {\n        enableMapSet()\n        immer_setup = true\n    }\n    return produce(typedMessage, (e) => {\n        if (!e.meta) e.meta = new Map()\n        edit(e.meta)\n        if (e.meta.size === 0) e.meta = undefined\n    })\n}\n\n/**\n * Render with metadata\n * @param metadata Metadata\n * @param key Metadata key\n * @param render The render\n * @param jsonSchema JSON Schema to validate the metadata\n */\nexport function renderWithMetadataUntyped(\n    metadata: TypedMessage['meta'],\n    key: string,\n    render: (data: unknown) => ReactNode,\n    jsonSchema?: object,\n): ReactNode | null {\n    const message = readTypedMessageMetadataUntyped(metadata, key, jsonSchema)\n    if (message.isOk()) return render(message.value)\n    return null\n}\n","import { useSubscription } from 'use-subscription'\nimport { UNDEFINED, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useWeb3Others } from './useWeb3Others.js'\n\nexport function useAccount<T extends NetworkPluginID>(pluginID?: T, expectedAccount?: string) {\n    const Others = useWeb3Others(pluginID)\n    const { Provider } = useWeb3State(pluginID)\n    const defaultAccount = useSubscription(Provider?.account ?? UNDEFINED)\n    return Others.formatAddress(expectedAccount ?? defaultAccount ?? '')\n}\n","import { useSubscription } from 'use-subscription'\nimport { UNDEFINED, type NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useDefaultChainId } from './useDefaultChainId.js'\n\nexport function useChainId<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    expectedChainId?: Web3Helper.ChainIdScope<S, T>,\n) {\n    const { Provider } = useWeb3State<S, T>(pluginID)\n    const defaultChainId = useDefaultChainId(pluginID)\n    const actualChainId = useSubscription(Provider?.chainId ?? UNDEFINED)\n\n    return (expectedChainId ?? actualChainId ?? defaultChainId) as Web3Helper.ChainIdScope<S, T>\n}\n","import { useSubscription } from 'use-subscription'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { UNDEFINED, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useProviderType<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n) {\n    const { Provider } = useWeb3State(pluginID)\n    const defaultProviderType = useSubscription(Provider?.providerType ?? UNDEFINED)\n    return defaultProviderType as Web3Helper.ProviderTypeScope<S, T>\n}\n","import { createContext, type ReactNode, useContext, useState, useMemo, type ProviderProps, memo } from 'react'\nimport { isUndefined, omitBy } from 'lodash-es'\nimport { usePersistSubscription, useValueRef } from '@masknet/shared-base-ui'\nimport { compose, Sniffings, NetworkPluginID, getSiteType, pluginIDsSettings } from '@masknet/shared-base'\nimport { Providers, type BaseContractWalletProvider } from '@masknet/web3-providers'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useAccount } from './useAccount.js'\nimport { useChainId } from './useChainId.js'\nimport { useProviderType } from './useProviderType.js'\nimport { useLocation } from 'react-use'\n\ninterface ReadonlyNetworkContext<T extends NetworkPluginID = NetworkPluginID> {\n    pluginID: T\n}\n\ninterface NetworkContext<T extends NetworkPluginID = NetworkPluginID> {\n    pluginID: T\n    setPluginID: (pluginID: T) => void\n}\n\ninterface ChainContextGetter<T extends NetworkPluginID = NetworkPluginID> {\n    account?: string\n    chainId?: Web3Helper.Definition[T]['ChainId']\n    networkType?: Web3Helper.Definition[T]['NetworkType']\n    providerType?: Web3Helper.Definition[T]['ProviderType']\n    // If it's controlled, we prefer passed value over state inside\n    controlled?: boolean\n}\n\ninterface ChainContextSetter<T extends NetworkPluginID = NetworkPluginID> {\n    setAccount?: (account: string) => void\n    setChainId?: (chainId: Web3Helper.Definition[T]['ChainId']) => void\n    setNetworkType?: (networkType: Web3Helper.Definition[T]['NetworkType']) => void\n    setProviderType?: (providerType: Web3Helper.Definition[T]['ProviderType']) => void\n}\n\nconst ReadonlyNetworkContext = createContext<ReadonlyNetworkContext>(null!)\nReadonlyNetworkContext.displayName = 'ReadonlyNetworkContext'\n\nconst NetworkContext = createContext<NetworkContext>(null!)\nNetworkContext.displayName = 'NetworkContext'\n\nconst ChainContext = createContext<ChainContextGetter & ChainContextSetter>(null!)\nChainContext.displayName = 'ChainContext'\n\n/**\n * Provide the current readonly network plugin ID (readonly)\n * @param props\n * @returns\n */\nexport function ReadonlyNetworkContextProvider({ value, children }: ProviderProps<ReadonlyNetworkContext>) {\n    return <ReadonlyNetworkContext.Provider value={value}>{children}</ReadonlyNetworkContext.Provider>\n}\n\n/**\n * Provide the current selected network plugin ID\n * @param props\n * @returns\n */\nexport function NetworkContextProvider({ value, children }: ProviderProps<NetworkPluginID>) {\n    const [pluginID = value, setPluginID] = useState<NetworkPluginID>()\n    const context = useMemo(\n        () => ({\n            pluginID,\n            setPluginID,\n        }),\n        [pluginID],\n    )\n    return <NetworkContext.Provider value={context}>{children}</NetworkContext.Provider>\n}\n\n/**\n * Provide the current chain context\n * @param props\n * @returns\n */\nexport const ChainContextProvider = memo(function ChainContextProvider({\n    value,\n    children,\n}: ProviderProps<ChainContextGetter>) {\n    const { pluginID } = useNetworkContext()\n    const { controlled } = value\n\n    const globalAccount = useAccount(pluginID)\n    const globalChainId = useChainId(pluginID)\n    const globalProviderType = useProviderType(pluginID)\n\n    const maskProvider = Providers[ProviderType.MaskWallet] as BaseContractWalletProvider\n\n    // The initial value of subscription.account could be empty string\n    const maskAccount = usePersistSubscription('@@mask-account', maskProvider.subscription.account, (x) => !!x)\n    const maskChainId = usePersistSubscription('@@mask-chain-id', maskProvider.subscription.chainId)\n\n    const [_account, setAccount] = useState<string>()\n    const [_chainId, setChainId] = useState<Web3Helper.ChainIdAll>()\n    const [_providerType, setProviderType] = useState<Web3Helper.ProviderTypeAll>()\n\n    const location = useLocation()\n    const is_popup_wallet_page = Sniffings.is_popup_page && location.hash?.includes('/wallet')\n    const account = controlled\n        ? value.account\n        : _account ?? value.account ?? (is_popup_wallet_page ? maskAccount : globalAccount)\n    const chainId = controlled\n        ? value.chainId\n        : _chainId ?? value.chainId ?? (is_popup_wallet_page ? maskChainId : globalChainId)\n    const providerType = controlled\n        ? value.providerType\n        : _providerType ?? value.providerType ?? (is_popup_wallet_page ? ProviderType.MaskWallet : globalProviderType)\n\n    const context = useMemo(\n        () => ({\n            account,\n            chainId,\n            providerType,\n            setAccount,\n            setChainId,\n            setProviderType,\n        }),\n        [account, chainId, providerType],\n    )\n    return <ChainContext.Provider value={context}>{children}</ChainContext.Provider>\n})\n\n/**\n * Provide a context that contains both network and chain context\n * @param props\n * @returns\n */\nexport function Web3ContextProvider({\n    value,\n    children,\n}: ProviderProps<\n    {\n        pluginID: NetworkPluginID\n    } & ChainContextGetter\n>) {\n    const { pluginID, ...rest } = value\n\n    return compose(\n        (children) => <NetworkContextProvider value={pluginID} children={children} />,\n        (children) => <ChainContextProvider value={rest} children={children} />,\n        <>{children}</>,\n    )\n}\n\n/**\n * Provide the top most network context\n * @param props\n * @returns\n */\nexport function RevokeNetworkContextProvider({ children }: { children: ReactNode | undefined }) {\n    const { pluginID } = useContext(ReadonlyNetworkContext)\n    const value = useMemo(\n        () => ({\n            pluginID,\n            setPluginID: () => {\n                throw new Error('Set pluginID is not allowed.')\n            },\n        }),\n        [pluginID],\n    )\n    return <NetworkContext.Provider value={value} children={children} />\n}\n\n/**\n * Provide the top most chain context\n * @param props\n * @returns\n */\nexport function RevokeChainContextProvider({ children }: { children: ReactNode | undefined }) {\n    const account = useAccount()\n    const chainId = useChainId()\n    const providerType = useProviderType()\n    const value = useMemo(\n        () => ({\n            account,\n            chainId,\n            providerType,\n        }),\n        [account, chainId, providerType],\n    )\n    return <ChainContext.Provider value={value} children={children} />\n}\n\n/**\n * The default Web3 context provider that uses the EVM plugin\n * @param props\n * @returns\n */\nexport function DefaultWeb3ContextProvider({\n    value,\n    children,\n}: Partial<\n    ProviderProps<\n        Partial<\n            {\n                pluginID: NetworkPluginID\n            } & ChainContextGetter\n        >\n    >\n>) {\n    const contextValue = useMemo(() => {\n        return { pluginID: value?.pluginID ?? NetworkPluginID.PLUGIN_EVM, ...value }\n    }, [JSON.stringify(value)])\n\n    return <Web3ContextProvider value={contextValue}>{children}</Web3ContextProvider>\n}\n\n/**\n * The root Web3 context provider that uses the plugin ID from global settings\n * @param props\n * @returns\n */\nexport function RootWeb3ContextProvider({\n    value,\n    children,\n}: Partial<\n    ProviderProps<\n        Partial<\n            {\n                pluginID: NetworkPluginID\n            } & ChainContextGetter\n        >\n    >\n>) {\n    const pluginIDs = useValueRef(pluginIDsSettings)\n    const contextValue = useMemo(() => {\n        const site = getSiteType()\n        return { pluginID: value?.pluginID ?? (site ? pluginIDs[site] : NetworkPluginID.PLUGIN_EVM) }\n    }, [pluginIDs, JSON.stringify(value)])\n\n    return (\n        <ReadonlyNetworkContextProvider value={contextValue}>\n            <Web3ContextProvider value={contextValue}>{children}</Web3ContextProvider>\n        </ReadonlyNetworkContextProvider>\n    )\n}\n\nexport function useEnvironmentContext(overrides?: ReadonlyNetworkContext) {\n    const context = useContext(ReadonlyNetworkContext)\n    return {\n        ...context,\n        ...omitBy(overrides, isUndefined),\n    }\n}\n\nexport function useNetworkContext<T extends NetworkPluginID = NetworkPluginID>(overrides?: T) {\n    const context = useContext(NetworkContext)\n    return {\n        ...context,\n        pluginID: (overrides ?? context.pluginID) as T,\n    }\n}\n\nexport function useChainContext<T extends NetworkPluginID = NetworkPluginID>(overrides?: ChainContextGetter<T>) {\n    const context = useContext(ChainContext)\n    return {\n        ...context,\n        ...omitBy(overrides, isUndefined),\n    } as Required<ChainContextGetter<T> & ChainContextSetter<T>>\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport { ChainId as EVM_ChainId } from '@masknet/web3-shared-evm'\nimport { ChainId as FlowChainId } from '@masknet/web3-shared-flow'\nimport { ChainId as SolanaChainId } from '@masknet/web3-shared-solana'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useNetworkContext } from './useContext.js'\n\nconst DEFAULT_CHAIN_ID: Record<NetworkPluginID, Web3Helper.ChainIdAll> = {\n    [NetworkPluginID.PLUGIN_EVM]: EVM_ChainId.Mainnet,\n    [NetworkPluginID.PLUGIN_FLOW]: FlowChainId.Mainnet,\n    [NetworkPluginID.PLUGIN_SOLANA]: SolanaChainId.Mainnet,\n}\n\nexport function useDefaultChainId<T extends NetworkPluginID>(expectedPluginID?: T) {\n    const { pluginID } = useNetworkContext<T>(expectedPluginID)\n    return DEFAULT_CHAIN_ID[pluginID]\n}\n\nexport function getDefaultChainId<T extends NetworkPluginID>(pluginID: T) {\n    return DEFAULT_CHAIN_ID[pluginID]\n}\n","import { useMemo } from 'react'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { OthersAll } from '@masknet/web3-providers'\nimport type { Others } from '@masknet/web3-providers/types'\nimport { useNetworkContext } from './useContext.js'\n\nexport function useWeb3Others<T extends NetworkPluginID = NetworkPluginID>(expectedPluginID?: T) {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    return useMemo(() => OthersAll.use(pluginID) as Others<T>, [pluginID])\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport { getActivatedPluginWeb3State } from '@masknet/web3-providers'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useNetworkContext } from './useContext.js'\n\nexport function useWeb3State<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n): Web3Helper.Web3StateScope<S, T> {\n    const { pluginID } = useNetworkContext<T>(expectedPluginID)\n    return getActivatedPluginWeb3State(pluginID)\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n}; // TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\n\n\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\n\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: (theme.vars || theme).palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n\n  const {\n    children,\n    disabled = false,\n    id: idProp,\n    loading = false,\n    loadingIndicator: loadingIndicatorProp,\n    loadingPosition = 'center',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n    className: classes.loadingIndicator,\n    ownerState: ownerState,\n    children: loadingIndicator\n  }) : null;\n  return /*#__PURE__*/_jsxs(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.copy = void 0;\nconst copy = (source, dest, sx = 0, sy = 0, sw = source.width - sx, sh = source.height - sy, dx = 0, dy = 0) => {\n    sx = sx | 0;\n    sy = sy | 0;\n    sw = sw | 0;\n    sh = sh | 0;\n    dx = dx | 0;\n    dy = dy | 0;\n    if (sw <= 0 || sh <= 0)\n        return;\n    const sourceData = new Uint32Array(source.data.buffer);\n    const destData = new Uint32Array(dest.data.buffer);\n    for (let y = 0; y < sh; y++) {\n        const sourceY = sy + y;\n        if (sourceY < 0 || sourceY >= source.height)\n            continue;\n        const destY = dy + y;\n        if (destY < 0 || destY >= dest.height)\n            continue;\n        for (let x = 0; x < sw; x++) {\n            const sourceX = sx + x;\n            if (sourceX < 0 || sourceX >= source.width)\n                continue;\n            const destX = dx + x;\n            if (destX < 0 || destX >= dest.width)\n                continue;\n            const sourceIndex = sourceY * source.width + sourceX;\n            const destIndex = destY * dest.width + destX;\n            destData[destIndex] = sourceData[sourceIndex];\n        }\n    }\n};\nexports.copy = copy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateImageFactory = (fill = [0, 0, 0, 0], channels = 4) => {\n    channels = Math.floor(channels);\n    if (isNaN(channels) || channels < 1) {\n        throw TypeError('channels should be a positive non-zero number');\n    }\n    if (!('length' in fill) || fill.length < channels) {\n        throw TypeError(`fill should be iterable with at least ${channels} members`);\n    }\n    fill = (new Uint8ClampedArray(fill)).slice(0, channels);\n    const allZero = fill.every(v => v === 0);\n    const createImage = (width, height, data) => {\n        if (width === undefined || height === undefined) {\n            throw TypeError('Not enough arguments');\n        }\n        width = Math.floor(width);\n        height = Math.floor(height);\n        if (isNaN(width) || width < 1 || isNaN(height) || height < 1) {\n            throw TypeError('Index or size is negative or greater than the allowed amount');\n        }\n        const length = width * height * channels;\n        if (data === undefined) {\n            data = new Uint8ClampedArray(length);\n        }\n        if (data instanceof Uint8ClampedArray) {\n            if (data.length !== length) {\n                throw TypeError('Index or size is negative or greater than the allowed amount');\n            }\n            if (!allZero) {\n                for (let y = 0; y < height; y++) {\n                    for (let x = 0; x < width; x++) {\n                        const index = (y * width + x) * channels;\n                        for (let c = 0; c < channels; c++) {\n                            data[index + c] = fill[c];\n                        }\n                    }\n                }\n            }\n            return {\n                get width() { return width; },\n                get height() { return height; },\n                get data() { return data; }\n            };\n        }\n        throw TypeError('Expected data to be Uint8ClampedArray or undefined');\n    };\n    return createImage;\n};\nexports.createImage = exports.CreateImageFactory();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convolve = void 0;\nconst fixedFracBits = 14;\nconst convolve = (source, dest, sw, sh, dw, filters) => {\n    let srcOffset = 0;\n    let destOffset = 0;\n    // For each row\n    for (let sourceY = 0; sourceY < sh; sourceY++) {\n        let filterPtr = 0;\n        // Apply precomputed filters to each destination row point\n        for (let destX = 0; destX < dw; destX++) {\n            // Get the filter that determines the current output pixel.\n            const filterShift = filters[filterPtr++];\n            let srcPtr = (srcOffset + (filterShift * 4)) | 0;\n            let r = 0;\n            let g = 0;\n            let b = 0;\n            let a = 0;\n            // Apply the filter to the row to get the destination pixel r, g, b, a\n            for (let filterSize = filters[filterPtr++]; filterSize > 0; filterSize--) {\n                const filterValue = filters[filterPtr++];\n                r = (r + filterValue * source[srcPtr]) | 0;\n                g = (g + filterValue * source[srcPtr + 1]) | 0;\n                b = (b + filterValue * source[srcPtr + 2]) | 0;\n                a = (a + filterValue * source[srcPtr + 3]) | 0;\n                srcPtr = (srcPtr + 4) | 0;\n            }\n            // Bring this value back in range. All of the filter scaling factors\n            // are in fixed point with fixedFracBits bits of fractional part.\n            //\n            // (!) Add 1/2 of value before clamping to get proper rounding. In other\n            // case brightness loss will be noticeable if you resize image with white\n            // border and place it on white background.\n            //\n            dest[destOffset] = (r + (1 << 13)) >> fixedFracBits;\n            dest[destOffset + 1] = (g + (1 << 13)) >> fixedFracBits;\n            dest[destOffset + 2] = (b + (1 << 13)) >> fixedFracBits;\n            dest[destOffset + 3] = (a + (1 << 13)) >> fixedFracBits;\n            destOffset = (destOffset + sh * 4) | 0;\n        }\n        destOffset = ((sourceY + 1) * 4) | 0;\n        srcOffset = ((sourceY + 1) * sw * 4) | 0;\n    }\n};\nexports.convolve = convolve;\n/*\n  Adapted to typescript from pica: https://github.com/nodeca/pica\n\n  (The MIT License)\n\n  Copyright (C) 2014-2017 by Vitaly Puzrin\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filters = void 0;\nconst fixedFracBits = 14;\nconst filterValue = (x, a) => {\n    if (x <= -a || x >= a)\n        return 0;\n    if (x == 0)\n        return 0;\n    // appears to do nothing?\n    // if ( x > -1.19209290e-07 && x < 1.19209290e-07 ) return 1\n    const xPi = x * Math.PI;\n    return (Math.sin(xPi) / xPi) * Math.sin(xPi / a) / (xPi / a);\n};\nconst toFixedPoint = (value) => Math.round(value * ((1 << fixedFracBits) - 1));\nconst filters = (srcSize, destSize, scale, offset, use2) => {\n    const a = use2 ? 2 : 3;\n    const scaleInverted = 1 / scale;\n    const scaleClamped = Math.min(1, scale); // For upscale\n    // Filter window (averaging interval), scaled to src image\n    const srcWindow = a / scaleClamped;\n    const maxFilterElementSize = Math.floor((srcWindow + 1) * 2);\n    const packedFilter = new Int16Array((maxFilterElementSize + 2) * destSize);\n    let packedFilterPtr = 0;\n    // For each destination pixel calculate source range and built filter values\n    for (let destPixel = 0; destPixel < destSize; destPixel++) {\n        // Scaling should be done relative to central pixel point\n        const sourcePixel = (destPixel + 0.5) * scaleInverted + offset;\n        const sourceFirst = Math.max(0, Math.floor(sourcePixel - srcWindow));\n        const sourceLast = Math.min(srcSize - 1, Math.ceil(sourcePixel + srcWindow));\n        const filterElementSize = sourceLast - sourceFirst + 1;\n        const floatFilter = new Float32Array(filterElementSize);\n        const fxpFilter = new Int16Array(filterElementSize);\n        let total = 0;\n        // Fill filter values for calculated range\n        let index = 0;\n        for (let pixel = sourceFirst; pixel <= sourceLast; pixel++) {\n            const floatValue = filterValue(((pixel + 0.5) - sourcePixel) * scaleClamped, a);\n            total += floatValue;\n            floatFilter[index] = floatValue;\n            index++;\n        }\n        // Normalize filter, convert to fixed point and accumulate conversion error\n        let filterTotal = 0;\n        for (let index = 0; index < floatFilter.length; index++) {\n            const filterValue = floatFilter[index] / total;\n            filterTotal += filterValue;\n            fxpFilter[index] = toFixedPoint(filterValue);\n        }\n        // Compensate normalization error, to minimize brightness drift\n        fxpFilter[destSize >> 1] += toFixedPoint(1 - filterTotal);\n        //\n        // Now pack filter to useable form\n        //\n        // 1. Trim heading and tailing zero values, and compensate shitf/length\n        // 2. Put all to single array in this format:\n        //\n        //    [ pos shift, data length, value1, value2, value3, ... ]\n        //\n        let leftNotEmpty = 0;\n        while (leftNotEmpty < fxpFilter.length && fxpFilter[leftNotEmpty] === 0) {\n            leftNotEmpty++;\n        }\n        let rightNotEmpty = fxpFilter.length - 1;\n        while (rightNotEmpty > 0 && fxpFilter[rightNotEmpty] === 0) {\n            rightNotEmpty--;\n        }\n        const filterShift = sourceFirst + leftNotEmpty;\n        const filterSize = rightNotEmpty - leftNotEmpty + 1;\n        packedFilter[packedFilterPtr++] = filterShift; // shift\n        packedFilter[packedFilterPtr++] = filterSize; // size\n        packedFilter.set(fxpFilter.subarray(leftNotEmpty, rightNotEmpty + 1), packedFilterPtr);\n        packedFilterPtr += filterSize;\n    }\n    return packedFilter;\n};\nexports.filters = filters;\n/*\n  Adapted to typescript from pica: https://github.com/nodeca/pica\n\n  (The MIT License)\n\n  Copyright (C) 2014-2017 by Vitaly Puzrin\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lanczos2 = exports.lanczos = void 0;\nconst copy_1 = require(\"@rgba-image/copy\");\nconst create_image_1 = require(\"@rgba-image/create-image\");\nconst filters_1 = require(\"./filters\");\nconst convolve_1 = require(\"./convolve\");\nconst resize = (source, dest, use2 = false) => {\n    const xRatio = dest.width / source.width;\n    const yRatio = dest.height / source.height;\n    const filtersX = filters_1.filters(source.width, dest.width, xRatio, 0, use2);\n    const filtersY = filters_1.filters(source.height, dest.height, yRatio, 0, use2);\n    const tmp = new Uint8ClampedArray(dest.width * source.height * 4);\n    convolve_1.convolve(source.data, tmp, source.width, source.height, dest.width, filtersX);\n    convolve_1.convolve(tmp, dest.data, source.height, dest.width, dest.height, filtersY);\n};\nconst lanczos = (source, dest, sx = 0, sy = 0, sw = source.width - sx, sh = source.height - sy, dx = 0, dy = 0, dw = dest.width - dx, dh = dest.height - dy) => {\n    sx = sx | 0;\n    sy = sy | 0;\n    sw = sw | 0;\n    sh = sh | 0;\n    dx = dx | 0;\n    dy = dy | 0;\n    dw = dw | 0;\n    dh = dh | 0;\n    if (sw <= 0 || sh <= 0 || dw <= 0 || dh <= 0)\n        return;\n    if (sx === 0 && sy === 0 && sw === source.width && sh === source.height && dx === 0 && dy === 0 && dw === dest.width && dh === dest.height) {\n        resize(source, dest);\n        return;\n    }\n    /*\n      this is more expensive than the way we do in other rgba-lib functions, but\n      I don't understand the pica code that I based this on well enough to work\n      out how to use regions without doing crops first\n  \n      however copy is pretty fast compared to lanczos, so the difference is slight\n    */\n    const croppedSource = create_image_1.createImage(sw, sh);\n    const croppedDest = create_image_1.createImage(dw, dh);\n    copy_1.copy(source, croppedSource, sx, sy);\n    resize(croppedSource, croppedDest);\n    copy_1.copy(croppedDest, dest, 0, 0, croppedDest.width, croppedDest.height, dx, dy);\n};\nexports.lanczos = lanczos;\nconst lanczos2 = (source, dest, sx = 0, sy = 0, sw = source.width - sx, sh = source.height - sy, dx = 0, dy = 0, dw = dest.width - dx, dh = dest.height - dy) => {\n    sx = sx | 0;\n    sy = sy | 0;\n    sw = sw | 0;\n    sh = sh | 0;\n    dx = dx | 0;\n    dy = dy | 0;\n    dw = dw | 0;\n    dh = dh | 0;\n    if (sw <= 0 || sh <= 0 || dw <= 0 || dh <= 0)\n        return;\n    if (sx === 0 && sy === 0 && sw === source.width && sh === source.height && dx === 0 && dy === 0 && dw === dest.width && dh === dest.height) {\n        resize(source, dest, true);\n        return;\n    }\n    /*\n      this is more expensive than the way we do in other rgba-lib functions, but\n      I don't understand the pica code that I based this on well enough to work\n      out how to use regions without doing crops first\n  \n      however copy is pretty fast compared to lanczos, so the difference is slight\n    */\n    const croppedSource = create_image_1.createImage(sw, sh);\n    const croppedDest = create_image_1.createImage(dw, dh);\n    copy_1.copy(source, croppedSource, sx, sy);\n    resize(croppedSource, croppedDest, true);\n    copy_1.copy(croppedDest, dest, 0, 0, croppedDest.width, croppedDest.height, dx, dy);\n};\nexports.lanczos2 = lanczos2;\n","/**\n * @license React\n * use-subscription.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=require(\"use-sync-external-store/shim\");exports.useSubscription=function(a){return b.useSyncExternalStore(a.subscribe,a.getCurrentValue)};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/use-subscription.production.min.js');\n} else {\n  module.exports = require('./cjs/use-subscription.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","'use client';\nimport * as React from 'react';\n\nconst defaultContext = /*#__PURE__*/React.createContext(undefined);\nconst QueryClientSharingContext = /*#__PURE__*/React.createContext(false); // If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(context, contextSharing) {\n  if (context) {\n    return context;\n  }\n\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nconst useQueryClient = ({\n  context\n} = {}) => {\n  const queryClient = React.useContext(getQueryClientContext(context, React.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nconst QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n\n  if (process.env.NODE_ENV !== 'production' && contextSharing) {\n    client.getLogger().error(\"The contextSharing option has been deprecated and will be removed in the next major version\");\n  }\n\n  const Context = getQueryClientContext(context, contextSharing);\n  return /*#__PURE__*/React.createElement(QueryClientSharingContext.Provider, {\n    value: !context && contextSharing\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, children));\n};\n\nexport { QueryClientProvider, defaultContext, useQueryClient };\n//# sourceMappingURL=QueryClientProvider.mjs.map\n","'use client';\nimport * as React from 'react';\n\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\n\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nconst useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\nconst QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\n\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary };\n//# sourceMappingURL=QueryErrorResetBoundary.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { shouldThrowError } from './utils.mjs';\n\nconst ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nconst useClearResetErrorBoundary = errorResetBoundary => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nconst getHasError = ({\n  result,\n  errorResetBoundary,\n  useErrorBoundary,\n  query\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(useErrorBoundary, [result.error, query]);\n};\n\nexport { ensurePreventErrorBoundaryRetry, getHasError, useClearResetErrorBoundary };\n//# sourceMappingURL=errorBoundaryUtils.mjs.map\n","const ensureStaleTime = defaultedOptions => {\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n};\nconst willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nconst shouldSuspend = (defaultedOptions, result, isRestoring) => (defaultedOptions == null ? void 0 : defaultedOptions.suspense) && willFetch(result, isRestoring);\nconst fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).then(({\n  data\n}) => {\n  defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n}).catch(error => {\n  errorResetBoundary.clearReset();\n  defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n});\n\nexport { ensureStaleTime, fetchOptimistic, shouldSuspend, willFetch };\n//# sourceMappingURL=suspense.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { useIsRestoring } from './isRestoring.mjs';\nimport { ensurePreventErrorBoundaryRetry, useClearResetErrorBoundary, getHasError } from './errorBoundaryUtils.mjs';\nimport { ensureStaleTime, shouldSuspend, fetchOptimistic } from './suspense.mjs';\n\nfunction useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic'; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  ensureStaleTime(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const [observer] = React.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore(React.useCallback(onStoreChange => {\n    const unsubscribe = isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return unsubscribe;\n  }, [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  } // Handle error boundary\n\n\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    useErrorBoundary: defaultedOptions.useErrorBoundary,\n    query: observer.getCurrentQuery()\n  })) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\n\nexport { useBaseQuery };\n//# sourceMappingURL=useBaseQuery.mjs.map\n","'use client';\nimport { parseQueryArgs, QueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}\n\nexport { useQuery };\n//# sourceMappingURL=useQuery.mjs.map\n","'use client';\nimport { useSyncExternalStore as useSyncExternalStore$1 } from 'use-sync-external-store/shim/index.js';\n\nconst useSyncExternalStore = useSyncExternalStore$1;\n\nexport { useSyncExternalStore };\n//# sourceMappingURL=useSyncExternalStore.mjs.map\n","function shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\nexport { shouldThrowError };\n//# sourceMappingURL=utils.mjs.map\n"],"names":["useActivatedPluginsSiteAdaptor","usePluginTransField","makeStyles","ShadowRootTooltip","Box","Chip","useSharedTrans","useStyles","theme","chip","maxWidth","background","palette","paper","boxShadow","mode","BadgeRenderer","meta","onDeleteMeta","readonly","plugins","i18n","t","result","entries","flatMap","metaKey","metaValue","map","plugin","render","CompositionDialogMetadataBadgeRender","normalizeBadgeDescriptor","f","get","error","console","desc","text","tooltip","badge_renderer_provided_by_plugin","ID","name","MetaBadge","title","onDelete","children","classes","sx","display","span","disabled","label","className","isTypedMessageEqual","isTypedMessageText","makeTypedMessageText","editTypedMessageMeta","InputBase","Alert","Button","inputBaseClasses","alpha","useCallback","useImperativeHandle","useState","useRef","forwardRef","memo","useMemo","useEffect","root","padding","input","fontSize","position","height","backgroundColor","maskColor","overflow","focused","border","outline","primary","badgeInput","paddingTop","textarea","width","borderRadius","secondaryLine","backgroundClip","badge","top","left","emptyMessage","TypedMessageEditor","props","ref","onChange","cx","value","setValue","defaultValue","currentValue","inputRef","setInputRef","autoFocus","focus","current","setMessage","setAsText","val","target","newValue","deleteMetaID","delete","refItem","estimatedLength","content","length","reset","attachMetadata","data","set","dropMetadata","severity","action","onClick","editor","typed_message_text_alert","startAdornment","div","readOnly","undefined","fullWidth","multiline","placeholder","post_dialog__placeholder","rows","useAsyncFn","useAsyncRetry","MaskMessages","hasHostPermission","requestHostPermission","usePluginHostPermissionCheck","plugins_","filter","x","enableRequirement","host_permissions","retry","lackPermission","Set","Promise","allSettled","then","add","join","events","hostPermissionChanged","on","useCheckPermissions","permissions","asyncResult","useGrantPermissions","Done","DoneIcon","noop","checked","marginRight","marginBottom","cursor","color","buttonText","icon","ClickableChip","deleteIcon","Trans","Result","PluginTransFieldRender","useCompositionContext","DialogContent","GrantPermissions","InjectedDialog","EMPTY_LIST","PluginID","ErrorBoundary","sup","paddingLeft","clickRoot","bottom","main","PluginEntryRender","trackPluginRef","useSetPluginEntryRenderRef","pluginField","sort","RedPacket","wrap","entry","CompositionDialogEntry","unstable","extra","id","has","subject","DialogEntry","dialog","getPluginEntryDisabledDialog","isOpenFromApplicationBoard","CustomEntry","unwrapOr","usePermissionDialogStyles","spacing","dialogTitle","cache","Map","define","onGrant","domain_request","open","onClose","titleBarIconStyle","pluginRefs","openPlugin","tryTimes","setTimeout","pluginID","useSetPluginRef","type","getMetadata","field","i18nKey","components","metadata","compositionType","Dialog","keepMounted","dialogProps","setDialogProps","setOpen","opener","close","style","displayName","CircularProgress","Typography","_theme","overflowed","marginLeft","circle","transitionProperty","right","alignItems","justifyContent","CharLimitIndicator","max","displayLabel","normalized","Math","min","variant","size","component","startTransition","useDeferredValue","compact","Icons","ActionButtonPromise","EmptyStatus","Boundary","LoadingBase","useLookupAddress","Fuse","Checkbox","DialogActions","InputAdornment","Stack","attachNextIDToProfile","useMaskSharedTrans","ProfileInList","minHeight","minWidth","inputRoot","inputFocused","borderColor","third","empty","transform","flexDirection","gap","secondary","whiteSpace","mainText","listParent","listBody","overflowY","flex","list","gridGap","gridTemplateColumns","actions","boxSizing","backdropFilter","back","thirdMain","fontWeight","lineHeight","done","SelectRecipientsDialogUI","items","onSearch","searchInput","setSearchInput","registeredAddress","selectedAllProfiles","setSelectedAllProfiles","keyword","results","create","keys","isCaseSensitive","ignoreLocation","threshold","search","item","handleClose","handleSubmit","onSetSelected","onSubmit","onSelectedProfile","profiles","selectedPubkeyList","linkedPersona","publicKeyAsHex","onSelectedAllChange","select_specific_friends_dialog__title","onKeyUp","e","code","trim","onBlur","Search","post_dialog_share_with_input_placeholder","loading","searchEmptyText","compose_encrypt_share_dialog_empty","index","pubkey","selected","includes","profile","highlightText","currentTarget","select_all","submitDisabled","executor","completeIcon","failIcon","failedOnClick","complete","init","waiting","uniqBy","NextIDPlatform","useCurrentIdentity","useTwitterIdByWalletSearch","resolveNextIDPlatform","resolveValueToSearch","usePersonasFromNextID","useContacts","SelectRecipientsUI","valueToSearch","setValueToSearch","currentIdentity","_value","isInitialLoading","searchLoading","NextIDResults","NextID","NextIDItems","myUserId","identifier","userId","searchedList","recipients","profileItems","concat","rawPublicKey","network","request","wallet_search_no_result","usePortalShadowRoot","RadioGroup","Popover","popper","paperRoot","popperText","PopoverListTrigger","anchorEl","selectedTitle","setAnchorEl","button","RightArrow","container","disableScrollLock","anchorOrigin","vertical","horizontal","transformOrigin","FormControlLabel","Radio","mainTitle","subTitle","pointer","PopoverListItem","itemTail","control","optionTitle","fontFamily","divider","margin","EncryptionMethodType","Text","Image","EncryptionMethodSelector","post_dialog_encryption_method","method","compose_encrypt_method_text","compose_encrypt_method_image","compose_encrypt_method_text_sub_title","textDisabled","compose_encrypt_method_image_sub_title","imageDisabled","unreachable","ConnectPersonaBoundary","EncryptionTargetType","currentPersonaIdentifier","useValueRef","E2EUnavailableReason","usePersonasFromDB","useLastRecognizedIdentity","Services","textAlign","rightIcon","EncryptionTargetSelector","allPersonas","lastRecognized","currentIdentifier","e2eDisabledMessage","e2eDisabled","NoLocalKey","persona_required","personas","identity","openDashboard","Helper","customHint","handlerPosition","enableVerify","createConfirm","s","hasPersona","connected","verified","connect","noLocalKeyMessage","compose_no_local_key","shareWithNum","selectedRecipientLength","E2E","compose_shared_friends_other","count","compose_shared_friends_one","Public","compose_encrypt_visible_to_all","Self","compose_encrypt_visible_to_private","post_dialog_visible_to","v","compose_encrypt_visible_to_all_sub","compose_encrypt_visible_to_private_sub","compose_encrypt_visible_to_share","compose_encrypt_visible_to_share_sub","LoadingButton","CompositionContext","Telemetry","EventType","EventID","maxHeight","flexWrap","between","editorWrapper","fill","personaAction","CompositionDialogUI","currentPostSize","__updatePostSize","isSelectRecipientOpen","setSelectRecipientOpen","Editor","PluginEntry","sending","setSending","updatePostSize","encodingKind","setEncoding","useEncryptionEncode","setEncryptionKind","encryptionKind","setRecipients","useSetEncryptionKind","msg","startPlugin","initialMetas","Object","context","submitAvailable","maxLength","Number","POSITIVE_INFINITY","encode","persona","version","finally","Provider","element","message","e2eEncryptionDisabled","captureEvent","Interact","EntryMaskComposeVisibleSelected","EntryMaskComposeVisibleAll","EntryMaskComposeVisiblePrivate","supportImageEncoding","supportTextEncoding","requireClipboardPermission","hasClipboardPermission","onRequestClipboardPermission","post_dialog_enable_paste_auto","opacity","loadingPosition","startIcon","Send","post_dialog__button","NoPersona","NoConnection","encoding","internal_encryptionKind","imagePayloadSelected","imagePayloadReadonly","imagePayloadVisible","useCompositionClipboardRequest","queryExtensionPermission","requestExtensionPermission","sendToAll","onQueryClipboardPermission","decode","DEFAULT_MASK","getDimension","getPreset","findPreset","decodeArrayBuffer","encodeArrayBuffer","GrayscaleAlgorithm","SteganographyPreset","Preset2021","Preset2022","Preset2023","steganographyEncodeImage","buf","options","downloadImage","password","grayscaleAlgorithm","preset","Error","optionalOptions","TypeError","Uint8Array","mask","pass","steganographyDecodeImage","image","buffer","arrayBuffer","dimension","SteganographyPresetImage","URL","url","toString","activatedSiteAdaptorUI","downloadUrl","SteganographyPayload","configuration","steganography","blankImage","secretImage","Crypto","NONE","blob","Blob","encodeByNetwork","Sniffings","activatedSiteAdaptor_state","useSubmit","reason","lastRecognizedIdentity","info","fallbackProfile","rawEncrypted","encryptTo","encryptPayloadNetwork","encrypted","decoratedText","decorateEncryptedText","defaultText","additional_post_box__encrypted_post_pre","mediaObject","automation","endpoint","publishPost","nativeCompositionDialog","attachImage","recover","relatedTextPayload","attachText","EntryAppLuckSend","EntryMaskComposeEncrypt","hasOfficialAccount","is_twitter_page","is_facebook_page","officialAccount","twitter_account","facebook_account","interpolation","escapeValue","additional_post_box__encrypted_post_pre_red_packet_sns_official_account","account","additional_post_box__encrypted_post_pre_red_packet","FileService","additional_post_box__encrypted_post_pre_file_service_sns_official_account","additional_post_box__encrypted_post_pre_file_service","useAsync","useCurrentPersonaConnectStatus","PersonaAction","CrossIsolationMessages","EMPTY_OBJECT","useRecipientsList","useCurrentPersona","dialogRoot","backgroundImage","hideDialogRoot","visibility","dialogContent","Composition","connectStatus","hasLocalKey","Identity","setReason","setInitialMetas","setIsOpenFromApplicationBoard","UI","compositionDialogEvent","startupPlugin","startupPluginProps","Access","EntryMaskComposeOpen","replaceComposition","onSubmit_","networkSupport","injection","newPostComposition","supportedOutputTypes","isE2E_Disabled","currentPersona","post_dialog__title","independent","bottomFixed","cloneElement","useLayoutEffect","Modal","styled","sayHelloShowed","userGuideFinished","userGuideStatus","noBoxShadowCover","zIndex","card","borderBottomColor","borderBottomWidth","borderTopWidth","borderTopColor","buttonContainer","ActionButton","NextButton","GuideStep","total","step","tip","arrow","onComplete","childrenRef","clientRect","setClientRect","bottomAvailable","setBottomAvailable","networkIdentifier","currentStep","finished","isCurrentStep","box1Ref","box2Ref","box3Ref","stepVisible","onSkip","onNext","String","document","body","scrollIntoView","onTry","stopped","requestAnimationFrame","fn","cr","getBoundingClientRect","window","innerHeight","old","hideBackdrop","paddingBottom","try","skip","next","MaskColors","IconButton","isMobileFacebook","grey","wrapper","borderBottom","ICON_MAP","minds","MaskInMinds","default","SharpMask","light","publicTwitter","EntryIconButton","disableGuideTip","Entry","mask_network","placement","disableHoverListener","PopperProps","disablePortal","iconButton","onHintButtonClicked","iconType","user_guide_tip_4","PostDialogHint","PostDialogHintUI","others","post_modal_hint__button","buttonTransform","createInjectHooksRenderer","useCurrentVisitingIdentity","ProfileCover","currentVisitingIdentity","Component","useAnyMode","cover","find","Debugger","Cover","useChainContext","useWeb3Others","useChainColor","expectedChainId","chainId","Others","chainResolver","chainColor","useChainIdMainnet","isMainnet","useSetupGuideStatus","usePersonaPerSiteConnectStatus","lastState","username","checkSiteConnectedToCurrentPersona","linkedProfiles","some","Settings","getCurrentPersonaIdentifier","queryOwnedPersonaInformation","currentSiteConnectedPersona","isSiteConnectedToCurrentPersona","currentPersonaPublicKey","currentSiteConnectedPersonaPublicKey","toText","ApplicationBoardModal","useOpenApplicationBoardDialog","quickMode","focusPluginID","applicationCurrentStatus","personaPerSiteConnectStatusLoading","currentSite","setPluginMinimalModeEnabled","MuiTypography","ListItemButton","MuiListItemButton","ListItemIcon","MuiListItemIcon","ListItemText","MuiListItemText","useTheme","FiberManualRecord","FiberManualRecordIcon","ProviderType","TransactionStatusType","useProviderDescriptor","useChainIdValid","useReverseAddress","useRecentTransactions","WalletIcon","SelectProviderModal","WalletStatusModal","chainIcon","ToolboxHintUnstyled","category","ToolboxHintForWallet","ToolboxHintForApplication","Container","iconSize","mini","openApplicationBoardDialog","user_guide_tip_1","MaskBlue","badgeSize","onClickToolbox","shouldDisplayChainIndicator","provider","useToolbox","user_guide_tip_2","MaskWallet","mainIcon","badgeIconBorderColor","Wallet","chainIdValid","chainIdMainnet","pendingTransactions","NOT_DEPEND","domain","getToolboxTitle","plugin_wallet_connect_wallet","formatDomainName","formatAddress","plugin_wallet_pending_transactions","thickness","useMount","DashboardRoutes","BannerUI","nextStep","Banner","personaConnectStatus","identities","defaultNextStep","warn","Personas","SignUpPersona","defaultUserName","isValid","utils","isValidUsername","mounted","setMounted","produce","emptyTransformationContext","FlattenTypedMessage","forEachTypedMessageChild","isTypedMessageAnchor","TypedMessageRender","useTransformedValue","usePostInfoDetails","TypedMessageRenderContext","overflowWrap","PostReplacer","postMessage","setPostMessage","rawMessage","iv","postIVIdentifier","postReplacerHidden","draft","author","currentProfile","initialTransformationContext","authorHint","postURL","href","textResizer","renderFragments","customization","componentOverwrite","RenderFragments","Transformer","zip","unzip","after","shouldReplace","flatten","hasCashOrHashTag","shouldHiddenPostReplacer","visitor","node","PostInfoProvider","attachReactTreeWithContainer","injectPostReplacer","zipPost","unzipPost","PostReplacerDefault","unZipPost","signal","addEventListener","rootElement","afterShadow","key","untilVisible","post","Environment","isEnvironment","ContentScript","location","hostname","navigator","userAgent","match","startsWith","browser","runtime","getURL","fetchBlob","res","fetch","ok","selectElementContents","el","range","createRange","selectNodeContents","sel","globalThis","getSelection","removeAllRanges","addRange","useContext","createContext","webpackHot","accept","useQuery","usePersistSubscription","persistKey","subscription","predicate","initialValue","getCurrentValue","refetch","queryKey","networkMode","queryFn","subscribe","createConstantSubscription","ZERO","UNDEFINED","EMPTY_STRING","EMPTY_ARRAY","EMPTY_ENTRY","TRUE","FALSE","NULL","compose","args","last","pop","Boolean","reduceRight","prev","formatPersonaFingerprint","CopyButton","PlatformAvatar","shadow","popup","linkIcon","second","personaKey","avatar","networkIcon","nickname","PersonaImageIcon","img","src","alignSelf","badgeIcon","inverse","providerIcon","isBorderColorNotDefault","names","Masks","Ok","Err","Some","None","z_schema","enableMapSet","metadataSchemaStore","getKnownMetadataKeys","getMetadataSchema","registerMetadataSchema","jsonSchema","createTypedMessageMetadataReader","readTypedMessageMetadataUntyped","EMPTY","isDataMatchJSONSchema","isErr","validator","validate","getLastErrors","createRenderWithMetadata","metadataReader","isOk","immer_setup","typedMessage","edit","renderWithMetadataUntyped","useSubscription","useWeb3State","useAccount","expectedAccount","defaultAccount","useDefaultChainId","useChainId","defaultChainId","actualChainId","useProviderType","defaultProviderType","providerType","isUndefined","omitBy","NetworkPluginID","getSiteType","pluginIDsSettings","Providers","useLocation","ReadonlyNetworkContext","NetworkContext","ChainContext","ReadonlyNetworkContextProvider","NetworkContextProvider","setPluginID","ChainContextProvider","useNetworkContext","controlled","globalAccount","globalChainId","globalProviderType","maskProvider","maskAccount","maskChainId","_account","setAccount","_chainId","setChainId","_providerType","setProviderType","is_popup_wallet_page","is_popup_page","hash","Web3ContextProvider","rest","RevokeNetworkContextProvider","RevokeChainContextProvider","DefaultWeb3ContextProvider","contextValue","PLUGIN_EVM","JSON","stringify","RootWeb3ContextProvider","pluginIDs","site","useEnvironmentContext","overrides","ChainId","EVM_ChainId","FlowChainId","SolanaChainId","DEFAULT_CHAIN_ID","Mainnet","PLUGIN_FLOW","PLUGIN_SOLANA","expectedPluginID","getDefaultChainId","OthersAll","use","getActivatedPluginWeb3State"],"sourceRoot":"","x_google_ignoreList":[22,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68]}