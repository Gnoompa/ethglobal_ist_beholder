{"version":3,"file":"bundled/chunk.6833.js","mappings":"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;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ,QAAQ;AAClC,kBAAkB,QAAQ,QAAQ;AAClC,kBAAkB,QAAQ,OAAO;AACjC,kBAAkB,QAAQ,OAAO;AACjC,kBAAkB,QAAQ,OAAO;AACjC,kBAAkB,QAAQ,OAAO;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0EAA0E;;AAE1E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD,EAAE,UAAU,EAAE;AAC/D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,aAAa,aAAa;AAC1C;AACA,gBAAgB,aAAa,aAAa;AAC1C;AACA,gBAAgB,aAAa,aAAa;AAC1C;AACA,gBAAgB,aAAa,aAAa;AAC1C;AACA,gBAAgB,aAAa,aAAa;AAC1C;AACA,gBAAgB,aAAa;AAC7B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACt0BA,oBAAoB,mBAAO,CAAC,KAAe;AAC3C,cAAc,mBAAO,CAAC,KAAS;;AAE/B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,mCAAmC;AACnC;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wDAAwD,uCAAuC;AAC/F,sDAAsD,qCAAqC;;AAE3F;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF,CAAC;;AAED;;;;;;;;AChFA,oBAAoB,mBAAO,CAAC,KAAe;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;;AAE5B;;AAEA;AACA;AACA;;AAEA,0CAA0C,SAAS;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC,SAAS;AAC/C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;AC/FY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvJA;AACA,iBAAiB,mBAAO,CAAC,KAAY;AACrC,cAAc,mBAAO,CAAC,KAAgB;AACtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,IAAI;AAC7B,wBAAwB,EAAE,WAAW,EAAE;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,IAAI;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA8B,IAAI;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACjPA,oBAAoB,mBAAO,CAAC,KAAc;AAC1C,gBAAgB,mBAAO,CAAC,KAAe;;AAEvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,QAAQ;AACjB;AACA,cAAc,mBAAmB;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA,SAAS,UAAU;AACnB,SAAS,QAAQ;;AAEjB,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,UAAU;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AC/eA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;ACRa;;AAEb,iBAAiB,mBAAO,CAAC,KAAa;;AAEtC;AACA;;AAEA;AACA;;AAEA,oCAAoC,SAAS;AAC7C;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","sources":["webpack://mask-network/./packages/mask/content-script/utils/pasteImageToActiveElements.ts","webpack://mask-network/./packages/mask/content-script/site-adaptor-infra/defaults/automation/AttachImageToComposition.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/collecting/getSearchedKeyword.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/utils/user.ts","webpack://mask-network/./packages/mask/shared/site-adaptors/implementations/twitter.com.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/shared.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/automation/openComposeBox.ts","webpack://mask-network/./packages/mask/content-script/utils/regexMatch.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/utils/postBox.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/utils/selector.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/automation/pasteTextToComposition.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/automation/pasteImageToComposition.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/automation/gotoNewsFeedPage.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/automation/gotoProfilePage.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/automation/publishPost.ts","webpack://mask-network/./packages/injected-script/shared/twitter.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/utils/isMobile.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/collecting/identity.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/collecting/theme.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/utils/url.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/MaskIcon.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/utils/fetch.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/collecting/post.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/customization/custom.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/constant.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/ToolboxHint_UI.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/ToolboxHint.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/locales/languages.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/customization/i18n.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/SearchResultInspector.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/ProfileTab.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/ProfileTabContent.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/PostReplacer.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Banner.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/PostDialog.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/PostDialogHint.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/inject.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/PostInspector.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/PostActions.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptor-infra/defaults/inject/PostActions.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/PostActions/index.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Tips/ProfileTipsButton.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/utils/AvatarType.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Tips/hooks.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Tips/FollowTipsButton.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Tips/PostTipsButton.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Tips/index.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/utils/avatar.ts","webpack://mask-network/./packages/plugins/Avatar/src/hooks/useNFTContainerAtTwitter.ts","webpack://mask-network/./packages/plugins/Avatar/src/SiteAdaptor/NFTAvatarClip.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/NFT/MiniAvatarBorder.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/NFT/Avatar.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/NFT/NFTAvatarEditProfileDialog.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/NFT/NFTAvatarEditProfile.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/NFT/TweetNFTAvatar.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/customization/render-fragments.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/ProfileCover.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/ProfileCard/AvatarDecoration.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/ProfileCard/ProfileBar.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/ProfileCard/ProfileCardTitle.tsx","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/ProfileCard/index.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/ProfileCard/constants.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/ProfileCard/useControlProfileCard.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/ProfileCard/index.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Avatar/index.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Lens/injectLensOnConversation.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Lens/injectLensOnPost.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Lens/injectLensOnProfile.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Lens/injectLensOnSpaceDock.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Lens/injectLensOnUserCell.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Lens/index.tsx","webpack://mask-network/./packages/plugins/Avatar/src/SiteAdaptor/NFTAvatarSquare.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/NFT/useInjectedCSS.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/NFT/useUpdatedAvatar.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/NFT/NFTAvatarInTwitter.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/NFT/NFTAvatarClip.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/NFT/index.tsx","webpack://mask-network/./packages/plugins/SwitchLogo/src/SiteAdaptor/SwitchLogoButton.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/SwitchLogo.tsx","webpack://mask-network/./packages/plugins/Calendar/src/hooks/useEventList.tsx","webpack://mask-network/./packages/plugins/Calendar/src/SiteAdaptor/components/DatePicker.tsx","webpack://mask-network/./packages/plugins/Calendar/src/SiteAdaptor/components/DatePickerTab.tsx","webpack://mask-network/./packages/plugins/Calendar/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/Calendar/src/SiteAdaptor/components/NewsList.tsx","webpack://mask-network/./packages/plugins/Calendar/src/SiteAdaptor/components/EventList.tsx","webpack://mask-network/./packages/plugins/Calendar/src/SiteAdaptor/components/CountDownTimer.tsx","webpack://mask-network/./packages/plugins/Calendar/src/SiteAdaptor/components/NFTList.tsx","webpack://mask-network/./packages/plugins/Calendar/src/SiteAdaptor/components/Footer.tsx","webpack://mask-network/./packages/plugins/Calendar/src/SiteAdaptor/CalendarContent.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/injection/Calendar.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/twitter.com/ui-provider.ts","webpack://mask-network/./packages/mask/content-script/utils/untilElementAvailable.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useCurrentVisitingIdentity.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useSocialIdentity.ts","webpack://mask-network/./packages/plugin-infra/src/utils/message.ts","webpack://mask-network/./packages/plugin-infra/src/utils/rpc.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useSocialIdentityByUserId.ts","webpack://mask-network/./packages/plugins/Tips/src/hooks/useProfilePublicKey.ts","webpack://mask-network/./packages/plugins/Tips/src/components/TipsButton/useTipsAccounts.ts","webpack://mask-network/./packages/plugins/Tips/src/components/TipsButton/index.tsx","webpack://mask-network/./packages/plugins/Tips/src/messages.ts","webpack://mask-network/./packages/plugins/Trader/src/messages.ts","webpack://mask-network/./packages/shared-base-ui/src/components/AnchorContext/index.tsx","webpack://mask-network/./packages/shared-base/src/helpers/getLocalImplementation.tsx","webpack://mask-network/./packages/shared/src/hooks/useOpenApplicationSettings.ts","webpack://mask-network/./packages/theme/src/Components/WrappedComponents/ShadowRootPopper.ts","webpack://mask-network/./packages/web3-providers/src/types/Trending.ts","webpack://mask-network/./node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/conversions.js","webpack://mask-network/./node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/index.js","webpack://mask-network/./node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/route.js","webpack://mask-network/./node_modules/.pnpm/color-name@1.1.4/node_modules/color-name/index.js","webpack://mask-network/./node_modules/.pnpm/color-string@1.9.0/node_modules/color-string/index.js","webpack://mask-network/./node_modules/.pnpm/color@4.2.3/node_modules/color/index.js","webpack://mask-network/./node_modules/.pnpm/is-arrayish@0.3.2/node_modules/is-arrayish/index.js","webpack://mask-network/./node_modules/.pnpm/simple-swizzle@0.2.2/node_modules/simple-swizzle/index.js"],"sourcesContent":["import { pasteImage } from '@masknet/injected-script'\n\n/**\n * paste image to activeElements\n * @param image\n */\n\nexport async function pasteImageToActiveElements(image: File | Blob): Promise<void> {\n    pasteImage(new Uint8Array(await image.arrayBuffer()))\n}\n","import { waitDocumentReadyState } from '@masknet/kit'\nimport type { SiteAdaptorUI } from '@masknet/types'\nimport { MaskMessages } from '@masknet/shared-base'\nimport { activatedSiteAdaptorUI } from '../../ui.js'\nimport { downloadUrl, pasteImageToActiveElements } from '../../../utils/index.js'\n\nexport function pasteImageToCompositionDefault(hasSucceed: () => Promise<boolean> | boolean) {\n    return async function (\n        url: string | Blob,\n        { recover, relatedTextPayload }: SiteAdaptorUI.AutomationCapabilities.NativeCompositionAttachImageOptions,\n    ) {\n        const image = typeof url === 'string' ? await downloadUrl(url) : url\n        await waitDocumentReadyState('interactive')\n        if (relatedTextPayload) {\n            const p: Promise<void> | undefined =\n                activatedSiteAdaptorUI!.automation.nativeCompositionDialog?.attachText?.(relatedTextPayload, {\n                    recover: false,\n                })\n            await p\n        }\n        await pasteImageToActiveElements(image)\n\n        if (await hasSucceed()) return\n        if (recover) {\n            MaskMessages.events.autoPasteFailed.sendToLocal({ text: relatedTextPayload || '', image })\n        }\n    }\n}\n","/**\n * Listing all possible pathnames start from /search that the search box will keep existing on twitter.\n * That means the keyword will not be cleaned and related components keep injecting.\n * Otherwise, if a pathname not in this list the keyword will be cleaned and remove relative components from DOM.\n */\nconst SAFE_PATHNAMES_ON_TWITTER = [\n    '/compose/tweet',\n    '/search-advanced',\n    '/settings/trends',\n    '/settings/search',\n    '/i/display',\n    '/account/switch',\n    '/i/keyboard_shortcuts',\n]\n\nexport default function getSearchedKeywordAtTwitter(): string {\n    const params = new URLSearchParams(location.search)\n    const hashTagMatched = location.pathname.match(/\\/hashtag\\/([\\dA-Za-z]+)/)\n    const isTabAvailable = ['top'].includes(params.get('f') ?? '')\n    if (location.pathname === '/search' && (!params.get('f') || isTabAvailable)) return params.get('q') ?? ''\n    else if (hashTagMatched) return '#' + hashTagMatched[1]\n    else if (!SAFE_PATHNAMES_ON_TWITTER.includes(location.pathname)) return ''\n\n    return ''\n}\n","import { isNull } from 'lodash-es'\nimport { ProfileIdentifier, type SocialIdentity } from '@masknet/shared-base'\nimport { Twitter } from '@masknet/web3-providers'\nimport { twitterBase } from '../base.js'\n\n/**\n * @link https://help.twitter.com/en/managing-your-account/twitter-username-rules\n */\nexport function usernameValidator(name: string) {\n    for (const v of [/(twitter|admin)/i, /.{16,}/, /\\W/]) {\n        if (!isNull(v.exec(name))) {\n            return false\n        }\n    }\n    if (name.length < 4) return false\n    return true\n}\n\nexport async function getUserIdentity(twitterId: string): Promise<SocialIdentity | undefined> {\n    const user = await Twitter.getUserByScreenName(twitterId)\n    if (!user) return\n\n    return {\n        identifier: ProfileIdentifier.of(twitterBase.networkIdentifier, user.screenName).unwrapOr(undefined),\n        nickname: user.nickname,\n        avatar: user.avatarURL,\n        bio: user.bio,\n        homepage: user.homepage,\n    }\n}\n\nexport function getUserId(ele: HTMLElement) {\n    return ele?.querySelector('a[href][role=link]')?.getAttribute('href')?.slice(1)\n}\n","import urlcat from 'urlcat'\nimport { EnhanceableSite } from '@masknet/shared-base'\nimport type { SiteAdaptor } from '../types.js'\n\nconst origins = ['https://mobile.twitter.com/*', 'https://twitter.com/*']\nexport const TwitterAdaptor: SiteAdaptor.Definition = {\n    name: 'Twitter',\n    networkIdentifier: EnhanceableSite.Twitter,\n    declarativePermissions: { origins },\n    homepage: 'https://twitter.com',\n    isSocialNetwork: true,\n    sortIndex: 0,\n    getProfilePage: (userId) => new URL(`https://twitter.com/${userId.userId}`),\n    getShareLinkURL(message) {\n        const url = urlcat('https://twitter.com/intent/tweet', { text: message })\n        return new URL(url)\n    },\n}\n","import { type PostIdentifier, ProfileIdentifier } from '@masknet/shared-base'\nimport { openWindow } from '@masknet/shared-base-ui'\nimport type { SiteAdaptor } from '@masknet/types'\nimport { createSiteAdaptorSpecializedPostContext } from '../../site-adaptor-infra/utils/create-post-context.js'\nimport { hasPayloadLike } from '../../utils/index.js'\nimport { twitterBase } from './base.js'\nimport { TwitterDecoder } from '@masknet/encryption'\nimport { getUserIdentity, usernameValidator } from './utils/user.js'\nimport { TwitterAdaptor } from '../../../shared/site-adaptors/implementations/twitter.com.js'\n\nfunction getPostURL(post: PostIdentifier): URL | null {\n    if (!(post.identifier instanceof ProfileIdentifier)) return null\n    return new URL(`https://twitter.com/${post.identifier.userId}/status/${post.postId}`)\n}\nexport const twitterShared: SiteAdaptor.Shared & SiteAdaptor.Base = {\n    ...twitterBase,\n    utils: {\n        isValidUsername: usernameValidator,\n        getPostURL,\n        share(text) {\n            const url = TwitterAdaptor.getShareLinkURL!(text)\n            const width = 700\n            const height = 520\n            const openedWindow = openWindow(url, 'share', {\n                width,\n                height,\n                screenX: window.screenX + (window.innerWidth - width) / 2,\n                screenY: window.screenY + (window.innerHeight - height) / 2,\n                opener: true,\n                referrer: true,\n                behaviors: {\n                    toolbar: true,\n                    status: true,\n                    resizable: true,\n                    scrollbars: true,\n                },\n            })\n            if (openedWindow === null) {\n                location.assign(url)\n            }\n        },\n        createPostContext: createSiteAdaptorSpecializedPostContext({\n            hasPayloadLike: (text) => {\n                return TwitterDecoder(text).map(hasPayloadLike).unwrapOr(false)\n            },\n            getURLFromPostIdentifier: getPostURL,\n        }),\n        getUserIdentity,\n    },\n}\n","import { CrossIsolationMessages, type CompositionDialogEvent } from '@masknet/shared-base'\nimport { makeTypedMessageText, type SerializableTypedMessages } from '@masknet/typed-message'\n\nexport function openComposeBoxTwitter(\n    content: string | SerializableTypedMessages,\n    options?: CompositionDialogEvent['options'],\n) {\n    CrossIsolationMessages.events.compositionDialogEvent.sendToLocal({\n        reason: 'timeline',\n        open: true,\n        content: typeof content === 'string' ? makeTypedMessageText(content) : content,\n        options,\n    })\n}\n","import { isNull } from 'lodash-es'\n\n/**\n * index starts at one.\n */\n\nexport function regexMatch(input: string, pattern: RegExp, index?: number): string | null\nexport function regexMatch(input: string, pattern: RegExp, index: null): RegExpMatchArray | null\nexport function regexMatch(input: string, pattern: RegExp, index: number | null = 1) {\n    const r = input.match(pattern)\n    if (isNull(r)) return null\n    if (index === null) {\n        return r as any\n    }\n    return r[index]\n}\n","import { postEditorDraftContentSelector } from './selector.js'\nimport type { LiveSelector } from '@dimensiondev/holoflows-kit'\n\nexport function getEditorContent() {\n    const editorNode = postEditorDraftContentSelector().evaluate()\n    if (!editorNode) return ''\n    if (editorNode.tagName.toLowerCase() === 'div') return (editorNode as HTMLDivElement).innerText\n    return (editorNode as HTMLTextAreaElement).value\n}\n\nexport function isCompose() {\n    return globalThis.location.pathname.includes('compose')\n}\n\nexport function hasFocus(x: LiveSelector<HTMLElement, true>) {\n    return x.evaluate() === document.activeElement\n}\n\nexport function hasEditor() {\n    return !!postEditorDraftContentSelector().evaluate()\n}\n","import { LiveSelector } from '@dimensiondev/holoflows-kit'\nimport { regexMatch } from '../../../utils/regexMatch.js'\nimport { isCompose } from './postBox.js'\n\ntype E = HTMLElement\n\nexport function querySelector<T extends E, SingleMode extends boolean = true>(selector: string, singleMode = true) {\n    const ls = new LiveSelector<T, SingleMode>().querySelector<T>(selector)\n    return (singleMode ? ls.enableSingleMode() : ls) as LiveSelector<T, SingleMode>\n}\nexport function querySelectorAll<T extends E>(selector: string) {\n    return new LiveSelector().querySelectorAll<T>(selector)\n}\n\n// #region \"Enhanced Profile\"\nexport function searchProfileTabListLastChildSelector() {\n    return querySelector<E>(\n        '[data-testid=\"primaryColumn\"] div + [role=\"navigation\"][aria-label] [data-testid=\"ScrollSnap-List\"] div[role=\"presentation\"]:last-of-type a[role=\"tab\"]',\n    ).closest<E>(1)\n}\nexport function nextTabListSelector() {\n    return querySelector('[data-testid=\"ScrollSnap-nextButtonWrapper\"]')\n}\nexport function searchProfileTabPageSelector() {\n    return searchProfileTabListLastChildSelector()\n        .closest(5)\n        .querySelector<E>('section > div[aria-label]:not([role=\"progressbar\"])')\n}\n\nexport function searchProfileTabLoseConnectionPageSelector() {\n    return querySelector<E>(\n        '[data-testid=\"primaryColumn\"] [role=\"navigation\"] + * > div[dir=\"auto\"]:not([role=\"progressbar\"])',\n    )\n}\n\nexport function searchProfileEmptySelector() {\n    return querySelector<E>('[data-testid=\"primaryColumn\"] [data-testid=\"emptyState\"]')\n}\nexport function searchProfileTabSelector() {\n    return querySelector<E>('[aria-label][role=\"navigation\"]  [role=\"tablist\"] [role=\"tab\"][aria-selected=\"false\"]')\n}\nexport function searchAppBarBackSelector() {\n    return querySelector<E>('[data-testid=\"app-bar-back\"] > div')\n}\nexport function searchProfileTabListSelector() {\n    return querySelectorAll('[aria-label][role=\"navigation\"]  [role=\"tablist\"][data-testid=\"ScrollSnap-List\"] a')\n}\nexport function searchNewTweetButtonSelector() {\n    const q = querySelector<E>('[data-testid=\"FloatingActionButtons_Tweet_Button\"]')\n    if (q.evaluate()) return q\n    return querySelector<E>('[data-testid=\"SideNav_NewTweet_Button\"]')\n}\n\nexport function searchAvatarSelector() {\n    return querySelector<HTMLImageElement>('[data-testid=\"primaryColumn\"] a[href$=\"/photo\"] img[src*=\"profile_images\"]')\n}\nquerySelector<HTMLImageElement>('[data-testid=\"primaryColumn\"] a[href$=\"/nft\"] img[src*=\"profile_images\"]')\nexport function searchAvatarMetaSelector() {\n    return querySelector<E>('head meta[property=\"og:image\"]')\n}\n\nexport function profileFollowButtonSelector() {\n    return querySelector<E>(\n        '[data-testid=\"primaryColumn\"] [aria-haspopup=\"menu\"][data-testid=\"userActions\"] ~ [data-testid=\"placementTracking\"]',\n    )\n}\n\nexport function normalFollowButtonSelector() {\n    return querySelectorAll(\n        '[data-testid=\"primaryColumn\"] [role=\"button\"][data-testid=\"UserCell\"] [data-testid$=\"follow\"]',\n    )\n}\n\nexport function searchProfileCoverSelector() {\n    return querySelector<E>(\n        '[data-testid=\"primaryColumn\"] > div > div:last-child > div > div > div > div > div > div[style], [data-testid=\"primaryColumn\"] > div > div:last-child > div > div > div > a > div > div[style]',\n    ).closest<E>(1)\n}\n\nexport function searchEditProfileSelector() {\n    return querySelector<E>('[data-testid=\"primaryColumn\"] [data-testid^=\"UserAvatar-Container-\"]')\n        .closest(1)\n        .querySelector<E>('a[href=\"/settings/profile\"]')\n}\n// #endregion\n\nexport function rootSelector() {\n    return querySelector<E>('#react-root')\n}\n\n// `aside *` selectors are for mobile mode\nexport function composeAnchorSelector() {\n    return querySelector<HTMLAnchorElement>(\n        [\n            'header[role=banner] a[href=\"/compose/tweet\"]',\n            'aside a[href=\"/compose/tweet\"]',\n            // can't see the compose button on share popup, use the tweetButton instead\n            '[role=main] [role=button][data-testid=tweetButton]',\n        ].join(','),\n    )\n}\n\nexport function postEditorContentInPopupSelector() {\n    return querySelector<E>(\n        '[aria-labelledby=\"modal-header\"] > div:first-child > div:first-child > div:first-child > div:nth-child(3)',\n    )\n}\nexport function postEditorInPopupSelector() {\n    return querySelector<E>(\n        '[aria-labelledby=\"modal-header\"]  div[data-testid=\"toolBar\"] [role=\"presentation\"]:has(> div[data-testid=\"geoButton\"])',\n    )\n}\nexport function sideBarProfileSelector() {\n    return querySelector<E>('[role=\"banner\"] [role=\"navigation\"] [data-testid=\"AppTabBar_Profile_Link\"] > div')\n}\nexport function postEditorInTimelineSelector() {\n    return querySelector<E>(\n        '[role=\"main\"] :not(aside) > [role=\"progressbar\"] ~ div [role=\"button\"][aria-label]:nth-child(6)',\n    )\n}\n\nexport function isReplyPageSelector() {\n    return !!location.pathname.match(/^\\/\\w+\\/status\\/\\d+$/)\n}\nexport function postEditorDraftContentSelector() {\n    if (location.pathname === '/compose/tweet') {\n        return querySelector<HTMLDivElement>(\n            '[contenteditable][aria-label][spellcheck],textarea[aria-label][spellcheck]',\n        )\n    }\n    if (isReplyPageSelector()) {\n        return querySelector<HTMLElement>('div[data-testid=\"tweetTextarea_0\"]')\n    }\n    return (isCompose() ? postEditorInPopupSelector() : postEditorInTimelineSelector()).querySelector<HTMLElement>(\n        '.public-DraftEditor-content, [contenteditable][aria-label][spellcheck]',\n    )\n}\n\nexport function searchResultHeadingSelector() {\n    return querySelector<E>('[role=\"main\"] [data-testid=\"primaryColumn\"] > div > :nth-child(2)')\n}\n\nexport function newPostButtonSelector() {\n    return querySelector<E>('[data-testid=\"SideNav_NewTweet_Button\"]')\n}\n\nexport function bioPageUserNickNameSelector() {\n    return querySelector<HTMLDivElement>('[data-testid=\"UserDescription\"]')\n        .map((x) => x.parentElement?.parentElement?.previousElementSibling)\n        .querySelector<HTMLDivElement>('div[dir]')\n}\n\nexport function isProfilePageLike() {\n    // starts with exclude\n    if (location.pathname.match(/^\\/(home|explore|notifications|messages|i\\/|settings|compose|search)/)) return false\n    // ends with exclude\n    if (location.pathname.match(/\\/(topics|recommended|not_interested|lists)$/)) return false\n    return !!location.pathname.match(/^\\/[\\dA-Za-z]+\\/?$/)\n}\nexport function bioPageUserIDSelector(selector: () => LiveSelector<HTMLSpanElement, true>) {\n    return selector().map((x) => (x.parentElement?.nextElementSibling as HTMLElement)?.innerText?.replace('@', ''))\n}\n\nexport function floatingBioCardSelector() {\n    return querySelector<HTMLSpanElement>(\n        '[style~=\"left:\"] a[role=link] > div:first-child > div:first-child > div:first-child[dir=\"auto\"]',\n    )\n}\n\nexport function postsImageSelector(node: HTMLElement) {\n    return new LiveSelector([node]).querySelectorAll<HTMLElement>(\n        [\n            '[data-testid=\"tweet\"] > div > div img[src*=\"media\"]',\n            '[data-testid=\"tweet\"] ~ div img[src*=\"media\"]', // image in detail page for new twitter\n        ].join(','),\n    )\n}\n\nexport function timelinePostContentSelector() {\n    return querySelectorAll(\n        [\n            '[data-testid=\"tweet\"] div + div div[lang]',\n            '[data-testid=\"tweet\"] div + div div[data-testid=\"card.wrapper\"]', // link box tweets\n        ].join(','),\n    )\n}\n\nexport function toastLinkSelector() {\n    return querySelector<HTMLLinkElement>('[data-testid=\"toast\"] a')\n}\n\nexport function postsContentSelector() {\n    return querySelectorAll(\n        [\n            // tweets on timeline page\n            '[data-testid=\"tweet\"] [data-testid=\"tweetText\"]',\n            '[data-testid=\"tweet\"]:not(:has([data-testid=\"tweetText\"])) [data-testid=\"tweetPhoto\"]', // tweets with only image.\n\n            // tweets on detailed page\n            '[data-testid=\"tweet\"] + div > div:first-child div[lang]',\n            '[data-testid=\"tweet\"] + div > div div[data-testid=\"card.wrapper\"]',\n\n            // quoted tweets in timeline\n            '[data-testid=\"tweet\"] [aria-labelledby] div[role=\"link\"] div[lang]',\n            // quoted tweets in detail page\n            '[data-testid=\"tweet\"] > div:last-child div[role=\"link\"] div[lang]',\n        ].join(','),\n    )\n}\n\nexport function postAvatarSelector() {\n    return querySelectorAll('[data-testid=tweet] [data-testid^=UserAvatar-Container-]')\n}\nexport function followUserAvatarSelector() {\n    return querySelectorAll('[data-testid=UserCell] [data-testid^=UserAvatar-Container-]')\n}\n\nconst base = querySelector<HTMLScriptElement>('#react-root ~ script')\nconst handle = /\"screen_name\":\"(.*?)\"/\nconst name = /\"name\":\"(.*?)\"/\nconst bio = /\"description\":\"(.*?)\"/\nconst avatar = /\"profile_image_url_https\":\"(.*?)\"/\n/**\n * first matched element can be extracted by index zero, followings are all capture groups, if no 'g' specified.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\n */\nfunction p(regex: RegExp, index: number) {\n    return base.clone().map((x) => regexMatch(x.innerText, regex, index))\n}\nexport function selfInfoSelectors() {\n    return {\n        handle: p(handle, 1),\n        name: p(name, 1),\n        bio: p(bio, 1),\n        userAvatar: p(avatar, 1),\n    }\n}\n\n// #region self info\nexport function searchSelfHandleSelector() {\n    return querySelector<HTMLSpanElement>(\n        [\n            '[data-testid=\"SideNav_AccountSwitcher_Button\"] > div > div[data-testid^=\"UserAvatar-Container-\"]', // desktop\n            '#layers [role=\"group\"] [role=\"dialog\"] [tabindex=\"-1\"] [dir=\"ltr\"] > span', // sidebar opened in mobile\n        ].join(','),\n    )\n}\n\nexport function searchSelfNicknameSelector() {\n    return querySelector<HTMLSpanElement>(\n        [\n            '[data-testid=\"SideNav_AccountSwitcher_Button\"] span span:first-child',\n            '#layers [role=\"group\"] [role=\"dialog\"] [role=\"link\"] span > span', // sidebar opened in mobile\n        ].join(','),\n    )\n}\n\nexport function searchWatcherAvatarSelector() {\n    return querySelector<HTMLImageElement>('[data-testid=\"SideNav_AccountSwitcher_Button\"] img')\n}\n\nexport function searchSelfAvatarSelector() {\n    return querySelector<HTMLImageElement>(\n        [\n            '#layers ~ div [role=\"banner\"] [role=\"button\"] img',\n            '[data-testid=\"DashButton_ProfileIcon_Link\"] [role=\"presentation\"] img',\n            '#layers [role=\"group\"] [role=\"dialog\"] [role=\"link\"] img', // sidebar opened in mobile\n        ].join(','),\n    )\n}\n// #endregion\n\n// #region twitter nft avatar\nexport function searchProfileAvatarSelector() {\n    return querySelector<E>('[data-testid=\"Profile_Save_Button\"]')\n        .closest<E>(8)\n        .querySelector('[data-testid=\"UserAvatar-Container-unknown\"]')\n        .closest<E>(3)\n}\n\nexport function searchProfileSaveSelector() {\n    return querySelector<E>('[data-testid=\"Profile_Save_Button\"]')\n}\n\n// #region avatar selector\nexport function searchTwitterAvatarLinkSelector() {\n    return querySelector<E>('[data-testid=\"UserProfileHeader_Items\"]').closest<E>(2).querySelector('div  a')\n}\n\nexport function searchTwitterAvatarSelector() {\n    return querySelector<E>('a[href$=\"/photo\"]').querySelector('img').closest<E>(1)\n}\n\nexport function searchTwitterAvatarNormalSelector() {\n    return querySelector<E>('a[href$=\"/photo\"]')\n}\n\n// #endregion\n\nexport function searchTwitterSquareAvatarSelector() {\n    return querySelector<E>('a[href$=\"/nft\"] > div img')\n}\n\nexport function searchTweetAvatarSelector() {\n    return querySelector<E, false>('[data-testid=\"tweetButtonInline\"]').closest<E>(7)\n}\n\nexport function searchRetweetAvatarSelector() {\n    return querySelector<E, false>('[data-testid=\"tweetButton\"]').closest<E>(6)\n}\n\nexport function searchTwitterAvatarNFTSelector() {\n    return querySelector<E>('a[href$=\"/nft\"]').closest<E>(1).querySelector('a div:nth-child(3) > div')\n}\n\nexport function searchTwitterAvatarNFTStyleSelector() {\n    return querySelector<E>('a[href$=\"/nft\"] > div')\n}\n\nexport function searchTwitterAvatarNFTLinkSelector() {\n    return querySelector<E>('a[href$=\"/nft\"]')\n}\n\nexport function searchReplyToolbarSelector() {\n    return querySelector<E>('div[data-testid=\"primaryColumn\"] div[data-testid=\"toolBar\"]').querySelector<E>(\n        '[role=\"presentation\"]:has(> div[data-testid=\"geoButton\"])',\n    )\n}\n\n// nameTag dom\nexport function searchNameTag() {\n    return querySelector<E>('#nft-gallery')\n}\n\nexport function searchHomeLinkName() {\n    return querySelector<E>('[data-testid=\"AppTabBar_Home_Link\"]')\n}\n","import { delay } from '@masknet/kit'\nimport { pasteText } from '@masknet/injected-script'\nimport type { SiteAdaptorUI } from '@masknet/types'\nimport { MaskMessages } from '@masknet/shared-base'\nimport { newPostButtonSelector, postEditorDraftContentSelector } from '../utils/selector.js'\nimport { getEditorContent, hasEditor, hasFocus, isCompose } from '../utils/postBox.js'\nimport { untilElementAvailable } from '../../../utils/untilElementAvailable.js'\nimport { selectElementContents } from '../../../utils/selectElementContents.js'\n\n/**\n * Wait for up to 5000 ms\n * If not complete, let user do it.\n */\nexport const pasteTextToCompositionTwitter: SiteAdaptorUI.AutomationCapabilities.NativeCompositionDialog['attachText'] =\n    (text, opt) => {\n        const interval = 500\n        const timeout = 5000\n        const worker = async function (abort: AbortSignal) {\n            const checkSignal = () => {\n                if (abort.aborted) throw new Error('Abort to paste text to the composition dialog at twitter.')\n            }\n\n            if (\n                (!isCompose() && opt?.reason === 'verify') ||\n                (!isCompose() && !hasEditor() && opt?.reason !== 'reply')\n            ) {\n                // open tweet window\n                await untilElementAvailable(newPostButtonSelector())\n                await delay(interval)\n                newPostButtonSelector().evaluate()!.click()\n                checkSignal()\n            }\n\n            // get focus\n            const i = postEditorDraftContentSelector()\n            await untilElementAvailable(i)\n            await delay(interval)\n            checkSignal()\n\n            if (opt?.reason === 'verify') {\n                selectElementContents(i.evaluate()!)\n            }\n\n            while (!hasFocus(i)) {\n                i.evaluate()!.click()\n                checkSignal()\n                await delay(interval)\n            }\n\n            // paste\n            pasteText(text)\n            await delay(interval)\n\n            if (!getEditorContent().replaceAll('\\n', '').includes(text.replaceAll('\\n', ''))) {\n                fail(new Error('Unable to paste text automatically'))\n            }\n        }\n\n        const fail = (e: Error) => {\n            if (opt?.recover) MaskMessages.events.autoPasteFailed.sendToLocal({ text })\n            throw e\n        }\n\n        return worker(AbortSignal.timeout(timeout)).then(undefined, (error) => fail(error))\n    }\n","import { delay } from '@masknet/kit'\nimport type { SiteAdaptorUI } from '@masknet/types'\nimport { hasEditor, hasFocus, isCompose } from '../utils/postBox.js'\nimport { newPostButtonSelector, postEditorDraftContentSelector } from '../utils/selector.js'\nimport { untilElementAvailable } from '../../../utils/untilElementAvailable.js'\nimport { pasteImageToCompositionDefault } from '../../../site-adaptor-infra/defaults/automation/AttachImageToComposition.js'\n\nexport async function pasteImageToCompositionTwitter(\n    url: string | Blob,\n    options: SiteAdaptorUI.AutomationCapabilities.NativeCompositionAttachImageOptions,\n) {\n    const interval = 500\n\n    if (!isCompose() && !hasEditor() && options?.reason !== 'reply') {\n        // open tweet window\n        await untilElementAvailable(newPostButtonSelector())\n        await delay(interval)\n        newPostButtonSelector().evaluate()!.click()\n    }\n\n    // get focus\n    const i = postEditorDraftContentSelector()\n    await untilElementAvailable(i)\n\n    while (!hasFocus(i)) {\n        i.evaluate()!.click()\n        await delay(interval)\n    }\n\n    pasteImageToCompositionDefault(() => false)(url, options)\n}\n","export function gotoNewsFeedPageTwitter() {\n    if (location.pathname.includes('/home')) location.reload()\n    else location.assign('/home')\n}\n","import type { ProfileIdentifier } from '@masknet/shared-base'\n\nexport function gotoProfilePageTwitter(profile: ProfileIdentifier) {\n    const path = `/${profile.userId}`\n    ;(document.querySelector(`[href=\"${path}\"]`) as HTMLElement | undefined)?.click()\n    setTimeout(() => {\n        // The classic way\n        if (!location.pathname.startsWith(path)) location.assign(path)\n    }, 400)\n}\n","import type { SiteAdaptorUI } from '@masknet/types'\nimport { Twitter } from '@masknet/web3-providers'\nimport type { TwitterBaseAPI } from '@masknet/web3-providers/types'\n\nexport async function publishPostTwitter(\n    mediaObjects: Array<string | Blob>,\n    options?: SiteAdaptorUI.AutomationCapabilities.NativeCompositionAttachImageOptions,\n) {\n    const images = mediaObjects.filter((x) => typeof x !== 'string') as Blob[]\n    const allSettled = await Promise.allSettled(images.map((x) => Twitter.uploadMedia(x)))\n    const mediaIds = allSettled\n        .map((x) => x.status === 'fulfilled' && x.value?.media_id_string)\n        .filter(Boolean) as string[]\n\n    const variables: TwitterBaseAPI.Tweet = {\n        tweet_text: mediaObjects.filter((x) => typeof x === 'string').join('\\n'),\n    }\n\n    if (mediaIds.length > 0)\n        variables.media = {\n            media_entities: mediaIds.map((x) => ({ media_id: x, togged_users: [] })),\n            possibly_sensitive: false,\n        }\n\n    if (options?.reason === 'reply') {\n        const replyTweetId = location.href.match(/\\/status\\/(\\d+)/)?.[1]\n\n        if (replyTweetId) {\n            variables.reply = {\n                in_reply_to_tweet_id: replyTweetId,\n                exclude_reply_user_ids: [],\n            }\n        }\n    }\n\n    console.log('DEBUG: publish post twitter')\n    console.log({\n        mediaObjects,\n        variables,\n    })\n\n    const postId = await Twitter.createTweet(variables)\n\n    console.log('DEBUG: response create tweet')\n    console.log(postId)\n    return postId\n}\n","// Collect from main js of Twitter's web client.\nexport const TWITTER_RESERVED_SLUGS: readonly string[] = [\n    '404',\n    'account',\n    'download',\n    'explore',\n    'follower_requests',\n    'hashtag',\n    'home',\n    'i',\n    'intent',\n    'lists',\n    'login',\n    'logout',\n    'mentions',\n    'messages',\n    'notifications',\n    'personalization',\n    'search',\n    'search-advanced',\n    'search-home',\n    'session',\n    'settings',\n    'share',\n    'signup',\n    'twitterblue',\n    'webview',\n    'welcome',\n    'your_twitter_data',\n]\nObject.freeze(TWITTER_RESERVED_SLUGS)\n","export const isMobileTwitter = !!navigator.userAgent.match(/Mobile|mobile/)\n","import { MutationObserverWatcher, type LiveSelector } from '@dimensiondev/holoflows-kit'\nimport { TWITTER_RESERVED_SLUGS } from '@masknet/injected-script/shared'\nimport { delay } from '@masknet/kit'\nimport { ProfileIdentifier } from '@masknet/shared-base'\nimport { queryClient } from '@masknet/shared-base-ui'\nimport type { SiteAdaptorUI } from '@masknet/types'\nimport { Twitter } from '@masknet/web3-providers'\nimport { first } from 'lodash-es'\nimport { creator } from '../../../site-adaptor-infra/index.js'\nimport { twitterBase } from '../base.js'\nimport { isMobileTwitter } from '../utils/isMobile.js'\nimport {\n    searchSelfAvatarSelector,\n    searchSelfHandleSelector,\n    searchSelfNicknameSelector,\n    searchWatcherAvatarSelector,\n    selfInfoSelectors,\n} from '../utils/selector.js'\n\nfunction collectSelfInfo() {\n    const handle = selfInfoSelectors().handle.evaluate()\n    const nickname = selfInfoSelectors().name.evaluate()\n    const avatar = selfInfoSelectors().userAvatar.evaluate()\n\n    return { handle, nickname, avatar }\n}\n\nfunction getNickname(nickname?: string) {\n    const nicknameNode = searchSelfNicknameSelector().closest<HTMLDivElement>(1).evaluate()\n    let _nickname = ''\n    if (!nicknameNode?.childNodes.length) return nickname\n\n    for (const child of nicknameNode.childNodes) {\n        const ele = child as HTMLDivElement\n        if (ele.tagName === 'IMG') {\n            _nickname += ele.getAttribute('alt') ?? ''\n        }\n        if (ele.tagName === 'SPAN') {\n            _nickname += ele.textContent?.trim()\n        }\n    }\n\n    return _nickname ?? nickname\n}\n\nfunction resolveLastRecognizedIdentityInner(\n    ref: SiteAdaptorUI.CollectingCapabilities.IdentityResolveProvider['recognized'],\n    cancel: AbortSignal,\n) {\n    const assign = async () => {\n        await delay(2000)\n\n        const selfInfo = collectSelfInfo()\n        const avatar = (searchSelfAvatarSelector().evaluate()?.getAttribute('src') || selfInfo.avatar) ?? ''\n        const handle =\n            searchSelfHandleSelector().evaluate()?.dataset.testid?.trim().slice('UserAvatar-Container-'.length) ||\n            selfInfo.handle\n        const nickname = getNickname(selfInfo.nickname) ?? ''\n\n        if (handle) {\n            ref.value = {\n                avatar,\n                nickname,\n                identifier: ProfileIdentifier.of(twitterBase.networkIdentifier, handle).unwrapOr(undefined),\n                isOwner: true,\n            }\n        }\n    }\n\n    const createWatcher = (selector: LiveSelector<HTMLElement, boolean>) => {\n        new MutationObserverWatcher(selector)\n            .addListener('onAdd', () => assign())\n            .addListener('onChange', () => assign())\n            .startWatch(\n                {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    attributeFilter: ['src'],\n                },\n                cancel,\n            )\n    }\n\n    assign()\n\n    window.addEventListener('locationchange', assign, { signal: cancel })\n    createWatcher(searchSelfHandleSelector())\n    createWatcher(searchWatcherAvatarSelector())\n}\n\nfunction resolveLastRecognizedIdentityMobileInner(\n    ref: SiteAdaptorUI.CollectingCapabilities.IdentityResolveProvider['recognized'],\n    cancel: AbortSignal,\n) {\n    const onLocationChange = async () => {\n        const settings = await Twitter.getSettings()\n        const identifier = ProfileIdentifier.of(twitterBase.networkIdentifier, settings?.screen_name).unwrapOr(\n            undefined,\n        )\n\n        if (identifier && !ref.value.identifier) {\n            ref.value = {\n                ...ref.value,\n                identifier,\n                isOwner: true,\n            }\n        }\n    }\n\n    onLocationChange()\n    window.addEventListener('locationchange', onLocationChange, { signal: cancel })\n}\n\nfunction getFirstSlug() {\n    const slugs: string[] = location.pathname.split('/').filter(Boolean)\n    return first(slugs)\n}\n\nfunction resolveCurrentVisitingIdentityInner(\n    ref: SiteAdaptorUI.CollectingCapabilities.IdentityResolveProvider['recognized'],\n    ownerRef: SiteAdaptorUI.CollectingCapabilities.IdentityResolveProvider['recognized'],\n    cancel: AbortSignal,\n) {\n    const update = async (twitterId: string) => {\n        const user = await queryClient.fetchQuery({\n            queryKey: ['twitter', 'profile', twitterId],\n            queryFn: () => Twitter.getUserByScreenName(twitterId),\n        })\n        if (process.env.NODE_ENV === 'development') {\n            console.assert(user, `Can't get get user by screen name ${twitterId}`)\n        }\n        if (!user) return\n\n        const handle = user.screenName\n        const ownerHandle = ownerRef.value.identifier?.userId\n        const isOwner = !!(ownerHandle && handle.toLowerCase() === ownerHandle.toLowerCase())\n        const avatar = user.avatarURL\n        const bio = user.bio\n        const homepage = user.homepage\n\n        ref.value = {\n            identifier: ProfileIdentifier.of(twitterBase.networkIdentifier, handle).unwrapOr(undefined),\n            nickname: user.nickname,\n            avatar,\n            bio,\n            homepage,\n            isOwner,\n        }\n    }\n\n    const slug = getFirstSlug()\n    if (slug && !TWITTER_RESERVED_SLUGS.includes(slug)) {\n        update(slug)\n        if (!ownerRef.value.identifier) {\n            const unsubscribe = ownerRef.addListener((val) => {\n                update(slug)\n                if (val) unsubscribe()\n            })\n        }\n    }\n\n    window.addEventListener(\n        'scenechange',\n        (event) => {\n            if (event.detail.scene !== 'profile') return\n            const twitterId = event.detail.value\n            update(twitterId)\n        },\n        { signal: cancel },\n    )\n}\n\nexport const IdentityProviderTwitter: SiteAdaptorUI.CollectingCapabilities.IdentityResolveProvider = {\n    hasDeprecatedPlaceholderName: false,\n    recognized: creator.EmptyIdentityResolveProviderState(),\n    start(cancel) {\n        resolveLastRecognizedIdentityInner(this.recognized, cancel)\n        if (isMobileTwitter) resolveLastRecognizedIdentityMobileInner(this.recognized, cancel)\n    },\n}\n\nexport const CurrentVisitingIdentityProviderTwitter: SiteAdaptorUI.CollectingCapabilities.IdentityResolveProvider = {\n    hasDeprecatedPlaceholderName: false,\n    recognized: creator.EmptyIdentityResolveProviderState(),\n    start(cancel) {\n        resolveCurrentVisitingIdentityInner(this.recognized, IdentityProviderTwitter.recognized, cancel)\n    },\n}\n","import { delay } from '@masknet/kit'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { createLookupTableResolver } from '@masknet/shared-base'\nimport type { SiteAdaptorUI } from '@masknet/types'\nimport { Twitter } from '@masknet/web3-providers'\nimport { TwitterBaseAPI } from '@masknet/web3-providers/types'\nimport { FontSize, ThemeMode } from '@masknet/web3-shared-base'\nimport { creator } from '../../../site-adaptor-infra/utils.js'\nimport { composeAnchorSelector } from '../utils/selector.js'\n\nconst resolveThemeColor = createLookupTableResolver<TwitterBaseAPI.ThemeColor, string>(\n    {\n        [TwitterBaseAPI.ThemeColor.Blue]: 'rgb(29, 155, 240)',\n        [TwitterBaseAPI.ThemeColor.Yellow]: 'rgb(255, 212, 0)',\n        [TwitterBaseAPI.ThemeColor.Purple]: 'rgb(120, 86, 255)',\n        [TwitterBaseAPI.ThemeColor.Magenta]: 'rgb(249, 24, 128)',\n        [TwitterBaseAPI.ThemeColor.Orange]: 'rgb(255, 122, 0)',\n        [TwitterBaseAPI.ThemeColor.Green]: 'rgb(0, 186, 124)',\n    },\n    'rgb(29, 155, 240)',\n)\n\nconst resolveThemeMode = createLookupTableResolver<TwitterBaseAPI.ThemeMode, ThemeMode>(\n    {\n        [TwitterBaseAPI.ThemeMode.Dark]: ThemeMode.Dark,\n        [TwitterBaseAPI.ThemeMode.Dim]: ThemeMode.Dark,\n        [TwitterBaseAPI.ThemeMode.Light]: ThemeMode.Light,\n    },\n    ThemeMode.Light,\n)\n\nconst resolveFontSize = createLookupTableResolver<TwitterBaseAPI.Scale, FontSize>(\n    {\n        [TwitterBaseAPI.Scale.X_Large]: FontSize.X_Large,\n        [TwitterBaseAPI.Scale.Large]: FontSize.Large,\n        [TwitterBaseAPI.Scale.Normal]: FontSize.Normal,\n        [TwitterBaseAPI.Scale.Small]: FontSize.Small,\n        [TwitterBaseAPI.Scale.X_Small]: FontSize.X_Small,\n    },\n    FontSize.Normal,\n)\n\nasync function resolveThemeSettingsInner(\n    ref: SiteAdaptorUI.CollectingCapabilities.ThemeSettingsProvider['recognized'],\n    cancel: AbortSignal,\n) {\n    const assign = async () => {\n        await delay(300)\n\n        const userSettings = await Twitter.getUserSettings()\n        if (!userSettings) return\n\n        ref.value = {\n            color: userSettings.themeColor ? resolveThemeColor(userSettings.themeColor) : ref.value.color,\n            size: userSettings.scale ? resolveFontSize(userSettings.scale) : ref.value.size,\n            mode: userSettings.themeBackground ? resolveThemeMode(userSettings.themeBackground) : ref.value.mode,\n            isDim: userSettings.themeBackground === TwitterBaseAPI.ThemeMode.Dim,\n        }\n    }\n\n    await assign()\n\n    new MutationObserverWatcher(composeAnchorSelector())\n        .addListener('onAdd', () => assign())\n        .addListener('onChange', () => assign())\n        .startWatch(\n            {\n                childList: true,\n                subtree: true,\n                attributes: true,\n                attributeFilter: ['src'],\n            },\n            cancel,\n        )\n}\n\nexport const ThemeSettingsProviderTwitter: SiteAdaptorUI.CollectingCapabilities.ThemeSettingsProvider = {\n    recognized: creator.EmptyThemeSettingsProviderState(),\n    async start(cancel) {\n        await resolveThemeSettingsInner(this.recognized, cancel)\n    },\n}\n","import { regexMatch } from '../../../utils/regexMatch.js'\n\n// more about twitter photo url formatting:\n// https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/entities-object#photo_format\nexport function canonifyImgUrl(url: string) {\n    const parsed = new URL(url)\n    if (parsed.hostname !== 'pbs.twimg.com') return url\n    const { searchParams } = parsed\n    searchParams.set('name', 'orig')\n    // we can't understand original image format when given url labeled as webp\n    if (searchParams.get('format') === 'webp') {\n        searchParams.set('format', 'png')\n        const pngURL = parsed.href\n        searchParams.set('format', 'jpg')\n        const jpgURL = parsed.href\n        return [jpgURL, pngURL]\n    }\n    return parsed.href\n}\n\nexport function parseId(t: string) {\n    return regexMatch(t, /status\\/(\\d+)/, 1)!\n}\n","import { memoize, noop } from 'lodash-es'\nimport { DOMProxy, LiveSelector, MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { Icons } from '@masknet/icons'\nimport { memoizePromise } from '@masknet/kit'\nimport type { PostInfo } from '@masknet/plugin-infra/content-script'\nimport { EnhanceableSite, ProfileIdentifier } from '@masknet/shared-base'\nimport { Flags } from '@masknet/flags'\nimport Services from '#services'\nimport { startWatch, type WatchOptions } from '../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport {\n    bioPageUserIDSelector,\n    bioPageUserNickNameSelector,\n    floatingBioCardSelector,\n    isProfilePageLike,\n} from '../utils/selector.js'\n\nfunction Icon(props: { size: number }) {\n    return (\n        <Icons.MaskBlue\n            size={props.size}\n            style={{\n                verticalAlign: 'text-bottom',\n                marginLeft: 6,\n            }}\n        />\n    )\n}\nfunction _(main: () => LiveSelector<HTMLElement, true>, size: number, options: WatchOptions) {\n    const watcher = new MutationObserverWatcher(main()).useForeach((ele, _, meta) => {\n        let remover = noop\n        const remove = () => remover()\n        const check = () => {\n            ifUsingMask(\n                ProfileIdentifier.of(EnhanceableSite.Twitter, bioPageUserIDSelector(main).evaluate()).unwrapOr(null),\n            ).then(() => {\n                const root = attachReactTreeWithContainer(meta.afterShadow, {\n                    untilVisible: true,\n                    signal: options.signal,\n                })\n                root.render(<Icon size={size} />)\n                remover = root.destroy\n            }, remove)\n        }\n        check()\n        return {\n            onNodeMutation: check,\n            onTargetChanged: check,\n            onRemove: remove,\n        }\n    })\n    startWatch(watcher, options)\n}\n\nexport function injectMaskUserBadgeAtTwitter(signal: AbortSignal) {\n    // profile\n    _(bioPageUserNickNameSelector, 24, { signal, missingReportRule: { name: 'User badge', rule: isProfilePageLike } })\n    // floating bio\n    _(floatingBioCardSelector, 20, { signal })\n}\nexport function injectMaskIconToPostTwitter(post: PostInfo, signal: AbortSignal) {\n    const ls = new LiveSelector([post.rootElement])\n        .map((x) => x.current.querySelector<HTMLDivElement>('[data-testid=User-Name]'))\n        .enableSingleMode()\n    ifUsingMask(post.author.getCurrentValue()).then(add, remove)\n    post.author.subscribe(() => ifUsingMask(post.author.getCurrentValue()).then(add, remove))\n    let remover = noop\n    function add() {\n        if (signal?.aborted) return\n        const node = ls.evaluate()\n        if (!node) return\n        const proxy = DOMProxy({ afterShadowRootInit: Flags.shadowRootInit })\n        proxy.realCurrent = node\n        const root = attachReactTreeWithContainer(proxy.afterShadow, { untilVisible: true, signal })\n        root.render(<Icon size={24} />)\n        remover = root.destroy\n    }\n    function remove() {\n        remover()\n    }\n}\nconst ifUsingMask = memoizePromise(\n    memoize,\n    async (pid: ProfileIdentifier | null) => {\n        if (!pid) throw new Error()\n        const p = await Services.Identity.queryProfilesInformation([pid])\n        if (!p[0].linkedPersona?.rawPublicKey) throw new Error()\n    },\n    (x) => x,\n)\n","import { keccak256 } from 'web3-utils'\nimport { flattenDeep } from 'lodash-es'\nimport { canonifyImgUrl, parseId } from './url.js'\nimport {\n    makeTypedMessageText,\n    makeTypedMessageAnchor,\n    makeTypedMessageEmpty,\n    type TypedMessage,\n    makeTypedMessageImage,\n    type Meta,\n    unstable_STYLE_META,\n    makeTypedMessageTuple,\n    FlattenTypedMessage,\n} from '@masknet/typed-message'\nimport { collectNodeText, collectTwitterEmoji } from '../../../utils/index.js'\n\n/**\n * Get post id from dom, including normal tweet, quoted tweet and retweet one\n */\nexport function getPostId(node: HTMLElement) {\n    let idNode: HTMLAnchorElement | undefined | null = null\n    let timeNode = node.querySelector('a[href*=\"/status/\"] time')\n    if (timeNode) {\n        idNode = timeNode.parentElement as HTMLAnchorElement\n    } else {\n        // Quoted tweet has no `a[href*=\"/status/\"] time` but only `time`\n        timeNode = node.querySelector('time')\n        idNode = timeNode?.closest('[role=link]')?.querySelector<HTMLAnchorElement>('a[href*=\"/status/\"]')\n    }\n    const isRetweet = !!node.querySelector('[data-testid=socialContext]')\n\n    let pid = ''\n    if (idNode) {\n        pid = parseId(idNode.href)\n    } else if (timeNode) {\n        // Quoted tweet in timeline has no a status link to detail page,\n        // so use the timestamp as post id instead\n        pid = `timestamp-keccak256:${keccak256(timeNode.getAttribute('datetime')!)}`\n    } else {\n        pid = `keccak256:${keccak256(node.innerText)}`\n    }\n\n    // You can't retweet a tweet or a retweet, but only cancel retweeting\n    return isRetweet ? `retweet:${pid}` : pid\n}\n\nfunction postNameParser(node: HTMLElement) {\n    const tweetElement = node.querySelector<HTMLElement>('[data-testid=\"tweet\"]') ?? node\n    const name = collectNodeText(tweetElement.querySelector<HTMLElement>('[data-testid^=\"User-Name\"] a div div > span'))\n    // Note: quoted tweet has no [data-testid^=\"User-Name\"]\n    const handle =\n        Array.from(tweetElement.querySelectorAll<HTMLElement>('[tabindex]'))\n            .map((node) => node.innerText || '')\n            .filter((text) => text.startsWith('@'))\n            .at(0) || ''\n\n    // post matched, return the result\n    if (name || handle) {\n        return {\n            name: name || '',\n            handle: handle ? handle.slice(1) : '',\n        }\n    }\n    const quotedTweetName = collectNodeText(\n        tweetElement.querySelector<HTMLElement>(\n            'div[role=\"link\"] div[data-testid=\"UserAvatar-Container-unknown\"] + div > span',\n        ),\n    )\n    const quotedTweetHandle = collectNodeText(\n        tweetElement\n            .querySelector('[data-testid=\"UserAvatar-Container-unknown\"]')\n            ?.parentNode?.parentNode?.parentNode?.parentNode?.firstElementChild?.nextElementSibling?.querySelector(\n                'span',\n            ),\n    )\n\n    // quoted post matched\n    return {\n        name: quotedTweetName || '',\n        handle: quotedTweetHandle ? quotedTweetHandle.slice(1) : '',\n    }\n}\n\nfunction postAvatarParser(node: HTMLElement) {\n    const tweetElement = node.querySelector('[data-testid=\"tweet\"]') ?? node\n    const avatarElement = tweetElement.children[0].querySelector<HTMLImageElement>('img[src*=\"twimg.com\"]')\n    return avatarElement ? avatarElement.src : undefined\n}\n\nfunction resolveType(content: string) {\n    if (content.startsWith('@')) return 'user'\n    if (content.startsWith('#')) return 'hash'\n    if (content.startsWith('$')) return 'cash'\n    return 'normal'\n}\n\nexport function postContentMessageParser(node: HTMLElement): TypedMessage {\n    function make(node: Node): TypedMessage {\n        if (node.nodeType === Node.TEXT_NODE) {\n            if (!node.nodeValue) return makeTypedMessageEmpty()\n            return makeTypedMessageText(node.nodeValue, getElementStyle(node.parentElement))\n        } else if (node instanceof HTMLAnchorElement) {\n            const anchor = node\n            const href = anchor.getAttribute('title') ?? anchor.getAttribute('href')\n            const content = anchor.textContent\n            if (!content) return makeTypedMessageEmpty()\n            const altImage = node.querySelector('img')\n            return makeTypedMessageAnchor(\n                resolveType(content),\n                href ?? '',\n                content,\n                altImage ? makeTypedMessageImage(altImage.src, altImage) : undefined,\n                getElementStyle(node),\n            )\n        } else if (node instanceof HTMLImageElement) {\n            const image = node\n            const src = image.getAttribute('src')\n            const alt = image.getAttribute('alt')\n            const matched = src?.match(/emoji\\/v2\\/svg\\/([\\w-]+)\\.svg/)\n            if (matched) {\n                const points = matched[1].split('-').map((point) => Number.parseInt(point, 16))\n                return makeTypedMessageText(collectTwitterEmoji(points))\n            }\n            if (!alt) return makeTypedMessageEmpty()\n\n            return makeTypedMessageText(alt)\n        } else if (node instanceof HTMLSpanElement) {\n            return makeTypedMessageText(node.textContent ?? '')\n        } else if (node.childNodes.length) {\n            const messages = makeTypedMessageTuple(flattenDeep(Array.from(node.childNodes).map(make)))\n            return FlattenTypedMessage.NoContext(messages)\n        } else return makeTypedMessageEmpty()\n    }\n    const lang = node.parentElement!.querySelector<HTMLDivElement>('[lang]')\n    return lang\n        ? FlattenTypedMessage.NoContext(makeTypedMessageTuple(Array.from(lang.childNodes).flatMap(make)))\n        : makeTypedMessageEmpty()\n}\n\nfunction getElementStyle(element: Element | null): Meta | undefined {\n    if (!element) return undefined\n    const computed = getComputedStyle(element)\n    const style: React.CSSProperties = {}\n    if (computed.fontWeight !== '400') style.fontWeight = computed.fontWeight\n    if (computed.fontStyle !== 'normal') style.fontStyle = computed.fontStyle\n    if (style.fontWeight || style.fontStyle) return new Map([[unstable_STYLE_META, style]])\n    return undefined\n}\n\nexport async function postImagesParser(node: HTMLElement): Promise<string[]> {\n    const isQuotedTweet = !!node.closest('div[role=\"link\"]')\n    const imgNodes = node.querySelectorAll<HTMLImageElement>('img[src*=\"twimg.com/media\"]')\n    if (!imgNodes.length) return []\n    const imgUrls = Array.from(imgNodes)\n        .filter((node) => isQuotedTweet || !node.closest('div[role=\"link\"]'))\n        .flatMap((node) => canonifyImgUrl(node.getAttribute('src') ?? ''))\n        .filter(Boolean)\n    if (!imgUrls.length) return []\n    return imgUrls\n}\n\nexport function postParser(node: HTMLElement) {\n    return {\n        ...postNameParser(node),\n        avatar: postAvatarParser(node),\n\n        pid: getPostId(node),\n\n        messages: postContentMessageParser(node),\n    }\n}\n","import { memoize } from 'lodash-es'\nimport { keccak256 } from 'web3-utils'\nimport { IntervalWatcher } from '@dimensiondev/holoflows-kit'\nimport type { PostInfo } from '@masknet/plugin-infra/content-script'\nimport { PostIdentifier, ProfileIdentifier } from '@masknet/shared-base'\nimport {\n    FlattenTypedMessage,\n    extractTextFromTypedMessage,\n    makeTypedMessageEmpty,\n    makeTypedMessageImage,\n    makeTypedMessagePromise,\n    makeTypedMessageTuple,\n    makeTypedMessageTupleFromList,\n} from '@masknet/typed-message'\nimport type { SiteAdaptorUI } from '@masknet/types'\nimport Services from '#services'\nimport { creator, activatedSiteAdaptor_state } from '../../../site-adaptor-infra/index.js'\nimport { createRefsForCreatePostContext } from '../../../site-adaptor-infra/utils/create-post-context.js'\nimport { parseId } from '../utils/url.js'\nimport { untilElementAvailable } from '../../../utils/untilElementAvailable.js'\nimport { getCurrentIdentifier } from '../../utils.js'\nimport { twitterBase } from '../base.js'\nimport { injectMaskIconToPostTwitter } from '../injection/MaskIcon.js'\nimport { twitterShared } from '../shared.js'\nimport { getPostId, postContentMessageParser, postImagesParser, postParser } from '../utils/fetch.js'\nimport {\n    postsContentSelector,\n    postsImageSelector,\n    timelinePostContentSelector,\n    toastLinkSelector,\n} from '../utils/selector.js'\nimport { IdentityProviderTwitter } from './identity.js'\n\nfunction getPostActionsNode(postNode: HTMLElement | null) {\n    if (!postNode) return null\n    return postNode.closest('[data-testid=\"tweet\"]')?.querySelector<HTMLElement>(\n        // query for the share button button which has a popup menu\n        '[role=\"group\"]:last-child > div:has([aria-haspopup=\"menu\"]):last-child',\n    )\n}\n\nconst getParentTweetNode = (node: HTMLElement) => {\n    return node.closest<HTMLElement>('[data-testid=\"tweet\"]')\n}\n\nfunction isQuotedTweet(tweetNode: HTMLElement | null) {\n    return tweetNode?.getAttribute('role') === 'link'\n}\n\nfunction isDetailTweet(tweetNode: HTMLElement) {\n    // We can see the retweets status in detail tweet.\n    const isDetail = !!tweetNode.querySelector('a[role=\"link\"][href$=retweets],a[role=\"link\"][href$=likes]')\n    return isDetail\n}\n\nfunction getTweetNode(node: HTMLElement) {\n    // retweet(quoted tweet) in new twitter\n    const root = node.closest<HTMLDivElement>('div[role=\"link\"]')\n    // then normal tweet\n    return root || node.closest<HTMLDivElement>('article > div')\n}\nfunction shouldSkipDecrypt(node: HTMLElement, tweetNode: HTMLElement) {\n    const isCardNode = node.matches('[data-testid=\"card.wrapper\"]')\n    const hasTextNode = !!tweetNode.querySelector(\n        [\n            '[data-testid=\"tweet\"] div[lang]',\n            '[data-testid=\"tweet\"] + div div[lang]', // detailed\n        ].join(','),\n    )\n\n    // if a text node already exists, it's not going to decrypt the card node\n    return isCardNode && hasTextNode\n}\nfunction registerPostCollectorInner(\n    postStore: SiteAdaptorUI.CollectingCapabilities.PostsProvider['posts'],\n    cancel: AbortSignal,\n) {\n    const updateProfileInfo = memoize(\n        (info: PostInfo) => {\n            const currentProfile = getCurrentIdentifier()\n            const profileIdentifier = info.author.getCurrentValue()\n            if (!profileIdentifier) return\n            Services.Identity.updateProfileInfo(profileIdentifier, {\n                nickname: info.nickname.getCurrentValue(),\n                avatarURL: info.avatarURL.getCurrentValue()?.toString(),\n            })\n            if (currentProfile?.linkedPersona) {\n                Services.Identity.createNewRelation(profileIdentifier, currentProfile.linkedPersona)\n            }\n        },\n        (info: PostInfo) => info.author.getCurrentValue(),\n    )\n    new IntervalWatcher(postsContentSelector())\n        .useForeach((node, _, proxy) => {\n            const tweetNode = getTweetNode(node)\n            if (!tweetNode || shouldSkipDecrypt(node, tweetNode)) return\n            const refs = createRefsForCreatePostContext()\n            const info = twitterShared.utils.createPostContext({\n                comments: undefined,\n                rootElement: proxy,\n                isFocusing: isDetailTweet(tweetNode),\n                suggestedInjectionPoint: tweetNode,\n                ...refs.subscriptions,\n            })\n            function run() {\n                collectPostInfo(tweetNode, refs, cancel)\n                collectLinks(tweetNode, refs, cancel)\n            }\n            run()\n            cancel.addEventListener(\n                'abort',\n                info.hasMaskPayload.subscribe(() => {\n                    const payload = info.hasMaskPayload.getCurrentValue()\n                    if (!payload && refs.postMetadataImages.size === 0) return\n                    updateProfileInfo(info)\n                }),\n            )\n            injectMaskIconToPostTwitter(info, cancel)\n            postStore.set(proxy, info)\n            return {\n                onTargetChanged: run,\n                onRemove: () => {\n                    postStore.delete(proxy)\n                },\n                onNodeMutation: run,\n            }\n        })\n        .assignKeys((node) => {\n            const tweetNode = getTweetNode(node)\n            const parentTweetNode = isQuotedTweet(tweetNode) ? getParentTweetNode(tweetNode!) : null\n            if (!tweetNode || shouldSkipDecrypt(node, tweetNode)) {\n                return `keccak256:${keccak256(node.innerText)}`\n            }\n            const parentTweetId = parentTweetNode ? getPostId(parentTweetNode) : ''\n            const tweetId = getPostId(tweetNode)\n            // To distinguish tweet nodes between timeline and detail page\n            const isDetailPage = isDetailTweet(tweetNode)\n            return `${isDetailPage ? 'detail' : 'normal'}/${parentTweetId}/${tweetId}`\n        })\n        .startWatch(250, cancel)\n}\n\nexport const PostProviderTwitter: SiteAdaptorUI.CollectingCapabilities.PostsProvider = {\n    posts: creator.EmptyPostProviderState(),\n    start(cancel) {\n        registerPostCollectorInner(this.posts, cancel)\n    },\n}\n\nexport function getPostIdFromNewPostToast() {\n    const toastLinkNode = toastLinkSelector().evaluate()\n    return toastLinkNode?.href ? parseId(toastLinkNode?.href) : ''\n}\n\nexport function collectVerificationPost(keyword: string) {\n    const userId =\n        IdentityProviderTwitter.recognized.value.identifier || activatedSiteAdaptor_state!.profiles.value[0].identifier\n    const postNodes = timelinePostContentSelector().evaluate()\n\n    for (const postNode of postNodes) {\n        const tweetNode = postNode.closest<HTMLElement>('[data-testid=tweet]')\n        if (!tweetNode) continue\n        const postId = getPostId(tweetNode)\n        const postContent = postContentMessageParser(postNode)\n        const content = extractTextFromTypedMessage(postContent)\n        const isVerified =\n            postId &&\n            content.isSome() &&\n            content.value.toLowerCase().replaceAll(/\\r\\n|\\n|\\r/gm, '') ===\n                keyword.toLowerCase().replaceAll(/\\r\\n|\\n|\\r/gm, '')\n\n        if (isVerified && userId) {\n            return new PostIdentifier(userId, postId)\n        }\n    }\n\n    return null\n}\n\nfunction collectPostInfo(\n    tweetNode: HTMLDivElement | null,\n    info: ReturnType<typeof createRefsForCreatePostContext>,\n    cancel: AbortSignal,\n) {\n    if (!tweetNode) return\n    if (cancel?.aborted) return\n    const { pid, messages, handle, name, avatar } = postParser(tweetNode)\n\n    if (!pid) return\n    const postBy = ProfileIdentifier.of(twitterBase.networkIdentifier, handle).unwrapOr(null)\n    info.postID.value = pid\n    info.postBy.value = postBy\n    info.nickname.value = name\n    info.avatarURL.value = avatar || null\n\n    // decode steganographic image\n    // don't add await on this\n    const images = untilElementAvailable(postsImageSelector(tweetNode), 10000)\n        .then(() => postImagesParser(tweetNode))\n        .then((urls) => {\n            for (const url of urls) info.postMetadataImages.add(url)\n            if (urls.length) return makeTypedMessageTupleFromList(...urls.map((x) => makeTypedMessageImage(x)))\n            return makeTypedMessageEmpty()\n        })\n        .catch(() => makeTypedMessageEmpty())\n\n    info.postMessage.value = FlattenTypedMessage.NoContext(\n        makeTypedMessageTuple([messages, makeTypedMessagePromise(images)]),\n    )\n}\n\nfunction collectLinks(\n    tweetNode: HTMLDivElement | null,\n    info: ReturnType<typeof createRefsForCreatePostContext>,\n    cancel: AbortSignal,\n) {\n    if (!tweetNode) return\n    if (cancel?.aborted) return\n    const links = [...tweetNode.querySelectorAll('a')].filter((x) => x.rel)\n    const seen = new Set<string>(['https://help.twitter.com/using-twitter/how-to-tweet#source-labels'])\n    for (const x of links) {\n        if (seen.has(x.href)) continue\n        seen.add(x.href)\n        info.postMetadataMentionedLinks.set(x, x.href)\n        Services.Helper.resolveTCOLink(x.href)\n            .then((val) => {\n                if (cancel?.aborted) return\n                if (!val) return\n                info.postMetadataMentionedLinks.set(x, val)\n            })\n            .catch(() => {})\n    }\n}\n","import { useMemo } from 'react'\nimport { produce, setAutoFreeze } from 'immer'\nimport { type Theme, unstable_createMuiStrictModeTheme } from '@mui/material'\nimport { fromRGB, shade, toRGB } from '@masknet/plugin-infra/content-script'\nimport { isMobileTwitter } from '../utils/isMobile.js'\nimport { useThemeSettings } from '../../../components/DataSource/useActivatedUI.js'\n\nexport function useThemeTwitterVariant(baseTheme: Theme) {\n    const themeSettings = useThemeSettings()\n\n    return useMemo(() => {\n        const primaryColorRGB = fromRGB(themeSettings.color)!\n        const primaryContrastColorRGB = fromRGB('rgb(255, 255, 255)')\n        setAutoFreeze(false)\n\n        const TwitterTheme = produce(baseTheme, (theme) => {\n            if (themeSettings.isDim) {\n                theme.palette.maskColor.bottom = '#15202B'\n                theme.palette.maskColor.secondaryBottom = 'rgba(21, 32, 43, 0.8)'\n            }\n\n            theme.palette.primary = {\n                light: toRGB(shade(primaryColorRGB, 10)),\n                main: toRGB(primaryColorRGB),\n                dark: toRGB(shade(primaryColorRGB, -10)),\n                contrastText: toRGB(primaryContrastColorRGB),\n            }\n            theme.shape.borderRadius = isMobileTwitter ? 0 : 15\n            theme.breakpoints.values = { xs: 0, sm: 687, md: 1024, lg: 1280, xl: 1920 }\n            theme.components = theme.components || {}\n\n            theme.components.MuiTypography = {\n                styleOverrides: {\n                    root: {\n                        fontFamily:\n                            'TwitterChirp, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif',\n                    },\n                },\n            }\n            theme.components.MuiPaper = {\n                defaultProps: {\n                    elevation: 0,\n                },\n                styleOverrides: {\n                    root: {\n                        background: theme.palette.maskColor.bottom,\n                    },\n                },\n            }\n            theme.components.MuiTab = {\n                styleOverrides: {\n                    root: {\n                        textTransform: 'none',\n                    },\n                },\n            }\n            theme.components.MuiBackdrop = {\n                styleOverrides: {\n                    root: {\n                        backgroundColor: theme.palette.action.mask,\n                    },\n                    invisible: {\n                        opacity: '0 !important',\n                    },\n                },\n            }\n        })\n        setAutoFreeze(true)\n        return unstable_createMuiStrictModeTheme(TwitterTheme)\n    }, [baseTheme, themeSettings])\n}\n","import { FontSize } from '@masknet/web3-shared-base'\n\nexport interface ButtonProps {\n    buttonSize: number\n    iconSize: number\n    fontSize: number\n    lineHeight: string\n    marginBottom: number\n}\n\nexport const ButtonStyle: Record<FontSize, ButtonProps> = {\n    [FontSize.X_Small]: { buttonSize: 32, iconSize: 18, fontSize: 14, lineHeight: '18px', marginBottom: 11 },\n    [FontSize.Small]: { buttonSize: 34, iconSize: 19, fontSize: 14, lineHeight: '19px', marginBottom: 11 },\n    [FontSize.Normal]: { buttonSize: 36, iconSize: 20, fontSize: 15, lineHeight: '20px', marginBottom: 12 },\n    [FontSize.Large]: { buttonSize: 40, iconSize: 22, fontSize: 17, lineHeight: '22px', marginBottom: 13 },\n    [FontSize.X_Large]: { buttonSize: 43, iconSize: 24, fontSize: 18, lineHeight: '24px', marginBottom: 14 },\n}\n\ninterface TipButtonProps {\n    buttonSize: number\n    iconSize: number\n}\n\nexport const TipButtonStyle: Record<FontSize, TipButtonProps> = {\n    [FontSize.X_Small]: { buttonSize: 29, iconSize: 18 },\n    [FontSize.Small]: { buttonSize: 30, iconSize: 19 },\n    [FontSize.Normal]: { buttonSize: 32, iconSize: 20 },\n    [FontSize.Large]: { buttonSize: 35, iconSize: 22 },\n    [FontSize.X_Large]: { buttonSize: 38, iconSize: 24 },\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { styled, ListItemButton, Typography, ListItemIcon, Box, useMediaQuery } from '@mui/material'\nimport { ToolboxHintUnstyled } from '../../../components/InjectedComponents/ToolboxUnstyled.js'\nimport { useSideBarNativeItemStyleVariants } from './ToolboxHint.js'\nimport GuideStep from '../../../components/GuideStep/index.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { useThemeSettings } from '../../../components/DataSource/useActivatedUI.js'\nimport { searchHomeLinkName } from '../utils/selector.js'\nimport { ButtonStyle } from '../constant.js'\n\nconst HORIZONTAL_BREAKPOINT = 1265\nconst VERTICAL_BREAKPOINT = 855\n\nconst Container = styled('div')`\n    cursor: pointer;\n    padding: 4px 0;\n    @media screen and (max-height: ${VERTICAL_BREAKPOINT}px) {\n        padding: 0;\n    }\n`\nconst ListItem = styled(ListItemButton)`\n    border-radius: 9999px;\n    display: inline-flex;\n    &:hover {\n        background: rgba(15, 20, 25, 0.1);\n        ${({ theme }) => (theme.palette.mode === 'dark' ? 'background: rgba(217, 217, 217, 0.1);' : '')}\n    }\n    /* twitter break point */\n    @media screen and (max-width: ${HORIZONTAL_BREAKPOINT}px) {\n        height: 50px;\n    }\n`\nconst Text = styled(Typography)`\n    margin-right: 16px;\n    font-family: inherit;\n    font-weight: 400;\n    white-space: nowrap;\n    color: ${({ theme }) => (theme.palette.mode === 'light' ? 'rgb(15, 20, 25)' : 'rgb(216, 216, 216)')};\n`\nconst Icon = styled(ListItemIcon)`\n    color: ${({ theme }) => (theme.palette.mode === 'light' ? 'rgb(15, 20, 25)' : 'rgb(216, 216, 216)')};\n    min-width: 0;\n`\n\nexport function ToolboxHintAtTwitter(props: { category: 'wallet' | 'application' }) {\n    const { textMarginLeft, itemPadding, iconSize } = useSideBarNativeItemStyleVariants()\n    const themeSettings = useThemeSettings()\n    const buttonStyle = ButtonStyle[themeSettings.size]\n    const Typography = useMemo(() => {\n        return ({ children }: React.PropsWithChildren<{}>) => (\n            <Text fontSize={buttonStyle.iconSize} marginLeft={textMarginLeft ?? '20px'}>\n                {children}\n            </Text>\n        )\n    }, [buttonStyle.iconSize, textMarginLeft])\n    const _mini = useMediaQuery(`(max-width: ${HORIZONTAL_BREAKPOINT}px)`)\n    const [mini, setMini] = useState(_mini)\n\n    useEffect(() => {\n        const searchHomeLinkNameNode = searchHomeLinkName().evaluate()\n\n        if (!searchHomeLinkNameNode) return\n\n        const observer = new MutationObserver((mutations) => {\n            setMini(!searchHomeLinkName().querySelector('span').evaluate())\n        })\n\n        observer.observe(searchHomeLinkNameNode, {\n            subtree: true,\n            childList: true,\n        })\n\n        return () => observer.disconnect()\n    }, [])\n\n    const ListItemButton = useMemo(() => {\n        return (\n            props: React.PropsWithChildren<{\n                onClick?: React.MouseEventHandler<HTMLDivElement>\n            }>,\n        ) => (\n            <ListItem style={{ padding: `6px ${itemPadding ?? '11px'}` }} onClick={props.onClick}>\n                {props.children}\n            </ListItem>\n        )\n    }, [itemPadding])\n    return (\n        <ToolboxHintUnstyled\n            iconSize={Number(iconSize.replace('px', '')) - 1}\n            mini={mini}\n            ListItemIcon={Icon}\n            Typography={Typography}\n            ListItemButton={ListItemButton}\n            Container={Container}\n            category={props.category}\n        />\n    )\n}\n\nexport function ProfileLinkAtTwitter() {\n    const t = useMaskSharedTrans()\n\n    return (\n        <>\n            <GuideStep step={3} total={4} tip={t.user_guide_tip_3()}>\n                <Box sx={{ position: 'absolute', left: 0, right: 0, width: '100%', height: '100%' }} />\n            </GuideStep>\n        </>\n    )\n}\n","import { ValueRef } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { RootWeb3ContextProvider } from '@masknet/web3-hooks-base'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { querySelector, sideBarProfileSelector } from '../utils/selector.js'\nimport { ProfileLinkAtTwitter, ToolboxHintAtTwitter } from './ToolboxHint_UI.js'\n\nconst SideBarNativeItemTextMarginLeftRef = new ValueRef('20px')\nconst SideBarNativeItemIconSize = new ValueRef('24px')\nconst SideBarNativeItemPaddingRef = new ValueRef('11px')\n\nfunction toolboxInSidebarSelector() {\n    // Organization account don't have a [data-testid=AppTabBar_More_Menu] in page. see MF-3866\n    return querySelector<HTMLElement>('[role=\"banner\"] nav[role=\"navigation\"] > div[data-testid=AppTabBar_More_Menu]')\n}\n\nexport function injectToolboxHintAtTwitter(signal: AbortSignal, category: 'wallet' | 'application') {\n    const watcher = new MutationObserverWatcher(toolboxInSidebarSelector())\n        .addListener('onAdd', updateStyle)\n        .addListener('onChange', updateStyle)\n\n    startWatch(watcher, {\n        signal,\n        missingReportRule: {\n            name: 'Sidebar toolbox',\n            rule() {\n                // return false where the page should not match. maybe on mobile size?\n                return true\n            },\n        },\n    })\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { signal }).render(\n        <RootWeb3ContextProvider>\n            <ToolboxHintAtTwitter category={category} />\n        </RootWeb3ContextProvider>,\n    )\n    injectProfile(signal)\n}\n\nfunction updateStyle() {\n    const SideBarNativeItem = document.querySelector('[role=\"banner\"] [role=\"navigation\"] > div > div')\n    const SideBarNativeItemText = document.querySelector(\n        '[role=\"banner\"] [role=\"navigation\"] > div > div > div[dir=\"auto\"]',\n    )\n    const SideBarNativeItemIcon = document.querySelector(\n        '[role=\"banner\"] [role=\"navigation\"] > div > div > div:first-child',\n    )\n    const SideBarNativeItemStyle = SideBarNativeItem ? window.getComputedStyle(SideBarNativeItem) : null\n    const SideBarNativeItemTextStyle = SideBarNativeItemText ? window.getComputedStyle(SideBarNativeItemText) : null\n    const SideBarNativeItemIconStyle = SideBarNativeItemIcon ? window.getComputedStyle(SideBarNativeItemIcon) : null\n    SideBarNativeItemPaddingRef.value = SideBarNativeItemStyle?.padding ?? '11px'\n    SideBarNativeItemIconSize.value = SideBarNativeItemIconStyle?.width ?? '24px'\n    SideBarNativeItemTextMarginLeftRef.value = SideBarNativeItemTextStyle?.marginLeft ?? '20px'\n}\nexport function useSideBarNativeItemStyleVariants() {\n    return {\n        textMarginLeft: useValueRef(SideBarNativeItemTextMarginLeftRef),\n        itemPadding: useValueRef(SideBarNativeItemPaddingRef),\n        iconSize: useValueRef(SideBarNativeItemIconSize),\n    }\n}\n\nfunction injectProfile(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(sideBarProfileSelector())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.beforeShadow, { signal }).render(<ProfileLinkAtTwitter />)\n}\n","// This file is auto generated. DO NOT EDIT\n// Run `npx gulp sync-languages` to regenerate.\n// Default fallback language in a family of languages are chosen by the alphabet order\n// To overwrite this, please overwrite packages/scripts/src/locale-kit-next/index.ts\nimport en_US from './en-US.json'\nimport ja_JP from './ja-JP.json'\nimport ko_KR from './ko-KR.json'\nimport qya_AA from './qya-AA.json'\nimport zh_CN from './zh-CN.json'\nimport zh_TW from './zh-TW.json'\nexport const languages = {\n    en: en_US,\n    ja: ja_JP,\n    ko: ko_KR,\n    qy: qya_AA,\n    'zh-CN': zh_CN,\n    zh: zh_TW,\n}\nimport { createI18NBundle } from '@masknet/shared-base'\nexport const addDO_NOT_USEI18N = createI18NBundle('DO_NOT_USE', languages)\n// @ts-ignore\nif (import.meta.webpackHot) {\n    // @ts-ignore\n    import.meta.webpackHot.accept(\n        ['./en-US.json', './ja-JP.json', './ko-KR.json', './qya-AA.json', './zh-CN.json', './zh-TW.json'],\n        () =>\n            globalThis.dispatchEvent?.(\n                new CustomEvent('MASK_I18N_HMR', {\n                    detail: ['DO_NOT_USE', { en: en_US, ja: ja_JP, ko: ko_KR, qy: qya_AA, 'zh-CN': zh_CN, zh: zh_TW }],\n                }),\n            ),\n    )\n}\n","import type { SiteAdaptorUI } from '@masknet/types'\nimport { languages } from '../locales/languages.js'\n\nexport const i18NOverwriteTwitter: SiteAdaptorUI.Customization.I18NOverwrite = {\n    mask: {},\n}\nconst resource = languages\nfor (const language of Object.keys(resource) as Array<keyof typeof resource>) {\n    for (const key of Object.keys(resource[language]) as Array<keyof (typeof resource)[typeof language]>) {\n        i18NOverwriteTwitter.mask[key] ??= {}\n        i18NOverwriteTwitter.mask[key][language] = resource[language][key]\n    }\n}\n","import { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { SearchResultInspector } from '../../../components/InjectedComponents/SearchResultInspector.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport { searchResultHeadingSelector } from '../utils/selector.js'\n\nexport function injectSearchResultInspectorAtTwitter(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(searchResultHeadingSelector())\n    startWatch(watcher, {\n        signal,\n        missingReportRule: {\n            name: 'SearchResultInspector',\n            rule: 'https://twitter.com/search?q=',\n        },\n    })\n    attachReactTreeWithContainer(watcher.firstDOMProxy.beforeShadow, { signal }).render(<SearchResultInspector />)\n}\n","import Color from 'color'\nimport { useEffect, useState, useRef } from 'react'\nimport { useAsync, useWindowSize } from 'react-use'\nimport { useCollectionByTwitterHandler } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { untilElementAvailable } from '../../../utils/index.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root.js'\nimport type { NonFungibleCollectionResult, FungibleTokenResult } from '@masknet/web3-shared-base'\nimport { useSnapshotSpacesByTwitterHandler } from '@masknet/web3-hooks-base'\nimport { ProfileTabs, PluginID, MaskMessages, BooleanPreference } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport {\n    searchAppBarBackSelector,\n    searchNewTweetButtonSelector,\n    searchProfileEmptySelector,\n    searchProfileTabListLastChildSelector,\n    searchProfileTabListSelector,\n    searchProfileTabPageSelector,\n    searchProfileTabSelector,\n    searchProfileTabLoseConnectionPageSelector,\n    searchNameTag,\n    isProfilePageLike,\n    nextTabListSelector,\n} from '../utils/selector.js'\nimport { useCurrentVisitingIdentity } from '../../../components/DataSource/useActivatedUI.js'\nimport Services from '#services'\nimport { ProfileTab } from '../../../components/InjectedComponents/ProfileTab.js'\nimport { startWatch } from '../../../utils/startWatch.js'\n\nfunction getStyleProps() {\n    const EMPTY_STYLE = {} as CSSStyleDeclaration\n    const eleTab = searchProfileTabSelector().evaluate()?.querySelector('div > div')\n    const style = eleTab ? window.getComputedStyle(eleTab) : EMPTY_STYLE\n    const paddingEle = searchProfileTabSelector().evaluate()\n    const paddingCss = paddingEle ? window.getComputedStyle(paddingEle) : EMPTY_STYLE\n    const eleNewTweetButton = searchNewTweetButtonSelector().evaluate()\n    const newTweetButtonColorStyle = eleNewTweetButton ? window.getComputedStyle(eleNewTweetButton) : EMPTY_STYLE\n    const eleBackButton = searchAppBarBackSelector().evaluate()\n    const backButtonColorStyle = eleBackButton ? window.getComputedStyle(eleBackButton) : EMPTY_STYLE\n\n    return {\n        color: style.color,\n        font: style.font,\n        fontSize: style.fontSize,\n        padding: style.paddingBottom,\n        paddingX: paddingCss.paddingLeft || '16px',\n        height: style.height || '53px',\n        hover: backButtonColorStyle.color,\n        line: newTweetButtonColorStyle.backgroundColor,\n    }\n}\n\nconst useStyles = makeStyles<{ minWidth?: number }>()((theme, { minWidth }) => {\n    const props = getStyleProps()\n    return {\n        root: {\n            '&:hover': {\n                backgroundColor: new Color(props.hover).alpha(0.1).toString(),\n                cursor: 'pointer',\n            },\n            height: props.height,\n            display: 'inline-block',\n        },\n        button: {\n            zIndex: 1,\n            position: 'relative',\n            display: 'flex',\n            minWidth: minWidth ?? 56,\n            justifyContent: 'center',\n            alignItems: 'center',\n            textAlign: 'center',\n            paddingLeft: props.paddingX,\n            paddingRight: props.paddingX,\n            color: props.color,\n            font: props.font,\n            fontSize: props.fontSize,\n            fontWeight: 500,\n            '&:hover': {\n                color: props.color,\n            },\n            height: props.height,\n        },\n        selected: {\n            color: `${props.hover} !important`,\n            fontWeight: 700,\n        },\n        line: {\n            borderRadius: 9999,\n            position: 'absolute',\n            bottom: 0,\n            minWidth: 56,\n            alignSelf: 'center',\n            height: 4,\n            backgroundColor: props.line,\n        },\n        bar: {\n            display: 'flex',\n            zIndex: 0,\n            position: 'relative',\n            minWidth: 56,\n        },\n    }\n})\n\nfunction nameTagClickHandler() {\n    MaskMessages.events.profileTabUpdated.sendToLocal({ show: false })\n    MaskMessages.events.profileTabActive.sendToLocal({ active: false })\n    const nameTag = searchNameTag().evaluate()\n    if (nameTag) nameTag.style.display = ''\n\n    const eleEmpty = searchProfileEmptySelector().evaluate()\n    if (eleEmpty) eleEmpty.style.display = 'none'\n\n    const elePage = searchProfileTabPageSelector().evaluate()\n    if (elePage) {\n        elePage.style.visibility = 'hidden'\n        elePage.style.height = 'auto'\n    }\n}\n\nfunction tabClickHandler() {\n    MaskMessages.events.profileTabUpdated.sendToLocal({ show: false })\n    MaskMessages.events.profileTabActive.sendToLocal({ active: false })\n\n    resetTwitterActivatedContent()\n}\n\nasync function hideTwitterActivatedContent() {\n    const eleTab = searchProfileTabSelector().evaluate()?.querySelector('div > div')\n    const loseConnectionEle = searchProfileTabLoseConnectionPageSelector().evaluate()\n    if (!eleTab) return\n    const style = window.getComputedStyle(eleTab)\n    // hide the activated indicator\n    const tabList = searchProfileTabListSelector().evaluate()\n    tabList.map((v) => {\n        const _v = v.querySelector<HTMLDivElement>('div > div')\n        if (_v) _v.style.color = style.color\n\n        const line = v.querySelector<HTMLDivElement>('div > div > div')\n        if (line) line.style.display = 'none'\n        v.addEventListener('click', v.closest('#open-nft-button') ? nameTagClickHandler : tabClickHandler)\n    })\n\n    if (loseConnectionEle) return\n\n    // hide the empty list indicator on the page\n    const eleEmpty = searchProfileEmptySelector().evaluate()\n    if (eleEmpty) eleEmpty.style.display = 'none'\n\n    const nameTag = searchNameTag().evaluate()\n    if (nameTag) nameTag.style.display = 'none'\n\n    // hide the content page\n    await untilElementAvailable(searchProfileTabPageSelector())\n\n    const elePage = searchProfileTabPageSelector().evaluate()\n    if (elePage) {\n        elePage.style.visibility = 'hidden'\n        elePage.style.height = 'auto'\n    }\n}\n\nfunction resetTwitterActivatedContent() {\n    const eleTab = searchProfileTabSelector().evaluate()?.querySelector('div > div')\n    const loseConnectionEle = searchProfileTabLoseConnectionPageSelector().evaluate()\n    if (!eleTab) return\n\n    const tabList = searchProfileTabListSelector().evaluate()\n    tabList.map((v) => {\n        const _v = v.querySelector<HTMLDivElement>('div > div')\n        if (_v) _v.style.color = ''\n        const line = v.querySelector<HTMLDivElement>('div > div > div')\n        if (line) line.style.display = ''\n        v.removeEventListener('click', v.closest('#open-nft-button') ? nameTagClickHandler : tabClickHandler)\n    })\n\n    if (loseConnectionEle) return\n\n    const eleEmpty = searchProfileEmptySelector().evaluate()\n    if (eleEmpty) eleEmpty.style.display = ''\n\n    const elePage = searchProfileTabPageSelector().evaluate()\n    if (elePage) {\n        elePage.style.visibility = 'visible'\n        elePage.style.height = 'auto'\n    }\n}\n\nfunction ProfileTabForTokenAndPersona() {\n    const [hidden, setHidden] = useState(false)\n    const currentVisitingSocialIdentity = useCurrentVisitingIdentity()\n    const currentVisitingUserId = currentVisitingSocialIdentity?.identifier?.userId\n    const { value: collectionList, loading } = useCollectionByTwitterHandler(currentVisitingUserId)\n    const collectionResult = collectionList?.[0]\n    const twitterHandler =\n        (collectionResult as NonFungibleCollectionResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>)?.collection\n            ?.socialLinks?.twitter ||\n        (collectionResult as FungibleTokenResult<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>)?.socialLinks?.twitter\n    const { classes } = useStyles({\n        minWidth:\n            currentVisitingUserId && twitterHandler?.toLowerCase().endsWith(currentVisitingUserId.toLowerCase())\n                ? 0\n                : 56,\n    })\n    useEffect(() => {\n        return MaskMessages.events.profileTabHidden.on((data) => {\n            setHidden(data.hidden)\n        })\n    }, [])\n\n    return hidden || loading ? null : (\n        <ProfileTab\n            title={\n                currentVisitingUserId && twitterHandler?.toLowerCase().endsWith(currentVisitingUserId.toLowerCase())\n                    ? 'More'\n                    : 'Web3'\n            }\n            type={ProfileTabs.WEB3}\n            classes={{\n                root: classes.root,\n                button: classes.button,\n                selected: classes.selected,\n            }}\n            reset={resetTwitterActivatedContent}\n            clear={hideTwitterActivatedContent}\n            children={<div className={classes.line} />}\n        />\n    )\n}\n\nfunction ProfileTabForDAO() {\n    const currentVisitingSocialIdentity = useCurrentVisitingIdentity()\n    const currentVisitingUserId = currentVisitingSocialIdentity?.identifier?.userId ?? ''\n    const { value: spaceList, loading } = useSnapshotSpacesByTwitterHandler(currentVisitingUserId)\n\n    const { value: snapshotDisabled } = useAsync(() => {\n        return Services.Settings.getPluginMinimalModeEnabled(PluginID.Snapshot)\n    }, [])\n\n    const [hidden, setHidden] = useState(snapshotDisabled === BooleanPreference.True)\n    const { classes } = useStyles({ minWidth: hidden ? 56 : 0 })\n    useEffect(() => {\n        return MaskMessages.events.profileTabHidden.on((data) => {\n            setHidden(data.hidden)\n        })\n    }, [])\n\n    return hidden || loading || !spaceList?.length ? null : (\n        <ProfileTab\n            title=\"DAO\"\n            type={ProfileTabs.DAO}\n            classes={{\n                root: classes.root,\n                button: classes.button,\n                selected: classes.selected,\n            }}\n            reset={resetTwitterActivatedContent}\n            clear={hideTwitterActivatedContent}\n            children={<div className={classes.line} />}\n        />\n    )\n}\n\nexport function injectProfileTabAtTwitter(signal: AbortSignal) {\n    let tabInjected = false\n    const contentWatcher = new MutationObserverWatcher(searchProfileTabPageSelector()).useForeach(() => {\n        const elePage = searchProfileTabPageSelector().evaluate()\n        if (elePage && !tabInjected) {\n            const watcher = new MutationObserverWatcher(searchProfileTabListLastChildSelector())\n            startWatch(watcher, {\n                signal,\n                missingReportRule: {\n                    name: 'Last tab in the profile page',\n                    rule: isProfilePageLike,\n                },\n                shadowRootDelegatesFocus: false,\n            })\n            attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { signal }).render(<InjectProfileTab />)\n            tabInjected = true\n        }\n    })\n\n    startWatch(contentWatcher, {\n        signal,\n        missingReportRule: { name: 'ProfileTab', rule: isProfilePageLike },\n        shadowRootDelegatesFocus: false,\n    })\n}\n\nfunction showNextArrow() {\n    const next = nextTabListSelector().evaluate()\n    if (!next) return\n\n    next.style.setProperty('pointer-events', 'auto', 'important')\n    next.style.opacity = '1'\n\n    const first = next.firstElementChild as HTMLDivElement\n    if (!first) return\n    first.style.backgroundColor = 'rgba(39, 44, 48, 0.75)'\n    first.style.opacity = '1'\n    const svg = next.querySelector('svg')\n    if (!svg) return\n    svg.style.color = 'rgb(255, 255, 255)'\n}\n\nfunction hiddenNextArrow() {\n    const next = nextTabListSelector().evaluate()\n    if (!next) return\n    next.style.removeProperty('opacity')\n    next.style.removeProperty('pointer-events')\n\n    const first = next.firstElementChild as HTMLDivElement\n    if (!first) return\n    first.style.backgroundColor = 'rgba(15, 20, 25, 0.75)'\n    first.style.removeProperty('opacity')\n    const svg = next.querySelector('svg')\n    if (!svg) return\n    svg.style.removeProperty('color')\n}\n\nfunction InjectProfileTab() {\n    const web3TabRef = useRef<HTMLDivElement>(null)\n    const { classes } = useStyles({ minWidth: 56 })\n    const windowSize = useWindowSize()\n    const timeoutRef = useRef<any>()\n    const [isClick, setIsClick] = useState(false)\n\n    function onMouseEnter() {\n        if (isClick) return\n        if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current)\n            timeoutRef.current = null\n        }\n        const parent = searchProfileTabListLastChildSelector().closest<HTMLElement>(1).evaluate()\n        if (!parent || !web3TabRef.current) return\n        if (Math.abs(parent.scrollWidth - (parent.scrollLeft + parent.clientWidth)) < 10) return\n        if (parent.clientWidth < parent.scrollWidth) {\n            showNextArrow()\n        }\n    }\n\n    function onNextClick() {\n        const nextArrow = nextTabListSelector().evaluate()\n        if (!nextArrow) return\n        nextArrow.style.removeProperty('cursor')\n        setIsClick(true)\n        hiddenNextArrow()\n        if (timeoutRef.current) clearTimeout(timeoutRef.current)\n        timeoutRef.current = null\n    }\n\n    function onMouseLeave() {\n        if (!timeoutRef.current) timeoutRef.current = setTimeout(hiddenNextArrow, 500)\n        setIsClick(false)\n    }\n\n    function onEnterNextArrow() {\n        if (isClick) return\n        const nextArrow = nextTabListSelector().evaluate()\n        if (!nextArrow) return\n        nextArrow.style.cursor = 'pointer'\n        if (timeoutRef.current) clearTimeout(timeoutRef.current)\n        timeoutRef.current = null\n\n        showNextArrow()\n    }\n\n    function onLeaveNextArrow() {\n        const nextArrow = nextTabListSelector().evaluate()\n        if (!nextArrow) return\n        nextArrow.style.removeProperty('cursor')\n        onMouseLeave()\n    }\n\n    const tabList = searchProfileTabListSelector().evaluate()\n    const nextArrow = nextTabListSelector().evaluate()\n    useEffect(() => {\n        web3TabRef.current?.addEventListener('mouseenter', onMouseEnter)\n        web3TabRef.current?.addEventListener('mouseleave', onMouseLeave)\n        nextArrow?.addEventListener('click', onNextClick)\n        nextArrow?.addEventListener('mouseenter', onEnterNextArrow)\n        nextArrow?.addEventListener('mouseleave', onLeaveNextArrow)\n        tabList.map((v) => {\n            v.closest('div')?.addEventListener('mouseenter', onMouseEnter)\n            v.closest('div')?.addEventListener('mouseleave', onMouseLeave)\n        })\n        return () => {\n            web3TabRef.current?.removeEventListener('mouseenter', onMouseEnter)\n            web3TabRef.current?.removeEventListener('mouseleave', onMouseLeave)\n            nextArrow?.removeEventListener('click', onNextClick)\n            nextArrow?.removeEventListener('mouseenter', onEnterNextArrow)\n            nextArrow?.removeEventListener('mouseleave', onLeaveNextArrow)\n            tabList.map((v) => {\n                v.closest('div')?.removeEventListener('mouseenter', onMouseEnter)\n                v.closest('div')?.removeEventListener('mouseleave', onMouseLeave)\n            })\n        }\n    }, [windowSize, tabList, web3TabRef.current, nextArrow])\n\n    return (\n        <div ref={web3TabRef} className={classes.bar}>\n            <ProfileTabForTokenAndPersona />\n            <ProfileTabForDAO />\n        </div>\n    )\n}\n","import { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { MaskMessages } from '@masknet/shared-base'\nimport { getMaskColor, makeStyles } from '@masknet/theme'\nimport { memo } from 'react'\nimport { ProfileTabContent } from '../../../components/InjectedComponents/ProfileTabContent.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport {\n    searchNewTweetButtonSelector,\n    searchProfileTabLoseConnectionPageSelector,\n    searchProfileTabPageSelector,\n} from '../utils/selector.js'\n\nfunction injectProfileTabContentState(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(searchProfileTabPageSelector())\n    startWatch(watcher, { signal, shadowRootDelegatesFocus: false })\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { signal }).render(<ProfileTabContentAtTwitter />)\n}\n\nexport function injectProfileTabContentAtTwitter(signal: AbortSignal) {\n    const lostConnectionContentWatcher = new MutationObserverWatcher(\n        searchProfileTabLoseConnectionPageSelector(),\n    ).useForeach(() => MaskMessages.events.profileTabHidden.sendToLocal({ hidden: true }))\n\n    const contentWatcher = new MutationObserverWatcher(searchProfileTabPageSelector()).useForeach(() =>\n        MaskMessages.events.profileTabHidden.sendToLocal({ hidden: false }),\n    )\n\n    startWatch(lostConnectionContentWatcher, { signal, shadowRootDelegatesFocus: false })\n    startWatch(contentWatcher, { signal, shadowRootDelegatesFocus: false })\n\n    injectProfileTabContentState(signal)\n}\n\nfunction getStyleProps() {\n    const newTweetButton = searchNewTweetButtonSelector().evaluate()\n    return {\n        backgroundColor: newTweetButton ? window.getComputedStyle(newTweetButton).backgroundColor : undefined,\n        fontFamily: newTweetButton?.firstChild\n            ? window.getComputedStyle(newTweetButton.firstChild as HTMLElement).fontFamily\n            : undefined,\n    }\n}\n\nconst useStyles = makeStyles()((theme) => {\n    const props = getStyleProps()\n\n    return {\n        holder: {\n            position: 'relative',\n        },\n        root: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            zIndex: 1,\n        },\n        text: {\n            paddingTop: 29,\n            paddingBottom: 29,\n            '& > p': {\n                fontSize: 28,\n                fontFamily: props.fontFamily,\n                fontWeight: 700,\n                color: getMaskColor(theme).textPrimary,\n            },\n        },\n        button: {\n            backgroundColor: props.backgroundColor,\n            color: 'white',\n            marginTop: 18,\n            '&:hover': {\n                backgroundColor: props.backgroundColor,\n            },\n        },\n    }\n})\n\ninterface Props {\n    floating?: boolean\n}\nconst ProfileTabContentAtTwitter = memo(function ProfileTabContentAtTwitter({ floating }: Props) {\n    const { classes } = useStyles()\n    const content = (\n        <ProfileTabContent\n            classes={{\n                root: classes.root,\n                button: classes.button,\n                text: classes.text,\n            }}\n        />\n    )\n    // If it's floating, for example being attached to emptyState timeline, we\n    // can fix the position by putting it in a stacking context.\n    return floating ? <div className={classes.holder}>{content}</div> : content\n})\n","import type { PostInfo } from '@masknet/plugin-infra/content-script'\nimport { injectPostReplacer } from '../../../site-adaptor-infra/defaults/inject/PostReplacer.js'\n\nfunction resolveLangNode(node: HTMLElement) {\n    return node.hasAttribute('lang')\n        ? node\n        : node.querySelector<HTMLDivElement>('[lang]') ?? node.parentElement?.querySelector<HTMLDivElement>('[lang]')\n}\n\nexport function injectPostReplacerAtTwitter(signal: AbortSignal, current: PostInfo) {\n    const isPromotionPost = !!current.rootNode?.querySelector('svg path[d$=\"996V8h7v7z\"]')\n    const isCollapsedPost = !!current.rootNode?.querySelector('[data-testid=\"tweet-text-show-more-link\"]')\n    if (isPromotionPost || isCollapsedPost) return\n\n    const hasVideo = !!current.rootNode?.closest('[data-testid=\"tweet\"]')?.querySelector('video')\n    if (hasVideo) return\n\n    const tags = Array.from(\n        current.rootNode?.querySelectorAll<HTMLAnchorElement>(\n            ['a[role=\"link\"][href*=\"cashtag_click\"]', 'a[role=\"link\"][href*=\"hashtag_click\"]'].join(','),\n        ) ?? [],\n    )\n    if (!tags.map((x) => x.textContent).some((x) => x && /^[#$]\\w+$/i.test(x) && x.length <= 9)) return\n\n    return injectPostReplacer({\n        zipPost(node) {\n            if (node.destroyed) return\n            const langNode = resolveLangNode(node.current)\n            if (langNode) langNode.style.display = 'none'\n        },\n        unzipPost(node) {\n            if (node.destroyed || !node.current) return\n            const langNode = resolveLangNode(node.current)\n            if (langNode) langNode.style.display = 'unset'\n        },\n    })(current, signal)\n}\n","import { MutationObserverWatcher, type LiveSelector } from '@dimensiondev/holoflows-kit'\nimport { postEditorInTimelineSelector, postEditorInPopupSelector } from '../utils/selector.js'\nimport { startWatch, type WatchOptions } from '../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { hasEditor, isCompose } from '../utils/postBox.js'\nimport { Banner } from '../../../components/Welcomes/Banner.js'\n\nexport function injectBannerAtTwitter(signal: AbortSignal) {\n    const emptyNode = document.createElement('div')\n    injectBanner(postEditorInTimelineSelector(), {\n        signal,\n        missingReportRule: { name: 'Setup prompt', rule: 'https://twitter.com/home' },\n    })\n    injectBanner(\n        postEditorInPopupSelector().map((x) => (isCompose() && hasEditor() ? x : emptyNode)),\n        { signal, missingReportRule: { name: 'Setup prompt', rule: 'https://twitter.com/compose/tweet' } },\n    )\n}\n\nfunction injectBanner<T>(ls: LiveSelector<T, true>, options: WatchOptions) {\n    const watcher = new MutationObserverWatcher(ls)\n    startWatch(watcher, options)\n\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { signal: options.signal }).render(<Banner />)\n}\n","import { MutationObserverWatcher, type LiveSelector } from '@dimensiondev/holoflows-kit'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { Composition } from '../../../components/CompositionDialog/Composition.js'\nimport { postEditorContentInPopupSelector, rootSelector } from '../utils/selector.js'\nimport { startWatch, type WatchOptions } from '../../../utils/startWatch.js'\n\nfunction renderPostDialogTo<T>(reason: 'timeline' | 'popup', ls: LiveSelector<T, true>, options: WatchOptions) {\n    const watcher = new MutationObserverWatcher(ls)\n    startWatch(watcher, options)\n\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { signal: options.signal }).render(\n        <Composition type={reason} />,\n    )\n}\n\nexport function injectPostDialogAtTwitter(signal: AbortSignal) {\n    renderPostDialogTo('popup', postEditorContentInPopupSelector(), {\n        signal,\n        missingReportRule: { name: 'PostDialog popup', rule: 'https://twitter.com/compose/tweet' },\n    })\n    renderPostDialogTo('timeline', rootSelector(), {\n        signal,\n        missingReportRule: { name: 'PostDialog timeline', rule: 'https://twitter.com/home' },\n    })\n}\n","import { useCallback } from 'react'\nimport { clamp } from 'lodash-es'\nimport { MutationObserverWatcher, type LiveSelector } from '@dimensiondev/holoflows-kit'\nimport { CrossIsolationMessages, sayHelloShowed } from '@masknet/shared-base'\nimport { makeStyles, MaskColorVar } from '@masknet/theme'\nimport { makeTypedMessageText } from '@masknet/typed-message'\nimport { alpha } from '@mui/material'\nimport { PostDialogHint } from '../../../components/InjectedComponents/PostDialogHint.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch, type WatchOptions } from '../../../utils/startWatch.js'\nimport { twitterBase } from '../base.js'\nimport { hasEditor, isCompose } from '../utils/postBox.js'\nimport { isReplyPageSelector, postEditorInPopupSelector, searchReplyToolbarSelector } from '../utils/selector.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    iconButton: {\n        '&:hover': {\n            background: alpha(theme.palette.primary.main, 0.1),\n        },\n    },\n    tooltip: {\n        marginTop: '2px !important',\n        borderRadius: 2,\n        padding: 4,\n        background: MaskColorVar.twitterTooltipBg,\n        color: MaskColorVar.white,\n    },\n}))\n\nexport function injectPostDialogHintAtTwitter(signal: AbortSignal) {\n    const emptyNode = document.createElement('div')\n\n    renderPostDialogHintTo('timeline', searchReplyToolbarSelector(), {\n        signal,\n        missingReportRule: { name: 'PostDialog hint timeline', rule: 'https://twitter.com/home' },\n    })\n\n    renderPostDialogHintTo(\n        'popup',\n        postEditorInPopupSelector().map((x) => (isCompose() && hasEditor() ? x : emptyNode)),\n        {\n            signal,\n            missingReportRule: {\n                name: 'PostDialog hint popup',\n                rule: 'https://twitter.com/compose/tweet',\n            },\n        },\n    )\n}\n\nfunction renderPostDialogHintTo<T extends HTMLElement>(\n    reason: 'timeline' | 'popup',\n    ls: LiveSelector<T, true>,\n    options: WatchOptions,\n) {\n    const watcher = new MutationObserverWatcher(ls)\n    startWatch(watcher, options)\n\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, {\n        signal: options.signal,\n        tag: () => {\n            // Vertical center the button when font size of Twitter is set to `large` or `very large`\n            const tag = document.createElement('span')\n            Object.assign(tag.style, {\n                display: 'inline-flex',\n                alignItems: 'center',\n                height: '100%',\n            })\n            const svgIcon = document.querySelector('[data-testid=\"geoButton\"] svg')\n            const size = svgIcon ? clamp(svgIcon.getBoundingClientRect().width, 18, 24) : undefined\n            const geoButton = document.querySelector('[data-testid=\"geoButton\"]')\n            const padding = geoButton && size ? (geoButton.getBoundingClientRect().width - size) / 2 : undefined\n            if (padding) tag.style.setProperty('--icon-padding', `${padding}px`)\n            if (size) tag.style.setProperty('--icon-size', `${size}px`)\n\n            return tag\n        },\n    }).render(<PostDialogHintAtTwitter reason={reason} />)\n}\n\nfunction PostDialogHintAtTwitter({ reason }: { reason: 'timeline' | 'popup' }) {\n    const { classes } = useStyles()\n    const t = useMaskSharedTrans()\n\n    const onHintButtonClicked = useCallback(() => {\n        const content = sayHelloShowed[twitterBase.networkIdentifier].value\n            ? undefined\n            : makeTypedMessageText(\n                  t.setup_guide_say_hello_content() + t.setup_guide_say_hello_follow({ account: '@realMaskNetwork' }),\n              )\n\n        CrossIsolationMessages.events.compositionDialogEvent.sendToLocal({\n            reason: isReplyPageSelector() ? 'reply' : reason,\n            open: true,\n            content,\n        })\n        sayHelloShowed[twitterBase.networkIdentifier].value = true\n    }, [reason, isReplyPageSelector])\n\n    return (\n        <PostDialogHint\n            disableGuideTip={reason === 'popup'}\n            classes={{ iconButton: classes.iconButton, tooltip: classes.tooltip }}\n            size={20}\n            onHintButtonClicked={onHintButtonClicked}\n            tooltip={{ disabled: false, placement: 'top' }}\n        />\n    )\n}\n","import { injectPostDialogAtTwitter } from './PostDialog.js'\nimport { injectPostDialogHintAtTwitter } from './PostDialogHint.js'\n\nexport function injectPostBoxComposed(signal: AbortSignal) {\n    injectPostDialogAtTwitter(signal)\n    injectPostDialogHintAtTwitter(signal)\n}\n","/* eslint @masknet/unicode-specific-set: [\"error\", { \"only\": \"code\" }] */\nimport { TwitterDecoder } from '@masknet/encryption'\nimport type { PostInfo } from '@masknet/plugin-infra/content-script'\nimport { injectPostInspectorDefault } from '../../../site-adaptor-infra/defaults/inject/PostInspector.js'\n\nexport function injectPostInspectorAtTwitter(signal: AbortSignal, current: PostInfo) {\n    return injectPostInspectorDefault({\n        zipPost(node) {\n            if (node.destroyed) return\n            const contentContainer = node.current.parentElement\n            if (!contentContainer) return\n\n            const content = contentContainer.querySelector<HTMLDivElement>('[lang]')\n            if (!content) return\n\n            for (const a of content.querySelectorAll('a')) {\n                if (TwitterDecoder(a.title).isSome()) hideDOM(a)\n\n                if (/^https?:\\/\\/mask(\\.io|book\\.com)$/i.test(a.title)) hideDOM(a)\n            }\n            for (const span of content.querySelectorAll('span')) {\n                // match (.) (\\n) (—§—) (any space) (/*)\n                // Note: In Chinese we can't hide dom because \"解密这条推文。\\n—§—\" is in the same DOM\n                // hide it will break the sentence.\n                if (span.innerText.match(/^\\.\\n\\u2014\\u00A7\\u2014 +\\/\\* $/)) hideDOM(span)\n                // match (any space) (*/) (any space)\n                if (span.innerText.match(/^ +\\*\\/ ?$/)) hideDOM(span)\n            }\n\n            const parent = content.parentElement?.nextElementSibling as HTMLElement\n            if (parent && matches(parent.innerText)) {\n                parent.style.height = '0'\n                parent.style.overflow = 'hidden'\n            }\n\n            const cardWrapper =\n                contentContainer.parentElement?.querySelector<HTMLDivElement>('[data-testid=\"card.wrapper\"]')\n            if (cardWrapper) {\n                cardWrapper.style.display = 'none'\n                cardWrapper.setAttribute('aria-hidden', 'true')\n            }\n        },\n    })(current, signal)\n}\nfunction matches(input: string) {\n    input = input.toLowerCase()\n    return input.includes('maskbook.com') && input.includes('make privacy protected again')\n}\n\nfunction hideDOM(a: HTMLElement) {\n    a.style.width = '0'\n    a.style.height = '0'\n    a.style.overflow = 'hidden'\n    a.style.display = 'inline-block'\n}\n","import {\n    createInjectHooksRenderer,\n    Plugin,\n    useActivatedPluginsSiteAdaptor,\n    usePostInfoDetails,\n} from '@masknet/plugin-infra/content-script'\n\nconst ActionsRenderer = createInjectHooksRenderer(\n    useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode,\n    (plugin) => plugin.TipsRealm?.UI?.Content,\n)\n\nexport function PostActions() {\n    const identifier = usePostInfoDetails.author()\n    if (!identifier) return null\n    return <ActionsRenderer identity={identifier} slot={Plugin.SiteAdaptor.TipsSlot.Post} />\n}\n","import { noop } from 'lodash-es'\nimport { PostInfoProvider, type PostInfo } from '@masknet/plugin-infra/content-script'\nimport { PostActions } from '../../../components/InjectedComponents/PostActions.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\n\nfunction createRootElement() {\n    const root = document.createElement('div')\n    Object.assign(root.style, {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n    })\n    return root\n}\n\nexport function createPostActionsInjector() {\n    return function injectPostActions(postInfo: PostInfo, signal: AbortSignal) {\n        if (postInfo.actionsElement) {\n            const jsx = (\n                <PostInfoProvider post={postInfo}>\n                    <PostActions />\n                </PostInfoProvider>\n            )\n            const root = attachReactTreeWithContainer(postInfo.actionsElement.afterShadow, {\n                tag: createRootElement,\n                key: 'post-actions',\n                untilVisible: true,\n                signal,\n            })\n            if (postInfo.actionsElement?.realCurrent?.parentNode) {\n                const actionsContainer = postInfo.actionsElement.realCurrent.parentNode as HTMLDivElement\n                actionsContainer.style.maxWidth = '100%'\n            }\n            root.render(jsx)\n            return root.destroy\n        }\n        return noop\n    }\n}\n","import type { PostInfo } from '@masknet/plugin-infra/content-script'\nimport { Flags } from '@masknet/flags'\nimport { createPostActionsInjector } from '../../../../site-adaptor-infra/defaults/inject/PostActions.js'\n\nexport function injectPostActionsAtTwitter(signal: AbortSignal, postInfo: PostInfo) {\n    if (!Flags.post_actions_enabled) return\n    const injector = createPostActionsInjector()\n    return injector(postInfo, signal)\n}\n","import { useMemo, useState } from 'react'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { createInjectHooksRenderer, Plugin, useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport { makeStyles } from '@masknet/theme'\nimport { useCurrentVisitingIdentity, useThemeSettings } from '../../../../components/DataSource/useActivatedUI.js'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { ButtonStyle } from '../../constant.js'\nimport { profileFollowButtonSelector as selector } from '../../utils/selector.js'\n\nexport function injectOpenTipsButtonOnProfile(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(selector())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.beforeShadow, { signal }).render(<ProfileTipsSlot />)\n}\n\ninterface StyleProps {\n    size: number\n    marginBottom: number\n}\nconst useStyles = makeStyles<StyleProps>()((theme, props) => ({\n    hide: {\n        display: 'none',\n    },\n    slot: {\n        position: 'relative',\n        height: props.size,\n        width: props.size,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 999,\n        marginRight: theme.spacing(1),\n        marginBottom: props.marginBottom,\n        verticalAlign: 'top',\n    },\n}))\n\nfunction ProfileTipsSlot() {\n    const visitingPersona = useCurrentVisitingIdentity()\n    const themeSettings = useThemeSettings()\n    const buttonStyle = ButtonStyle[themeSettings.size]\n    const { classes, cx } = useStyles({ size: buttonStyle.buttonSize, marginBottom: buttonStyle.marginBottom })\n    const [disabled, setDisabled] = useState(true)\n\n    const component = useMemo(() => {\n        const Component = createInjectHooksRenderer(\n            useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode,\n            (plugin) => plugin.TipsRealm?.UI?.Content,\n        )\n\n        return (\n            <Component\n                identity={visitingPersona.identifier}\n                slot={Plugin.SiteAdaptor.TipsSlot.Profile}\n                iconSize={buttonStyle.iconSize}\n                buttonSize={buttonStyle.buttonSize}\n                onStatusUpdate={setDisabled}\n            />\n        )\n    }, [visitingPersona.identifier, buttonStyle.buttonSize, buttonStyle.iconSize])\n\n    if (!component || !visitingPersona.identifier) return null\n\n    return <span className={cx(classes.slot, disabled ? classes.hide : null)}>{component}</span>\n}\n","import { AvatarType } from '@masknet/plugin-avatar'\nimport { searchTwitterAvatarNFTStyleSelector, searchTwitterAvatarNormalSelector } from './selector.js'\n\nexport function getAvatarType(ele?: HTMLElement) {\n    const dom =\n        ele ??\n        searchTwitterAvatarNFTStyleSelector().evaluate() ??\n        searchTwitterAvatarNormalSelector().querySelector('div').evaluate()\n    if (!dom) return AvatarType.Default\n    const styles = window.getComputedStyle(dom)\n    return styles.clipPath.includes('#shape-square')\n        ? AvatarType.Square\n        : styles.clipPath.includes('#shape-hex')\n        ? AvatarType.Clip\n        : AvatarType.Default\n}\n\nexport function isVerifiedUser(ele: HTMLElement) {\n    return !!ele.closest('[data-testid=\"tweet\"]')?.querySelector('[data-testid=\"icon-verified\"]')\n}\n","import { useQuery } from '@tanstack/react-query'\nimport { getUserIdentity } from '../../utils/user.js'\n\nexport function useUserIdentity(userId: string) {\n    const { data: identity } = useQuery({\n        queryKey: ['get-user-identity', userId],\n        queryFn: () => getUserIdentity(userId),\n    })\n    return identity\n}\n","import { memo, useMemo, useState } from 'react'\nimport { noop } from 'lodash-es'\nimport { Flags } from '@masknet/flags'\nimport { makeStyles } from '@masknet/theme'\nimport { DOMProxy, MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { createInjectHooksRenderer, Plugin, useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport { useThemeSettings } from '../../../../components/DataSource/useActivatedUI.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { TipButtonStyle } from '../../constant.js'\nimport { normalFollowButtonSelector as selector } from '../../utils/selector.js'\nimport { isVerifiedUser } from '../../utils/AvatarType.js'\nimport { useUserIdentity } from './hooks.js'\n\nfunction getUserId(ele: HTMLElement) {\n    const profileLink = ele.closest('[data-testid=\"UserCell\"]')?.querySelector('a[role=\"link\"]')\n    if (!profileLink) return\n    return profileLink.getAttribute('href')?.slice(1)\n}\n\nexport function injectTipsButtonOnFollowButton(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(selector())\n    startWatch(\n        watcher.useForeach((ele) => {\n            let remover = noop\n            const remove = () => remover()\n\n            const run = async () => {\n                const userId = getUserId(ele)\n                if (!userId) return\n                const proxy = DOMProxy({\n                    afterShadowRootInit: Flags.shadowRootInit,\n                })\n                proxy.realCurrent = ele\n\n                const isVerified = isVerifiedUser(ele)\n\n                const root = attachReactTreeWithContainer(proxy.beforeShadow, { signal })\n                root.render(isVerified ? <FollowButtonTipsSlot userId={userId} /> : <div />)\n                remover = root.destroy\n            }\n\n            run()\n            return {\n                onNodeMutation: run,\n                onTargetChanged: run,\n                onRemove: remove,\n            }\n        }),\n        signal,\n    )\n}\n\nconst useStyles = makeStyles()(() => ({\n    disabled: {\n        display: 'none',\n    },\n    slot: {\n        height: 36,\n        width: 36,\n        position: 'absolute',\n        left: -10,\n        top: 1,\n        transform: 'translate(-100%)',\n    },\n}))\n\ninterface Props {\n    userId: string\n}\n\nconst FollowButtonTipsSlot = memo(function FollowButtonTipsSlot({ userId }: Props) {\n    const themeSetting = useThemeSettings()\n    const tipStyle = TipButtonStyle[themeSetting.size]\n    const { classes, cx } = useStyles()\n    const identity = useUserIdentity(userId)\n\n    const [disabled, setDisabled] = useState(true)\n\n    const component = useMemo(() => {\n        const Component = createInjectHooksRenderer(\n            useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode,\n            (plugin) => plugin.TipsRealm?.UI?.Content,\n        )\n        return (\n            <Component\n                identity={identity?.identifier}\n                buttonSize={tipStyle.buttonSize}\n                iconSize={tipStyle.iconSize}\n                slot={Plugin.SiteAdaptor.TipsSlot.FollowButton}\n                onStatusUpdate={setDisabled}\n            />\n        )\n    }, [identity?.identifier, tipStyle.buttonSize, tipStyle.iconSize])\n\n    if (!identity?.identifier) return null\n\n    return <span className={cx(classes.slot, disabled ? classes.disabled : null)}>{component}</span>\n})\n","import { DOMProxy, MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { Flags } from '@masknet/flags'\nimport { Plugin, createInjectHooksRenderer, useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport { makeStyles } from '@masknet/theme'\nimport { noop } from 'lodash-es'\nimport { memo, useMemo, useState } from 'react'\nimport { useThemeSettings } from '../../../../components/DataSource/useActivatedUI.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { TipButtonStyle } from '../../constant.js'\nimport { querySelectorAll } from '../../utils/selector.js'\nimport { useUserIdentity } from './hooks.js'\n\nfunction postShareButtonSelector() {\n    return querySelectorAll('article[data-testid=\"tweet\"] [role=\"group\"] > div:has([aria-haspopup=\"menu\"]):last-child')\n}\n\nfunction getUserId(ele: HTMLElement) {\n    const avatar = ele\n        .closest('[data-testid=\"tweet\"]')\n        ?.querySelector<HTMLElement>('[data-testid^=\"UserAvatar-Container-\"]')\n    if (!avatar) return\n    return avatar.dataset.testid?.slice(21) // \"UserAvatar-Container-\".length === 21\n}\n\nfunction createRootElement() {\n    const root = document.createElement('div')\n    Object.assign(root.style, {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n    })\n    return root\n}\n\nexport function injectTipsButtonOnPost(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(postShareButtonSelector())\n    startWatch(\n        watcher.useForeach((ele) => {\n            let remover = noop\n            const remove = () => remover()\n\n            const run = async () => {\n                const userId = getUserId(ele)\n                if (!userId) return\n                const proxy = DOMProxy({\n                    afterShadowRootInit: Flags.shadowRootInit,\n                })\n                proxy.realCurrent = ele\n                ele.style.flex = '1'\n\n                const root = attachReactTreeWithContainer(proxy.afterShadow, {\n                    signal,\n                    tag: createRootElement,\n                    // untilVisible: true,\n                })\n                root.render(<PostTipsSlot userId={userId} />)\n                remover = root.destroy\n            }\n\n            run()\n            return {\n                onNodeMutation: run,\n                onTargetChanged: run,\n                onRemove: remove,\n            }\n        }),\n        signal,\n    )\n}\n\nconst useStyles = makeStyles()(() => ({\n    disabled: {\n        display: 'none',\n    },\n}))\n\ninterface Props {\n    userId: string\n}\n\nconst PostTipsSlot = memo(function PostTipsSlot({ userId }: Props) {\n    const themeSetting = useThemeSettings()\n    const tipStyle = TipButtonStyle[themeSetting.size]\n    const { classes } = useStyles()\n    const identity = useUserIdentity(userId)\n\n    const [disabled, setDisabled] = useState(true)\n\n    const component = useMemo(() => {\n        const Component = createInjectHooksRenderer(\n            useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode,\n            (plugin) => plugin.TipsRealm?.UI?.Content,\n        )\n        return (\n            <Component\n                identity={identity?.identifier}\n                buttonSize={tipStyle.buttonSize}\n                iconSize={tipStyle.iconSize}\n                slot={Plugin.SiteAdaptor.TipsSlot.Post}\n                onStatusUpdate={setDisabled}\n            />\n        )\n    }, [identity?.identifier, tipStyle.buttonSize, tipStyle.iconSize])\n\n    if (!identity?.identifier) return null\n\n    return <span className={disabled ? classes.disabled : undefined}>{component}</span>\n})\n","import { injectOpenTipsButtonOnProfile } from './ProfileTipsButton.js'\nimport { injectTipsButtonOnFollowButton } from './FollowTipsButton.js'\nimport { injectTipsButtonOnPost } from './PostTipsButton.js'\n\nexport function injectTips(signal: AbortSignal) {\n    injectOpenTipsButtonOnProfile(signal)\n    injectTipsButtonOnFollowButton(signal)\n    injectTipsButtonOnPost(signal)\n}\n","import { Twitter } from '@masknet/web3-providers'\nimport { getAvatarType } from './AvatarType.js'\nimport { AvatarType } from '@masknet/plugin-avatar'\n\nexport function getInjectNodeInfo(ele: HTMLElement) {\n    const imgEle = ele.querySelector('img')\n    if (!imgEle) return\n\n    const nftDom = imgEle.closest<HTMLElement>('a[href][role=link]')\n    if (!nftDom) return\n\n    nftDom.style.overflow = 'unset'\n    const avatarParent = nftDom.parentElement\n    let avatarType = AvatarType.Default\n\n    if (avatarParent) {\n        avatarType = getAvatarType(avatarParent)\n        if (process.env.NODE_ENV === 'development') {\n            if (\n                avatarParent.style.clipPath &&\n                avatarParent.style.clipPath !== 'url(\"#shape-square-rx-8\")' &&\n                !document.getElementById('shape-hex')\n            ) {\n                console.error(\"Twitter DOM might get updated, can not find clip path by 'shape-hex'\")\n            }\n        }\n    }\n\n    const { offsetWidth: width, offsetHeight: height } = nftDom\n    const avatarId = Twitter.getAvatarId(imgEle.src)\n    if (!avatarId) return\n\n    return { element: nftDom, width, height, avatarId, avatarType }\n}\n","import { useAsyncRetry } from 'react-use'\nimport type { AsyncState } from 'react-use/lib/useAsyncFn.js'\nimport { Twitter } from '@masknet/web3-providers'\n\nexport function useNFTContainerAtTwitter(screenName?: string): AsyncState<{ address: string; token_id: string }> {\n    return useAsyncRetry(async () => {\n        if (!screenName) return\n        return Twitter.getUserNftContainer(screenName)\n    }, [screenName])\n}\n","import { useMemo } from 'react'\nimport { v4 as uuid } from 'uuid'\nimport { keyframes, makeStyles } from '@masknet/theme'\nimport { useNFTContainerAtTwitter } from '../hooks/useNFTContainerAtTwitter.js'\nimport type { Keyframes } from '@emotion/serialize'\n\n// from twitter page\nconst ViewBoxWidth = 200\nconst ViewBoxHeight = 188\n\ninterface NFTAvatarClipProps extends withClasses<'root' | 'text' | 'icon'> {\n    id?: string\n    size: number\n    className?: string\n    name: string\n    price: string\n    viewBoxWidth?: number\n    viewBoxHeight?: number\n}\ninterface NFTAvatarMiniClipProps extends Omit<NFTAvatarClipProps, 'name' | 'price'> {\n    screenName: string\n}\n\nconst rainbowBorderKeyFrames: Keyframes = keyframes`\n    0%, to {\n        stroke: #00f8ff;\n    }\n    20% {\n        stroke: #a4ff00;\n    }\n    40% {\n        stroke: #f7275e;\n    }\n    60% {\n        stroke: #ffd300;\n    }\n    80% {\n        stroke: #ff8a00;\n    }\n`\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {},\n    miniBorder: {\n        transform: 'scale(0.94, 0.96) translate(7px, 4px)',\n        strokeWidth: 6,\n        stroke: '#00f8ff',\n        fill: 'none',\n    },\n\n    borderPath: {\n        transform: 'scale(0.98, 1.035) translate(2px, -3px)',\n        strokeWidth: 3,\n        fill: 'none',\n    },\n    background: {\n        transform: 'scale(1, 1.05) translate(1px, -3px)',\n        fill: 'none',\n        strokeWidth: 30,\n        stroke: 'black',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n    },\n    rainbowBorder: {\n        animation: `${rainbowBorderKeyFrames} 6s linear infinite`,\n        transition: 'none',\n        fill: 'none',\n        strokeLinejoin: 'round',\n        strokeLinecap: 'round',\n    },\n    text: {\n        transform: navigator.userAgent.includes('Firefox') ? 'translate(1px, -1px)' : 'translate(1px, -5px) ',\n    },\n    price: {\n        transform: 'translate(0, -5px) ',\n    },\n    namePath: {\n        transform: 'scale(0.9) translate(10px, 10px)',\n    },\n}))\n\ninterface NamePathProps extends withClasses<'root'> {\n    id: string\n}\nfunction NamePath(props: NamePathProps) {\n    const { classes } = useStyles(undefined, { props })\n    return (\n        <path\n            className={classes.root}\n            d=\"M6.74789,69.55C14.0458,54.2034 22.5561,39.4634 32.1979,25.47L35.3079,20.96C39.1367,15.4049 44.155,10.7724 49.9981,7.3994C55.8413,4.02636 62.3625,1.99743 69.0879,1.46004L74.5479,1.02004C91.4873,-0.340012 108.508,-0.340012 125.448,1.02004L130.908,1.46004C137.633,1.99743 144.155,4.02636 149.998,7.3994C155.841,10.7724 160.859,15.4049 164.688,20.96L167.798,25.43C177.44,39.4234 185.95,54.1634 193.248,69.51\"\n            id={props.id}\n        />\n    )\n}\n\ninterface PricePathProps {\n    id: string\n}\n\nfunction PricePath({ id }: PricePathProps) {\n    return (\n        <path\n            d=\"M6.74789 118.43C14.0458 133.777 22.5561 148.517 32.1979 162.51L35.3079 167.02C39.1367 172.575 44.155 177.208 49.9981 180.581C55.8413 183.954 62.3625 185.983 69.0879 186.52L74.5479 186.96C91.4873 188.32 108.508 188.32 125.448 186.96L130.908 186.52C137.638 185.976 144.163 183.938 150.006 180.554C155.85 177.17 160.865 172.526 164.688 166.96L167.798 162.45C177.44 148.457 185.95 133.717 193.248 118.37\"\n            id={id}\n        />\n    )\n}\n\ninterface BorderPathProps {\n    id: string\n    transform?: string\n    fill?: string\n}\n\nfunction BorderPath({ id, transform, fill }: BorderPathProps) {\n    return (\n        <path\n            id={id}\n            transform={transform}\n            stroke={fill}\n            d=\"M193.248 69.51C185.95 54.1634 177.44 39.4234 167.798 25.43L164.688 20.96C160.859 15.4049 155.841 10.7724 149.998 7.3994C144.155 4.02636 137.633 1.99743 130.908 1.46004L125.448 1.02004C108.508 -0.340012 91.4873 -0.340012 74.5479 1.02004L69.0879 1.46004C62.3625 1.99743 55.8413 4.02636 49.9981 7.3994C44.155 10.7724 39.1367 15.4049 35.3079 20.96L32.1979 25.47C22.5561 39.4634 14.0458 54.2034 6.74789 69.55L4.39789 74.49C1.50233 80.5829 0 87.2441 0 93.99C0 100.736 1.50233 107.397 4.39789 113.49L6.74789 118.43C14.0458 133.777 22.5561 148.517 32.1979 162.51L35.3079 167.02C39.1367 172.575 44.155 177.208 49.9981 180.581C55.8413 183.954 62.3625 185.983 69.0879 186.52L74.5479 186.96C91.4873 188.32 108.508 188.32 125.448 186.96L130.908 186.52C137.638 185.976 144.163 183.938 150.006 180.554C155.85 177.17 160.865 172.526 164.688 166.96L167.798 162.45C177.44 148.457 185.95 133.717 193.248 118.37L195.598 113.43C198.493 107.337 199.996 100.676 199.996 93.93C199.996 87.1841 198.493 80.5229 195.598 74.43L193.248 69.51Z\"\n        />\n    )\n}\n\ninterface TextProps extends withClasses<'root'> {\n    xlinkHref?: string\n    fontSize?: number\n    text?: string\n    fill?: string\n    dominantBaseline?: string\n}\n\nfunction Text(props: TextProps) {\n    const { xlinkHref, fontSize = 12, text, fill, dominantBaseline = 'mathematical' } = props\n    const { classes } = useStyles(undefined, { props })\n    return (\n        <text x=\"0%\" textAnchor=\"middle\" fill={fill} fontFamily=\"sans-serif\" className={classes.root}>\n            <textPath xlinkHref={xlinkHref} startOffset=\"50%\" rotate=\"auto\" dominantBaseline={dominantBaseline}>\n                <tspan fontWeight=\"bold\" fontSize={fontSize}>\n                    {text}\n                </tspan>\n            </textPath>\n        </text>\n    )\n}\n\nexport function NFTAvatarClip(props: NFTAvatarClipProps) {\n    const { size, viewBoxHeight = ViewBoxHeight, viewBoxWidth = ViewBoxWidth, name, price } = props\n    const id = useMemo(() => props.id ?? uuid(), [props.id])\n    const { classes, cx } = useStyles(undefined, { props })\n\n    return (\n        <svg\n            className={classes.root}\n            width={size}\n            height={size}\n            id={id}\n            viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}>\n            <defs>\n                <linearGradient id={`${id}-gradient`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0\">\n                    <stop offset=\"0%\" stopColor=\"#00f8ff\" />\n                    <stop offset=\"20%\" stopColor=\"#a4ff00\" />\n                    <stop offset=\"40%\" stopColor=\"#f7275e\" />\n                    <stop offset=\"60%\" stopColor=\"#ffd300\" />\n                    <stop offset=\"80%\" stopColor=\"#ff8a00\" />\n                    <stop offset=\"100%\" stopColor=\"#00f8ff\" />\n                </linearGradient>\n\n                <linearGradient id={`${id}-border-gradient`} x1=\"100%\" y1=\"0%\" x2=\"0%\" y2=\"0%\">\n                    <stop offset=\"0%\" stopColor=\"#24FF00\" />\n                    <stop offset=\"100%\" stopColor=\"#00E4C9 \" />\n                </linearGradient>\n\n                <NamePath id={`${id}-name-path`} classes={{ root: classes.namePath }} />\n                <PricePath id={`${id}-price-path`} />\n                <BorderPath id={`${id}-border-path`} />\n            </defs>\n\n            <g>\n                <pattern id={`${id}-pattern`} x=\"0\" y=\"0\" width=\"300%\" height=\"100%\" patternUnits=\"userSpaceOnUse\">\n                    <circle\n                        cx={viewBoxWidth / 2}\n                        cy={viewBoxHeight / 2}\n                        r={Math.max(viewBoxWidth, viewBoxHeight) + 1}\n                        fill={`url(#${id}-gradient)`}>\n                        <animateTransform\n                            attributeName=\"transform\"\n                            type=\"rotate\"\n                            dur=\"10s\"\n                            repeatCount=\"indefinite\"\n                            from={`0 ${viewBoxWidth / 2} ${viewBoxHeight / 2}`}\n                            to={`360 ${viewBoxWidth / 2} ${viewBoxHeight / 2}`}\n                        />\n                    </circle>\n                </pattern>\n                <use xlinkHref={`#${id}-border-path`} className={classes.background} />\n                <use xlinkHref={`#${id}-border-path`} className={cx(classes.rainbowBorder, classes.borderPath)} />\n                <g className={classes.text}>\n                    <Text\n                        xlinkHref={`#${id}-name-path`}\n                        fill={`url(#${id}-pattern)`}\n                        dominantBaseline={navigator.userAgent.includes('Firefox') ? 'text-before-edge' : 'mathematical'}\n                        text={name}\n                    />\n                </g>\n                <g className={classes.price}>\n                    <Text\n                        fill={`url(#${id}-pattern)`}\n                        xlinkHref={`#${id}-price-path`}\n                        dominantBaseline={navigator.userAgent.includes('Firefox') ? 'central' : 'mathematical'}\n                        text={price}\n                    />\n                </g>\n            </g>\n        </svg>\n    )\n}\n\nexport function NFTAvatarMiniClip(props: NFTAvatarMiniClipProps) {\n    const { size, viewBoxHeight = ViewBoxHeight, viewBoxWidth = ViewBoxWidth, screenName, className } = props\n    const id = useMemo(() => props.id ?? uuid(), [props.id])\n    const { classes, cx } = useStyles(undefined, { props })\n    const { loading, value: avatarMetadata } = useNFTContainerAtTwitter(screenName)\n\n    if (loading || !avatarMetadata?.address || !avatarMetadata?.token_id) return null\n    return (\n        <svg\n            className={cx(classes.root, className)}\n            width={size}\n            height={size}\n            id={id}\n            viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}>\n            <defs>\n                <BorderPath id={`${id}-border-path`} />\n            </defs>\n            <clipPath id={`${id}-clip-path`}>\n                <BorderPath id={id} transform={`scale(${size / viewBoxWidth})`} />\n            </clipPath>\n            <g>\n                <use xlinkHref={`#${id}-border-path`} className={cx(classes.rainbowBorder, classes.miniBorder)} />\n            </g>\n        </svg>\n    )\n}\n","import { AvatarType, NFTAvatarMiniClip, NFTBadgeTimeline, RSS3_KEY_SITE } from '@masknet/plugin-avatar'\n\ninterface MiniAvatarBorderProps {\n    avatarType: AvatarType\n    size: number\n    screenName: string\n    avatarId?: string\n}\nexport function MiniAvatarBorder(props: MiniAvatarBorderProps) {\n    const { avatarType, size, screenName, avatarId } = props\n\n    if (avatarType === AvatarType.Clip) return <NFTAvatarMiniClip screenName={screenName} size={size} />\n\n    return (\n        <NFTBadgeTimeline\n            userId={screenName}\n            avatarId={avatarId || ''}\n            width={size - 4}\n            height={size - 4}\n            siteKey={RSS3_KEY_SITE.TWITTER}\n            avatarType={avatarType}\n        />\n    )\n}\n","import { Flags } from '@masknet/flags'\nimport { DOMProxy, type LiveSelector, MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { getInjectNodeInfo } from '../../utils/avatar.js'\nimport { followUserAvatarSelector, postAvatarSelector } from '../../utils/selector.js'\nimport { activatedSiteAdaptorUI } from '../../../../site-adaptor-infra/ui.js'\nimport { MiniAvatarBorder } from './MiniAvatarBorder.js'\n\nfunction getUserId(ele: HTMLElement) {\n    const attribute = ele.dataset.testid || ''\n    if (attribute.endsWith('unknown')) {\n        return ele?.querySelector('a[href][role=link]')?.getAttribute('href')?.slice(1)\n    }\n    return attribute.split('-').pop()\n}\n\nfunction inject(selector: () => LiveSelector<HTMLElement>, signal: AbortSignal) {\n    startWatch(\n        new MutationObserverWatcher(selector()).useForeach((ele) => {\n            let remover: () => void | undefined\n\n            const run = async () => {\n                const userId = getUserId(ele)\n                if (!userId) return\n\n                const info = getInjectNodeInfo(ele)\n                if (!info) return\n                const proxy = DOMProxy({\n                    afterShadowRootInit: Flags.shadowRootInit,\n                })\n                proxy.realCurrent = info.element.firstChild as HTMLElement\n\n                const root = attachReactTreeWithContainer(proxy.afterShadow, { untilVisible: true, signal })\n                root.render(\n                    <div\n                        style={{\n                            position: 'absolute',\n                            left: 0,\n                            top: 0,\n                            zIndex: 2,\n                        }}>\n                        <MiniAvatarBorder\n                            avatarType={info.avatarType}\n                            size={info.width}\n                            screenName={\n                                userId ||\n                                activatedSiteAdaptorUI!.collecting.identityProvider?.recognized.value.identifier\n                                    ?.userId ||\n                                ''\n                            }\n                            avatarId={info.avatarId}\n                        />\n                    </div>,\n                )\n                remover = root.destroy\n            }\n\n            run()\n            return {\n                onNodeMutation: run,\n                onTargetChanged: run,\n                onRemove: () => remover?.(),\n            }\n        }),\n        signal,\n    )\n}\n\nexport async function injectUserNFTAvatarAtTwitter(signal: AbortSignal) {\n    inject(postAvatarSelector, signal)\n    inject(followUserAvatarSelector, signal)\n}\n","import { useEffect } from 'react'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { NFTAvatarButton } from '@masknet/plugin-avatar'\nimport { ConnectPersonaBoundary } from '@masknet/shared'\nimport { CrossIsolationMessages, PluginID, currentPersonaIdentifier } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { makeStyles } from '@masknet/theme'\nimport { Twitter } from '@masknet/web3-providers'\nimport {\n    useCurrentVisitingIdentity,\n    useLastRecognizedIdentity,\n    useThemeSettings,\n} from '../../../../components/DataSource/useActivatedUI.js'\nimport { usePersonasFromDB } from '../../../../../shared-ui/hooks/usePersonasFromDB.js'\nimport Services from '#services'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { ButtonStyle } from '../../constant.js'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { searchProfileAvatarSelector, searchProfileSaveSelector } from '../../utils/selector.js'\n\nexport function injectOpenNFTAvatarEditProfileButtonAtEditProfileDialog(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(searchProfileAvatarSelector())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { untilVisible: true, signal }).render(\n        <OpenNFTAvatarEditProfileButtonInTwitter />,\n    )\n\n    // clear cache\n    const saveButtonWatcher = new MutationObserverWatcher(searchProfileSaveSelector()).useForeach(\n        (node, key, proxy) => {\n            const root = attachReactTreeWithContainer(proxy.afterShadow, { untilVisible: true, signal })\n            root.render(<NFTAvatarSave />)\n            return () => root.destroy()\n        },\n    )\n\n    startWatch(saveButtonWatcher, signal)\n}\n\nfunction NFTAvatarSave() {\n    const identity = useCurrentVisitingIdentity()\n    useEffect(() => {\n        if (!identity.identifier?.userId) return\n        const saveButton = searchProfileSaveSelector().evaluate()\n        if (!saveButton) return\n        const clearCache = () => {\n            Twitter.staleUserByScreenName(identity.identifier?.userId ?? '')\n        }\n        saveButton.addEventListener('click', clearCache)\n        return () => saveButton.removeEventListener('click', clearCache)\n    }, [identity.identifier?.userId])\n    return null\n}\nconst useStyles = makeStyles<{ buttonSize: number; fontSize: number }>()((theme, { buttonSize, fontSize }) => ({\n    root: {\n        display: 'flex',\n        top: 211,\n        right: 16,\n        position: 'absolute',\n    },\n    button: {\n        height: buttonSize,\n    },\n    text: {\n        fontWeight: 700,\n        fontSize,\n    },\n}))\nfunction clickHandler() {\n    CrossIsolationMessages.events.avatarSettingDialogEvent.sendToLocal({\n        open: true,\n    })\n}\nfunction OpenNFTAvatarEditProfileButtonInTwitter() {\n    const personas = usePersonasFromDB()\n    const lastRecognized = useLastRecognizedIdentity()\n    const currentIdentifier = useValueRef(currentPersonaIdentifier)\n    const themeSettings = useThemeSettings()\n    const buttonStyle = ButtonStyle[themeSettings.size]\n\n    const { classes } = useStyles({ buttonSize: buttonStyle.buttonSize, fontSize: buttonStyle.fontSize })\n\n    return (\n        <div className={classes.root}>\n            <ConnectPersonaBoundary\n                personas={personas}\n                identity={lastRecognized}\n                currentPersonaIdentifier={currentIdentifier}\n                openDashboard={Services.Helper.openDashboard}\n                handlerPosition=\"top-right\"\n                customHint\n                directTo={PluginID.Avatar}>\n                <NFTAvatarButton classes={{ root: classes.button, text: classes.text }} onClick={clickHandler} />\n            </ConnectPersonaBoundary>\n        </div>\n    )\n}\n","import { useEffect } from 'react'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { makeStyles } from '@masknet/theme'\nimport { NFTAvatarButton } from '@masknet/plugin-avatar'\nimport { ConnectPersonaBoundary } from '@masknet/shared'\nimport { PluginID, CrossIsolationMessages, currentPersonaIdentifier } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { searchEditProfileSelector } from '../../utils/selector.js'\nimport { injectOpenNFTAvatarEditProfileButtonAtEditProfileDialog } from './NFTAvatarEditProfileDialog.js'\nimport { ButtonStyle, type ButtonProps } from '../../constant.js'\nimport { useLastRecognizedIdentity, useThemeSettings } from '../../../../components/DataSource/useActivatedUI.js'\nimport { usePersonasFromDB } from '../../../../../shared-ui/hooks/usePersonasFromDB.js'\nimport Services from '#services'\n\nexport function injectOpenNFTAvatarEditProfileButton(signal: AbortSignal) {\n    injectOpenNFTAvatarEditProfileButtonAtProfilePage(signal)\n    injectOpenNFTAvatarEditProfileButtonAtEditProfileDialog(signal)\n}\n\nfunction injectOpenNFTAvatarEditProfileButtonAtProfilePage(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(searchEditProfileSelector())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.beforeShadow, { untilVisible: true, signal }).render(\n        <OpenNFTAvatarEditProfileButtonInTwitter />,\n    )\n}\n\nconst useStyles = makeStyles<ButtonProps>()((theme, props) => ({\n    root: {\n        minHeight: props.buttonSize,\n        marginBottom: props.marginBottom,\n        marginTop: 1,\n        marginRight: theme.spacing(2),\n        height: props.buttonSize,\n    },\n    text: {\n        fontWeight: 700,\n        fontSize: props.fontSize,\n    },\n}))\n\nexport function openNFTAvatarSettingDialog() {\n    const editDom = searchEditProfileSelector().evaluate()\n    editDom?.click()\n}\n\nfunction useNFTAvatarButtonStyles() {\n    const themeSettings = useThemeSettings()\n    const style = ButtonStyle[themeSettings.size]\n    return useStyles(style)\n}\nfunction clickHandler() {\n    CrossIsolationMessages.events.avatarSettingDialogEvent.sendToLocal({\n        open: true,\n        startPicking: true,\n    })\n}\nfunction OpenNFTAvatarEditProfileButtonInTwitter() {\n    const { classes } = useNFTAvatarButtonStyles()\n    const allPersonas = usePersonasFromDB()\n    const lastRecognized = useLastRecognizedIdentity()\n    const currentIdentifier = useValueRef(currentPersonaIdentifier)\n\n    useEffect(() => {\n        const clearTasks = [\n            CrossIsolationMessages.events.personaBindFinished.on((ev) => {\n                if (ev.pluginID === PluginID.Avatar) clickHandler()\n            }),\n            CrossIsolationMessages.events.applicationDialogEvent.on((ev) => {\n                if (ev.pluginID === PluginID.Avatar) clickHandler()\n            }),\n        ]\n\n        return () => {\n            clearTasks.forEach((task) => task())\n        }\n    }, [clickHandler])\n\n    return (\n        <ConnectPersonaBoundary\n            personas={allPersonas}\n            identity={lastRecognized}\n            currentPersonaIdentifier={currentIdentifier}\n            openDashboard={Services.Helper.openDashboard}\n            handlerPosition=\"top-right\"\n            customHint\n            directTo={PluginID.Avatar}>\n            <NFTAvatarButton classes={{ root: classes.root, text: classes.text }} onClick={clickHandler} />\n        </ConnectPersonaBoundary>\n    )\n}\n","import { noop } from 'lodash-es'\nimport { Flags } from '@masknet/flags'\nimport { DOMProxy, type LiveSelector, MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { getInjectNodeInfo } from '../../utils/avatar.js'\nimport { searchRetweetAvatarSelector, searchTweetAvatarSelector } from '../../utils/selector.js'\nimport { MiniAvatarBorder } from './MiniAvatarBorder.js'\nimport { activatedSiteAdaptorUI } from '../../../../site-adaptor-infra/ui.js'\nimport { getUserId } from '../../utils/user.js'\nimport { startWatch } from '../../../../utils/startWatch.js'\n\nfunction _(main: () => LiveSelector<HTMLElement>, signal: AbortSignal) {\n    startWatch(\n        new MutationObserverWatcher(main()).useForeach((ele, _, meta) => {\n            let remover = noop\n            const remove = () => remover()\n\n            const run = async () => {\n                const userId = getUserId(ele)\n                const info = getInjectNodeInfo(ele.firstChild as HTMLElement)\n                if (!info) return\n\n                const proxy = DOMProxy({\n                    afterShadowRootInit: Flags.shadowRootInit,\n                })\n                proxy.realCurrent = info.element.firstChild as HTMLElement\n                const root = attachReactTreeWithContainer(proxy.afterShadow, { untilVisible: true, signal })\n                root.render(\n                    <div style={{ position: 'absolute', top: 0, left: 0, zIndex: 2 }}>\n                        <MiniAvatarBorder\n                            avatarType={info.avatarType}\n                            size={info.width}\n                            screenName={\n                                userId ||\n                                activatedSiteAdaptorUI!.collecting.identityProvider?.recognized.value.identifier\n                                    ?.userId ||\n                                ''\n                            }\n                        />\n                    </div>,\n                )\n                remover = root.destroy\n            }\n\n            run()\n            return {\n                onNodeMutation: run,\n                onTargetChanged: run,\n                onRemove: remove,\n            }\n        }),\n        signal,\n    )\n}\n\nexport async function injectUserNFTAvatarAtTweet(signal: AbortSignal) {\n    _(searchTweetAvatarSelector, signal)\n    _(searchRetweetAvatarSelector, signal)\n}\n","import { memo } from 'react'\nimport { Link } from '@mui/material'\nimport type { RenderFragmentsContextType } from '@masknet/typed-message-react'\nimport { useTagEnhancer } from '../../../../shared-ui/TypedMessageRender/Components/Text.js'\n\nexport const TwitterRenderFragments: RenderFragmentsContextType = {\n    AtLink: memo(function (props) {\n        const target = '/' + props.children.slice(1)\n        return <Link href={target} children={props.children} fontSize=\"inherit\" />\n    }),\n    HashLink: memo(function (props) {\n        const text = props.children.slice(1)\n        const target = `/hashtag/${encodeURIComponent(text)}?src=hashtag_click`\n        const { hasMatch, ...events } = useTagEnhancer('hash', text)\n        return (\n            <Link {...events} href={target} fontSize=\"inherit\">\n                {props.children}\n                {props.suggestedPostImage}\n            </Link>\n        )\n    }),\n    CashLink: memo(function (props) {\n        const target = `/search?q=${encodeURIComponent(props.children)}&src=cashtag_click`\n        const { hasMatch, ...events } = useTagEnhancer('cash', props.children.slice(1))\n        return <Link {...events} href={target} children={props.children} fontSize=\"inherit\" />\n    }),\n    Image: () => null,\n}\n","import { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { isProfilePageLike, searchProfileCoverSelector } from '../utils/selector.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport { ProfileCover } from '../../../components/InjectedComponents/ProfileCover.js'\n\nexport function injectProfileCover(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(searchProfileCoverSelector())\n    startWatch(watcher, {\n        signal,\n        missingReportRule: {\n            name: 'profile page cover',\n            rule: isProfilePageLike,\n        },\n    })\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { signal }).render(<ProfileCoverAtTwitter />)\n}\n\nfunction ProfileCoverAtTwitter() {\n    return <ProfileCover />\n}\n","import { Twitter } from '@masknet/web3-providers'\nimport { RSS3_KEY_SITE, NFTAvatarMiniClip, NFTBadgeTimeline } from '@masknet/plugin-avatar'\nimport { useQuery } from '@tanstack/react-query'\n\ninterface Props {\n    className?: string\n    clipPathId: string\n    size: number\n    userId?: string\n}\nexport function AvatarDecoration({ clipPathId, userId, className, size }: Props) {\n    const { data: user } = useQuery({\n        queryKey: ['twitter', 'profile', 'check-nft-avatar', userId],\n        queryFn: () => {\n            if (!userId) return null\n            return Twitter.getUserByScreenName(userId, true)\n        },\n    })\n\n    if (!userId || !user) return null\n\n    return user.has_nft_avatar ? (\n        <NFTAvatarMiniClip className={className} id={clipPathId} size={size} screenName={userId} />\n    ) : (\n        <NFTBadgeTimeline\n            classes={{ root: className }}\n            userId={userId}\n            avatarId={Twitter.getAvatarId(user.avatarURL)}\n            height={size}\n            width={size}\n            siteKey={RSS3_KEY_SITE.TWITTER}\n        />\n    )\n}\n","import { memo, useCallback, useEffect, useRef, useState } from 'react'\nimport { v4 as uuid } from 'uuid'\nimport { Icons } from '@masknet/icons'\nimport {\n    AddressItem,\n    CopyButton,\n    Image,\n    TokenWithSocialGroupMenu,\n    useCollectionByTwitterHandler,\n} from '@masknet/shared'\nimport { CrossIsolationMessages, EMPTY_LIST, type SocialAccount, type SocialIdentity } from '@masknet/shared-base'\nimport { useAnchor } from '@masknet/shared-base-ui'\nimport { makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { TrendingAPI } from '@masknet/web3-providers/types'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { ChainId } from '@masknet/web3-shared-evm'\nimport { Box, Link, Skeleton, Typography } from '@mui/material'\nimport type { BoxProps } from '@mui/system'\nimport { PluginTraderMessages } from '@masknet/plugin-trader'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { AvatarDecoration } from './AvatarDecoration.js'\n\nconst useStyles = makeStyles<void, 'avatarDecoration'>()((theme, _, refs) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 4,\n    },\n    avatar: {\n        position: 'relative',\n        height: 40,\n        width: 40,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexShrink: 0,\n        flexGrow: 0,\n        filter: 'drop-shadow(0px 6px 12px rgba(28, 104, 243, 0.2))',\n        backdropFilter: 'blur(16px)',\n        '& img': {\n            position: 'absolute',\n            borderRadius: '100%',\n            // Adjust to fit the rainbow border.\n            transform: 'scale(0.94, 0.96) translate(0, 1px)',\n        },\n        [`& .${refs.avatarDecoration}`]: {\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            width: '100%',\n            height: '100%',\n            transform: 'scale(1)',\n        },\n    },\n    avatarImageContainer: {\n        borderRadius: '50%',\n    },\n    avatarDecoration: {},\n    description: {\n        height: 40,\n        marginLeft: 10,\n        overflow: 'auto',\n        flexGrow: 1,\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n        '& :focus:not(:focus-visible)': {\n            outline: 0,\n        },\n    },\n    nickname: {\n        color: theme.palette.text.primary,\n        fontWeight: 700,\n        fontSize: 18,\n        lineHeight: '22px',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n    },\n    addressRow: {\n        fontSize: 14,\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 2,\n    },\n    address: {\n        color: theme.palette.text.primary,\n        fontSize: 14,\n        height: 18,\n        fontWeight: 400,\n        lineHeight: '18px',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n    },\n    linkIcon: {\n        lineHeight: '14px',\n        height: 14,\n        overflow: 'hidden',\n        color: theme.palette.maskColor.second,\n        cursor: 'pointer',\n        flexShrink: 0,\n    },\n}))\n\ninterface ProfileBarProps extends BoxProps {\n    identity: SocialIdentity\n    socialAccounts: Array<SocialAccount<Web3Helper.ChainIdAll>>\n    address?: string\n    onAddressChange?: (address: string) => void\n}\n\n/**\n * What a Profile includes:\n * - Website info\n * - Wallets\n */\nexport const ProfileBar = memo<ProfileBarProps>(function ProfileBar({\n    socialAccounts,\n    address,\n    identity,\n    onAddressChange,\n    className,\n    children,\n    ...rest\n}) {\n    const { classes, theme, cx } = useStyles()\n    const t = useMaskSharedTrans()\n    const { current: avatarClipPathId } = useRef<string>(uuid())\n    const { anchorEl, anchorBounding } = useAnchor()\n\n    const { value: collectionList = EMPTY_LIST } = useCollectionByTwitterHandler(identity.identifier?.userId)\n\n    const Others = useWeb3Others()\n    const { chainId } = useChainContext()\n\n    const [walletMenuOpen, setWalletMenuOpen] = useState(false)\n    const closeMenu = useCallback(() => setWalletMenuOpen(false), [])\n    useEffect(() => {\n        const closeMenu = () => setWalletMenuOpen(false)\n        window.addEventListener('scroll', closeMenu, false)\n        return () => {\n            window.removeEventListener('scroll', closeMenu, false)\n        }\n    }, [])\n    const selectedAccount = socialAccounts.find((x) => isSameAddress(x.address, address))\n\n    return (\n        <Box className={cx(classes.root, className)} {...rest}>\n            <div className={classes.avatar}>\n                <Image\n                    src={identity.avatar}\n                    height={40}\n                    width={40}\n                    alt={identity.nickname}\n                    containerProps={{\n                        className: classes.avatarImageContainer,\n                        style: {\n                            WebkitClipPath: `url(#${avatarClipPathId}-clip-path)`,\n                        },\n                    }}\n                />\n                <AvatarDecoration\n                    className={classes.avatarDecoration}\n                    clipPathId={avatarClipPathId}\n                    userId={identity.identifier?.userId}\n                    size={40}\n                />\n            </div>\n            <Box className={classes.description}>\n                <Typography className={classes.nickname} title={identity.nickname}>\n                    {identity.nickname}\n                </Typography>\n                {address ? (\n                    <div className={classes.addressRow}>\n                        <AddressItem\n                            socialAccount={selectedAccount}\n                            disableLinkIcon\n                            TypographyProps={{ className: classes.address }}\n                        />\n                        <CopyButton size={14} className={classes.linkIcon} text={address} />\n                        <Link\n                            href={Others.explorerResolver.addressLink(chainId ?? ChainId.Mainnet, address)}\n                            target=\"_blank\"\n                            title={t.view_on_explorer()}\n                            rel=\"noopener noreferrer\"\n                            onClick={(event) => {\n                                event.stopPropagation()\n                            }}\n                            sx={{ outline: 0 }}\n                            className={classes.linkIcon}>\n                            <Icons.LinkOut size={14} />\n                        </Link>\n                        <Icons.ArrowDrop\n                            size={14}\n                            color={theme.palette.text.primary}\n                            onClick={() => {\n                                setWalletMenuOpen((v) => !v)\n                            }}\n                        />\n                    </div>\n                ) : null}\n            </Box>\n\n            <TokenWithSocialGroupMenu\n                open={walletMenuOpen}\n                onClose={closeMenu}\n                fromSocialCard\n                onAddressChange={onAddressChange}\n                currentAddress={address}\n                socialAccounts={socialAccounts}\n                collectionList={collectionList}\n                onTokenChange={(currentResult) => {\n                    setWalletMenuOpen(false)\n                    if (!anchorBounding) return\n                    PluginTraderMessages.trendingAnchorObserved.sendToLocal({\n                        name: identity.identifier?.userId || '',\n                        identity,\n                        address,\n                        anchorBounding,\n                        anchorEl,\n                        type: TrendingAPI.TagType.HASH,\n                        isCollectionProjectPopper: true,\n                        currentResult,\n                    })\n\n                    CrossIsolationMessages.events.profileCardEvent.sendToLocal({ open: false })\n                }}\n                anchorPosition={{\n                    top: 60,\n                    left: 60,\n                }}\n                anchorReference=\"anchorPosition\"\n            />\n\n            {children}\n        </Box>\n    )\n})\n\ntype ProfileBarSkeletonProps = Omit<ProfileBarProps, 'identity' | 'onAddressChange'>\n\n// This Skeleton is not fully empty, but also has user address\nexport const ProfileBarSkeleton = memo<ProfileBarSkeletonProps>(function ProfileBarSkeleton({\n    socialAccounts,\n    address,\n    className,\n    children,\n    ...rest\n}) {\n    const { classes, cx } = useStyles()\n    const t = useMaskSharedTrans()\n\n    const Others = useWeb3Others()\n    const { chainId } = useChainContext()\n\n    const selectedAccount = socialAccounts.find((x) => isSameAddress(x.address, address))\n\n    return (\n        <Box className={cx(classes.root, className)} {...rest}>\n            <div className={classes.avatar}>\n                <Skeleton variant=\"circular\" height={40} width={40} />\n            </div>\n            <Box className={classes.description}>\n                <Skeleton variant=\"text\" className={classes.nickname} width={100} />\n                {address ? (\n                    <div className={classes.addressRow}>\n                        <AddressItem\n                            socialAccount={selectedAccount}\n                            disableLinkIcon\n                            TypographyProps={{ className: classes.address }}\n                        />\n                        <CopyButton size={14} className={classes.linkIcon} text={address} />\n                        <Link\n                            href={Others.explorerResolver.addressLink(chainId ?? ChainId.Mainnet, address)}\n                            target=\"_blank\"\n                            title={t.view_on_explorer()}\n                            rel=\"noopener noreferrer\"\n                            onClick={(event) => {\n                                event.stopPropagation()\n                            }}\n                            sx={{ outline: 0 }}\n                            className={classes.linkIcon}>\n                            <Icons.LinkOut size={14} />\n                        </Link>\n                    </div>\n                ) : null}\n            </Box>\n            {children}\n        </Box>\n    )\n})\n","import { Icons } from '@masknet/icons'\nimport { useIsMinimalMode } from '@masknet/plugin-infra/content-script'\nimport { TipButton } from '@masknet/plugin-tips'\nimport { PersonaSelectPanelModal, SocialAccountList, useCurrentPersonaConnectStatus } from '@masknet/shared'\nimport {\n    CrossIsolationMessages,\n    EMPTY_LIST,\n    PluginID,\n    type SocialAccount,\n    type SocialIdentity,\n} from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { useQuery } from '@tanstack/react-query'\nimport type { HTMLProps } from 'react'\nimport { useLastRecognizedIdentity } from '../../DataSource/useActivatedUI.js'\nimport { useCurrentPersona, usePersonasFromDB } from '../../../../shared-ui/hooks/index.js'\nimport { ProfileBar, ProfileBarSkeleton } from './ProfileBar.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        title: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n        },\n        profileBar: {\n            width: '100%',\n        },\n        operations: {\n            display: 'flex',\n            alignItems: 'center',\n            marginLeft: 'auto',\n        },\n        gearIcon: {\n            marginLeft: theme.spacing(1),\n            color: theme.palette.text.primary,\n            cursor: 'pointer',\n        },\n        tipButton: {\n            marginLeft: theme.spacing(1),\n            width: 40,\n            height: 40,\n            borderRadius: 40,\n            border: `1px solid ${theme.palette.maskColor.line}`,\n        },\n    }\n})\n\nfunction openWeb3ProfileSettingDialog() {\n    CrossIsolationMessages.events.web3ProfileDialogEvent.sendToLocal({\n        open: true,\n    })\n}\n\nfunction Web3ProfileSettingButton() {\n    const { classes } = useStyles()\n\n    const personas = usePersonasFromDB()\n    const persona = useCurrentPersona()\n    const identity = useLastRecognizedIdentity()\n    const { value: status, loading } = useCurrentPersonaConnectStatus(\n        personas,\n        persona?.identifier,\n        undefined,\n        identity,\n    )\n\n    if (loading) return null\n\n    return (\n        <Icons.Gear\n            className={classes.gearIcon}\n            onClick={() => {\n                if (status.connected && status.verified) {\n                    openWeb3ProfileSettingDialog()\n                } else {\n                    PersonaSelectPanelModal.open({\n                        enableVerify: !status.verified,\n                        finishTarget: PluginID.Web3Profile,\n                    })\n                }\n            }}\n        />\n    )\n}\n\ninterface ProfileCardTitleProps extends HTMLProps<HTMLDivElement> {\n    identity?: SocialIdentity\n    socialAccounts: Array<SocialAccount<Web3Helper.ChainIdAll>>\n    address?: string\n    onAddressChange?(address: string): void\n}\nexport function ProfileCardTitle({\n    className,\n    socialAccounts,\n    address,\n    identity,\n    onAddressChange,\n    ...rest\n}: ProfileCardTitleProps) {\n    const me = useLastRecognizedIdentity()\n    const { classes, cx } = useStyles()\n\n    const userId = identity?.identifier?.userId\n    const itsMe = !!userId && userId === me?.identifier?.userId\n    const { data: nextIdBindings = EMPTY_LIST } = useQuery({\n        queryKey: ['next-id', 'profiles-by-twitter-id', userId],\n        enabled: !!userId,\n        queryFn: async () => {\n            if (!userId) return EMPTY_LIST\n            return NextIDProof.queryProfilesByTwitterId(userId)\n        },\n    })\n    const tipsDisabled = useIsMinimalMode(PluginID.Tips)\n\n    if (!identity)\n        return (\n            <div className={cx(classes.title, className)} {...rest}>\n                <ProfileBarSkeleton className={classes.profileBar} socialAccounts={socialAccounts} address={address} />\n            </div>\n        )\n\n    return (\n        <div className={cx(classes.title, className)} {...rest}>\n            <ProfileBar\n                className={classes.profileBar}\n                identity={identity}\n                socialAccounts={socialAccounts}\n                address={address}\n                onAddressChange={onAddressChange}>\n                <div className={classes.operations}>\n                    {nextIdBindings.length ? (\n                        <SocialAccountList\n                            nextIdBindings={nextIdBindings}\n                            userId={userId}\n                            disablePortal\n                            anchorPosition={{\n                                top: 50,\n                                left: itsMe ? 390 : 370,\n                            }}\n                            anchorReference=\"anchorPosition\"\n                        />\n                    ) : null}\n                    {itsMe ? (\n                        <Web3ProfileSettingButton />\n                    ) : !tipsDisabled ? (\n                        <TipButton className={classes.tipButton} receiver={identity.identifier} />\n                    ) : null}\n                </div>\n            </ProfileBar>\n        </div>\n    )\n}\n","import { useEffect, useMemo, useState, memo } from 'react'\nimport { Trans } from 'react-i18next'\nimport { useUpdateEffect } from 'react-use'\nimport { first } from 'lodash-es'\nimport { TabContext } from '@mui/lab'\nimport { Tab, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport {\n    useActivatedPluginsSiteAdaptor,\n    usePluginTransField,\n    getProfileCardTabContent,\n} from '@masknet/plugin-infra/content-script'\nimport { addressSorter, useSocialAccountsBySettings } from '@masknet/shared'\nimport { getAvailablePlugins } from '@masknet/plugin-infra'\nimport { useLocationChange } from '@masknet/shared-base-ui'\nimport {\n    EMPTY_LIST,\n    PluginID,\n    NetworkPluginID,\n    type SocialIdentity,\n    MaskMessages,\n    type SocialAddress,\n    SocialAddressType,\n} from '@masknet/shared-base'\nimport { makeStyles, MaskTabList, useTabs } from '@masknet/theme'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { ChainId } from '@masknet/web3-shared-evm'\nimport { DefaultWeb3ContextProvider, ScopedDomainsContainer } from '@masknet/web3-hooks-base'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventType, EventID } from '@masknet/web3-telemetry/types'\nimport Services from '#services'\nimport { ProfileCardTitle } from './ProfileCardTitle.js'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\n\ninterface Props extends withClasses<'text' | 'button' | 'root'> {\n    identity?: SocialIdentity\n    currentAddress?: string\n}\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        root: {\n            position: 'relative',\n            display: 'flex',\n            flexDirection: 'column',\n            overflow: 'auto',\n            height: '100%',\n            overscrollBehavior: 'contain',\n            borderRadius: theme.spacing(1.5),\n            boxShadow: theme.palette.shadow.popup,\n            backgroundColor: theme.palette.maskColor.bottom,\n        },\n        header: {\n            background: theme.palette.maskColor.modalTitleBg,\n            padding: theme.spacing(2, 2, 0, 2),\n            boxSizing: 'border-box',\n            flexShrink: 0,\n        },\n        content: {\n            position: 'relative',\n            flexGrow: 1,\n            backgroundColor: theme.palette.maskColor.bottom,\n            overflow: 'auto',\n            '::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        tabs: {\n            display: 'flex',\n            position: 'relative',\n            paddingTop: 0,\n            marginTop: theme.spacing(2),\n        },\n        tabRoot: {\n            color: 'blue',\n        },\n        footer: {\n            position: 'absolute',\n            height: 48,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n            background: theme.palette.maskColor.bg,\n            backdropFilter: 'blur(5px)',\n            padding: theme.spacing(1.5),\n            boxSizing: 'border-box',\n            fontWeight: 700,\n            zIndex: 2,\n        },\n        cardIcon: {\n            filter: 'drop-shadow(0px 6px 12px rgba(0, 65, 185, 0.2))',\n            marginLeft: theme.spacing(0.25),\n        },\n        cardName: {\n            color: theme.palette.maskColor.main,\n            fontWeight: 700,\n            marginRight: 'auto',\n            marginLeft: theme.spacing(0.5),\n        },\n        powered: {\n            color: theme.palette.text.secondary,\n            fontWeight: 700,\n        },\n    }\n})\n\nexport const ProfileCard = memo(({ identity, currentAddress, ...rest }: Props) => {\n    const { classes } = useStyles(undefined, { props: { classes: rest.classes } })\n\n    const t = useMaskSharedTrans()\n    const translate = usePluginTransField()\n    const fallbackAccounts = useMemo(() => {\n        return [\n            {\n                address: currentAddress,\n                type: SocialAddressType.Address,\n                pluginID: NetworkPluginID.PLUGIN_EVM,\n                chainId: ChainId.Mainnet,\n                label: '',\n            },\n        ] as Array<SocialAddress<ChainId>>\n    }, [currentAddress])\n    const {\n        data: allSocialAccounts,\n        isLoading,\n        refetch: retrySocialAddress,\n    } = useSocialAccountsBySettings(identity, undefined, addressSorter, (a, b, c, d) =>\n        Services.Identity.signWithPersona(a, b, c, location.origin, d),\n    )\n    const socialAccounts = useMemo(() => {\n        const accounts = isLoading && !allSocialAccounts.length ? fallbackAccounts : allSocialAccounts\n        return accounts.filter((x) => x.pluginID === NetworkPluginID.PLUGIN_EVM)\n    }, [allSocialAccounts, fallbackAccounts, isLoading])\n\n    const [selectedAddress, setSelectedAddress] = useState<string | undefined>(currentAddress)\n    const firstAddress = first(socialAccounts)?.address\n    const activeAddress = selectedAddress || firstAddress\n\n    const selectedSocialAccount = useMemo(\n        () => socialAccounts.find((x) => isSameAddress(x.address, activeAddress)),\n        [activeAddress, socialAccounts],\n    )\n\n    const userId = identity?.identifier?.userId\n\n    useEffect(() => {\n        return MaskMessages.events.ownProofChanged.on(() => {\n            retrySocialAddress()\n        })\n    }, [retrySocialAddress])\n\n    const activatedPlugins = useActivatedPluginsSiteAdaptor('any')\n    const displayPlugins = getAvailablePlugins(activatedPlugins, (plugins) => {\n        return plugins\n            .flatMap((x) => x.ProfileCardTabs?.map((y) => ({ ...y, pluginID: x.ID })) ?? EMPTY_LIST)\n            .filter((x) => {\n                const isAllowed = x.pluginID === PluginID.RSS3 || x.pluginID === PluginID.Collectible\n                const shouldDisplay = x.Utils?.shouldDisplay?.(identity, selectedSocialAccount) ?? true\n                return isAllowed && shouldDisplay\n            })\n            .sort((a, z) => a.priority - z.priority)\n    })\n    const tabs = displayPlugins.map((x) => ({\n        id: x.ID,\n        label: typeof x.label === 'string' ? x.label : translate(x.pluginID, x.label),\n    }))\n\n    const [currentTab, onChange] = useTabs(first(tabs)?.id ?? PluginID.Collectible, ...tabs.map((tab) => tab.id))\n\n    const component = useMemo(() => {\n        if (currentTab === `${PluginID.RSS3}_Social`)\n            Telemetry.captureEvent(EventType.Access, EventID.EntryTimelineHoverUserSocialSwitchTo)\n        if (currentTab === `${PluginID.RSS3}_Activities`)\n            Telemetry.captureEvent(EventType.Access, EventID.EntryTimelineHoverUserActivitiesSwitchTo)\n        if (currentTab === `${PluginID.RSS3}_Donation`)\n            Telemetry.captureEvent(EventType.Access, EventID.EntryTimelineHoverUserDonationsSwitchTo)\n        const Component = getProfileCardTabContent(currentTab)\n        return <Component identity={identity} socialAccount={selectedSocialAccount} />\n    }, [currentTab, identity?.publicKey, selectedSocialAccount])\n\n    useLocationChange(() => {\n        onChange(undefined, first(tabs)?.id)\n    })\n\n    useUpdateEffect(() => {\n        onChange(undefined, first(tabs)?.id)\n    }, [userId])\n\n    const scopedDomainsMap: Record<string, string> = useMemo(() => {\n        return socialAccounts.reduce((map, account) => {\n            if (!account.label) return map\n            return {\n                ...map,\n                [account.address.toLowerCase()]: account.label,\n            }\n        }, {})\n    }, [socialAccounts])\n\n    return (\n        <DefaultWeb3ContextProvider value={{ chainId: ChainId.Mainnet }}>\n            <ScopedDomainsContainer.Provider initialState={scopedDomainsMap}>\n                <div className={classes.root}>\n                    <div className={classes.header}>\n                        <ProfileCardTitle\n                            socialAccounts={socialAccounts}\n                            address={activeAddress}\n                            onAddressChange={setSelectedAddress}\n                            identity={identity}\n                        />\n                        {tabs.length > 0 && currentTab ? (\n                            <div className={classes.tabs}>\n                                <TabContext value={currentTab}>\n                                    <MaskTabList variant=\"base\" onChange={onChange} aria-label=\"Web3Tabs\">\n                                        {tabs.map((tab) => (\n                                            <Tab\n                                                key={tab.id}\n                                                label={tab.label}\n                                                value={tab.id}\n                                                classes={{ root: classes.tabRoot, textColorPrimary: classes.tabRoot }}\n                                            />\n                                        ))}\n                                    </MaskTabList>\n                                </TabContext>\n                            </div>\n                        ) : null}\n                    </div>\n                    <div className={classes.content}>{component}</div>\n                    <div className={classes.footer}>\n                        <Icons.Web3ProfileCard className={classes.cardIcon} size={24} />\n                        <Typography className={classes.cardName}>{t.web3_profile_card_name()}</Typography>\n                        <Typography variant=\"body1\" className={classes.powered}>\n                            <Trans\n                                i18nKey=\"powered_by_whom\"\n                                values={{ whom: 'RSS3' }}\n                                components={{\n                                    span: (\n                                        <Typography\n                                            fontWeight={700}\n                                            fontSize=\"inherit\"\n                                            variant=\"body1\"\n                                            component=\"strong\"\n                                            color={(theme) => theme.palette.text.primary}\n                                        />\n                                    ),\n                                }}\n                            />\n                        </Typography>\n                        <Icons.RSS3 size={24} sx={{ ml: '4px' }} />\n                    </div>\n                </div>\n            </ScopedDomainsContainer.Provider>\n        </DefaultWeb3ContextProvider>\n    )\n})\n\nProfileCard.displayName = 'ProfileCard'\n","export const CARD_WIDTH = 450\nexport const CARD_HEIGHT = 500\n","import { CrossIsolationMessages } from '@masknet/shared-base'\nimport { useDialogStacking } from '@masknet/theme'\nimport type { PopperPlacementType } from '@mui/material'\nimport { useCallback, useEffect, useRef, useState, type RefObject } from 'react'\nimport { CARD_HEIGHT } from './constants.js'\n\ninterface Result {\n    active: boolean\n    placement: PopperPlacementType\n}\n\nconst LEAVE_DURATION = 500\n\nexport function useControlProfileCard(holderRef: RefObject<HTMLDivElement>): Result {\n    const hoverRef = useRef(false)\n    const closeTimerRef = useRef<ReturnType<typeof setTimeout>>()\n    const skipClick = useRef(false)\n\n    const [active, setActive] = useState(false)\n    const [placement, setPlacement] = useState<PopperPlacementType>('bottom')\n    const hasDialogRef = useRef(false)\n    const { stack } = useDialogStacking()\n    hasDialogRef.current = stack.length > 0\n\n    const hideProfileCard = useCallback((byClick?: boolean) => {\n        if (hoverRef.current || hasDialogRef.current) return\n        clearTimeout(closeTimerRef.current)\n        closeTimerRef.current = setTimeout(() => {\n            // Discard the click that would open from external\n            if (byClick && skipClick.current) {\n                skipClick.current = false\n                return\n            }\n            setActive(false)\n        }, LEAVE_DURATION)\n    }, [])\n\n    const showProfileCard = useCallback((placement: PopperPlacementType) => {\n        clearTimeout(closeTimerRef.current)\n        setActive(true)\n        setPlacement(placement)\n    }, [])\n    useEffect(() => {\n        const holder = holderRef.current\n        if (!holder) {\n            hideProfileCard()\n            return\n        }\n        const enter = () => {\n            hoverRef.current = true\n            clearTimeout(closeTimerRef.current)\n        }\n        const leave = () => {\n            hoverRef.current = false\n            hideProfileCard()\n        }\n        holder.addEventListener('mouseenter', enter)\n        holder.addEventListener('mouseleave', leave)\n        return () => {\n            holder.removeEventListener('mouseenter', enter)\n            holder.removeEventListener('mouseleave', leave)\n        }\n    }, [holderRef.current])\n\n    useEffect(() => {\n        return CrossIsolationMessages.events.profileCardEvent.on((event) => {\n            if (!event.open) {\n                hideProfileCard()\n                return\n            }\n            if (event.external) skipClick.current = true\n            const reachedBottom = event.anchorBounding.bottom + CARD_HEIGHT > window.innerHeight\n\n            showProfileCard(reachedBottom ? 'auto' : 'bottom')\n        })\n    }, [])\n\n    useEffect(() => {\n        const onClick = (event: MouseEvent) => {\n            // `NODE.contains(other)` doesn't work for cross multiple layer of Shadow DOM\n            if (event.composedPath()?.includes(holderRef.current!)) return\n            hoverRef.current = false\n            hideProfileCard(true)\n        }\n        document.body.addEventListener('click', onClick)\n        return () => {\n            document.body.removeEventListener('click', onClick)\n        }\n    }, [])\n\n    return { placement, active }\n}\n","import { CrossIsolationMessages, ProfileIdentifier, type SocialIdentity } from '@masknet/shared-base'\nimport { AnchorProvider } from '@masknet/shared-base-ui'\nimport { ShadowRootPopper, makeStyles } from '@masknet/theme'\nimport { Twitter } from '@masknet/web3-providers'\nimport { Fade } from '@mui/material'\nimport { useQuery } from '@tanstack/react-query'\nimport { useEffect, useRef, useState } from 'react'\nimport { useSocialIdentity } from '../../../../components/DataSource/useActivatedUI.js'\nimport { ProfileCard } from '../../../../components/InjectedComponents/ProfileCard/index.js'\nimport { attachReactTreeWithoutContainer } from '../../../../utils/shadow-root.js'\nimport { twitterBase } from '../../base.js'\nimport { CARD_HEIGHT, CARD_WIDTH } from './constants.js'\nimport { useControlProfileCard } from './useControlProfileCard.js'\n\nexport function injectProfileCardHolder(signal: AbortSignal) {\n    attachReactTreeWithoutContainer('profile-card', <ProfileCardHolder />, signal)\n}\n\nconst useStyles = makeStyles()({\n    root: {\n        borderRadius: 10,\n        width: CARD_WIDTH,\n        maxWidth: CARD_WIDTH,\n        height: CARD_HEIGHT,\n        maxHeight: CARD_HEIGHT,\n    },\n})\n\nfunction ProfileCardHolder() {\n    const { classes } = useStyles()\n    const holderRef = useRef<HTMLDivElement>(null)\n    const [twitterId, setTwitterId] = useState('')\n    const [badgeBounding, setBadgeBounding] = useState<DOMRect>()\n    const { active, placement } = useControlProfileCard(holderRef)\n    const [address, setAddress] = useState('')\n    const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n\n    useEffect(() => {\n        return CrossIsolationMessages.events.profileCardEvent.on((event) => {\n            if (!event.open) return\n            setAddress(event.address ?? '')\n            setTwitterId(event.userId)\n            setBadgeBounding(event.anchorBounding)\n            setAnchorEl(event.anchorEl)\n        })\n    }, [])\n\n    const { data: identity } = useQuery({\n        queryKey: ['twitter', 'profile', twitterId],\n        queryFn: () => Twitter.getUserByScreenName(twitterId),\n        select: (user) => {\n            if (!user) return null\n            return {\n                identifier: ProfileIdentifier.of(twitterBase.networkIdentifier, user.screenName).unwrapOr(undefined),\n                nickname: user.nickname,\n                avatar: user.avatarURL,\n                bio: user.bio,\n                homepage: user.homepage,\n            } as SocialIdentity\n        },\n    })\n\n    const { data: resolvedIdentity } = useSocialIdentity(identity)\n\n    return (\n        <Fade in={active} easing=\"linear\" timeout={250}>\n            <ShadowRootPopper\n                open={!!anchorEl}\n                anchorEl={anchorEl}\n                keepMounted\n                placement={placement}\n                className={classes.root}\n                ref={holderRef}\n                onClick={stopPropagation}>\n                <AnchorProvider anchorEl={anchorEl} anchorBounding={badgeBounding}>\n                    <ProfileCard key={twitterId} identity={resolvedIdentity || undefined} currentAddress={address} />\n                </AnchorProvider>\n            </ShadowRootPopper>\n        </Fade>\n    )\n}\n\nfunction stopPropagation(event: React.MouseEvent) {\n    event.stopPropagation()\n}\n","import { noop } from 'lodash-es'\nimport { Flags } from '@masknet/flags'\nimport { Plugin } from '@masknet/plugin-infra'\nimport { DOMProxy, MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { Avatar } from '../../../../components/InjectedComponents/Avatar.js'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { querySelectorAll } from '../../utils/selector.js'\n\nfunction getTwitterId(ele: HTMLElement) {\n    const profileLink = ele.querySelector('a[role=\"link\"]') as HTMLAnchorElement\n    if (!profileLink) return\n    return profileLink.getAttribute('href')?.slice(1)\n}\n\nfunction inpageAvatarSelector() {\n    return querySelectorAll<HTMLDivElement>(\n        [\n            // Avatars in post\n            'main[role=\"main\"] [data-testid=\"cellInnerDiv\"] [data-testid=\"Tweet-User-Avatar\"]',\n            // Avatars in side panel\n            '[data-testid=\"UserCell\"] [data-testid^=\"UserAvatar-Container-\"]',\n            // Avatars in space sheet dialog\n            '[data-testid=sheetDialog] [data-testid^=\"UserAvatar-Container-\"]',\n            // Avatars in space dock\n            '[data-testid=SpaceDockExpanded] [data-testid^=UserAvatar-Container-]',\n        ].join(','),\n    )\n}\n\nexport async function injectAvatar(signal: AbortSignal) {\n    startWatch(\n        new MutationObserverWatcher(inpageAvatarSelector()).useForeach((ele) => {\n            let remover = noop\n            const remove = () => remover()\n\n            const run = async () => {\n                const twitterId = getTwitterId(ele)\n                if (!twitterId) return\n\n                const proxy = DOMProxy({\n                    afterShadowRootInit: Flags.shadowRootInit,\n                })\n                proxy.realCurrent = ele.firstChild as HTMLElement\n                const isSuggestion = ele.closest('[data-testid=UserCell]')\n                const sourceType = isSuggestion\n                    ? Plugin.SiteAdaptor.AvatarRealmSourceType.Suggestion\n                    : Plugin.SiteAdaptor.AvatarRealmSourceType.Post\n\n                const root = attachReactTreeWithContainer(proxy.afterShadow, { untilVisible: true, signal })\n                root.render(\n                    <div\n                        style={{\n                            position: 'absolute',\n                            right: -4,\n                            bottom: -4,\n                            width: 16,\n                            height: 16,\n                            zIndex: 2,\n                        }}>\n                        <Avatar userId={twitterId} sourceType={sourceType} />\n                    </div>,\n                )\n                remover = root.destroy\n            }\n\n            run()\n            return {\n                onNodeMutation: run,\n                onTargetChanged: run,\n                onRemove: remove,\n            }\n        }),\n        signal,\n    )\n}\n","import { memo, useMemo, useState } from 'react'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { createInjectHooksRenderer, Plugin, useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport { EnhanceableSite, ProfileIdentifier } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { querySelectorAll } from '../../utils/selector.js'\nimport { startWatch } from '../../../../utils/startWatch.js'\n\nfunction selector() {\n    return querySelectorAll<HTMLElement>('[data-testid=conversation] div:not([tabindex]) div[dir] + div[dir]')\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    hide: {\n        display: 'none',\n    },\n    slot: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 999,\n        marginLeft: theme.spacing(0.5),\n        verticalAlign: 'top',\n    },\n}))\n\ninterface Props {\n    userId: string\n}\n\nfunction createRootElement() {\n    const span = document.createElement('span')\n    Object.assign(span.style, {\n        verticalAlign: 'bottom',\n        height: '21px',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'inline-flex',\n    } as CSSStyleDeclaration)\n    return span\n}\n\nconst ConversationLensSlot = memo(function ConversationLensSlot({ userId }: Props) {\n    const [disabled, setDisabled] = useState(true)\n    const { classes, cx } = useStyles()\n\n    const component = useMemo(() => {\n        const Component = createInjectHooksRenderer(\n            useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode,\n            (plugin) => plugin.Lens?.UI?.Content,\n            undefined,\n            createRootElement,\n        )\n        const identifier = ProfileIdentifier.of(EnhanceableSite.Twitter, userId).unwrapOr(null)\n        if (!identifier) return null\n\n        return (\n            <Component identity={identifier} slot={Plugin.SiteAdaptor.LensSlot.Sidebar} onStatusUpdate={setDisabled} />\n        )\n    }, [userId])\n\n    if (!component) return null\n\n    return <span className={cx(classes.slot, disabled ? classes.hide : null)}>{component}</span>\n})\n\n/**\n * Inject on conversation, including both DM drawer and message page (/messages/xxx)\n */\nexport function injectLensOnConversation(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(selector())\n    startWatch(watcher, signal)\n    watcher.useForeach((node, _, proxy) => {\n        const spans = node\n            .closest('[data-testid=conversation]')\n            ?.querySelectorAll<HTMLElement>('[tabindex] [dir] span:not([data-testid=tweetText])')\n        if (!spans) return\n        const userId = [...spans].reduce((id, node) => {\n            if (id) return id\n            if (node.textContent?.match(/@\\w/)) {\n                return node.textContent.trim().slice(1)\n            }\n            return ''\n        }, '')\n        if (!userId) return\n        attachReactTreeWithContainer(proxy.afterShadow, { signal, untilVisible: true }).render(\n            <ConversationLensSlot userId={userId} />,\n        )\n    })\n}\n","import { useMemo, useState } from 'react'\nimport { EnhanceableSite, ProfileIdentifier } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { createInjectHooksRenderer, Plugin, useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { querySelectorAll } from '../../utils/selector.js'\n\nfunction selector() {\n    return querySelectorAll<HTMLElement>('[data-testid=User-Name] div').filter((node) => {\n        return node.firstElementChild?.matches('a[role=link]:not([tabindex])')\n    })\n}\n\n// structure: <user-name> <user-id> <timestamp>\nexport function injectLensOnPost(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(selector())\n    startWatch(watcher, signal)\n    watcher.useForeach((node, _, proxy) => {\n        const link = node.querySelector('a[href][role=link]')\n        // To simplify the selector above, we do this checking manually\n        // <user-id> has tabindex=-1, <timestamp> has a child time element\n        if (link?.hasAttribute('tabindex') || link?.querySelector('time')) return\n        const href = link?.getAttribute('href')\n        const userId = href?.split('/')[1]\n        if (!userId) return\n        attachReactTreeWithContainer(proxy.afterShadow, { signal, untilVisible: true }).render(\n            <PostLensSlot userId={userId} />,\n        )\n    })\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    hide: {\n        display: 'none',\n    },\n    slot: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 999,\n        marginLeft: theme.spacing(0.5),\n        verticalAlign: 'top',\n    },\n}))\n\ninterface Props {\n    userId: string\n}\n\nfunction createRootElement() {\n    const span = document.createElement('span')\n    Object.assign(span.style, {\n        alignItems: 'center',\n        display: 'flex',\n    } as CSSStyleDeclaration)\n    return span\n}\nfunction PostLensSlot({ userId }: Props) {\n    const [disabled, setDisabled] = useState(true)\n    const { classes, cx } = useStyles()\n\n    const component = useMemo(() => {\n        const Component = createInjectHooksRenderer(\n            useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode,\n            (plugin) => plugin.Lens?.UI?.Content,\n            undefined,\n            createRootElement,\n        )\n        const identifier = ProfileIdentifier.of(EnhanceableSite.Twitter, userId).unwrap()\n        if (!identifier) return null\n\n        return <Component identity={identifier} slot={Plugin.SiteAdaptor.LensSlot.Post} onStatusUpdate={setDisabled} />\n    }, [userId])\n\n    if (!component) return null\n\n    return <span className={cx(classes.slot, disabled ? classes.hide : null)}>{component}</span>\n}\n","import { useMemo, useState } from 'react'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { createInjectHooksRenderer, Plugin, useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport { makeStyles } from '@masknet/theme'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { useCurrentVisitingIdentity } from '../../../../components/DataSource/useActivatedUI.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { querySelector } from '../../utils/selector.js'\n\nfunction selector() {\n    return querySelector<HTMLElement>('[data-testid=UserName] div[dir]')\n}\n\nexport function injectLensOnProfile(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(selector())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { signal }).render(<ProfileLensSlot />)\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    hide: {\n        display: 'none',\n    },\n    slot: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 999,\n        marginLeft: theme.spacing(0.5),\n        verticalAlign: 'top',\n    },\n}))\n\nfunction ProfileLensSlot() {\n    const visitingIdentity = useCurrentVisitingIdentity()\n    const [disabled, setDisabled] = useState(true)\n    const { classes, cx } = useStyles()\n\n    const component = useMemo(() => {\n        const Component = createInjectHooksRenderer(\n            useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode,\n            (plugin) => plugin.Lens?.UI?.Content,\n        )\n\n        return (\n            <Component\n                identity={visitingIdentity.identifier}\n                slot={Plugin.SiteAdaptor.LensSlot.ProfileName}\n                onStatusUpdate={setDisabled}\n            />\n        )\n    }, [visitingIdentity.identifier])\n\n    if (!component || !visitingIdentity.identifier) return null\n\n    return <span className={cx(classes.slot, disabled ? classes.hide : null)}>{component}</span>\n}\n","import { useMemo, useState } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { EnhanceableSite, ProfileIdentifier } from '@masknet/shared-base'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { createInjectHooksRenderer, Plugin, useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { querySelectorAll } from '../../utils/selector.js'\n\nfunction avatarSelector() {\n    return querySelectorAll<HTMLElement>(\n        '[data-testid=SpaceDockExpanded] [data-testid^=UserAvatar-Container-],[data-testid=sheetDialog] [data-testid^=UserAvatar-Container-]',\n    ).map((node) => {\n        const span = node.parentElement?.parentElement?.nextElementSibling?.querySelector('div > span + span > span')\n        return span\n    })\n}\n\n/**\n * Inject on space dock\n */\nexport function injectLensOnSpaceDock(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(avatarSelector())\n    startWatch(watcher, signal)\n    watcher.useForeach((node, _, proxy) => {\n        const avatar = node\n            .closest('div[dir]')\n            ?.previousElementSibling?.querySelector<HTMLElement>('[data-testid^=UserAvatar-Container-]')\n        if (!avatar) return\n        const userId = avatar.dataset.testid?.slice('UserAvatar-Container-'.length)\n        if (!userId) return\n        attachReactTreeWithContainer(proxy.afterShadow, { signal, untilVisible: true }).render(\n            <SpaceDockLensSlot userId={userId} />,\n        )\n    })\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    hide: {\n        display: 'none',\n    },\n    slot: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 999,\n        marginLeft: theme.spacing(0.5),\n        verticalAlign: 'top',\n    },\n}))\n\ninterface Props {\n    userId: string\n}\n\nfunction createRootElement() {\n    const span = document.createElement('span')\n    Object.assign(span.style, {\n        verticalAlign: 'bottom',\n        height: '21px',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'inline-flex',\n    } as CSSStyleDeclaration)\n    return span\n}\n\nfunction SpaceDockLensSlot({ userId }: Props) {\n    const [disabled, setDisabled] = useState(true)\n    const { classes, cx } = useStyles()\n\n    const component = useMemo(() => {\n        const Component = createInjectHooksRenderer(\n            useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode,\n            (plugin) => plugin.Lens?.UI?.Content,\n            undefined,\n            createRootElement,\n        )\n        const identifier = ProfileIdentifier.of(EnhanceableSite.Twitter, userId).unwrap()\n        if (!identifier) return null\n\n        return (\n            <Component identity={identifier} slot={Plugin.SiteAdaptor.LensSlot.Sidebar} onStatusUpdate={setDisabled} />\n        )\n    }, [userId])\n\n    if (!component) return null\n\n    return <span className={cx(classes.slot, disabled ? classes.hide : null)}>{component}</span>\n}\n","import { useMemo, useState } from 'react'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { createInjectHooksRenderer, Plugin, useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport { EnhanceableSite, ProfileIdentifier } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { querySelectorAll } from '../../utils/selector.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../../utils/startWatch.js'\n\nfunction selector() {\n    // [href^=\"/search\"] is a hash tag\n    return querySelectorAll<HTMLElement>(\n        '[data-testid=UserCell] div > a[role=link]:not([tabindex]):not([href^=\"/search\"]) [dir]:last-of-type',\n    )\n}\n\n/**\n * Inject on sidebar user cell\n */\nexport function injectLensOnUserCell(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(selector())\n    startWatch(watcher, signal)\n    watcher.useForeach((node, _, proxy) => {\n        const userId = node.closest('[role=link]')?.getAttribute('href')?.slice(1)\n        if (!userId) return\n        // Intended to set `untilVisible` to true, but mostly user cells are fixed and visible\n        attachReactTreeWithContainer(proxy.afterShadow, { signal }).render(<UserCellLensSlot userId={userId} />)\n    })\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    hide: {\n        display: 'none',\n    },\n    slot: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 999,\n        marginLeft: theme.spacing(0.5),\n        verticalAlign: 'top',\n    },\n}))\n\ninterface Props {\n    userId: string\n}\n\nfunction createRootElement() {\n    const span = document.createElement('span')\n    Object.assign(span.style, {\n        verticalAlign: 'bottom',\n        height: '21px',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n    } as CSSStyleDeclaration)\n    return span\n}\n\nfunction UserCellLensSlot({ userId }: Props) {\n    const [disabled, setDisabled] = useState(true)\n    const { classes, cx } = useStyles()\n\n    const component = useMemo(() => {\n        const Component = createInjectHooksRenderer(\n            useActivatedPluginsSiteAdaptor.visibility.useNotMinimalMode,\n            (plugin) => plugin.Lens?.UI?.Content,\n            undefined,\n            createRootElement,\n        )\n        if (userId.includes('/')) return null\n        const identifier = ProfileIdentifier.of(EnhanceableSite.Twitter, userId).unwrap()\n        if (!identifier) return null\n\n        return (\n            <Component identity={identifier} slot={Plugin.SiteAdaptor.LensSlot.Sidebar} onStatusUpdate={setDisabled} />\n        )\n    }, [userId])\n\n    if (!component) return null\n\n    return <span className={cx(classes.slot, disabled ? classes.hide : null)}>{component}</span>\n}\n","import { injectLensOnConversation } from './injectLensOnConversation.js'\nimport { injectLensOnPost } from './injectLensOnPost.js'\nimport { injectLensOnProfile } from './injectLensOnProfile.js'\nimport { injectLensOnSpaceDock } from './injectLensOnSpaceDock.js'\nimport { injectLensOnUserCell } from './injectLensOnUserCell.js'\n\nexport function injectLens(signal: AbortSignal) {\n    injectLensOnProfile(signal)\n    injectLensOnPost(signal)\n    injectLensOnUserCell(signal)\n    injectLensOnConversation(signal)\n    injectLensOnSpaceDock(signal)\n}\n","import { makeStyles } from '@masknet/theme'\nimport { useMemo } from 'react'\nimport { v4 as uuid } from 'uuid'\nimport { RainbowBox } from '../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        borderRadius: 5,\n    },\n    name: {\n        transform: 'translate(0px, 8px)',\n        background: 'linear-gradient(270deg, #24FF00 0%, #00E4C9 102.63%)',\n    },\n    price: {\n        transform: 'translate(0px, -5px)',\n        background: 'linear-gradient(270deg, #24FF00 0%, #00E4C9 102.63%)',\n    },\n    border: {\n        transform: 'translate(1px, 1px)',\n    },\n}))\ninterface NFTAvatarSquareProps {\n    stroke: string\n    strokeWidth: number\n    fontSize: number\n    name: string\n    price: string\n    size: number\n    borderSize?: number\n    id?: string\n}\n\nexport function NFTAvatarSquare(props: NFTAvatarSquareProps) {\n    const { classes } = useStyles()\n    const { stroke, strokeWidth, fontSize, name, size, price, borderSize = 2 } = props\n    const id = useMemo(() => props.id ?? uuid(), [props.id])\n\n    const avatarSize = size - borderSize\n    const R = avatarSize * Math.sqrt(2)\n\n    if (size <= borderSize) return null\n\n    const svg = (\n        <svg className={classes.root} width=\"100%\" height=\"100%\" viewBox={`0 0 ${size} ${size}`} id={id}>\n            <defs>\n                <path\n                    id={`${id}-path-name`}\n                    fill=\"none\"\n                    stroke=\"none\"\n                    strokeWidth=\"0\"\n                    d={`M${0} ${avatarSize / 2} L0 0 L${avatarSize} 0 L${avatarSize} ${avatarSize / 2}`}\n                />\n                <path\n                    id={`${id}-path-price`}\n                    fill=\"none\"\n                    stroke=\"none\"\n                    strokeWidth=\"0\"\n                    d={`M 0 ${avatarSize / 2} L0 ${avatarSize} L${avatarSize} ${avatarSize} L${avatarSize} ${\n                        avatarSize / 2\n                    } `}\n                />\n                <linearGradient id={`${id}-gradient`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                    <stop offset=\"0%\" stopColor=\"#00f8ff\" />\n                    <stop offset=\"20%\" stopColor=\"#a4ff00\" />\n                    <stop offset=\"40%\" stopColor=\"#f7275e\" />\n                    <stop offset=\"60%\" stopColor=\"#ffd300\" />\n                    <stop offset=\"80%\" stopColor=\"#ff8a00\" />\n                    <stop offset=\"100%\" stopColor=\"#00f8ff\" />\n                </linearGradient>\n            </defs>\n\n            <g>\n                <pattern\n                    id={`${id}-pattern`}\n                    x=\"0\"\n                    y=\"0\"\n                    width=\"300%\"\n                    height=\"100%\"\n                    patternUnits={navigator.userAgent.includes('Firefox') ? '' : 'userSpaceOnUse'}>\n                    <circle cx={R} cy={R} r={R} fill={`url(#${id}-gradient)`}>\n                        <animateTransform\n                            attributeName=\"transform\"\n                            type=\"rotate\"\n                            attributeType=\"XML\"\n                            dur=\"10s\"\n                            repeatCount=\"indefinite\"\n                            from={`0 ${R} ${R}`}\n                            to={`360 ${R} ${R}`}\n                        />\n                    </circle>\n                </pattern>\n                <rect\n                    x={0}\n                    y={0}\n                    rx={5}\n                    width={avatarSize}\n                    height={avatarSize}\n                    fill=\"none\"\n                    stroke={stroke}\n                    strokeWidth={strokeWidth}\n                />\n                <g className={classes.border}>\n                    <rect\n                        x={0}\n                        y={0}\n                        rx={5}\n                        width={avatarSize}\n                        height={avatarSize}\n                        fill=\"none\"\n                        stroke=\"none\"\n                        strokeWidth={2}\n                    />\n                </g>\n                <g className={classes.name}>\n                    <text x=\"0%\" textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={`url(#${id}-pattern)`}>\n                        <textPath xlinkHref={`#${id}-path-name`} startOffset=\"50%\" rotate=\"auto\">\n                            <tspan fontWeight=\"bold\" fontSize={fontSize}>\n                                {name}\n                            </tspan>\n                        </textPath>\n                    </text>\n                </g>\n                <g className={classes.price}>\n                    <text x=\"0%\" textAnchor=\"middle\" fontFamily=\"sans-serif\" fill={`url(#${id}-pattern)`}>\n                        <textPath xlinkHref={`#${id}-path-price`} startOffset=\"50%\" rotate=\"auto\">\n                            <tspan fontWeight=\"bold\" fontSize={fontSize} dy=\"0.5em\">\n                                {price}\n                            </tspan>\n                        </textPath>\n                    </text>\n                </g>\n            </g>\n        </svg>\n    )\n    return (\n        <RainbowBox borderSize={borderSize} radius=\"5px\">\n            {svg}\n        </RainbowBox>\n    )\n}\n","import { rainbowBorderKeyFrames } from '@masknet/plugin-avatar'\nimport { useEffect, useRef } from 'react'\nimport { searchTwitterAvatarLinkSelector } from '../../utils/selector.js'\n\nexport function useInjectedCSS(showAvatar: boolean, updatedAvatar: boolean) {\n    const rainbowElement = useRef<Element | null>()\n    const borderElement = useRef<Element | null>()\n    useEffect(() => {\n        if (!showAvatar || !updatedAvatar) return\n        const linkDom = searchTwitterAvatarLinkSelector().evaluate()\n\n        if (linkDom?.firstElementChild && linkDom.childNodes.length === 4) {\n            const linkParentDom = linkDom.closest('div')\n\n            if (linkParentDom) linkParentDom.style.overflow = 'visible'\n\n            // create rainbow shadow border\n            if (linkDom.lastElementChild?.tagName !== 'STYLE') {\n                borderElement.current = linkDom.firstElementChild\n                // remove useless border\n                linkDom.removeChild(linkDom.firstElementChild)\n                const style = document.createElement('style')\n                style.innerText = `\n                ${rainbowBorderKeyFrames.styles}\n                \n                .rainbowBorder {\n                    animation: ${rainbowBorderKeyFrames.name} 6s linear infinite;\n                    box-shadow: 0 5px 15px rgba(0, 248, 255, 0.4), 0 10px 30px rgba(37, 41, 46, 0.2);\n                    transition: none;\n                    border: 0 solid #00f8ff;\n                }\n            \n            `\n\n                rainbowElement.current = linkDom.firstElementChild.nextElementSibling\n                linkDom.firstElementChild.nextElementSibling?.classList.add('rainbowBorder')\n                linkDom.appendChild(style)\n            }\n        }\n\n        return () => {\n            if (linkDom?.lastElementChild?.tagName === 'STYLE') {\n                linkDom.removeChild(linkDom.lastElementChild)\n            }\n\n            if (borderElement.current && linkDom?.firstElementChild !== borderElement.current) {\n                linkDom?.insertBefore(borderElement.current, linkDom.firstChild)\n            }\n            if (rainbowElement.current) {\n                rainbowElement.current.classList.remove('rainbowBorder')\n            }\n        }\n    }, [location.pathname, showAvatar, updatedAvatar])\n}\n","import type { NextIDAvatarMeta } from '@masknet/plugin-avatar'\nimport { searchTwitterAvatarLinkSelector } from '../../utils/selector.js'\nimport { CrossIsolationMessages } from '@masknet/shared-base'\nimport { useUpdateEffect } from 'react-use'\n\nexport function useUpdatedAvatar(showAvatar: boolean, nftAvatar?: NextIDAvatarMeta) {\n    useUpdateEffect(() => {\n        if (!showAvatar) return\n\n        const linkParentDom = searchTwitterAvatarLinkSelector().evaluate()?.closest('div')\n        if (!linkParentDom) return\n\n        const handler = (event: MouseEvent) => {\n            if (!nftAvatar?.tokenId || !nftAvatar?.address || !nftAvatar.pluginId || !nftAvatar.chainId) return\n            event.stopPropagation()\n            event.preventDefault()\n            CrossIsolationMessages.events.nonFungibleTokenDialogEvent.sendToLocal({\n                open: true,\n                pluginID: nftAvatar.pluginId,\n                chainId: nftAvatar.chainId,\n                tokenId: nftAvatar.tokenId,\n                tokenAddress: nftAvatar.address,\n                ownerAddress: nftAvatar.ownerAddress,\n                origin: 'pfp',\n            })\n        }\n\n        const clean = () => {\n            linkParentDom.removeEventListener('click', handler, true)\n        }\n\n        if (!nftAvatar) return\n\n        linkParentDom.addEventListener('click', handler, true)\n\n        return clean\n    }, [nftAvatar, showAvatar])\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { makeStyles } from '@masknet/theme'\nimport { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport {\n    NFTBadge,\n    RSS3_KEY_SITE,\n    usePersonaNFTAvatar,\n    useWallet,\n    useNFT,\n    type NextIDAvatarMeta,\n    useSaveStringStorage,\n    NFTAvatarSquare,\n    AvatarType,\n} from '@masknet/plugin-avatar'\nimport { useAsync, useLocation, useWindowSize } from 'react-use'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { Box, Typography } from '@mui/material'\nimport { AssetPreviewer, ConfirmModal } from '@masknet/shared'\nimport { MaskMessages, NetworkPluginID, type NFTAvatarEvent } from '@masknet/shared-base'\nimport { Twitter, Hub } from '@masknet/web3-providers'\nimport { useInjectedCSS } from './useInjectedCSS.js'\nimport { useUpdatedAvatar } from './useUpdatedAvatar.js'\nimport { getAvatarType } from '../../utils/AvatarType.js'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\nimport { activatedSiteAdaptorUI } from '../../../../site-adaptor-infra/ui.js'\nimport { searchAvatarMetaSelector, searchAvatarSelector, searchTwitterAvatarSelector } from '../../utils/selector.js'\nimport { useCurrentVisitingIdentity } from '../../../../components/DataSource/useActivatedUI.js'\n\nconst useStyles = makeStyles()(() => ({\n    root: {\n        transform: 'scale(1.022)',\n        position: 'absolute',\n        textAlign: 'center',\n        color: 'white',\n        zIndex: 2,\n        width: '100%',\n        height: '100%',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    },\n    text: {\n        fontSize: '20px !important',\n        fontWeight: 700,\n    },\n    icon: {\n        width: '19px !important',\n        height: '19px !important',\n    },\n}))\n\nexport function NFTAvatarInTwitter() {\n    const windowSize = useWindowSize()\n    const _location = useLocation()\n    const { classes } = useStyles()\n    const [updatedAvatar, setUpdatedAvatar] = useState(false)\n\n    const size = useMemo(() => {\n        const ele = searchTwitterAvatarSelector().evaluate()?.querySelector('img')\n        if (ele) {\n            const style = window.getComputedStyle(ele)\n            return Number.parseInt(style.width.replace('px', '') ?? 0, 10)\n        }\n        return 0\n    }, [windowSize, _location])\n\n    const { showAvatar, nftInfo, nftAvatar } = useNFTCircleAvatar(size)\n\n    useInjectedCSS(showAvatar, updatedAvatar)\n    useUpdatedAvatar(showAvatar, nftAvatar)\n\n    const handlerWatcher = () => {\n        const avatar = searchAvatarSelector().evaluate()?.getAttribute('src')\n        if (!avatar || !nftAvatar?.avatarId) return\n        setUpdatedAvatar(!!nftAvatar?.avatarId && Twitter.getAvatarId(avatar ?? '') === nftAvatar.avatarId)\n    }\n    useEffect(() => {\n        const abortController = new AbortController()\n        new MutationObserverWatcher(searchAvatarMetaSelector())\n            .addListener('onAdd', handlerWatcher)\n            .addListener('onChange', handlerWatcher)\n            .startWatch(\n                {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    attributeFilter: ['src'],\n                },\n                abortController.signal,\n            )\n        return () => abortController.abort()\n    }, [handlerWatcher])\n    if (!showAvatar) return null\n\n    const avatarType = getAvatarType()\n    switch (avatarType) {\n        case AvatarType.Default:\n            return (\n                <NFTBadge\n                    nftInfo={nftInfo}\n                    borderSize={5}\n                    hasRainbow\n                    size={size}\n                    width={12}\n                    classes={{ root: classes.root, text: classes.text, icon: classes.icon }}\n                />\n            )\n        case AvatarType.Square:\n            return (\n                <NFTAvatarSquare\n                    stroke=\"black\"\n                    strokeWidth={20}\n                    fontSize={9}\n                    name={nftInfo?.name ?? ''}\n                    price={nftInfo?.amount ?? ''}\n                    size={size}\n                />\n            )\n        default:\n            return null\n    }\n}\n\nfunction useNFTCircleAvatar(size: number) {\n    const t = useMaskSharedTrans()\n\n    const identity = useCurrentVisitingIdentity()\n    const { value: nftAvatar } = usePersonaNFTAvatar(\n        identity.identifier?.userId ?? '',\n        Twitter.getAvatarId(identity.avatar),\n        '',\n        RSS3_KEY_SITE.TWITTER,\n    )\n    const { account } = useChainContext()\n    const { loading: loadingWallet, value: storage } = useWallet(nftAvatar?.userId)\n    const { value: nftInfo, loading: loadingNFTInfo } = useNFT(\n        storage?.address ?? account,\n        nftAvatar?.address,\n        nftAvatar?.tokenId,\n        nftAvatar?.pluginId,\n        nftAvatar?.chainId,\n        nftAvatar?.ownerAddress,\n    )\n\n    const showAvatar = useMemo(() => {\n        const avatar = searchAvatarSelector().evaluate()?.getAttribute('src')\n        return !!nftAvatar?.avatarId && Twitter.getAvatarId(avatar ?? '') === nftAvatar.avatarId\n    }, [nftAvatar?.avatarId, identity.avatar])\n\n    const [NFTEvent, setNFTEvent] = useState<NFTAvatarEvent>()\n    const saveNFTAvatar = useSaveStringStorage(NetworkPluginID.PLUGIN_EVM)\n\n    // After the avatar is set, it cannot be saved immediately,\n    // and must wait until the avatar of twitter gets updated\n    useAsync(async () => {\n        if (!account || !nftAvatar || !identity.identifier) return\n\n        if (!NFTEvent?.address || !NFTEvent?.tokenId) {\n            MaskMessages.events.NFTAvatarTimelineUpdated.sendToAll({\n                userId: identity.identifier.userId,\n                avatarId: Twitter.getAvatarId(identity.avatar ?? ''),\n                address: '',\n                tokenId: '',\n                schema: SchemaType.ERC721,\n                pluginID: NetworkPluginID.PLUGIN_EVM,\n                chainId: ChainId.Mainnet,\n            })\n            return\n        }\n\n        const avatar = await saveNFTAvatar(identity.identifier.userId, account, {\n            ...NFTEvent,\n            avatarId: Twitter.getAvatarId(identity.avatar ?? ''),\n        } as NextIDAvatarMeta).catch((error) => {\n            setNFTEvent(undefined)\n            // eslint-disable-next-line no-alert\n            alert(error.message)\n            return\n        })\n        if (!avatar) {\n            setNFTEvent(undefined)\n            // eslint-disable-next-line no-alert\n            alert('Sorry, failed to save NFT Avatar. Please set again.')\n            return\n        }\n\n        const NFTDetailed = await Hub.getNonFungibleAsset(avatar.address ?? '', avatar.tokenId, {\n            chainId: ChainId.Mainnet,\n        })\n\n        const confirmed = await ConfirmModal.openAndWaitForClose({\n            title: t.plugin_avatar_setup_share_title(),\n            content: (\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                    <AssetPreviewer url={NFTDetailed?.metadata?.imageURL || NFTDetailed?.metadata?.mediaURL} />\n                    <Typography mt={3} fontSize=\"18px\">\n                        {t.plugin_avatar_setup_success()}\n                    </Typography>\n                </Box>\n            ),\n            confirmLabel: t.share(),\n        })\n        if (confirmed) activatedSiteAdaptorUI!.utils.share?.(t.plugin_avatar_setup_pfp_share())\n\n        MaskMessages.events.NFTAvatarTimelineUpdated.sendToAll(\n            (avatar ?? {\n                userId: identity.identifier.userId,\n                avatarId: Twitter.getAvatarId(identity.avatar ?? ''),\n                address: '',\n                tokenId: '',\n                schema: SchemaType.ERC721,\n                pluginId: NetworkPluginID.PLUGIN_EVM,\n                chainId: ChainId.Mainnet,\n            }) as NFTAvatarEvent,\n        )\n\n        setNFTEvent(undefined)\n    }, [identity.avatar, t, saveNFTAvatar])\n    useEffect(() => {\n        return MaskMessages.events.NFTAvatarUpdated.on((data) => setNFTEvent(data))\n    }, [])\n\n    return {\n        showAvatar: Boolean(size && nftAvatar && !loadingWallet && !loadingNFTInfo && showAvatar && nftInfo),\n        nftAvatar,\n        nftInfo,\n        loading: loadingWallet || loadingNFTInfo,\n    }\n}\n","import { makeStyles } from '@masknet/theme'\nimport { isZero } from '@masknet/web3-shared-base'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useLocation, useWindowSize } from 'react-use'\nimport { useCurrentVisitingIdentity } from '../../../../components/DataSource/useActivatedUI.js'\nimport {\n    AvatarType,\n    NFTAvatarClip,\n    NFTAvatarSquare,\n    formatPrice,\n    formatText,\n    useNFT,\n    useNFTContainerAtTwitter,\n} from '@masknet/plugin-avatar'\nimport { useMaskSharedTrans } from '../../../../../shared-ui/index.js'\nimport { searchTwitterAvatarNFTLinkSelector, searchTwitterAvatarNFTSelector } from '../../utils/selector.js'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { ChainId } from '@masknet/web3-shared-evm'\n\nconst useStyles = makeStyles()(() => ({\n    root: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n    },\n    text: {},\n    icon: {},\n}))\n\nexport function NFTAvatarClipInTwitter() {\n    const windowSize = useWindowSize()\n    const location = useLocation()\n    const borderElement = useRef<Element | null>()\n    const linkDom = useRef<Element | null>()\n\n    const size = useMemo(() => {\n        const ele = searchTwitterAvatarNFTSelector().evaluate()?.closest('a')?.querySelector('img')\n        if (!ele) return 0\n        return ele.clientWidth\n    }, [windowSize, location])\n\n    const identity = useCurrentVisitingIdentity()\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            linkDom.current = searchTwitterAvatarNFTLinkSelector().evaluate()\n            if (linkDom.current?.firstElementChild && linkDom.current?.childNodes.length === 4) {\n                borderElement.current = linkDom.current.firstElementChild\n                // remove useless border\n                linkDom.current.removeChild(linkDom.current?.firstElementChild)\n            }\n            const link = linkDom.current as HTMLElement\n            if (link?.style) {\n                link.style.backgroundColor = 'transparent'\n                link.style.boxShadow = 'none'\n            }\n        }, 5000)\n\n        return () => {\n            clearTimeout(timer)\n            if (\n                borderElement.current &&\n                borderElement.current !== linkDom.current?.firstElementChild &&\n                linkDom.current\n            )\n                linkDom.current.insertBefore(borderElement.current, linkDom.current.firstChild)\n        }\n    }, [location.pathname])\n\n    if (isZero(size) || !identity.identifier) return null\n\n    return (\n        <NFTAvatarClipOrSquareInTwitter\n            screenName={identity.identifier.userId}\n            size={size}\n            avatarType={AvatarType.Clip}\n        />\n    )\n}\n\ninterface NFTAvatarClipOrSquareProps {\n    screenName: string\n    size: number\n    avatarType: AvatarType\n}\nfunction NFTAvatarClipOrSquareInTwitter({ screenName, size, avatarType }: NFTAvatarClipOrSquareProps) {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const { loading, value: avatarMetadata } = useNFTContainerAtTwitter(screenName)\n    const { account } = useChainContext()\n    const { value = { amount: '0', symbol: 'ETH', name: '', slug: '' }, loading: loadingNFT } = useNFT(\n        account,\n        avatarMetadata?.address,\n        avatarMetadata?.token_id,\n        NetworkPluginID.PLUGIN_EVM,\n        ChainId.Mainnet,\n    )\n\n    const name = useMemo(() => {\n        if (loading || loadingNFT) return t.loading()\n        return `${formatText(value.name, avatarMetadata?.token_id ?? '')} ${\n            value.slug?.toLowerCase() === 'ens' ? 'ENS' : ''\n        }`\n    }, [JSON.stringify(value), loading, loadingNFT, avatarMetadata?.token_id])\n\n    const price = useMemo(() => {\n        if (loading || loadingNFT) return t.loading()\n        return formatPrice(value.amount, value.symbol)\n    }, [JSON.stringify(value), loading, loadingNFT])\n\n    if (!avatarMetadata?.address || !avatarMetadata?.token_id) return null\n\n    return avatarType === AvatarType.Square ? (\n        <NFTAvatarSquare stroke=\"black\" strokeWidth={20} fontSize={9} name={name} price={price} size={size} />\n    ) : avatarType === AvatarType.Clip ? (\n        <NFTAvatarClip\n            size={size}\n            classes={{ root: classes.root, text: classes.text, icon: classes.icon }}\n            name={name}\n            price={price}\n        />\n    ) : null\n}\n","import { AvatarType } from '@masknet/plugin-avatar'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { NFTAvatarInTwitter } from './NFTAvatarInTwitter.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport {\n    searchTwitterAvatarNFTLinkSelector,\n    searchTwitterAvatarNFTSelector,\n    searchTwitterAvatarSelector,\n    searchTwitterSquareAvatarSelector,\n} from '../../utils/selector.js'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { NFTAvatarClipInTwitter } from './NFTAvatarClip.js'\nimport { getAvatarType } from '../../utils/AvatarType.js'\n\nexport function injectNFTAvatarInTwitter(signal: AbortSignal) {\n    const avatarType = getAvatarType()\n    const squareWatcher = new MutationObserverWatcher(searchTwitterSquareAvatarSelector()).useForeach(\n        (ele, _, proxy) => {\n            const root = attachReactTreeWithContainer(proxy.afterShadow, { untilVisible: true, signal })\n            if (avatarType === AvatarType.Square) root.render(<NFTAvatarInTwitter />)\n            return () => root.destroy()\n        },\n    )\n    startWatch(squareWatcher, signal)\n\n    const defaultWatcher = new MutationObserverWatcher(searchTwitterAvatarSelector()).useForeach((ele, _, proxy) => {\n        const root = attachReactTreeWithContainer(proxy.afterShadow, { untilVisible: true, signal })\n        if (avatarType === AvatarType.Default) root.render(<NFTAvatarInTwitter />)\n        return () => root.destroy()\n    })\n    startWatch(defaultWatcher, signal)\n\n    const clipWatcher = new MutationObserverWatcher(searchTwitterAvatarNFTSelector()).useForeach((ele, _, proxy) => {\n        const root = attachReactTreeWithContainer(proxy.afterShadow, { untilVisible: true, signal })\n        if (searchTwitterAvatarNFTLinkSelector().evaluate()) root.render(<NFTAvatarClipInTwitter />)\n        return () => root.destroy()\n    })\n    startWatch(clipWatcher, signal)\n}\n","/* cspell: disable */\nimport { useCallback, useLayoutEffect } from 'react'\nimport { LiveSelector } from '@dimensiondev/holoflows-kit'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { CrossIsolationMessages, PluginID, SwitchLogoType, switchLogoSettings } from '@masknet/shared-base'\nimport { useIsMinimalMode, useLastRecognizedIdentity } from '@masknet/plugin-infra/content-script'\n\nconst BlueBirdHTML = `\n     <svg\n     viewBox=\"0 0 24 24\"\n     aria-hidden=\"true\"\n     fill=\"#1D9BF0\"\n     >\n     <g>\n         <path\n         d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\"\n         />\n     </g>\n     </svg>\n `\n\nconst LogoSelector = new LiveSelector()\n    .querySelector<HTMLElement>('h1[role=\"heading\"] a > div > svg')\n    .enableSingleMode()\n\nconst defaultXIcon = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path fill=\"currentColor\" d=\"M13.882 10.46 21.313 2h-1.76l-6.456 7.344L7.944 2H2l7.793 11.107L2 21.977h1.76l6.814-7.757 5.443 7.757h5.944L13.88 10.46Zm-2.413 2.744-.79-1.107L4.395 3.3H7.1l5.071 7.103.788 1.106 6.592 9.232h-2.705l-5.378-7.537Z\"/>\n    </svg>\n`\nconst LetterHTML = LogoSelector.evaluate()?.innerHTML\n\nconst useStyles = makeStyles()(() => ({\n    switchIcon: {\n        position: 'absolute',\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n        left: 0,\n        top: 0,\n    },\n    iconBox: {\n        position: 'relative',\n        flex: 1,\n    },\n    icon: {\n        position: 'absolute',\n        right: 5,\n        bottom: 5,\n        width: 20,\n        height: 20,\n    },\n    hover: {\n        opacity: 0,\n        '&:hover': {\n            opacity: 1,\n        },\n    },\n    hidden: {\n        opacity: 0,\n    },\n}))\n\nexport function SwitchLogoButton() {\n    const { classes, cx } = useStyles()\n    const current = useLastRecognizedIdentity()\n    const logoType = useValueRef(switchLogoSettings[current?.identifier?.userId || ''])\n    const isMinimalMode = useIsMinimalMode(PluginID.SwitchLogo)\n\n    useLayoutEffect(() => {\n        const node = LogoSelector.evaluate()\n        if (!node) return\n\n        node?.parentElement?.style.setProperty('position', 'relative')\n\n        if (logoType === SwitchLogoType.Classics && !isMinimalMode) {\n            // eslint-disable-next-line @masknet/browser-no-set-html\n            node.innerHTML = BlueBirdHTML\n        } else {\n            // eslint-disable-next-line @masknet/browser-no-set-html\n            node.innerHTML = LetterHTML || defaultXIcon\n        }\n    }, [logoType, isMinimalMode])\n\n    const onClick = useCallback(() => {\n        if (isMinimalMode) return\n        CrossIsolationMessages.events.switchLogoDialogUpdated.sendToLocal({ open: true })\n    }, [isMinimalMode])\n\n    return (\n        <div className={classes.switchIcon}>\n            <div className={cx(classes.iconBox, isMinimalMode ? classes.hidden : classes.hover)}>\n                <Icons.SwitchLogo className={classes.icon} onClickCapture={onClick} />\n            </div>\n        </div>\n    )\n}\n","import { SwitchLogoButton } from '@masknet/plugin-switch-logo'\nimport { MutationObserverWatcher, type LiveSelector } from '@dimensiondev/holoflows-kit'\nimport { querySelector } from '../utils/selector.js'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\n\nconst logoSelector: () => LiveSelector<HTMLElement, true> = () => {\n    return querySelector<HTMLElement>('h1[role=\"heading\"] a > div > svg').closest(1)\n}\n\nexport function injectSwitchLogoButton(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(logoSelector())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { untilVisible: true, signal }).render(\n        <SwitchLogoButton />,\n    )\n}\n","import { useQuery } from '@tanstack/react-query'\nimport { Calendar } from '@masknet/web3-providers'\nimport { startOfMonth, endOfMonth } from 'date-fns'\n\nexport function useNewsList(date: Date) {\n    const startTime = startOfMonth(date).getTime() / 1000\n    const endTime = Math.floor(endOfMonth(date).getTime() / 1000)\n    const { data, isLoading } = useQuery<any>(\n        ['newsList', startTime, endTime],\n        async () => await Calendar.getNewsList(startTime, endTime),\n    )\n    const eventsWithDate: Record<string, any[]> =\n        data?.reduce((acc: Record<string, any[]>, v: any) => {\n            const date = new Date(Number(v.event_date)).toLocaleDateString()\n            acc[date] = acc[date] || []\n            acc[date].push(v)\n            return acc\n        }, {}) ?? {}\n    return { data: eventsWithDate, isLoading }\n}\n\nexport function useEventList(date: Date) {\n    const startTime = startOfMonth(date).getTime() / 1000\n    const endTime = Math.floor(endOfMonth(date).getTime() / 1000)\n    const { data, isLoading } = useQuery<any>(\n        ['eventList', startTime, endTime],\n        async () => await Calendar.getEventList(startTime, endTime),\n    )\n    const eventsWithDate: Record<string, any[]> =\n        data?.reduce((acc: Record<string, any[]>, v: any) => {\n            const date = new Date(Number(v.event_date)).toLocaleDateString()\n            acc[date] = acc[date] || []\n            acc[date].push(v)\n            return acc\n        }, {}) ?? {}\n    return { data: eventsWithDate, isLoading }\n}\n\nexport function useNFTList(date: Date) {\n    const startTime = startOfMonth(date).getTime() / 1000\n    const endTime = Math.floor(endOfMonth(date).getTime() / 1000)\n    const { data, isLoading } = useQuery<any>(\n        ['nftList', startTime, endTime],\n        async () => await Calendar.getNFTList(startTime, endTime),\n    )\n    const eventsWithDate: Record<string, any[]> =\n        data?.reduce((acc: Record<string, any[]>, v: any) => {\n            const date = new Date(v.event_date).toLocaleDateString()\n            acc[date] = acc[date] || []\n            acc[date].push(v)\n            return acc\n        }, {}) ?? {}\n    return { data: eventsWithDate, isLoading }\n}\n","import React, { useMemo, useState } from 'react'\nimport { format, startOfMonth, addDays, addMonths, isAfter, endOfMonth } from 'date-fns'\nimport { IconButton, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { useEventList, useNFTList, useNewsList } from '../../hooks/useEventList.js'\nimport { safeUnreachable } from '@masknet/kit'\nimport { Box } from '@mui/system'\n\nconst useStyles = makeStyles<{ open: boolean }>()((theme, { open }) => ({\n    container: {\n        background: theme.palette.mode === 'dark' ? '#18232E' : theme.palette.maskColor.white,\n        boxShadow: '0px 4px 30px 0px rgba(0, 0, 0, 0.10)',\n        borderRadius: '16px',\n        display: open ? 'flex' : 'none',\n        flexDirection: 'column',\n        gap: '24px',\n        width: '320px',\n        height: '355px',\n        padding: '24px',\n        position: 'absolute',\n        left: '-16px',\n        zIndex: 999,\n    },\n    daysOfWeek: {\n        fontSize: 12,\n        fontWeight: 700,\n        color: theme.palette.maskColor.third,\n        marginBottom: '24px',\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    headerText: {\n        color: theme.palette.maskColor.main,\n        fontSize: '24px',\n        fontWeight: 700,\n        lineHeight: '120%',\n    },\n    headerIcon: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    dateItem: {\n        fontSize: '16px',\n        fontWeight: 400,\n        lineHeight: '20px',\n        color: theme.palette.maskColor.third,\n        width: '38px',\n        height: '38px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 999,\n    },\n    row: {\n        marginBottom: '8px',\n    },\n    canClick: {\n        color: theme.palette.maskColor.main,\n        cursor: 'pointer',\n    },\n    active: {\n        color: theme.palette.maskColor.white,\n        background: theme.palette.maskColor.primary,\n    },\n    button: {\n        outline: 'none',\n        background: 'none',\n        border: 'none',\n        padding: 0,\n    },\n}))\n\ninterface DatePickerProps {\n    open: boolean\n    setOpen: (x: boolean) => void\n    selectedDate: Date\n    setSelectedDate: (date: Date) => void\n    currentTab: 'news' | 'event' | 'nfts'\n}\n\nexport function DatePicker({ selectedDate, setSelectedDate, open, setOpen, currentTab }: DatePickerProps) {\n    const { classes } = useStyles({ open })\n    const [currentDate, setCurrentDate] = useState(selectedDate)\n    const monthStart = useMemo(() => startOfMonth(currentDate), [currentDate])\n    const { data: eventList } = useEventList(monthStart)\n    const { data: newsList } = useNewsList(monthStart)\n    const { data: nftList } = useNFTList(monthStart)\n    const list = useMemo(() => {\n        switch (currentTab) {\n            case 'news':\n                return newsList\n            case 'event':\n                return eventList\n            case 'nfts':\n                return nftList\n            default:\n                safeUnreachable(currentTab)\n                return null\n        }\n    }, [currentTab, newsList, eventList, nftList])\n\n    const isPrevMonthDisabled = useMemo(() => {\n        return !isAfter(currentDate, endOfMonth(new Date()))\n    }, [currentDate])\n    const isNextMonthDisabled = useMemo(() => {\n        return isAfter(addMonths(currentDate, 1), addMonths(endOfMonth(new Date()), 2))\n    }, [currentDate])\n\n    const handleDateClick = (date: Date) => {\n        setSelectedDate(date)\n        setOpen(false)\n    }\n\n    const changeMonth = (amount: number) => {\n        setCurrentDate(addMonths(currentDate, amount))\n    }\n\n    const renderDatePicker = () => {\n        const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n\n        const table = (\n            <table>\n                <thead>\n                    <tr className={classes.daysOfWeek}>\n                        {daysOfWeek.map((day) => (\n                            <th key={day}>\n                                <Typography>{day}</Typography>\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {Array.from({ length: 6 }).map((_, weekIndex) => (\n                        <tr key={weekIndex} className={classes.row}>\n                            {Array.from({ length: 7 }).map((_, dayIndex) => {\n                                const currentDatePointer = addDays(monthStart, weekIndex * 7 + dayIndex)\n                                return (\n                                    <td key={dayIndex}>\n                                        <button\n                                            className={classes.button}\n                                            type=\"submit\"\n                                            disabled={!list?.[currentDatePointer.toLocaleDateString()]}\n                                            onClick={() => handleDateClick(currentDatePointer)}>\n                                            <Typography\n                                                className={`${classes.dateItem} ${\n                                                    selectedDate.toDateString() === currentDatePointer.toDateString()\n                                                        ? classes.active\n                                                        : list?.[currentDatePointer.toLocaleDateString()]\n                                                        ? classes.canClick\n                                                        : ''\n                                                }`}>\n                                                {format(currentDatePointer, 'd')}\n                                            </Typography>\n                                        </button>\n                                    </td>\n                                )\n                            })}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        )\n\n        return (\n            <div className={classes.container}>\n                <div className={classes.header}>\n                    <Typography className={classes.headerText}>{format(currentDate, 'MMMM yyyy')}</Typography>\n                    <Box className={classes.headerIcon}>\n                        <IconButton size=\"small\" onClick={() => changeMonth(-1)} disabled={isPrevMonthDisabled}>\n                            <Icons.LeftArrow size={24} />\n                        </IconButton>\n                        <IconButton size=\"small\" onClick={() => changeMonth(1)} disabled={isNextMonthDisabled}>\n                            <Icons.RightArrow size={24} />\n                        </IconButton>\n                    </Box>\n                </div>\n                {table}\n            </div>\n        )\n    }\n\n    return <div>{renderDatePicker()}</div>\n}\n","import React, { useMemo } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { startOfWeek, endOfWeek, eachDayOfInterval } from 'date-fns'\nimport { ClickAwayListener, IconButton, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { DatePicker } from './DatePicker.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        display: 'flex',\n        padding: '12px',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'relative',\n    },\n    date: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        color: theme.palette.maskColor.main,\n        fontSize: 16,\n        fontFamily: 'Helvetica',\n        fontWeight: '400',\n        lineHeight: 20,\n        borderRadius: 999,\n        textAlign: 'center',\n        width: '28px !important',\n        height: '28px !important',\n        border: `0.5px ${theme.palette.maskColor.line} solid`,\n        cursor: 'pointer',\n    },\n    isActive: {\n        border: `0.5px ${theme.palette.maskColor.main} solid`,\n    },\n    disabled: {\n        color: theme.palette.maskColor.second,\n        cursor: 'default',\n    },\n}))\n\ninterface DatePickerTabProps {\n    open: boolean\n    setOpen: (x: boolean) => void\n    selectedDate: Date\n    setSelectedDate: (date: Date) => void\n    list: Record<string, any[]> | null\n    currentTab: 'news' | 'event' | 'nfts'\n}\n\nexport function DatePickerTab({ selectedDate, setSelectedDate, list, open, setOpen, currentTab }: DatePickerTabProps) {\n    const { classes } = useStyles()\n    const week = useMemo(() => {\n        return eachDayOfInterval({ start: startOfWeek(selectedDate), end: endOfWeek(selectedDate) })\n    }, [selectedDate])\n    return (\n        <div className={classes.container}>\n            {week.map((v) => {\n                return (\n                    <div\n                        className={`${classes.date} ${selectedDate.getDate() === v.getDate() ? classes.isActive : ''} ${\n                            list && !list[v.toLocaleDateString()] ? classes.disabled : ''\n                        }`}\n                        key={v.toString()}\n                        onClick={() => {\n                            if (list && !list[v.toLocaleDateString()]) return\n                            setSelectedDate(v)\n                        }}>\n                        <Typography>{v.getDate()}</Typography>\n                    </div>\n                )\n            })}\n            <ClickAwayListener onClickAway={() => setOpen(false)}>\n                <div>\n                    <IconButton\n                        size=\"small\"\n                        onClick={() => {\n                            setOpen(!open)\n                        }}>\n                        <Icons.LinearCalendar size={24} />\n                    </IconButton>\n                    <DatePicker\n                        open={open}\n                        setOpen={(open) => setOpen(open)}\n                        selectedDate={selectedDate}\n                        setSelectedDate={setSelectedDate}\n                        currentTab={currentTab}\n                    />\n                </div>\n            </ClickAwayListener>\n        </div>\n    )\n}\n","// @ts-nocheck\n/* eslint-disable */\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useCalendarTrans(): {\n    /**\n      * `Calendar`\n      */\n    title(): string;\n    /**\n      * `Highly integrated Web3 news and events on Twitter, providing information on tokens, NFTs, AMAs, and regulatory events.`\n      */\n    description(): string;\n    /**\n      * `No content for the last two weeks.`\n      */\n    empty_status(): string;\n    /**\n      * `Total`\n      */\n    total(): string;\n    /**\n      * `Price`\n      */\n    price(): string;\n    /**\n      * `Date`\n      */\n    date(): string;\n    /**\n      * `Loading`\n      */\n    loading(): string;\n    /**\n      * `Powered By`\n      */\n    powered_by(): string;\n    /**\n      * `News`\n      */\n    news(): string;\n    /**\n      * `Events`\n      */\n    event(): string;\n    /**\n      * `NFTs`\n      */\n    nfts(): string;\n    /**\n      * `The content is fully loaded`\n      */\n    content_end(): string;\n    /**\n      * `Expired`\n      */\n    expired(): string;\n} { const { t } = useTranslation(\"io.mask.calendar\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\n","import React, { useMemo, useEffect, useRef } from 'react'\nimport { format } from 'date-fns'\nimport { Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { EmptyStatus, LoadingStatus } from '@masknet/shared'\nimport { useCalendarTrans } from '../../locales/i18n_generated.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '506px',\n        width: '100%',\n        overflowY: 'scroll',\n        position: 'relative',\n        gap: '10px',\n        '&::-webkit-scrollbar': {\n            width: '4px',\n        },\n        '&::-webkit-scrollbar-thumb': {\n            backgroundColor: theme.palette.maskColor.secondaryLine,\n            borderRadius: '99px',\n        },\n        marginBottom: '50px',\n    },\n    paddingWrap: {\n        paddingRight: '12px',\n    },\n    empty: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%,-50%)',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        gap: 12,\n        color: theme.palette.maskColor.second,\n        whiteSpace: 'nowrap',\n    },\n    eventCard: {\n        display: 'flex',\n        padding: '8px 0',\n        flexDirection: 'column',\n        gap: '8px',\n        borderBottom: `1px solid ${theme.palette.maskColor.line}`,\n        fontWeight: 700,\n        lineHeight: '16px',\n        fontSize: '12px',\n        cursor: 'pointer',\n    },\n    eventHeader: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'space-between',\n    },\n    projectWrap: {\n        display: 'flex',\n        gap: 8,\n        alignItems: 'center',\n    },\n    projectName: {\n        color: theme.palette.maskColor.main,\n        fontSize: '12px',\n        fontWeight: 700,\n        lineHeight: '16px',\n    },\n    logo: {\n        width: '24px',\n        height: '24px',\n        borderRadius: '50%',\n    },\n    eventTitle: {\n        fontSize: '14px',\n        fontWeight: 400,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.main,\n    },\n    eventContent: {\n        fontSize: '13px',\n        fontWeight: 400,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.second,\n    },\n    eventType: {\n        fontSize: '12px',\n        fontWeight: 400,\n        color: theme.palette.maskColor.main,\n        borderRadius: '4px',\n        background: theme.palette.maskColor.bg,\n        padding: '2px 4px',\n        textAlign: 'center',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    dateDiv: {\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.main,\n        padding: '10px 0',\n    },\n}))\n\ninterface NewsListProps {\n    list: Record<string, any[]>\n    isLoading: boolean\n    empty: boolean\n    dateString: string\n}\n\nexport function NewsList({ list, isLoading, empty, dateString }: NewsListProps) {\n    const { classes, cx } = useStyles()\n    const t = useCalendarTrans()\n    const listRef = useRef<HTMLDivElement>(null)\n    const listAfterDate = useMemo(() => {\n        const listAfterDate: string[] = []\n        for (const key in list) {\n            if (new Date(key) >= new Date(dateString)) {\n                listAfterDate.push(key)\n            }\n        }\n        return listAfterDate\n    }, [list, dateString])\n    useEffect(() => {\n        if (listRef.current)\n            listRef.current.scrollTo({\n                top: 0,\n            })\n    }, [listRef, list])\n    return (\n        <div className={classes.container} ref={listRef}>\n            <div className={classes.paddingWrap}>\n                {isLoading && !list?.length ? (\n                    <div className={cx(classes.empty, classes.eventTitle)}>\n                        <LoadingStatus />\n                    </div>\n                ) : !empty && listAfterDate.length ? (\n                    listAfterDate.map((key) => {\n                        return (\n                            <div key={key}>\n                                <Typography className={classes.dateDiv}>\n                                    {format(new Date(key), 'MMM dd,yyy')}\n                                </Typography>\n                                {list[key].map((v) => (\n                                    <div\n                                        className={classes.eventCard}\n                                        key={v.event_url}\n                                        onClick={() => {\n                                            window.open(v.event_url)\n                                        }}>\n                                        <div className={classes.eventHeader}>\n                                            <div className={classes.projectWrap}>\n                                                <img src={v.project.logo} className={classes.logo} alt=\"logo\" />\n                                                <Typography className={classes.projectName}>\n                                                    {v.project.name}\n                                                </Typography>\n                                            </div>\n                                            <Typography className={classes.eventType}>{v.event_type}</Typography>\n                                        </div>\n                                        <Typography className={classes.eventTitle}>{v.event_title}</Typography>\n                                        <Typography className={classes.eventContent}>{v.event_description}</Typography>\n                                    </div>\n                                ))}\n                            </div>\n                        )\n                    })\n                ) : (\n                    <EmptyStatus className={classes.empty}>{t.empty_status()}</EmptyStatus>\n                )}\n            </div>\n        </div>\n    )\n}\n","import React, { useMemo, useEffect, useRef } from 'react'\nimport { format } from 'date-fns'\nimport { makeStyles } from '@masknet/theme'\nimport { EmptyStatus, LoadingStatus } from '@masknet/shared'\nimport { Typography } from '@mui/material'\nimport { useCalendarTrans } from '../../locales/i18n_generated.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '506px',\n        width: '100%',\n        overflowY: 'scroll',\n        position: 'relative',\n        gap: '10px',\n        '&::-webkit-scrollbar': {\n            width: '4px',\n        },\n        '&::-webkit-scrollbar-thumb': {\n            backgroundColor: theme.palette.maskColor.secondaryLine,\n            borderRadius: '99px',\n        },\n        marginBottom: '50px',\n    },\n    paddingWrap: {\n        paddingRight: '12px',\n    },\n    empty: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%,-50%)',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        gap: 12,\n        color: theme.palette.maskColor.second,\n        whiteSpace: 'nowrap',\n    },\n    eventCard: {\n        display: 'flex',\n        padding: '8px 0',\n        flexDirection: 'column',\n        gap: '8px',\n        cursor: 'pointer',\n    },\n    eventHeader: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'space-between',\n    },\n    projectWrap: {\n        display: 'flex',\n        gap: 8,\n        alignItems: 'center',\n        color: theme.palette.maskColor.main,\n    },\n    projectName: {\n        color: theme.palette.maskColor.main,\n        fontSize: '12px',\n        fontWeight: 700,\n        lineHeight: '16px',\n    },\n    logo: {\n        width: '24px',\n        height: '24px',\n        borderRadius: '50%',\n    },\n    eventTitle: {\n        fontSize: '14px',\n        fontWeight: 400,\n        lineHeight: '18px',\n        color: theme.palette.mode === 'dark' ? theme.palette.maskColor.second : theme.palette.maskColor.main,\n    },\n    time: {\n        fontSize: '14px',\n        fontWeight: 400,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.second,\n    },\n    poster: {\n        borderRadius: '8px',\n        width: '100%',\n        height: '156px',\n        objectFit: 'cover',\n    },\n    dateDiv: {\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.main,\n        padding: '10px 0',\n    },\n}))\n\ninterface EventListProps {\n    list: Record<string, any[]>\n    isLoading: boolean\n    empty: boolean\n    dateString: string\n}\n\nexport const formatDate = (date: string) => {\n    const dateFormat = 'MMM dd, yyyy HH:mm'\n    return format(new Date(date), dateFormat)\n}\n\nexport function EventList({ list, isLoading, empty, dateString }: EventListProps) {\n    const { classes, cx } = useStyles()\n    const t = useCalendarTrans()\n    const listRef = useRef<HTMLDivElement>(null)\n    const listAfterDate = useMemo(() => {\n        const listAfterDate: string[] = []\n        for (const key in list) {\n            if (new Date(key) >= new Date(dateString)) {\n                listAfterDate.push(key)\n            }\n        }\n        return listAfterDate\n    }, [list, dateString])\n    useEffect(() => {\n        if (listRef.current)\n            listRef.current.scrollTo({\n                top: 0,\n            })\n    }, [listRef, list])\n    return (\n        <div className={classes.container} ref={listRef}>\n            <div className={classes.paddingWrap}>\n                {isLoading && !list?.length ? (\n                    <div className={cx(classes.empty, classes.eventTitle)}>\n                        <LoadingStatus />\n                    </div>\n                ) : !empty && listAfterDate.length ? (\n                    listAfterDate.map((key) => {\n                        return (\n                            <div key={key}>\n                                <Typography className={classes.dateDiv}>\n                                    {format(new Date(key), 'MMM dd,yyy')}\n                                </Typography>\n                                {list[key].map((v) => (\n                                    <div\n                                        className={classes.eventCard}\n                                        key={v.eventTitle}\n                                        onClick={() => {\n                                            window.open(v.event_url)\n                                        }}>\n                                        <div className={classes.eventHeader}>\n                                            <div className={classes.projectWrap}>\n                                                <img src={v.project.logo} className={classes.logo} alt=\"logo\" />\n                                                <Typography className={classes.projectName}>\n                                                    {v.project.name}\n                                                </Typography>\n                                            </div>\n                                        </div>\n                                        <Typography className={classes.eventTitle}>{v.event_title}</Typography>\n                                        <Typography className={classes.time}>{formatDate(v.event_date)}</Typography>\n                                        <img className={classes.poster} src={v.poster_url} alt=\"poster\" />\n                                    </div>\n                                ))}\n                            </div>\n                        )\n                    })\n                ) : (\n                    <EmptyStatus className={classes.empty}>{t.empty_status()}</EmptyStatus>\n                )}\n            </div>\n        </div>\n    )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { differenceInSeconds } from 'date-fns'\nimport { makeStyles } from '@masknet/theme'\nimport { Typography } from '@mui/material'\nimport { useCalendarTrans } from '../../locales/i18n_generated.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    timer: {\n        fontSize: '12px',\n        fontWeight: 400,\n        lineHeight: '16px',\n        background: theme.palette.maskColor.bg,\n        color: theme.palette.maskColor.main,\n        borderRadius: '4px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '2px',\n    },\n}))\n\ninterface CountDownTimerProps {\n    targetDate: Date\n}\n\nexport function CountdownTimer({ targetDate }: CountDownTimerProps) {\n    const calculateRemainingTime = useCallback(\n        (targetDate: Date) => {\n            const currentDate = new Date()\n            const difference = differenceInSeconds(targetDate, currentDate)\n            return difference > 0 ? difference : 0\n        },\n        [targetDate],\n    )\n\n    const [remainingTime, setRemainingTime] = useState(() => calculateRemainingTime(targetDate))\n\n    const { classes } = useStyles()\n    const t = useCalendarTrans()\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            const newRemainingTime = calculateRemainingTime(targetDate)\n            setRemainingTime(newRemainingTime)\n\n            if (newRemainingTime === 0) {\n                clearInterval(interval)\n            }\n        }, 1000)\n\n        return () => clearInterval(interval)\n    }, [targetDate])\n\n    const days = Math.floor(remainingTime / (60 * 60 * 24))\n    const hours = Math.floor((remainingTime % (60 * 60 * 24)) / (60 * 60))\n    const minutes = Math.floor((remainingTime % (60 * 60)) / 60)\n    const seconds = remainingTime % 60\n\n    return (\n        <Typography className={classes.timer}>\n            {remainingTime === 0 ? t.expired() : `${days}d :${hours}h :${minutes}m :${seconds}s`}\n        </Typography>\n    )\n}\n","import React, { useMemo, type ReactNode, useRef, useEffect } from 'react'\nimport { format } from 'date-fns'\nimport { EmptyStatus, LoadingStatus } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { IconButton, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { formatDate } from './EventList.js'\nimport { CountdownTimer } from './CountDownTimer.js'\nimport { useCalendarTrans } from '../../locales/i18n_generated.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '506px',\n        width: '100%',\n        overflowY: 'scroll',\n        position: 'relative',\n        gap: '10px',\n        '&::-webkit-scrollbar': {\n            width: '4px',\n        },\n        '&::-webkit-scrollbar-thumb': {\n            backgroundColor: theme.palette.maskColor.secondaryLine,\n            borderRadius: '99px',\n        },\n        marginBottom: '50px',\n    },\n    paddingWrap: {\n        paddingRight: '12px',\n    },\n    empty: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%,-50%)',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        gap: 12,\n        color: theme.palette.maskColor.second,\n        whiteSpace: 'nowrap',\n    },\n    eventCard: {\n        display: 'flex',\n        padding: '8px 0',\n        flexDirection: 'column',\n        gap: '8px',\n        fontWeight: 700,\n        lineHeight: '16px',\n        fontSize: '12px',\n        cursor: 'pointer',\n    },\n    eventHeader: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'space-between',\n    },\n    projectWrap: {\n        display: 'flex',\n        gap: 8,\n        alignItems: 'center',\n        color: theme.palette.maskColor.main,\n    },\n    projectName: {\n        color: theme.palette.maskColor.main,\n        fontSize: '12px',\n        fontWeight: 700,\n        lineHeight: '16px',\n    },\n    logo: {\n        width: '24px',\n        height: '24px',\n        borderRadius: '50%',\n    },\n    eventTitle: {\n        fontSize: '14px',\n        fontWeight: 400,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.main,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    second: {\n        fontSize: '14px',\n        fontWeight: 400,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.second,\n    },\n    poster: {\n        borderRadius: '8px',\n        width: '100%',\n        height: '156px',\n        objectFit: 'cover',\n    },\n    dateDiv: {\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.main,\n        padding: '10px 0',\n    },\n    socialLinks: {\n        display: 'flex',\n        gap: '8px',\n        alignItems: 'center',\n    },\n}))\n\ninterface NFTListProps {\n    list: Record<string, any[]>\n    isLoading: boolean\n    empty: boolean\n    dateString: string\n}\n\nconst socialIcons: Record<string, ReactNode> = {\n    twitter: <Icons.TwitterX size={18} />,\n    discord: <Icons.DiscordRoundBlack size={20} color=\"#000\" />,\n    website: <Icons.WebBlack size={20} />,\n}\n\nconst sortPlat = (_: any, b: { type: string }) => {\n    if (b.type === 'website') return -1\n    else return 0\n}\n\nexport function NFTList({ list, isLoading, empty, dateString }: NFTListProps) {\n    const { classes, cx } = useStyles()\n    const t = useCalendarTrans()\n    const listRef = useRef<HTMLDivElement>(null)\n    const listAfterDate = useMemo(() => {\n        const listAfterDate: string[] = []\n        for (const key in list) {\n            if (new Date(key) >= new Date(dateString)) {\n                listAfterDate.push(key)\n            }\n        }\n        return listAfterDate\n    }, [list, dateString])\n    useEffect(() => {\n        if (listRef.current)\n            listRef.current.scrollTo({\n                top: 0,\n            })\n    }, [listRef, list])\n    return (\n        <div className={classes.container} ref={listRef}>\n            <div className={classes.paddingWrap}>\n                {isLoading && !list?.length ? (\n                    <div className={cx(classes.empty, classes.eventTitle)}>\n                        <LoadingStatus />\n                    </div>\n                ) : !empty && listAfterDate.length ? (\n                    listAfterDate.map((key) => {\n                        return (\n                            <div key={key}>\n                                <Typography className={classes.dateDiv}>\n                                    {format(new Date(key), 'MMM dd,yyy')}\n                                </Typography>\n                                {list[key].map((v) => (\n                                    <div\n                                        className={classes.eventCard}\n                                        key={v.eventTitle}\n                                        onClick={() => {\n                                            window.open(v.event_url)\n                                        }}>\n                                        <div className={classes.eventHeader}>\n                                            <div className={classes.projectWrap}>\n                                                <img src={v.project.logo} className={classes.logo} alt=\"logo\" />\n                                                <Typography className={classes.projectName}>\n                                                    {v.project.name}\n                                                </Typography>\n                                            </div>\n                                        </div>\n                                        <Typography className={classes.eventTitle}>{v.project.description}</Typography>\n                                        <div className={classes.eventHeader}>\n                                            <CountdownTimer targetDate={new Date(v.event_date)} />\n                                            <div className={classes.socialLinks}>\n                                                {v.project.links\n                                                    .sort(sortPlat)\n                                                    .map((platform: { type: string; url: string }) => {\n                                                        return (\n                                                            <IconButton\n                                                                style={{ width: '20px', height: '20px' }}\n                                                                key={platform.type}\n                                                                onClick={(e) => {\n                                                                    e.stopPropagation()\n                                                                    window.open(platform.url)\n                                                                }}>\n                                                                {socialIcons[platform.type]}\n                                                            </IconButton>\n                                                        )\n                                                    })}\n                                            </div>\n                                        </div>\n                                        <div className={classes.eventHeader}>\n                                            <Typography className={classes.second}>{t.total()}</Typography>\n                                            <Typography className={classes.eventTitle}>\n                                                {Number(v.ext_info.nft_info.total).toLocaleString('en-US')}\n                                            </Typography>\n                                        </div>\n                                        <div className={classes.eventHeader}>\n                                            <Typography className={classes.second}>{t.price()}</Typography>\n                                            <Typography className={classes.eventTitle}>\n                                                {v.ext_info.nft_info.token}\n                                            </Typography>\n                                        </div>\n                                        <div className={classes.eventHeader}>\n                                            <Typography className={classes.second}>{t.date()}</Typography>\n                                            <Typography className={classes.eventTitle}>\n                                                {formatDate(v.event_date)}\n                                            </Typography>\n                                        </div>\n                                        <img className={classes.poster} src={v.poster_url} alt=\"poster\" />\n                                    </div>\n                                ))}\n                            </div>\n                        )\n                    })\n                ) : (\n                    <EmptyStatus className={classes.empty}>{t.empty_status()}</EmptyStatus>\n                )}\n            </div>\n        </div>\n    )\n}\n","/* cspell: disable */\nimport React, { type ReactNode } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { Icons } from '@masknet/icons'\nimport { Typography, IconButton } from '@mui/material'\nimport { useCalendarTrans } from '../../locales/i18n_generated.js'\nimport { useOpenApplicationSettings, ApplicationSettingTabs } from '@masknet/shared'\nimport { PluginID } from '@masknet/shared-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        display: 'flex',\n        backdropFilter: 'blur(10px)',\n        borderRadius: '0 0 12px 12px',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        width: '100%',\n    },\n    lineWrap: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '12px',\n        width: '100%',\n    },\n    poweredByWrap: {\n        display: 'flex',\n        gap: '4px',\n        alignItems: 'center',\n    },\n    poweredBy: {\n        display: 'flex',\n        color: theme.palette.maskColor.second,\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight: '18px',\n        alignItems: 'center',\n    },\n    calender: {\n        display: 'flex',\n        gap: '8px',\n        alignItems: 'center',\n    },\n    calendarText: {\n        color: theme.palette.maskColor.main,\n        fontSize: '16px',\n        fontWeight: 700,\n        lineHeight: '20px',\n        alignItems: 'center',\n    },\n    providerName: {\n        color: theme.palette.maskColor.main,\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight: '18px',\n        alignItems: 'center',\n    },\n}))\n\ninterface FooterProps {\n    provider: string\n}\n\nexport function Footer({ provider }: FooterProps) {\n    const { classes } = useStyles()\n    const t = useCalendarTrans()\n    const providerMap: Record<string, ReactNode> = {\n        news: (\n            <>\n                <Typography className={classes.providerName}>CoinCarp</Typography>\n                <Icons.Coincarp size={24} />\n            </>\n        ),\n        event: (\n            <>\n                <Typography className={classes.providerName}>LINK3</Typography>\n                <Icons.Link3 size={24} />\n            </>\n        ),\n        nfts: (\n            <>\n                <Typography className={classes.providerName}>NFTGO</Typography>\n                <Icons.Nftgo size={24} />\n            </>\n        ),\n    }\n    const openApplicationBoardDialog = useOpenApplicationSettings()\n    return (\n        <div className={classes.container}>\n            <div className={classes.lineWrap}>\n                <div className={classes.calender}>\n                    <Icons.Calendar size={24} />\n                    <Typography className={classes.calendarText}>{t.title()}</Typography>\n                </div>\n                <div className={classes.poweredByWrap}>\n                    <Typography className={classes.poweredBy}>{t.powered_by()}</Typography>\n                    {providerMap[provider]}\n                    <IconButton\n                        sx={{ width: '16px', height: '16px' }}\n                        onClick={() =>\n                            openApplicationBoardDialog(ApplicationSettingTabs.pluginSwitch, PluginID.Calendar)\n                        }>\n                        <Icons.Gear size={16} />\n                    </IconButton>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/* cspell: disable */\nimport React, { useState, useMemo } from 'react'\nimport { Tab } from '@mui/material'\nimport { TabContext, TabPanel } from '@mui/lab'\nimport { safeUnreachable } from '@masknet/kit'\nimport { PluginID } from '@masknet/shared-base'\nimport { useIsMinimalMode } from '@masknet/plugin-infra/content-script'\nimport { makeStyles, MaskTabList, useTabs } from '@masknet/theme'\nimport { useLocationChange } from '@masknet/shared-base-ui'\nimport { DatePickerTab } from './components/DatePickerTab.js'\nimport { useEventList, useNFTList, useNewsList } from '../hooks/useEventList.js'\nimport { NewsList } from './components/NewsList.js'\nimport { EventList } from './components/EventList.js'\nimport { NFTList } from './components/NFTList.js'\nimport { Footer } from './components/Footer.js'\nimport { useCalendarTrans } from '../locales/i18n_generated.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    calendar: {\n        display: 'flex',\n        flexDirection: 'column',\n        borderRadius: '12px',\n        border: `1px solid ${theme.palette.maskColor.line}`,\n        position: 'relative',\n        marginBottom: '20px',\n    },\n    tab: {\n        fontSize: 16,\n        fontWeight: 700,\n    },\n    tabList: {\n        background:\n            'linear-gradient(180deg, rgba(255, 255, 255, 0.00) 0%, rgba(255, 255, 255, 0.80) 100%), linear-gradient(90deg, rgba(28, 104, 243, 0.20) 0%, rgba(69, 163, 251, 0.20) 100%), #FFF',\n        padding: '8px 16px 0 16px',\n        borderRadius: '12px 12px 0 0',\n    },\n    tabPanel: {\n        padding: '0 4px 0 12px',\n    },\n}))\n\nexport function CalendarContent({ target }: { target?: string }) {\n    const t = useCalendarTrans()\n    const { classes } = useStyles()\n    const [pathname, setPathname] = useState(location.pathname)\n    const isMinimalMode = useIsMinimalMode(PluginID.Calendar)\n    const [currentTab, onChange, tabs] = useTabs('news', 'event', 'nfts')\n    const [selectedDate, setSelectedDate] = useState(new Date())\n    const [open, setOpen] = useState(false)\n    const { data: eventList, isLoading: eventLoading } = useEventList(selectedDate)\n    const { data: newsList, isLoading: newsLoading } = useNewsList(selectedDate)\n    const { data: nftList, isLoading: nftLoading } = useNFTList(selectedDate)\n    const list = useMemo(() => {\n        switch (currentTab) {\n            case 'news':\n                return newsList\n            case 'event':\n                return eventList\n            case 'nfts':\n                return nftList\n            default:\n                safeUnreachable(currentTab)\n                return null\n        }\n    }, [currentTab, newsList, eventList, nftList])\n    const dateString = useMemo(() => selectedDate.toLocaleDateString(), [selectedDate])\n\n    useLocationChange(() => {\n        setPathname(location.pathname)\n    })\n    if (isMinimalMode || (target && !pathname?.includes(target))) return null\n\n    return (\n        <div className={classes.calendar} style={{ marginTop: pathname?.includes('explore') ? 24 : 0 }}>\n            <TabContext value={currentTab}>\n                <div className={classes.tabList}>\n                    <MaskTabList variant=\"base\" onChange={onChange} aria-label=\"\">\n                        <Tab className={classes.tab} label={t.news()} value={tabs.news} />\n                        <Tab className={classes.tab} label={t.event()} value={tabs.event} />\n                        <Tab className={classes.tab} label={t.nfts()} value={tabs.nfts} />\n                    </MaskTabList>\n                </div>\n                <DatePickerTab\n                    open={open}\n                    setOpen={(open) => setOpen(open)}\n                    selectedDate={selectedDate}\n                    setSelectedDate={(date: Date) => setSelectedDate(date)}\n                    list={list}\n                    currentTab={currentTab}\n                />\n                <TabPanel value={tabs.news} className={classes.tabPanel}>\n                    <NewsList\n                        list={newsList}\n                        isLoading={newsLoading}\n                        empty={!Object.keys(newsList).length}\n                        dateString={dateString}\n                    />\n                </TabPanel>\n                <TabPanel value={tabs.event} className={classes.tabPanel}>\n                    <EventList\n                        list={eventList}\n                        isLoading={eventLoading}\n                        empty={!Object.keys(eventList).length}\n                        dateString={dateString}\n                    />\n                </TabPanel>\n                <TabPanel value={tabs.nfts} className={classes.tabPanel}>\n                    <NFTList\n                        list={nftList}\n                        isLoading={nftLoading}\n                        empty={!Object.keys(newsList).length}\n                        dateString={dateString}\n                    />\n                </TabPanel>\n                <Footer provider={currentTab} />\n            </TabContext>\n        </div>\n    )\n}\n","import { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { querySelector } from '../utils/selector.js'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { CalendarContent } from '@masknet/plugin-calendar'\n\nfunction sidebarSearchSelector() {\n    return querySelector<HTMLElement>(\n        '[data-testid=\"sidebarColumn\"] > div > div > div > div[tabindex=\"0\"] > div > div:not(div[tabindex=\"0\"]):empty',\n    )\n}\n\nfunction sidebarExplorePageSelector() {\n    return querySelector<HTMLElement>('[data-testid=\"settingsAppBar\"]')\n        .closest(12)\n        .querySelector('[data-testid=\"sidebarColumn\"] [tabindex=\"0\"] > div')\n}\n\nfunction sidebarSearchPageSelector() {\n    return querySelector<HTMLElement>('[data-testid=\"searchBoxOverflowButton\"]')\n        .closest(11)\n        .querySelector('[data-testid=\"sidebarColumn\"] [tabindex=\"0\"] > div > div')\n}\nexport function injectCalendar(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(sidebarSearchSelector())\n    const exploreWatcher = new MutationObserverWatcher(sidebarExplorePageSelector())\n    const searchWatcher = new MutationObserverWatcher(sidebarSearchPageSelector())\n    startWatch(watcher, signal)\n    startWatch(exploreWatcher, signal)\n    startWatch(searchWatcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { untilVisible: true, signal }).render(\n        <CalendarContent />,\n    )\n    attachReactTreeWithContainer(exploreWatcher.firstDOMProxy.beforeShadow, { untilVisible: true, signal }).render(\n        <CalendarContent target=\"/explore\" />,\n    )\n    attachReactTreeWithContainer(searchWatcher.firstDOMProxy.afterShadow, { untilVisible: true, signal }).render(\n        <CalendarContent target=\"/search\" />,\n    )\n}\n","/* eslint-disable tss-unused-classes/unused-classes */\nimport type { SiteAdaptorUI } from '@masknet/types'\nimport { EnhanceableSite, NextIDPlatform, ProfileIdentifier } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { FontSize, ThemeColor, ThemeMode } from '@masknet/web3-shared-base'\nimport { activatedSiteAdaptor_state, stateCreator } from '../../site-adaptor-infra/index.js'\nimport { twitterBase } from './base.js'\nimport getSearchedKeywordAtTwitter from './collecting/getSearchedKeyword.js'\nimport { twitterShared } from './shared.js'\nimport { InitAutonomousStateProfiles } from '../../site-adaptor-infra/defaults/state/InitProfiles.js'\nimport { openComposeBoxTwitter } from './automation/openComposeBox.js'\nimport { pasteTextToCompositionTwitter } from './automation/pasteTextToComposition.js'\nimport { pasteImageToCompositionTwitter } from './automation/pasteImageToComposition.js'\nimport { gotoNewsFeedPageTwitter } from './automation/gotoNewsFeedPage.js'\nimport { gotoProfilePageTwitter } from './automation/gotoProfilePage.js'\nimport { publishPostTwitter } from './automation/publishPost.js'\nimport { IdentityProviderTwitter, CurrentVisitingIdentityProviderTwitter } from './collecting/identity.js'\nimport { ThemeSettingsProviderTwitter } from './collecting/theme.js'\nimport { collectVerificationPost, PostProviderTwitter, getPostIdFromNewPostToast } from './collecting/post.js'\nimport { useThemeTwitterVariant } from './customization/custom.js'\nimport { injectToolboxHintAtTwitter } from './injection/ToolboxHint.js'\nimport { i18NOverwriteTwitter } from './customization/i18n.js'\nimport { injectSearchResultInspectorAtTwitter } from './injection/SearchResultInspector.js'\nimport { injectProfileTabAtTwitter } from './injection/ProfileTab.js'\nimport { injectProfileTabContentAtTwitter } from './injection/ProfileTabContent.js'\nimport { injectPostReplacerAtTwitter } from './injection/PostReplacer.js'\nimport { injectPageInspectorDefault } from '../../site-adaptor-infra/defaults/inject/PageInspector.js'\nimport { injectBannerAtTwitter } from './injection/Banner.js'\nimport { injectPostBoxComposed } from './injection/inject.js'\nimport { createTaskStartSetupGuideDefault } from '../../site-adaptor-infra/defaults/inject/StartSetupGuide.js'\nimport { injectMaskUserBadgeAtTwitter } from './injection/MaskIcon.js'\nimport { injectPostInspectorAtTwitter } from './injection/PostInspector.js'\nimport { injectPostActionsAtTwitter } from './injection/PostActions/index.js'\nimport { injectTips } from './injection/Tips/index.js'\nimport { injectUserNFTAvatarAtTwitter } from './injection/NFT/Avatar.js'\nimport {\n    injectOpenNFTAvatarEditProfileButton,\n    openNFTAvatarSettingDialog,\n} from './injection/NFT/NFTAvatarEditProfile.js'\nimport { injectUserNFTAvatarAtTweet } from './injection/NFT/TweetNFTAvatar.js'\nimport { TwitterRenderFragments } from './customization/render-fragments.js'\nimport { injectProfileCover } from './injection/ProfileCover.js'\nimport { injectProfileCardHolder } from './injection/ProfileCard/index.js'\nimport { injectAvatar } from './injection/Avatar/index.js'\nimport { injectLens } from './injection/Lens/index.js'\nimport { injectNFTAvatarInTwitter } from './injection/NFT/index.js'\nimport { injectSwitchLogoButton } from './injection/SwitchLogo.js'\nimport { injectCalendar } from './injection/Calendar.js'\n\nconst useInjectedDialogClassesOverwriteTwitter = makeStyles()((theme) => {\n    const smallQuery = `@media (max-width: ${theme.breakpoints.values.sm}px)`\n    return {\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            [smallQuery]: {\n                display: 'block !important',\n            },\n        },\n        container: {\n            alignItems: 'center',\n        },\n        paper: {\n            width: '600px !important',\n            minHeight: 400,\n            maxHeight: 620,\n            maxWidth: 'none',\n            boxShadow: 'none',\n            backgroundImage: 'none',\n            [smallQuery]: {\n                display: 'block !important',\n                margin: 12,\n            },\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        dialogTitle: {\n            display: 'grid',\n            gridTemplateColumns: '1fr auto 1fr',\n            alignItems: 'center',\n            padding: 16,\n            position: 'relative',\n            background: theme.palette.maskColor.modalTitleBg,\n            borderBottom: 'none',\n            '& > p': {\n                fontSize: 18,\n                lineHeight: '22px',\n                display: 'inline-block',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n            },\n            [smallQuery]: {\n                display: 'flex',\n                justifyContent: 'start',\n                maxWidth: 600,\n                minWidth: '100%',\n                boxSizing: 'border-box',\n                margin: '0 auto',\n                padding: '7px 14px 6px 11px !important',\n            },\n        },\n        dialogContent: {\n            backgroundColor: theme.palette.maskColor.bottom,\n            [smallQuery]: {\n                display: 'flex',\n                flexDirection: 'column',\n                maxWidth: 600,\n                minWidth: '100%',\n                margin: '0 auto',\n                padding: '7px 14px 6px',\n            },\n        },\n        dialogActions: {\n            backgroundColor: theme.palette.maskColor.bottom,\n            padding: '6px 16px',\n            [smallQuery]: {\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n                maxWidth: 600,\n                margin: '0 auto',\n                padding: '7px 14px 6px !important',\n            },\n        },\n        dialogBackdropRoot: {\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(110, 118, 125, 0.4)' : 'rgba(0, 0, 0, 0.4)',\n        },\n    }\n})\n\nconst twitterUI: SiteAdaptorUI.Definition = {\n    ...twitterBase,\n    ...twitterShared,\n    automation: {\n        maskCompositionDialog: {\n            open: openComposeBoxTwitter,\n        },\n        nativeCommentBox: undefined,\n        nativeCompositionDialog: {\n            attachText: pasteTextToCompositionTwitter,\n            // TODO: make a better way to detect\n            attachImage: pasteImageToCompositionTwitter,\n        },\n        redirect: {\n            newsFeed: gotoNewsFeedPageTwitter,\n            profilePage: gotoProfilePageTwitter,\n        },\n        endpoint: {\n            publishPost: publishPostTwitter,\n        },\n    },\n    collecting: {\n        identityProvider: IdentityProviderTwitter,\n        currentVisitingIdentityProvider: CurrentVisitingIdentityProviderTwitter,\n        themeSettingsProvider: ThemeSettingsProviderTwitter,\n        postsProvider: PostProviderTwitter,\n        getSearchedKeyword: getSearchedKeywordAtTwitter,\n    },\n    customization: {\n        sharedComponentOverwrite: {\n            InjectedDialog: {\n                classes: useInjectedDialogClassesOverwriteTwitter,\n            },\n        },\n        componentOverwrite: {\n            RenderFragments: TwitterRenderFragments,\n        },\n        useTheme: useThemeTwitterVariant,\n        i18nOverwrite: i18NOverwriteTwitter,\n    },\n    init(signal) {\n        const profiles = stateCreator.profiles()\n        InitAutonomousStateProfiles(signal, profiles, twitterShared.networkIdentifier)\n        return { profiles }\n    },\n    injection: {\n        toolbox: injectToolboxHintAtTwitter,\n        searchResult: injectSearchResultInspectorAtTwitter,\n        profileTab: injectProfileTabAtTwitter,\n        profileCover: injectProfileCover,\n        profileTabContent: injectProfileTabContentAtTwitter,\n        postReplacer: injectPostReplacerAtTwitter,\n        pageInspector: injectPageInspectorDefault(),\n        postInspector: injectPostInspectorAtTwitter,\n        postActions: injectPostActionsAtTwitter,\n        banner: injectBannerAtTwitter,\n        newPostComposition: {\n            start: injectPostBoxComposed,\n            supportedInputTypes: {\n                text: true,\n                image: true,\n            },\n            supportedOutputTypes: {\n                text: true,\n                image: true,\n            },\n        },\n        setupWizard: createTaskStartSetupGuideDefault(),\n        userBadge: injectMaskUserBadgeAtTwitter,\n        commentComposition: undefined,\n        userAvatar: injectUserNFTAvatarAtTwitter,\n        profileAvatar: injectNFTAvatarInTwitter,\n        openNFTAvatar: injectOpenNFTAvatarEditProfileButton,\n        postAndReplyNFTAvatar: injectUserNFTAvatarAtTweet,\n        openNFTAvatarSettingDialog,\n        avatar: injectAvatar,\n        tips: injectTips,\n        lens: injectLens,\n        profileCard: injectProfileCardHolder,\n        switchLogo: injectSwitchLogoButton,\n        calendar: injectCalendar,\n    },\n    configuration: {\n        themeSettings: {\n            color: ThemeColor.Blue,\n            size: FontSize.Normal,\n            mode: ThemeMode.Light,\n            isDim: false,\n        },\n        nextIDConfig: {\n            enable: true,\n            platform: NextIDPlatform.Twitter,\n            collectVerificationPost,\n            getPostIdFromNewPostToast,\n        },\n        steganography: {\n            // ! Change this is a breaking change !\n            password() {\n                const id =\n                    IdentityProviderTwitter.recognized.value.identifier?.userId ||\n                    activatedSiteAdaptor_state!.profiles.value?.[0].identifier.userId\n                if (!id) throw new Error('Cannot figure out password')\n                return ProfileIdentifier.of(EnhanceableSite.Twitter, id)\n                    .expect(`${id} should be a valid user id`)\n                    .toText()\n            },\n        },\n    },\n}\n\nexport default twitterUI\n","import { IntervalWatcher, type LiveSelector } from '@dimensiondev/holoflows-kit'\n\nexport function untilElementAvailable(ls: LiveSelector<HTMLElement, boolean>, timeout = 5000) {\n    return new Promise<void>((resolve, reject) => {\n        const w = new IntervalWatcher(ls)\n        setTimeout(() => reject(), timeout)\n        w.useForeach(() => {\n            w.stopWatch()\n            resolve()\n        }).startWatch(500)\n    })\n}\n","import { useSubscription } from 'use-subscription'\nimport { currentVisitingProfile } from './context.js'\n\nexport function useCurrentVisitingIdentity() {\n    return useSubscription(currentVisitingProfile)\n}\n","import { useEffect } from 'react'\nimport { MaskMessages } from '@masknet/shared-base'\nimport type { IdentityResolved } from '../types.js'\nimport { useQuery } from '@tanstack/react-query'\nimport { currentNextIDPlatform } from './context.js'\nimport { querySocialIdentity } from '../dom/context.js'\n\n/**\n * Get the social identity of the given identity\n */\nexport function useSocialIdentity(identity: IdentityResolved | null | undefined) {\n    const result = useQuery({\n        queryKey: ['next-id', identity, currentNextIDPlatform],\n        enabled: Boolean(identity && currentNextIDPlatform),\n        queryFn: async () => {\n            if (!currentNextIDPlatform || !identity) return null\n            return querySocialIdentity(currentNextIDPlatform, identity)\n        },\n        refetchOnWindowFocus: false,\n    })\n\n    useEffect(() => MaskMessages.events.ownProofChanged.on(() => result.refetch()), [result.refetch])\n\n    return result\n}\n","import { WebExtensionMessage } from '@dimensiondev/holoflows-kit'\nimport type { PluginMessageEmitterItem } from '@masknet/plugin-infra'\nimport { serializer } from '@masknet/shared-base'\n\n/** @internal */\nexport const DOMAIN_RPC = Symbol('create RPC instead of normal message')\n/**\n * Create a plugin message emitter\n * @param pluginID The plugin ID\n *\n * @example\n * export const MyPluginMessage = getPluginMessage(PLUGIN_ID)\n */\nexport let getPluginMessage = <T>(pluginID: string, type?: typeof DOMAIN_RPC): PluginMessageEmitter<T> => {\n    const domain = (type === DOMAIN_RPC ? '@plugin-rpc/' : '@plugin/') + pluginID\n    if (cache.has(domain)) return cache.get(domain) as any\n\n    const messageCenter = new WebExtensionMessage<T>({ domain })\n    const events = messageCenter.events\n    messageCenter.serialization = serializer\n    cache.set(domain, events)\n    return events\n}\n\nexport function __workaround__replaceImplementationOfCreatePluginMessage__(\n    newImpl: (pluginID: string) => PluginMessageEmitter<any>,\n) {\n    getPluginMessage = newImpl\n}\nexport type PluginMessageEmitter<T> = { readonly [key in keyof T]: PluginMessageEmitterItem<T[key]> }\nconst cache = new Map<string, PluginMessageEmitter<unknown>>()\n\n// TODO: this type should be defined here, not shared-base\nexport type { PluginMessageEmitterItem } from '@masknet/shared-base'\n","import { Environment, isEnvironment } from '@dimensiondev/holoflows-kit'\nimport { AsyncCall, type AsyncCallLogLevel, AsyncGeneratorCall } from 'async-call-rpc/full'\nimport { serializer, getOrUpdateLocalImplementationHMR } from '@masknet/shared-base'\nimport { getPluginMessage } from '@masknet/plugin-infra'\nimport { DOMAIN_RPC } from './message.js'\n\nconst log: AsyncCallLogLevel = {\n    type: 'pretty',\n    requestReplay: process.env.NODE_ENV === 'development',\n    sendLocalStack: process.env.NODE_ENV === 'development',\n}\nlet isBackground = () => isEnvironment(Environment.ManifestBackground)\nexport function __workaround__replaceIsBackground__(f: () => boolean) {\n    isBackground = f\n}\n\nfunction getPluginRPCInternal(\n    cache: Map<string, object>,\n    pluginID: string,\n    starter: typeof AsyncCall | typeof AsyncGeneratorCall,\n    entry: keyof RPCMessage,\n) {\n    if (cache.has(pluginID)) return cache.get(pluginID)\n    const message = getPluginMessage<RPCMessage>(pluginID, DOMAIN_RPC)\n    const rpc = starter(Object.create(null), {\n        key: `@plugin/${pluginID}`,\n        channel: {\n            on: message[entry].on,\n            send: message[entry].sendToBackgroundPage,\n        },\n        serializer,\n        log,\n        thenable: false,\n    })\n    cache.set(pluginID, rpc)\n    return rpc\n}\nconst cache = new Map<string, object>()\nconst cacheGenerator = new Map<string, object>()\nexport function getPluginRPC<T>(pluginID: string): T {\n    if (isBackground()) startPluginRPC(pluginID, new AbortController().signal, Object.create(null))\n    return getPluginRPCInternal(cache, pluginID, AsyncCall, '_') as T\n}\nexport function getPluginRPCGenerator<T>(pluginID: string): T {\n    if (isBackground()) startPluginGeneratorRPC(pluginID, new AbortController().signal, Object.create(null))\n    return getPluginRPCInternal(cacheGenerator, pluginID, AsyncGeneratorCall, '$') as T\n}\n\nfunction startPluginRPCInternal(\n    cache: Map<string, object>,\n    pluginID: string,\n    signal: AbortSignal,\n    impl: object,\n    starter: typeof AsyncCall | typeof AsyncGeneratorCall,\n    entry: keyof RPCMessage,\n) {\n    if (!isBackground()) throw new Error('Cannot start RPC in the UI.')\n    const message = getPluginMessage<RPCMessage>(pluginID, DOMAIN_RPC)\n    const delegate = getOrUpdateLocalImplementationHMR(() => impl, message[entry])\n    if (cache.has(pluginID)) return\n    cache.set(pluginID, delegate)\n    starter(delegate, {\n        key: pluginID,\n        channel: {\n            on: message[entry].on,\n            send: message[entry].sendByBroadcast,\n        },\n        serializer,\n        log,\n        thenable: false,\n    })\n}\n/** @internal */\nexport function startPluginRPC(pluginID: string, signal: AbortSignal, impl: object) {\n    startPluginRPCInternal(cache, pluginID, signal, impl, AsyncCall, '_')\n}\n/** @internal */\nexport function startPluginGeneratorRPC(pluginID: string, signal: AbortSignal, impl: object) {\n    startPluginRPCInternal(cacheGenerator, pluginID, signal, impl, AsyncGeneratorCall, '$')\n}\n\ninterface RPCMessage {\n    // RPC\n    _: unknown\n    // Generator\n    $: unknown\n}\n","import { useAsync } from 'react-use'\nimport { getUserIdentity } from './context.js'\nimport { useSocialIdentity } from './useSocialIdentity.js'\n\nexport function useSocialIdentityByUserId(userId?: string) {\n    const { value: identity } = useAsync(async () => {\n        if (!userId) return\n        return getUserIdentity?.(userId)\n    }, [userId])\n    return useSocialIdentity(identity)\n}\n","import { resolveNetworkToNextIDPlatform } from '@masknet/shared-base'\nimport { useQuery } from '@tanstack/react-query'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { useBaseUIRuntime } from '@masknet/shared'\n\nexport function useProfilePublicKey(userId?: string) {\n    const { networkIdentifier } = useBaseUIRuntime()\n    const platform = resolveNetworkToNextIDPlatform(networkIdentifier)\n    return useQuery({\n        queryKey: ['next-id', 'lasted-active', platform, userId],\n        queryFn: async () => {\n            if (!userId || !platform) return\n            const binding = await NextIDProof.queryLatestBindingByPlatform(platform, userId)\n            return binding?.persona\n        },\n    })\n}\n","import { useMemo } from 'react'\nimport type { IdentityResolved } from '@masknet/plugin-infra'\nimport { EMPTY_LIST, PluginID } from '@masknet/shared-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { useHiddenAddressConfigOf, useSocialAccountsAll } from '@masknet/web3-hooks-base'\nimport { signWithPersona } from '@masknet/plugin-infra/dom/context'\n\n/**\n * Get Tips accounts, removing the hidden ones,\n * and put the default one at the front.\n */\nexport function useTipsAccounts(identity: IdentityResolved | null | undefined, personaPubkey: string | undefined) {\n    const { data: socialAccounts = EMPTY_LIST } = useSocialAccountsAll(identity)\n    const userId = identity?.identifier?.userId\n    const { data: hiddenAddresses } = useHiddenAddressConfigOf(\n        personaPubkey,\n        PluginID.Web3Profile,\n        userId,\n        signWithPersona,\n    )\n    return useMemo(() => {\n        if (!hiddenAddresses?.length) return socialAccounts\n        const list = socialAccounts\n        return list.filter((x) => !hiddenAddresses.some((y) => isSameAddress(y, x.address)))\n    }, [hiddenAddresses, socialAccounts, userId])\n}\n","import { Icons } from '@masknet/icons'\nimport { useCurrentVisitingIdentity, useSocialIdentityByUserId } from '@masknet/plugin-infra/content-script'\nimport {\n    EMPTY_LIST,\n    NetworkPluginID,\n    SocialAddressType,\n    type ProfileIdentifier,\n    type SocialAccount,\n} from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useNetworkContext } from '@masknet/web3-hooks-base'\nimport { useCallback, useEffect, useMemo, type HTMLProps, type MouseEventHandler } from 'react'\nimport { useProfilePublicKey } from '../../hooks/useProfilePublicKey.js'\nimport { PluginTipsMessages } from '../../messages.js'\nimport { useTipsAccounts } from './useTipsAccounts.js'\n\ninterface Props extends HTMLProps<HTMLDivElement> {\n    // This is workaround solution, link issue mf-2536 and pr #7576.\n    // Should refactor social account to support multi-account for one post.\n    accounts?: Array<SocialAccount<Web3Helper.ChainIdAll>>\n    recipient?: string\n    receiver?: ProfileIdentifier\n    buttonSize?: number\n    iconSize?: number\n    onStatusUpdate?(disabled: boolean): void\n}\n\nconst useStyles = makeStyles<{ iconSize: number }>()((theme, props) => ({\n    tipButton: {\n        cursor: 'pointer',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontFamily: '-apple-system, system-ui, sans-serif',\n    },\n    icon: {\n        width: props.iconSize,\n        height: props.iconSize,\n    },\n}))\n\nexport function TipButton(props: Props) {\n    const {\n        className,\n        accounts: receivingAccounts = EMPTY_LIST,\n        receiver,\n        recipient,\n        children,\n        iconSize = 24,\n        onStatusUpdate,\n        ...rest\n    } = props\n    const { classes, cx } = useStyles({ iconSize })\n\n    const { data: personaPubkey, isLoading: loadingPersona } = useProfilePublicKey(receiver?.userId)\n    const receiverUserId = receiver?.userId\n\n    const { pluginID } = useNetworkContext()\n    const visitingIdentity = useCurrentVisitingIdentity()\n    const { data: identity } = useSocialIdentityByUserId(receiverUserId)\n\n    const isVisitingUser = visitingIdentity?.identifier?.userId === receiverUserId\n    const isRuntimeAvailable = useMemo(() => {\n        switch (pluginID) {\n            case NetworkPluginID.PLUGIN_EVM:\n                return true\n            case NetworkPluginID.PLUGIN_SOLANA:\n                return isVisitingUser\n        }\n        return false\n    }, [pluginID, isVisitingUser])\n\n    const accountsByIdentity = useTipsAccounts(identity, personaPubkey)\n    const accounts = useMemo(() => {\n        return [...receivingAccounts, ...accountsByIdentity]\n            .sort((a, z) => {\n                const aHasNextId = a.supportedAddressTypes?.includes(SocialAddressType.NEXT_ID)\n                const zHasNextId = z.supportedAddressTypes?.includes(SocialAddressType.NEXT_ID)\n                if (aHasNextId === zHasNextId) return 0\n                return aHasNextId ? -1 : zHasNextId ? 1 : 0\n            })\n            .sort((a, z) => {\n                if (a.pluginID === z.pluginID) return 0\n                return a.pluginID === pluginID ? -1 : 1\n            })\n    }, [receivingAccounts, accountsByIdentity, pluginID])\n\n    const disabled = loadingPersona || accounts.length === 0 || !isRuntimeAvailable\n\n    useEffect(() => {\n        onStatusUpdate?.(disabled)\n    }, [disabled])\n\n    const createTipTask: MouseEventHandler<HTMLDivElement> = useCallback(\n        async (evt) => {\n            evt.stopPropagation()\n            evt.preventDefault()\n            if (disabled) return\n            if (!accounts.length || !receiverUserId) return\n            PluginTipsMessages.tipTask.sendToLocal({\n                recipient,\n                recipientUserId: receiverUserId,\n                accounts,\n            })\n        },\n        [disabled, recipient, accounts, receiverUserId],\n    )\n\n    useEffect(() => {\n        if (!receiverUserId || !accounts.length) return\n        PluginTipsMessages.tipTaskUpdate.sendToLocal({\n            recipient,\n            recipientUserId: receiverUserId,\n            accounts,\n        })\n    }, [recipient, receiverUserId, accounts])\n\n    if (disabled) return null\n\n    return (\n        <div className={cx(className, classes.tipButton)} {...rest} role=\"button\" onClick={createTipTask}>\n            <Icons.TipCoin className={classes.icon} />\n            {children}\n        </div>\n    )\n}\n","import { PluginID } from '@masknet/shared-base'\nimport { getPluginMessage, type PluginMessageEmitter } from '@masknet/plugin-infra'\nimport type { TipTask } from './types/index.js'\n\ninterface TipMessage {\n    tipTask: TipTask\n    tipTaskUpdate: TipTask\n}\n\nimport.meta.webpackHot?.accept()\nexport const PluginTipsMessages: PluginMessageEmitter<TipMessage> = getPluginMessage(PluginID.Tips)\n","import { getPluginMessage, getPluginRPC, type PluginMessageEmitter } from '@masknet/plugin-infra'\nimport type { GasConfig } from '@masknet/web3-shared-evm'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { SocialIdentity } from '@masknet/shared-base'\nimport { PLUGIN_ID } from './constants/index.js'\nimport type { TagType } from './types/index.js'\n\ninterface TrendingAnchorEvent {\n    name: string\n    type: TagType\n    anchorBounding: DOMRect\n    anchorEl: HTMLElement | null\n    address?: string\n    isCollectionProjectPopper?: boolean\n    identity?: SocialIdentity\n    currentResult?: Web3Helper.TokenResultAll\n}\n\ninterface SwapSettingsEvent {\n    open: boolean\n    gasConfig?: GasConfig\n}\n\nexport interface TraderMessage {\n    /**\n     * View a cash tag\n     */\n    trendingAnchorObserved: TrendingAnchorEvent\n\n    /**\n     * Swap settings dialog\n     */\n    swapSettingsUpdated: SwapSettingsEvent\n\n    rpc: unknown\n}\n\nimport.meta.webpackHot?.accept()\nexport const PluginTraderMessages: PluginMessageEmitter<TraderMessage> = getPluginMessage(PLUGIN_ID)\nexport const PluginTraderRPC = getPluginRPC<typeof import('./apis/index.js')>(PLUGIN_ID)\n","import { createContext, useMemo, type PropsWithChildren, useContext } from 'react'\n\ninterface AnchorContextOptions {\n    anchorEl: HTMLElement | null\n    anchorBounding?: DOMRect\n}\n\nexport const AnchorContext = createContext<AnchorContextOptions>({\n    anchorEl: null,\n})\n\ninterface Props {\n    anchorEl: HTMLElement | null\n    anchorBounding?: DOMRect\n}\nexport function AnchorProvider({ anchorEl, anchorBounding, children }: PropsWithChildren<Props>) {\n    const contextValue = useMemo(() => ({ anchorEl, anchorBounding }), [anchorEl, anchorBounding])\n    return <AnchorContext.Provider value={contextValue}>{children}</AnchorContext.Provider>\n}\n\nexport function useAnchor() {\n    return useContext(AnchorContext)\n}\n","const cache = new WeakMap<object, object>()\n/**\n * This function provides a localImplementation that has HMR support.\n * To update, call this function with the SAME key object.\n * @param impl The implementation. Can be an async function.\n * @param key The reference object that must be the same if you're updating.\n */\nexport async function getOrUpdateLocalImplementationHMR<T extends object>(impl: () => T | Promise<T>, key: object) {\n    if (!import.meta.webpackHot) return impl()\n\n    const result: any = await impl()\n    if (!cache.has(key)) cache.set(key, Object.create(null))\n    const localImpl = cache.get(key)\n    Object.setPrototypeOf(localImpl, result)\n    return localImpl\n}\n","import { useCallback } from 'react'\nimport type { PluginID } from '@masknet/shared-base'\nimport { setPluginMinimalModeEnabled } from '@masknet/plugin-infra/dom/context'\nimport type { ApplicationSettingTabs } from '../UI/modals/ApplicationBoardModal/ApplicationBoardDialog.js'\nimport { ApplicationBoardSettingsModal } from '../index.js'\n\nexport function useOpenApplicationSettings() {\n    return useCallback((tab?: ApplicationSettingTabs, focusPluginID?: PluginID) => {\n        ApplicationBoardSettingsModal.open({\n            setPluginMinimalModeEnabled,\n            tab,\n            focusPluginID,\n        })\n    }, [])\n}\n","import { Popper } from '@mui/material'\nimport { createShadowRootForwardedComponent } from '../../ShadowRoot/index.js'\n\nexport const ShadowRootPopper = createShadowRootForwardedComponent(Popper)\nShadowRootPopper.displayName = 'ShadowRootTooltip'\n","import type { TokenType, SourceType } from '@masknet/web3-shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport type { NetworkPluginID } from '@masknet/shared-base'\n\nexport namespace TrendingAPI {\n    export interface Settings {\n        currency: Currency\n    }\n    export enum TagType {\n        CASH = 1,\n        HASH = 2,\n    }\n    export interface Currency {\n        id: string\n        chainId?: Web3Helper.ChainIdAll\n        name: string\n        symbol?: string\n        description?: string\n    }\n\n    export interface Platform {\n        id: string | number\n        name: string\n        slug: string\n        symbol: string\n    }\n\n    export type CommunityType =\n        | 'discord'\n        | 'facebook'\n        | 'instagram'\n        | 'medium'\n        | 'reddit'\n        | 'telegram'\n        | 'github'\n        | 'youtube'\n        | 'twitter'\n        | 'other'\n\n    export type CommunityUrls = Array<{ type: Partial<CommunityType>; link: string }>\n    export interface Coin {\n        id: string\n        chainId?: Web3Helper.ChainIdAll\n        name: string\n        symbol: string\n        type: TokenType\n        decimals?: number\n        is_mirrored?: boolean\n        platform_url?: string\n        tags?: string[]\n        tech_docs_urls?: string[]\n        message_board_urls?: string[]\n        source_code_urls?: string[]\n        community_urls?: CommunityUrls\n        home_urls?: string[]\n        nftscan_url?: string\n        announcement_urls?: string[]\n        blockchain_urls?: string[]\n        image_url?: string\n        description?: string\n        market_cap_rank?: number\n        address?: string\n        contract_address?: string\n        facebook_url?: string\n        twitter_url?: string\n        telegram_url?: string\n    }\n\n    export interface CoinInfo {\n        name: string\n        id: string\n        chainId: ChainId\n    }\n\n    export interface Market {\n        current_price: string\n        circulating_supply?: number\n        market_cap?: number\n        max_supply?: number\n        total_supply?: number\n        total_volume?: number\n        price_symbol?: string\n        price_token_address?: string\n        price_change_percentage_1h?: number\n        price_change_24h?: number\n        price_change_percentage_1h_in_currency?: number\n        price_change_percentage_1y_in_currency?: number\n        price_change_percentage_7d_in_currency?: number\n        price_change_percentage_14d_in_currency?: number\n        price_change_percentage_24h_in_currency?: number\n        price_change_percentage_30d_in_currency?: number\n        price_change_percentage_60d_in_currency?: number\n        price_change_percentage_200d_in_currency?: number\n        atl_change_percentage?: number\n        /** NFT only */\n        floor_price?: string\n        /** NFT only */\n        highest_price?: number\n        /** NFT only */\n        owners_count?: number\n        /** NFT only */\n        royalty?: string\n        /** NFT only */\n        total_24h?: number\n        /** NFT only */\n        volume_24h?: number\n        /** NFT only */\n        average_volume_24h?: number\n        /** NFT only */\n        volume_all?: number\n    }\n\n    export interface Ticker {\n        logo_url: string\n        trade_url: string\n        market_name: string\n        /** fungible token only */\n        base_name?: string\n        /** fungible token only */\n        target_name?: string\n        price?: number\n        volume?: number\n        score?: string\n        updated?: Date\n        /** NFT only */\n        volume_24h?: number\n        /** NFT only */\n        floor_price?: number\n        price_symbol?: string\n        /** NFT only */\n        sales_24?: number\n    }\n\n    export interface Contract {\n        chainId?: Web3Helper.ChainIdAll\n        address: string\n        icon_url?: string\n        pluginID: NetworkPluginID\n    }\n\n    export interface Trending {\n        currency: Currency\n        dataProvider: SourceType\n        coin: Coin\n        platform?: Platform\n        contracts?: Contract[]\n        market?: Market\n        tickers: Ticker[]\n        lastUpdated: string\n    }\n\n    // #region historical\n    export type Stat = [number, number]\n\n    export interface HistoricalCoinInfo {\n        id: number\n        is_active: 0 | 1\n        is_fiat: 0 | 1\n        name: string\n        quotes: []\n        symbol: string\n    }\n    // #endregion\n\n    export type HistoricalInterval = '1d' | '2h' | '1h' | '15m' | '5m'\n\n    export type PriceStats = {\n        market_caps: Stat[]\n        prices: Stat[]\n        total_volumes: Stat[]\n    }\n\n    export interface MarketInfo {\n        id: string\n        price?: string\n        market_cap: string\n    }\n\n    export interface Provider<ChainId> {\n        /** Get all supported coins. */\n        getAllCoins: () => Promise<Coin[]>\n        /** Get all related coins with a keyword. */\n        getCoinsByKeyword: (chainId: ChainId, keyword: string) => Promise<Coin[]>\n        /** Get coin info by address. */\n        getCoinInfoByAddress: (address: string, chainId?: number) => Promise<CoinInfo | undefined>\n        /** Get coin trending information by id. */\n        getCoinTrending: (chainId: ChainId, id: string, currency: Currency) => Promise<Trending | undefined>\n        /** Get coin price stats by id. */\n        getCoinPriceStats: (chainId: ChainId, id: string, currency: Currency, days: number) => Promise<Stat[]>\n        /** Get token info by symbol */\n        getCoinMarketInfo: (tokenSymbol: string) => Promise<MarketInfo | undefined>\n    }\n}\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n"],"names":["pasteImage","pasteImageToActiveElements","image","Uint8Array","arrayBuffer","waitDocumentReadyState","MaskMessages","activatedSiteAdaptorUI","downloadUrl","pasteImageToCompositionDefault","hasSucceed","url","recover","relatedTextPayload","p","automation","nativeCompositionDialog","attachText","events","autoPasteFailed","sendToLocal","text","SAFE_PATHNAMES_ON_TWITTER","getSearchedKeywordAtTwitter","params","URLSearchParams","location","search","hashTagMatched","pathname","match","isTabAvailable","includes","get","isNull","ProfileIdentifier","Twitter","twitterBase","usernameValidator","name","v","exec","length","getUserIdentity","twitterId","user","getUserByScreenName","identifier","of","networkIdentifier","screenName","unwrapOr","undefined","nickname","avatar","avatarURL","bio","homepage","getUserId","ele","querySelector","getAttribute","slice","urlcat","EnhanceableSite","origins","TwitterAdaptor","declarativePermissions","isSocialNetwork","sortIndex","getProfilePage","userId","URL","getShareLinkURL","message","openWindow","createSiteAdaptorSpecializedPostContext","hasPayloadLike","TwitterDecoder","getPostURL","post","postId","twitterShared","utils","isValidUsername","share","width","height","openedWindow","screenX","window","innerWidth","screenY","innerHeight","opener","referrer","behaviors","toolbar","status","resizable","scrollbars","assign","createPostContext","map","getURLFromPostIdentifier","CrossIsolationMessages","makeTypedMessageText","openComposeBoxTwitter","content","options","compositionDialogEvent","reason","open","regexMatch","input","pattern","index","r","postEditorDraftContentSelector","getEditorContent","editorNode","evaluate","tagName","toLowerCase","innerText","value","isCompose","globalThis","hasFocus","x","document","activeElement","hasEditor","LiveSelector","selector","singleMode","ls","enableSingleMode","querySelectorAll","searchProfileTabListLastChildSelector","closest","nextTabListSelector","searchProfileTabPageSelector","searchProfileTabLoseConnectionPageSelector","searchProfileEmptySelector","searchProfileTabSelector","searchAppBarBackSelector","searchProfileTabListSelector","searchNewTweetButtonSelector","q","searchAvatarSelector","searchAvatarMetaSelector","profileFollowButtonSelector","normalFollowButtonSelector","searchProfileCoverSelector","searchEditProfileSelector","rootSelector","composeAnchorSelector","join","postEditorContentInPopupSelector","postEditorInPopupSelector","sideBarProfileSelector","postEditorInTimelineSelector","isReplyPageSelector","searchResultHeadingSelector","newPostButtonSelector","bioPageUserNickNameSelector","parentElement","previousElementSibling","isProfilePageLike","bioPageUserIDSelector","nextElementSibling","replace","floatingBioCardSelector","postsImageSelector","node","timelinePostContentSelector","toastLinkSelector","postsContentSelector","postAvatarSelector","followUserAvatarSelector","base","handle","regex","clone","selfInfoSelectors","userAvatar","searchSelfHandleSelector","searchSelfNicknameSelector","searchWatcherAvatarSelector","searchSelfAvatarSelector","searchProfileAvatarSelector","searchProfileSaveSelector","searchTwitterAvatarLinkSelector","searchTwitterAvatarSelector","searchTwitterAvatarNormalSelector","searchTwitterSquareAvatarSelector","searchTweetAvatarSelector","searchRetweetAvatarSelector","searchTwitterAvatarNFTSelector","searchTwitterAvatarNFTStyleSelector","searchTwitterAvatarNFTLinkSelector","searchReplyToolbarSelector","searchNameTag","searchHomeLinkName","delay","pasteText","untilElementAvailable","selectElementContents","pasteTextToCompositionTwitter","opt","interval","timeout","worker","abort","checkSignal","aborted","Error","click","i","replaceAll","fail","e","AbortSignal","then","error","pasteImageToCompositionTwitter","gotoNewsFeedPageTwitter","reload","gotoProfilePageTwitter","profile","path","setTimeout","startsWith","publishPostTwitter","mediaObjects","images","filter","allSettled","Promise","uploadMedia","mediaIds","media_id_string","Boolean","variables","tweet_text","media","media_entities","media_id","togged_users","possibly_sensitive","replyTweetId","href","reply","in_reply_to_tweet_id","exclude_reply_user_ids","console","log","createTweet","TWITTER_RESERVED_SLUGS","Object","freeze","isMobileTwitter","navigator","userAgent","MutationObserverWatcher","queryClient","first","creator","collectSelfInfo","getNickname","nicknameNode","_nickname","childNodes","child","textContent","trim","resolveLastRecognizedIdentityInner","ref","cancel","selfInfo","dataset","testid","isOwner","createWatcher","addListener","startWatch","childList","subtree","attributes","attributeFilter","addEventListener","signal","resolveLastRecognizedIdentityMobileInner","onLocationChange","settings","getSettings","screen_name","getFirstSlug","slugs","split","resolveCurrentVisitingIdentityInner","ownerRef","update","fetchQuery","queryKey","queryFn","process","env","NODE_ENV","assert","ownerHandle","slug","unsubscribe","val","event","detail","scene","IdentityProviderTwitter","hasDeprecatedPlaceholderName","recognized","EmptyIdentityResolveProviderState","start","CurrentVisitingIdentityProviderTwitter","createLookupTableResolver","TwitterBaseAPI","FontSize","ThemeMode","resolveThemeColor","ThemeColor","Blue","Yellow","Purple","Magenta","Orange","Green","resolveThemeMode","Dark","Dim","Light","resolveFontSize","Scale","X_Large","Large","Normal","Small","X_Small","resolveThemeSettingsInner","userSettings","getUserSettings","color","themeColor","size","scale","mode","themeBackground","isDim","ThemeSettingsProviderTwitter","EmptyThemeSettingsProviderState","canonifyImgUrl","parsed","hostname","searchParams","set","pngURL","jpgURL","parseId","t","memoize","noop","DOMProxy","Icons","memoizePromise","Flags","Services","attachReactTreeWithContainer","Icon","props","MaskBlue","style","verticalAlign","marginLeft","_","main","watcher","useForeach","meta","remover","remove","check","ifUsingMask","root","afterShadow","untilVisible","render","destroy","onNodeMutation","onTargetChanged","onRemove","injectMaskUserBadgeAtTwitter","missingReportRule","rule","injectMaskIconToPostTwitter","rootElement","current","author","getCurrentValue","add","subscribe","proxy","afterShadowRootInit","shadowRootInit","realCurrent","pid","Identity","queryProfilesInformation","linkedPersona","rawPublicKey","keccak256","flattenDeep","makeTypedMessageAnchor","makeTypedMessageEmpty","makeTypedMessageImage","unstable_STYLE_META","makeTypedMessageTuple","FlattenTypedMessage","collectNodeText","collectTwitterEmoji","getPostId","idNode","timeNode","isRetweet","postNameParser","tweetElement","Array","from","at","quotedTweetName","quotedTweetHandle","parentNode","firstElementChild","postAvatarParser","avatarElement","children","src","resolveType","postContentMessageParser","make","nodeType","Node","TEXT_NODE","nodeValue","getElementStyle","HTMLAnchorElement","anchor","altImage","HTMLImageElement","alt","matched","points","point","Number","parseInt","HTMLSpanElement","messages","NoContext","lang","flatMap","element","computed","getComputedStyle","fontWeight","fontStyle","Map","postImagesParser","isQuotedTweet","imgNodes","imgUrls","postParser","IntervalWatcher","PostIdentifier","extractTextFromTypedMessage","makeTypedMessagePromise","makeTypedMessageTupleFromList","activatedSiteAdaptor_state","createRefsForCreatePostContext","getCurrentIdentifier","getPostActionsNode","postNode","getParentTweetNode","tweetNode","isDetailTweet","isDetail","getTweetNode","shouldSkipDecrypt","isCardNode","matches","hasTextNode","registerPostCollectorInner","postStore","updateProfileInfo","info","currentProfile","profileIdentifier","toString","createNewRelation","refs","comments","isFocusing","suggestedInjectionPoint","subscriptions","run","collectPostInfo","collectLinks","hasMaskPayload","payload","postMetadataImages","delete","assignKeys","parentTweetNode","parentTweetId","tweetId","isDetailPage","PostProviderTwitter","posts","EmptyPostProviderState","getPostIdFromNewPostToast","toastLinkNode","collectVerificationPost","keyword","profiles","postNodes","postContent","isVerified","isSome","postBy","postID","urls","catch","postMessage","links","rel","seen","Set","has","postMetadataMentionedLinks","Helper","resolveTCOLink","useMemo","produce","setAutoFreeze","unstable_createMuiStrictModeTheme","fromRGB","shade","toRGB","useThemeSettings","useThemeTwitterVariant","baseTheme","themeSettings","primaryColorRGB","primaryContrastColorRGB","TwitterTheme","theme","palette","maskColor","bottom","secondaryBottom","primary","light","dark","contrastText","shape","borderRadius","breakpoints","values","xs","sm","md","lg","xl","components","MuiTypography","styleOverrides","fontFamily","MuiPaper","defaultProps","elevation","background","MuiTab","textTransform","MuiBackdrop","backgroundColor","action","mask","invisible","opacity","ButtonStyle","buttonSize","iconSize","fontSize","lineHeight","marginBottom","TipButtonStyle","useEffect","useState","styled","ListItemButton","Typography","ListItemIcon","Box","useMediaQuery","ToolboxHintUnstyled","useSideBarNativeItemStyleVariants","GuideStep","useMaskSharedTrans","HORIZONTAL_BREAKPOINT","VERTICAL_BREAKPOINT","Container","ListItem","Text","ToolboxHintAtTwitter","textMarginLeft","itemPadding","buttonStyle","_mini","mini","setMini","searchHomeLinkNameNode","observer","MutationObserver","mutations","observe","disconnect","padding","onClick","category","ProfileLinkAtTwitter","step","total","tip","user_guide_tip_3","sx","position","left","right","ValueRef","useValueRef","RootWeb3ContextProvider","SideBarNativeItemTextMarginLeftRef","SideBarNativeItemIconSize","SideBarNativeItemPaddingRef","toolboxInSidebarSelector","injectToolboxHintAtTwitter","updateStyle","firstDOMProxy","injectProfile","SideBarNativeItem","SideBarNativeItemText","SideBarNativeItemIcon","SideBarNativeItemStyle","SideBarNativeItemTextStyle","SideBarNativeItemIconStyle","beforeShadow","en_US","ja_JP","ko_KR","qya_AA","zh_CN","zh_TW","languages","en","ja","ko","qy","zh","createI18NBundle","addDO_NOT_USEI18N","webpackHot","accept","dispatchEvent","CustomEvent","i18NOverwriteTwitter","resource","language","keys","key","SearchResultInspector","injectSearchResultInspectorAtTwitter","Color","useRef","useAsync","useWindowSize","useCollectionByTwitterHandler","makeStyles","useSnapshotSpacesByTwitterHandler","ProfileTabs","PluginID","BooleanPreference","useCurrentVisitingIdentity","ProfileTab","getStyleProps","EMPTY_STYLE","eleTab","paddingEle","paddingCss","eleNewTweetButton","newTweetButtonColorStyle","eleBackButton","backButtonColorStyle","font","paddingBottom","paddingX","paddingLeft","hover","line","useStyles","minWidth","alpha","cursor","display","button","zIndex","justifyContent","alignItems","textAlign","paddingRight","selected","alignSelf","bar","nameTagClickHandler","profileTabUpdated","show","profileTabActive","active","nameTag","eleEmpty","elePage","visibility","tabClickHandler","resetTwitterActivatedContent","hideTwitterActivatedContent","loseConnectionEle","tabList","_v","removeEventListener","ProfileTabForTokenAndPersona","hidden","setHidden","currentVisitingSocialIdentity","currentVisitingUserId","collectionList","loading","collectionResult","twitterHandler","collection","socialLinks","twitter","classes","endsWith","profileTabHidden","on","data","title","type","WEB3","reset","clear","div","className","ProfileTabForDAO","spaceList","snapshotDisabled","Settings","getPluginMinimalModeEnabled","Snapshot","True","DAO","injectProfileTabAtTwitter","tabInjected","contentWatcher","shadowRootDelegatesFocus","InjectProfileTab","showNextArrow","next","setProperty","svg","hiddenNextArrow","removeProperty","web3TabRef","windowSize","timeoutRef","isClick","setIsClick","onMouseEnter","clearTimeout","parent","Math","abs","scrollWidth","scrollLeft","clientWidth","onNextClick","nextArrow","onMouseLeave","onEnterNextArrow","onLeaveNextArrow","getMaskColor","memo","ProfileTabContent","injectProfileTabContentState","ProfileTabContentAtTwitter","injectProfileTabContentAtTwitter","lostConnectionContentWatcher","newTweetButton","firstChild","holder","top","paddingTop","textPrimary","marginTop","floating","injectPostReplacer","resolveLangNode","hasAttribute","injectPostReplacerAtTwitter","isPromotionPost","rootNode","isCollapsedPost","hasVideo","tags","some","test","zipPost","destroyed","langNode","unzipPost","Banner","injectBannerAtTwitter","emptyNode","createElement","injectBanner","Composition","renderPostDialogTo","injectPostDialogAtTwitter","useCallback","clamp","sayHelloShowed","MaskColorVar","PostDialogHint","iconButton","tooltip","twitterTooltipBg","white","injectPostDialogHintAtTwitter","renderPostDialogHintTo","tag","svgIcon","getBoundingClientRect","geoButton","PostDialogHintAtTwitter","onHintButtonClicked","setup_guide_say_hello_content","setup_guide_say_hello_follow","account","disableGuideTip","disabled","placement","injectPostBoxComposed","injectPostInspectorDefault","injectPostInspectorAtTwitter","contentContainer","a","hideDOM","span","overflow","cardWrapper","setAttribute","createInjectHooksRenderer","Plugin","useActivatedPluginsSiteAdaptor","usePostInfoDetails","ActionsRenderer","useNotMinimalMode","plugin","TipsRealm","UI","Content","PostActions","identity","slot","SiteAdaptor","TipsSlot","Post","PostInfoProvider","createRootElement","createPostActionsInjector","injectPostActions","postInfo","actionsElement","jsx","actionsContainer","maxWidth","injectPostActionsAtTwitter","post_actions_enabled","injector","injectOpenTipsButtonOnProfile","ProfileTipsSlot","hide","marginRight","spacing","visitingPersona","cx","setDisabled","component","Component","Profile","onStatusUpdate","AvatarType","getAvatarType","dom","Default","styles","clipPath","Square","Clip","isVerifiedUser","useQuery","useUserIdentity","profileLink","injectTipsButtonOnFollowButton","FollowButtonTipsSlot","transform","themeSetting","tipStyle","FollowButton","postShareButtonSelector","injectTipsButtonOnPost","flex","PostTipsSlot","injectTips","getInjectNodeInfo","imgEle","nftDom","avatarParent","avatarType","getElementById","offsetWidth","offsetHeight","avatarId","getAvatarId","useAsyncRetry","useNFTContainerAtTwitter","getUserNftContainer","v4","uuid","keyframes","ViewBoxWidth","ViewBoxHeight","rainbowBorderKeyFrames","miniBorder","strokeWidth","stroke","fill","borderPath","strokeLinecap","strokeLinejoin","rainbowBorder","animation","transition","price","namePath","NamePath","d","id","PricePath","BorderPath","xlinkHref","dominantBaseline","textAnchor","textPath","startOffset","rotate","tspan","NFTAvatarClip","viewBoxHeight","viewBoxWidth","viewBox","defs","linearGradient","x1","y1","x2","y2","stop","offset","stopColor","g","y","patternUnits","circle","cy","max","animateTransform","attributeName","dur","repeatCount","to","use","NFTAvatarMiniClip","avatarMetadata","address","token_id","NFTBadgeTimeline","RSS3_KEY_SITE","MiniAvatarBorder","siteKey","TWITTER","attribute","pop","inject","collecting","identityProvider","injectUserNFTAvatarAtTwitter","NFTAvatarButton","ConnectPersonaBoundary","currentPersonaIdentifier","useLastRecognizedIdentity","usePersonasFromDB","injectOpenNFTAvatarEditProfileButtonAtEditProfileDialog","OpenNFTAvatarEditProfileButtonInTwitter","saveButtonWatcher","NFTAvatarSave","saveButton","clearCache","staleUserByScreenName","clickHandler","avatarSettingDialogEvent","personas","lastRecognized","currentIdentifier","openDashboard","handlerPosition","customHint","directTo","Avatar","injectOpenNFTAvatarEditProfileButton","injectOpenNFTAvatarEditProfileButtonAtProfilePage","minHeight","openNFTAvatarSettingDialog","editDom","useNFTAvatarButtonStyles","startPicking","allPersonas","clearTasks","personaBindFinished","ev","pluginID","applicationDialogEvent","forEach","task","injectUserNFTAvatarAtTweet","Link","useTagEnhancer","TwitterRenderFragments","AtLink","target","HashLink","encodeURIComponent","hasMatch","suggestedPostImage","CashLink","Image","ProfileCover","injectProfileCover","ProfileCoverAtTwitter","AvatarDecoration","clipPathId","has_nft_avatar","AddressItem","CopyButton","TokenWithSocialGroupMenu","EMPTY_LIST","useAnchor","useChainContext","useWeb3Others","TrendingAPI","isSameAddress","ChainId","Skeleton","PluginTraderMessages","columnGap","flexShrink","flexGrow","backdropFilter","avatarDecoration","avatarImageContainer","description","outline","textOverflow","whiteSpace","addressRow","linkIcon","second","ProfileBar","socialAccounts","onAddressChange","rest","avatarClipPathId","anchorEl","anchorBounding","Others","chainId","walletMenuOpen","setWalletMenuOpen","closeMenu","selectedAccount","find","containerProps","WebkitClipPath","socialAccount","disableLinkIcon","TypographyProps","explorerResolver","addressLink","Mainnet","view_on_explorer","stopPropagation","LinkOut","ArrowDrop","onClose","fromSocialCard","currentAddress","onTokenChange","currentResult","trendingAnchorObserved","TagType","HASH","isCollectionProjectPopper","profileCardEvent","anchorPosition","anchorReference","ProfileBarSkeleton","variant","useIsMinimalMode","TipButton","PersonaSelectPanelModal","SocialAccountList","useCurrentPersonaConnectStatus","NextIDProof","useCurrentPersona","profileBar","operations","gearIcon","tipButton","border","openWeb3ProfileSettingDialog","web3ProfileDialogEvent","Web3ProfileSettingButton","persona","Gear","connected","verified","enableVerify","finishTarget","Web3Profile","ProfileCardTitle","me","itsMe","nextIdBindings","enabled","queryProfilesByTwitterId","tipsDisabled","Tips","disablePortal","receiver","Trans","useUpdateEffect","TabContext","Tab","usePluginTransField","getProfileCardTabContent","addressSorter","useSocialAccountsBySettings","getAvailablePlugins","useLocationChange","NetworkPluginID","SocialAddressType","MaskTabList","useTabs","DefaultWeb3ContextProvider","ScopedDomainsContainer","Telemetry","EventType","EventID","flexDirection","overscrollBehavior","boxShadow","shadow","popup","header","modalTitleBg","boxSizing","tabs","tabRoot","footer","bg","cardIcon","cardName","powered","secondary","ProfileCard","translate","fallbackAccounts","Address","PLUGIN_EVM","label","allSocialAccounts","isLoading","refetch","retrySocialAddress","b","c","signWithPersona","origin","accounts","selectedAddress","setSelectedAddress","firstAddress","activeAddress","selectedSocialAccount","ownProofChanged","activatedPlugins","displayPlugins","plugins","ProfileCardTabs","ID","isAllowed","RSS3","Collectible","shouldDisplay","Utils","sort","z","priority","currentTab","onChange","tab","captureEvent","Access","EntryTimelineHoverUserSocialSwitchTo","EntryTimelineHoverUserActivitiesSwitchTo","EntryTimelineHoverUserDonationsSwitchTo","publicKey","scopedDomainsMap","reduce","Provider","initialState","aria-label","textColorPrimary","Web3ProfileCard","web3_profile_card_name","i18nKey","whom","ml","displayName","CARD_WIDTH","CARD_HEIGHT","useDialogStacking","LEAVE_DURATION","useControlProfileCard","holderRef","hoverRef","closeTimerRef","skipClick","setActive","setPlacement","hasDialogRef","stack","hideProfileCard","byClick","showProfileCard","enter","leave","external","reachedBottom","composedPath","body","AnchorProvider","ShadowRootPopper","Fade","useSocialIdentity","attachReactTreeWithoutContainer","injectProfileCardHolder","ProfileCardHolder","maxHeight","setTwitterId","badgeBounding","setBadgeBounding","setAddress","setAnchorEl","select","resolvedIdentity","in","easing","keepMounted","getTwitterId","inpageAvatarSelector","injectAvatar","isSuggestion","sourceType","AvatarRealmSourceType","Suggestion","ConversationLensSlot","Lens","LensSlot","Sidebar","injectLensOnConversation","spans","injectLensOnPost","link","PostLensSlot","unwrap","injectLensOnProfile","ProfileLensSlot","visitingIdentity","ProfileName","avatarSelector","injectLensOnSpaceDock","SpaceDockLensSlot","injectLensOnUserCell","UserCellLensSlot","injectLens","RainbowBox","NFTAvatarSquare","borderSize","avatarSize","R","sqrt","attributeType","rect","rx","dy","radius","useInjectedCSS","showAvatar","updatedAvatar","rainbowElement","borderElement","linkDom","linkParentDom","lastElementChild","removeChild","classList","appendChild","insertBefore","useUpdatedAvatar","nftAvatar","handler","tokenId","pluginId","preventDefault","nonFungibleTokenDialogEvent","tokenAddress","ownerAddress","clean","SchemaType","NFTBadge","usePersonaNFTAvatar","useWallet","useNFT","useSaveStringStorage","useLocation","AssetPreviewer","ConfirmModal","Hub","icon","NFTAvatarInTwitter","_location","setUpdatedAvatar","nftInfo","useNFTCircleAvatar","handlerWatcher","abortController","AbortController","hasRainbow","amount","loadingWallet","storage","loadingNFTInfo","NFTEvent","setNFTEvent","saveNFTAvatar","NFTAvatarTimelineUpdated","sendToAll","schema","ERC721","alert","NFTDetailed","getNonFungibleAsset","confirmed","openAndWaitForClose","plugin_avatar_setup_share_title","metadata","imageURL","mediaURL","mt","plugin_avatar_setup_success","confirmLabel","plugin_avatar_setup_pfp_share","NFTAvatarUpdated","isZero","formatPrice","formatText","NFTAvatarClipInTwitter","timer","NFTAvatarClipOrSquareInTwitter","symbol","loadingNFT","JSON","stringify","injectNFTAvatarInTwitter","squareWatcher","defaultWatcher","clipWatcher","useLayoutEffect","SwitchLogoType","switchLogoSettings","BlueBirdHTML","LogoSelector","defaultXIcon","LetterHTML","innerHTML","switchIcon","iconBox","SwitchLogoButton","logoType","isMinimalMode","SwitchLogo","Classics","switchLogoDialogUpdated","onClickCapture","logoSelector","injectSwitchLogoButton","Calendar","startOfMonth","endOfMonth","useNewsList","date","startTime","getTime","endTime","floor","getNewsList","eventsWithDate","acc","Date","event_date","toLocaleDateString","push","useEventList","getEventList","useNFTList","getNFTList","React","format","addDays","addMonths","isAfter","IconButton","safeUnreachable","container","gap","daysOfWeek","third","headerText","headerIcon","dateItem","row","canClick","DatePicker","selectedDate","setSelectedDate","setOpen","currentDate","setCurrentDate","monthStart","eventList","newsList","nftList","list","isPrevMonthDisabled","isNextMonthDisabled","handleDateClick","changeMonth","renderDatePicker","table","thead","tr","day","th","tbody","weekIndex","dayIndex","currentDatePointer","td","toDateString","LeftArrow","RightArrow","startOfWeek","endOfWeek","eachDayOfInterval","ClickAwayListener","isActive","DatePickerTab","week","end","getDate","onClickAway","LinearCalendar","useTranslation","createProxy","initValue","define","defineProperty","configurable","__proto__","Proxy","getPrototypeOf","setPrototypeOf","getOwnPropertyDescriptor","useCalendarTrans","bind","EmptyStatus","LoadingStatus","overflowY","secondaryLine","paddingWrap","empty","eventCard","borderBottom","eventHeader","projectWrap","projectName","logo","eventTitle","eventContent","eventType","dateDiv","NewsList","dateString","listRef","listAfterDate","scrollTo","event_url","img","project","event_type","event_title","event_description","empty_status","time","poster","objectFit","formatDate","dateFormat","EventList","poster_url","differenceInSeconds","CountdownTimer","targetDate","calculateRemainingTime","difference","remainingTime","setRemainingTime","setInterval","newRemainingTime","clearInterval","days","hours","minutes","seconds","expired","socialIcons","TwitterX","discord","DiscordRoundBlack","website","WebBlack","sortPlat","NFTList","platform","ext_info","nft_info","toLocaleString","token","useOpenApplicationSettings","ApplicationSettingTabs","lineWrap","poweredByWrap","poweredBy","calender","calendarText","providerName","Footer","provider","providerMap","news","Coincarp","Link3","nfts","Nftgo","openApplicationBoardDialog","powered_by","pluginSwitch","TabPanel","calendar","tabPanel","CalendarContent","setPathname","eventLoading","newsLoading","nftLoading","sidebarSearchSelector","sidebarExplorePageSelector","sidebarSearchPageSelector","injectCalendar","exploreWatcher","searchWatcher","NextIDPlatform","stateCreator","InitAutonomousStateProfiles","injectPageInspectorDefault","createTaskStartSetupGuideDefault","useInjectedDialogClassesOverwriteTwitter","smallQuery","paper","backgroundImage","margin","dialogTitle","gridTemplateColumns","dialogContent","dialogActions","dialogBackdropRoot","twitterUI","maskCompositionDialog","nativeCommentBox","attachImage","redirect","newsFeed","profilePage","endpoint","publishPost","currentVisitingIdentityProvider","themeSettingsProvider","postsProvider","getSearchedKeyword","customization","sharedComponentOverwrite","InjectedDialog","componentOverwrite","RenderFragments","useTheme","i18nOverwrite","init","injection","toolbox","searchResult","profileTab","profileCover","profileTabContent","postReplacer","pageInspector","postInspector","postActions","banner","newPostComposition","supportedInputTypes","supportedOutputTypes","setupWizard","userBadge","commentComposition","profileAvatar","openNFTAvatar","postAndReplyNFTAvatar","tips","lens","profileCard","switchLogo","configuration","nextIDConfig","enable","steganography","password","expect","toText","resolve","reject","w","stopWatch","useSubscription","currentVisitingProfile","currentNextIDPlatform","querySocialIdentity","result","refetchOnWindowFocus","WebExtensionMessage","serializer","DOMAIN_RPC","Symbol","getPluginMessage","domain","cache","messageCenter","serialization","__workaround__replaceImplementationOfCreatePluginMessage__","newImpl","Environment","isEnvironment","AsyncCall","AsyncGeneratorCall","getOrUpdateLocalImplementationHMR","requestReplay","sendLocalStack","isBackground","ManifestBackground","__workaround__replaceIsBackground__","f","getPluginRPCInternal","starter","entry","rpc","create","channel","send","sendToBackgroundPage","thenable","cacheGenerator","getPluginRPC","startPluginRPC","getPluginRPCGenerator","startPluginGeneratorRPC","startPluginRPCInternal","impl","delegate","sendByBroadcast","useSocialIdentityByUserId","resolveNetworkToNextIDPlatform","useBaseUIRuntime","useProfilePublicKey","binding","queryLatestBindingByPlatform","useHiddenAddressConfigOf","useSocialAccountsAll","useTipsAccounts","personaPubkey","hiddenAddresses","useNetworkContext","PluginTipsMessages","receivingAccounts","recipient","loadingPersona","receiverUserId","isVisitingUser","isRuntimeAvailable","PLUGIN_SOLANA","accountsByIdentity","aHasNextId","supportedAddressTypes","NEXT_ID","zHasNextId","createTipTask","evt","tipTask","recipientUserId","tipTaskUpdate","role","TipCoin","PLUGIN_ID","PluginTraderRPC","createContext","useContext","AnchorContext","contextValue","WeakMap","localImpl","setPluginMinimalModeEnabled","ApplicationBoardSettingsModal","focusPluginID","Popper","createShadowRootForwardedComponent","CASH"],"sourceRoot":"","x_google_ignoreList":[107,108,109,110,111,112,113,114]}