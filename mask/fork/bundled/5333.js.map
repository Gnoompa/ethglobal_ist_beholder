{"version":3,"file":"bundled/5333.js","mappings":"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AACA,UAAU,gBAAgB,kBAAkB,gBAAgB;AAC5D;;AAEgD;AAChD,6BAA6B,gDAAmB;;AAEhD,IAAI,KAAqC,EAAE,EAE1C;;AAED;AACA,sBAAsB,2CAAc;AACpC,EAAE,4CAAe;AACjB,mBAAmB,gCAAgC;AACnD,GAAG;AACH;AACA;;AAEe;AACf;AACA;AACA;AACA,IAAI;AACJ;AACA,kBAAkB,0CAAa;AAC/B;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,sDAAI;AAC1B;AACA;AACA,GAAG;AACH;AACA,MAAqC,GAAG,CAiBvC,CAAC;AACF;AACA,aAAa;AACb;;AAEO;AACP,SAAS,6CAAgB;AACzB;AACO;AACP;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA,YAAY,iBAAiB,KAAK,MAAM;AACxC;AACO;AACP;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA,YAAY,iBAAiB,KAAK,MAAM;AACxC;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,UAAU,EAAC","sources":["webpack://mask-network/./packages/shared-base-ui/src/bom/open-window.ts","webpack://mask-network/./packages/shared-base-ui/src/hooks/useMatchXS.ts","webpack://mask-network/./packages/shared-base-ui/src/hooks/useRowSize.ts","webpack://mask-network/./packages/shared/src/UI/components/ActionButton/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/DotLoading/index.tsx","webpack://mask-network/./packages/theme/src/Components/SearchableList/EmptyResult.tsx","webpack://mask-network/./packages/theme/src/Components/SearchableList/SearchableList.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleTokensFromTokenList.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleTokensBalance.ts","webpack://mask-network/./packages/shared/src/UI/components/SettingSwitch/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/FungibleTokenList/useTokenBlocked.ts","webpack://mask-network/./packages/shared/src/UI/components/FungibleTokenList/FungibleTokenItem.tsx","webpack://mask-network/./packages/shared/src/UI/components/FungibleTokenList/ManageTokenListBar.tsx","webpack://mask-network/./packages/shared/src/UI/components/FungibleTokenList/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/FungibleTokenList/type.ts","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/Context.tsx","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/types/index.ts","webpack://mask-network/./packages/shared/src/UI/components/WalletIcon/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useClearTransactionsCallback.ts","webpack://mask-network/./packages/web3-hooks/base/src/useRemoveTransaction.ts","webpack://mask-network/./packages/web3-shared/evm/src/helpers/getContractOwnerDomain.ts","webpack://mask-network/./packages/shared/src/UI/components/WalletStatusBox/TransactionList.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletStatusBox/usePendingTransactions.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletStatusBox/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/ConnectWalletModal/index.tsx","webpack://mask-network/./packages/web3-shared/base/src/helpers/getLocale.ts","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/CheckCircle.js","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/GasOption.tsx","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/GasOptionSelector.tsx","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/Section.tsx","webpack://mask-network/./packages/theme/src/Components/Alert/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/hooks/useGasSchema.ts","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/GasForm.tsx","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/GasSection.tsx","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/RadioChip.tsx","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/hooks/useSlippageToleranceSchema.ts","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/SlippageToleranceForm.tsx","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/SlippageToleranceSection.tsx","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/SelectAdvancedSettingsDialog/SelectGasSettingsDialog.tsx","webpack://mask-network/./packages/shared/src/UI/modals/SelectAdvancedSettingsDialog/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/SelectFungibleTokenModal/SelectFungibleTokenDialog.tsx","webpack://mask-network/./packages/shared/src/UI/modals/SelectFungibleTokenModal/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/ProviderIcon/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/DialogDismissIconUI/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/SelectProviderModal/PluginProviderRender.tsx","webpack://mask-network/./packages/shared/src/UI/modals/SelectProviderModal/SelectProvider.tsx","webpack://mask-network/./packages/shared/src/UI/modals/SelectProviderModal/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/WalletRiskWarningModal/WalletRiskWarning.tsx","webpack://mask-network/./packages/shared/src/UI/modals/WalletRiskWarningModal/index.tsx","webpack://mask-network/./packages/shared/src/UI/wallet/FormattedBalance.tsx","webpack://mask-network/./packages/theme/src/Components/Tabs/BaseTab.tsx","webpack://mask-network/./packages/theme/src/Components/Tabs/FlexibleTab.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/ArrowBackIosNew.js","webpack://mask-network/./packages/theme/src/Components/Tabs/RoundTab.tsx","webpack://mask-network/./packages/theme/src/Components/Tabs/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useAddressType.ts","webpack://mask-network/./packages/web3-hooks/base/src/useChainIdValid.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNativeTokenPrice.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNetworkDescriptor.ts","webpack://mask-network/./packages/web3-hooks/base/src/useRecentTransactions.ts","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Check.js","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Error.js","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/RadioButtonUnchecked.js","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/TabContext/TabContext.js","webpack://mask-network/./node_modules/.pnpm/memoize-one@5.2.1/node_modules/memoize-one/dist/memoize-one.esm.js"],"sourcesContent":["type WindowTarget = LiteralUnion<'_top' | '_self' | '_parent' | '_blank'>\n\ninterface BehaviorFlags {\n    popup?: boolean\n    toolbar?: boolean\n    status?: boolean\n    resizable?: boolean\n    scrollbars?: boolean\n}\n\ninterface WindowFeatureFlags {\n    // Behavior\n    opener?: boolean\n    referrer?: boolean\n    behaviors?: BehaviorFlags\n    // Dimension\n    width?: number\n    height?: number\n    screenX?: number\n    screenY?: number\n}\n\nexport function openWindow(\n    url: string | URL | undefined | null,\n    target: WindowTarget = '_blank',\n    features: WindowFeatureFlags = {},\n): Window | null {\n    if (!url) return null\n    const flags = []\n    for (const [name, value] of Object.entries(features.behaviors ?? {})) {\n        if (value) flags.push(`${name}=1`)\n    }\n    if (!features.opener) flags.push('noopener')\n    if (!features.referrer) flags.push('noreferrer')\n    if (Number.isFinite(features.width)) flags.push(`width=${features.width}`)\n    if (Number.isFinite(features.height)) flags.push(`height=${features.height}`)\n    if (Number.isFinite(features.screenX)) flags.push(`screenX=${features.screenX}`)\n    if (Number.isFinite(features.screenY)) flags.push(`screenY=${features.screenY}`)\n    return window.open(url, target, flags.join(' '))\n}\n","import { type Theme, useMediaQuery } from '@mui/material'\n\nexport function useMatchXS() {\n    return useMediaQuery((theme: Theme) => theme.breakpoints.down('sm'))\n}\n","import { useEffect, useState } from 'react'\n\nexport function useRowSize() {\n    const [rowSize, setRowSize] = useState(54)\n\n    useEffect(() => {\n        try {\n            const fontSize = Number.parseFloat(getComputedStyle(document.documentElement).fontSize)\n            setRowSize(fontSize * 4)\n        } catch {\n            setRowSize(60)\n        }\n    }, [])\n    return rowSize\n}\n","import { useState } from 'react'\nimport { CircularProgress } from '@mui/material'\nimport { makeStyles, ActionButton } from '@masknet/theme'\nimport type { ButtonProps } from '@mui/material/Button'\nimport { Check as CheckIcon, Error as ErrorIcon } from '@mui/icons-material'\nimport { red, green } from '@mui/material/colors'\nimport { useUpdateEffect } from 'react-use'\n\nconst circle = <CircularProgress color=\"inherit\" size={18} />\n\nexport interface ActionButtonPromiseProps extends ButtonProps {\n    executor: () => Promise<ActionButtonPromiseState | undefined | void>\n    init: React.ReactNode\n    complete: React.ReactNode\n    completeOnClick?: 'use executor' | (() => void)\n    waiting: React.ReactNode\n    waitingOnClick?: () => ActionButtonPromiseState\n    failed?: React.ReactNode\n    failedButtonStyle?: string\n    failedOnClick?: 'use executor' | (() => void)\n    completeIcon?: React.ReactNode\n    failIcon?: React.ReactNode\n    waitingIcon?: React.ReactNode\n    onComplete?: () => void\n    noUpdateEffect?: boolean\n}\ntype ActionButtonPromiseState = 'init' | 'complete' | 'wait' | 'fail'\nexport function ActionButtonPromise(props: ActionButtonPromiseProps) {\n    const { classes, cx } = useStyles()\n    const {\n        executor,\n        complete,\n        failed,\n        waiting,\n        init,\n        completeOnClick,\n        waitingOnClick,\n        failedOnClick,\n        onComplete,\n        noUpdateEffect,\n        completeIcon = <CheckIcon />,\n        failIcon = <ErrorIcon />,\n        waitingIcon = circle,\n        failedButtonStyle,\n        ...b\n    } = props\n\n    const [state, setState] = useState<ActionButtonPromiseState>('init')\n    const completeClass = cx(classes.success, b.className)\n    const failClass = cx(classes.failed, b.className)\n\n    const run = () => {\n        setState('wait')\n        executor().then(\n            (status?: ActionButtonPromiseState | void) => {\n                setState(status ?? 'complete')\n                onComplete?.()\n            },\n            (error) => {\n                if (error.message.includes('Switch Chain Error')) setState('init')\n                else setState('fail')\n            },\n        )\n    }\n    const cancel = () => {\n        const p = waitingOnClick?.()\n        p && setState(p)\n    }\n    const completeClick = completeOnClick === 'use executor' ? run : completeOnClick\n    const failClick = failedOnClick === 'use executor' ? run : failedOnClick\n\n    useUpdateEffect(() => {\n        if (!noUpdateEffect) {\n            setState((prev) => (prev === 'init' ? prev : 'init'))\n        }\n    }, [executor, noUpdateEffect])\n\n    if (state === 'wait')\n        return <ActionButton {...b} loading disabled={!waitingOnClick} children={waiting} onClick={cancel} />\n    if (state === 'complete')\n        return (\n            <ActionButton\n                {...b}\n                disabled={!completeClick}\n                startIcon={completeIcon}\n                children={complete}\n                className={completeClass}\n                onClick={completeClick}\n            />\n        )\n    if (state === 'fail')\n        return (\n            <ActionButton\n                {...b}\n                disabled={!failClick}\n                startIcon={failIcon}\n                children={failed}\n                className={failedButtonStyle || failClass}\n                onClick={failClick}\n            />\n        )\n    return <ActionButton {...b} children={init} onClick={run} />\n}\nconst useStyles = makeStyles()({\n    success: {\n        color: '#fff',\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    failed: {\n        backgroundColor: red[500],\n        color: '#fff',\n        '&:hover': {\n            backgroundColor: red[700],\n        },\n    },\n})\n","import { makeStyles } from '@masknet/theme'\n\nconst useStyles = makeStyles()((theme) => ({\n    loading: {\n        display: 'flex',\n        columnGap: 4,\n        '@keyframes dotLoading': {\n            to: {\n                opacity: 0.1,\n            },\n        },\n        '& > div': {\n            animation: 'dotLoading 0.6s infinite alternate',\n        },\n        '& > div:nth-child(2)': {\n            animationDelay: '0.2s',\n        },\n        '& > div:nth-child(3)': {\n            animationDelay: '0.4s',\n        },\n    },\n    dot: {\n        width: 3,\n        height: 3,\n        backgroundColor: theme.palette.maskColor.main,\n    },\n}))\nexport function DotLoading() {\n    const { classes } = useStyles()\n    return (\n        <div className={classes.loading}>\n            <div className={classes.dot} />\n            <div className={classes.dot} />\n            <div className={classes.dot} />\n        </div>\n    )\n}\n","import { Stack, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\n\nexport function EmptyResult() {\n    return (\n        <Stack justifyContent=\"center\" alignItems=\"center\" gap={1.5}>\n            <Icons.EmptySimple size={36} />\n            <Typography>No results</Typography>\n        </Stack>\n    )\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { FixedSizeList, type FixedSizeListProps, type ListChildComponentProps } from 'react-window'\nimport Fuse from 'fuse.js'\nimport { uniqBy } from 'lodash-es'\nimport { Box, Stack, Typography, useTheme } from '@mui/material'\nimport { makeStyles } from '../../UIHelper/index.js'\nimport { MaskTextField, type MaskTextFieldProps } from '../TextField/index.js'\nimport { Icons } from '@masknet/icons'\nimport { EmptyResult } from './EmptyResult.js'\n\nexport interface MaskSearchableListProps<T> extends withClasses<'listBox' | 'searchInput'> {\n    /** The list data should be render */\n    data: T[]\n    /** The identity of list data item for remove duplicates item */\n    itemKey?: keyof T\n    /** The key of list item for search */\n    searchKey?: string[]\n    /** Renderer for each list item */\n    itemRender: React.ComponentType<ListChildComponentProps>\n    /** The props to react-window */\n    FixedSizeListProps?: Partial<FixedSizeListProps>\n    /** The callback when clicked someone list item */\n    onSelect?(selected: T): void\n    /** The hook when search */\n    onSearch?(key: string): void\n    /** Props for search box */\n    SearchFieldProps?: MaskTextFieldProps\n    /** Show search bar */\n    disableSearch?: boolean\n}\n\n/**\n * This component is used to provide a searchable list in Mask design.\n *\n * @example\n * interface IListDate { name: string }\n * const ListItem = ({ name }: IListDate) => <div>{ name }</div>\n * const onSelect = () => {}\n *\n * return (\n *      <SearchableList<IListDate>\n *           onSelect={onSelect}\n *           data={ListData}\n *           searchKey={['name']}\n *           itemRender={ListItem}\n *      />\n * )\n */\nexport function SearchableList<T extends {}>({\n    itemKey,\n    data,\n    onSelect,\n    onSearch,\n    disableSearch,\n    searchKey,\n    itemRender,\n    FixedSizeListProps = {},\n    SearchFieldProps,\n    ...props\n}: MaskSearchableListProps<T>) {\n    const [keyword, setKeyword] = useState('')\n    const theme = useTheme()\n    const { classes } = useStyles(undefined, { props })\n    const { height = 300, itemSize, ...rest } = FixedSizeListProps\n    const { InputProps, ...textFieldPropsRest } = SearchFieldProps ?? {}\n\n    // #region create searched data\n    const readyToRenderData = useMemo(() => {\n        if (!keyword) return data\n\n        const fuse = new Fuse(data, {\n            shouldSort: true,\n            isCaseSensitive: false,\n            threshold: 0.45,\n            minMatchCharLength: 1,\n            keys: searchKey ?? Object.keys(data.length > 0 ? data[0] : []),\n        })\n        const filtered = fuse.search(keyword).map((x: any) => x.item)\n        return itemKey ? uniqBy(filtered, (x) => x[itemKey]) : filtered\n    }, [keyword, JSON.stringify(data)])\n    // #endregion\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.currentTarget.value\n        setKeyword(value)\n        onSearch?.(value)\n        if (!value) handleClear()\n    }\n\n    const handleClear = () => {\n        setKeyword('')\n        onSearch?.('')\n    }\n\n    const getItemKey = useCallback(\n        (\n            index: number,\n            data: {\n                dataSet: T[]\n            },\n        ) => {\n            if (!itemKey) return index.toString()\n            return data.dataSet[index][itemKey] as string\n        },\n        [itemKey],\n    )\n\n    const windowHeight = !!textFieldPropsRest.error && typeof height === 'number' ? height - 28 : height\n\n    return (\n        <div className={classes.container}>\n            {!disableSearch && (\n                <Box className={classes.searchInput}>\n                    <MaskTextField\n                        value={keyword}\n                        placeholder=\"Search\"\n                        autoFocus\n                        fullWidth\n                        InputProps={{\n                            style: { height: 40 },\n                            inputProps: { style: { paddingLeft: 4 } },\n                            startAdornment: <Icons.Search size={18} />,\n                            endAdornment: keyword ? (\n                                <Icons.Close\n                                    size={18}\n                                    onClick={handleClear}\n                                    color={textFieldPropsRest.error ? theme.palette.maskColor.danger : undefined}\n                                />\n                            ) : null,\n                            ...InputProps,\n                        }}\n                        onChange={handleChange}\n                        {...textFieldPropsRest}\n                    />\n                    {textFieldPropsRest.error ? (\n                        <Typography className={classes.error} mt={0.5}>\n                            {textFieldPropsRest.helperText}\n                        </Typography>\n                    ) : null}\n                </Box>\n            )}\n            {readyToRenderData.length === 0 && (\n                <Stack\n                    height={windowHeight}\n                    justifyContent=\"center\"\n                    alignContent=\"center\"\n                    marginTop=\"18px\"\n                    marginBottom=\"48px\">\n                    <EmptyResult />\n                </Stack>\n            )}\n            {readyToRenderData.length !== 0 && (\n                <div className={classes.listBox}>\n                    <FixedSizeList\n                        className={classes.list}\n                        width=\"100%\"\n                        height={windowHeight}\n                        overscanCount={25}\n                        itemSize={itemSize ?? 100}\n                        itemData={{\n                            dataSet: readyToRenderData,\n                            onSelect,\n                        }}\n                        itemKey={(index, data) => getItemKey(index, data)}\n                        itemCount={readyToRenderData.length}\n                        {...rest}>\n                        {itemRender}\n                    </FixedSizeList>\n                </div>\n            )}\n        </div>\n    )\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        overflow: 'visible',\n    },\n    listBox: {\n        '& > div::-webkit-scrollbar': {\n            backgroundColor: 'transparent',\n            width: 0,\n        },\n        '& > div::-webkit-scrollbar-thumb': {\n            borderRadius: '20px',\n            width: 5,\n            border: '7px solid rgba(0, 0, 0, 0)',\n            backgroundColor: theme.palette.maskColor.secondaryLine,\n            backgroundClip: 'padding-box',\n        },\n        '& > div > div': {\n            position: 'relative',\n            margin: 'auto',\n        },\n    },\n    list: {\n        scrollbarWidth: 'thin',\n    },\n    error: {\n        backgroundColor: theme.palette.maskColor.bottom,\n        fontSize: 14,\n        color: theme.palette.maskColor.danger,\n    },\n}))\n\nexport interface MaskFixedSizeListProps extends FixedSizeListProps {}\n","import { useAsyncRetry } from 'react-use'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\nexport function useFungibleTokensFromTokenList<\n    S extends 'all' | void = void,\n    T extends NetworkPluginID = NetworkPluginID,\n>(pluginID?: T, options?: HubOptions<T>) {\n    const { chainId } = useChainContext({ chainId: options?.chainId })\n    const Hub = useWeb3Hub(pluginID, {\n        chainId,\n        ...options,\n    })\n\n    return useAsyncRetry<Array<Web3Helper.FungibleTokenScope<S, T>> | undefined>(async () => {\n        return Hub.getFungibleTokensFromTokenList(chainId, { chainId })\n    }, [chainId, Hub])\n}\n","import { useAsyncRetry } from 'react-use'\nimport { EMPTY_OBJECT, type NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useFungibleTokensBalance<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    listOfAddress?: string[],\n    options?: ConnectionOptions<T>,\n) {\n    const Web3 = useWeb3Connection(pluginID, options)\n\n    return useAsyncRetry(async () => {\n        if (!listOfAddress?.length) return EMPTY_OBJECT\n        return Web3.getFungibleTokensBalance(listOfAddress)\n    }, [listOfAddress?.join(','), Web3])\n}\n","import { Switch, styled, switchClasses } from '@mui/material'\n\nexport const SettingSwitch = styled<typeof Switch>(Switch)(({ size, disabled }) => {\n    const isSmall = size === 'small'\n    const base = isSmall ? 16 : 24\n    return {\n        [`&.${switchClasses.root}`]: {\n            width: base * 3,\n            height: base * 2,\n            padding: '5px 3px',\n        },\n        [`& .${switchClasses.thumb}`]: {\n            width: base,\n            height: base,\n        },\n        [`& .${switchClasses.checked}`]: {\n            color: 'white !important',\n            [`&.${switchClasses.switchBase}`]: {\n                transform: `translateX(${isSmall ? 20 : 28}px)`,\n            },\n            [`&+.${switchClasses.track}`]: {\n                opacity: '1 !important',\n                backgroundColor: `${disabled ? 'rgba(61, 194, 51, 0.5)' : '#3DC233'} !important`,\n            },\n        },\n        [`& .${switchClasses.track}`]: {\n            borderRadius: 12,\n        },\n        [`& .${switchClasses.switchBase}`]: {\n            top: isSmall ? 4 : 3,\n            transform: `translateX(${isSmall ? 4 : 2}px)`,\n        },\n    }\n}) as any as typeof Switch\n","import { useBlockedFungibleTokens, useTrustedFungibleTokens } from '@masknet/web3-hooks-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport type { ChainId } from '@masknet/web3-shared-evm'\n\nexport const useTokenBlocked = (address: string) => {\n    const blockedFungibleTokens = useBlockedFungibleTokens(NetworkPluginID.PLUGIN_EVM, undefined)\n\n    return !!blockedFungibleTokens?.find((x) => isSameAddress(x.address, address))\n}\n\nexport const useTokenTrusted = (address: string, chainId: ChainId) => {\n    const trustedFungibleTokens = useTrustedFungibleTokens(NetworkPluginID.PLUGIN_EVM, undefined, chainId)\n\n    return !!trustedFungibleTokens?.find((x) => isSameAddress(x.address, address))\n}\n","import { memo, useMemo } from 'react'\nimport { Box, Link, ListItem, ListItemIcon, ListItemText, Typography } from '@mui/material'\nimport { formatBalance, type FungibleToken } from '@masknet/web3-shared-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { TokenIcon } from '../TokenIcon/index.js'\nimport { Icons } from '@masknet/icons'\nimport { useFungibleTokenBalance, useNetwork, useNetworkContext, useWeb3Others } from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { makeStyles, LoadingBase, ActionButton } from '@masknet/theme'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { TokenListMode } from './type.js'\nimport { SettingSwitch } from '../SettingSwitch/index.js'\nimport { useTokenBlocked, useTokenTrusted } from './useTokenBlocked.js'\nimport { FormattedBalance } from '../../wallet/index.js'\nimport { DotLoading, NetworkIcon } from '../index.js'\nimport { useAsyncFn } from 'react-use'\n\nconst useStyles = makeStyles()((theme) => ({\n    icon: {\n        width: 36,\n        height: 36,\n    },\n    list: {\n        maxHeight: '100%',\n        padding: theme.spacing(1.5),\n        marginBottom: theme.spacing(0.5),\n        borderRadius: theme.spacing(1),\n        backdropFilter: 'blur(16px)',\n        '&:hover': {\n            background: theme.palette.maskColor.bg,\n        },\n    },\n    text: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    primary: {\n        flex: 1,\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        paddingRight: theme.spacing(1),\n    },\n    name: {\n        display: 'flex',\n        gap: theme.spacing(0.5),\n        alignItems: 'center',\n        lineHeight: '20px',\n        color: theme.palette.maskColor.second,\n    },\n    nameText: {\n        maxWidth: 400,\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n    },\n    symbol: {\n        lineHeight: '20px',\n        fontSize: 16,\n    },\n    balance: {\n        fontSize: 16,\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n    },\n    importButton: {\n        borderRadius: 99,\n    },\n    action: {\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    switch: {\n        position: 'relative',\n        left: theme.spacing(1),\n    },\n    link: {\n        color: theme.palette.maskColor.second,\n    },\n    badgeIcon: {\n        position: 'absolute',\n        right: -6,\n        bottom: -4,\n        border: `1px solid ${theme.palette.common.white}`,\n        borderRadius: '50%',\n    },\n    dotLoadingWrapper: {\n        display: 'flex',\n        flexDirection: 'column-reverse',\n        height: 15,\n    },\n}))\n\nexport const getFungibleTokenItem = <T extends NetworkPluginID>(\n    getSource: (address: string) => 'personal' | 'official' | 'external' | 'official-native',\n    isSelected: (address: string) => boolean,\n    mode: TokenListMode,\n    addOrRemoveTokenToLocal: (\n        token: FungibleToken<Web3Helper.Definition[T]['ChainId'], Web3Helper.Definition[T]['SchemaType']>,\n        strategy: 'add' | 'remove',\n    ) => Promise<void>,\n    trustOrBlockTokenToLocal: (\n        token: FungibleToken<Web3Helper.Definition[T]['ChainId'], Web3Helper.Definition[T]['SchemaType']>,\n        strategy: 'trust' | 'block',\n    ) => Promise<void>,\n    isHiddenChainIcon?: boolean,\n    isCustomToken?: boolean,\n) => {\n    return memo(({ data, index, style }: any) => {\n        const t = useSharedTrans()\n        const { classes } = useStyles()\n        const Others = useWeb3Others()\n\n        const token = data.dataSet[index]\n        const onSelect = data.onSelect\n\n        const { chainId, address, name, symbol, decimals, logoURL, balance } = token\n\n        const isBlocked = useTokenBlocked(address)\n        const isTrust = useTokenTrusted(address, token.chainId)\n\n        const { pluginID } = useNetworkContext<T>()\n        const network = useNetwork(pluginID, chainId)\n\n        const { source, selected } = useMemo(() => {\n            return {\n                source: getSource(address),\n                selected: isSelected(address),\n            }\n        }, [address, getSource, isSelected])\n\n        const [{ loading: onAddOrRemoveTokenToLocalLoading }, onAddOrRemoveTokenToLocal] = useAsyncFn(\n            async (event: React.MouseEvent<HTMLButtonElement | HTMLElement>, strategy: 'add' | 'remove') => {\n                event.stopPropagation()\n                if (token) await addOrRemoveTokenToLocal(token, strategy)\n            },\n            [token, addOrRemoveTokenToLocal],\n        )\n\n        const [{ loading: onTrustOrBlockTokenToLocalLoading }, onTrustOrBlockTokenToLocal] = useAsyncFn(\n            async (event: React.ChangeEvent<HTMLInputElement>) => {\n                event.stopPropagation()\n                if (token) await trustOrBlockTokenToLocal(token, event.target.checked ? 'trust' : 'block')\n            },\n            [token, trustOrBlockTokenToLocal],\n        )\n\n        const explorerLink = useMemo(() => {\n            return Others.explorerResolver.fungibleTokenLink(token.chainId, token.address)\n        }, [token.address, token.chainId, Others.explorerResolver.fungibleTokenLink])\n\n        const action = useMemo(() => {\n            if (mode === TokenListMode.Manage) {\n                if (source === 'personal')\n                    return <Icons.TrashLine onClick={(e) => onAddOrRemoveTokenToLocal(e, 'remove')} size={24} />\n                return (\n                    <>\n                        {isCustomToken ? (\n                            <ActionButton\n                                color=\"primary\"\n                                disabled={onAddOrRemoveTokenToLocalLoading}\n                                loading={onAddOrRemoveTokenToLocalLoading}\n                                className={classes.importButton}\n                                onClick={(e) => onAddOrRemoveTokenToLocal(e, 'add')}>\n                                {t.import()}\n                            </ActionButton>\n                        ) : (\n                            <SettingSwitch\n                                disabled={\n                                    (source === 'official-native' && mode === TokenListMode.Manage) ||\n                                    onTrustOrBlockTokenToLocalLoading\n                                }\n                                classes={{ root: classes.switch }}\n                                onChange={async (event) => {\n                                    event.stopPropagation()\n                                    event.preventDefault()\n                                    await onTrustOrBlockTokenToLocal(event)\n                                }}\n                                size=\"small\"\n                                checked={!isBlocked}\n                            />\n                        )}\n                    </>\n                )\n            }\n            return (\n                <Typography className={classes.balance}>\n                    {balance === undefined ? (\n                        <LoadingBase size={24} />\n                    ) : balance === '' ? null : (\n                        <FormattedBalance\n                            value={balance}\n                            decimals={decimals}\n                            significant={6}\n                            formatter={formatBalance}\n                        />\n                    )}\n                </Typography>\n            )\n        }, [balance, decimals, isBlocked, source, mode, isTrust])\n\n        const { data: tokenBalance, isLoading: isLoadingTokenBalance } = useFungibleTokenBalance(\n            NetworkPluginID.PLUGIN_EVM,\n            isCustomToken ? address : '',\n            {\n                chainId,\n            },\n        )\n\n        return (\n            <div style={style}>\n                <ListItem\n                    title={address}\n                    key={address}\n                    button\n                    className={`${classes.list} dashboard token-list`}\n                    onClick={mode === TokenListMode.List ? () => onSelect(token) : undefined}\n                    disabled={!!(selected && mode === TokenListMode.List)}>\n                    <ListItemIcon>\n                        <Box position=\"relative\">\n                            <TokenIcon\n                                className={classes.icon}\n                                chainId={chainId}\n                                address={address}\n                                name={name}\n                                logoURL={logoURL}\n                            />\n                            {isHiddenChainIcon || !network?.iconUrl ? null : (\n                                <NetworkIcon\n                                    pluginID={pluginID}\n                                    chainId={chainId}\n                                    className={classes.badgeIcon}\n                                    size={16}\n                                />\n                            )}\n                        </Box>\n                    </ListItemIcon>\n                    <ListItemText classes={{ primary: classes.text }}>\n                        <Typography className={classes.primary} color=\"textPrimary\" component=\"span\">\n                            <span className={classes.symbol}>{symbol}</span>\n                            <span className={`${classes.name} dashboard token-list-symbol`}>\n                                {isCustomToken ? (\n                                    isLoadingTokenBalance ? (\n                                        <span className={classes.dotLoadingWrapper}>\n                                            <DotLoading />\n                                        </span>\n                                    ) : (\n                                        <FormattedBalance\n                                            value={tokenBalance}\n                                            decimals={decimals}\n                                            significant={6}\n                                            formatter={formatBalance}\n                                        />\n                                    )\n                                ) : (\n                                    <>\n                                        <span className={classes.nameText}>{name}</span>\n                                        <Link\n                                            onClick={(event) => event.stopPropagation()}\n                                            href={explorerLink}\n                                            style={{ width: 18, height: 18 }}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\">\n                                            <Icons.PopupLink size={18} className={classes.link} />\n                                        </Link>\n                                        {token.isCustomToken ? <span>{t.added_by_user()}</span> : null}\n                                    </>\n                                )}\n                            </span>\n                        </Typography>\n                        <Typography\n                            className={classes.action}\n                            sx={{ fontSize: 16 }}\n                            color=\"textSecondary\"\n                            component=\"span\">\n                            {action}\n                        </Typography>\n                    </ListItemText>\n                </ListItem>\n            </div>\n        )\n    })\n}\n","import { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { Stack, Typography } from '@mui/material'\nimport { memo } from 'react'\nimport { useSharedTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        padding: theme.spacing(2.25, 0),\n        margin: theme.spacing(2, -2, -2, -2),\n        boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.05)',\n        backdropFilter: 'blur(16px)',\n        borderRadius: theme.spacing(0, 0, 1.5, 1.5),\n    },\n    target: {\n        cursor: 'pointer',\n        fontWeight: 700,\n    },\n}))\n\ninterface ManageTokenListBarProps {\n    onClick(): void\n}\n\nexport const ManageTokenListBar = memo<ManageTokenListBarProps>(({ onClick }) => {\n    const t = useSharedTrans()\n    const { classes } = useStyles()\n    return (\n        <Stack className={classes.root} direction=\"row\" justifyContent=\"center\">\n            <Stack className={classes.target} display=\"inline-flex\" gap={2} direction=\"row\" onClick={onClick}>\n                <Icons.Edit2 />\n                <Typography>{t.erc20_manage_token_list()}</Typography>\n            </Stack>\n        </Stack>\n    )\n})\n","import { useCallback, useEffect, useMemo, useState, useTransition } from 'react'\nimport { uniqBy } from 'lodash-es'\nimport { EMPTY_LIST, EMPTY_OBJECT, type NetworkPluginID } from '@masknet/shared-base'\nimport { SearchableList, makeStyles, type MaskFixedSizeListProps, type MaskTextFieldProps } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { AddressType } from '@masknet/web3-shared-evm'\nimport {\n    useAccount,\n    useAddressType,\n    useBlockedFungibleTokens,\n    useChainId,\n    useFungibleAssets,\n    useFungibleToken,\n    useFungibleTokenBalance,\n    useFungibleTokensBalance,\n    useFungibleTokensFromTokenList,\n    useNetworkContext,\n    useTrustedFungibleTokens,\n    useWeb3Others,\n    useWeb3State,\n} from '@masknet/web3-hooks-base'\nimport {\n    CurrencyType,\n    ZERO,\n    currySameAddress,\n    isSameAddress,\n    leftShift,\n    toZero,\n    type FungibleToken,\n} from '@masknet/web3-shared-base'\nimport { Box, Stack } from '@mui/material'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { getFungibleTokenItem } from './FungibleTokenItem.js'\nimport { ManageTokenListBar } from './ManageTokenListBar.js'\nimport { TokenListMode } from './type.js'\n\nexport * from './type.js'\n\nconst SEARCH_KEYS = ['address', 'symbol', 'name']\n\nexport interface FungibleTokenListProps<T extends NetworkPluginID>\n    extends withClasses<'channel' | 'bar' | 'listBox' | 'searchInput'> {\n    pluginID?: T\n    chainId?: Web3Helper.ChainIdAll\n    whitelist?: string[]\n    blacklist?: string[]\n    tokens?: Array<FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>>\n    selectedTokens?: string[]\n    disableSearch?: boolean\n    onSelect?(token: FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll> | null): void\n    onSearchError?(error: boolean): void\n    FixedSizeListProps?: Partial<MaskFixedSizeListProps>\n    SearchTextFieldProps?: MaskTextFieldProps\n    enableManage?: boolean\n    isHiddenChainIcon?: boolean\n    setMode?(mode: TokenListMode): void\n    mode?: TokenListMode\n}\n\nconst useStyles = makeStyles<{ enableMange: boolean }>()((theme, { enableMange }) => ({\n    channel: {\n        position: enableMange ? 'relative' : 'unset',\n    },\n    bar: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n    },\n}))\n\nexport function FungibleTokenList<T extends NetworkPluginID>(props: FungibleTokenListProps<T>) {\n    const {\n        tokens = EMPTY_LIST,\n        whitelist: includeTokens,\n        blacklist: excludeTokens = EMPTY_LIST,\n        onSelect,\n        onSearchError,\n        FixedSizeListProps,\n        selectedTokens = EMPTY_LIST,\n        enableManage = false,\n        isHiddenChainIcon = true,\n        setMode,\n        mode = TokenListMode.List,\n    } = props\n\n    const t = useSharedTrans()\n    const { classes } = useStyles({ enableMange: mode === TokenListMode.List && enableManage }, { props })\n\n    const { pluginID } = useNetworkContext<T>(props.pluginID)\n    const account = useAccount(pluginID)\n    const chainId = useChainId(pluginID, props.chainId)\n    const { Token } = useWeb3State<'all'>(pluginID)\n    const Others = useWeb3Others(pluginID)\n\n    const { value: fungibleTokens = EMPTY_LIST } = useFungibleTokensFromTokenList(pluginID, {\n        chainId,\n    })\n\n    const { data: fungibleAssets = EMPTY_LIST } = useFungibleAssets(pluginID, undefined, {\n        chainId,\n    })\n\n    const trustedFungibleTokens = useTrustedFungibleTokens(pluginID, undefined, chainId)\n    const blockedFungibleTokens = useBlockedFungibleTokens(pluginID)\n    const nativeToken = useMemo(() => Others.chainResolver.nativeCurrency(chainId), [chainId])\n\n    const filteredFungibleTokens = useMemo(() => {\n        const allFungibleTokens = uniqBy(\n            [...(nativeToken ? [nativeToken] : []), ...tokens, ...fungibleTokens, ...trustedFungibleTokens],\n            (x) => x.address.toLowerCase(),\n        )\n\n        const blockedTokenAddresses = blockedFungibleTokens.map((x) => x.address)\n        return allFungibleTokens.filter((token) => {\n            const checkSameAddress = (addr: string) => addr.toLowerCase() === token.address.toLowerCase()\n            const isIncluded = !includeTokens || includeTokens.some(checkSameAddress)\n            const isExcluded = excludeTokens.length ? excludeTokens.some(checkSameAddress) : false\n            const isBlocked = blockedTokenAddresses.some(checkSameAddress)\n\n            return isIncluded && !isExcluded && !isBlocked\n        })\n    }, [\n        nativeToken,\n        tokens,\n        fungibleTokens,\n        trustedFungibleTokens,\n        includeTokens,\n        excludeTokens,\n        blockedFungibleTokens,\n    ])\n\n    const { value: fungibleTokensBalance = EMPTY_OBJECT } = useFungibleTokensBalance(\n        pluginID,\n        filteredFungibleTokens.map((x) => x.address),\n        { account, chainId },\n    )\n\n    // To avoid SearchableList re-render, reduce the dep\n    const sortedFungibleTokensForManage = useMemo(() => {\n        if (mode === TokenListMode.List) return EMPTY_LIST\n        const isTrustedToken = currySameAddress(trustedFungibleTokens.map((x) => x.address))\n\n        return uniqBy([...(nativeToken ? [nativeToken] : []), ...fungibleTokens, ...trustedFungibleTokens], (x) =>\n            x.address.toLowerCase(),\n        ).sort((a, z) => {\n            // trusted token\n            if (isTrustedToken(a.address)) return -1\n            if (isTrustedToken(z.address)) return 1\n\n            const isNativeTokenA = isSameAddress(a.address, Others.getNativeTokenAddress(a.chainId))\n            if (isNativeTokenA) return -1\n            const isNativeTokenZ = isSameAddress(z.address, Others.getNativeTokenAddress(z.chainId))\n            if (isNativeTokenZ) return 1\n\n            // mask token with position value\n            const isMaskTokenA = isSameAddress(a.address, Others.getMaskTokenAddress(a.chainId))\n            if (isMaskTokenA) return -1\n            const isMaskTokenZ = isSameAddress(z.address, Others.getMaskTokenAddress(z.chainId))\n            if (isMaskTokenZ) return 1\n\n            if (z.rank && (!a.rank || a.rank - z.rank > 0)) return 1\n            if (a.rank && (!z.rank || z.rank - a.rank > 0)) return -1\n\n            // alphabet\n            if (a.name !== z.name) return a.name < z.name ? -1 : 1\n\n            return 0\n        })\n    }, [chainId, trustedFungibleTokens, fungibleTokens, nativeToken, mode])\n\n    const sortedFungibleTokensForList = useMemo(() => {\n        if (mode === TokenListMode.Manage) return EMPTY_LIST\n        const fungibleAssetsTable = Object.fromEntries(\n            fungibleAssets.filter((x) => x.chainId === chainId).map((x) => [x.address, x]),\n        )\n        const isTrustedToken = currySameAddress(trustedFungibleTokens.map((x) => x.address))\n\n        const getTokenValue = (address: string) => {\n            const value = fungibleAssetsTable[address]?.value?.[CurrencyType.USD]\n            return value ? toZero(value) : ZERO\n        }\n        const { getNativeTokenAddress, getMaskTokenAddress } = Others\n        return filteredFungibleTokens\n            .map((x) => ({\n                ...x,\n                // To avoid reduce re-render, merge balance into token, when value is `undefined` to represent loading\n                balance: fungibleTokensBalance[x.address],\n            }))\n            .sort((a, z) => {\n                // the currently selected chain id\n                if (a.chainId !== z.chainId) {\n                    if (a.chainId === chainId) return -1\n                    if (z.chainId === chainId) return 1\n                }\n\n                // native token\n                const isNativeTokenA = isSameAddress(a.address, getNativeTokenAddress(a.chainId))\n                if (isNativeTokenA) return -1\n                const isNativeTokenZ = isSameAddress(z.address, getNativeTokenAddress(z.chainId))\n                if (isNativeTokenZ) return 1\n\n                // mask token with position value\n                const aUSD = getTokenValue(a.address)\n                const isMaskTokenA = isSameAddress(a.address, getMaskTokenAddress(a.chainId))\n                if (aUSD.isPositive() && isMaskTokenA) return -1\n                const zUSD = getTokenValue(z.address)\n                const isMaskTokenZ = isSameAddress(z.address, getMaskTokenAddress(z.chainId))\n                if (zUSD.isPositive() && isMaskTokenZ) return 1\n\n                // token value\n                if (!aUSD.isEqualTo(zUSD)) return zUSD.gt(aUSD) ? 1 : -1\n\n                const aBalance = leftShift(fungibleTokensBalance[a.address] ?? '0', a.decimals)\n                const zBalance = leftShift(fungibleTokensBalance[z.address] ?? '0', z.decimals)\n                // token balance\n                if (!aBalance.isEqualTo(zBalance)) return zBalance.gt(aBalance) ? 1 : -1\n\n                // trusted token\n                if (isTrustedToken(a.address)) return -1\n                if (isTrustedToken(z.address)) return 1\n\n                // mask token with position value\n                if (isMaskTokenA) return -1\n                if (isMaskTokenZ) return 1\n\n                if (z.rank && (!a.rank || a.rank - z.rank > 0)) return 1\n                if (a.rank && (!z.rank || z.rank - a.rank > 0)) return -1\n\n                // alphabet\n                if (a.name !== z.name) return a.name < z.name ? -1 : 1\n\n                return 0\n            })\n    }, [mode, chainId, fungibleAssets, trustedFungibleTokens, filteredFungibleTokens, fungibleTokensBalance])\n\n    // #region add token by address\n    const [keyword, setKeyword] = useState('')\n\n    const { value: addressType } = useAddressType(pluginID, !Others.isValidAddress?.(keyword ?? '') ? '' : keyword, {\n        chainId,\n    })\n\n    const isAddressNotContract = addressType !== AddressType.Contract && Others.isValidAddress(keyword)\n\n    const searchedTokenAddress = useMemo(() => {\n        if (!keyword) return\n\n        return Others.isValidAddress(keyword) &&\n            !sortedFungibleTokensForList.some((x) => isSameAddress(x.address, keyword))\n            ? keyword\n            : ''\n    }, [keyword, sortedFungibleTokensForList])\n    const searchError = keyword.match(/^0x.+/i) && !Others.isValidAddress(keyword) ? t.erc20_search_wrong_address() : ''\n    useEffect(() => {\n        onSearchError?.(!!searchError)\n    }, [searchError, !searchError])\n\n    const { data: searchedToken } = useFungibleToken(pluginID, searchedTokenAddress, undefined, {\n        chainId,\n    })\n\n    const isCustomToken = useMemo(\n        () =>\n            !sortedFungibleTokensForManage.find(\n                (x) => isSameAddress(x.address, searchedToken?.address) && searchedToken?.chainId === x.chainId,\n            ) && Boolean(searchedToken),\n        [sortedFungibleTokensForManage, searchedToken],\n    )\n\n    const { data: tokenBalance = '' } = useFungibleTokenBalance(pluginID, searchedToken?.address, {\n        chainId,\n        account,\n    })\n    // #endregion\n\n    const itemRender = useMemo(() => {\n        return getFungibleTokenItem<T>(\n            (address) => {\n                if (isSameAddress(nativeToken?.address, address)) return 'official-native'\n\n                const inOfficialList = fungibleTokens.some((x) => isSameAddress(x.address, address))\n                if (inOfficialList) return 'official'\n\n                const inPersonaList = trustedFungibleTokens.some((x) => isSameAddress(x.address, address))\n                if (inPersonaList) return 'personal'\n\n                return 'external'\n            },\n            (address) => selectedTokens.some((x) => isSameAddress(x, address)),\n            mode,\n            async (\n                token: FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>,\n                strategy: 'add' | 'remove',\n            ) => {\n                if (strategy === 'add') await Token?.addToken?.(account, token)\n                if (strategy === 'remove') await Token?.removeToken?.(account, token)\n            },\n            async (\n                token: FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>,\n                strategy: 'trust' | 'block',\n            ) => {\n                if (strategy === 'trust') await Token?.trustToken?.(account, token)\n                if (strategy === 'block') await Token?.blockToken?.(account, token)\n            },\n            isHiddenChainIcon,\n            isCustomToken,\n        )\n    }, [\n        nativeToken?.address,\n        selectedTokens,\n        mode,\n        trustedFungibleTokens,\n        fungibleTokens,\n        isCustomToken,\n        isHiddenChainIcon,\n    ])\n    const SearchFieldProps = useMemo(\n        () => ({\n            placeholder: t.erc20_token_list_placeholder(),\n            helperText: searchError,\n            error: !!searchError,\n            ...props.SearchTextFieldProps,\n        }),\n        [searchError, JSON.stringify(props.SearchTextFieldProps)],\n    )\n\n    const [, startTransition] = useTransition()\n\n    const handleSelect = useCallback(\n        (token: FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll> | null) =>\n            startTransition(() => onSelect?.(token)),\n        [onSelect],\n    )\n\n    return (\n        <Stack className={classes.channel}>\n            <SearchableList<\n                FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll> & {\n                    balance?: string\n                    isCustomToken?: boolean\n                }\n            >\n                onSelect={handleSelect}\n                onSearch={setKeyword}\n                data={\n                    isAddressNotContract\n                        ? EMPTY_LIST\n                        : searchedToken && isSameAddress(searchedToken.address, searchedTokenAddress)\n                        ? // balance field work for case: user search someone token by contract and whitelist is empty.\n                          [{ ...searchedToken, balance: tokenBalance, isCustomToken }]\n                        : mode === TokenListMode.List\n                        ? sortedFungibleTokensForList\n                        : sortedFungibleTokensForManage\n                }\n                searchKey={SEARCH_KEYS}\n                disableSearch={!!props.disableSearch}\n                itemKey=\"address\"\n                classes={{ listBox: classes.listBox, searchInput: classes.searchInput }}\n                itemRender={itemRender}\n                FixedSizeListProps={FixedSizeListProps}\n                SearchFieldProps={SearchFieldProps}\n            />\n            {mode === TokenListMode.List && enableManage ? (\n                <Box className={classes.bar}>\n                    <ManageTokenListBar onClick={() => setMode?.(TokenListMode.Manage)} />\n                </Box>\n            ) : null}\n        </Stack>\n    )\n}\n\nFungibleTokenList.displayName = 'FungibleTokenList'\n","export enum TokenListMode {\n    List = 'list',\n    Manage = 'manage',\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { createContainer } from 'unstated-next'\nimport { useSharedTrans } from '@masknet/shared'\nimport {\n    useGasOptions,\n    useNetworkContext,\n    useChainContext,\n    useSingleBlockBeatRetry,\n    useWeb3Others,\n} from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { GasOptionType } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { GasSettingsType } from './types/index.js'\n\nconst DEFAULT_SLIPPAGE_TOLERANCE = 0.5\nconst DEFAULT_SLIPPAGE_TOLERANCES = [0.5, 1, 2, 5]\n\nconst IN_MEMORY_CACHE: {\n    lastNetworkSignature?: string\n    lastTransactionSignature?: string\n    lastSelectedGasOptionType: GasOptionType\n    lastSelectedGasSettingsType: GasSettingsType\n} = {\n    lastSelectedGasOptionType: GasOptionType.NORMAL,\n    lastSelectedGasSettingsType: GasSettingsType.Basic,\n}\n\nfunction useSettingsContext(initial?: {\n    pluginID?: NetworkPluginID\n    chainId?: Web3Helper.ChainIdAll\n    slippageTolerance?: number\n    transaction?: Web3Helper.TransactionAll\n    disableGasPrice?: boolean\n    disableGasLimit?: boolean\n    disableSlippageTolerance?: boolean\n}) {\n    const t = useSharedTrans()\n    const { pluginID } = useNetworkContext(initial?.pluginID)\n    const { chainId } = useChainContext({\n        chainId: initial?.chainId,\n    })\n    const Others = useWeb3Others(pluginID)\n    const [transactionOptions, setTransactionOptions] = useState<\n        Web3Helper.Definition[typeof pluginID]['Transaction'] | undefined\n    >(initial?.transaction)\n    const [slippageTolerance, setSlippageTolerance] = useState(initial?.slippageTolerance ?? DEFAULT_SLIPPAGE_TOLERANCE)\n\n    const networkSignature = `${pluginID}_${chainId}`\n    const transactionSignature = Others.getTransactionSignature(chainId, transactionOptions) ?? ''\n    const needToResetByNetwork =\n        !!IN_MEMORY_CACHE?.lastNetworkSignature && IN_MEMORY_CACHE.lastNetworkSignature !== networkSignature\n    const needToResetByTransaction =\n        !!IN_MEMORY_CACHE?.lastTransactionSignature && IN_MEMORY_CACHE.lastTransactionSignature !== transactionSignature\n    const [gasSettingsType, setGasSettingsType] = useState<GasSettingsType>(\n        needToResetByNetwork || needToResetByTransaction\n            ? GasSettingsType.Basic\n            : IN_MEMORY_CACHE.lastSelectedGasSettingsType,\n    )\n    const [gasOptionType, setGasOptionType] = useState<GasOptionType>(\n        needToResetByNetwork || needToResetByTransaction\n            ? GasOptionType.NORMAL\n            : IN_MEMORY_CACHE.lastSelectedGasOptionType,\n    )\n\n    const {\n        data: gasOptions,\n        isLoading: gasOptionsLoading,\n        error: gasOptionsError,\n        refetch: gasOptionRetry,\n    } = useGasOptions(pluginID, {\n        chainId,\n    })\n\n    const onClearInMemoryCache = useCallback(() => {\n        delete IN_MEMORY_CACHE.lastNetworkSignature\n        delete IN_MEMORY_CACHE.lastTransactionSignature\n        IN_MEMORY_CACHE.lastSelectedGasOptionType = GasOptionType.NORMAL\n        IN_MEMORY_CACHE.lastSelectedGasSettingsType = GasSettingsType.Basic\n    }, [])\n\n    const onResetAll = useCallback(() => {\n        setSlippageTolerance(1)\n        setGasOptionType(GasOptionType.NORMAL)\n        setTransactionOptions(undefined)\n        gasOptionRetry()\n        onClearInMemoryCache()\n    }, [gasOptionRetry, onClearInMemoryCache])\n\n    useSingleBlockBeatRetry(pluginID, async () => {\n        if (initial?.disableGasPrice) return\n        gasOptionRetry()\n    })\n\n    // sync in-memory cache\n    useEffect(() => {\n        IN_MEMORY_CACHE.lastNetworkSignature = networkSignature\n        IN_MEMORY_CACHE.lastTransactionSignature = transactionSignature\n        IN_MEMORY_CACHE.lastSelectedGasOptionType = gasOptionType\n        IN_MEMORY_CACHE.lastSelectedGasSettingsType = gasSettingsType\n    }, [gasOptionType, gasSettingsType, networkSignature, transactionSignature])\n\n    return {\n        DEFAULT_SLIPPAGE_TOLERANCE,\n        DEFAULT_SLIPPAGE_TOLERANCES,\n        GAS_OPTION_NAMES: {\n            [GasOptionType.FAST]: t.gas_settings_gas_option_type_fast(),\n            [GasOptionType.NORMAL]: t.gas_settings_gas_option_type_normal(),\n            [GasOptionType.SLOW]: t.gas_settings_gas_option_type_slow(),\n            [GasOptionType.CUSTOM]: '',\n        },\n\n        pluginID,\n        chainId,\n        transaction: initial?.transaction,\n\n        transactionOptions,\n        setTransactionOptions,\n\n        slippageTolerance,\n        setSlippageTolerance,\n\n        gasOptionType,\n        setGasOptionType,\n\n        gasSettingsType,\n        setGasSettingsType,\n\n        gasOptions,\n        gasOptionsLoading,\n        gasOptionsError,\n        gasOptionRetry,\n\n        resetAll: onResetAll,\n    }\n}\n\nexport const SettingsContext = createContainer(useSettingsContext)\n","export enum GasSettingsType {\n    Basic = 'Basic',\n    Advanced = 'Advanced',\n}\n","import { makeStyles } from '@masknet/theme'\nimport { ImageIcon } from '../ImageIcon/index.js'\n\ninterface StyleProps {\n    size: number\n    badgeIconBorderColor?: string\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, props) => ({\n    root: {\n        position: 'relative',\n        display: 'flex',\n        height: props.size,\n        width: props.size,\n    },\n    mainIcon: {\n        display: 'block',\n    },\n    badgeIcon: {\n        position: 'absolute',\n        right: -6,\n        bottom: -4,\n        border: `1px solid ${props.badgeIconBorderColor ?? theme.palette.common.white}`,\n        borderRadius: '50%',\n    },\n}))\n\ninterface WalletIconProps extends withClasses<'root' | 'mainIcon'> {\n    size?: number\n    badgeSize?: number\n    mainIcon?: string\n    badgeIcon?: string\n    badgeIconBorderColor?: string\n    iconFilterColor?: string\n}\n\nexport function WalletIcon(props: WalletIconProps) {\n    const { size = 24, badgeSize = 14, mainIcon, badgeIcon, badgeIconBorderColor, iconFilterColor } = props\n    const { classes } = useStyles(\n        {\n            size: badgeSize > size ? badgeSize : size,\n            badgeIconBorderColor,\n        },\n        { props: { classes: props.classes } },\n    )\n\n    return (\n        <div\n            className={classes.root}\n            style={{\n                height: size,\n                width: size,\n            }}>\n            {mainIcon ? (\n                <ImageIcon className={classes.mainIcon} size={size} icon={mainIcon} iconFilterColor={iconFilterColor} />\n            ) : null}\n            {badgeIcon ? <ImageIcon className={classes.badgeIcon} size={badgeSize} icon={badgeIcon} /> : null}\n        </div>\n    )\n}\n","import { useCallback } from 'react'\nimport { type NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useClearTransactionsCallback<T extends NetworkPluginID>(pluginID?: T) {\n    const { account, chainId } = useChainContext()\n    const { Transaction } = useWeb3State(pluginID)\n\n    return useCallback(async () => {\n        if (!account) return\n        return Transaction?.clearTransactions?.(chainId, account)\n    }, [chainId, account, Transaction])\n}\n","import { useCallback } from 'react'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useRemoveTransactionCallback<T extends NetworkPluginID>(pluginID?: T) {\n    const { account, chainId } = useChainContext()\n    const { Transaction } = useWeb3State(pluginID)\n\n    return useCallback(\n        async (id: string) => {\n            if (!account) return\n            await Transaction?.removeTransaction?.(chainId, account, id)\n        },\n        [chainId, account, Transaction],\n    )\n}\n","import { filter, flatten, pick, uniq, values } from 'lodash-es'\nimport Aave from '@masknet/web3-constants/evm/aave.json'\nimport ArtBlocks from '@masknet/web3-constants/evm/artblocks.json'\nimport Gitcoin from '@masknet/web3-constants/evm/gitcoin.json'\nimport Lido from '@masknet/web3-constants/evm/lido.json'\nimport MaskBox from '@masknet/web3-constants/evm/mask-box.json'\nimport NftRedPacket from '@masknet/web3-constants/evm/nft-red-packet.json'\nimport RedPacket from '@masknet/web3-constants/evm/red-packet.json'\nimport Trader from '@masknet/web3-constants/evm/trader.json'\n\nconst collect = <T extends Record<string, Record<string, string | number>>>(\n    data: T,\n    fields: Array<keyof T>,\n): string[] => {\n    const groupedByFields = values(pick(data, fields))\n    const listOfAddresses = groupedByFields.map((v) => values(v))\n    const listOfAddress = flatten(listOfAddresses)\n    const collected = filter(uniq(listOfAddress), Boolean) as string[]\n    return collected.map((addr) => addr.toLowerCase())\n}\n\nconst domainAddressMap: Record<string, string[]> = {\n    'uniswap.org': collect(Trader, [\n        'UNISWAP_V2_ROUTER_ADDRESS',\n        'UNISWAP_V2_FACTORY_ADDRESS',\n        'UNISWAP_SWAP_ROUTER_ADDRESS',\n        'UNISWAP_V3_FACTORY_ADDRESS',\n        'UNISWAP_V3_QUOTER_ADDRESS',\n    ]),\n    'defikingdoms.com': collect(Trader, ['DEFIKINGDOMS_ROUTER_ADDRESS', 'DEFIKINGDOMS_FACTORY_ADDRESS']),\n    'app.openswap.one': collect(Trader, ['OPENSWAP_ROUTER_ADDRESS', 'OPENSWAP_FACTORY_ADDRESS']),\n    'viper.exchange': collect(Trader, ['VENOMSWAP_ROUTER_ADDRESS', 'VENOMSWAP_FACTORY_ADDRESS']),\n    'viperswap.one': collect(Trader, ['VENOMSWAP_ROUTER_ADDRESS', 'VENOMSWAP_FACTORY_ADDRESS']),\n    'www.sushi.com': collect(Trader, ['SUSHISWAP_ROUTER_ADDRESS', 'SUSHISWAP_FACTORY_ADDRESS']),\n    'quickswap.exchange': collect(Trader, ['QUICKSWAP_ROUTER_ADDRESS', 'QUICKSWAP_FACTORY_ADDRESS']),\n    'pancakeswap.finance': collect(Trader, ['PANCAKESWAP_ROUTER_ADDRESS', 'PANCAKESWAP_FACTORY_ADDRESS']),\n    'dodoex.io': collect(Trader, ['DODO_EXCHANGE_PROXY_ADDRESS']),\n    'www.bancor.network': collect(Trader, ['BANCOR_EXCHANGE_PROXY_ADDRESS']),\n    'traderjoexyz.com': collect(Trader, ['TRADERJOE_ROUTER_ADDRESS', 'TRADERJOE_FACTORY_ADDRESS']),\n    'openocean.finance': collect(Trader, ['OPENOCEAN_EXCHANGE_PROXY_ADDRESS']),\n    'pangolin.exchange': collect(Trader, ['PANGOLIN_ROUTER_ADDRESS', 'PANGOLIN_FACTORY_ADDRESS']),\n    'wannaswap.finance': collect(Trader, [\n        'WANNASWAP_ROUTER_V2_ADDRESS',\n        'WANNASWAP_ROUTER_ADDRESS',\n        'WANNASWAP_FACTORY_ADDRESS',\n    ]),\n    'yumiswap.com': collect(Trader, ['YUMISWAP_ROUTER_ADDRESS', 'YUMISWAP_FACTORY_ADDRESS']),\n    'www.trisolaris.io': collect(Trader, ['TRISOLARIS_ROUTER_ADDRESS', 'TRISOLARIS_FACTORY_ADDRESS']),\n    'mdex.com': collect(Trader, ['MDEX_ROUTER_ADDRESS', 'MDEX_FACTORY_ADDRESS']),\n    'aave.com': collect(Aave, ['AAVE_LENDING_POOL_ADDRESSES_PROVIDER_CONTRACT_ADDRESS']),\n    'www.artblocks.io': collect(ArtBlocks, ['GEN_ART_721_MINTER']),\n    'gitcoin.co': collect(Gitcoin as Pick<typeof Gitcoin, 'GITCOIN_ETH_ADDRESS' | 'BULK_CHECKOUT_ADDRESS'>, [\n        'GITCOIN_ETH_ADDRESS',\n        'BULK_CHECKOUT_ADDRESS',\n    ]),\n    'lido.fi': collect(Lido, ['LIDO_stETH_ADDRESS', 'LIDO_REFERRAL_ADDRESS']),\n    'mask.io': [\n        ...collect(RedPacket, [\n            'HAPPY_RED_PACKET_ADDRESS_V1',\n            'HAPPY_RED_PACKET_ADDRESS_V2',\n            'HAPPY_RED_PACKET_ADDRESS_V3',\n            'HAPPY_RED_PACKET_ADDRESS_V4',\n        ]),\n        ...collect(NftRedPacket, ['RED_PACKET_NFT_ADDRESS']),\n        ...collect(MaskBox, ['MASK_BOX_CONTRACT_ADDRESS']),\n    ],\n}\n\n// Not very common usage, no need to create a map of address-to-domain\nexport function getContractOwnerDomain(address?: string) {\n    if (!address) return address\n    const addr = address.toLowerCase()\n    const pair = Object.entries(domainAddressMap).find(([, addresses]) => {\n        return addresses.includes(addr)\n    })\n    return pair ? pair[0] : addr\n}\n","import { forwardRef, useCallback, useMemo, useState, useEffect } from 'react'\nimport { useAsync } from 'react-use'\nimport { noop } from 'lodash-es'\nimport { format } from 'date-fns'\nimport { Icons } from '@masknet/icons'\nimport { useChainContext, useWeb3Others, useWeb3State } from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { makeStyles, MaskColorVar } from '@masknet/theme'\nimport {\n    isSameAddress,\n    type RecentTransactionComputed,\n    TransactionStatusType,\n    type Transaction,\n} from '@masknet/web3-shared-base'\nimport { getContractOwnerDomain } from '@masknet/web3-shared-evm'\nimport { Grid, type GridProps, Link, List, ListItem, type ListProps, Stack, Typography } from '@mui/material'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    list: {\n        borderRadius: 8,\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n        padding: 0,\n    },\n    listItem: {\n        height: 52,\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1, 1),\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    transaction: {\n        width: '100%',\n    },\n    methodName: {\n        fontWeight: 500,\n        textTransform: 'capitalize',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n    },\n    timestamp: {\n        lineHeight: '18px',\n    },\n    cell: {\n        fontSize: 14,\n        display: 'flex',\n        alignItems: 'center',\n        color: theme.palette.text.primary,\n        boxSizing: 'border-box',\n    },\n    linkText: {\n        lineHeight: '18px',\n    },\n    link: {\n        display: 'flex',\n    },\n    linkIcon: {\n        // TODO: replace with theme color\n        color: theme.palette.mode === 'dark' ? '#F5F5F5' : '#07101B',\n        width: 17.5,\n        height: 17.5,\n        marginLeft: theme.spacing(0.5),\n    },\n    clear: {\n        color: MaskColorVar.blue,\n        cursor: 'pointer',\n    },\n}))\n\nconst statusTextColorMap: Record<TransactionStatusType, string> = {\n    [TransactionStatusType.NOT_DEPEND]: '#FFB915',\n    [TransactionStatusType.SUCCEED]: '#60DFAB',\n    [TransactionStatusType.FAILED]: '#FF5F5F',\n}\n\ninterface TransactionProps extends GridProps {\n    chainId: Web3Helper.ChainIdAll\n    transaction: RecentTransactionComputed<Web3Helper.ChainIdAll, Web3Helper.TransactionAll>\n    onClear?(tx: RecentTransactionComputed<Web3Helper.ChainIdAll, Web3Helper.TransactionAll>): void\n}\nfunction Transaction({ chainId, transaction: tx, onClear = noop, ...rest }: TransactionProps) {\n    const t = useSharedTrans()\n    const { classes, theme } = useStyles()\n\n    const statusTextMap: Record<TransactionStatusType, string> = {\n        [TransactionStatusType.NOT_DEPEND]: t.recent_transaction_pending(),\n        [TransactionStatusType.SUCCEED]: t.recent_transaction_success(),\n        [TransactionStatusType.FAILED]: t.recent_transaction_failed(),\n    }\n\n    const Others = useWeb3Others()\n    const { TransactionFormatter, TransactionWatcher } = useWeb3State()\n\n    const address = ((tx._tx as Transaction<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>).to || '').toLowerCase()\n\n    const { value: functionName } = useAsync(async () => {\n        const formattedTransaction = await TransactionFormatter?.formatTransaction(chainId, tx._tx)\n        return formattedTransaction?.title ?? 'Contract Interaction'\n    }, [TransactionFormatter])\n\n    const handleClear = useCallback(() => {\n        onClear(tx)\n    }, [onClear, tx])\n\n    const domainOrAddress = useMemo(() => getContractOwnerDomain(address), [address])\n\n    const [txStatus, setTxStatus] = useState(tx.status)\n\n    useEffect(() => {\n        const off = TransactionWatcher?.emitter.on('progress', (chainId, id, status, transaction) => {\n            setTxStatus(status)\n        })\n\n        return () => {\n            off?.()\n        }\n    }, [tx.id, TransactionWatcher])\n\n    return (\n        <Grid container {...rest}>\n            <Grid item className={classes.cell} textAlign=\"left\" md={4}>\n                <Stack overflow=\"hidden\">\n                    <Typography\n                        className={classes.methodName}\n                        title={functionName || ''}\n                        variant=\"body1\"\n                        fontWeight={500}>\n                        {functionName}\n                    </Typography>\n                    <Typography className={classes.timestamp} variant=\"body1\" color={theme.palette.text.secondary}>\n                        {format(tx.createdAt, 'yyyy.MM.dd HH:mm')}\n                    </Typography>\n                </Stack>\n            </Grid>\n            <Grid item className={classes.cell} flexGrow={1} md={4} justifyContent=\"right\">\n                <Typography variant=\"body1\" className={classes.linkText}>\n                    {address && isSameAddress(domainOrAddress, address)\n                        ? Others.formatAddress(address, 4)\n                        : domainOrAddress || address}\n                </Typography>\n                <Link\n                    className={classes.link}\n                    href={Others.explorerResolver.transactionLink?.(chainId, tx.id)}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <Icons.LinkOut className={classes.linkIcon} />\n                </Link>\n            </Grid>\n            <Grid item className={classes.cell} md={2} justifyContent=\"center\">\n                <Typography fontWeight={400} justifyContent=\"center\" color={statusTextColorMap[txStatus]} fontSize={14}>\n                    {statusTextMap[txStatus]}\n                </Typography>\n            </Grid>\n            <Grid item className={classes.cell} md={2} justifyContent=\"right\">\n                {txStatus === TransactionStatusType.NOT_DEPEND ? (\n                    <Typography fontWeight={300} className={classes.clear} onClick={handleClear}>\n                        {t.wallet_status_pending_clear()}\n                    </Typography>\n                ) : null}\n            </Grid>\n        </Grid>\n    )\n}\n\ninterface Props extends ListProps {\n    transactions: Array<RecentTransactionComputed<Web3Helper.ChainIdAll, Web3Helper.TransactionAll>>\n    onClear?(tx: RecentTransactionComputed<Web3Helper.ChainIdAll, Web3Helper.TransactionAll>): void\n}\n\nexport const TransactionList = forwardRef<HTMLUListElement, Props>(\n    ({ className, transactions, onClear = noop, ...rest }, ref) => {\n        const { classes, cx } = useStyles()\n        const { chainId } = useChainContext()\n        if (!transactions.length) return null\n        return (\n            <List className={cx(classes.list, className)} {...rest} ref={ref}>\n                {transactions.map((tx) => (\n                    <ListItem key={tx.id} className={classes.listItem}>\n                        <Transaction\n                            className={classes.transaction}\n                            transaction={tx}\n                            chainId={chainId}\n                            onClear={onClear}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        )\n    },\n)\n","import {\n    useClearTransactionsCallback,\n    useRemoveTransactionCallback,\n    useRecentTransactions,\n} from '@masknet/web3-hooks-base'\nimport { makeStyles, MaskColorVar } from '@masknet/theme'\nimport { TransactionStatusType } from '@masknet/web3-shared-base'\nimport { Typography } from '@mui/material'\nimport { useState } from 'react'\nimport { TransactionList } from './TransactionList.js'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    summaryWrapper: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: theme.spacing(1, 1),\n    },\n    pendingSummary: {\n        cursor: 'default',\n        color: theme.palette.maskColor.warn,\n    },\n    clearAll: {\n        cursor: 'pointer',\n        color: theme.palette.mode === 'light' ? MaskColorVar.blue : theme.palette.common.white,\n    },\n    hide: {\n        display: 'none',\n    },\n}))\n\nexport function usePendingTransactions() {\n    const { classes, cx } = useStyles()\n    const t = useSharedTrans()\n\n    // #region recent pending transactions\n    const pendingTransactions = useRecentTransactions(undefined, TransactionStatusType.NOT_DEPEND)\n\n    // frozenTxes would not be reactive to pendingTransactions,\n    // it would be recreated then the list shows up.\n    const [meltedTxHashes, setMeltedTxHashes] = useState<string[]>([])\n\n    const clearRecentTxes = useClearTransactionsCallback()\n    const removeRecentTx = useRemoveTransactionCallback()\n\n    const transactions = pendingTransactions.slice(0, 5).filter((tx) => !meltedTxHashes.includes(tx.id))\n    // #endregion\n    const summary = pendingTransactions.length ? (\n        <section className={classes.summaryWrapper}>\n            <div className={cx(pendingTransactions.length ? '' : classes.hide)}>\n                {pendingTransactions.length ? (\n                    <Typography className={classes.pendingSummary} variant=\"body2\" mr={1} fontWeight={700}>\n                        {t.wallet_status_pending({ count: pendingTransactions.length })}\n                    </Typography>\n                ) : null}\n            </div>\n            {pendingTransactions.length ? (\n                <Typography className={classes.clearAll} onClick={clearRecentTxes} fontWeight={700}>\n                    {t.wallet_status_pending_clear_all()}\n                </Typography>\n            ) : null}\n        </section>\n    ) : null\n\n    const transactionList =\n        transactions.length > 0 ? (\n            <TransactionList\n                transactions={transactions}\n                onClear={(tx) => {\n                    setMeltedTxHashes((list) => [...list, tx.id])\n                    removeRecentTx(tx.id)\n                }}\n            />\n        ) : null\n\n    return { summary, transactionList }\n}\n","import { Button, Link, Typography, useTheme, ThemeProvider } from '@mui/material'\nimport { MaskColors, MaskLightTheme, getMaskColor, makeStyles } from '@masknet/theme'\nimport { Sniffings } from '@masknet/shared-base'\nimport {\n    useChainContext,\n    useNetworkDescriptor,\n    useProviderDescriptor,\n    useReverseAddress,\n    useNativeToken,\n    useWallet,\n    useWeb3Connection,\n    useBalance,\n    useChainIdValid,\n    useWeb3Others,\n} from '@masknet/web3-hooks-base'\nimport {\n    FormattedAddress,\n    WalletIcon,\n    SelectProviderModal,\n    useSharedTrans,\n    WalletStatusModal,\n    CopyButton,\n} from '@masknet/shared'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { formatBalance } from '@masknet/web3-shared-base'\nimport { delay } from '@masknet/kit'\nimport { Icons } from '@masknet/icons'\nimport { usePendingTransactions } from './usePendingTransactions.js'\n\nconst useStyles = makeStyles<{\n    contentBackground?: string\n    textColor?: string\n    disableChange?: boolean\n    withinRiskWarningDialog?: boolean\n}>()((theme, { contentBackground, disableChange, withinRiskWarningDialog, textColor }) => ({\n    currentAccount: {\n        padding: theme.spacing(0, 1.5),\n        marginBottom: withinRiskWarningDialog ? '7px' : theme.spacing(2),\n        display: 'flex',\n        background:\n            contentBackground ??\n            (Sniffings.is_dashboard_page ? getMaskColor(theme).primaryBackground2 : theme.palette.background.default),\n        borderRadius: 8,\n        alignItems: 'center',\n        height: disableChange ? 60 : 82,\n    },\n    dashboardBackground: {\n        background: theme.palette.background.default,\n    },\n    accountInfo: {\n        fontSize: 16,\n        flexGrow: 1,\n        marginLeft: theme.spacing(1.5),\n    },\n    accountName: {\n        color: !Sniffings.is_dashboard_page ? theme.palette.maskColor.dark : textColor,\n        fontWeight: 700,\n        marginRight: 5,\n        lineHeight: '18px',\n    },\n    balance: {\n        color: !Sniffings.is_dashboard_page ? theme.palette.maskColor.dark : textColor,\n        paddingTop: 2,\n        lineHeight: '18px',\n    },\n    infoRow: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    actionButton: {\n        fontSize: 12,\n        color: 'white',\n        backgroundColor: theme.palette.maskColor.dark,\n        marginLeft: theme.spacing(1),\n        padding: theme.spacing(1, 2),\n        '&:hover': {\n            backgroundColor: theme.palette.maskColor.dark,\n        },\n    },\n    link: {\n        fontSize: 14,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    connectButtonWrapper: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: theme.spacing(2, 0),\n    },\n    icon: {\n        width: 17.5,\n        height: 17.5,\n        marginRight: theme.spacing(0.5),\n    },\n    copyIcon: {\n        color: Sniffings.is_dashboard_page ? textColor : theme.palette.maskColor.dark,\n    },\n    linkIcon: {\n        color: Sniffings.is_dashboard_page ? textColor : theme.palette.maskColor?.dark,\n    },\n    statusBox: {\n        position: 'relative',\n    },\n}))\nexport interface WalletStatusBox {\n    disableChange?: boolean\n    withinRiskWarningDialog?: boolean\n    showPendingTransaction?: boolean\n    closeDialog?: () => void\n}\nexport function WalletStatusBox(props: WalletStatusBox) {\n    const t = useSharedTrans()\n    const providerDescriptor = useProviderDescriptor<'all'>()\n    const theme = useTheme()\n    const { classes, cx } = useStyles({\n        contentBackground: providerDescriptor?.backgroundGradient ?? theme.palette.maskColor.publicBg,\n        disableChange: props.disableChange,\n        withinRiskWarningDialog: props.withinRiskWarningDialog,\n        textColor:\n            providerDescriptor?.type === ProviderType.MaskWallet\n                ? theme.palette.maskColor.dark\n                : theme.palette.text.primary,\n    })\n\n    const Web3 = useWeb3Connection()\n    const Others = useWeb3Others()\n    const { account, chainId } = useChainContext()\n\n    const chainIdValid = useChainIdValid()\n    const wallet = useWallet()\n    const { data: balance = '0', isLoading: loadingBalance } = useBalance()\n    const { data: nativeToken, isLoading: loadingNativeToken } = useNativeToken()\n    const networkDescriptor = useNetworkDescriptor()\n    const { data: domain } = useReverseAddress(undefined, account)\n    const { summary: pendingSummary, transactionList } = usePendingTransactions()\n\n    if (!Others.isValidAddress(account)) {\n        return (\n            <section className={classes.connectButtonWrapper}>\n                <Button\n                    className={cx(classes.actionButton)}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    size=\"small\"\n                    onClick={() => SelectProviderModal.open()}>\n                    {t.plugin_wallet_on_connect()}\n                </Button>\n            </section>\n        )\n    }\n\n    return (\n        <>\n            <section\n                className={cx(\n                    classes.statusBox,\n                    classes.currentAccount,\n                    Sniffings.is_dashboard_page ? classes.dashboardBackground : '',\n                )}>\n                <WalletIcon\n                    size={30}\n                    badgeSize={12}\n                    mainIcon={providerDescriptor?.icon}\n                    badgeIcon={chainIdValid ? networkDescriptor?.icon : undefined}\n                />\n                <div className={classes.accountInfo}>\n                    {ProviderType.MaskWallet === providerDescriptor?.type ? (\n                        <Typography className={classes.accountName}>{wallet?.name}</Typography>\n                    ) : null}\n                    <div className={classes.infoRow}>\n                        <Typography className={classes.accountName}>\n                            {domain ? (\n                                Others.formatDomainName(domain)\n                            ) : (\n                                <FormattedAddress address={account} size={4} formatter={Others.formatAddress} />\n                            )}\n                        </Typography>\n                        <ThemeProvider theme={MaskLightTheme}>\n                            <CopyButton\n                                className={cx(classes.icon, classes.copyIcon)}\n                                color={MaskColors.light.maskColor.dark}\n                                size={17.5}\n                                text={account}\n                            />\n                        </ThemeProvider>\n                        {chainIdValid ? (\n                            <Link\n                                className={classes.link}\n                                href={Others.explorerResolver.addressLink(chainId, account) ?? ''}\n                                target=\"_blank\"\n                                title={t.plugin_wallet_view_on_explorer()}\n                                rel=\"noopener noreferrer\">\n                                <Icons.LinkOut className={cx(classes.icon, classes.linkIcon)} />\n                            </Link>\n                        ) : null}\n                    </div>\n\n                    {props.withinRiskWarningDialog ? null : (\n                        <div className={classes.infoRow}>\n                            <Typography className={classes.balance}>\n                                {loadingNativeToken || loadingBalance\n                                    ? '-'\n                                    : `${formatBalance(balance, nativeToken?.decimals, 3)} ${nativeToken?.symbol}`}\n                            </Typography>\n                        </div>\n                    )}\n                </div>\n\n                {!props.disableChange && (\n                    <section>\n                        <Button\n                            className={cx(classes.actionButton)}\n                            variant=\"contained\"\n                            size=\"small\"\n                            onClick={async () => {\n                                props.closeDialog?.()\n                                // TODO: remove this after global dialog be implement\n                                await delay(500)\n                                WalletStatusModal.close()\n                                await Web3.disconnect()\n                            }}>\n                            {t.plugin_wallet_disconnect()}\n                        </Button>\n                        <Button\n                            className={cx(classes.actionButton)}\n                            variant=\"contained\"\n                            size=\"small\"\n                            onClick={() => {\n                                SelectProviderModal.open()\n                                props.closeDialog?.()\n                            }}>\n                            {t.wallet_status_button_change()}\n                        </Button>\n                    </section>\n                )}\n            </section>\n            {props.showPendingTransaction ? (\n                <div>\n                    {pendingSummary}\n                    {transactionList}\n                </div>\n            ) : null}\n        </>\n    )\n}\n","import { forwardRef, useRef } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { Trans } from 'react-i18next'\nimport { DialogContent, Box, Card, Typography, Paper, Link, dialogClasses } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { WalletIcon, useSharedTrans } from '@masknet/shared'\nimport {\n    NetworkPluginID,\n    Sniffings,\n    getSiteType,\n    type SingletonModalRefCreator,\n    pluginIDsSettings,\n} from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { makeStyles, MaskColorVar, ActionButton, LoadingBase } from '@masknet/theme'\nimport { useProviderDescriptor, useNetworkDescriptor, useWeb3Connection, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { InjectedDialog } from '../../contexts/index.js'\n\nconst useStyles = makeStyles<{ contentBackground?: string }>()((theme, props) => ({\n    dialog: {\n        minHeight: 'auto !important',\n        [`.${dialogClasses.paper}`]: {\n            minHeight: 'unset !important',\n        },\n    },\n    dialogContent: {\n        padding: theme.spacing(2),\n    },\n\n    cardContent: {\n        padding: theme.spacing('22px', '12px'),\n        borderRadius: 8,\n        background: props.contentBackground ?? theme.palette.background.default,\n    },\n    tipContent: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'center',\n        marginTop: 12,\n        backgroundColor: MaskColorVar.warningBackground,\n        padding: '13px 12px',\n        borderRadius: 8,\n    },\n    tipContentText: {\n        color: MaskColorVar.warning,\n        fontSize: 13,\n        marginLeft: 8.5,\n    },\n    tipLink: {\n        color: MaskColorVar.warning,\n        textDecoration: 'underline',\n    },\n    connectWith: {\n        fontSize: '14px',\n        color: Sniffings.is_dashboard_page ? '#07101B' : theme.palette.maskColor.dark,\n        fontWeight: 700,\n    },\n    error: {\n        paddingRight: theme.spacing(1),\n    },\n    progressIcon: {\n        fontSize: 14,\n        color: theme.palette.common.white,\n    },\n    progress: {\n        color: theme.palette.common.black,\n    },\n    warningTriangleIcon: {\n        fontSize: 20,\n    },\n    retryButton: {\n        fontSize: 12,\n        backgroundColor: theme.palette.maskColor.publicMain,\n        color: theme.palette.maskColor.white,\n        '&:hover': {\n            backgroundColor: theme.palette.maskColor.publicMain,\n            color: theme.palette.maskColor.white,\n        },\n    },\n}))\n\nexport interface ConnectWalletModalOpenProps {\n    pluginID: NetworkPluginID\n    networkType: Web3Helper.NetworkTypeAll\n    providerType: Web3Helper.ProviderTypeAll\n}\n\nexport type ConnectWalletModalCloseProps = boolean\n\nexport const ConnectWalletModal = forwardRef<\n    SingletonModalRefCreator<ConnectWalletModalOpenProps, ConnectWalletModalCloseProps>\n>((props, ref) => {\n    const t = useSharedTrans()\n\n    const connectionRef = useRef<{\n        pluginID: NetworkPluginID\n        networkType: Web3Helper.NetworkTypeAll\n        providerType: Web3Helper.ProviderTypeAll\n    }>()\n    const { pluginID, providerType, networkType } = connectionRef.current ?? {}\n\n    const providerDescriptor = useProviderDescriptor(pluginID, providerType)\n    const networkDescriptor = useNetworkDescriptor(pluginID, networkType)\n\n    const { classes } = useStyles({ contentBackground: providerDescriptor?.backgroundGradient })\n\n    const Web3 = useWeb3Connection(pluginID, { providerType })\n    const Others = useWeb3Others(pluginID)\n\n    const [{ loading, value: connected, error }, onConnect] = useAsyncFn(async () => {\n        if (!connectionRef.current) throw new Error('Failed to connect to provider.')\n\n        const { pluginID, providerType, networkType } = connectionRef.current\n\n        const chainId = Others.networkResolver.networkChainId(networkType)\n        if (!chainId) throw new Error('Failed to connect to provider.')\n\n        try {\n            const account = await Web3.connect({\n                chainId,\n                providerType,\n            })\n            if (!account) throw new Error('Failed to build connection.')\n        } catch (err) {\n            throw new Error(err instanceof Error ? err.message : 'Failed to connect to provider.')\n        }\n\n        const site = getSiteType()\n\n        if (pluginID && site) {\n            pluginIDsSettings.value = {\n                ...pluginIDsSettings.value,\n                [site]: pluginID,\n            }\n        }\n\n        return true\n    }, [connectionRef.current, Others, Web3])\n\n    const [open, dispatch] = useSingletonModal(ref, {\n        async onOpen(props) {\n            connectionRef.current = {\n                pluginID: props.pluginID ?? NetworkPluginID.PLUGIN_EVM,\n                networkType: props.networkType,\n                providerType: props.providerType,\n            }\n\n            const connected = await onConnect()\n            if (connected === true) dispatch?.close(true)\n        },\n    })\n\n    if (!open) return null\n\n    if (!pluginID || !providerType || !networkType) return null\n\n    return (\n        <InjectedDialog\n            title={t.plugin_wallet_dialog_title()}\n            open={open}\n            onClose={() => dispatch?.close(false)}\n            maxWidth=\"sm\"\n            className={classes.dialog}>\n            <DialogContent className={classes.dialogContent}>\n                <Paper elevation={0}>\n                    <Card className={`${classes.cardContent} dashboard-style`} elevation={0}>\n                        <Box display=\"flex\" alignItems=\"center\">\n                            <WalletIcon\n                                size={30}\n                                badgeSize={12}\n                                mainIcon={providerDescriptor?.icon}\n                                badgeIcon={networkDescriptor?.icon}\n                            />\n                            <Box display=\"flex\" flex={1} flexDirection=\"column\" sx={{ marginLeft: 2 }}>\n                                <Typography className={classes.connectWith}>\n                                    {loading\n                                        ? t.plugin_wallet_connect_to()\n                                        : connected\n                                        ? t.plugin_wallet_connected_to()\n                                        : t.plugin_wallet_connect_to()}{' '}\n                                    {Others.providerResolver.providerName(providerType)}\n                                </Typography>\n                                {loading ? (\n                                    <Box display=\"flex\" alignItems=\"center\">\n                                        <LoadingBase\n                                            className={classes.progressIcon}\n                                            size={14}\n                                            sx={{ marginRight: 1 }}\n                                        />\n                                        <Typography variant=\"body2\" className={classes.progress}>\n                                            {t.initializing()}\n                                        </Typography>\n                                    </Box>\n                                ) : null}\n                                {!loading && error ? (\n                                    <Typography className={classes.error} color=\"red\" variant=\"body2\">\n                                        {error.message?.includes('Already processing eth_requestAccounts') ||\n                                        error.message?.includes(\n                                            \"Request of type 'wallet_requestPermissions' already pending for origin\",\n                                        )\n                                            ? t.plugin_wallet_metamask_error_already_request()\n                                            : error.message ?? 'Something went wrong.'}\n                                    </Typography>\n                                ) : null}\n                            </Box>\n                            {!connected && error ? (\n                                <ActionButton\n                                    loading={loading}\n                                    color=\"primary\"\n                                    onClick={onConnect}\n                                    disabled={loading}\n                                    className={classes.retryButton}>\n                                    {t.plugin_wallet_connect_to_retry()}\n                                </ActionButton>\n                            ) : null}\n                        </Box>\n                    </Card>\n                </Paper>\n                {providerDescriptor?.type === ProviderType.WalletConnect ? null : (\n                    <Card className={classes.tipContent} elevation={0}>\n                        <Icons.WarningTriangle className={classes.warningTriangleIcon} />\n                        <Typography className={classes.tipContentText} variant=\"body2\">\n                            <Trans\n                                i18nKey=\"plugin_wallet_connect_tip\"\n                                components={{\n                                    providerLink: Others.providerResolver.providerHomeLink(providerType) ? (\n                                        <Link\n                                            className={classes.tipLink}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            href={Others.providerResolver.providerHomeLink(providerType)}\n                                        />\n                                    ) : (\n                                        <span />\n                                    ),\n                                }}\n                                values={{\n                                    providerName: Others.providerResolver.providerName(providerType),\n                                    providerShortenLink: Others.providerResolver.providerShortenLink(providerType),\n                                }}\n                            />\n                        </Typography>\n                    </Card>\n                )}\n            </DialogContent>\n        </InjectedDialog>\n    )\n})\n","import { zhTW, enUS, ja, zhCN, ko } from 'date-fns/locale'\nimport { SupportedLanguages } from '@masknet/public-api'\n\nexport function getLocale(lang?: SupportedLanguages) {\n    if (lang === SupportedLanguages.enUS) return enUS\n    if (lang === SupportedLanguages.jaJP) return ja\n    if (lang === SupportedLanguages.zhTW) return zhTW\n    if (lang === SupportedLanguages.zhCN) return zhCN\n    if (lang === SupportedLanguages.koKR) return ko\n    return enUS\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');","import { useMemo } from 'react'\nimport { formatDistanceStrict, addSeconds } from 'date-fns'\nimport { makeStyles } from '@masknet/theme'\nimport { type GasOptionType, getLocale, formatCurrency } from '@masknet/web3-shared-base'\nimport { useSharedTrans } from '@masknet/shared'\nimport { Typography, useTheme } from '@mui/material'\nimport { CheckCircle, RadioButtonUnchecked } from '@mui/icons-material'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { formatWeiToGwei } from '@masknet/web3-shared-evm'\nimport type { SupportedLanguages } from '@masknet/public-api'\nimport { SettingsContext } from './Context.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        root: {\n            cursor: 'pointer',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            fontWeight: 700,\n            padding: theme.spacing(2.5, 0),\n        },\n        type: {\n            fontWeight: 700,\n            color: theme.palette.text.primary,\n            margin: theme.spacing(0, 0.5, 0, 1),\n            fontSize: 16,\n        },\n        estimate: {\n            flex: 1,\n            color: theme.palette.text.secondary,\n            fontWeight: 400,\n            fontSize: 16,\n        },\n        amount: {\n            fontWeight: 700,\n            color: theme.palette.text.primary,\n            fontSize: 16,\n        },\n    }\n})\n\ninterface GasOptionProps {\n    type: GasOptionType\n    option: Web3Helper.GasOptionAll\n    lang?: SupportedLanguages\n    checked?: boolean\n    onClick?: () => void\n}\n\nexport function GasOption(props: GasOptionProps) {\n    const { type, option, lang, checked = false, onClick } = props\n    const { classes } = useStyles()\n    const theme = useTheme()\n    const t = useSharedTrans()\n    const { GAS_OPTION_NAMES } = SettingsContext.useContainer()\n\n    const now = useMemo(() => {\n        return new Date()\n    }, [option])\n\n    return (\n        <div\n            className={classes.root}\n            style={{ color: checked ? theme.palette.maskColor.primary : theme.palette.maskColor.line }}\n            onClick={onClick}>\n            {checked ? <CheckCircle color=\"inherit\" /> : <RadioButtonUnchecked color=\"inherit\" />}\n            <Typography className={classes.type}>{GAS_OPTION_NAMES[type]}</Typography>\n            <Typography className={classes.estimate}>\n                {t.gas_settings_gas_option_estimate_distance({\n                    distance: formatDistanceStrict(addSeconds(now, option.estimatedSeconds), now, {\n                        addSuffix: true,\n                        locale: getLocale(lang),\n                    }),\n                })}\n            </Typography>\n            <Typography className={classes.amount}>\n                {t.gas_settings_gas_option_amount_in_gwei({\n                    amount: formatCurrency(formatWeiToGwei(option.suggestedMaxFeePerGas), ''),\n                })}\n            </Typography>\n        </div>\n    )\n}\n","import React, { useCallback, useEffect } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Divider, Skeleton } from '@mui/material'\nimport { GasOptionType } from '@masknet/web3-shared-base'\nimport type { ChainId, GasOption, Transaction } from '@masknet/web3-shared-evm'\nimport { Others } from '@masknet/web3-providers'\nimport { GasOption as GasOptionItem } from './GasOption.js'\nimport { SettingsContext } from './Context.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        root: {\n            boxShadow: `0px 0px 20px 0px ${theme.palette.mode === 'dark' ? '#FFFFFF1F' : '#0000000D'}`,\n            backdropFilter: 'blur(16px)',\n            borderRadius: 16,\n            display: 'flex',\n            flexDirection: 'column',\n            marginTop: theme.spacing(2),\n        },\n        content: {\n            padding: theme.spacing(0.5, 2),\n        },\n        skeleton: {\n            height: 201.5,\n            display: 'flex',\n            justifyContent: 'space-between',\n            flexDirection: 'column',\n        },\n        rectangle: {\n            borderRadius: 16,\n        },\n    }\n})\n\ninterface GasOptionSelectorProps {\n    chainId: ChainId\n    options?: Record<GasOptionType, GasOption>\n    onChange?: (option: Partial<Transaction>) => void\n}\n\nexport function GasOptionSelector(props: GasOptionSelectorProps) {\n    const { chainId, options, onChange } = props\n    const { classes } = useStyles()\n    const { gasOptionType, setGasOptionType } = SettingsContext.useContainer()\n\n    const isEIP1559 = Others.chainResolver.isFeatureSupported(chainId, 'EIP1559')\n\n    const onClick = useCallback(\n        (type: GasOptionType, option: GasOption) => {\n            setGasOptionType(type)\n            onChange?.(\n                isEIP1559\n                    ? {\n                          maxFeePerGas: option.suggestedMaxFeePerGas,\n                          maxPriorityFeePerGas: option.suggestedMaxPriorityFeePerGas,\n                      }\n                    : {\n                          gasPrice: option.suggestedMaxFeePerGas,\n                      },\n            )\n        },\n        [isEIP1559, onChange],\n    )\n\n    useEffect(() => {\n        if (!options) return\n        onClick(gasOptionType, options[gasOptionType])\n    }, [gasOptionType, options])\n\n    if (!options)\n        return (\n            <Box className={classes.root}>\n                <div className={classes.skeleton}>\n                    <Skeleton className={classes.rectangle} height={62} variant=\"rectangular\" />\n                    <Skeleton className={classes.rectangle} height={62} variant=\"rectangular\" />\n                    <Skeleton className={classes.rectangle} height={62} variant=\"rectangular\" />\n                </div>\n            </Box>\n        )\n\n    return (\n        <Box className={classes.root}>\n            <div className={classes.content}>\n                {Object.entries(options).map(([type, option], i) => {\n                    const type_ = type as GasOptionType\n                    if (type === GasOptionType.CUSTOM) return\n                    return (\n                        <React.Fragment key={type}>\n                            {i === 0 ? null : <Divider />}\n                            <GasOptionItem\n                                type={type_}\n                                option={option}\n                                checked={type_ === gasOptionType}\n                                onClick={() => onClick(type_, option)}\n                            />\n                        </React.Fragment>\n                    )\n                })}\n            </div>\n        </Box>\n    )\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Box, Typography } from '@mui/material'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        root: {},\n        title: {\n            fontWeight: 700,\n            margin: theme.spacing(3, 0, 2),\n        },\n    }\n})\n\ninterface SectionProps {\n    title: string\n    additions?: React.ReactNode\n    children: React.ReactNode\n}\n\nexport function Section(props: SectionProps) {\n    const { title, additions, children } = props\n    const { classes } = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                <Typography className={classes.title}>{title}</Typography>\n                {additions ?? <div />}\n            </Box>\n            {children}\n        </div>\n    )\n}\n","import { forwardRef } from 'react'\nimport { Alert, type AlertProps, alpha } from '@mui/material'\nimport { makeStyles } from '../../UIHelper/makeStyles.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: theme.spacing(2),\n        padding: 11,\n        borderRadius: 4,\n    },\n    message: {\n        fontSize: 14,\n        fontWeight: 400,\n        padding: 0,\n    },\n    icon: {\n        width: 22,\n        height: 22,\n        padding: 0,\n    },\n    action: {\n        padding: 0,\n    },\n    standardWarning: {\n        color: theme.palette.maskColor.warn,\n        background: alpha(theme.palette.maskColor.warn, 0.1),\n    },\n    standardError: {\n        color: theme.palette.maskColor.danger,\n        background: alpha(theme.palette.maskColor.danger, 0.1),\n    },\n}))\n\nexport interface MaskAlertProps extends AlertProps {}\n\nexport const MaskAlert = forwardRef<HTMLDivElement | null, MaskAlertProps>((props, ref) => {\n    const { children, ...rest } = props\n    const { classes } = useStyles()\n\n    return (\n        <Alert\n            {...rest}\n            ref={ref}\n            classes={{\n                root: classes.root,\n                message: classes.message,\n                icon: classes.icon,\n                action: classes.action,\n                standardWarning: classes.standardWarning,\n                standardError: classes.standardError,\n                ...rest.classes,\n            }}>\n            {children}\n        </Alert>\n    )\n})\n","import { useMemo } from 'react'\nimport { z as zod } from 'zod'\nimport { useSharedTrans } from '@masknet/shared'\nimport { type ChainId, formatGweiToWei, type GasOption, type Transaction } from '@masknet/web3-shared-evm'\nimport {\n    type GasOptionType,\n    isGreaterThanOrEqualTo,\n    isLessThan,\n    isLessThanOrEqualTo,\n    isPositive,\n    multipliedBy,\n} from '@masknet/web3-shared-base'\n\nconst HIGH_FEE_WARNING_MULTIPLIER = 1.5\n\nexport function useGasSchema(\n    chainId: ChainId,\n    transaction: Transaction | undefined,\n    gasOptions: Record<GasOptionType, GasOption> | undefined,\n) {\n    const t = useSharedTrans()\n\n    return useMemo(() => {\n        return zod\n            .object({\n                gasLimit: zod\n                    .string()\n                    .min(1, t.gas_settings_error_gas_limit_absence())\n                    .refine(\n                        (gasLimit) => isGreaterThanOrEqualTo(gasLimit, transaction?.gas ?? 21000),\n                        t.gas_settings_error_gas_limit_too_low(),\n                    ),\n                gasPrice: zod\n                    .string()\n                    .min(1, t.gas_settings_error_gas_price_absence())\n                    .refine(isPositive, t.gas_settings_error_gas_price_positive())\n                    .refine(\n                        (value) =>\n                            isGreaterThanOrEqualTo(\n                                formatGweiToWei(value),\n                                gasOptions?.slow?.suggestedMaxFeePerGas ?? 0,\n                            ),\n                        t.gas_settings_error_gas_price_too_low(),\n                    )\n                    .refine(\n                        (value) =>\n                            isLessThan(\n                                formatGweiToWei(value),\n                                multipliedBy(gasOptions?.fast?.suggestedMaxFeePerGas ?? 0, HIGH_FEE_WARNING_MULTIPLIER),\n                            ),\n                        t.gas_settings_error_gas_price_too_high(),\n                    ),\n                maxPriorityFeePerGas: zod\n                    .string()\n                    .min(1, t.gas_settings_error_max_priority_fee_absence())\n                    .refine(isPositive, t.gas_settings_error_max_priority_gas_fee_positive())\n                    .refine(\n                        (value) =>\n                            isGreaterThanOrEqualTo(\n                                formatGweiToWei(value),\n                                gasOptions?.slow?.suggestedMaxPriorityFeePerGas ?? 0,\n                            ),\n                        t.gas_settings_error_max_priority_gas_fee_too_low(),\n                    )\n                    .refine(\n                        (value) =>\n                            isLessThan(\n                                formatGweiToWei(value),\n                                multipliedBy(\n                                    gasOptions?.fast?.suggestedMaxPriorityFeePerGas ?? 0,\n                                    HIGH_FEE_WARNING_MULTIPLIER,\n                                ),\n                            ),\n                        t.gas_settings_error_max_priority_gas_fee_too_high(),\n                    ),\n                maxFeePerGas: zod\n                    .string()\n                    .min(1, t.gas_settings_error_max_fee_absence())\n                    .refine(\n                        (value) =>\n                            isGreaterThanOrEqualTo(\n                                formatGweiToWei(value),\n                                gasOptions?.slow?.suggestedMaxFeePerGas ?? 0,\n                            ),\n                        t.gas_settings_error_max_fee_too_low(),\n                    )\n                    .refine(\n                        (value) =>\n                            isLessThan(\n                                formatGweiToWei(value),\n                                multipliedBy(gasOptions?.fast?.suggestedMaxFeePerGas ?? 0, HIGH_FEE_WARNING_MULTIPLIER),\n                            ),\n                        t.gas_settings_error_max_fee_too_high(),\n                    ),\n            })\n            .refine((data) => isLessThanOrEqualTo(data.maxPriorityFeePerGas, data.maxFeePerGas), {\n                message: t.gas_settings_error_max_priority_gas_fee_imbalance(),\n                path: ['maxFeePerGas'],\n            })\n    }, [t, transaction?.gas, gasOptions])\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { useUpdateEffect } from 'react-use'\nimport { Controller, FormProvider, useForm } from 'react-hook-form'\nimport type { z as zod } from 'zod'\nimport { BigNumber } from 'bignumber.js'\nimport { Grid, Typography } from '@mui/material'\nimport { makeStyles, MaskAlert, MaskTextField } from '@masknet/theme'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { Icons } from '@masknet/icons'\nimport { useSharedTrans } from '@masknet/shared'\nimport { NUMERIC_INPUT_REGEXP_PATTERN } from '@masknet/shared-base'\nimport {\n    type ChainId,\n    formatGweiToWei,\n    formatWeiToGwei,\n    type GasOption,\n    type Transaction,\n} from '@masknet/web3-shared-evm'\nimport { formatCurrency, GasOptionType, isPositive, isZero } from '@masknet/web3-shared-base'\nimport { Others } from '@masknet/web3-providers'\nimport { useGasSchema } from './hooks/index.js'\n\nfunction getDefaultValues(transaction: Transaction, gasOptions: Record<GasOptionType, GasOption>) {\n    return {\n        gasLimit: transaction.gas ?? '21000',\n        gasPrice: formatWeiToGwei(transaction.gasPrice || gasOptions.normal.suggestedMaxFeePerGas).toString(),\n        maxPriorityFeePerGas: formatWeiToGwei(\n            transaction.maxPriorityFeePerGas || gasOptions.normal.suggestedMaxPriorityFeePerGas,\n        ).toString(),\n        maxFeePerGas: formatWeiToGwei(transaction.maxFeePerGas || gasOptions.normal.suggestedMaxFeePerGas).toString(),\n    }\n}\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        unit: {\n            color: theme.palette.maskColor.third,\n        },\n        caption: {\n            color: theme.palette.maskColor.second,\n            fontWeight: 700,\n            margin: theme.spacing(1, 0, 1.5),\n        },\n        alertIcon: {\n            color: `${theme.palette.maskColor.main} !important`,\n            width: 22,\n            height: 22,\n            padding: 0,\n        },\n        alertMessage: {\n            color: theme.palette.maskColor.main,\n            fontSize: 14,\n            fontWeight: 400,\n            padding: 0,\n        },\n        alertStandardSuccess: {\n            backgroundColor: theme.palette.maskColor.bg,\n        },\n    }\n})\n\ninterface GasFormProps {\n    defaultGasLimit: string\n    chainId: ChainId\n    transaction: Transaction\n    disableGasLimit?: boolean\n    transactionOptions: Partial<Transaction>\n    gasOptions: Record<GasOptionType, GasOption>\n    onChange?: (transactionOptions?: Partial<Transaction>) => void\n    maxPriorityFeePerGasByUser?: string\n    setMaxPriorityFeePerGasByUser: (s: string) => void\n}\n\nexport function GasForm(props: GasFormProps) {\n    const {\n        defaultGasLimit,\n        chainId,\n        transaction,\n        transactionOptions,\n        gasOptions,\n        onChange,\n        maxPriorityFeePerGasByUser,\n        setMaxPriorityFeePerGasByUser,\n    } = props\n    const t = useSharedTrans()\n    const { classes } = useStyles()\n\n    const isEIP1559 = Others.chainResolver.isFeatureSupported(chainId, 'EIP1559')\n    const baseFeePerGas = gasOptions[GasOptionType.FAST].baseFeePerGas ?? '0'\n\n    const schema = useGasSchema(chainId, transaction, gasOptions)\n    const transactionComputed: Transaction = {\n        ...transaction,\n        ...transactionOptions,\n    }\n\n    const methods = useForm<zod.infer<typeof schema>>({\n        shouldUnregister: false,\n        mode: 'onChange',\n        resolver: zodResolver(schema),\n        defaultValues: getDefaultValues(transactionComputed, gasOptions),\n    })\n\n    const { errors } = methods.formState\n    const [gasLimit, gasPrice, maxFeePerGas, maxPriorityFeePerGas] = methods.watch([\n        'gasLimit',\n        'gasPrice',\n        'maxFeePerGas',\n        'maxPriorityFeePerGas',\n    ])\n\n    const [gasPriceByUser, setGasPriceByUser] = useState<string>()\n    const [maxFeePerGasByUser, setMaxFeePerGasByUser] = useState<string>()\n\n    const errorCenter = useMemo(() => {\n        return isEIP1559 ? errors.gasLimit?.message ?? '' : ''\n    }, [isEIP1559, errors.gasLimit?.message])\n    const errorBottom = useMemo(() => {\n        return (\n            (isEIP1559 ? undefined : errors.gasPrice?.message) ??\n            (isEIP1559 ? undefined : errors.gasLimit?.message) ??\n            (isEIP1559 ? errors.maxFeePerGas?.message : undefined) ??\n            (isEIP1559 ? errors.maxPriorityFeePerGas?.message : undefined) ??\n            ''\n        )\n    }, [\n        isEIP1559,\n        errors.gasPrice?.message,\n        errors.gasLimit?.message,\n        errors.maxFeePerGas?.message,\n        errors.maxPriorityFeePerGas?.message,\n    ])\n\n    // #region set the default max priority gas fee and max fee\n    useUpdateEffect(() => {\n        if (!gasOptions) return\n\n        if (!gasPriceByUser) {\n            methods.setValue('gasPrice', formatWeiToGwei(gasOptions.normal.suggestedMaxFeePerGas).toString())\n        }\n        if (!maxFeePerGasByUser) {\n            methods.setValue('maxFeePerGas', formatWeiToGwei(gasOptions.normal.suggestedMaxFeePerGas).toString())\n        }\n        if (!maxPriorityFeePerGasByUser) {\n            methods.setValue(\n                'maxPriorityFeePerGas',\n                formatWeiToGwei(gasOptions.normal.suggestedMaxPriorityFeePerGas).toString(),\n            )\n        }\n    }, [gasOptions, gasPriceByUser, maxFeePerGasByUser, maxPriorityFeePerGasByUser, methods.setValue])\n    // #endregion\n\n    useEffect(() => {\n        const payload = isEIP1559\n            ? {\n                  gas: gasLimit,\n                  maxFeePerGas: formatGweiToWei(maxFeePerGas).toString(),\n                  maxPriorityFeePerGas: formatGweiToWei(maxPriorityFeePerGas).toString(),\n              }\n            : {\n                  gasPrice: formatGweiToWei(gasPrice).toString(),\n              }\n        onChange?.(!errorCenter && !errorBottom ? payload : undefined)\n    }, [errorCenter, errorBottom, isEIP1559, gasLimit, gasPrice, maxFeePerGas, maxPriorityFeePerGas, gasOptions])\n\n    return (\n        <FormProvider {...methods}>\n            {isEIP1559 && isPositive(baseFeePerGas) ? (\n                <MaskAlert\n                    classes={{\n                        icon: classes.alertIcon,\n                        message: classes.alertMessage,\n                        standardSuccess: classes.alertStandardSuccess,\n                    }}\n                    icon={<Icons.Info />}>\n                    {t.gas_settings_info_gas_fee({\n                        fee: formatCurrency(formatWeiToGwei(baseFeePerGas), ''),\n                    })}\n                </MaskAlert>\n            ) : null}\n            <Grid container direction=\"row\" spacing={2}>\n                {isEIP1559 ? null : (\n                    <Grid item xs={6}>\n                        <Controller\n                            render={({ field }) => (\n                                <MaskTextField\n                                    {...field}\n                                    InputProps={{\n                                        inputProps: {\n                                            pattern: NUMERIC_INPUT_REGEXP_PATTERN,\n                                        },\n                                        type: 'number',\n                                        endAdornment: <Typography className={classes.unit}>{t.gwei()}</Typography>,\n                                    }}\n                                    value={isZero(gasPriceByUser ?? 0) ? gasPrice : gasPriceByUser}\n                                    label={\n                                        <Typography className={classes.caption}>\n                                            {t.gas_settings_label_gas_price()}\n                                        </Typography>\n                                    }\n                                    error={!!errors.gasPrice?.message}\n                                    onChange={(ev) => {\n                                        setGasPriceByUser(ev.target.value)\n                                        methods.setValue('gasPrice', ev.target.value)\n                                        methods.trigger()\n                                    }}\n                                    fullWidth\n                                />\n                            )}\n                            name=\"gasPrice\"\n                        />\n                    </Grid>\n                )}\n                <Grid item xs={isEIP1559 ? 12 : 6}>\n                    <Controller\n                        render={({ field }) => (\n                            <MaskTextField\n                                {...field}\n                                InputProps={{\n                                    inputProps: {\n                                        pattern: NUMERIC_INPUT_REGEXP_PATTERN,\n                                    },\n                                    type: 'number',\n                                }}\n                                disabled={props.disableGasLimit}\n                                value={isZero(gasLimit) ? defaultGasLimit : new BigNumber(gasLimit).toString()}\n                                label={\n                                    <Typography className={classes.caption}>\n                                        {t.gas_settings_label_gas_limit()}\n                                    </Typography>\n                                }\n                                fullWidth\n                                error={!!errors.gasLimit?.message}\n                            />\n                        )}\n                        name=\"gasLimit\"\n                    />\n                    {errorCenter ? (\n                        <MaskAlert icon={<Icons.CircleWarning />} severity=\"error\">\n                            {errorCenter}\n                        </MaskAlert>\n                    ) : null}\n                </Grid>\n            </Grid>\n            {isEIP1559 ? (\n                <Grid container direction=\"row\" spacing={2}>\n                    <Grid item xs={6}>\n                        <Controller\n                            render={({ field }) => (\n                                <MaskTextField\n                                    {...field}\n                                    InputProps={{\n                                        inputProps: {\n                                            pattern: NUMERIC_INPUT_REGEXP_PATTERN,\n                                        },\n                                        type: 'number',\n                                        endAdornment: <Typography className={classes.unit}>{t.gwei()}</Typography>,\n                                    }}\n                                    value={\n                                        isZero(maxPriorityFeePerGasByUser ?? 0)\n                                            ? maxPriorityFeePerGas\n                                            : maxPriorityFeePerGasByUser\n                                    }\n                                    label={\n                                        <Typography className={classes.caption}>\n                                            {t.gas_settings_label_max_priority_fee()}\n                                        </Typography>\n                                    }\n                                    error={!!errors.maxPriorityFeePerGas?.message}\n                                    onChange={(ev) => {\n                                        setMaxPriorityFeePerGasByUser(ev.target.value)\n                                        methods.setValue('maxPriorityFeePerGas', ev.target.value)\n                                        methods.trigger()\n                                    }}\n                                    fullWidth\n                                />\n                            )}\n                            name=\"maxPriorityFeePerGas\"\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Controller\n                            render={({ field }) => (\n                                <MaskTextField\n                                    {...field}\n                                    InputProps={{\n                                        inputProps: {\n                                            pattern: NUMERIC_INPUT_REGEXP_PATTERN,\n                                        },\n                                        type: 'number',\n                                        endAdornment: <Typography className={classes.unit}>{t.gwei()}</Typography>,\n                                    }}\n                                    value={isZero(maxFeePerGasByUser ?? 0) ? maxFeePerGas : maxFeePerGasByUser}\n                                    label={\n                                        <Typography className={classes.caption}>\n                                            {t.gas_settings_label_max_fee()}\n                                        </Typography>\n                                    }\n                                    error={!!errors.maxFeePerGas?.message}\n                                    onChange={(ev) => {\n                                        setMaxFeePerGasByUser(ev.target.value)\n                                        methods.setValue('maxFeePerGas', ev.target.value)\n                                        methods.trigger()\n                                    }}\n                                    fullWidth\n                                />\n                            )}\n                            name=\"maxFeePerGas\"\n                        />\n                    </Grid>\n                </Grid>\n            ) : null}\n            {errorBottom ? (\n                <MaskAlert icon={<Icons.CircleWarning />} severity=\"error\">\n                    {errorBottom}\n                </MaskAlert>\n            ) : null}\n        </FormProvider>\n    )\n}\n","import { useState } from 'react'\nimport { makeStyles, MaskTabList } from '@masknet/theme'\nimport { useSharedTrans } from '@masknet/shared'\nimport { TabContext } from '@mui/lab'\nimport { Tab, Typography } from '@mui/material'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { GasOptionType, isZero, plus, formatCurrency } from '@masknet/web3-shared-base'\nimport { type ChainId, formatGweiToWei, formatWeiToGwei, type Transaction } from '@masknet/web3-shared-evm'\nimport { Others } from '@masknet/web3-providers'\nimport { GasOptionSelector } from './GasOptionSelector.js'\nimport { SettingsContext } from './Context.js'\nimport { Section } from './Section.js'\nimport { GasForm } from './GasForm.js'\nimport { GasSettingsType } from './types/index.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        root: {},\n        tabs: {\n            overflow: 'visible',\n            backgroundColor: theme.palette.maskColor.input,\n        },\n        additions: {\n            fontWeight: 700,\n        },\n        label: {\n            color: theme.palette.maskColor.second,\n            fontWeight: 700,\n        },\n        price: {\n            fontWeight: 700,\n        },\n        tab: {\n            color: theme.palette.maskColor.second,\n            '&[aria-selected=\"true\"]': {\n                color: theme.palette.maskColor.main,\n            },\n        },\n    }\n})\n\ninterface GasSectionProps {\n    activeTab: GasSettingsType\n    setActiveTab: (type: GasSettingsType) => void\n    disableGasLimit?: boolean\n}\n\nexport function GasSection(props: GasSectionProps) {\n    const { activeTab, setActiveTab, disableGasLimit } = props\n\n    const t = useSharedTrans()\n    const { classes } = useStyles()\n    const {\n        pluginID,\n        chainId,\n        transaction,\n        transactionOptions,\n        setTransactionOptions,\n        gasOptions,\n        gasOptionType,\n        GAS_OPTION_NAMES,\n    } = SettingsContext.useContainer()\n    const [maxPriorityFeePerGasByUser, setMaxPriorityFeePerGasByUser] = useState('0')\n\n    // EVM only\n    if (pluginID !== NetworkPluginID.PLUGIN_EVM) return null\n\n    const isEIP1559 = Others.chainResolver.isFeatureSupported(chainId as ChainId, 'EIP1559')\n    const suggestedMaxFeePerGas = gasOptions?.[gasOptionType ?? GasOptionType.NORMAL].suggestedMaxFeePerGas\n    const suggestedMaxPriorityFeePerGas =\n        gasOptions?.[gasOptionType ?? GasOptionType.NORMAL].suggestedMaxPriorityFeePerGas\n    const baseFeePerGas = gasOptions?.[GasOptionType.FAST].baseFeePerGas ?? '0'\n    const priorityFee = !isZero(maxPriorityFeePerGasByUser)\n        ? formatGweiToWei(maxPriorityFeePerGasByUser)\n        : ((transaction as Transaction)?.maxPriorityFeePerGas as string)\n\n    const gasPrice = (transactionOptions as Transaction | undefined)?.gasPrice\n\n    const customPrice = formatCurrency(\n        activeTab === GasSettingsType.Basic\n            ? formatWeiToGwei(suggestedMaxFeePerGas ?? 0)\n            : formatWeiToGwei(\n                  isEIP1559\n                      ? plus(baseFeePerGas, priorityFee ?? suggestedMaxPriorityFeePerGas ?? 0)\n                      : gasPrice ?? suggestedMaxFeePerGas ?? 0,\n              ),\n        '',\n    )\n\n    return (\n        <div className={classes.root}>\n            <Section\n                title={t.gas_settings_label_gas_price()}\n                additions={\n                    gasOptionType ? (\n                        <Typography className={classes.additions} component=\"span\">\n                            <span className={classes.label}>\n                                {activeTab === GasSettingsType.Basic\n                                    ? GAS_OPTION_NAMES[gasOptionType]\n                                    : t.gas_settings_custom()}\n                            </span>\n                            <span className={classes.price}>{` ${customPrice} Gwei`}</span>\n                        </Typography>\n                    ) : null\n                }>\n                <TabContext value={activeTab}>\n                    <MaskTabList\n                        classes={{ root: classes.tabs }}\n                        variant=\"round\"\n                        aria-label=\"Gas Tabs\"\n                        onChange={(event, tab) => setActiveTab(tab as GasSettingsType)}>\n                        <Tab className={classes.tab} label={t.gas_settings_tab_basic()} value={GasSettingsType.Basic} />\n                        <Tab\n                            className={classes.tab}\n                            label={t.gas_settings_tab_advanced()}\n                            value={GasSettingsType.Advanced}\n                        />\n                    </MaskTabList>\n                </TabContext>\n                {activeTab === GasSettingsType.Basic ? (\n                    <GasOptionSelector\n                        chainId={chainId as ChainId}\n                        options={gasOptions}\n                        onChange={(transactionOptions) => {\n                            setTransactionOptions(transactionOptions)\n                        }}\n                    />\n                ) : gasOptions ? (\n                    <GasForm\n                        defaultGasLimit={customPrice}\n                        disableGasLimit={disableGasLimit}\n                        chainId={chainId as ChainId}\n                        transaction={transaction as Transaction}\n                        transactionOptions={transactionOptions as Partial<Transaction>}\n                        gasOptions={gasOptions}\n                        onChange={(transactionOptions) => {\n                            setTransactionOptions(transactionOptions)\n                        }}\n                        maxPriorityFeePerGasByUser={maxPriorityFeePerGasByUser}\n                        setMaxPriorityFeePerGasByUser={setMaxPriorityFeePerGasByUser}\n                    />\n                ) : null}\n            </Section>\n        </div>\n    )\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Button, Checkbox, type CheckboxProps } from '@mui/material'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        root: {\n            flex: 1,\n            backgroundImage: 'none',\n            boxShadow: 'none',\n            padding: 0,\n            maxWidth: 100,\n            '&:hover': {\n                backgroundColor: 'transparent !important',\n            },\n        },\n        button: {\n            flex: 1,\n            fontSize: 16,\n            '& span': {\n                display: 'none',\n            },\n        },\n    }\n})\n\ninterface RadioChipProps extends CheckboxProps {\n    label: string\n}\n\nexport function RadioChip(props: RadioChipProps) {\n    const { classes } = useStyles()\n\n    return (\n        <Checkbox\n            className={classes.root}\n            {...props}\n            disableRipple\n            icon={\n                <Button className={classes.button} disableRipple variant=\"text\">\n                    {props.label}\n                </Button>\n            }\n            checkedIcon={\n                <Button className={classes.button} disableRipple variant=\"contained\" color=\"info\">\n                    {props.label}\n                </Button>\n            }\n        />\n    )\n}\n","import { useMemo } from 'react'\nimport { useSharedTrans } from '@masknet/shared'\nimport { isGreaterThan, isLessThanOrEqualTo } from '@masknet/web3-shared-base'\nimport { z as zod } from 'zod'\n\nexport function useSlippageToleranceSchema() {\n    const t = useSharedTrans()\n\n    return useMemo(() => {\n        return zod.object({\n            customSlippageTolerance: zod.string().refine((value) => {\n                return isGreaterThan(value, 0) && isLessThanOrEqualTo(value, 50)\n            }, t.gas_settings_error_custom_slippage_tolerance_invalid()),\n        })\n    }, [t])\n}\n","import { useState, useMemo, useEffect } from 'react'\nimport { Controller, FormProvider, useForm } from 'react-hook-form'\nimport { makeStyles, MaskTextField, MaskAlert } from '@masknet/theme'\nimport { Icons } from '@masknet/icons'\nimport { useSharedTrans } from '@masknet/shared'\nimport { Box, Paper } from '@mui/material'\nimport { isZero } from '@masknet/web3-shared-base'\nimport { NUMERIC_INPUT_REGEXP_PATTERN } from '@masknet/shared-base'\nimport type { z as zod } from 'zod'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { RadioChip } from './RadioChip.js'\nimport { useSlippageToleranceSchema } from './hooks/index.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            boxShadow: `0px 0px 20px 0px ${theme.palette.mode === 'dark' ? '#FFFFFF1F' : '#0000000D'}`,\n            backdropFilter: 'blur(16px)',\n            marginTop: theme.spacing(1),\n            padding: theme.spacing(2),\n            justifyContent: 'space-between',\n        },\n        textfield: {\n            flex: 1,\n            maxWidth: 100,\n        },\n    }\n})\n\ninterface SlippageToleranceFormProps {\n    slippageTolerance: number\n    slippageTolerances: number[]\n    onChange?: (data?: zod.infer<ReturnType<typeof useSlippageToleranceSchema>>) => void\n}\n\nexport function SlippageToleranceForm(props: SlippageToleranceFormProps) {\n    const { slippageTolerance, slippageTolerances, onChange } = props\n    const t = useSharedTrans()\n    const { classes } = useStyles()\n\n    const schema = useSlippageToleranceSchema()\n    const [tolerance, setTolerance] = useState(slippageTolerance)\n\n    const methods = useForm<zod.infer<typeof schema>>({\n        shouldUnregister: false,\n        mode: 'onChange',\n        resolver: zodResolver(schema),\n        defaultValues: {\n            customSlippageTolerance: '',\n        },\n    })\n\n    const [customSlippageTolerance] = methods.watch(['customSlippageTolerance'])\n\n    const error = useMemo(() => {\n        return methods.formState.errors.customSlippageTolerance?.message\n    }, [methods.formState.errors.customSlippageTolerance?.message])\n\n    useEffect(() => {\n        onChange?.({\n            customSlippageTolerance: !error ? tolerance.toString() : '0',\n        })\n    }, [tolerance, error])\n\n    return (\n        <FormProvider {...methods}>\n            <Paper className={classes.root}>\n                {slippageTolerances.map((x) => (\n                    <RadioChip\n                        key={x}\n                        label={`${x}%`}\n                        checked={isZero(customSlippageTolerance || '0') && tolerance === x}\n                        onClick={() => {\n                            methods.setValue('customSlippageTolerance', '')\n                            methods.clearErrors('customSlippageTolerance')\n                            setTolerance(x)\n                            onChange?.({\n                                customSlippageTolerance: x.toString(),\n                            })\n                        }}\n                    />\n                ))}\n                <Box className={classes.textfield}>\n                    <Controller\n                        render={({ field }) => (\n                            <MaskTextField\n                                {...field}\n                                placeholder={t.gas_settings_custom()}\n                                InputProps={{\n                                    type: 'number',\n                                    inputProps: {\n                                        pattern: NUMERIC_INPUT_REGEXP_PATTERN,\n                                    },\n                                }}\n                                value={customSlippageTolerance}\n                                error={!!methods.formState.errors.customSlippageTolerance?.message}\n                                onChange={(ev) => {\n                                    const v = Number.parseFloat(ev.target.value)\n                                    const tolerance = Math.min(50, Number.isNaN(v) ? 0 : v)\n                                    setTolerance(tolerance)\n                                    methods.setValue(\n                                        'customSlippageTolerance',\n                                        ev.target.value === '' ? '' : tolerance.toString(),\n                                        {\n                                            shouldValidate: true,\n                                        },\n                                    )\n                                }}\n                            />\n                        )}\n                        name=\"customSlippageTolerance\"\n                    />\n                </Box>\n            </Paper>\n            {error ? (\n                <MaskAlert icon={<Icons.Warning />} severity=\"error\">\n                    {error}\n                </MaskAlert>\n            ) : tolerance < slippageTolerances[0] ? (\n                <MaskAlert icon={<Icons.WarningTriangle color=\"warning\" />} severity=\"warning\">\n                    {t.gas_settings_alert_low_slippage_tolerance()}\n                </MaskAlert>\n            ) : tolerance > slippageTolerances.at(-1)! ? (\n                <MaskAlert icon={<Icons.Warning />} severity=\"error\">\n                    {t.gas_settings_alert_high_slippage_tolerance({\n                        percentage: tolerance.toString(),\n                    })}\n                </MaskAlert>\n            ) : null}\n        </FormProvider>\n    )\n}\n","import { makeStyles } from '@masknet/theme'\nimport { useSharedTrans } from '@masknet/shared'\nimport { Typography } from '@mui/material'\nimport { formatBalance, multipliedBy } from '@masknet/web3-shared-base'\nimport { Section } from './Section.js'\nimport { SlippageToleranceForm } from './SlippageToleranceForm.js'\nimport { SettingsContext } from './Context.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        root: {},\n        additions: {\n            fontWeight: 700,\n        },\n        percentage: {},\n    }\n})\n\nexport function SlippageToleranceSection() {\n    const t = useSharedTrans()\n    const { classes } = useStyles()\n    const { DEFAULT_SLIPPAGE_TOLERANCES, slippageTolerance, setSlippageTolerance } = SettingsContext.useContainer()\n\n    return (\n        <div className={classes.root}>\n            <Section\n                title={t.gas_settings_section_title_slippage_tolerance()}\n                additions={\n                    <Typography className={classes.additions} component=\"span\">\n                        <span className={classes.percentage}>\n                            {formatBalance(multipliedBy(slippageTolerance, 100), 2, 2)}%\n                        </span>\n                    </Typography>\n                }>\n                <SlippageToleranceForm\n                    slippageTolerance={slippageTolerance}\n                    slippageTolerances={DEFAULT_SLIPPAGE_TOLERANCES}\n                    onChange={(data) => {\n                        setSlippageTolerance(data ? Number.parseFloat(data.customSlippageTolerance) : 0)\n                    }}\n                />\n            </Section>\n        </div>\n    )\n}\n","import { useEffect } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { SettingsContext } from './Context.js'\nimport { GasSection } from './GasSection.js'\nimport { SlippageToleranceSection } from './SlippageToleranceSection.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        root: {},\n    }\n})\n\ninterface SettingsBoardProps {\n    disableGasPrice?: boolean\n    disableGasLimit?: boolean\n    disableSlippageTolerance?: boolean\n    onChange?(settings: { slippageTolerance?: number; transaction?: Web3Helper.TransactionAll }): void\n}\n\nexport function SettingsBoard(props: SettingsBoardProps) {\n    const { disableGasPrice = false, disableSlippageTolerance = false, onChange, disableGasLimit } = props\n    const { classes } = useStyles()\n    const { transaction, transactionOptions, slippageTolerance, gasSettingsType, setGasSettingsType } =\n        SettingsContext.useContainer()\n\n    useEffect(() => {\n        onChange?.({\n            transaction: (transaction\n                ? {\n                      ...transaction,\n                      ...transactionOptions,\n                  }\n                : undefined) as Web3Helper.TransactionAll | undefined,\n            slippageTolerance: slippageTolerance * 100, // convert to bips\n        })\n    }, [JSON.stringify(transaction), JSON.stringify(transactionOptions), slippageTolerance, onChange])\n\n    return (\n        <div className={classes.root}>\n            {disableGasPrice ? null : (\n                <GasSection\n                    activeTab={gasSettingsType}\n                    setActiveTab={setGasSettingsType}\n                    disableGasLimit={disableGasLimit}\n                />\n            )}\n            {disableSlippageTolerance ? null : <SlippageToleranceSection />}\n        </div>\n    )\n}\n","import { useMemo, useState } from 'react'\nimport { useChainContext, useNetworkContext } from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { type NetworkPluginID, Sniffings } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { DialogContent } from '@mui/material'\nimport { SettingsBoard } from '../../components/SettingsBoard/index.js'\nimport { SettingsContext } from '../../components/SettingsBoard/Context.js'\nimport { InjectedDialog } from '../../contexts/index.js'\nimport { useSharedTrans } from '../../../locales/index.js'\n\ninterface StyleProps {\n    compact: boolean\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, { compact }) => ({\n    root: {\n        width: 600,\n        minHeight: compact ? 480 : 620,\n    },\n    content: {\n        padding: theme.spacing(3, 2),\n        paddingTop: 0,\n    },\n}))\n\nexport interface SelectGasSettings {\n    slippageTolerance?: number\n    transaction?: Web3Helper.TransactionAll\n}\n\ninterface SelectGasSettingsDialogProps<T extends NetworkPluginID = NetworkPluginID> {\n    open: boolean\n    pluginID?: T\n    chainId?: Web3Helper.Definition[T]['ChainId']\n    slippageTolerance?: number\n    transaction?: Web3Helper.Definition[T]['Transaction']\n    title?: string\n    disableGasPrice?: boolean\n    disableSlippageTolerance?: boolean\n    disableGasLimit?: boolean\n    onClose(settings?: SelectGasSettings | null): void\n}\n\nexport function SelectGasSettingsDialog({\n    open,\n    pluginID,\n    chainId,\n    slippageTolerance,\n    transaction,\n    disableGasPrice,\n    disableSlippageTolerance,\n    disableGasLimit,\n    onClose,\n    title,\n}: SelectGasSettingsDialogProps) {\n    const t = useSharedTrans()\n    const { classes } = useStyles({ compact: disableSlippageTolerance ?? true })\n    const { pluginID: pluginID_ } = useNetworkContext(pluginID)\n    const { chainId: chainId_ } = useChainContext({ chainId })\n    const [settings, setSettings] = useState<SelectGasSettings | null>(null)\n\n    const initialState = useMemo(\n        () => ({\n            pluginID: pluginID_,\n            chainId: chainId_,\n            slippageTolerance,\n            transaction,\n        }),\n        [pluginID_, chainId_, slippageTolerance, transaction],\n    )\n\n    if (!open) return null\n\n    return (\n        <InjectedDialog\n            classes={{\n                paper: classes.root,\n            }}\n            open={open}\n            titleBarIconStyle={Sniffings.is_dashboard_page ? 'close' : 'back'}\n            onClose={() => onClose(settings)}\n            title={title ?? t.gas_settings_title()}>\n            <DialogContent classes={{ root: classes.content }}>\n                <SettingsContext.Provider initialState={initialState}>\n                    <SettingsBoard\n                        disableGasLimit={disableGasLimit}\n                        disableGasPrice={disableGasPrice}\n                        disableSlippageTolerance={disableSlippageTolerance}\n                        onChange={setSettings}\n                    />\n                </SettingsContext.Provider>\n            </DialogContent>\n        </InjectedDialog>\n    )\n}\n","import { forwardRef, useState } from 'react'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { NetworkPluginID, type SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport { SelectGasSettingsDialog, type SelectGasSettings } from './SelectGasSettingsDialog.js'\n\nexport interface SelectGasSettingsModalOpenProps {\n    pluginID?: NetworkPluginID\n    chainId?: Web3Helper.ChainIdAll\n    slippageTolerance?: number\n    transaction?: Web3Helper.TransactionAll\n    title?: string\n    disableGasPrice?: boolean\n    disableSlippageTolerance?: boolean\n    disableGasLimit?: boolean\n}\nexport interface SelectGasSettingsModalCloseProps {\n    settings?: SelectGasSettings | null\n}\n\nexport const SelectGasSettingsModal = forwardRef<\n    SingletonModalRefCreator<SelectGasSettingsModalOpenProps, SelectGasSettingsModalCloseProps>\n>((props, ref) => {\n    const [pluginID, setPluginID] = useState<NetworkPluginID>()\n    const [chainId, setChainId] = useState<Web3Helper.ChainIdAll>()\n    const [slippageTolerance, setSlippageTolerance] = useState<number>()\n    const [transaction, setTransaction] = useState<Web3Helper.TransactionAll>()\n    const [title, setTitle] = useState<string>()\n    const [disableGasPrice, setDisableGasPrice] = useState<boolean>()\n    const [disableSlippageTolerance, setDisableSlippageTolerance] = useState<boolean>()\n    const [disableGasLimit, setDisableGasLimit] = useState<boolean>()\n\n    const [open, dispatch] = useSingletonModal(ref, {\n        onOpen(props) {\n            setPluginID(props.pluginID ?? NetworkPluginID.PLUGIN_EVM)\n            setChainId(props.chainId)\n            setSlippageTolerance(props.slippageTolerance)\n            setTransaction(props.transaction)\n            setTitle(props.title)\n            setDisableGasPrice(props.disableGasPrice)\n            setDisableSlippageTolerance(props.disableSlippageTolerance)\n            setDisableGasLimit(props.disableGasLimit)\n        },\n    })\n\n    if (!open) return null\n    return (\n        <SelectGasSettingsDialog\n            open\n            onClose={(settings) => dispatch?.close({ settings })}\n            pluginID={pluginID}\n            chainId={chainId}\n            slippageTolerance={slippageTolerance}\n            transaction={transaction}\n            title={title}\n            disableGasPrice={disableGasPrice}\n            disableSlippageTolerance={disableSlippageTolerance}\n            disableGasLimit={disableGasLimit}\n        />\n    )\n})\n","import { useState, useMemo } from 'react'\nimport { DialogContent, type Theme, useMediaQuery, inputClasses } from '@mui/material'\nimport { useNetworkContext, useNativeTokenAddress } from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { EMPTY_LIST, EnhanceableSite, type NetworkPluginID, Sniffings } from '@masknet/shared-base'\nimport { useRowSize } from '@masknet/shared-base-ui'\nimport { makeStyles, MaskColorVar } from '@masknet/theme'\nimport type { FungibleToken } from '@masknet/web3-shared-base'\nimport { TokenListMode } from '../../components/FungibleTokenList/type.js'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { InjectedDialog, useBaseUIRuntime } from '../../contexts/index.js'\nimport { FungibleTokenList } from '../../components/index.js'\n\ninterface StyleProps {\n    compact: boolean\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, { compact }) => ({\n    content: {\n        ...(compact ? { minWidth: 552 } : {}),\n        padding: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n        msOverflowStyle: 'none',\n        scrollbarWidth: 'none',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    search: {\n        backgroundColor: Sniffings.is_dashboard_page ? 'transparent !important' : theme.palette.maskColor.input,\n        border: `solid 1px ${MaskColorVar.twitterBorderLine}`,\n        [`&.${inputClasses.focused}`]: {\n            background: theme.palette.maskColor.bottom,\n        },\n    },\n    wrapper: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(6),\n    },\n}))\n\ninterface SelectFungibleTokenDialogProps<T extends NetworkPluginID = NetworkPluginID> {\n    open: boolean\n    enableManage?: boolean\n    pluginID?: T\n    chainId?: Web3Helper.Definition[T]['ChainId']\n    keyword?: string\n    whitelist?: string[]\n    title?: string\n    blacklist?: string[]\n    tokens?: Array<FungibleToken<Web3Helper.Definition[T]['ChainId'], Web3Helper.Definition[T]['SchemaType']>>\n    disableSearchBar?: boolean\n    disableNativeToken?: boolean\n    selectedTokens?: string[]\n    onClose(token: Web3Helper.FungibleTokenAll | null): void\n}\n\nexport function SelectFungibleTokenDialog({\n    open,\n    pluginID,\n    chainId,\n    disableSearchBar,\n    disableNativeToken,\n    tokens,\n    whitelist,\n    blacklist = EMPTY_LIST,\n    selectedTokens = EMPTY_LIST,\n    title,\n    enableManage = true,\n    onClose,\n}: SelectFungibleTokenDialogProps) {\n    const t = useSharedTrans()\n    const { networkIdentifier } = useBaseUIRuntime()\n    const compact = networkIdentifier === EnhanceableSite.Minds\n    const { pluginID: currentPluginID } = useNetworkContext(pluginID)\n    const { classes } = useStyles({ compact })\n    const isMdScreen = useMediaQuery<Theme>((theme) => theme.breakpoints.down('md'))\n\n    const rowSize = useRowSize()\n    const [mode, setMode] = useState(TokenListMode.List)\n\n    const nativeTokenAddress = useNativeTokenAddress(currentPluginID)\n\n    const FixedSizeListProps = useMemo(\n        () => ({ itemSize: rowSize + 18.5, height: isMdScreen ? 300 : 428, className: classes.wrapper }),\n        [rowSize, isMdScreen],\n    )\n    return (\n        <InjectedDialog\n            titleBarIconStyle={Sniffings.is_dashboard_page ? 'close' : 'back'}\n            open={open}\n            onClose={() => {\n                mode === TokenListMode.List ? onClose(null) : setMode(TokenListMode.List)\n            }}\n            title={title ? title : mode === TokenListMode.Manage ? t.manage_token_list() : t.select_token()}>\n            <DialogContent classes={{ root: classes.content }}>\n                <FungibleTokenList\n                    mode={mode}\n                    setMode={setMode}\n                    pluginID={currentPluginID}\n                    chainId={chainId}\n                    tokens={tokens ?? EMPTY_LIST}\n                    whitelist={whitelist}\n                    enableManage={enableManage}\n                    blacklist={\n                        disableNativeToken && nativeTokenAddress ? [nativeTokenAddress, ...blacklist] : blacklist\n                    }\n                    disableSearch={disableSearchBar}\n                    selectedTokens={selectedTokens}\n                    onSelect={onClose}\n                    FixedSizeListProps={FixedSizeListProps}\n                    SearchTextFieldProps={{\n                        InputProps: { classes: { root: classes.search } },\n                    }}\n                    isHiddenChainIcon={false}\n                />\n            </DialogContent>\n        </InjectedDialog>\n    )\n}\n","import { forwardRef, useState } from 'react'\nimport { type NetworkPluginID, type SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { FungibleToken } from '@masknet/web3-shared-base'\nimport { SelectFungibleTokenDialog } from './SelectFungibleTokenDialog.js'\n\nexport interface SelectFungibleTokenModalOpenProps {\n    enableManage?: boolean\n    pluginID?: NetworkPluginID\n    chainId?: Web3Helper.ChainIdAll\n    keyword?: string\n    whitelist?: string[]\n    title?: string\n    blacklist?: string[]\n    tokens?: Array<FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>>\n    disableSearchBar?: boolean\n    disableNativeToken?: boolean\n    selectedTokens?: string[]\n}\n\nexport type SelectFungibleTokenModalCloseProps = Web3Helper.FungibleTokenAll | null\n\nexport const SelectFungibleTokenModal = forwardRef<\n    SingletonModalRefCreator<SelectFungibleTokenModalOpenProps, SelectFungibleTokenModalCloseProps>\n>((props, ref) => {\n    const [enableManage, setEnableManage] = useState<boolean>()\n    const [pluginID, setPluginID] = useState<NetworkPluginID>()\n    const [chainId, setChainId] = useState<Web3Helper.ChainIdAll>()\n    const [keyword, setKeyword] = useState<string>()\n    const [whitelist, setWhitelist] = useState<string[]>()\n    const [title, setTitle] = useState<string>()\n    const [blacklist, setBlacklist] = useState<string[]>()\n    const [tokens, setTokens] = useState<Array<FungibleToken<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>>>()\n    const [disableSearchBar, setDisableSearchBar] = useState<boolean>()\n    const [selectedTokens, setSelectedTokens] = useState<string[]>()\n\n    const [open, dispatch] = useSingletonModal(ref, {\n        onOpen(props) {\n            setEnableManage(props.enableManage)\n            setPluginID(props.pluginID)\n            setChainId(props.chainId)\n            setKeyword(props.keyword)\n            setWhitelist(props.whitelist)\n            setTitle(props.title)\n            setBlacklist(props.blacklist)\n            setTokens(props.tokens)\n            setDisableSearchBar(props.disableNativeToken)\n            setSelectedTokens(props.selectedTokens)\n        },\n    })\n\n    if (!open) return null\n    return (\n        <SelectFungibleTokenDialog\n            open\n            enableManage={enableManage}\n            pluginID={pluginID}\n            chainId={chainId}\n            keyword={keyword}\n            whitelist={whitelist}\n            title={title}\n            blacklist={blacklist}\n            tokens={tokens}\n            disableSearchBar={disableSearchBar}\n            selectedTokens={selectedTokens}\n            onClose={(token) => dispatch?.close(token)}\n        />\n    )\n})\n","import { makeStyles } from '@masknet/theme'\nimport { Typography, Card, ButtonBase, type ButtonBaseProps, type CardProps } from '@mui/material'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        textAlign: 'center',\n    },\n    content: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: theme.spacing(1),\n        '&:hover': {\n            background: theme.palette.maskColor.bg,\n            '& p': {\n                fontWeight: 700,\n                color: theme.palette.text.primary,\n            },\n        },\n    },\n    icon: {\n        width: 36,\n        height: 36,\n        marginBottom: 4,\n    },\n    name: {\n        fontSize: 12,\n        fontWeight: 700,\n        whiteSpace: 'nowrap',\n        marginBottom: theme.spacing(1),\n    },\n}))\n\nexport interface ProviderIconProps extends CardProps {\n    icon: string\n    name: React.ReactNode\n    iconFilterColor?: string\n    ButtonBaseProps?: Partial<ButtonBaseProps>\n}\n\nexport function ProviderIcon({ icon, name, onClick, iconFilterColor, className, ButtonBaseProps }: ProviderIconProps) {\n    const { classes, cx } = useStyles()\n    return (\n        <Card className={cx(classes.root, className)} elevation={0} onClick={onClick}>\n            <ButtonBase className={`${classes.content} dashboard-style`} {...ButtonBaseProps}>\n                <img\n                    src={icon}\n                    className={classes.icon}\n                    style={\n                        iconFilterColor\n                            ? { filter: `drop-shadow(0px 6px 12px ${iconFilterColor})`, backdropFilter: 'blur(16px)' }\n                            : {}\n                    }\n                />\n                <Typography className={classes.name}>{name}</Typography>\n            </ButtonBase>\n        </Card>\n    )\n}\n","import { useTheme, useMediaQuery } from '@mui/material'\nimport { Close as CloseIcon, ArrowBackRounded as ArrowBackRoundedIcon } from '@mui/icons-material'\n\ninterface DialogDismissIconUIProps {\n    style?: 'auto' | 'back' | 'close'\n}\n\nexport function DialogDismissIconUI(props: DialogDismissIconUIProps) {\n    const close = <CloseIcon color=\"inherit\" />\n    const back = <ArrowBackRoundedIcon />\n    const auto = useMediaQuery(`(min-width: ${useTheme().breakpoints.values.sm}px)`)\n    if (!props.style || props.style === 'auto') return auto ? close : back\n    if (props.style === 'back') return back\n    return close\n}\n","import { memo, useCallback, useState } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport {\n    alpha,\n    Box,\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    List,\n    ListItem,\n    ListItemButton,\n    Typography,\n} from '@mui/material'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { getSiteType, NetworkPluginID } from '@masknet/shared-base'\nimport { OthersAll, getAllPluginsWeb3State } from '@masknet/web3-providers'\nimport { makeStyles, ShadowRootTooltip, usePortalShadowRoot } from '@masknet/theme'\nimport { type NetworkDescriptor } from '@masknet/web3-shared-base'\nimport { ChainId, NETWORK_DESCRIPTORS as EVM_NETWORK_DESCRIPTORS, ProviderType } from '@masknet/web3-shared-evm'\nimport {\n    NETWORK_DESCRIPTORS as SOL_NETWORK_DESCRIPTORS,\n    ProviderType as SolProviderType,\n} from '@masknet/web3-shared-solana'\nimport {\n    NETWORK_DESCRIPTORS as FLOW_NETWORK_DESCRIPTORS,\n    ProviderType as FlowProviderType,\n} from '@masknet/web3-shared-flow'\nimport { DialogDismissIconUI, ImageIcon, ProviderIcon, useSharedTrans } from '@masknet/shared'\nimport { useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport { useActivatedPluginsExtensionPage } from '@masknet/plugin-infra/extension-page'\nimport { openWindow } from '@masknet/shared-base-ui'\n\nconst descriptors: Record<\n    NetworkPluginID,\n    ReadonlyArray<NetworkDescriptor<Web3Helper.ChainIdAll, Web3Helper.NetworkTypeAll>>\n> = {\n    [NetworkPluginID.PLUGIN_EVM]: EVM_NETWORK_DESCRIPTORS,\n    [NetworkPluginID.PLUGIN_FLOW]: FLOW_NETWORK_DESCRIPTORS,\n    [NetworkPluginID.PLUGIN_SOLANA]: SOL_NETWORK_DESCRIPTORS,\n}\n\nconst useStyles = makeStyles()((theme) => {\n    const smallQuery = `@media (max-width: ${theme.breakpoints.values.sm}px)`\n\n    return {\n        root: {\n            display: 'flex',\n            flexDirection: 'column',\n            padding: theme.spacing(2),\n            counterReset: 'steps 0',\n        },\n        section: {\n            flexGrow: 1,\n            marginTop: 21,\n            counterIncrement: 'steps 1',\n            '&:first-of-type': {\n                marginTop: 0,\n            },\n        },\n        wallets: {\n            width: '100%',\n            display: 'grid',\n            padding: 0,\n            gridTemplateColumns: 'repeat(3, 1fr)',\n            gridGap: '12px 12px',\n            [smallQuery]: {\n                gridAutoRows: '110px',\n                gridTemplateColumns: 'repeat(2, 1fr)',\n            },\n        },\n        walletItem: {\n            padding: 0,\n            height: 122,\n            width: '100%',\n            display: 'block',\n            '& > div': {\n                borderRadius: 8,\n            },\n        },\n        disabledWalletItem: {\n            pointerEvents: 'none',\n        },\n        providerIcon: {\n            height: '100%',\n            fontSize: 36,\n            display: 'flex',\n            backgroundColor: theme.palette.maskColor.bottom,\n            '&:hover': {\n                background: theme.palette.maskColor.bg,\n            },\n        },\n        dialogTitle: {\n            fontSize: 18,\n            fontWeight: 700,\n            color: theme.palette.maskColor.main,\n            textAlign: 'center',\n        },\n        dialogCloseButton: {\n            color: theme.palette.text.primary,\n            padding: 0,\n            width: 24,\n            height: 24,\n            '& > svg': {\n                fontSize: 24,\n            },\n        },\n        list: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(2, 1fr)',\n            gridGap: '12px 12px',\n        },\n        listItem: {\n            padding: theme.spacing(1.5),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            rowGap: 12,\n            borderRadius: 12,\n        },\n        listItemText: {\n            fontSize: 12,\n            fontWeight: 700,\n            color: theme.palette.maskColor.main,\n        },\n        dialogPaper: {\n            margin: 0,\n            maxWidth: 400,\n            background: theme.palette.maskColor.bottom,\n            boxShadow:\n                theme.palette.mode === 'dark'\n                    ? '0px 0px 20px rgba(255, 255, 255, 0.12)'\n                    : '0px 0px 20px rgba(0, 0, 0, 0.05)',\n        },\n    }\n})\n\ninterface PluginProviderRenderProps {\n    providers: readonly Web3Helper.ProviderDescriptorAll[]\n    onProviderIconClicked: (\n        network: Web3Helper.NetworkDescriptorAll,\n        provider: Web3Helper.ProviderDescriptorAll,\n        isReady?: boolean,\n        downloadLink?: string,\n    ) => void\n    requiredSupportPluginID?: NetworkPluginID\n    requiredSupportChainIds?: Web3Helper.ChainIdAll[]\n}\n\nexport const PluginProviderRender = memo(function PluginProviderRender({\n    providers,\n    onProviderIconClicked,\n    requiredSupportChainIds,\n    requiredSupportPluginID,\n}: PluginProviderRenderProps) {\n    const { classes, cx } = useStyles()\n    const t = useSharedTrans()\n    const plugins = useActivatedPluginsSiteAdaptor('any')\n    const extensionPagePlugins = useActivatedPluginsExtensionPage()\n    const [selectChainDialogOpen, setSelectChainDialogOpen] = useState(false)\n\n    const fortmaticProviderDescriptor = providers.find((x) => x.type === ProviderType.Fortmatic)\n\n    const [, handleClick] = useAsyncFn(\n        async (provider: Web3Helper.ProviderDescriptorAll, expectedChainId?: Web3Helper.ChainIdAll) => {\n            if (provider.type === ProviderType.Fortmatic && !expectedChainId) {\n                setSelectChainDialogOpen(true)\n                return\n            }\n            const target = getAllPluginsWeb3State()[provider.providerAdaptorPluginID]\n            // note: unsafe cast, we cannot ensure provider.type is the isReady implementation we intended to call\n            const isReady = target?.Provider?.isReady(provider.type as any as never)\n            const downloadLink = OthersAll.use(provider.providerAdaptorPluginID)?.providerResolver.providerDownloadLink(\n                provider.type,\n            )\n\n            if (!isReady) {\n                if (downloadLink) openWindow(downloadLink)\n                return\n            }\n\n            const chainId = expectedChainId ?? ChainId.Mainnet\n\n            // use the currently connected network (if known to mask). otherwise, use the default mainnet\n            const networkDescriptor = descriptors[provider.providerAdaptorPluginID].find((x) => x.chainId === chainId)\n            if (!networkDescriptor) return\n\n            onProviderIconClicked(networkDescriptor, provider, isReady, downloadLink)\n        },\n        [plugins, extensionPagePlugins],\n    )\n\n    const getTips = useCallback((provider: Web3Helper.ProviderTypeAll) => {\n        if (provider === SolProviderType.Phantom) {\n            return t.plugin_wallet_solana_tips()\n        } else if (provider === FlowProviderType.Blocto) {\n            return t.plugin_wallet_blocto_tips()\n        } else if (provider === ProviderType.Fortmatic) {\n            return t.plugin_wallet_fortmatic_tips()\n        }\n\n        return t.plugin_wallet_support_chains_tips()\n    }, [])\n\n    const getDisabled = useCallback(\n        (provider: Web3Helper.ProviderDescriptorAll) => {\n            if (requiredSupportPluginID && provider.providerAdaptorPluginID !== requiredSupportPluginID) return true\n\n            if (requiredSupportChainIds?.some((x) => !provider.enableRequirements?.supportedChainIds?.includes(x)))\n                return true\n\n            return false\n        },\n        [requiredSupportChainIds, requiredSupportPluginID],\n    )\n    return (\n        <>\n            <Box className={classes.root}>\n                <section className={classes.section}>\n                    <List className={classes.wallets}>\n                        {providers\n                            .filter((z) => {\n                                const siteType = getSiteType()\n                                if (!siteType) return false\n                                return [\n                                    ...(z.enableRequirements?.supportedEnhanceableSites ?? []),\n                                    ...(z.enableRequirements?.supportedExtensionSites ?? []),\n                                ].includes(siteType)\n                            })\n                            .map((provider) => (\n                                <ShadowRootTooltip\n                                    title={getDisabled(provider) ? '' : getTips(provider.type)}\n                                    arrow\n                                    placement=\"top\"\n                                    key={provider.ID}>\n                                    <ListItem\n                                        className={cx(\n                                            classes.walletItem,\n                                            getDisabled(provider) ? classes.disabledWalletItem : '',\n                                        )}\n                                        disabled={getDisabled(provider)}\n                                        onClick={() => {\n                                            if (provider.type === ProviderType.WalletConnect) {\n                                                handleClick(provider, ChainId.Mainnet)\n                                            } else {\n                                                handleClick(provider)\n                                            }\n                                        }}>\n                                        <ProviderIcon\n                                            className={classes.providerIcon}\n                                            icon={provider.icon}\n                                            name={provider.name}\n                                            iconFilterColor={provider.iconFilterColor}\n                                        />\n                                    </ListItem>\n                                </ShadowRootTooltip>\n                            ))}\n                    </List>\n                </section>\n            </Box>\n            {usePortalShadowRoot((container) => (\n                <Dialog\n                    container={container}\n                    open={selectChainDialogOpen}\n                    classes={{ paper: classes.dialogPaper }}\n                    onClose={() => setSelectChainDialogOpen(false)}>\n                    <DialogTitle\n                        sx={{\n                            whiteSpace: 'nowrap',\n                            display: 'grid',\n                            alignItems: 'center',\n                            gridTemplateColumns: '50px auto 50px',\n                        }}>\n                        <IconButton\n                            className={classes.dialogCloseButton}\n                            onClick={() => setSelectChainDialogOpen(false)}>\n                            <DialogDismissIconUI />\n                        </IconButton>\n                        <Typography className={classes.dialogTitle}>{t.plugin_wallet_choose_network()}</Typography>\n                    </DialogTitle>\n                    <DialogContent sx={{ minWidth: 352 }}>\n                        <List className={classes.list}>\n                            {EVM_NETWORK_DESCRIPTORS.filter((x) =>\n                                [ChainId.Mainnet, ChainId.BSC].includes(x.chainId),\n                            ).map((x) => (\n                                <ListItemButton\n                                    key={x.chainId}\n                                    className={classes.listItem}\n                                    onClick={() => {\n                                        if (!fortmaticProviderDescriptor) return\n                                        handleClick(fortmaticProviderDescriptor, x.chainId)\n                                    }}>\n                                    <ImageIcon\n                                        icon={x.icon}\n                                        size={30}\n                                        iconFilterColor={x.iconColor ? alpha(x.iconColor, 0.2) : undefined}\n                                    />\n                                    <Typography className={classes.listItemText}>{x.name}</Typography>\n                                </ListItemButton>\n                            ))}\n                        </List>\n                    </DialogContent>\n                </Dialog>\n            ))}\n        </>\n    )\n})\n","import { delay, getEnumAsArray } from '@masknet/kit'\nimport { getRegisteredWeb3Providers, Providers } from '@masknet/web3-providers'\nimport { ConnectWalletModal, InjectedDialog, useSharedTrans } from '@masknet/shared'\nimport { NetworkPluginID, Sniffings } from '@masknet/shared-base'\nimport { openWindow } from '@masknet/shared-base-ui'\nimport { makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { DialogContent } from '@mui/material'\nimport { memo, useCallback, useMemo } from 'react'\nimport { PluginProviderRender } from './PluginProviderRender.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    content: {\n        padding: theme.spacing(0),\n        scrollbarWidth: 'none',\n        minHeight: 430,\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n}))\n\ninterface SelectProviderProps {\n    open: boolean\n    requiredSupportPluginID?: NetworkPluginID\n    requiredSupportChainIds?: Web3Helper.ChainIdAll[]\n    onConnect?: () => void\n    onClose: () => void\n    createWallet(): void\n}\nexport const SelectProvider = memo(function SelectProvider(props: SelectProviderProps) {\n    const { open, requiredSupportPluginID, requiredSupportChainIds, onConnect, onClose, createWallet } = props\n    const t = useSharedTrans()\n    const { classes } = useStyles()\n\n    const onProviderIconClicked = useCallback(\n        async (\n            network: Web3Helper.NetworkDescriptorAll,\n            provider: Web3Helper.ProviderDescriptorAll,\n            isReady?: boolean,\n            downloadLink?: string,\n        ) => {\n            if (!isReady) {\n                if (downloadLink) openWindow(downloadLink)\n                return\n            }\n            // Create wallet first if no wallets yet.\n            if (\n                provider.type === ProviderType.MaskWallet &&\n                !Providers[ProviderType.MaskWallet].subscription.wallets.getCurrentValue().length\n            ) {\n                createWallet()\n                return\n            }\n\n            onClose()\n            await delay(500)\n\n            const connected = await ConnectWalletModal.openAndWaitForClose({\n                pluginID: network.networkSupporterPluginID,\n                networkType: network.type,\n                providerType: provider.type,\n            })\n\n            if (connected) onConnect?.()\n            else onClose()\n        },\n        [onConnect, onClose],\n    )\n    const providers = useMemo(() => {\n        if (Sniffings.is_dashboard_page) return getRegisteredWeb3Providers(NetworkPluginID.PLUGIN_EVM)\n        if (requiredSupportPluginID) return getRegisteredWeb3Providers(requiredSupportPluginID)\n        return getEnumAsArray(NetworkPluginID).flatMap((x) => getRegisteredWeb3Providers(x.value))\n    }, [requiredSupportPluginID])\n\n    return (\n        <InjectedDialog title={t.plugin_wallet_select_provider_dialog_title()} open={open} onClose={onClose}>\n            <DialogContent className={classes.content}>\n                <PluginProviderRender\n                    providers={providers}\n                    onProviderIconClicked={onProviderIconClicked}\n                    requiredSupportChainIds={requiredSupportChainIds}\n                    requiredSupportPluginID={requiredSupportPluginID}\n                />\n            </DialogContent>\n        </InjectedDialog>\n    )\n})\n","import { forwardRef, useState } from 'react'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { NetworkPluginID, SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport { SelectProvider } from './SelectProvider.js'\n\nexport type SelectProviderModalOpenProps = {\n    requiredSupportPluginID?: NetworkPluginID\n    requiredSupportChainIds?: Web3Helper.ChainIdAll[]\n} | void\n\nexport type SelectProviderModalCloseProps = boolean\n\ninterface SelectProviderModalProps {\n    createWallet(): void\n}\n\nexport const SelectProviderModal = forwardRef<\n    SingletonModalRefCreator<SelectProviderModalOpenProps, SelectProviderModalCloseProps>,\n    SelectProviderModalProps\n>((props, ref) => {\n    const [requiredSupportPluginID, setRequiredSupportPluginID] = useState<NetworkPluginID>()\n    const [requiredSupportChainIds, setRequiredSupportChainIds] = useState<Web3Helper.ChainIdAll[]>()\n\n    const [open, dispatch] = useSingletonModal(ref, {\n        onOpen(props) {\n            setRequiredSupportChainIds(props?.requiredSupportChainIds)\n            setRequiredSupportPluginID(props?.requiredSupportPluginID)\n        },\n        onClose(props) {\n            setRequiredSupportChainIds(undefined)\n            setRequiredSupportPluginID(undefined)\n        },\n    })\n\n    if (!open) return null\n    return (\n        <SelectProvider\n            open\n            createWallet={props.createWallet}\n            requiredSupportPluginID={requiredSupportPluginID}\n            requiredSupportChainIds={requiredSupportChainIds}\n            onConnect={() => dispatch?.close(true)}\n            onClose={() => dispatch?.close(false)}\n        />\n    )\n})\n","import { useCallback } from 'react'\nimport { Trans } from 'react-i18next'\nimport { Icons } from '@masknet/icons'\nimport { DialogActions, DialogContent, Typography } from '@mui/material'\nimport { getMaskColor, makeStyles, useCustomSnackbar, ActionButton } from '@masknet/theme'\nimport { InjectedDialog, ActionButtonPromise, WalletStatusBox, useSharedTrans } from '@masknet/shared'\nimport { type NetworkPluginID, Sniffings } from '@masknet/shared-base'\nimport { useMatchXS } from '@masknet/shared-base-ui'\nimport { useWeb3State } from '@masknet/web3-hooks-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    paper: {\n        color: getMaskColor(theme).redMain,\n        paddingBottom: 0,\n        paddingLeft: 16,\n        paddingRight: 16,\n        '::-webkit-scrollbar': {\n            backgroundColor: 'transparent',\n            width: 20,\n        },\n        '::-webkit-scrollbar-thumb': {\n            borderRadius: '20px',\n            width: 5,\n            border: '7px solid rgba(0, 0, 0, 0)',\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(250, 250, 250, 0.2)' : 'rgba(0, 0, 0, 0.2)',\n            backgroundClip: 'padding-box',\n        },\n    },\n    buttons: {\n        padding: `${theme.spacing(2)} !important`,\n        boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.05)',\n    },\n    button: {\n        borderRadius: Sniffings.is_dashboard_page ? 9999 : undefined,\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\n            marginBottom: theme.spacing(2),\n        },\n    },\n    cancel: {},\n    title: {\n        margin: theme.spacing(2, 0),\n        fontSize: 24,\n        fontWeight: 700,\n        lineHeight: '28.8px',\n        color: theme.palette.maskColor.danger,\n    },\n    icon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    article: {\n        lineHeight: '18px',\n        fontWeight: 400,\n        marginBottom: theme.spacing(2),\n        color: theme.palette.maskColor.danger,\n    },\n}))\n\ninterface WalletRiskWarningProps {\n    account: string\n    pluginID: NetworkPluginID\n    open: boolean\n    onClose: () => void\n}\n\nexport function WalletRiskWarning({ account, open, pluginID, onClose }: WalletRiskWarningProps) {\n    const t = useSharedTrans()\n    const { classes, cx } = useStyles()\n    const { showSnackbar } = useCustomSnackbar()\n    const isMobile = useMatchXS()\n\n    const { RiskWarning } = useWeb3State(pluginID)\n\n    const onConfirm = useCallback(async () => {\n        try {\n            if (!account) {\n                showSnackbar(t.wallet_risk_warning_no_select_wallet(), {\n                    variant: 'error',\n                    preventDuplicate: true,\n                })\n                return\n            }\n            await RiskWarning?.approve?.(account)\n            onClose()\n        } catch {\n            // do nothing\n        }\n    }, [showSnackbar, account, onClose])\n\n    return (\n        <InjectedDialog\n            title={isMobile ? undefined : t.wallet_risk_warning_dialog_title()}\n            open={open}\n            onClose={onClose}>\n            <DialogContent className={classes.paper}>\n                <div className={classes.icon}>\n                    <Icons.Warning size={90} sx={{ filter: 'drop-shadow(0px 6px 12px rgba(255, 53, 69, 0.2))' }} />\n                </div>\n                <Typography\n                    className={classes.title}\n                    align=\"center\"\n                    variant=\"h4\"\n                    children={t.wallet_risk_warning_dialog_title()}\n                />\n                <Typography\n                    className={classes.article}\n                    variant=\"body2\"\n                    children={\n                        <Trans\n                            ns=\"shared\"\n                            i18nKey=\"wallet_risk_warning_content\"\n                            components={{\n                                br: <br />,\n                            }}\n                        />\n                    }\n                />\n                <Typography className={classes.article}>{t.wallet_risk_warning_confirm_tips()}</Typography>\n                <WalletStatusBox disableChange withinRiskWarningDialog />\n            </DialogContent>\n            <DialogActions className={classes.buttons}>\n                <ActionButton\n                    className={cx(classes.button, classes.cancel)}\n                    fullWidth\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    onClick={onClose}>\n                    {t.cancel()}\n                </ActionButton>\n                <ActionButtonPromise\n                    className={classes.button}\n                    fullWidth\n                    disabled={!account}\n                    init={t.confirm()}\n                    waiting={t.wallet_risk_confirm_confirming()}\n                    failed={t.wallet_risk_confirm_failed()}\n                    executor={onConfirm}\n                    completeIcon={null}\n                    failIcon={null}\n                    failedOnClick=\"use executor\"\n                    complete={t.done()}\n                />\n            </DialogActions>\n        </InjectedDialog>\n    )\n}\n","import { forwardRef, useState } from 'react'\nimport { NetworkPluginID, type SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport { WalletRiskWarning } from './WalletRiskWarning.js'\n\nexport interface WalletRiskWarningModalOpenProps {\n    pluginID: NetworkPluginID\n    account: string\n}\n\nexport const WalletRiskWarningModal = forwardRef<SingletonModalRefCreator<WalletRiskWarningModalOpenProps>>(\n    function WalletRiskWarningModal(props, ref) {\n        const [account, setAccount] = useState('')\n        const [pluginID, setPluginID] = useState(NetworkPluginID.PLUGIN_EVM)\n\n        const [open, dispatch] = useSingletonModal(ref, {\n            onOpen(props) {\n                setAccount(props.account)\n                setPluginID(props.pluginID)\n            },\n        })\n\n        if (!open) return null\n\n        return <WalletRiskWarning account={account} pluginID={pluginID} open onClose={() => dispatch?.close()} />\n    },\n)\n","import { Fragment } from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport { isZero, isLessThan } from '@masknet/web3-shared-base'\nimport { makeStyles } from '@masknet/theme'\n\nconst useStyles = makeStyles()((theme) => ({\n    balance: {\n        marginRight: theme.spacing(0.5),\n    },\n}))\n\nexport interface FormattedBalanceProps extends withClasses<'balance' | 'symbol'> {\n    value: BigNumber.Value | undefined\n    decimals?: number\n    significant?: number\n    symbol?: string\n    minimumBalance?: BigNumber.Value\n    formatter?: (value: BigNumber.Value, decimals?: number, significant?: number) => string\n}\n\nexport function FormattedBalance(props: FormattedBalanceProps) {\n    const { value, decimals, significant, symbol, minimumBalance, formatter = (value) => value } = props\n    const valueInt = new BigNumber(value ?? '0').toFixed(0)\n    let formatted = formatter(valueInt, decimals, significant)\n    if (minimumBalance && !isZero(formatted) && isLessThan(valueInt, minimumBalance)) {\n        // it's a BigNumber so it's ok\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\n        formatted = '<' + formatter(minimumBalance, decimals, significant).toString()\n    }\n    const { classes } = useStyles(undefined, { props })\n\n    if (symbol)\n        return (\n            <Fragment>\n                <span className={classes.balance}>{String(formatted)}</span>\n                <span className={classes?.symbol}>{symbol}</span>\n            </Fragment>\n        )\n    return <Fragment>{String(formatted)}</Fragment>\n}\n","import { Button, type ButtonProps, styled } from '@mui/material'\nimport { forwardRef } from 'react'\n\nconst BaseTabWrap = styled(Button, {\n    shouldForwardProp: (prop) => prop !== 'activated',\n})<{ activated?: boolean }>(({ theme, activated }) => ({\n    flex: 1,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    height: 36,\n    lineHeight: '18px',\n    boxShadow: activated\n        ? `0px 0px 20px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.05)'}`\n        : 'none',\n    background: activated ? theme.palette.maskColor.bottom : 'transparent',\n    borderRadius: `${theme.spacing(1.5)} ${theme.spacing(1.5)} 0px 0px !important`,\n    color: activated ? theme.palette.maskColor.main : theme.palette.maskColor.secondaryDark,\n    fontSize: 16,\n    fontWeight: 'bold',\n\n    '&:hover': {\n        boxShadow: activated ? '0 0 20px rgba(0, 0, 0, 0.05)' : 'none',\n        background: activated ? theme.palette.maskColor.bottom : 'transparent',\n    },\n    // If there is only single one tab.\n    '&:first-of-type:last-of-type': {\n        maxWidth: '25%',\n    },\n}))\n\ninterface ButtonTabProps extends React.PropsWithChildren<Omit<ButtonProps, 'onChange' | 'value' | 'selected'>> {\n    value: string\n    selected?: boolean\n    onChange?(event: object, value: string): void\n}\n\nexport const BaseTab = forwardRef<HTMLButtonElement, ButtonTabProps>((props, ref) => {\n    const activated = !!props.selected\n    const { onChange, onClick, value } = props\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        if (!activated && onChange) onChange(event, String(value))\n        if (onClick) onClick(event)\n    }\n\n    return (\n        <BaseTabWrap\n            activated={activated}\n            ref={ref}\n            role=\"tab\"\n            {...props}\n            disableElevation\n            variant=\"contained\"\n            aria-selected={activated}\n            onClick={(e) => handleClick(e)}\n            onChange={undefined}\n        />\n    )\n})\n","import { Button, type ButtonProps, styled } from '@mui/material'\nimport { memo, useEffect, useRef } from 'react'\n\nconst FlexibleTabTabWrap = styled(Button, {\n    shouldForwardProp: (prop) => prop !== 'activated',\n})<{ activated?: boolean; color?: string }>(({ theme, activated }) => ({\n    flexShrink: 0,\n    flexGrow: 0,\n    padding: theme.spacing(1.25, 1.5),\n    height: 38,\n    lineHeight: '16px',\n    minWidth: theme.spacing(3),\n    background: activated ? theme.palette.maskColor.input : 'transparent',\n    borderRadius: `${theme.spacing(1)} !important`,\n    color: activated ? theme.palette.maskColor.highlight ?? '#1C68F3' : theme.palette.text.secondary,\n    fontSize: 14,\n    fontWeight: 'bold !important',\n\n    '&:hover': {\n        background: activated ? theme.palette.maskColor.input : 'transparent',\n        color: activated ? theme.palette.maskColor.highlight ?? '#1C68F3' : theme.palette.text.primary,\n        boxShadow: 'none',\n    },\n}))\n\ninterface ButtonTabProps extends React.PropsWithChildren<Omit<ButtonProps, 'onChange' | 'value' | 'selected'>> {\n    value: string\n    selected?: boolean\n    isVisitable: (top: number, right: number) => boolean\n    onChange?(event: object, value: string, isUp: boolean): void\n}\n\nexport const FlexibleTab = memo<ButtonTabProps>((props) => {\n    const activated = !!props.selected\n    const { onChange, onClick, value } = props\n    const { isVisitable, ...rest } = props\n    const ref = useRef<HTMLButtonElement>(null)\n\n    useEffect(() => {\n        if (!activated) return\n        const visitable = isVisitable(\n            ref.current?.getBoundingClientRect().top ?? 0,\n            ref.current?.getBoundingClientRect().right ?? 0,\n        )\n        if (!visitable) onChange?.({}, String(value), visitable)\n    }, [])\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const visitable = isVisitable(\n            ref.current?.getBoundingClientRect().top ?? 0,\n            ref.current?.getBoundingClientRect().right ?? 0,\n        )\n        if (!activated && onChange) onChange(event, String(value), visitable)\n        if (onClick) onClick(event)\n    }\n\n    return (\n        <FlexibleTabTabWrap\n            activated={activated}\n            ref={ref}\n            role=\"tab\"\n            {...rest}\n            disableElevation\n            variant=\"contained\"\n            aria-selected={activated}\n            onClick={handleClick}\n            onChange={undefined}\n        />\n    )\n})\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z\"\n}), 'ArrowBackIosNew');","import { Button, type ButtonProps, styled } from '@mui/material'\nimport { forwardRef } from 'react'\n\nconst RoundTabWrap = styled(Button, {\n    shouldForwardProp: (prop) => prop !== 'activated',\n})<{ activated?: boolean }>(({ theme, activated }) => ({\n    flex: 1,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    height: 34,\n    lineHeight: '16px',\n    background: activated ? theme.palette.maskColor.bottom : 'transparent',\n    borderRadius: `${theme.spacing(2)} !important`,\n    color: activated ? theme.palette.text.primary : theme.palette.text.secondary,\n    fontSize: 14,\n    fontWeight: 'bold',\n    boxShadow: activated ? ' 0px 2px 5px 1px rgba(0, 0, 0, 0.05);' : 'none',\n\n    '&:hover': {\n        boxShadow: activated ? ' 0px 2px 5px 1px rgba(0, 0, 0, 0.05);' : 'none',\n        color: theme.palette.text.primary,\n        background: activated ? theme.palette.maskColor.bottom : 'transparent',\n    },\n}))\n\ninterface ButtonTabProps extends React.PropsWithChildren<Omit<ButtonProps, 'onChange' | 'value' | 'selected'>> {\n    value: string\n    selected?: boolean\n    onChange?(event: object, value: string): void\n}\n\nexport const RoundTab = forwardRef<HTMLButtonElement, ButtonTabProps>((props, ref) => {\n    const activated = !!props.selected\n    const { onChange, onClick, value } = props\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        if (!activated && onChange) onChange(event, String(value))\n        if (onClick) onClick(event)\n    }\n\n    return (\n        <RoundTabWrap\n            activated={activated}\n            ref={ref}\n            role=\"tab\"\n            {...props}\n            disableElevation\n            variant=\"contained\"\n            aria-selected={activated}\n            onClick={handleClick}\n            onChange={undefined}\n        />\n    )\n})\n","import {\n    Box,\n    Button,\n    ButtonGroup,\n    type ButtonGroupProps,\n    styled,\n    Tab,\n    alpha,\n    type ButtonGroupClasses,\n} from '@mui/material'\nimport { useTabContext, getPanelId, getTabId } from '@mui/lab'\nimport {\n    forwardRef,\n    Children,\n    isValidElement,\n    useState,\n    useRef,\n    useEffect,\n    useImperativeHandle,\n    type ForwardRefExoticComponent,\n    useMemo,\n} from 'react'\nimport { BaseTab } from './BaseTab.js'\nimport { FlexibleTab } from './FlexibleTab.js'\nimport { ArrowBackIosNew as ArrowBackIosNewIcon } from '@mui/icons-material'\nimport { useClickAway, useWindowSize } from 'react-use'\nimport { RoundTab } from './RoundTab.js'\n\ntype MaskTabVariant = 'base' | 'flexible' | 'round'\nconst defaultTabSize = 38\n\nexport interface MaskTabListProps\n    extends Omit<ButtonGroupProps, 'variant' | 'onChange' | 'classes'>,\n        withClasses<keyof ButtonGroupClasses | 'arrowButton'> {\n    onChange(event: object, value: string): void\n    'aria-label'?: string\n    variant?: MaskTabVariant\n    hideArrowButton?: boolean\n}\n\nconst ArrowButtonWrap = styled(Button)(({ theme }) => ({\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    padding: theme.spacing(1.5),\n    height: defaultTabSize,\n    width: defaultTabSize,\n    minWidth: `${defaultTabSize}px !important`,\n    background: theme.palette.background.input,\n    '&:hover': {\n        background: theme.palette.background.input,\n    },\n}))\n\nconst ArrowBackIosNewIconWrap = styled(ArrowBackIosNewIcon)(({ theme }) => ({\n    color: theme.palette.text.primary,\n    width: 16,\n    borderRadius: '0 8px 8px 0',\n}))\n\nconst FlexibleButtonGroupPanel = styled(Box, {\n    shouldForwardProp: (prop) => prop !== 'isOpen',\n})<{\n    isOpen?: boolean\n}>(({ theme, isOpen = false }) => ({\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 100,\n    padding: theme.spacing(1.5),\n    maxWidth: 'calc(100% - 24px)',\n    width: 'calc(100% - 24px)',\n    boxShadow: isOpen\n        ? `0px 0px 20px ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.05)'}`\n        : 'none',\n    backdropFilter: 'blur(20px)',\n    background: alpha(theme.palette.maskColor.bottom, 0.8),\n    boxSizing: 'content-box',\n}))\n\nconst ButtonGroupWrap = styled(ButtonGroup, {\n    shouldForwardProp: (prop) => prop !== 'maskVariant',\n})<{\n    maskVariant?: MaskTabVariant\n}>(({ theme, maskVariant = 'base' }) => ({\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'nowrap',\n    overflowY: 'clip',\n    flex: 1,\n    gap: theme.spacing(1),\n    ...(maskVariant === 'round'\n        ? {\n              padding: theme.spacing(0.5),\n              background: theme.palette.maskColor.input,\n              borderRadius: 18,\n          }\n        : maskVariant === 'flexible'\n        ? {\n              background: 'transparent',\n              borderRadius: 0,\n          }\n        : {\n              marginTop: theme.spacing(-1),\n              paddingTop: theme.spacing(1),\n              background: 'transparent',\n              borderRadius: 0,\n          }),\n}))\n\nconst FlexButtonGroupWrap = styled(ButtonGroup, {\n    shouldForwardProp: (prop) => prop !== 'maskVariant' && prop !== 'isOpen' && prop !== 'isOverflow',\n})<{\n    maskVariant?: MaskTabVariant\n    isOpen?: boolean\n    isOverflow?: boolean\n}>(({ theme, maskVariant = 'base', isOpen = false, isOverflow = false }) => ({\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: isOpen ? 'wrap' : 'nowrap',\n    overflow: 'hidden',\n    flex: 1,\n    maxWidth: '100%',\n    paddingRight: isOpen ? defaultTabSize : 0,\n    gap: maskVariant !== 'base' ? theme.spacing(1) : 0,\n    borderRadius: 0,\n    background:\n        !isOpen && isOverflow\n            ? theme.palette.mode === 'light'\n                ? `linear-gradient(270deg, rgba(255,255,255,1) ${defaultTabSize}px, rgba(223, 229, 244, 0.8) ${defaultTabSize}px, rgba(244, 247, 254, 0) 72px)`\n                : `linear-gradient(270deg, transparent ${defaultTabSize}px, rgba(49, 49, 49, 0.8) ${defaultTabSize}px, rgba(23, 23, 23, 0) 72px)`\n            : 'transparent',\n}))\n\nconst tabMapping: {\n    [key in MaskTabVariant]: ForwardRefExoticComponent<any>\n} = {\n    flexible: FlexibleTab,\n    round: RoundTab,\n    base: BaseTab,\n}\n\n/**\n * This component is like TabList + Tabs in the @mui/material.\n * It should be used with <ButtonGroupTab>.\n *\n * Warning: Only a few \"value\" and \"label\" props on the @mui/material <Tab> component will work.\n *\n * @example\n *  const [currentTab, onChange, tabs, setTab] = useTabs('tab1', 'tab2', 'tab3')\n *  return (\n *      <TabContext value={currentTab}>\n *          <MaskTabList onChange={onChange}>\n *              <Tab label=\"Item One\" value={tabs.tab1} />\n *              <Tab label=\"Item Two\" value={tabs.tab2} />\n *              <Tab label=\"Item Three\" value={tabs.tab3} />\n *          </MaskTabList>\n *          <TabPanel value={tabs.tab1}>Item One</TabPanel>\n *          <TabPanel value={tabs.tab2}>Item Two</TabPanel>\n *          <TabPanel value={tabs.tab3}>Item Three</TabPanel>\n *      </TabContext>\n *  )\n */\nexport const MaskTabList = forwardRef<HTMLDivElement, MaskTabListProps>((props, ref) => {\n    const context = useTabContext()\n    const classes = props.classes\n\n    const [open, handleToggle] = useState(false)\n    const [isTabsOverflow, setIsTabsOverflow] = useState(false)\n    const [firstId, setFirstTabId] = useState<string | undefined>(context?.value)\n    const innerRef = useRef<HTMLDivElement>(null)\n    const anchorRef = useRef<HTMLDivElement>(null)\n    const flexPanelRef = useRef(null)\n    const { width } = useWindowSize()\n\n    if (context === null) throw new TypeError('No TabContext provided')\n\n    const { onChange, variant = 'base', hideArrowButton, ...rest } = props\n\n    useImperativeHandle(ref, () => innerRef?.current!)\n\n    // #region hide tab should up to first when chick\n    useEffect(() => {\n        if (!innerRef?.current) return\n\n        const current = innerRef.current\n        setIsTabsOverflow(current.scrollWidth >= current.clientWidth + defaultTabSize)\n    }, [innerRef?.current, width])\n    // #endregion\n\n    const children = Children.map(props.children, (child) => {\n        if (!isValidElement(child)) throw new TypeError('Invalided Children')\n        const extra = {\n            'aria-controls': getPanelId(context, child.props.value),\n            id: getTabId(context, child.props.value),\n            selected: child.props.value === context.value,\n            className: child.props.className,\n            onChange: (event: object, value: string, visitable?: boolean) => {\n                handleToggle(false)\n                props.onChange(event, value)\n                if (variant === 'flexible' && !visitable) {\n                    setFirstTabId(value)\n                }\n            },\n        }\n\n        if (child.type !== Tab) return child\n\n        if (variant === 'flexible') {\n            Object.assign(extra, {\n                // if move tab to first in flexible tabs\n                isVisitable: (top: number, right: number) => {\n                    const anchor = anchorRef.current?.getBoundingClientRect()\n                    return right <= (anchor?.right ?? 0) - defaultTabSize && top - (anchor?.top ?? 0) < defaultTabSize\n                },\n            })\n        }\n        const C = tabMapping[variant]\n        return (\n            <C value={child.props.value} {...extra}>\n                {child.props.label}\n            </C>\n        )\n    })\n\n    // #region hide tab should up to first when chick\n    const flexibleTabs = useMemo(() => {\n        if (variant !== 'flexible') return null\n        return children?.sort((a, b) => {\n            if (a.props.value === firstId) return -1\n            if (b.props.value === firstId) return 1\n            return 0\n        })\n    }, [firstId, children])\n    // #endregion\n\n    // #region Should close panel when click other area\n    useClickAway(flexPanelRef, (event) => {\n        if (variant !== 'flexible') return\n        const { left, right, top, bottom } = innerRef.current?.getBoundingClientRect() ?? {\n            right: 0,\n            left: 0,\n            top: 0,\n            bottom: 0,\n        }\n        const pointerX = (event as MouseEvent).x ?? 0\n        const pointerY = (event as MouseEvent).y ?? 0\n\n        if (pointerX > right || pointerX < left || pointerY < top || pointerY > bottom) handleToggle(false)\n    })\n    // #endregion\n\n    if (variant === 'flexible') {\n        return (\n            <Box position=\"relative\">\n                <ButtonGroupWrap\n                    maskVariant={variant}\n                    ref={anchorRef}\n                    style={{ visibility: 'hidden', height: defaultTabSize }}\n                />\n                <FlexibleButtonGroupPanel isOpen={!!(open && isTabsOverflow)} ref={flexPanelRef}>\n                    <FlexButtonGroupWrap\n                        maskVariant={variant}\n                        isOpen={open}\n                        isOverflow={!!(isTabsOverflow && !hideArrowButton)}\n                        {...rest}\n                        ref={innerRef}\n                        role=\"tablist\">\n                        {flexibleTabs}\n                        {(isTabsOverflow || open) && !hideArrowButton ? (\n                            <ArrowButtonWrap\n                                className={classes?.arrowButton}\n                                variant=\"text\"\n                                size=\"small\"\n                                aria-controls={open ? 'split-button-menu' : undefined}\n                                aria-expanded={open ? 'true' : undefined}\n                                aria-label=\"select tabs list\"\n                                aria-haspopup=\"menu\"\n                                onClick={() => handleToggle(!open)}>\n                                <ArrowBackIosNewIconWrap\n                                    sx={{ transform: open ? 'rotate(90deg)' : 'rotate(270deg)' }}\n                                />\n                            </ArrowButtonWrap>\n                        ) : null}\n                    </FlexButtonGroupWrap>\n                </FlexibleButtonGroupPanel>\n            </Box>\n        )\n    }\n\n    return (\n        <ButtonGroupWrap maskVariant={variant} {...rest} ref={innerRef} role=\"tablist\">\n            {children}\n        </ButtonGroupWrap>\n    )\n})\n\nMaskTabList.displayName = 'MaskTabList'\n","import { useAsyncRetry } from 'react-use'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useAddressType<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    address?: string,\n    options?: ConnectionOptions<T>,\n) {\n    const Web3 = useWeb3Connection(pluginID, options)\n\n    return useAsyncRetry<Web3Helper.AddressTypeScope<S, T> | undefined>(async () => {\n        if (!address) return\n        return Web3.getAddressType(address, options)\n    }, [address, Web3, options?.chainId])\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Others } from './useWeb3Others.js'\n\nexport function useChainIdValid<T extends NetworkPluginID>(\n    pluginID?: T,\n    expectedChainId?: Web3Helper.Definition[T]['ChainId'],\n) {\n    const { account, chainId } = useChainContext({ chainId: expectedChainId })\n    const Others = useWeb3Others(pluginID)\n\n    return (!account || Others.chainResolver.isValidChainId?.(chainId, process.env.NODE_ENV === 'development')) ?? false\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useQuery } from '@tanstack/react-query'\nimport { useChainContext } from './useContext.js'\nimport { useNativeTokenAddress } from './useNativeTokenAddress.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\nexport function useNativeTokenPrice<T extends NetworkPluginID = NetworkPluginID>(pluginID: T, options?: HubOptions<T>) {\n    const { chainId } = useChainContext({ chainId: options?.chainId })\n    const Hub = useWeb3Hub(pluginID, options)\n    const nativeTokenAddress = useNativeTokenAddress(pluginID, options)\n\n    return useQuery({\n        enabled: !!nativeTokenAddress,\n        queryKey: ['native-token', 'price', pluginID, chainId, nativeTokenAddress, options],\n        queryFn: async () =>\n            Hub.getFungibleTokenPrice(chainId, nativeTokenAddress!, {\n                chainId,\n            }),\n    })\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport { getRegisteredWeb3Networks } from '@masknet/web3-providers'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext, useNetworkContext } from './useContext.js'\n\n/**\n * Get built in declared network descriptor\n * @param expectedPluginID\n * @param expectedChainIdOrNetworkTypeOrID\n * @returns\n */\nexport function useNetworkDescriptor<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n    expectedChainIdOrNetworkTypeOrID?: string | number,\n): Web3Helper.NetworkDescriptorScope<S, T> | undefined {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    const { networkType } = useChainContext()\n\n    return getRegisteredWeb3Networks(pluginID).find((x) =>\n        [x.chainId, x.type, x.ID].includes(expectedChainIdOrNetworkTypeOrID ?? networkType ?? ''),\n    )\n}\n","import { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport type { RecentTransactionComputed, TransactionStatusType } from '@masknet/web3-shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { EMPTY_ARRAY, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useRecentTransactions<T extends NetworkPluginID>(pluginID?: T, status?: TransactionStatusType) {\n    const { Transaction } = useWeb3State(pluginID)\n    const transactions = useSubscription(Transaction?.transactions ?? EMPTY_ARRAY)\n    type ChainId = Web3Helper.Definition[T]['ChainId']\n    type Transaction = Web3Helper.Definition[T]['Transaction']\n\n    return useMemo<Array<RecentTransactionComputed<ChainId, Transaction>>>(() => {\n        return (status ? transactions.filter((x) => status === x.status) : transactions).map((x) => ({\n            ...x,\n            _tx: x.candidates[x.indexId],\n        }))\n    }, [status, transactions])\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n}), 'Error');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-T-${value}`;\n}","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n"],"names":["openWindow","url","target","features","flags","name","value","Object","entries","behaviors","push","opener","referrer","Number","isFinite","width","height","screenX","screenY","window","open","join","useMediaQuery","useMatchXS","theme","breakpoints","down","useEffect","useState","useRowSize","rowSize","setRowSize","fontSize","parseFloat","getComputedStyle","document","documentElement","CircularProgress","makeStyles","ActionButton","Check","CheckIcon","Error","ErrorIcon","red","green","useUpdateEffect","circle","color","size","ActionButtonPromise","props","classes","cx","useStyles","executor","complete","failed","waiting","init","completeOnClick","waitingOnClick","failedOnClick","onComplete","noUpdateEffect","completeIcon","failIcon","waitingIcon","failedButtonStyle","b","state","setState","completeClass","success","className","failClass","run","then","status","error","message","includes","cancel","p","completeClick","failClick","prev","loading","disabled","children","onClick","startIcon","backgroundColor","display","columnGap","to","opacity","animation","animationDelay","dot","palette","maskColor","main","DotLoading","div","Stack","Typography","Icons","EmptyResult","justifyContent","alignItems","gap","EmptySimple","useCallback","useMemo","FixedSizeList","Fuse","uniqBy","Box","useTheme","MaskTextField","SearchableList","itemKey","data","onSelect","onSearch","disableSearch","searchKey","itemRender","FixedSizeListProps","SearchFieldProps","keyword","setKeyword","undefined","itemSize","rest","InputProps","textFieldPropsRest","readyToRenderData","fuse","shouldSort","isCaseSensitive","threshold","minMatchCharLength","keys","length","filtered","search","map","x","item","JSON","stringify","handleChange","e","currentTarget","handleClear","getItemKey","index","toString","dataSet","windowHeight","container","searchInput","placeholder","autoFocus","fullWidth","style","inputProps","paddingLeft","startAdornment","Search","endAdornment","Close","danger","onChange","mt","helperText","alignContent","marginTop","marginBottom","listBox","list","overscanCount","itemData","itemCount","overflow","borderRadius","border","secondaryLine","backgroundClip","position","margin","scrollbarWidth","bottom","useAsyncRetry","useChainContext","useWeb3Hub","useFungibleTokensFromTokenList","pluginID","options","chainId","Hub","getFungibleTokensFromTokenList","EMPTY_OBJECT","useWeb3Connection","useFungibleTokensBalance","listOfAddress","Web3","getFungibleTokensBalance","Switch","styled","switchClasses","SettingSwitch","isSmall","base","root","padding","thumb","checked","switchBase","transform","track","top","useBlockedFungibleTokens","useTrustedFungibleTokens","isSameAddress","NetworkPluginID","useTokenBlocked","address","blockedFungibleTokens","PLUGIN_EVM","find","useTokenTrusted","trustedFungibleTokens","memo","Link","ListItem","ListItemIcon","ListItemText","formatBalance","TokenIcon","useFungibleTokenBalance","useNetwork","useNetworkContext","useWeb3Others","LoadingBase","useSharedTrans","TokenListMode","FormattedBalance","NetworkIcon","useAsyncFn","icon","maxHeight","spacing","backdropFilter","background","bg","text","primary","flex","whiteSpace","textOverflow","paddingRight","lineHeight","second","nameText","maxWidth","symbol","balance","fontWeight","importButton","action","switch","left","link","badgeIcon","right","common","white","dotLoadingWrapper","flexDirection","getFungibleTokenItem","getSource","isSelected","mode","addOrRemoveTokenToLocal","trustOrBlockTokenToLocal","isHiddenChainIcon","isCustomToken","t","Others","token","decimals","logoURL","isBlocked","isTrust","network","source","selected","onAddOrRemoveTokenToLocalLoading","onAddOrRemoveTokenToLocal","event","strategy","stopPropagation","onTrustOrBlockTokenToLocalLoading","onTrustOrBlockTokenToLocal","explorerLink","explorerResolver","fungibleTokenLink","Manage","TrashLine","import","preventDefault","significant","formatter","tokenBalance","isLoading","isLoadingTokenBalance","title","button","List","iconUrl","component","span","href","rel","PopupLink","added_by_user","sx","boxShadow","cursor","ManageTokenListBar","direction","Edit2","erc20_manage_token_list","useTransition","EMPTY_LIST","AddressType","useAccount","useAddressType","useChainId","useFungibleAssets","useFungibleToken","useWeb3State","CurrencyType","ZERO","currySameAddress","leftShift","toZero","SEARCH_KEYS","enableMange","channel","bar","FungibleTokenList","tokens","whitelist","includeTokens","blacklist","excludeTokens","onSearchError","selectedTokens","enableManage","setMode","account","Token","fungibleTokens","fungibleAssets","nativeToken","chainResolver","nativeCurrency","filteredFungibleTokens","allFungibleTokens","toLowerCase","blockedTokenAddresses","filter","checkSameAddress","addr","isIncluded","some","isExcluded","fungibleTokensBalance","sortedFungibleTokensForManage","isTrustedToken","sort","a","z","isNativeTokenA","getNativeTokenAddress","isNativeTokenZ","isMaskTokenA","getMaskTokenAddress","isMaskTokenZ","rank","sortedFungibleTokensForList","fungibleAssetsTable","fromEntries","getTokenValue","USD","aUSD","isPositive","zUSD","isEqualTo","gt","aBalance","zBalance","addressType","isValidAddress","isAddressNotContract","Contract","searchedTokenAddress","searchError","match","erc20_search_wrong_address","searchedToken","Boolean","inOfficialList","inPersonaList","addToken","removeToken","trustToken","blockToken","erc20_token_list_placeholder","SearchTextFieldProps","startTransition","handleSelect","displayName","createContainer","useGasOptions","useSingleBlockBeatRetry","GasOptionType","GasSettingsType","DEFAULT_SLIPPAGE_TOLERANCE","DEFAULT_SLIPPAGE_TOLERANCES","IN_MEMORY_CACHE","lastSelectedGasOptionType","NORMAL","lastSelectedGasSettingsType","Basic","useSettingsContext","initial","transactionOptions","setTransactionOptions","transaction","slippageTolerance","setSlippageTolerance","networkSignature","transactionSignature","getTransactionSignature","needToResetByNetwork","lastNetworkSignature","needToResetByTransaction","lastTransactionSignature","gasSettingsType","setGasSettingsType","gasOptionType","setGasOptionType","gasOptions","gasOptionsLoading","gasOptionsError","refetch","gasOptionRetry","onClearInMemoryCache","onResetAll","disableGasPrice","GAS_OPTION_NAMES","FAST","gas_settings_gas_option_type_fast","gas_settings_gas_option_type_normal","SLOW","gas_settings_gas_option_type_slow","CUSTOM","resetAll","SettingsContext","Advanced","ImageIcon","mainIcon","badgeIconBorderColor","WalletIcon","badgeSize","iconFilterColor","useClearTransactionsCallback","Transaction","clearTransactions","useRemoveTransactionCallback","id","removeTransaction","flatten","pick","uniq","values","Aave","ArtBlocks","Gitcoin","Lido","MaskBox","NftRedPacket","RedPacket","Trader","collect","fields","groupedByFields","listOfAddresses","v","collected","domainAddressMap","getContractOwnerDomain","pair","addresses","forwardRef","useAsync","noop","format","MaskColorVar","TransactionStatusType","Grid","paper","listItem","default","methodName","textTransform","timestamp","cell","boxSizing","linkText","linkIcon","marginLeft","clear","blue","statusTextColorMap","NOT_DEPEND","SUCCEED","FAILED","tx","onClear","statusTextMap","recent_transaction_pending","recent_transaction_success","recent_transaction_failed","TransactionFormatter","TransactionWatcher","_tx","functionName","formattedTransaction","formatTransaction","domainOrAddress","txStatus","setTxStatus","off","emitter","on","textAlign","md","variant","secondary","createdAt","flexGrow","formatAddress","transactionLink","LinkOut","wallet_status_pending_clear","TransactionList","transactions","ref","useRecentTransactions","summaryWrapper","pendingSummary","warn","clearAll","hide","usePendingTransactions","pendingTransactions","meltedTxHashes","setMeltedTxHashes","clearRecentTxes","removeRecentTx","slice","summary","section","mr","wallet_status_pending","count","wallet_status_pending_clear_all","transactionList","Button","ThemeProvider","MaskColors","MaskLightTheme","getMaskColor","Sniffings","useNetworkDescriptor","useProviderDescriptor","useReverseAddress","useNativeToken","useWallet","useBalance","useChainIdValid","FormattedAddress","SelectProviderModal","WalletStatusModal","CopyButton","ProviderType","delay","contentBackground","disableChange","withinRiskWarningDialog","textColor","currentAccount","is_dashboard_page","primaryBackground2","dashboardBackground","accountInfo","accountName","dark","marginRight","paddingTop","infoRow","actionButton","connectButtonWrapper","copyIcon","statusBox","WalletStatusBox","providerDescriptor","backgroundGradient","publicBg","type","MaskWallet","chainIdValid","wallet","loadingBalance","loadingNativeToken","networkDescriptor","domain","plugin_wallet_on_connect","formatDomainName","light","addressLink","plugin_wallet_view_on_explorer","closeDialog","close","disconnect","plugin_wallet_disconnect","wallet_status_button_change","showPendingTransaction","useRef","Trans","DialogContent","Card","Paper","dialogClasses","getSiteType","pluginIDsSettings","useSingletonModal","InjectedDialog","dialog","minHeight","dialogContent","cardContent","tipContent","flexWrap","warningBackground","tipContentText","warning","tipLink","textDecoration","connectWith","progressIcon","progress","black","warningTriangleIcon","retryButton","publicMain","ConnectWalletModal","connectionRef","providerType","networkType","current","connected","onConnect","networkResolver","networkChainId","connect","err","site","dispatch","onOpen","plugin_wallet_dialog_title","onClose","elevation","plugin_wallet_connect_to","plugin_wallet_connected_to","providerResolver","providerName","initializing","plugin_wallet_metamask_error_already_request","plugin_wallet_connect_to_retry","WalletConnect","WarningTriangle","i18nKey","components","providerLink","providerHomeLink","providerShortenLink","zhTW","enUS","ja","zhCN","ko","SupportedLanguages","getLocale","lang","jaJP","koKR","formatDistanceStrict","addSeconds","formatCurrency","CheckCircle","RadioButtonUnchecked","formatWeiToGwei","estimate","amount","GasOption","option","useContainer","now","Date","line","gas_settings_gas_option_estimate_distance","distance","estimatedSeconds","addSuffix","locale","gas_settings_gas_option_amount_in_gwei","suggestedMaxFeePerGas","React","Divider","Skeleton","GasOptionItem","content","skeleton","rectangle","GasOptionSelector","isEIP1559","isFeatureSupported","maxFeePerGas","maxPriorityFeePerGas","suggestedMaxPriorityFeePerGas","gasPrice","i","type_","Fragment","Section","additions","Alert","alpha","standardWarning","standardError","MaskAlert","zod","formatGweiToWei","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo","multipliedBy","HIGH_FEE_WARNING_MULTIPLIER","useGasSchema","object","gasLimit","string","min","gas_settings_error_gas_limit_absence","refine","gas","gas_settings_error_gas_limit_too_low","gas_settings_error_gas_price_absence","gas_settings_error_gas_price_positive","slow","gas_settings_error_gas_price_too_low","fast","gas_settings_error_gas_price_too_high","gas_settings_error_max_priority_fee_absence","gas_settings_error_max_priority_gas_fee_positive","gas_settings_error_max_priority_gas_fee_too_low","gas_settings_error_max_priority_gas_fee_too_high","gas_settings_error_max_fee_absence","gas_settings_error_max_fee_too_low","gas_settings_error_max_fee_too_high","gas_settings_error_max_priority_gas_fee_imbalance","path","Controller","FormProvider","useForm","BigNumber","zodResolver","NUMERIC_INPUT_REGEXP_PATTERN","isZero","getDefaultValues","normal","unit","third","caption","alertIcon","alertMessage","alertStandardSuccess","GasForm","defaultGasLimit","maxPriorityFeePerGasByUser","setMaxPriorityFeePerGasByUser","baseFeePerGas","schema","transactionComputed","methods","shouldUnregister","resolver","defaultValues","errors","formState","watch","gasPriceByUser","setGasPriceByUser","maxFeePerGasByUser","setMaxFeePerGasByUser","errorCenter","errorBottom","setValue","payload","standardSuccess","Info","gas_settings_info_gas_fee","fee","xs","render","field","pattern","gwei","label","gas_settings_label_gas_price","ev","trigger","disableGasLimit","gas_settings_label_gas_limit","CircleWarning","severity","gas_settings_label_max_priority_fee","gas_settings_label_max_fee","MaskTabList","TabContext","Tab","plus","tabs","input","price","tab","GasSection","activeTab","setActiveTab","priorityFee","customPrice","gas_settings_custom","aria-label","gas_settings_tab_basic","gas_settings_tab_advanced","Checkbox","backgroundImage","RadioChip","disableRipple","checkedIcon","isGreaterThan","useSlippageToleranceSchema","customSlippageTolerance","gas_settings_error_custom_slippage_tolerance_invalid","textfield","SlippageToleranceForm","slippageTolerances","tolerance","setTolerance","clearErrors","Math","isNaN","shouldValidate","Warning","gas_settings_alert_low_slippage_tolerance","at","gas_settings_alert_high_slippage_tolerance","percentage","SlippageToleranceSection","gas_settings_section_title_slippage_tolerance","SettingsBoard","disableSlippageTolerance","compact","SelectGasSettingsDialog","pluginID_","chainId_","settings","setSettings","initialState","titleBarIconStyle","gas_settings_title","Provider","SelectGasSettingsModal","setPluginID","setChainId","setTransaction","setTitle","setDisableGasPrice","setDisableSlippageTolerance","setDisableGasLimit","inputClasses","useNativeTokenAddress","EnhanceableSite","useBaseUIRuntime","minWidth","msOverflowStyle","twitterBorderLine","focused","wrapper","paddingBottom","SelectFungibleTokenDialog","disableSearchBar","disableNativeToken","networkIdentifier","Minds","currentPluginID","isMdScreen","nativeTokenAddress","manage_token_list","select_token","SelectFungibleTokenModal","setEnableManage","setWhitelist","setBlacklist","setTokens","setDisableSearchBar","setSelectedTokens","ButtonBase","ProviderIcon","ButtonBaseProps","img","src","CloseIcon","ArrowBackRounded","ArrowBackRoundedIcon","DialogDismissIconUI","back","auto","sm","Dialog","DialogTitle","IconButton","ListItemButton","OthersAll","getAllPluginsWeb3State","ShadowRootTooltip","usePortalShadowRoot","ChainId","NETWORK_DESCRIPTORS","EVM_NETWORK_DESCRIPTORS","SOL_NETWORK_DESCRIPTORS","SolProviderType","FLOW_NETWORK_DESCRIPTORS","FlowProviderType","useActivatedPluginsSiteAdaptor","useActivatedPluginsExtensionPage","descriptors","PLUGIN_FLOW","PLUGIN_SOLANA","smallQuery","counterReset","counterIncrement","wallets","gridTemplateColumns","gridGap","gridAutoRows","walletItem","disabledWalletItem","pointerEvents","providerIcon","dialogTitle","dialogCloseButton","rowGap","listItemText","dialogPaper","PluginProviderRender","providers","onProviderIconClicked","requiredSupportChainIds","requiredSupportPluginID","plugins","extensionPagePlugins","selectChainDialogOpen","setSelectChainDialogOpen","fortmaticProviderDescriptor","Fortmatic","handleClick","provider","expectedChainId","providerAdaptorPluginID","isReady","downloadLink","use","providerDownloadLink","Mainnet","getTips","Phantom","plugin_wallet_solana_tips","Blocto","plugin_wallet_blocto_tips","plugin_wallet_fortmatic_tips","plugin_wallet_support_chains_tips","getDisabled","enableRequirements","supportedChainIds","siteType","supportedEnhanceableSites","supportedExtensionSites","arrow","placement","ID","plugin_wallet_choose_network","BSC","iconColor","getEnumAsArray","getRegisteredWeb3Providers","Providers","SelectProvider","createWallet","subscription","getCurrentValue","openAndWaitForClose","networkSupporterPluginID","flatMap","plugin_wallet_select_provider_dialog_title","setRequiredSupportPluginID","setRequiredSupportChainIds","DialogActions","useCustomSnackbar","redMain","buttons","article","WalletRiskWarning","showSnackbar","isMobile","RiskWarning","onConfirm","wallet_risk_warning_no_select_wallet","preventDuplicate","approve","wallet_risk_warning_dialog_title","align","ns","br","wallet_risk_warning_confirm_tips","confirm","wallet_risk_confirm_confirming","wallet_risk_confirm_failed","done","WalletRiskWarningModal","setAccount","minimumBalance","valueInt","toFixed","formatted","String","BaseTabWrap","shouldForwardProp","prop","activated","secondaryDark","BaseTab","role","disableElevation","aria-selected","FlexibleTabTabWrap","flexShrink","highlight","FlexibleTab","isVisitable","visitable","getBoundingClientRect","RoundTabWrap","RoundTab","ButtonGroup","useTabContext","getPanelId","getTabId","Children","isValidElement","useImperativeHandle","ArrowBackIosNew","ArrowBackIosNewIcon","useClickAway","useWindowSize","defaultTabSize","ArrowButtonWrap","ArrowBackIosNewIconWrap","FlexibleButtonGroupPanel","isOpen","zIndex","ButtonGroupWrap","maskVariant","overflowY","FlexButtonGroupWrap","isOverflow","tabMapping","flexible","round","context","handleToggle","isTabsOverflow","setIsTabsOverflow","firstId","setFirstTabId","innerRef","anchorRef","flexPanelRef","TypeError","hideArrowButton","scrollWidth","clientWidth","child","extra","assign","anchor","C","flexibleTabs","pointerX","pointerY","y","visibility","arrowButton","aria-controls","aria-expanded","aria-haspopup","getAddressType","isValidChainId","process","env","NODE_ENV","useQuery","useNativeTokenPrice","enabled","queryKey","queryFn","getFungibleTokenPrice","getRegisteredWeb3Networks","expectedPluginID","expectedChainIdOrNetworkTypeOrID","useSubscription","EMPTY_ARRAY","candidates","indexId"],"sourceRoot":"","x_google_ignoreList":[26,53,61,62,63,64,65]}