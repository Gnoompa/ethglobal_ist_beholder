{"version":3,"file":"bundled/6751.js","mappings":"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","sources":["webpack://mask-network/./packages/shared-base-ui/src/hooks/usePersistSubscription.ts","webpack://mask-network/./packages/shared-base/src/Subscriptions/index.ts","webpack://mask-network/./packages/shared-base/src/helpers/compose.ts","webpack://mask-network/./packages/web3-hooks/base/src/useAccount.ts","webpack://mask-network/./packages/web3-hooks/base/src/useChainId.ts","webpack://mask-network/./packages/web3-hooks/base/src/useProviderType.ts","webpack://mask-network/./packages/web3-hooks/base/src/useContext.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useDefaultChainId.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWeb3Others.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWeb3State.ts","webpack://mask-network/./node_modules/.pnpm/use-subscription@1.8.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-subscription/cjs/use-subscription.production.min.js","webpack://mask-network/./node_modules/.pnpm/use-subscription@1.8.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-subscription/index.js","webpack://mask-network/./node_modules/.pnpm/use-sync-external-store@1.2.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","webpack://mask-network/./node_modules/.pnpm/use-sync-external-store@1.2.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-sync-external-store/shim/index.js","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/suspense.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/useQuery.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/utils.mjs"],"sourcesContent":["import { useQuery } from '@tanstack/react-query'\nimport { useEffect, useState } from 'react'\nimport { type Subscription } from 'use-subscription'\n\n/**\n * In favor of react-query's persist cache and cache management\n */\nexport function usePersistSubscription<T>(\n    persistKey: `@@${string}`,\n    subscription: Subscription<T>,\n    predicate?: (data: T) => boolean,\n): T {\n    const [initialValue] = useState(() => subscription.getCurrentValue())\n    const { data = initialValue, refetch } = useQuery({\n        queryKey: [persistKey],\n        networkMode: 'always',\n        queryFn: () => {\n            const value = subscription.getCurrentValue()\n            if (predicate && !predicate(value)) return undefined\n            return value\n        },\n    })\n    useEffect(() => {\n        refetch() // Actively fetch, make persist data act as placeholder data\n        return subscription.subscribe(refetch)\n    }, [subscription, refetch])\n\n    return data\n}\n","import { EMPTY_LIST } from '../constants.js'\nimport { createConstantSubscription } from '../helpers/subscription.js'\n\nexport const ZERO = createConstantSubscription(0)\nexport const UNDEFINED = createConstantSubscription(undefined)\nexport const EMPTY_STRING = createConstantSubscription('')\nexport const EMPTY_ARRAY = createConstantSubscription(EMPTY_LIST)\nexport const EMPTY_ENTRY = createConstantSubscription({} as Record<string, never>)\nexport const TRUE = createConstantSubscription(true)\nexport const FALSE = createConstantSubscription(false)\nexport const NULL = createConstantSubscription(null)\n","export function compose<T>(...args: [...composer: Array<((arg: T) => T) | null | false>, init: T]) {\n    if (args.length === 0) throw new TypeError()\n    const last = args.pop() as T\n\n    return (args as Array<((arg: T) => T) | null>).filter(Boolean).reduceRight((prev, fn) => fn!(prev), last)\n}\n","import { useSubscription } from 'use-subscription'\nimport { UNDEFINED, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useWeb3Others } from './useWeb3Others.js'\n\nexport function useAccount<T extends NetworkPluginID>(pluginID?: T, expectedAccount?: string) {\n    const Others = useWeb3Others(pluginID)\n    const { Provider } = useWeb3State(pluginID)\n    const defaultAccount = useSubscription(Provider?.account ?? UNDEFINED)\n    return Others.formatAddress(expectedAccount ?? defaultAccount ?? '')\n}\n","import { useSubscription } from 'use-subscription'\nimport { UNDEFINED, type NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useDefaultChainId } from './useDefaultChainId.js'\n\nexport function useChainId<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    expectedChainId?: Web3Helper.ChainIdScope<S, T>,\n) {\n    const { Provider } = useWeb3State<S, T>(pluginID)\n    const defaultChainId = useDefaultChainId(pluginID)\n    const actualChainId = useSubscription(Provider?.chainId ?? UNDEFINED)\n\n    return (expectedChainId ?? actualChainId ?? defaultChainId) as Web3Helper.ChainIdScope<S, T>\n}\n","import { useSubscription } from 'use-subscription'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { UNDEFINED, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useProviderType<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n) {\n    const { Provider } = useWeb3State(pluginID)\n    const defaultProviderType = useSubscription(Provider?.providerType ?? UNDEFINED)\n    return defaultProviderType as Web3Helper.ProviderTypeScope<S, T>\n}\n","import { createContext, type ReactNode, useContext, useState, useMemo, type ProviderProps, memo } from 'react'\nimport { isUndefined, omitBy } from 'lodash-es'\nimport { usePersistSubscription, useValueRef } from '@masknet/shared-base-ui'\nimport { compose, Sniffings, NetworkPluginID, getSiteType, pluginIDsSettings } from '@masknet/shared-base'\nimport { Providers, type BaseContractWalletProvider } from '@masknet/web3-providers'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useAccount } from './useAccount.js'\nimport { useChainId } from './useChainId.js'\nimport { useProviderType } from './useProviderType.js'\nimport { useLocation } from 'react-use'\n\ninterface ReadonlyNetworkContext<T extends NetworkPluginID = NetworkPluginID> {\n    pluginID: T\n}\n\ninterface NetworkContext<T extends NetworkPluginID = NetworkPluginID> {\n    pluginID: T\n    setPluginID: (pluginID: T) => void\n}\n\ninterface ChainContextGetter<T extends NetworkPluginID = NetworkPluginID> {\n    account?: string\n    chainId?: Web3Helper.Definition[T]['ChainId']\n    networkType?: Web3Helper.Definition[T]['NetworkType']\n    providerType?: Web3Helper.Definition[T]['ProviderType']\n    // If it's controlled, we prefer passed value over state inside\n    controlled?: boolean\n}\n\ninterface ChainContextSetter<T extends NetworkPluginID = NetworkPluginID> {\n    setAccount?: (account: string) => void\n    setChainId?: (chainId: Web3Helper.Definition[T]['ChainId']) => void\n    setNetworkType?: (networkType: Web3Helper.Definition[T]['NetworkType']) => void\n    setProviderType?: (providerType: Web3Helper.Definition[T]['ProviderType']) => void\n}\n\nconst ReadonlyNetworkContext = createContext<ReadonlyNetworkContext>(null!)\nReadonlyNetworkContext.displayName = 'ReadonlyNetworkContext'\n\nconst NetworkContext = createContext<NetworkContext>(null!)\nNetworkContext.displayName = 'NetworkContext'\n\nconst ChainContext = createContext<ChainContextGetter & ChainContextSetter>(null!)\nChainContext.displayName = 'ChainContext'\n\n/**\n * Provide the current readonly network plugin ID (readonly)\n * @param props\n * @returns\n */\nexport function ReadonlyNetworkContextProvider({ value, children }: ProviderProps<ReadonlyNetworkContext>) {\n    return <ReadonlyNetworkContext.Provider value={value}>{children}</ReadonlyNetworkContext.Provider>\n}\n\n/**\n * Provide the current selected network plugin ID\n * @param props\n * @returns\n */\nexport function NetworkContextProvider({ value, children }: ProviderProps<NetworkPluginID>) {\n    const [pluginID = value, setPluginID] = useState<NetworkPluginID>()\n    const context = useMemo(\n        () => ({\n            pluginID,\n            setPluginID,\n        }),\n        [pluginID],\n    )\n    return <NetworkContext.Provider value={context}>{children}</NetworkContext.Provider>\n}\n\n/**\n * Provide the current chain context\n * @param props\n * @returns\n */\nexport const ChainContextProvider = memo(function ChainContextProvider({\n    value,\n    children,\n}: ProviderProps<ChainContextGetter>) {\n    const { pluginID } = useNetworkContext()\n    const { controlled } = value\n\n    const globalAccount = useAccount(pluginID)\n    const globalChainId = useChainId(pluginID)\n    const globalProviderType = useProviderType(pluginID)\n\n    const maskProvider = Providers[ProviderType.MaskWallet] as BaseContractWalletProvider\n\n    // The initial value of subscription.account could be empty string\n    const maskAccount = usePersistSubscription('@@mask-account', maskProvider.subscription.account, (x) => !!x)\n    const maskChainId = usePersistSubscription('@@mask-chain-id', maskProvider.subscription.chainId)\n\n    const [_account, setAccount] = useState<string>()\n    const [_chainId, setChainId] = useState<Web3Helper.ChainIdAll>()\n    const [_providerType, setProviderType] = useState<Web3Helper.ProviderTypeAll>()\n\n    const location = useLocation()\n    const is_popup_wallet_page = Sniffings.is_popup_page && location.hash?.includes('/wallet')\n    const account = controlled\n        ? value.account\n        : _account ?? value.account ?? (is_popup_wallet_page ? maskAccount : globalAccount)\n    const chainId = controlled\n        ? value.chainId\n        : _chainId ?? value.chainId ?? (is_popup_wallet_page ? maskChainId : globalChainId)\n    const providerType = controlled\n        ? value.providerType\n        : _providerType ?? value.providerType ?? (is_popup_wallet_page ? ProviderType.MaskWallet : globalProviderType)\n\n    const context = useMemo(\n        () => ({\n            account,\n            chainId,\n            providerType,\n            setAccount,\n            setChainId,\n            setProviderType,\n        }),\n        [account, chainId, providerType],\n    )\n    return <ChainContext.Provider value={context}>{children}</ChainContext.Provider>\n})\n\n/**\n * Provide a context that contains both network and chain context\n * @param props\n * @returns\n */\nexport function Web3ContextProvider({\n    value,\n    children,\n}: ProviderProps<\n    {\n        pluginID: NetworkPluginID\n    } & ChainContextGetter\n>) {\n    const { pluginID, ...rest } = value\n\n    return compose(\n        (children) => <NetworkContextProvider value={pluginID} children={children} />,\n        (children) => <ChainContextProvider value={rest} children={children} />,\n        <>{children}</>,\n    )\n}\n\n/**\n * Provide the top most network context\n * @param props\n * @returns\n */\nexport function RevokeNetworkContextProvider({ children }: { children: ReactNode | undefined }) {\n    const { pluginID } = useContext(ReadonlyNetworkContext)\n    const value = useMemo(\n        () => ({\n            pluginID,\n            setPluginID: () => {\n                throw new Error('Set pluginID is not allowed.')\n            },\n        }),\n        [pluginID],\n    )\n    return <NetworkContext.Provider value={value} children={children} />\n}\n\n/**\n * Provide the top most chain context\n * @param props\n * @returns\n */\nexport function RevokeChainContextProvider({ children }: { children: ReactNode | undefined }) {\n    const account = useAccount()\n    const chainId = useChainId()\n    const providerType = useProviderType()\n    const value = useMemo(\n        () => ({\n            account,\n            chainId,\n            providerType,\n        }),\n        [account, chainId, providerType],\n    )\n    return <ChainContext.Provider value={value} children={children} />\n}\n\n/**\n * The default Web3 context provider that uses the EVM plugin\n * @param props\n * @returns\n */\nexport function DefaultWeb3ContextProvider({\n    value,\n    children,\n}: Partial<\n    ProviderProps<\n        Partial<\n            {\n                pluginID: NetworkPluginID\n            } & ChainContextGetter\n        >\n    >\n>) {\n    const contextValue = useMemo(() => {\n        return { pluginID: value?.pluginID ?? NetworkPluginID.PLUGIN_EVM, ...value }\n    }, [JSON.stringify(value)])\n\n    return <Web3ContextProvider value={contextValue}>{children}</Web3ContextProvider>\n}\n\n/**\n * The root Web3 context provider that uses the plugin ID from global settings\n * @param props\n * @returns\n */\nexport function RootWeb3ContextProvider({\n    value,\n    children,\n}: Partial<\n    ProviderProps<\n        Partial<\n            {\n                pluginID: NetworkPluginID\n            } & ChainContextGetter\n        >\n    >\n>) {\n    const pluginIDs = useValueRef(pluginIDsSettings)\n    const contextValue = useMemo(() => {\n        const site = getSiteType()\n        return { pluginID: value?.pluginID ?? (site ? pluginIDs[site] : NetworkPluginID.PLUGIN_EVM) }\n    }, [pluginIDs, JSON.stringify(value)])\n\n    return (\n        <ReadonlyNetworkContextProvider value={contextValue}>\n            <Web3ContextProvider value={contextValue}>{children}</Web3ContextProvider>\n        </ReadonlyNetworkContextProvider>\n    )\n}\n\nexport function useEnvironmentContext(overrides?: ReadonlyNetworkContext) {\n    const context = useContext(ReadonlyNetworkContext)\n    return {\n        ...context,\n        ...omitBy(overrides, isUndefined),\n    }\n}\n\nexport function useNetworkContext<T extends NetworkPluginID = NetworkPluginID>(overrides?: T) {\n    const context = useContext(NetworkContext)\n    return {\n        ...context,\n        pluginID: (overrides ?? context.pluginID) as T,\n    }\n}\n\nexport function useChainContext<T extends NetworkPluginID = NetworkPluginID>(overrides?: ChainContextGetter<T>) {\n    const context = useContext(ChainContext)\n    return {\n        ...context,\n        ...omitBy(overrides, isUndefined),\n    } as Required<ChainContextGetter<T> & ChainContextSetter<T>>\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport { ChainId as EVM_ChainId } from '@masknet/web3-shared-evm'\nimport { ChainId as FlowChainId } from '@masknet/web3-shared-flow'\nimport { ChainId as SolanaChainId } from '@masknet/web3-shared-solana'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useNetworkContext } from './useContext.js'\n\nconst DEFAULT_CHAIN_ID: Record<NetworkPluginID, Web3Helper.ChainIdAll> = {\n    [NetworkPluginID.PLUGIN_EVM]: EVM_ChainId.Mainnet,\n    [NetworkPluginID.PLUGIN_FLOW]: FlowChainId.Mainnet,\n    [NetworkPluginID.PLUGIN_SOLANA]: SolanaChainId.Mainnet,\n}\n\nexport function useDefaultChainId<T extends NetworkPluginID>(expectedPluginID?: T) {\n    const { pluginID } = useNetworkContext<T>(expectedPluginID)\n    return DEFAULT_CHAIN_ID[pluginID]\n}\n\nexport function getDefaultChainId<T extends NetworkPluginID>(pluginID: T) {\n    return DEFAULT_CHAIN_ID[pluginID]\n}\n","import { useMemo } from 'react'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { OthersAll } from '@masknet/web3-providers'\nimport type { Others } from '@masknet/web3-providers/types'\nimport { useNetworkContext } from './useContext.js'\n\nexport function useWeb3Others<T extends NetworkPluginID = NetworkPluginID>(expectedPluginID?: T) {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    return useMemo(() => OthersAll.use(pluginID) as Others<T>, [pluginID])\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport { getActivatedPluginWeb3State } from '@masknet/web3-providers'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useNetworkContext } from './useContext.js'\n\nexport function useWeb3State<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n): Web3Helper.Web3StateScope<S, T> {\n    const { pluginID } = useNetworkContext<T>(expectedPluginID)\n    return getActivatedPluginWeb3State(pluginID)\n}\n","/**\n * @license React\n * use-subscription.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=require(\"use-sync-external-store/shim\");exports.useSubscription=function(a){return b.useSyncExternalStore(a.subscribe,a.getCurrentValue)};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/use-subscription.production.min.js');\n} else {\n  module.exports = require('./cjs/use-subscription.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","'use client';\nimport * as React from 'react';\n\nconst defaultContext = /*#__PURE__*/React.createContext(undefined);\nconst QueryClientSharingContext = /*#__PURE__*/React.createContext(false); // If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(context, contextSharing) {\n  if (context) {\n    return context;\n  }\n\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nconst useQueryClient = ({\n  context\n} = {}) => {\n  const queryClient = React.useContext(getQueryClientContext(context, React.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nconst QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n\n  if (process.env.NODE_ENV !== 'production' && contextSharing) {\n    client.getLogger().error(\"The contextSharing option has been deprecated and will be removed in the next major version\");\n  }\n\n  const Context = getQueryClientContext(context, contextSharing);\n  return /*#__PURE__*/React.createElement(QueryClientSharingContext.Provider, {\n    value: !context && contextSharing\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, children));\n};\n\nexport { QueryClientProvider, defaultContext, useQueryClient };\n//# sourceMappingURL=QueryClientProvider.mjs.map\n","'use client';\nimport * as React from 'react';\n\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\n\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nconst useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\nconst QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\n\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary };\n//# sourceMappingURL=QueryErrorResetBoundary.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { shouldThrowError } from './utils.mjs';\n\nconst ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nconst useClearResetErrorBoundary = errorResetBoundary => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nconst getHasError = ({\n  result,\n  errorResetBoundary,\n  useErrorBoundary,\n  query\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(useErrorBoundary, [result.error, query]);\n};\n\nexport { ensurePreventErrorBoundaryRetry, getHasError, useClearResetErrorBoundary };\n//# sourceMappingURL=errorBoundaryUtils.mjs.map\n","const ensureStaleTime = defaultedOptions => {\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n};\nconst willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nconst shouldSuspend = (defaultedOptions, result, isRestoring) => (defaultedOptions == null ? void 0 : defaultedOptions.suspense) && willFetch(result, isRestoring);\nconst fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).then(({\n  data\n}) => {\n  defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n}).catch(error => {\n  errorResetBoundary.clearReset();\n  defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n});\n\nexport { ensureStaleTime, fetchOptimistic, shouldSuspend, willFetch };\n//# sourceMappingURL=suspense.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { useIsRestoring } from './isRestoring.mjs';\nimport { ensurePreventErrorBoundaryRetry, useClearResetErrorBoundary, getHasError } from './errorBoundaryUtils.mjs';\nimport { ensureStaleTime, shouldSuspend, fetchOptimistic } from './suspense.mjs';\n\nfunction useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic'; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  ensureStaleTime(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const [observer] = React.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore(React.useCallback(onStoreChange => {\n    const unsubscribe = isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return unsubscribe;\n  }, [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  } // Handle error boundary\n\n\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    useErrorBoundary: defaultedOptions.useErrorBoundary,\n    query: observer.getCurrentQuery()\n  })) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\n\nexport { useBaseQuery };\n//# sourceMappingURL=useBaseQuery.mjs.map\n","'use client';\nimport { parseQueryArgs, QueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}\n\nexport { useQuery };\n//# sourceMappingURL=useQuery.mjs.map\n","'use client';\nimport { useSyncExternalStore as useSyncExternalStore$1 } from 'use-sync-external-store/shim/index.js';\n\nconst useSyncExternalStore = useSyncExternalStore$1;\n\nexport { useSyncExternalStore };\n//# sourceMappingURL=useSyncExternalStore.mjs.map\n","function shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\nexport { shouldThrowError };\n//# sourceMappingURL=utils.mjs.map\n"],"names":["useQuery","useEffect","useState","usePersistSubscription","persistKey","subscription","predicate","initialValue","getCurrentValue","data","refetch","queryKey","networkMode","queryFn","value","undefined","subscribe","EMPTY_LIST","createConstantSubscription","ZERO","UNDEFINED","EMPTY_STRING","EMPTY_ARRAY","EMPTY_ENTRY","TRUE","FALSE","NULL","compose","args","length","TypeError","last","pop","filter","Boolean","reduceRight","prev","fn","useSubscription","useWeb3State","useWeb3Others","useAccount","pluginID","expectedAccount","Others","Provider","defaultAccount","account","formatAddress","useDefaultChainId","useChainId","expectedChainId","defaultChainId","actualChainId","chainId","useProviderType","defaultProviderType","providerType","createContext","useContext","useMemo","memo","isUndefined","omitBy","useValueRef","Sniffings","NetworkPluginID","getSiteType","pluginIDsSettings","Providers","ProviderType","useLocation","ReadonlyNetworkContext","displayName","NetworkContext","ChainContext","ReadonlyNetworkContextProvider","children","NetworkContextProvider","setPluginID","context","ChainContextProvider","useNetworkContext","controlled","globalAccount","globalChainId","globalProviderType","maskProvider","MaskWallet","maskAccount","x","maskChainId","_account","setAccount","_chainId","setChainId","_providerType","setProviderType","location","is_popup_wallet_page","is_popup_page","hash","includes","Web3ContextProvider","rest","RevokeNetworkContextProvider","Error","RevokeChainContextProvider","DefaultWeb3ContextProvider","contextValue","PLUGIN_EVM","JSON","stringify","RootWeb3ContextProvider","pluginIDs","site","useEnvironmentContext","overrides","useChainContext","ChainId","EVM_ChainId","FlowChainId","SolanaChainId","DEFAULT_CHAIN_ID","Mainnet","PLUGIN_FLOW","PLUGIN_SOLANA","expectedPluginID","getDefaultChainId","OthersAll","use","getActivatedPluginWeb3State"],"sourceRoot":"","x_google_ignoreList":[10,11,12,13,14,15,16,17,18,19,20,21]}