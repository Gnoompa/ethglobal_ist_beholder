{"version":3,"file":"bundled/2402.js","mappings":"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AChD,OAAO,CAACoI,GAAG,CAACxH;IAC5B;IAEA,MAAgBmI,iBAAiBnI,EAAU,EAAEC,OAAgB,EAAEoC,MAAmB,EAAEgG,aAAyB,EAAE;QAC3G,IAAI,CAAChG,MAAM,CAAC+E,cAAc;QAE1B,0EAA0E;QAC1E,MAAMM,WAAW,MAAM,IAAI,CAACY,eAAe,CAACtI,IAAIC,SAASoC;QACzD,IAAI,CAACjD,OAAO,CAACmJ,GAAG,CAACvI,IAAI;YAAC0H;YAAUzH;YAASoI;SAAc;IAC3D;IAEUf,WAAWtH,EAAU,EAAE;QAC7B,6CAA6C;QAC7C,IAAI,CAAC,IAAI,CAACZ,OAAO,CAAC2I,GAAG,CAAC/H,KAAK;QAC3B,MAAM,KAAKoC,MAAM,GAAG,IAAI,CAAChD,OAAO,CAACoI,GAAG,CAACxH;QACrCoC;QACA,IAAI,CAAChD,OAAO,CAACoJ,MAAM,CAACxI;IACxB;AACJ;;;;;;;;;;;;;;;;;;;ACtGO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,YAAY,mUAAmU;AAC/U;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AC1EO;AACP,YAAY,wGAAwG;AACpH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD,8BAA8B,uCAAuC;AACrE,wBAAwB,iCAAiC;AACzD,aAAa;AACb;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AAE,GAAGA,IAAI;YAAE7G;QAAI;IAC1B,OAAO;QACH,4BAA4B;QAC5B,OAAO6G;IACX;AACJ;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,mCAAmC;AACnC;AACA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAS;;AAE/B,iBAAiB;AACjB;;AAEA;AACA;AACA,EAAE,QAAQ;;AAEV;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B;;AAE3B;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEuzB","sources":["webpack://mask-network/./packages/mask/shared/sandboxed-plugin/host-api.ts","webpack://mask-network/./packages/mask/utils-pure/hmr.ts","webpack://mask-network/./packages/typed-message/base/src/core/index.ts","webpack://mask-network/./packages/typed-message/base/src/index.ts","webpack://mask-network/./packages/sandboxed-plugin-runtime/src/peer-dependencies/index.ts","webpack://mask-network/./packages/sandboxed-plugin-runtime/src/runtime/runner.ts","webpack://mask-network/./node_modules/.pnpm/@masknet+web-endowments@0.1.1/node_modules/@masknet/web-endowments/dist/timers.js","webpack://mask-network/./node_modules/.pnpm/@masknet+web-endowments@0.1.1/node_modules/@masknet/web-endowments/dist/fetch.js","webpack://mask-network/./packages/sandboxed-plugin-runtime/src/runtime/global.ts","webpack://mask-network/./packages/sandboxed-plugin-runtime/src/runtime/runtime.ts","webpack://mask-network/./packages/sandboxed-plugin-runtime/src/utils/manifest.ts","webpack://mask-network/./packages/sandboxed-plugin-runtime/src/utils/url.ts","webpack://mask-network/./packages/typed-message/base/src/binary-encode/decode.ts","webpack://mask-network/./packages/typed-message/base/src/binary-encode/encode.ts","webpack://mask-network/./packages/typed-message/base/src/binary-encode/type.ts","webpack://mask-network/./packages/typed-message/base/src/core/empty.ts","webpack://mask-network/./packages/typed-message/base/src/core/image.ts","webpack://mask-network/./packages/typed-message/base/src/core/promise.ts","webpack://mask-network/./packages/typed-message/base/src/core/text.ts","webpack://mask-network/./packages/typed-message/base/src/core/tuple.ts","webpack://mask-network/./packages/typed-message/base/src/core/unknown.ts","webpack://mask-network/./packages/typed-message/base/src/deprecated-encode/index.ts","webpack://mask-network/./packages/typed-message/base/src/extension/MaskPayload.ts","webpack://mask-network/./packages/typed-message/base/src/extension/anchor.ts","webpack://mask-network/./packages/typed-message/base/src/extension/index.ts","webpack://mask-network/./packages/typed-message/base/src/transformer/Flatten.ts","webpack://mask-network/./packages/typed-message/base/src/transformer/ParseLink.ts","webpack://mask-network/./packages/typed-message/base/src/transformer/composed.ts","webpack://mask-network/./packages/typed-message/base/src/transformer/context.ts","webpack://mask-network/./packages/typed-message/base/src/utils/extract.ts","webpack://mask-network/./packages/typed-message/base/src/utils/index.ts","webpack://mask-network/./packages/typed-message/base/src/utils/internal.ts","webpack://mask-network/./packages/typed-message/base/src/utils/parseLink.ts","webpack://mask-network/./packages/typed-message/base/src/visitor/forEachChild.ts","webpack://mask-network/./packages/typed-message/base/src/visitor/visitEachChild.ts","webpack://mask-network/./node_modules/.pnpm/@locker+near-membrane-shared@0.11.10/node_modules/@locker/near-membrane-shared/dist/index.mjs"],"sourcesContent":["import { Environment, MessageTarget, WebExtensionMessage } from '@dimensiondev/holoflows-kit'\nimport { createI18NBundle, i18NextInstance } from '@masknet/shared-base'\nimport type { BasicHostHooks } from '@masknet/sandboxed-plugin-runtime'\n\nexport function createHostAPIs(isBackground: boolean): BasicHostHooks {\n    return {\n        async getPluginList() {\n            const plugins = await fetch(browser.runtime.getURL('/sandboxed-modules/plugins.json'))\n                .then((x) => x.json())\n                .catch(() => ({}))\n            // TODO: validate type of plugins here\n            return Object.entries(plugins)\n        },\n        async fetchManifest(id: string, isLocal: boolean) {\n            const prefix: string = isLocal ? 'local-plugin' : 'plugin'\n            const manifestPath = `/sandboxed-modules/${prefix}-${id}/mask-manifest.json`\n            const manifestURL = new URL(manifestPath, location.href)\n            if (manifestURL.pathname !== manifestPath) throw new TypeError('Plugin ID is invalid.')\n            return fetch(browser.runtime.getURL(manifestPath)).then((x) => x.json())\n        },\n        async fetchLocaleFiles(id, isLocal, languages) {\n            const prefix: string = isLocal ? 'local-plugin' : 'plugin'\n            const result = await Promise.allSettled(\n                languages.map(async ({ url, language }) => {\n                    const locales = await fetch(browser.runtime.getURL(`/sandboxed-modules/${prefix}-${id}/${url}`))\n                    return { language, locales: await locales.json() }\n                }),\n            )\n            const locales: Record<string, any> = {}\n            for (const _ of result) {\n                if (_.status === 'rejected') continue\n                locales[_.value.language] = _.value.locales\n            }\n            createI18NBundle(id, locales)(i18NextInstance)\n        },\n        // TODO: support signal\n        createRpcChannel(id: string) {\n            return new WebExtensionMessage<{ f: any }>({ domain: `mask-plugin-${id}-rpc` }).events.f.bind(\n                isBackground ? MessageTarget.Broadcast : Environment.ManifestBackground,\n            )\n        },\n        // TODO: support signal\n        createRpcGeneratorChannel(id: string) {\n            return new WebExtensionMessage<{ g: any }>({ domain: `mask-plugin-${id}-rpc` }).events.g.bind(\n                isBackground ? MessageTarget.Broadcast : Environment.ManifestBackground,\n            )\n        },\n    }\n}\n","export function hmr(hot: __WebpackModuleApi.Hot | undefined) {\n    const ac = new AbortController()\n    hot?.dispose(() => ac.abort())\n    return {\n        signal: ac.signal,\n        run(callback: () => () => void) {\n            try {\n                ac.signal.addEventListener('abort', callback(), { once: true })\n            } catch (error) {\n                console.error(error)\n            }\n        },\n    }\n}\n","import * as empty from './empty.js'\nimport * as unknown from './unknown.js'\nimport * as tuple from './tuple.js'\nimport * as text from './text.js'\nimport * as image from './image.js'\nimport * as promise from './promise.js'\n\nimport type { TypedMessage } from '../base.js'\nimport { composeSome } from '../utils/internal.js'\n\nexport * from './empty.js'\nexport * from './text.js'\nexport * from './image.js'\nexport * from './tuple.js'\nexport * from './unknown.js'\nexport * from './promise.js'\n\nexport type CoreTypedMessages =\n    | empty.TypedMessageEmpty\n    | text.TypedMessageText\n    | image.TypedMessageImage\n    | tuple.TypedMessageTuple\n    | tuple.TypedMessageTupleSerializable\n    | unknown.TypedMessageUnknown\n    | promise.TypedMessagePromise\n\nexport const isCoreTypedMessages = composeSome(\n    empty.isTypedMessageEmpty,\n    text.isTypedMessageText,\n    image.isTypedMessageImage,\n    tuple.isTypedMessageTuple,\n    unknown.isTypedMessageUnknown,\n    promise.isTypedMessagePromise,\n) as (x: TypedMessage) => x is CoreTypedMessages\n","import { isCoreTypedMessages, type CoreTypedMessages } from './core/index.js'\nimport { isWellKnownExtensionTypedMessages, type WellKnownExtensionTypedMessages } from './extension/index.js'\nimport { composeSome } from './utils/internal.js'\n\nexport type {\n    Meta,\n    TypedMessage,\n    NonSerializableTypedMessage,\n    NonSerializableWithAltTypedMessage,\n    SerializableTypedMessage,\n    SerializableTypedMessages,\n} from './base.js'\nexport {\n    // core\n    type CoreTypedMessages,\n    isCoreTypedMessages,\n    // empty\n    type TypedMessageEmpty,\n    isTypedMessageEmpty,\n    makeTypedMessageEmpty,\n    // image\n    type TypedMessageImage,\n    isTypedMessageImage,\n    makeTypedMessageImage,\n    // promise\n    type TypedMessagePromise,\n    type PendingPromise,\n    type FulfilledPromise,\n    type RejectedPromise,\n    type StatusExposedPromise,\n    isTypedMessagePromise,\n    makeTypedMessagePromise,\n    // text\n    type TypedMessageText,\n    type TypedMessageTextV1,\n    isTypedMessageText,\n    isTypedMessageTextV1,\n    makeTypedMessageText,\n    // tuple\n    type TypedMessageTuple,\n    type TypedMessageTupleSerializable,\n    isTypedMessageTuple,\n    isTypedMessageTupleSerializable,\n    makeTypedMessageTuple,\n    makeTypedMessageSerializableTupleFromList,\n    makeTypedMessageTupleFromList,\n    makeTypedMessageTupleSerializable,\n    // unknown\n    type TypedMessageUnknown,\n    isTypedMessageUnknown,\n    makeTypedMessageUnknown,\n} from './core/index.js'\nexport {\n    type WellKnownExtensionTypedMessages,\n    isWellKnownExtensionTypedMessages,\n    // links\n    type TypedMessageAnchor,\n    isTypedMessageAnchor,\n    makeTypedMessageAnchor,\n    // mask payload\n    type TypedMessageMaskPayload,\n    isTypedMessageMaskPayload,\n    makeTypedMessageMaskPayload,\n    unstable_STYLE_META,\n} from './extension/index.js'\nexport { decodeTypedMessageFromDocument, encodeTypedMessageToDocument } from './binary-encode/index.js'\nexport {\n    decodeTypedMessageV38ToV40Format as decodeTypedMessageFromDeprecatedFormat,\n    encodeTypedMessageV38Format as encodeTypedMessageToDeprecatedFormat,\n} from './deprecated-encode/index.js'\nexport {\n    extractImageFromTypedMessage,\n    extractTextFromTypedMessage,\n    isNonSerializableTypedMessageWithAlt,\n    isSerializableTypedMessage,\n    isTypedMessageEqual,\n} from './utils/index.js'\nexport { forEachTypedMessageChild, visitEachTypedMessageChild } from './visitor/index.js'\nexport {\n    type Transformer,\n    type TransformationContext,\n    type ComposedTransformers,\n    emptyTransformationContext,\n    createTransformationContext,\n    composeTransformers,\n    FlattenTypedMessage,\n    ParseLinkTransformer,\n    // Not ready yet.\n    // createMaskPayloadTransform,\n} from './transformer/index.js'\n\nexport type WellKnownTypedMessages = WellKnownExtensionTypedMessages | CoreTypedMessages\nexport const isWellKnownTypedMessages = composeSome(isCoreTypedMessages, isWellKnownExtensionTypedMessages)\n","import type { PluginRuntime } from '../runtime/runtime.js'\nimport * as tsResults from 'ts-results-es'\nimport { Identifier, PostIdentifier, ECKeyIdentifier, ProfileIdentifier, PostIVIdentifier } from '@masknet/shared-base'\nimport * as typedMessage from '@masknet/typed-message'\n\nexport function addPeerDependencies(runtime: PluginRuntime) {\n    runtime.addNamespaceModule('ts-results-es', tsResults)\n    runtime.addNamespaceModule('@masknet/typed-message', typedMessage)\n\n    runtime.addReExportModule('@masknet/base', { exportAllFrom: '@masknet/base/identifier.js' })\n    runtime.addNamespaceModule('@masknet/base/identifier.js', {\n        Identifier,\n        PostIdentifier,\n        ECKeyIdentifier,\n        ProfileIdentifier,\n        PostIVIdentifier,\n    })\n\n    runtime.addReExportAllModule('@masknet/plugin', ['@masknet/plugin/utils'])\n    runtime.addReExportAllModule('@masknet/plugin/utils', ['@masknet/plugin/utils/rpc'])\n    runtime.addReExportAllModule('@masknet/plugin/ui', [\n        //\n        '@masknet/plugin/ui/showSnackbar',\n        '@masknet/plugin/ui/open',\n    ])\n}\n\nexport function addCompatibilityModuleAlias(runtime: PluginRuntime) {\n    runtime.addReExportModule('@masknet/shared-base', { exportAllFrom: '@masknet/base' })\n}\n","import type { EventBasedChannel } from 'async-call-rpc'\nimport type { PluginRuntime } from './runtime.js'\nimport { combineAbortSignal } from '@masknet/kit'\n\ninterface PluginListItem {\n    normal?: boolean\n    local?: boolean\n    locales?: Array<{ url: string; language: string }>\n}\nexport interface BasicHostHooks {\n    getPluginList(): Promise<Iterable<[string, PluginListItem]>>\n    fetchManifest(id: string, isLocal: boolean): Promise<object>\n    fetchLocaleFiles(id: string, isLocal: boolean, languages: Array<{ url: string; language: string }>): void\n    createRpcChannel(id: string, signal: AbortSignal): EventBasedChannel\n    createRpcGeneratorChannel(id: string, signal: AbortSignal): EventBasedChannel\n}\nexport interface BasicHostInstance {\n    id: string\n    isLocal: boolean\n    runtime: PluginRuntime\n}\n\nexport abstract class PluginRunner<HostHooks extends BasicHostHooks, HostPluginInstance extends BasicHostInstance> {\n    constructor(\n        protected readonly hooks: HostHooks,\n        protected readonly allowLocalOverrides: boolean,\n        protected readonly signal: AbortSignal = new AbortController().signal,\n    ) {\n        signal.throwIfAborted()\n        signal.addEventListener(\n            'abort',\n            () => {\n                for (const id of this.plugins.keys()) this.stopPlugin(id)\n            },\n            { once: true },\n        )\n    }\n    protected abstract HostStartPlugin(id: string, isLocal: boolean, signal: AbortSignal): Promise<HostPluginInstance>\n    protected readonly plugins = new Map<string, [instance: HostPluginInstance, isLocal: boolean, abort: () => void]>()\n    protected pluginList: ReadonlyMap<string, PluginListItem> = new Map()\n\n    getPluginInstance(id: string) {\n        return this.plugins.get(id)\n    }\n\n    __builtInPluginInfraBridgeCallback__: ((this: this, id: string) => void) | undefined = undefined;\n    *iteratePluginInstance() {\n        for (const [instance] of this.plugins.values()) yield instance\n    }\n\n    async onPluginListUpdate() {\n        const list = new Map(await this.hooks.getPluginList())\n        this.pluginList = list\n\n        for (const [id] of list) this.__builtInPluginInfraBridgeCallback__?.(id)\n    }\n\n    async init_unbridged() {\n        const list = this.pluginList\n\n        for (const [id, [, isLocal]] of this.plugins) {\n            // Stop plugin if they disappeared from the new list.\n            if (!list.has(id)) this.stopPlugin(id)\n            // Stop plugin if it is loaded with a different profile (local to formal or reverse)\n            else if ((list.get(id)!.local && !isLocal) || (list.get(id)!.normal && isLocal)) this.stopPlugin(id)\n        }\n\n        // start new plugin\n        // TODO: check plugin start condition before call start\n        // TODO: start plugin in dependency DFS order?\n        for (const [id, data] of list) {\n            if (this.plugins.has(id)) continue\n\n            const abort = new AbortController()\n            const isLocal = !!(data.local && this.allowLocalOverrides)\n            this.hooks.fetchLocaleFiles(id, isLocal, this.pluginList.get(id)?.locales ?? [])\n            this.startPluginInner(id, isLocal, abort.signal, abort.abort.bind(abort))\n        }\n    }\n    async startPlugin_bridged(id: string, signal: AbortSignal) {\n        const abort = new AbortController()\n        const isLocal = !!(this.pluginList.get(id)!.local && this.allowLocalOverrides)\n        this.hooks.fetchLocaleFiles(id, isLocal, this.pluginList.get(id)?.locales ?? [])\n        await this.startPluginInner(id, isLocal, combineAbortSignal(abort.signal, signal), abort.abort.bind(abort))\n        return this.plugins.get(id)!\n    }\n\n    protected async startPluginInner(id: string, isLocal: boolean, signal: AbortSignal, abortFunction: () => void) {\n        this.signal.throwIfAborted()\n\n        // TODO: setup a module & fetch alias from normal version to local version\n        const instance = await this.HostStartPlugin(id, isLocal, signal)\n        this.plugins.set(id, [instance, isLocal, abortFunction])\n    }\n\n    protected stopPlugin(id: string) {\n        // TODO: stop plugin in dependency DFS order?\n        if (!this.plugins.has(id)) return\n        const [, , abort] = this.plugins.get(id)!\n        abort()\n        this.plugins.delete(id)\n    }\n}\n","export function createTimers(abortSignal, originalTimes = {\n    requestAnimationFrame,\n    cancelAnimationFrame,\n    requestIdleCallback: typeof requestIdleCallback === 'function' ? requestIdleCallback : undefined,\n    cancelIdleCallback: typeof cancelIdleCallback === 'function' ? cancelIdleCallback : undefined,\n    setTimeout,\n    clearTimeout,\n    setInterval,\n    clearInterval,\n    queueMicrotask,\n}) {\n    const { requestAnimationFrame: _requestAnimationFrame, cancelAnimationFrame: _cancelAnimationFrame, setInterval: _setInterval, clearInterval: _clearInterval, setTimeout: _setTimeout, clearTimeout: _clearTimeout, cancelIdleCallback: _cancelIdleCallback, requestIdleCallback: _requestIdleCallback, queueMicrotask: _queueMicrotask, } = originalTimes;\n    const interval_timer_id = [];\n    const idle_id = [];\n    const raf_id = [];\n    abortSignal.addEventListener('abort', () => {\n        raf_id.forEach(_cancelAnimationFrame);\n        interval_timer_id.forEach(_clearInterval);\n        _cancelIdleCallback && idle_id.forEach(_cancelIdleCallback);\n    }, { once: true });\n    return {\n        // id is a positive number, it never repeats.\n        requestAnimationFrame(callback) {\n            raf_id[raf_id.length] = _requestAnimationFrame(callback);\n            return raf_id.length;\n        },\n        cancelAnimationFrame(handle) {\n            const id = raf_id[handle - 1];\n            if (!id)\n                return;\n            _cancelAnimationFrame(id);\n        },\n        setInterval(handler, timeout) {\n            interval_timer_id[interval_timer_id.length] = _setInterval(...arguments);\n            return interval_timer_id.length;\n        },\n        clearInterval(id) {\n            if (!id)\n                return;\n            const handle = interval_timer_id[id - 1];\n            if (!handle)\n                return;\n            _clearInterval(handle);\n        },\n        setTimeout(handler, timeout) {\n            idle_id[idle_id.length] = _setTimeout(...arguments);\n            return idle_id.length;\n        },\n        clearTimeout(id) {\n            if (!id)\n                return;\n            const handle = idle_id[id - 1];\n            if (!handle)\n                return;\n            _clearTimeout(handle);\n        },\n        requestIdleCallback: _requestIdleCallback\n            ? function requestIdleCallback(callback, options) {\n                idle_id[idle_id.length] = _requestIdleCallback(callback, options);\n                return idle_id.length;\n            }\n            : undefined,\n        cancelIdleCallback: _cancelIdleCallback\n            ? function cancelIdleCallback(handle) {\n                const id = idle_id[handle - 1];\n                if (!id)\n                    return;\n                _cancelIdleCallback(id);\n            }\n            : undefined,\n        queueMicrotask(callback) {\n            _queueMicrotask(() => abortSignal.aborted || callback());\n        },\n    };\n}\n","export function createFetch(options) {\n    const { fetch: _fetch = fetch, signal, rewriteURL, replaceRequest, replaceResponse, canConnect, normalizeURL, } = options;\n    return async function fetch(input, init) {\n        let request = new Request(input, {\n            ...init,\n            signal: getMergedSignal(init?.signal, signal) || null,\n        });\n        if (normalizeURL)\n            request = new Request(normalizeURL(request.url), request);\n        if (canConnect && !(await canConnect(request.url)))\n            throw new TypeError('Failed to fetch');\n        if (rewriteURL)\n            request = new Request(rewriteURL(request.url, 'out'), request);\n        if (replaceRequest)\n            request = await replaceRequest(request);\n        let response = await _fetch(request);\n        if (rewriteURL) {\n            const { url, redirected, type } = response;\n            // Note: Response constructor does not allow us to set the url of a response.\n            //       we have to define the own property on it. This is not a good simulation.\n            //       To prevent get the original url by Response.prototype.[[get url]].call(response)\n            //       we copy a response and set it's url to empty.\n            response = new Response(response.body, response);\n            Object.defineProperties(response, {\n                url: { value: url, configurable: true },\n                redirected: { value: redirected, configurable: true },\n                type: { value: type, configurable: true },\n            });\n            Object.defineProperty(response, 'url', {\n                configurable: true,\n                value: rewriteURL(url, 'in'),\n            });\n        }\n        if (replaceResponse)\n            response = await replaceResponse(response);\n        return response;\n    };\n}\nfunction getMergedSignal(signal, signal2) {\n    if (!signal)\n        return signal2;\n    if (!signal2)\n        return signal;\n    const abortController = new AbortController();\n    signal.addEventListener('abort', () => abortController.abort(), { once: true });\n    signal2.addEventListener('abort', () => abortController.abort(), { once: true });\n    return abortController.signal;\n}\n","import { makeGlobalThis } from '@masknet/compartment'\nimport createMembrane from '@masknet/membrane'\nimport { createFetch, createTimers } from '@masknet/web-endowments'\n\nexport function createGlobal(pluginID: string, manifest: unknown, signal: AbortSignal) {\n    const { proxy: localThis, revoke } = Proxy.revocable(makeGlobalThis(Object.prototype), {})\n    signal.addEventListener('abort', revoke, { once: true })\n\n    // Note: move it to elsewhere\n    // Note: reenable this after https://github.com/facebook/react/pull/25198/files\n    // if (typeof harden === 'function') harden(console)\n\n    const endowments = {\n        AbortController,\n        AbortSignal,\n        Blob,\n        CustomEvent,\n        DOMException,\n        Crypto,\n        CryptoKey,\n        Event,\n        EventTarget,\n        File,\n        FileReader,\n        FormData,\n        Headers,\n        IdleDeadline,\n        ReadableStream,\n        ReadableStreamDefaultController,\n        ReadableStreamDefaultReader,\n        ReadableStreamBYOBReader,\n        ReadableStreamBYOBRequest,\n        ReadableByteStreamController,\n        Request,\n        Response,\n        SubtleCrypto,\n        TextDecoder,\n        TextDecoderStream,\n        TextEncoder,\n        TextEncoderStream,\n        // TODO: provide a custom-scheme friendly URL constructor?\n        URL,\n        URLSearchParams,\n        WebAssembly,\n        WritableStream,\n        WritableStreamDefaultController,\n        WritableStreamDefaultWriter,\n\n        crypto,\n        atob,\n        btoa,\n        ...createTimers(signal),\n        fetch: createFetch({\n            signal,\n            canConnect(url) {\n                if (new URL(url).protocol.endsWith('-extension:')) return false\n                // TODO: add content security policy\n                return true\n            },\n            // rewriteURL:\n            // TODO: support rewrite URL of mask-modules\n            // normalizeURL:\n            // TODO: support normalize relative URL\n        }),\n    }\n\n    const membrane = createMembrane(globalThis, localThis, {\n        endowments: Object.getOwnPropertyDescriptors(endowments),\n        // distortionCallback: (o) => (o === globalThis ? localThis : o),\n    })\n\n    // Note: the membrane library will replace all intrinsic with the link to the blueRealm\n    // we need to avoid it.\n    if (typeof window === 'object') Object.defineProperty(localThis, 'window', { value: localThis })\n    Object.defineProperties(localThis, {\n        self: { value: localThis, configurable: true, writable: true },\n        globalThis: { value: localThis, configurable: true, writable: true },\n        console: { value: console, configurable: true, writable: true },\n    })\n    membrane.virtualEnvironment.link('console')\n\n    return { localThis, membrane }\n}\n","/// <reference types=\"@masknet/global-types/module-loader\" />\n\nimport {\n    imports,\n    type Module,\n    Evaluators,\n    type VirtualModuleRecord,\n    type ExportAllBinding,\n    type ExportBinding,\n} from '@masknet/compartment'\nimport type { MembraneInstance } from '@masknet/membrane'\nimport { createGlobal } from './global.js'\n\nexport class PluginRuntime {\n    declare readonly id: string\n    constructor(\n        id: string,\n        private origin: string,\n        manifest: unknown,\n        signal: AbortSignal,\n    ) {\n        const { localThis, membrane } = createGlobal(id, manifest, signal)\n\n        Object.defineProperty(this, 'id', { value: id })\n        this.globalThis = membrane.execute(() => localThis)\n        this.#membrane = membrane\n        this.#signal = signal\n        this.#Module = new Evaluators({ globalThis: localThis }).Module\n    }\n    async imports(specifier: string) {\n        const module = await this.#importHook(undefined, specifier)\n        // Note: moduleNamespace is a Blue::Promise<Red::ModuleNamespace>\n        //       and it might become a Blue::Promise<Red::any> if there is a \"then()\" method defined.\n        const moduleNamespace = await imports(module)\n        return this.#membrane.execute(() => moduleNamespace)\n    }\n    globalThis: typeof globalThis\n\n    #moduleMap = new Map<string, VirtualModuleRecord>()\n    addReExportModule(moduleName: string, ...bindings: Array<ExportBinding | ExportAllBinding>) {\n        if (this.#moduleMap.has(moduleName)) throw new TypeError('Module is already defined.')\n        this.#moduleMap.set(moduleName, { bindings })\n    }\n    addReExportAllModule(moduleName: string, from: string[]) {\n        this.#moduleMap.set(moduleName, { bindings: from.map((x) => ({ exportAllFrom: x })) })\n    }\n    addNamespaceModule(moduleName: string, blueNamespace: object) {\n        if (this.#moduleMap.has(moduleName)) throw new TypeError('Module is already defined.')\n        const keys = Object.keys(blueNamespace)\n        this.#moduleMap.set(moduleName, {\n            bindings: keys.map((key) => ({ export: key })),\n            execute: (redEnvironment) => {\n                function copyNamespace(redNamespace: any) {\n                    for (const k of keys) redEnvironment[k] = redNamespace[k]\n                }\n                Object.freeze(copyNamespace)\n                this.#membrane.execute(() => copyNamespace)(blueNamespace)\n            },\n        })\n    }\n\n    // internals\n    #instanceFromURL = new Map<string, Module>()\n    async #loadHook(specifier: string, referral: string | undefined) {\n        if (!specifier.startsWith('.') && !specifier.startsWith('mask-modules://')) {\n            if (this.#moduleMap.has(specifier))\n                return { normalizedURL: specifier, source: this.#moduleMap.get(specifier)! }\n            else throw new SyntaxError(`Module not found: ${specifier}`)\n        }\n\n        // normalize URL\n        const target = new URL(specifier, referral?.includes('://') ? referral : undefined)\n        const oldProtocol = target.protocol\n        target.protocol = 'https:'\n        target.protocol = oldProtocol\n        const normalizedURL = target.href\n\n        if (oldProtocol === 'mask-modules:' && !normalizedURL.startsWith('mask-modules://' + this.origin + '/')) {\n            throw new SyntaxError('Import from other plugin is not supported. Try to import: ' + normalizedURL)\n        }\n\n        const source: VirtualModuleRecord = await __mask__module__reflection__(normalizedURL)\n\n        return { normalizedURL, source }\n    }\n    async #importHook(referral: string | undefined, specifier: string): Promise<Module> {\n        this.#signal.throwIfAborted()\n        const { normalizedURL, source } = await this.#loadHook(specifier, referral)\n\n        if (this.#instanceFromURL.has(normalizedURL)) return this.#instanceFromURL.get(normalizedURL)!\n        const instance = new this.#Module(source, {\n            importHook: this.#importHook.bind(this, normalizedURL),\n            importMetaHook: source.needsImportMeta ? (meta) => Object.assign(meta, { url: normalizedURL }) : undefined,\n        })\n        this.#instanceFromURL.set(normalizedURL, instance)\n        return instance\n    }\n    #signal: AbortSignal\n    #Module: typeof Module\n    #membrane: MembraneInstance\n}\n","export function isManifest(_manifest: any): _manifest is Manifest {\n    // TODO: validate with JSON schema mask-plugin-infra /packages/manifest/plugin.schema.json\n    return true\n}\n\n// TODO: Those type definitions should be moved to mask-plugin-infra /packages/manifest/manifest.d.ts\ninterface Manifest {\n    manifest_version: 1\n    id: string\n    entries?: Entries\n    contributes?: Contributes\n    locales?: string\n}\ninterface Entries {\n    rpc?: string\n    rpcGenerator?: string\n    background?: string\n    content_script?: string\n    popup?: string\n    dashboard?: string\n}\ninterface Contributes {\n    backup?: string\n}\n","export function getURL(id: string, path: string, isLocal: boolean) {\n    const pluginOrigin = (isLocal ? 'local-plugin-' : 'plugin-') + id\n    const u = new URL(path, 'https://' + pluginOrigin)\n    u.protocol = 'mask-modules:'\n    return u.toString()\n}\n","import { decode } from '@msgpack/msgpack'\nimport { Result } from 'ts-results-es'\nimport type { TypedMessage } from '../base.js'\nimport { makeTypedMessageText, makeTypedMessageTuple, makeTypedMessageUnknown } from '../core/index.js'\nimport { TypedMessageBinaryEncodingTypeEnum } from './type.js'\n\nconst HEAD = '[@masknet/typed-message] '\nexport function decodeTypedMessageFromDocument(bin: Uint8Array) {\n    return Result.wrap(() => {\n        const doc = decode(bin)\n        if (!Array.isArray(doc)) throw new Error(`${HEAD}Invalid document`)\n        if (doc[0] === 0) return makeTypedMessageText(doc[1], decodeMetadata(doc[2]))\n        const [docVer, ...message] = doc\n        if (typeof docVer !== 'number') throw new Error(`${HEAD}Invalid document`)\n        if (docVer !== 1) throw new Error(`${HEAD}Unknown document version`)\n        const result = decodeTypedMessage(message)\n        fixU8Array(result)\n        return result\n    })\n}\nfunction decodeTypedMessage(tm: readonly unknown[]): TypedMessage {\n    const [type] = tm\n    if (typeof type !== 'string' && typeof type !== 'number') throw new TypeError(`${HEAD}Invalid TypedMessage`)\n    if (type === TypedMessageBinaryEncodingTypeEnum.Text) return decodeTypedMessageText(tm)\n    if (type === TypedMessageBinaryEncodingTypeEnum.Tuple) return decodeTypedMessageTuple(tm)\n    return makeTypedMessageUnknown(tm)\n}\nfunction decodeTypedMessageText([, version, meta, text, format]: readonly unknown[]) {\n    assertNumber(version)\n    assertString(text)\n    return makeTypedMessageText(text, decodeMetadata(meta))\n}\nfunction decodeTypedMessageTuple([, version, meta, items]: readonly unknown[]) {\n    assertNumber(version)\n    if (!Array.isArray(items)) throw new TypeError(`${HEAD}Invalid TypedMessageTuple`)\n    return makeTypedMessageTuple(items.map(decodeTypedMessage), decodeMetadata(meta))\n}\nfunction decodeMetadata(meta: unknown): ReadonlyMap<string, unknown> | undefined {\n    if (meta === null) return undefined\n    if (typeof meta !== 'object') throw new TypeError(`${HEAD}Invalid TypedMessage`)\n    if (Object.getPrototypeOf(meta) !== Object.prototype) throw new TypeError(`${HEAD}Invalid TypedMessage`)\n    return new Map(Object.entries(meta))\n}\n\nfunction assertNumber(x: unknown): asserts x is number {\n    if (typeof x !== 'number') throw new TypeError(`${HEAD}Invalid TypedMessage`)\n}\nfunction assertString(x: unknown): asserts x is string {\n    if (typeof x !== 'string') throw new TypeError(`${HEAD}Invalid TypedMessage`)\n}\n// Detach Uint8Array from it's underlying buffer\nfunction fixU8Array(input: unknown) {\n    // for Array and object\n    if (typeof input !== 'object' || input === undefined || input === null) return\n    for (const key of Object.keys(input)) {\n        const value = Reflect.get(input, key)\n        if (value instanceof Uint8Array) {\n            Reflect.set(input, key, value.slice())\n        } else {\n            fixU8Array(value)\n        }\n    }\n}\n","import {\n    isTypedMessageText,\n    isTypedMessageTupleSerializable,\n    type TypedMessageText,\n    type TypedMessageTupleSerializable,\n} from '../core/index.js'\nimport type { SerializableTypedMessages, TypedMessage } from '../base.js'\nimport { encode } from '@msgpack/msgpack'\nimport { TypedMessageBinaryEncodingTypeEnum } from './type.js'\n\nconst HEAD = '[@masknet/typed-message] '\nexport function encodeTypedMessageToDocument(tm: SerializableTypedMessages) {\n    if (isTypedMessageText(tm)) return encode([0, tm.content, encodeMeta(tm)])\n    const doc = [1, ...encodeTypedMessage(tm)]\n    return encode(doc)\n}\nfunction encodeTypedMessage(tm: SerializableTypedMessages): any[] {\n    if (tm.serializable === false) {\n        if (tm.alt) return encodeTypedMessage(tm.alt)\n        throw new TypeError(`${HEAD}TypedMessage ${tm.type} does not support serialization.`)\n    }\n    if (isTypedMessageText(tm)) return encodeTypedMessageText(tm)\n    if (isTypedMessageTupleSerializable(tm)) return encodeTypedMessageTuple(tm)\n    throw new TypeError(`${HEAD}Unsupported TypedMessage ${tm.type} to be serialized.`)\n}\nfunction encodeTypedMessageText(tm: TypedMessageText): any[] {\n    // TODO: TextFormat\n    return [TypedMessageBinaryEncodingTypeEnum.Text, tm.version, encodeMeta(tm), tm.content]\n}\nfunction encodeTypedMessageTuple(tm: TypedMessageTupleSerializable): any[] {\n    return [TypedMessageBinaryEncodingTypeEnum.Tuple, tm.version, encodeMeta(tm), tm.items.map(encodeTypedMessage)]\n}\n\nfunction encodeMeta(tm: TypedMessage) {\n    if (!tm.meta) return null\n    const record: Record<string, any> = { __proto__: null }\n    for (const [key, val] of tm.meta) {\n        if (typeof key !== 'string') continue\n        if (typeof val === 'undefined') continue\n        try {\n            record[key] = collectValue(val)\n        } catch (err) {\n            console.warn(`${HEAD}key ${key} is dropped due to the error`, err)\n        }\n    }\n    return record\n}\nfunction collectValue(val: any): any {\n    try {\n        const type = typeof val\n        if (val === undefined) {\n            console.warn(`${HEAD}undefined converted to null.`)\n            return null\n        }\n        if (type === 'number' || val === null || type === 'boolean' || type === 'string') return val\n\n        if (type === 'bigint' || type === 'function' || type === 'symbol') {\n            throw new TypeError(`${HEAD}Unsupported type ${type}`)\n        }\n\n        if (val instanceof Uint8Array) return new Uint8Array(val)\n        if (val instanceof ArrayBuffer) {\n            throw new TypeError(`${HEAD}ArrayBuffer must be Uint8Array.`)\n        }\n\n        if (Array.isArray(val)) return Array.from(val).map(collectValue)\n\n        const proto = Object.getPrototypeOf(val)\n        if (proto !== Object.prototype && proto !== null) {\n            throw new TypeError(`${HEAD}unsupported value with a non trivial prototype.`)\n        }\n\n        const result: Record<string, any> = {}\n        for (const key of Object.keys(val)) {\n            const v = val[key]\n            result[key] = collectValue(v)\n        }\n        return result\n    } catch (err) {\n        console.warn(HEAD, 'When converting value', val, ', an error occurred', err)\n        throw err\n    }\n}\n","/** @internal */\nexport enum TypedMessageBinaryEncodingTypeEnum {\n    Tuple = 0,\n    Text = 1,\n}\n","import type { SerializableTypedMessage } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\nexport interface TypedMessageEmpty extends SerializableTypedMessage<1> {\n    readonly type: 'empty'\n    readonly meta?: undefined\n}\n\nexport const isTypedMessageEmpty = createIsType<TypedMessageEmpty>('empty')\n\nlet empty: TypedMessageEmpty\nexport function makeTypedMessageEmpty(): TypedMessageEmpty {\n    if (empty) return empty\n\n    empty = {\n        type: 'empty',\n        serializable: true,\n        version: 1,\n        meta: undefined,\n    }\n    Object.setPrototypeOf(empty, null)\n    Object.freeze(empty)\n    return empty\n}\n","import type { NonSerializableTypedMessage, Meta } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\n/**\n * A single image\n * TODO: it should be serializable but still not decided how to do that yet.\n */\nexport interface TypedMessageImage extends NonSerializableTypedMessage {\n    readonly type: 'image'\n    readonly image: string | Blob\n    readonly width?: number\n    readonly height?: number\n}\n\nexport const isTypedMessageImage = createIsType<TypedMessageImage>('image')\n\nexport function makeTypedMessageImage(\n    image: TypedMessageImage['image'],\n    size?: { width: number; height: number },\n    meta?: Meta,\n): TypedMessageImage {\n    return {\n        type: 'image',\n        serializable: false,\n        image,\n        width: size?.width,\n        height: size?.height,\n        meta,\n    }\n}\n","import type { TypedMessage, NonSerializableTypedMessage } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\nexport interface PendingPromise<T> extends Promise<T> {\n    status: 'pending'\n}\nexport interface FulfilledPromise<T> extends Promise<T> {\n    readonly status: 'fulfilled'\n    readonly value: T\n}\nexport interface RejectedPromise<T> extends Promise<T> {\n    readonly status: 'rejected'\n    readonly reason: any\n}\nexport type StatusExposedPromise<T> = PendingPromise<T> | FulfilledPromise<T> | RejectedPromise<T>\nexport interface TypedMessagePromise<T extends TypedMessage = TypedMessage> extends NonSerializableTypedMessage {\n    readonly type: 'promise'\n    readonly promise: StatusExposedPromise<T>\n    readonly meta?: undefined\n    /** What to display when the message is not ready. */\n    readonly alt?: TypedMessage\n}\n\nexport const isTypedMessagePromise = createIsType<TypedMessagePromise>('promise')\n\nexport function makeTypedMessagePromise<T extends TypedMessage = TypedMessage>(\n    promise: Promise<T>,\n    alt?: TypedMessage,\n): TypedMessagePromise<T> {\n    const x: TypedMessagePromise<T> = {\n        type: 'promise',\n        serializable: false,\n        promise: getPromiseWithStatus(promise),\n        alt,\n        meta: undefined,\n    }\n    return x\n}\nconst seen = new WeakMap<Promise<any>, StatusExposedPromise<any>>()\nfunction getPromiseWithStatus<T>(promise: Promise<T>): StatusExposedPromise<T> {\n    // let's assume it already handle the status update\n    if ('status' in promise) return promise as StatusExposedPromise<T>\n    if (seen.has(promise)) return seen.get(promise)!\n    const _ = Promise.resolve(promise) as StatusExposedPromise<T>\n    Object.defineProperty(_, 'status', { configurable: true, value: 'pending' })\n    _.then(\n        (value) => {\n            Object.defineProperties(_, {\n                status: { value: 'fulfilled' },\n                value: { value },\n            })\n        },\n        (error) => {\n            Object.defineProperties(_, {\n                status: { value: 'rejected' },\n                reason: { value: error },\n            })\n        },\n    )\n    seen.set(promise, _)\n    return _\n}\n","import type { SerializableTypedMessage, TypedMessage, Meta } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\nexport type TypedMessageText = TypedMessageTextV1\n\n/** A text message */\nexport interface TypedMessageTextV1 extends SerializableTypedMessage<1> {\n    readonly type: 'text'\n    readonly content: string\n}\n\nexport const isTypedMessageTextV1 = createIsType<TypedMessageTextV1>('text', 1)\n\nexport const isTypedMessageText: (x: TypedMessage) => x is TypedMessageText = isTypedMessageTextV1\n\nexport function makeTypedMessageText(text: string, meta?: Meta): TypedMessageTextV1 {\n    return {\n        type: 'text',\n        version: 1,\n        serializable: true,\n        content: text,\n        meta,\n    }\n}\n","import type { SerializableTypedMessage, SerializableTypedMessages, TypedMessage, Meta } from '../base.js'\nimport { isSerializableTypedMessage } from '../utils/index.js'\nimport { composeEvery } from '../utils/internal.js'\n\n/** Multiple TypedMessages (ordered) */\nexport interface TypedMessageTuple<T extends readonly TypedMessage[] = readonly TypedMessage[]> extends TypedMessage {\n    readonly type: 'tuple'\n    readonly items: T\n}\nexport interface TypedMessageTupleSerializable<\n    T extends readonly SerializableTypedMessages[] = readonly SerializableTypedMessages[],\n> extends SerializableTypedMessage<1>,\n        TypedMessageTuple<T> {\n    readonly type: 'tuple'\n}\n\nexport function isTypedMessageTuple(x: TypedMessage): x is TypedMessageTuple | TypedMessageTupleSerializable {\n    return x.type === 'tuple'\n}\n\nexport const isTypedMessageTupleSerializable: (x: TypedMessage) => x is TypedMessageTupleSerializable = composeEvery(\n    isTypedMessageTuple,\n    isSerializableTypedMessage,\n) as any\n\nexport function makeTypedMessageTuple<T extends readonly TypedMessage[] = readonly TypedMessage[]>(\n    items: T,\n    meta?: Meta,\n): TypedMessageTuple<T> {\n    return { type: 'tuple', items, meta }\n}\nexport function makeTypedMessageTupleFromList<T extends readonly TypedMessage[] = readonly TypedMessage[]>(\n    ...args: T\n): TypedMessageTuple<T> {\n    return { type: 'tuple', items: args }\n}\n\nexport function makeTypedMessageTupleSerializable<\n    T extends readonly SerializableTypedMessages[] = readonly SerializableTypedMessages[],\n>(items: T, meta?: Meta): TypedMessageTupleSerializable<T> {\n    return { type: 'tuple', version: 1, serializable: true, items, meta }\n}\n\nexport function makeTypedMessageSerializableTupleFromList<\n    T extends readonly SerializableTypedMessages[] = readonly SerializableTypedMessages[],\n>(...args: T): TypedMessageTupleSerializable<T> {\n    return { type: 'tuple', version: 1, items: args, serializable: true }\n}\n","import type { NonSerializableTypedMessage } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\nexport interface TypedMessageUnknown extends NonSerializableTypedMessage {\n    readonly type: 'unknown'\n    /** The unrecognized data */\n    readonly raw?: unknown\n    readonly meta?: undefined\n}\nexport const isTypedMessageUnknown = createIsType<TypedMessageUnknown>('unknown')\n\nexport function makeTypedMessageUnknown(raw?: unknown): TypedMessageUnknown {\n    return { type: 'unknown', serializable: false, meta: undefined, raw }\n}\n","import { None, Ok, Result } from 'ts-results-es'\nimport { makeTypedMessageText, type TypedMessageText } from '../core/index.js'\n\nexport function encodeTypedMessageV38Format(message: TypedMessageText) {\n    const encoder = new TextEncoder()\n    if (message.meta?.size) {\n        const rec = Object.fromEntries(message.meta.entries())\n        return encoder.encode(`${JSON.stringify(rec)}\\u{1F9E9}${message.content}`)\n    }\n    return encoder.encode(message.content)\n}\nexport function decodeTypedMessageV38ToV40Format(raw: Uint8Array, version: -38 | -39 | -40) {\n    const decoder = new TextDecoder()\n    const text = Result.wrap(() => decoder.decode(raw))\n    if (text.isErr()) return text\n\n    if (version === -38) {\n        const maybeMetadata = (() => {\n            if (!text.value.includes('\\u{1F9E9}')) return None\n            const [maybeJSON] = text.value.split('\\u{1F9E9}')\n            return Result.wrap(() => JSON.parse(maybeJSON))\n                .toOption()\n                .map((val) => {\n                    if (typeof val !== 'object' || Array.isArray(val)) return new Map()\n                    return new Map(Object.entries(val))\n                })\n        })()\n        return Ok(\n            maybeMetadata.isSome()\n                ? makeTypedMessageText(text.value.replace(/.+\\u{1F9E9}/u, ''), maybeMetadata.value)\n                : makeTypedMessageText(text.value),\n        )\n    }\n    return Ok(makeTypedMessageText(text.value))\n}\n","import type { Meta, TypedMessage } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\n\n/**\n * This TypedMessage represents an encrypted TypedMessage.\n */\nexport interface TypedMessageMaskPayload extends TypedMessage {\n    readonly type: 'x-mask-payload'\n    readonly message: TypedMessage\n}\nexport const isTypedMessageMaskPayload = createIsType<TypedMessageMaskPayload>('x-mask-payload')\n\nexport function makeTypedMessageMaskPayload(\n    message: TypedMessageMaskPayload['message'],\n    meta?: Meta,\n): TypedMessageMaskPayload {\n    return {\n        type: 'x-mask-payload',\n        message,\n        meta,\n    }\n}\n","import type { Meta, NonSerializableWithAltTypedMessage } from '../base.js'\nimport { createIsType } from '../utils/internal.js'\nimport { makeTypedMessageText, type TypedMessageImage, type TypedMessageText } from '../core/index.js'\n\n/** It represents a single link. */\nexport interface TypedMessageAnchor extends NonSerializableWithAltTypedMessage {\n    readonly type: 'x-anchor'\n    readonly category: 'normal' | 'user' | 'cash' | 'hash'\n    readonly href: string\n    readonly content: string\n    readonly alt: TypedMessageText\n    /** The message that should be displayed as a decorate after the link. */\n    readonly postImage?: TypedMessageImage\n}\n\nexport const isTypedMessageAnchor = createIsType<TypedMessageAnchor>('x-anchor')\n\nexport function makeTypedMessageAnchor(\n    category: TypedMessageAnchor['category'],\n    href: TypedMessageAnchor['href'],\n    content: TypedMessageAnchor['content'],\n    postImage?: TypedMessageImage,\n    meta?: Meta | undefined,\n): TypedMessageAnchor {\n    return {\n        type: 'x-anchor',\n        serializable: false,\n        category,\n        href,\n        content,\n        alt: makeTypedMessageText(`[${content}](${href})`, meta),\n        postImage,\n        meta,\n    }\n}\n","import { composeSome } from '../utils/internal.js'\nimport * as anchor from './anchor.js'\nimport * as MaskPayload from './MaskPayload.js'\n\nexport * from './anchor.js'\nexport * from './MaskPayload.js'\n\n/** This key can be used in meta. It represents CSS when rendering this message. */\nexport const unstable_STYLE_META = 'unstable_STYLE'\nexport type WellKnownExtensionTypedMessages = anchor.TypedMessageAnchor | MaskPayload.TypedMessageMaskPayload\n\nexport const isWellKnownExtensionTypedMessages = composeSome(\n    anchor.isTypedMessageAnchor,\n    MaskPayload.isTypedMessageMaskPayload,\n)\n","import {\n    isTypedMessageEmpty,\n    isTypedMessagePromise,\n    isTypedMessageText,\n    isTypedMessageTuple,\n    makeTypedMessageEmpty,\n    makeTypedMessageText,\n    makeTypedMessageTuple,\n    makeTypedMessageTupleSerializable,\n} from '../core/index.js'\nimport type { Meta, TypedMessage } from '../base.js'\nimport { visitEachTypedMessageChild } from '../visitor/index.js'\nimport { isSerializableTypedMessage } from '../utils/index.js'\nimport { emptyTransformationContext, type TransformationContext } from './context.js'\nimport { unstable_STYLE_META } from '../extension/index.js'\nimport { isEqual } from 'lodash-es'\n\nexport function FlattenTypedMessage(message: TypedMessage, context: TransformationContext): TypedMessage {\n    if (isTypedMessagePromise(message) && 'value' in message.promise)\n        return FlattenTypedMessage(message.promise.value, context)\n    if (isTypedMessageTuple(message)) {\n        const next = message.items\n            .map((x) => FlattenTypedMessage(x, context))\n            .flatMap((x) => (isTypedMessageTuple(x) ? (x.meta ? x : x.items) : x))\n            .filter((x) => !isTypedMessageEmpty(x))\n            .reduce<TypedMessage[]>((result, current) => {\n                const lastItem = result.at(-1)\n                if (!lastItem) return result.concat(current)\n                if (!isTypedMessageText(current) || !isTypedMessageText(lastItem)) return result.concat(current)\n                if (!isTextWithMetaCanBeMerged(lastItem.meta, current.meta)) return result.concat(current)\n                // Only concat when last one and current one are both text and have no meta.\n                result.pop()\n                result.push(makeTypedMessageText(`${lastItem.content} ${current.content}`, lastItem.meta))\n                return result\n            }, [])\n\n        if (!message.meta) {\n            if (next.length === 0) return makeTypedMessageEmpty()\n            if (next.length === 1) return next[0]\n        }\n        if (next.every(isSerializableTypedMessage)) return makeTypedMessageTupleSerializable(next, message.meta)\n        return makeTypedMessageTuple(next, message.meta)\n    }\n    return visitEachTypedMessageChild(message, FlattenTypedMessage, context)\n}\n\nfunction isTextWithMetaCanBeMerged(a: Meta | undefined, b: Meta | undefined) {\n    if (a === b) return true\n    if (a?.size !== 1) return false\n    if (a?.size !== b?.size) return false\n    if (!a?.has(unstable_STYLE_META) || !b.has(unstable_STYLE_META)) return false\n    const a_style = a.get(unstable_STYLE_META)!\n    const b_style = b.get(unstable_STYLE_META)!\n    return isEqual(a_style, b_style)\n}\nFlattenTypedMessage.NoContext = (message: TypedMessage) => FlattenTypedMessage(message, emptyTransformationContext)\n","import type { TypedMessage } from '../base.js'\nimport { isTypedMessageText, makeTypedMessageTupleSerializable, makeTypedMessageText } from '../core/index.js'\nimport { makeTypedMessageAnchor } from '../extension/index.js'\nimport { parseLink } from '../utils/parseLink.js'\nimport { visitEachTypedMessageChild } from '../visitor/index.js'\nimport type { TransformationContext } from './context.js'\n\nexport function ParseLinkTransformer(message: TypedMessage, context: TransformationContext): TypedMessage {\n    if (isTypedMessageText(message)) {\n        const parsed = parseLink(message.content)\n        if (parsed.length === 1 && parsed[0].type === 'text') return message\n        return makeTypedMessageTupleSerializable(\n            parsed.map((i) => {\n                if (i.type === 'text') return makeTypedMessageText(i.content)\n                return makeTypedMessageAnchor(i.category, i.content, i.content)\n            }),\n            message.meta,\n        )\n    }\n    return visitEachTypedMessageChild(message, ParseLinkTransformer, context)\n}\n","import type { TypedMessage } from '../base.js'\nimport type { TransformationContext } from './context.js'\nimport type { Transformer } from './index.js'\nexport interface ComposedTransformers {\n    subscription: {\n        getCurrentValue: () => Transformer\n        subscribe(f: () => void): () => void\n    }\n    addTransformer(\n        transformer: Transformer | ComposedTransformers['subscription'],\n        priority: number,\n        signal?: AbortSignal,\n    ): () => void\n}\nexport function composeTransformers(): ComposedTransformers {\n    const event = new EventTarget()\n    const onUpdate = () => {\n        composedTransformer = undefined\n        event.dispatchEvent(new Event('update'))\n    }\n    const transformers = new Set<readonly [Transformer, number]>()\n\n    let composedTransformer: Transformer | undefined\n    function composed(message: TypedMessage, context: TransformationContext) {\n        return [...transformers].sort((a, b) => b[1] - a[1]).reduce((p, [c]) => c(p, context), message)\n    }\n\n    const subscription = {\n        getCurrentValue: () =>\n            (composedTransformer ??= (message, context) => {\n                return composed(message, context)\n            }),\n        subscribe(f: () => void) {\n            event.addEventListener('update', f)\n            return () => {\n                event.removeEventListener('update', f)\n            }\n        },\n    }\n    return {\n        subscription,\n        addTransformer(t, priority, signal) {\n            const f_priority = [\n                typeof t === 'function'\n                    ? t\n                    : (message: TypedMessage, context: TransformationContext) => t.getCurrentValue()(message, context),\n                priority,\n            ] as const\n            transformers.add(f_priority)\n            onUpdate()\n\n            const cancelSubscription = typeof t === 'function' ? () => {} : t.subscribe(onUpdate)\n\n            const remove = () => {\n                transformers.delete(f_priority)\n                cancelSubscription()\n                onUpdate()\n            }\n\n            signal?.addEventListener('abort', remove)\n            return remove\n        },\n    }\n}\n","export interface TransformationContext {\n    skipMaskPayloadTransform?: boolean\n    authorHint?: { network: string; userId: string }\n    currentProfile?: { network: string; userId: string }\n    postURL?: string\n    reportDecryptedInfo?(\n        iv?: Uint8Array,\n        claimedAuthor?: { network: string; userId: string },\n        publicShared?: boolean,\n    ): void\n}\nexport function createTransformationContext(): TransformationContext {\n    return Object.freeze({})\n}\nexport const emptyTransformationContext = createTransformationContext()\n","import type { TypedMessage } from '../base.js'\nimport { isTypedMessageText, isTypedMessageImage } from '../core/index.js'\nimport { isTypedMessageAnchor } from '../extension/index.js'\nimport { type Option, Some, None } from 'ts-results-es'\nimport { forEachTypedMessageChild } from '../visitor/index.js'\n\n/**\n * Get inner text from a TypedMessage\n * @param message message\n */\nexport function extractTextFromTypedMessage(\n    message: TypedMessage | null,\n    options?: { linkAsText: boolean },\n): Option<string> {\n    if (!message) return None\n\n    const text: string[] = []\n    function visitor(message: TypedMessage) {\n        if (isTypedMessageText(message)) text.push(message.content)\n        else if (isTypedMessageAnchor(message)) {\n            text.push(message.content)\n            if (options?.linkAsText) text.push(`(${message.href})`)\n        } else forEachTypedMessageChild(message, visitor)\n    }\n    visitor(message)\n    forEachTypedMessageChild(message, visitor)\n    if (text.length) return Some(text.join(' '))\n    return None\n}\nexport function extractImageFromTypedMessage(message: TypedMessage | null): Array<string | Blob> {\n    if (!message) return []\n\n    const image: Array<string | Blob> = []\n    function visitor(message: TypedMessage): void {\n        if (isTypedMessageImage(message)) return void image.push(message.image)\n        return forEachTypedMessageChild(message, visitor)\n    }\n    visitor(message)\n    forEachTypedMessageChild(message, visitor)\n    return image\n}\n","import type {\n    TypedMessage,\n    SerializableTypedMessages,\n    SerializableTypedMessage,\n    NonSerializableWithAltTypedMessage,\n} from '../base.js'\nimport { isEqual } from 'lodash-es'\n\nexport * from './extract.js'\n\nexport function isNonSerializableTypedMessageWithAlt(x: TypedMessage): x is NonSerializableWithAltTypedMessage {\n    const y = x as NonSerializableWithAltTypedMessage\n    if (y.serializable !== false) return false\n    if (!y.alt) return false\n    return isSerializableTypedMessage(y.alt)\n}\nexport function isSerializableTypedMessage(x: TypedMessage): x is SerializableTypedMessages {\n    if ((x as SerializableTypedMessage<number>).serializable) return true\n    return isNonSerializableTypedMessageWithAlt(x)\n}\n\n/**\n * This is a tree compare algorithm, may need to find a more efficient one from NPM\n */\nexport function isTypedMessageEqual(message1: TypedMessage, message2: TypedMessage): boolean {\n    if (message1.type !== message2.type) return false\n    if (message1.meta !== message2.meta) return false\n    // perform a deep equal\n    return isEqual(message1, message2)\n}\n","import type { SerializableTypedMessage, TypedMessage } from '../base.js'\n\n/** @internal */\nexport function createIsType<T extends TypedMessage>(x: T['type'], version?: number) {\n    return (y: TypedMessage): y is T => {\n        if (version !== undefined && (y as SerializableTypedMessage<number>).version !== version) return false\n        return y.type === x\n    }\n}\n/** @internal */\nexport function composeSome<Args extends any[]>(...fns: Array<(...args: Args) => boolean>) {\n    return (...args: Args) => fns.some((f) => f(...args))\n}\n\n/** @internal */\nexport function composeEvery<Args extends any[]>(...fns: Array<(...args: Args) => boolean>) {\n    return (...args: Args) => fns.every((f) => f(...args))\n}\n","import * as anchorme from /* webpackDefer: true */ 'anchorme'\nimport type { TypedMessageAnchor } from '../extension/index.js'\n\nexport type ParseLinkResult =\n    | {\n          type: 'text'\n          content: string\n      }\n    | {\n          type: 'link'\n          content: string\n          category: TypedMessageAnchor['category']\n      }\n\nexport function parseLink(text: string): ParseLinkResult[] {\n    // ESM-CJS interop\n    const parsed = (anchorme.default.default || anchorme.default).list(text)\n\n    const result: ParseLinkResult[] = []\n\n    let start = 0\n    for (const x of parsed) {\n        if (x.isURL) {\n            result.push({ type: 'text', content: text.slice(start, x.start) })\n            result.push({ type: 'link', content: x.string, category: 'normal' })\n        } else {\n            result.push({ type: 'text', content: text.slice(start, x.end) })\n        }\n        start = x.end\n    }\n    result.push({ type: 'text', content: text.slice(start, text.length) })\n    return result.filter((x) => x.content).flatMap((x) => (x.type === 'text' ? parseTag(x.content) : x))\n}\n\nconst TagLike = /([#$@][\\w-]+)/g\nconst map = {\n    '@': 'user',\n    '#': 'hash',\n    $: 'cash',\n} as const\nfunction parseTag(x: string): ParseLinkResult[] {\n    return x\n        .split(TagLike)\n        .map<ParseLinkResult>((x) =>\n            TagLike.test(x)\n                ? { type: 'link', content: x, category: map[x[0] as keyof typeof map] || 'normal' }\n                : { type: 'text', content: x },\n        )\n}\n","import { isTypedMessagePromise, isTypedMessageTuple } from '../core/index.js'\nimport { isNonSerializableTypedMessageWithAlt } from '../utils/index.js'\nimport type { TypedMessage } from '../base.js'\nimport { isTypedMessageMaskPayload } from '../extension/index.js'\n\nexport function forEachTypedMessageChild(node: TypedMessage, visitor: (x: TypedMessage) => void | 'stop') {\n    let stop: void | 'stop'\n    if (isTypedMessageTuple(node)) {\n        for (const each of node.items) {\n            stop = visitor(each)\n            if (stop) return\n        }\n    } else if (isTypedMessagePromise(node)) {\n        // if Promise has a resolved value, we ignore it's alt.\n        if ('value' in node.promise) visitor(node.promise.value)\n        else if (node.alt) visitor(node.alt)\n    } else if (isTypedMessageMaskPayload(node)) {\n        visitor(node.message)\n    } else if (isNonSerializableTypedMessageWithAlt(node)) {\n        visitor(node.alt)\n    }\n}\n","import {\n    isTypedMessagePromise,\n    isTypedMessageTuple,\n    makeTypedMessagePromise,\n    makeTypedMessageTuple,\n    makeTypedMessageTupleSerializable,\n} from '../core/index.js'\nimport { isNonSerializableTypedMessageWithAlt, isSerializableTypedMessage } from '../utils/index.js'\nimport type { TypedMessage } from '../base.js'\nimport { isTypedMessageMaskPayload, makeTypedMessageMaskPayload } from '../extension/index.js'\nimport type { TransformationContext, Transformer } from '../transformer/index.js'\n\nexport function visitEachTypedMessageChild(\n    node: TypedMessage,\n    visitor: Transformer,\n    context: TransformationContext,\n): TypedMessage {\n    if (isTypedMessageTuple(node)) {\n        const after = node.items.flatMap((x) => {\n            const next = visitor(x, context)\n            if (isTypedMessageTuple(next)) return next.items\n            return next\n        })\n        if (after.every(isSerializableTypedMessage)) {\n            return makeTypedMessageTupleSerializable(after, node.meta)\n        }\n        return makeTypedMessageTuple(after, node.meta)\n    } else if (isTypedMessagePromise(node)) {\n        // we ignore alt if promise is resolved.\n        if ('value' in node.promise) return visitor(node.promise.value, context)\n        else if (node.alt) return makeTypedMessagePromise(node.promise, visitor(node.alt, context))\n        return node\n    } else if (isTypedMessageMaskPayload(node)) {\n        const next = visitor(node.message, context)\n        return makeTypedMessageMaskPayload(next, node.meta)\n    } else if (isNonSerializableTypedMessageWithAlt(node)) {\n        const alt = visitor(node.alt, context)\n        if (!isSerializableTypedMessage(alt)) {\n            console.warn(\n                '[@masknet/typed-message] You must return a serializable message in this position. Original:',\n                node,\n                'Transformed child \"alt\":',\n                alt,\n            )\n            // ignore the transform result\n            return node\n        }\n        return { ...node, alt } as TypedMessage\n    } else {\n        // return node with no child\n        return node\n    }\n}\n","const {\n  apply: ReflectApply,\n  defineProperty: ReflectDefineProperty,\n  deleteProperty: ReflectDeleteProperty,\n  getPrototypeOf: ReflectGetPrototypeOf,\n  ownKeys: ReflectOwnKeys,\n  setPrototypeOf: ReflectSetPrototypeOf\n} = Reflect;\nconst ObjectCtor = Object;\nconst {\n  prototype: ObjectProto\n} = ObjectCtor;\nconst {\n  assign: ObjectAssign,\n  freeze: ObjectFreeze,\n  keys: ObjectKeys\n} = ObjectCtor;\nconst {\n  hasOwn: OriginalObjectHasOwn\n} = ObjectCtor;\nconst {\n  __lookupGetter__: ObjectProtoLookupGetter,\n  __lookupSetter__: ObjectProtoLookupSetter,\n  hasOwnProperty: ObjectProtoHasOwnProperty\n} = ObjectProto;\nconst ObjectHasOwn = typeof OriginalObjectHasOwn === 'function' ? OriginalObjectHasOwn :\n/* istanbul ignore next: currently unreachable via tests */\nfunction ObjectHasOwn(object, key) {\n  return ReflectApply(ObjectProtoHasOwnProperty, object, [key]);\n};\nconst {\n  toString: ObjectProtoToString\n} = ObjectProto;\n\nfunction isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\n\nfunction ObjectLookupOwnGetter(object, key) {\n  return object === null || object === undefined || !ObjectHasOwn(object, key) ? undefined : ReflectApply(ObjectProtoLookupGetter, object, [key]);\n}\n\nfunction ObjectLookupOwnSetter(object, key) {\n  return object === null || object === undefined || !ObjectHasOwn(object, key) ? undefined : ReflectApply(ObjectProtoLookupSetter, object, [key]);\n}\n\nconst {\n  for: SymbolFor,\n  iterator: SymbolIterator,\n  toStringTag: SymbolToStringTag,\n  unscopables: SymbolUnscopables\n} = Symbol;\nconst ArrayCtor = Array;\nconst {\n  prototype: ArrayProto\n} = ArrayCtor;\nconst {\n  at: ArrayProtoAt,\n  concat: ArrayProtoConcat,\n  copyWithin: ArrayProtoCopyWithin,\n  entries: ArrayProtoEntries,\n  every: ArrayProtoEvery,\n  fill: ArrayProtoFill,\n  find: ArrayProtoFind,\n  findIndex: ArrayProtoFindIndex,\n  flat: ArrayProtoFlat,\n  flatMap: ArrayProtoFlatMap,\n  forEach: ArrayProtoForEach,\n  indexOf: ArrayProtoIndexOf,\n  join: ArrayProtoJoin,\n  keys: ArrayProtoKeys,\n  lastIndexOf: ArrayProtoLastIndexOf,\n  map: ArrayProtoMap,\n  pop: ArrayProtoPop,\n  reduce: ArrayProtoReduce,\n  reduceRight: ArrayProtoReduceRight,\n  reverse: ArrayProtoReverse,\n  shift: ArrayProtoShift,\n  slice: ArrayProtoSlice,\n  some: ArrayProtoSome,\n  splice: ArrayProtoSplice,\n  toLocaleString: ArrayProtoToLocaleString,\n  toString: ArrayProtoToString,\n  values: ArrayProtoValues,\n  [SymbolIterator]: ArrayProtoSymbolIterator\n} = ArrayProto;\nconst ArrayUnscopables = ObjectFreeze(ObjectAssign({\n  __proto__: null\n}, ArrayProto[SymbolUnscopables]));\nconst {\n  filter: ArrayProtoFilter,\n  includes: ArrayProtoIncludes,\n  sort: ArrayProtoSort,\n  unshift: ArrayProtoUnshift\n} = ArrayProto;\nconst {\n  push: ArrayProtoPush\n} = ArrayProto;\nconst {\n  isArray: ArrayIsArray\n} = ArrayCtor;\n\nfunction toSafeArray(array) {\n  ReflectSetPrototypeOf(array, null);\n  array.at = ArrayProtoAt;\n  array.concat = ArrayProtoConcat; // *** DO NOT SET THE ARRAY CONSTRUCTOR PROPERTY ***\n  // https://bugs.chromium.org/p/v8/issues/detail?id=13202\n  // https://source.chromium.org/chromium/chromium/src/+/main:v8/src/objects/lookup.cc;l=196-215?q=IsArraySpeciesLookupChainIntact\n  //\n  // In V8 setting the constructor property of an array, promise, regexp, or\n  // typed array triggers a de-opt because it could change an instance's\n  // @@species. This de-opt affects at least `Array#splice` and occurs even\n  // if the prototype of the array is change or nulled beforehand. Further,\n  // the de-opt persists after a page refresh. It is not until navigating to\n  // a different page that the performance of `Array#splice` is restored.\n\n  array.copyWithin = ArrayProtoCopyWithin;\n  array.entries = ArrayProtoEntries;\n  array.every = ArrayProtoEvery;\n  array.fill = ArrayProtoFill;\n  array.filter = ArrayProtoFilter;\n  array.find = ArrayProtoFind;\n  array.findIndex = ArrayProtoFindIndex;\n  array.flat = ArrayProtoFlat;\n  array.flatMap = ArrayProtoFlatMap;\n  array.forEach = ArrayProtoForEach;\n  array.includes = ArrayProtoIncludes;\n  array.indexOf = ArrayProtoIndexOf;\n  array.join = ArrayProtoJoin;\n  array.keys = ArrayProtoKeys;\n  array.lastIndexOf = ArrayProtoLastIndexOf;\n  array.map = ArrayProtoMap;\n  array.pop = ArrayProtoPop;\n  array.push = ArrayProtoPush;\n  array.reduce = ArrayProtoReduce;\n  array.reduceRight = ArrayProtoReduceRight;\n  array.reverse = ArrayProtoReverse;\n  array.shift = ArrayProtoShift;\n  array.slice = ArrayProtoSlice;\n  array.some = ArrayProtoSome;\n  array.sort = ArrayProtoSort;\n  array.splice = ArrayProtoSplice;\n  array.toLocaleString = ArrayProtoToLocaleString;\n  array.toString = ArrayProtoToString;\n  array.unshift = ArrayProtoUnshift;\n  array.values = ArrayProtoValues;\n  array[SymbolIterator] = ArrayProtoSymbolIterator;\n  array[SymbolUnscopables] = ArrayUnscopables;\n  ReflectSetPrototypeOf(array, ArrayProto);\n  return array;\n}\n\nconst LOCKER_IDENTIFIER_MARKER = '$LWS'; // This package is bundled by third-parties that have their own build time\n// replacement logic. Instead of customizing each build system to be aware\n// of this package we implement a two phase debug mode by performing small\n// runtime checks to determine phase one, our code is unminified, and\n// phase two, the user opted-in to custom devtools formatters. Phase one\n// is used for light weight initialization time debug while phase two is\n// reserved for post initialization runtime.\n// istanbul ignore next\n\nconst LOCKER_UNMINIFIED_FLAG = `${() =>\n/* $LWS */\n1}`.includes(LOCKER_IDENTIFIER_MARKER);\nconst CHAR_ELLIPSIS = '\\u2026';\nconst TO_STRING_BRAND_BIG_INT = '[object BigInt]';\nconst TO_STRING_BRAND_BOOLEAN = '[object Boolean]';\nconst TO_STRING_BRAND_NUMBER = '[object Number]';\nconst TO_STRING_BRAND_STRING = '[object String]';\nconst TO_STRING_BRAND_SYMBOL = '[object Symbol]';\nconst ErrorCtor = Error;\nconst TypeErrorCtor = TypeError;\n\nfunction noop() {// No operation performed.\n}\n\nconst {\n  stringify: JSONStringify\n} = JSON; // Used by '@locker/near-membrane-dom'.\n\nconst {\n  min: MathMin\n} = Math;\nconst LOCKER_NEAR_MEMBRANE_SERIALIZED_VALUE_SYMBOL = SymbolFor('@@lockerNearMembraneSerializedValue');\nconst LOCKER_NEAR_MEMBRANE_SYMBOL = SymbolFor('@@lockerNearMembrane');\n\nfunction getNearMembraneSerializedValue(object) {\n  return LOCKER_NEAR_MEMBRANE_SERIALIZED_VALUE_SYMBOL in object ? undefined : object[LOCKER_NEAR_MEMBRANE_SERIALIZED_VALUE_SYMBOL];\n}\n\nfunction isNearMembrane(value) {\n  if (typeof value === 'object' && value !== null || typeof value === 'function') {\n    return !(LOCKER_NEAR_MEMBRANE_SYMBOL in value) && value[LOCKER_NEAR_MEMBRANE_SYMBOL] === true;\n  }\n\n  return false;\n}\n\nconst NumberCtor = Number; // Used by '@locker/near-membrane-dom'.\n\nconst {\n  isFinite: NumberIsFinite,\n  isInteger: NumberIsInteger\n} = NumberCtor;\nconst StringCtor = String;\nconst {\n  prototype: StringProto\n} = StringCtor;\nconst {\n  slice: StringProtoSlice\n} = StringProto;\nconst WeakMapCtor = WeakMap;\nconst {\n  prototype: WeakMapProto\n} = WeakMapCtor;\nconst {\n  delete: WeakMapProtoDelete,\n  get: WeakMapProtoGet,\n  has: WeakMapProtoHas,\n  set: WeakMapProtoSet,\n  [SymbolToStringTag]: WeakMapProtoSymbolToStringTag\n} = WeakMapProto;\n\nfunction toSafeWeakMap(weakMap) {\n  ReflectSetPrototypeOf(weakMap, null);\n  weakMap.delete = WeakMapProtoDelete;\n  weakMap.get = WeakMapProtoGet;\n  weakMap.has = WeakMapProtoHas;\n  weakMap.set = WeakMapProtoSet;\n  weakMap[SymbolToStringTag] = WeakMapProtoSymbolToStringTag;\n  ReflectSetPrototypeOf(weakMap, WeakMapProto);\n  return weakMap;\n}\n\nexport { ArrayCtor, ArrayIsArray, ArrayProtoFilter, ArrayProtoIncludes, ArrayProtoPush, ArrayProtoSort, ArrayProtoUnshift, CHAR_ELLIPSIS, ErrorCtor, JSONStringify, LOCKER_IDENTIFIER_MARKER, LOCKER_UNMINIFIED_FLAG, MathMin, NumberIsFinite, NumberIsInteger, ObjectAssign, ObjectFreeze, ObjectKeys, ObjectLookupOwnGetter, ObjectLookupOwnSetter, ObjectProtoToString, ReflectApply, ReflectDefineProperty, ReflectDeleteProperty, ReflectGetPrototypeOf, ReflectOwnKeys, ReflectSetPrototypeOf, StringCtor, StringProtoSlice, SymbolFor, SymbolIterator, SymbolToStringTag, SymbolUnscopables, TO_STRING_BRAND_BIG_INT, TO_STRING_BRAND_BOOLEAN, TO_STRING_BRAND_NUMBER, TO_STRING_BRAND_STRING, TO_STRING_BRAND_SYMBOL, TypeErrorCtor, WeakMapCtor, getNearMembraneSerializedValue, isNearMembrane, isObject, noop, toSafeArray, toSafeWeakMap };\n"],"names":["Environment","MessageTarget","WebExtensionMessage","createI18NBundle","i18NextInstance","createHostAPIs","isBackground","getPluginList","plugins","fetch","browser","runtime","getURL","then","x","json","catch","Object","entries","fetchManifest","id","isLocal","prefix","manifestPath","manifestURL","URL","location","href","pathname","TypeError","fetchLocaleFiles","languages","result","Promise","allSettled","map","url","language","locales","_","status","value","createRpcChannel","domain","events","f","bind","Broadcast","ManifestBackground","createRpcGeneratorChannel","g","hmr","hot","ac","AbortController","dispose","abort","signal","run","callback","addEventListener","once","error","console","empty","unknown","tuple","text","image","promise","composeSome","isCoreTypedMessages","isTypedMessageEmpty","isTypedMessageText","isTypedMessageImage","isTypedMessageTuple","isTypedMessageUnknown","isTypedMessagePromise","isWellKnownExtensionTypedMessages","makeTypedMessageEmpty","makeTypedMessageImage","makeTypedMessagePromise","isTypedMessageTextV1","makeTypedMessageText","isTypedMessageTupleSerializable","makeTypedMessageTuple","makeTypedMessageSerializableTupleFromList","makeTypedMessageTupleFromList","makeTypedMessageTupleSerializable","makeTypedMessageUnknown","isTypedMessageAnchor","makeTypedMessageAnchor","isTypedMessageMaskPayload","makeTypedMessageMaskPayload","unstable_STYLE_META","decodeTypedMessageFromDocument","encodeTypedMessageToDocument","decodeTypedMessageV38ToV40Format","decodeTypedMessageFromDeprecatedFormat","encodeTypedMessageV38Format","encodeTypedMessageToDeprecatedFormat","extractImageFromTypedMessage","extractTextFromTypedMessage","isNonSerializableTypedMessageWithAlt","isSerializableTypedMessage","isTypedMessageEqual","forEachTypedMessageChild","visitEachTypedMessageChild","emptyTransformationContext","createTransformationContext","composeTransformers","FlattenTypedMessage","ParseLinkTransformer","isWellKnownTypedMessages","tsResults","Identifier","PostIdentifier","ECKeyIdentifier","ProfileIdentifier","PostIVIdentifier","typedMessage","addPeerDependencies","addNamespaceModule","addReExportModule","exportAllFrom","addReExportAllModule","addCompatibilityModuleAlias","combineAbortSignal","PluginRunner","hooks","allowLocalOverrides","constructor","Map","pluginList","__builtInPluginInfraBridgeCallback__","undefined","throwIfAborted","keys","stopPlugin","getPluginInstance","get","iteratePluginInstance","instance","values","onPluginListUpdate","list","init_unbridged","has","local","normal","data","startPluginInner","startPlugin_bridged","abortFunction","HostStartPlugin","set","delete","makeGlobalThis","createMembrane","createFetch","createTimers","createGlobal","pluginID","manifest","proxy","localThis","revoke","Proxy","revocable","prototype","endowments","AbortSignal","Blob","CustomEvent","DOMException","Crypto","CryptoKey","Event","EventTarget","File","FileReader","FormData","Headers","IdleDeadline","ReadableStream","ReadableStreamDefaultController","ReadableStreamDefaultReader","ReadableStreamBYOBReader","ReadableStreamBYOBRequest","ReadableByteStreamController","Request","Response","SubtleCrypto","TextDecoder","TextDecoderStream","TextEncoder","TextEncoderStream","URLSearchParams","WebAssembly","WritableStream","WritableStreamDefaultController","WritableStreamDefaultWriter","crypto","atob","btoa","canConnect","protocol","endsWith","membrane","globalThis","getOwnPropertyDescriptors","window","defineProperty","defineProperties","self","configurable","writable","virtualEnvironment","link","imports","Evaluators","PluginRuntime","origin","moduleMap","instanceFromURL","execute","Module","specifier","module","importHook","moduleNamespace","moduleName","bindings","from","blueNamespace","key","export","redEnvironment","copyNamespace","redNamespace","k","freeze","loadHook","referral","startsWith","normalizedURL","source","SyntaxError","target","includes","oldProtocol","__mask__module__reflection__","importMetaHook","needsImportMeta","meta","assign","isManifest","_manifest","path","pluginOrigin","u","toString","decode","Result","TypedMessageBinaryEncodingTypeEnum","HEAD","bin","wrap","doc","Array","isArray","Error","decodeMetadata","docVer","message","decodeTypedMessage","fixU8Array","tm","type","Text","decodeTypedMessageText","Tuple","decodeTypedMessageTuple","version","format","assertNumber","assertString","items","getPrototypeOf","input","Reflect","Uint8Array","slice","encode","content","encodeMeta","encodeTypedMessage","serializable","alt","encodeTypedMessageText","encodeTypedMessageTuple","record","__proto__","val","collectValue","err","warn","ArrayBuffer","proto","v","createIsType","setPrototypeOf","size","width","height","getPromiseWithStatus","seen","WeakMap","resolve","reason","composeEvery","args","raw","None","Ok","encoder","rec","fromEntries","JSON","stringify","decoder","isErr","maybeMetadata","maybeJSON","split","parse","toOption","isSome","replace","category","postImage","anchor","MaskPayload","isEqual","context","next","flatMap","filter","reduce","current","lastItem","at","concat","isTextWithMetaCanBeMerged","pop","push","length","every","a","b","a_style","b_style","NoContext","parseLink","parsed","i","event","onUpdate","composedTransformer","dispatchEvent","transformers","Set","composed","sort","p","c","subscription","getCurrentValue","subscribe","removeEventListener","addTransformer","t","priority","f_priority","add","cancelSubscription","remove","Some","options","visitor","linkAsText","join","y","message1","message2","fns","some","anchorme","default","start","isURL","string","end","parseTag","TagLike","$","test","node","stop","each","after"],"sourceRoot":"","x_google_ignoreList":[35]}