{"version":3,"file":"bundled/chunk.5185.js","mappings":"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","sources":["webpack://mask-network/./packages/plugin-infra/src/dom/useActivatedPlugin.ts","webpack://mask-network/./packages/plugin-infra/src/utils/message.ts","webpack://mask-network/./packages/plugins/GoPlusSecurity/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/GoPlusSecurity/src/messages.ts","webpack://mask-network/./packages/plugins/Trader/src/helpers/isNativeTokenWrapper.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useWrappedEtherContract.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useNativeTokenWrapperCallback.ts","webpack://mask-network/./packages/plugins/Trader/src/trader/native/useTradeCallback.ts","webpack://mask-network/./packages/plugins/Trader/src/trader/0x/constants.ts","webpack://mask-network/./packages/plugins/Trader/src/trader/0x/useTradeCallback.ts","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/hooks/useSwapErrorCallback.ts","webpack://mask-network/./packages/plugins/Trader/src/contracts/uniswap/useRouterV2Contract.ts","webpack://mask-network/./packages/plugins/Trader/src/contracts/uniswap/useSwapRouterContract.ts","webpack://mask-network/./packages/plugins/Trader/src/trader/uniswap/useTransactionDeadline.ts","webpack://mask-network/./packages/plugins/Trader/src/trader/useGetTradeContext.ts","webpack://mask-network/./packages/plugins/Trader/src/trader/uniswap/useTradeParameters.ts","webpack://mask-network/./packages/plugins/Trader/src/trader/uniswap/useTradeCallback.ts","webpack://mask-network/./packages/plugins/Trader/src/trader/dodo/useTradeCallback.ts","webpack://mask-network/./packages/plugins/Trader/src/trader/bancor/useTradeCallback.ts","webpack://mask-network/./packages/plugins/Trader/src/trader/openocean/useTradeCallback.ts","webpack://mask-network/./packages/plugins/Trader/src/trader/useTradeCallback.ts","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/hooks/useSortedTrades.ts","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/hooks/useUpdateBalance.ts","webpack://mask-network/./packages/shared/src/UI/components/SelectTokenChip/index.tsx","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/components/InputTokenPanelUI.tsx","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/InputTokenPanel.tsx","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/hooks/useGreatThanSlippageSetting.ts","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/components/TraderInfoUI.tsx","webpack://mask-network/./packages/plugins/Trader/src/helpers/resolveTradeProviderName.ts","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/TraderInfo.tsx","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/TradeForm.tsx","webpack://mask-network/./packages/plugins/GoPlusSecurity/src/UI/TokenSecurityBoundary.tsx","webpack://mask-network/./packages/plugins/Trader/src/trader/useTradeApproveComputed.ts","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/TraderStateBar.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/ArrowDownward.js","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/components/ConfirmDialogUI.tsx","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/components/PriceImpactDialogUI.tsx","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/ConfirmDialog.tsx","webpack://mask-network/./packages/plugins/Trader/src/SiteAdaptor/trader/Trader.tsx","webpack://mask-network/./packages/plugins/Trader/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/Trader/src/messages.ts","webpack://mask-network/./packages/plugins/Trader/src/types/trader.ts","webpack://mask-network/./packages/shared-base-ui/src/hooks/useRemoteControlledDialog.ts","webpack://mask-network/./packages/shared-base/src/helpers/getLocalImplementation.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useAllowTestnet.ts","webpack://mask-network/./packages/shared/src/UI/components/ChainBoundary/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/TokenSecurity/Common.tsx","webpack://mask-network/./packages/shared/src/UI/components/TokenSecurity/index.tsx","webpack://mask-network/./packages/shared/src/hooks/useTokenSecurity.ts","webpack://mask-network/./packages/web3-hooks/base/src/useBlockTimestamp.ts","webpack://mask-network/./packages/web3-hooks/base/src/useMaskTokenAddress.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useContract.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useGasConfig.ts","webpack://mask-network/./packages/web3-shared/evm/src/helpers/addGasMargin.ts","webpack://mask-network/./packages/web3-shared/evm/src/libs/GasEditor.ts","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Tune.js"],"sourcesContent":["import { useActivatedPluginExtensionPage } from '../manager/extension-page.js'\nimport { useActivatedPluginSiteAdaptor } from '../manager/site-adaptor.js'\n\nexport function useActivatedPlugin(pluginID: string, minimalModeEqualsTo: 'any' | boolean) {\n    const pluginSiteAdaptor = useActivatedPluginSiteAdaptor(pluginID, minimalModeEqualsTo)\n    const pluginExtensionPage = useActivatedPluginExtensionPage(pluginID)\n    return pluginSiteAdaptor ?? pluginExtensionPage ?? null\n}\n","import { WebExtensionMessage } from '@dimensiondev/holoflows-kit'\nimport type { PluginMessageEmitterItem } from '@masknet/plugin-infra'\nimport { serializer } from '@masknet/shared-base'\n\n/** @internal */\nexport const DOMAIN_RPC = Symbol('create RPC instead of normal message')\n/**\n * Create a plugin message emitter\n * @param pluginID The plugin ID\n *\n * @example\n * export const MyPluginMessage = getPluginMessage(PLUGIN_ID)\n */\nexport let getPluginMessage = <T>(pluginID: string, type?: typeof DOMAIN_RPC): PluginMessageEmitter<T> => {\n    const domain = (type === DOMAIN_RPC ? '@plugin-rpc/' : '@plugin/') + pluginID\n    if (cache.has(domain)) return cache.get(domain) as any\n\n    const messageCenter = new WebExtensionMessage<T>({ domain })\n    const events = messageCenter.events\n    messageCenter.serialization = serializer\n    cache.set(domain, events)\n    return events\n}\n\nexport function __workaround__replaceImplementationOfCreatePluginMessage__(\n    newImpl: (pluginID: string) => PluginMessageEmitter<any>,\n) {\n    getPluginMessage = newImpl\n}\nexport type PluginMessageEmitter<T> = { readonly [key in keyof T]: PluginMessageEmitterItem<T[key]> }\nconst cache = new Map<string, PluginMessageEmitter<unknown>>()\n\n// TODO: this type should be defined here, not shared-base\nexport type { PluginMessageEmitterItem } from '@masknet/shared-base'\n","// @ts-nocheck\n/* eslint-disable */\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useGoPlusLabsTrans(): {\n    /**\n      * `Check Security`\n      */\n    __plugin_name(): string;\n    /**\n      * `Powered by Go+`\n      */\n    powered_by_go_plus(): string;\n    /**\n      * `Powered by`\n      */\n    powered_by(): string;\n    /**\n      * `Go+`\n      */\n    go_plus(): string;\n    /**\n      * `High Risk`\n      */\n    high_risk(): string;\n    /**\n      * `Low Risk`\n      */\n    low_risk(): string;\n    /**\n      * `Confirm swap risk`\n      */\n    confirm_swap_risk(): string;\n    /**\n      * `Medium Risk`\n      */\n    medium_risk(): string;\n    /**\n      * `Search`\n      */\n    search(): string;\n    /**\n      * `Please enter token contract address.`\n      */\n    search_input_placeholder(): string;\n    /**\n      * `Token info`\n      */\n    token_info(): string;\n    /**\n      * `More Details`\n      */\n    more_details(): string;\n    /**\n      * `Security Detection`\n      */\n    security_detection(): string;\n    /**\n      * `{{quantity}} Risky factors`\n      */\n    risky_factors(options: {\n        readonly quantity: string;\n    }): string;\n    /**\n      * `{{quantity}} Attention factors`\n      */\n    attention_factors(options: {\n        readonly quantity: string;\n    }): string;\n    /**\n      * `{{quantity}} Risky factor`\n      */\n    risky_factor(options: {\n        readonly quantity: string;\n    }): string;\n    /**\n      * `{{quantity}} Attention factor`\n      */\n    attention_factor(options: {\n        readonly quantity: string;\n    }): string;\n    /**\n      * `Contract source code not verified`\n      */\n    security_info_code_not_verify_title(): string;\n    /**\n      * `This token contract has not been verified. We cannot check the contract code for details. Unsourced token contracts are likely to have malicious functions to defraud users of their assets`\n      */\n    security_info_code_not_verify_message(): string;\n    /**\n      * `Functions that can suspend trading`\n      */\n    security_info_functions_that_can_suspend_trading_title(): string;\n    /**\n      * `If a suspendable code is included, the token maybe neither be bought nor sold (honeypot risk). `\n      */\n    security_info_functions_that_can_suspend_trading_message(): string;\n    /**\n      * `Token Name`\n      */\n    token_info_token_name(): string;\n    /**\n      * `Token Contract Address`\n      */\n    token_info_token_contract_address(): string;\n    /**\n      * `Contract Creator`\n      */\n    token_info_contract_creator(): string;\n    /**\n      * `Contract Owner`\n      */\n    token_info_contract_owner(): string;\n    /**\n      * `Total Supply`\n      */\n    token_info_total_supply(): string;\n    /**\n      * `Market Cap`\n      */\n    token_market_cap(): string;\n    /**\n      * `Note: Scams detections might not be 100% guaranteed.`\n      */\n    default_placeholder(): string;\n    /**\n      * `Results not found now. it might be chain network error, on-chain data abnormal or the token address is not covered now. please check as followings:`\n      */\n    not_found_tip_title(): string;\n    /**\n      * `1. Make sure network is working;`\n      */\n    not_found_tip_network_error(): string;\n    /**\n      * `2. Make sure the chain network or token address is correct;`\n      */\n    not_found_tip_network_chain_correct(): string;\n    /**\n      * `3. Token address is not covered now, it might take more than 60s to get contract information again. Please try it later.`\n      */\n    not_found_tip_network_address_not_cover(): string;\n    /**\n      * `This token has no risky or attention factors.`\n      */\n    risk_safe_description(): string;\n    /**\n      * `Contract source code verified`\n      */\n    risk_contract_source_code_verified_title(): string;\n    /**\n      * `This token contract is open source. You can check the contract code for details. Unsourced token contracts are likely to have malicious functions to defraud their users of their assets.`\n      */\n    risk_contract_source_code_verified_body(): string;\n    /**\n      * `Contract source code not verified`\n      */\n    risk_contract_source_code_not_verified_title(): string;\n    /**\n      * `This token contract has not been verified. We cannot check the contract code for details. Unsourced token contracts are likely to have malicious functions to defraud users of their assets.`\n      */\n    risk_contract_source_code_not_verified_body(): string;\n    /**\n      * `Proxy contract`\n      */\n    risk_proxy_contract_title(): string;\n    /**\n      * `This contract is an Admin Upgradeability Proxy. The proxy contract means the contract owner can modifiy the function of the token and could possibly effect the price.There is possibly a way for the team to Rug or Scam. Please confirm the details with the project team before buying.`\n      */\n    risk_proxy_contract_body(): string;\n    /**\n      * `No proxy`\n      */\n    risk_no_proxy_title(): string;\n    /**\n      * `There is no proxy in the contract. The proxy contract means contract owner can modifiy the function of the token and possibly effect the price.`\n      */\n    risk_no_proxy_body(): string;\n    /**\n      * `Mint function`\n      */\n    risk_mint_function_title(): string;\n    /**\n      * `The contract may contain additional issuance functions, which could maybe generate a large number of tokens, resulting in significant fluctuations in token prices. It is recommended to confirm with the project team whether it complies with the token issuance instructions.`\n      */\n    risk_mint_function_body(): string;\n    /**\n      * `No mint function`\n      */\n    risk_no_mint_function_title(): string;\n    /**\n      * `Mint function is transparent or non-existent. Hidden mint functions may increase the amount of tokens in circulation and effect the price of the token.`\n      */\n    risk_no_mint_function_body(): string;\n    /**\n      * `Functions with retrievable ownership`\n      */\n    risk_can_take_back_ownership_title(): string;\n    /**\n      * `If this function exists, it is possible for the project owner to regain ownership even after relinquishing it`\n      */\n    risk_can_take_back_ownership_body(): string;\n    /**\n      * `No function found that retrieves ownership`\n      */\n    risk_no_can_take_back_ownership_title(): string;\n    /**\n      * `If this function exists, it is possible for the project owner to regain ownership even after relinquishing it`\n      */\n    risk_no_can_take_back_ownership_body(): string;\n    /**\n      * `Owner can change balance`\n      */\n    risk_owner_change_balance_title(): string;\n    /**\n      * `The contract owner has the authority to modify the balance of tokens at other addresses, which may result in a loss of assets.`\n      */\n    risk_owner_change_balance_body(): string;\n    /**\n      * `Owner can't change balance`\n      */\n    risk_owner_can_not_change_balance_title(): string;\n    /**\n      * `The contract owner is not found to have the authority to modify the balance of tokens at other addresses.`\n      */\n    risk_owner_can_not_change_balance_body(): string;\n    /**\n      * `Buy Tax: {{rate}}`\n      */\n    risk_buy_tax_title(options: {\n        readonly rate: string;\n    }): string;\n    /**\n      * `Above 10% may be considered a high tax rate. More than 50% tax rate means may not be tradable.`\n      */\n    risk_buy_tax_body(): string;\n    /**\n      * `Sell Tax: {{rate}}`\n      */\n    risk_sell_tax_title(options: {\n        readonly rate: string;\n    }): string;\n    /**\n      * `Above 10% may be considered a high tax rate. More than 50% tax rate means may not be tradable.`\n      */\n    risk_sell_tax_body(): string;\n    /**\n      * `May the token is a honeypot.`\n      */\n    risk_is_honeypot_title(): string;\n    /**\n      * `This token contract has a code that states that it cannot be sold. Maybe this is a honeypot.`\n      */\n    risk_is_honeypot_body(): string;\n    /**\n      * `This does not appear to be a honeypot.`\n      */\n    risk_is_not_honeypot_title(): string;\n    /**\n      * `We are not aware of any code that prevents the sale of tokens.`\n      */\n    risk_is_not_honeypot_body(): string;\n    /**\n      * `Functions that can suspend trading`\n      */\n    risk_transfer_pausable_title(): string;\n    /**\n      * `If a suspendable code is included, the token maybe neither be bought nor sold (honeypot risk).`\n      */\n    risk_transfer_pausable_body(): string;\n    /**\n      * `No codes found to suspend trading.`\n      */\n    risk_no_code_transfer_pausable_title(): string;\n    /**\n      * `If a suspendable code is included, the token maybe neither be bought nor sold (honeypot risk).`\n      */\n    risk_no_code_transfer_pausable_body(): string;\n    /**\n      * ` Anti_whale(Limited number of transactions)`\n      */\n    risk_is_anti_whale_title(): string;\n    /**\n      * `The number of token transactions is limited. The number of scam token transactions may be limited (honeypot risk).`\n      */\n    risk_is_anti_whale_body(): string;\n    /**\n      * `No anti_whale(Unlimited number of transactions)`\n      */\n    risk_is_no_anti_whale_title(): string;\n    /**\n      * `There is no limit to the number of token transactions. The number of scam token transactions may be limited (honeypot risk).`\n      */\n    risk_is_no_anti_whale_body(): string;\n    /**\n      * `Tax can be modified`\n      */\n    risk_slippage_modifiable_title(): string;\n    /**\n      * ` The contract owner may contain the authority to modify the transaction tax. If the transaction tax is increased to more than 49%, the tokens will not be able to be traded (honeypot risk).`\n      */\n    risk_slippage_modifiable_body(): string;\n    /**\n      * `Tax cannot be modified`\n      */\n    risk_not_slippage_modifiable_title(): string;\n    /**\n      * `The contract owner may not contain the authority to modify the transaction tax. If the transaction tax is increased to more than 49%, the tokens will not be able to be traded (honeypot risk).`\n      */\n    risk_not_slippage_modifiable_body(): string;\n    /**\n      * `Blacklist function`\n      */\n    risk_is_blacklisted_title(): string;\n    /**\n      * `The blacklist function is included. Some addresses may not be able to trade normally (honeypot risk).`\n      */\n    risk_is_blacklisted_body(): string;\n    /**\n      * `No blacklist`\n      */\n    risk_not_is_blacklisted_title(): string;\n    /**\n      * `The blacklist function is not included. If there is a blacklist, some addresses may not be able to trade normally (honeypot risk).`\n      */\n    risk_not_is_blacklisted_body(): string;\n    /**\n      * `Whitelist function`\n      */\n    risk_is_whitelisted_title(): string;\n    /**\n      * `The whitelist function is included. Some addresses may not be able to trade normally (honeypot risk).`\n      */\n    risk_is_whitelisted_body(): string;\n    /**\n      * `No whitelist`\n      */\n    risk_not_is_whitelisted_title(): string;\n    /**\n      * `The whitelist function is not included. If there is a whitelist, some addresses may not be able to trade normally (honeypot risk).`\n      */\n    risk_not_is_whitelisted_body(): string;\n    /**\n      * `True Token`\n      */\n    risk_is_true_token_title(): string;\n    /**\n      * `This token is issued by its declared team. Some scams will create a well-known token with the same name to defraud their users of their assets.`\n      */\n    risk_is_true_token_body(): string;\n    /**\n      * `Fake Token`\n      */\n    risk_not_is_true_token_title(): string;\n    /**\n      * `This token is not issued by its declared team. Some scams will create a well-known token with the same name to defraud their users of their assets.`\n      */\n    risk_not_is_true_token_body(): string;\n    /**\n      * `Airdrop Scam`\n      */\n    risk_is_airdrop_scam_title(): string;\n    /**\n      * `You may lose your assets if giving approval to the website of this token.`\n      */\n    risk_is_airdrop_scam_body(): string;\n    /**\n      * `No Airdrop Scam`\n      */\n    risk_not_is_airdrop_scam_title(): string;\n    /**\n      * `This is not an airdrop scam. Many scams attract users through airdrops.`\n      */\n    risk_not_is_airdrop_scam_body(): string;\n    /**\n      * `Contract Not Found`\n      */\n    contract_not_found(): string;\n    /**\n      * `Unnamed`\n      */\n    unnamed(): string;\n    /**\n      * `Confirm`\n      */\n    confirm(): string;\n    /**\n      * `Cancel`\n      */\n    cancel(): string;\n    /**\n      * `Close [Check Security]?`\n      */\n    close_check_security(): string;\n    /**\n      * `The [Check Security] dApp provides quick, reliable, and convenient Web3 security services.`\n      */\n    check_security_intro(): string;\n    /**\n      * `If you decide to close [Check Security], you will no longer see security notifications when interacting with suspicious, blacklisted, or potentially fraudulent contracts and addresses.`\n      */\n    check_security_close_warning(): string;\n    /**\n      * `We recommend new Web3 users to keep [Check Security] open. `\n      */\n    check_security_close_advice(): string;\n    /**\n      * `Risk Warning`\n      */\n    risk_warning_short(): string;\n    /**\n      * `Confirm swap token contract risk`\n      */\n    risk_warning(): string;\n    /**\n      * `Swap Anyway`\n      */\n    make_risk_trade(): string;\n    /**\n      * `Dear Users,`\n      */\n    dear_user(): string;\n    /**\n      * `Clicking the confirm button means that you agree to take the potential risks and proceed with the transaction.`\n      */\n    user_warning(): string;\n    /**\n      * `Copy Address`\n      */\n    wallet_status_button_copy_address(): string;\n    /**\n      * `View on Explorer`\n      */\n    view_on_explorer(): string;\n    /**\n      * `Copy token successfully!`\n      */\n    copy_success_of_token_addr(): string;\n    /**\n      * `Confirm swap risk`\n      */\n    swap_risk(): string;\n} { const { t } = useTranslation(\"io.gopluslabs.security\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\n","import { getPluginMessage, type PluginMessageEmitter } from '@masknet/plugin-infra'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport { PLUGIN_ID } from './constants.js'\n\ninterface Token {\n    contract: string\n    name: string\n    chainId: ChainId\n}\n\ntype CheckSecurityDialogEvent = {\n    open: boolean\n}\n\nexport type TokenRiskWarningDialogEvent =\n    | {\n          open: true\n          token?: Token\n          swap: boolean\n      }\n    | {\n          open: false\n          swap: boolean\n      }\n\nexport interface PluginGoPlusSecurityMessage {\n    checkSecurityDialogEvent: CheckSecurityDialogEvent\n    tokenRiskWarningDialogEvent: TokenRiskWarningDialogEvent\n    rpc: unknown\n}\n\nimport.meta.webpackHot?.accept()\nexport const PluginGoPlusSecurityMessages: PluginMessageEmitter<PluginGoPlusSecurityMessage> =\n    getPluginMessage(PLUGIN_ID)\n","import type { TraderAPI } from '@masknet/web3-providers/types'\nimport type { NativeTokenWrapper } from '../trader/native/useTradeComputed.js'\n\nexport function isNativeTokenWrapper(\n    trade: TraderAPI.TradeComputed | null,\n): trade is TraderAPI.TradeComputed<NativeTokenWrapper> {\n    const trade_ = trade as TraderAPI.TradeComputed<NativeTokenWrapper> | null\n    return trade_?.trade_?.isNativeTokenWrapper ?? false\n}\n","import type { AbiItem } from 'web3-utils'\nimport WETH_ABI from '@masknet/web3-contracts/abis/WETH.json'\nimport type { WETH } from '@masknet/web3-contracts/types/WETH.js'\nimport { type ChainId, useTokenConstants } from '@masknet/web3-shared-evm'\nimport { useContract } from './useContract.js'\n\nexport function useNativeTokenWrapperContract(chainId?: ChainId) {\n    const { WNATIVE_ADDRESS } = useTokenConstants(chainId)\n    return useContract<WETH>(chainId, WNATIVE_ADDRESS, WETH_ABI as AbiItem[])\n}\n","import { useCallback } from 'react'\nimport { isLessThan, isZero } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { type ChainId, ContractTransaction, type GasConfig } from '@masknet/web3-shared-evm'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { useNativeTokenWrapperContract } from './useWrappedEtherContract.js'\n\nexport function useNativeTokenWrapperCallback(chainId?: ChainId) {\n    const { account } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const wrapperContract = useNativeTokenWrapperContract(chainId)\n\n    const wrapCallback = useCallback(\n        async (amount: string, gasConfig?: GasConfig) => {\n            if (!wrapperContract || !amount) {\n                return\n            }\n\n            // error: invalid deposit amount\n            if (isZero(amount)) return\n\n            // estimate gas and compose transaction\n            const tx = await new ContractTransaction(wrapperContract).fillAll(wrapperContract.methods.deposit(), {\n                from: account,\n                value: amount,\n                ...gasConfig,\n            })\n\n            // send transaction and wait for hash\n            const hash = await Web3.sendTransaction(tx, { overrides: { ...gasConfig } })\n            const receipt = await Web3.getTransactionReceipt(hash)\n\n            if (!receipt?.status) return\n            return receipt?.transactionHash\n        },\n        [account, wrapperContract],\n    )\n\n    const unwrapCallback = useCallback(\n        async (all = true, amount = '0', gasConfig?: GasConfig) => {\n            if (!wrapperContract || !amount) {\n                return\n            }\n\n            // read balance\n            const wethBalance = await wrapperContract.methods.balanceOf(account).call()\n\n            // error: invalid withdraw amount\n            if (all === false && isZero(amount)) {\n                return\n            }\n\n            // error: insufficient weth balance\n            if (all === false && isLessThan(wethBalance, amount)) {\n                return\n            }\n\n            // estimate gas and compose transaction\n            const tx = await new ContractTransaction(wrapperContract).fillAll(\n                wrapperContract.methods.withdraw(all ? wethBalance : amount),\n                {\n                    from: account,\n                    ...gasConfig,\n                },\n            )\n\n            // send transaction and wait for hash\n            const hash = await Web3.sendTransaction(tx, { overrides: { ...gasConfig } })\n            const receipt = await Web3.getTransactionReceipt(hash)\n\n            return receipt?.transactionHash\n        },\n        [account, wrapperContract, chainId],\n    )\n\n    return [wrapCallback, unwrapCallback] as const\n}\n","import { useAsyncFn } from 'react-use'\nimport { useWeb3Others } from '@masknet/web3-hooks-base'\nimport type { GasConfig, ChainId } from '@masknet/web3-shared-evm'\nimport { useNativeTokenWrapperCallback } from '@masknet/web3-hooks-evm'\nimport { TraderAPI } from '@masknet/web3-providers/types'\nimport type { NativeTokenWrapper } from './useTradeComputed.js'\n\nexport function useTradeCallback(\n    trade: TraderAPI.TradeComputed<NativeTokenWrapper> | null,\n    gasConfig?: GasConfig,\n    targetChainId?: ChainId,\n) {\n    const [wrapCallback, unwrapCallback] = useNativeTokenWrapperCallback(targetChainId)\n    const Others = useWeb3Others()\n    return useAsyncFn(async () => {\n        if (!trade?.trade_?.isNativeTokenWrapper) return\n        if (!trade.inputToken || !trade.outputToken) return\n\n        // input amount and output amount are the same value\n        const tradeAmount = trade.inputAmount.toFixed()\n\n        let result: string | undefined\n        if (\n            (trade.strategy === TraderAPI.TradeStrategy.ExactIn &&\n                Others.isNativeTokenSchemaType(trade.inputToken?.schema)) ||\n            (trade.strategy === TraderAPI.TradeStrategy.ExactOut &&\n                Others.isNativeTokenSchemaType(trade.outputToken?.schema))\n        ) {\n            result = await wrapCallback(tradeAmount, gasConfig)\n        } else {\n            result = await unwrapCallback(false, tradeAmount)\n        }\n        return result\n    }, [wrapCallback, unwrapCallback, trade, Others.isNativeTokenSchemaType])\n}\n","import { ChainId } from '@masknet/web3-shared-evm'\n\nexport const SUPPORTED_CHAIN_ID_LIST = [ChainId.Mainnet, ChainId.BSC, ChainId.Matic]\n","import { useMemo } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { pick } from 'lodash-es'\nimport stringify from 'json-stable-stringify'\nimport type { GasConfig, Transaction } from '@masknet/web3-shared-evm'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport { useChainContext, useNetworkContext } from '@masknet/web3-hooks-base'\nimport { SUPPORTED_CHAIN_ID_LIST } from './constants.js'\nimport type { SwapQuoteResponse } from '../../types/index.js'\n\nexport function useTradeCallback(\n    tradeComputed: TraderAPI.TradeComputed<SwapQuoteResponse> | null,\n    gasConfig?: GasConfig,\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { pluginID } = useNetworkContext()\n\n    const config = useMemo(() => {\n        if (\n            !account ||\n            !tradeComputed?.trade_ ||\n            pluginID !== NetworkPluginID.PLUGIN_EVM ||\n            !SUPPORTED_CHAIN_ID_LIST.includes(chainId)\n        )\n            return null\n        return {\n            from: account,\n            ...pick(tradeComputed.trade_, ['to', 'data', 'value']),\n            ...gasConfig,\n        } as Transaction\n    }, [account, tradeComputed, gasConfig])\n\n    return useAsyncFn(async () => {\n        if (!account || !config || !tradeComputed?.trade_) {\n            return\n        }\n\n        try {\n            const gas = await Web3.estimateTransaction?.(\n                {\n                    from: account,\n                    ...pick(tradeComputed.trade_, ['to', 'data', 'value']),\n                },\n                undefined,\n                { chainId },\n            )\n            const hash = await Web3.sendTransaction(\n                {\n                    ...config,\n                    gas,\n                },\n                { chainId, overrides: { ...gasConfig } },\n            )\n            const receipt = await Web3.getTransactionReceipt(hash)\n            if (!receipt?.status) return\n            return receipt?.transactionHash\n        } catch (error: unknown) {\n            return\n        }\n    }, [account, chainId, stringify(config), gasConfig, pluginID])\n}\n","import { useRef, useCallback } from 'react'\nimport { type SnackbarKey, useCustomSnackbar, type SnackbarMessage, type ShowSnackbarOptions } from '@masknet/theme'\nimport { useTraderTrans } from '../../../locales/i18n_generated.js'\n\nexport function useSwapErrorCallback() {\n    const t = useTraderTrans()\n    const snackbarKeyRef = useRef<SnackbarKey>()\n    const { showSnackbar, closeSnackbar } = useCustomSnackbar()\n\n    const showSingletonSnackbar = useCallback(\n        (title: SnackbarMessage, options: ShowSnackbarOptions) => {\n            if (snackbarKeyRef.current !== undefined) closeSnackbar(snackbarKeyRef.current)\n            snackbarKeyRef.current = showSnackbar(title, options)\n            return () => {\n                closeSnackbar(snackbarKeyRef.current)\n            }\n        },\n        [showSnackbar, closeSnackbar],\n    )\n\n    return useCallback(\n        (message: string) => {\n            if (\n                message.includes('User rejected transaction') ||\n                message.includes('Transaction was rejected') ||\n                message.includes('User rejected the message')\n            )\n                return\n            showSingletonSnackbar(t.swap_failed(), {\n                processing: false,\n                variant: 'error',\n                message: t.swap_failed_description(),\n            })\n        },\n        [showSingletonSnackbar],\n    )\n}\n","import type { AbiItem } from 'web3-utils'\nimport RouterV2ABI from '@masknet/web3-contracts/abis/RouterV2.json'\nimport type { RouterV2 } from '@masknet/web3-contracts/types/RouterV2.js'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport { useContract } from '@masknet/web3-hooks-evm'\n\nexport function useRouterV2Contract(chainId?: ChainId, address?: string) {\n    return useContract<RouterV2>(chainId, address, RouterV2ABI as AbiItem[])\n}\n","import type { AbiItem } from 'web3-utils'\nimport SwapRouterABI from '@masknet/web3-contracts/abis/SwapRouter.json'\nimport type { SwapRouter } from '@masknet/web3-contracts/types/SwapRouter.js'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport { useContract } from '@masknet/web3-hooks-evm'\n\nexport function useSwapRouterContract(chainId?: ChainId, address?: string) {\n    return useContract<SwapRouter>(chainId, address, SwapRouterABI as AbiItem[])\n}\n","import { useMemo } from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport { ChainId } from '@masknet/web3-shared-evm'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { useBlockTimestamp, useChainContext, useNetworkContext } from '@masknet/web3-hooks-base'\nimport { DEFAULT_TRANSACTION_DEADLINE, L2_TRANSACTION_DEADLINE } from '../../constants/index.js'\n\nexport function useTransactionDeadline() {\n    const { chainId } = useChainContext()\n    const { pluginID } = useNetworkContext()\n    const { value: timestamp } = useBlockTimestamp(pluginID, { chainId })\n\n    return useMemo(() => {\n        if (!timestamp || pluginID !== NetworkPluginID.PLUGIN_EVM) return\n        const timestamp_ = new BigNumber(timestamp ?? '0')\n        return timestamp_.plus(ChainId.Mainnet === chainId ? DEFAULT_TRANSACTION_DEADLINE : L2_TRANSACTION_DEADLINE)\n    }, [chainId, timestamp, pluginID])\n}\n","import { useMemo } from 'react'\nimport { unreachable } from '@masknet/kit'\nimport { TradeProvider } from '@masknet/public-api'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { getTraderConstants } from '@masknet/web3-shared-evm'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport {\n    PANCAKESWAP_BASE_AGAINST_TOKENS,\n    PANCAKESWAP_CUSTOM_BASES,\n    QUICKSWAP_BASE_AGAINST_TOKENS,\n    QUICKSWAP_CUSTOM_BASES,\n    SUSHISWAP_BASE_AGAINST_TOKENS,\n    SUSHISWAP_CUSTOM_BASES,\n    UNISWAP_BASE_AGAINST_TOKENS,\n    UNISWAP_CUSTOM_BASES,\n    TRADERJOE_BASE_AGAINST_TOKENS,\n    TRADERJOE_CUSTOM_BASES,\n    PANGOLIN_BASE_AGAINST_TOKENS,\n    PANGOLIN_CUSTOM_BASES,\n    WANNASWAP_BASE_AGAINST_TOKENS,\n    WANNASWAP_CUSTOM_BASES,\n    TRISOLARIS_BASE_AGAINST_TOKENS,\n    TRISOLARIS_CUSTOM_BASES,\n    MDEX_BASE_AGAINST_TOKENS,\n    MDEX_CUSTOM_BASES,\n    ARTHSWAP_BASE_AGAINST_TOKENS,\n    ARTHSWAP_CUSTOM_BASES,\n    VERSA_BASE_AGAINST_TOKENS,\n    VERSA_CUSTOM_BASES,\n    ASTAREXCHANGE_BASE_AGAINST_TOKENS,\n    ASTAREXCHANGE_CUSTOM_BASES,\n    YUMISWAP_BASE_AGAINST_TOKENS,\n    YUMISWAP_CUSTOM_BASES,\n} from '../constants/index.js'\n\nexport function useGetTradeContext(tradeProvider?: TradeProvider) {\n    const { chainId } = useChainContext()\n    return useMemo<TraderAPI.TradeContext | null>(() => {\n        const DEX_TRADE = getTraderConstants(chainId)\n        switch (tradeProvider) {\n            case TradeProvider.UNISWAP_V2:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V2_LIKE: true,\n                    GRAPH_API: DEX_TRADE.UNISWAP_V2_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.UNISWAP_V2_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.UNISWAP_V2_ROUTER_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.UNISWAP_V2_ROUTER_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.UNISWAP_V2_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: UNISWAP_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: UNISWAP_CUSTOM_BASES,\n                }\n            case TradeProvider.UNISWAP_V3:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V3_LIKE: true,\n                    GRAPH_API: DEX_TRADE.UNISWAP_V3_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.UNISWAP_V3_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.UNISWAP_SWAP_ROUTER_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.UNISWAP_SWAP_ROUTER_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.UNISWAP_V3_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: UNISWAP_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: UNISWAP_CUSTOM_BASES,\n                }\n            case TradeProvider.SUSHISWAP:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V2_LIKE: true,\n                    GRAPH_API: DEX_TRADE.SUSHISWAP_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.SUSHISWAP_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.SUSHISWAP_ROUTER_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.SUSHISWAP_ROUTER_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.SUSHISWAP_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: SUSHISWAP_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: SUSHISWAP_CUSTOM_BASES,\n                }\n            case TradeProvider.QUICKSWAP:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V2_LIKE: true,\n                    GRAPH_API: DEX_TRADE.QUICKSWAP_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.QUICKSWAP_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.QUICKSWAP_ROUTER_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.QUICKSWAP_ROUTER_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.QUICKSWAP_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: QUICKSWAP_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: QUICKSWAP_CUSTOM_BASES,\n                }\n            case TradeProvider.PANCAKESWAP:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V2_LIKE: true,\n                    GRAPH_API: DEX_TRADE.PANCAKESWAP_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.PANCAKESWAP_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.PANCAKESWAP_ROUTER_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.PANCAKESWAP_ROUTER_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.PANCAKESWAP_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: PANCAKESWAP_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: PANCAKESWAP_CUSTOM_BASES,\n                }\n            case TradeProvider.TRADERJOE:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V2_LIKE: true,\n                    GRAPH_API: DEX_TRADE.TRADERJOE_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.TRADERJOE_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.TRADERJOE_ROUTER_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.TRADERJOE_ROUTER_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.TRADERJOE_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: TRADERJOE_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: TRADERJOE_CUSTOM_BASES,\n                }\n            case TradeProvider.PANGOLIN:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V2_LIKE: true,\n                    GRAPH_API: DEX_TRADE.PANGOLIN_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.PANGOLIN_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.PANGOLIN_ROUTER_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.PANGOLIN_ROUTER_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.PANGOLIN_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: PANGOLIN_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: PANGOLIN_CUSTOM_BASES,\n                }\n            case TradeProvider.WANNASWAP:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V2_LIKE: true,\n                    GRAPH_API: DEX_TRADE.WANNASWAP_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.WANNASWAP_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.WANNASWAP_ROUTER_V2_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.WANNASWAP_ROUTER_V2_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.WANNASWAP_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: WANNASWAP_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: WANNASWAP_CUSTOM_BASES,\n                }\n            case TradeProvider.TRISOLARIS:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V2_LIKE: true,\n                    GRAPH_API: DEX_TRADE.TRISOLARIS_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.TRISOLARIS_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.TRISOLARIS_ROUTER_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.TRISOLARIS_ROUTER_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.TRISOLARIS_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: TRISOLARIS_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: TRISOLARIS_CUSTOM_BASES,\n                }\n            case TradeProvider.MDEX:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V2_LIKE: true,\n                    GRAPH_API: DEX_TRADE.MDEX_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.MDEX_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.MDEX_ROUTER_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.MDEX_ROUTER_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.MDEX_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: MDEX_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: MDEX_CUSTOM_BASES,\n                }\n            case TradeProvider.ARTHSWAP:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V2_LIKE: true,\n                    GRAPH_API: DEX_TRADE.ARTHSWAP_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.ARTHSWAP_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.ARTHSWAP_ROUTER_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.ARTHSWAP_ROUTER_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.ARTHSWAP_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: ARTHSWAP_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: ARTHSWAP_CUSTOM_BASES,\n                }\n            case TradeProvider.VERSA:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V2_LIKE: true,\n                    GRAPH_API: DEX_TRADE.VERSA_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.VERSA_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.VERSA_ROUTER_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.VERSA_ROUTER_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.VERSA_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: VERSA_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: VERSA_CUSTOM_BASES,\n                }\n            case TradeProvider.ASTAREXCHANGE:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V2_LIKE: true,\n                    GRAPH_API: DEX_TRADE.ASTAREXCHANGE_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.ASTAREXCHANGE_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.ASTAREXCHANGE_ROUTER_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.ASTAREXCHANGE_ROUTER_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.ASTAREXCHANGE_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: ASTAREXCHANGE_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: ASTAREXCHANGE_CUSTOM_BASES,\n                }\n            case TradeProvider.YUMISWAP:\n                return {\n                    TYPE: tradeProvider,\n                    IS_UNISWAP_V2_LIKE: true,\n                    GRAPH_API: DEX_TRADE.YUMISWAP_THEGRAPH,\n                    INIT_CODE_HASH: DEX_TRADE.YUMISWAP_INIT_CODE_HASH,\n                    ROUTER_CONTRACT_ADDRESS: DEX_TRADE.YUMISWAP_ROUTER_ADDRESS,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.YUMISWAP_ROUTER_ADDRESS,\n                    FACTORY_CONTRACT_ADDRESS: DEX_TRADE.YUMISWAP_FACTORY_ADDRESS,\n                    AGAINST_TOKENS: YUMISWAP_BASE_AGAINST_TOKENS,\n                    ADDITIONAL_TOKENS: {},\n                    CUSTOM_TOKENS: YUMISWAP_CUSTOM_BASES,\n                }\n            case TradeProvider.ZRX:\n                return {\n                    TYPE: tradeProvider,\n                }\n            case TradeProvider.DODO:\n                return {\n                    TYPE: tradeProvider,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.DODO_EXCHANGE_PROXY_ADDRESS,\n                }\n            case TradeProvider.BANCOR:\n                return {\n                    TYPE: tradeProvider,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.BANCOR_EXCHANGE_PROXY_ADDRESS,\n                }\n            case TradeProvider.OPENOCEAN:\n                return {\n                    TYPE: tradeProvider,\n                    SPENDER_CONTRACT_ADDRESS: DEX_TRADE.OPENOCEAN_EXCHANGE_PROXY_ADDRESS,\n                }\n            default:\n                if (tradeProvider) unreachable(tradeProvider)\n                return null\n        }\n    }, [chainId, tradeProvider])\n}\n","import { useMemo } from 'react'\nimport { Percent, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { SwapRouter } from '@uniswap/v3-sdk'\nimport { useChainContext, useNetworkContext } from '@masknet/web3-hooks-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport type { TradeProvider } from '@masknet/public-api'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport type { Trade, SwapCall } from '../../types/index.js'\nimport { swapCallParameters } from '../../helpers/index.js'\nimport { SLIPPAGE_DEFAULT, UNISWAP_BIPS_BASE } from '../../constants/index.js'\nimport { useRouterV2Contract } from '../../contracts/uniswap/useRouterV2Contract.js'\nimport { useSwapRouterContract } from '../../contracts/uniswap/useSwapRouterContract.js'\nimport { useTransactionDeadline } from './useTransactionDeadline.js'\nimport { useGetTradeContext } from '../useGetTradeContext.js'\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param tradeProvider\n */\nexport function useSwapParameters(\n    trade: TraderAPI.TradeComputed<Trade> | null, // trade to execute, required\n    tradeProvider?: TradeProvider,\n    allowedSlippage: number = SLIPPAGE_DEFAULT,\n) {\n    const { account, chainId } = useChainContext()\n    const { pluginID } = useNetworkContext()\n    const context = useGetTradeContext(tradeProvider)\n    const deadline = useTransactionDeadline()\n    const routerV2Contract = useRouterV2Contract(\n        pluginID === NetworkPluginID.PLUGIN_EVM ? (chainId as ChainId) : undefined,\n        context?.ROUTER_CONTRACT_ADDRESS,\n    )\n    const swapRouterContract = useSwapRouterContract(\n        pluginID === NetworkPluginID.PLUGIN_EVM ? (chainId as ChainId) : undefined,\n        context?.ROUTER_CONTRACT_ADDRESS,\n    )\n\n    return useMemo<SwapCall[]>(() => {\n        if (!account || !trade?.trade_ || !deadline || pluginID !== NetworkPluginID.PLUGIN_EVM) return []\n\n        const { trade_ } = trade\n        const allowedSlippage_ = new Percent(allowedSlippage, UNISWAP_BIPS_BASE)\n\n        if (trade_ instanceof V2Trade) {\n            if (!routerV2Contract) return []\n\n            const parameters = [\n                swapCallParameters(\n                    trade_,\n                    {\n                        feeOnTransfer: false,\n                        allowedSlippage: allowedSlippage_,\n                        recipient: account,\n                        ttl: deadline.toNumber(),\n                    },\n                    tradeProvider,\n                ),\n            ]\n            if (trade_.tradeType === TradeType.EXACT_INPUT)\n                parameters.push(\n                    swapCallParameters(\n                        trade_,\n                        {\n                            feeOnTransfer: true,\n                            allowedSlippage: allowedSlippage_,\n                            recipient: account,\n                            ttl: deadline.toNumber(),\n                        },\n                        tradeProvider,\n                    ),\n                )\n            return parameters.map(({ methodName, args, value }) => {\n                return {\n                    address: routerV2Contract.options.address,\n                    calldata: routerV2Contract.methods[methodName as keyof typeof routerV2Contract.methods](\n                        // @ts-expect-error unsafe call\n                        ...args,\n                    ).encodeABI(),\n                    value,\n                }\n            })\n        } else {\n            if (!swapRouterContract) return []\n            const { value, calldata } = SwapRouter.swapCallParameters(trade_, {\n                recipient: account,\n                slippageTolerance: allowedSlippage_,\n                deadline: deadline.toNumber(),\n            })\n            return [\n                {\n                    address: swapRouterContract.options.address,\n                    calldata,\n                    value,\n                },\n            ]\n        }\n    }, [account, allowedSlippage, deadline, trade, routerV2Contract, swapRouterContract, pluginID])\n}\n","import { identity, pickBy } from 'lodash-es'\nimport { useAsyncFn } from 'react-use'\nimport { BigNumber } from 'bignumber.js'\nimport type { TradeProvider } from '@masknet/public-api'\nimport type { SwapParameters } from '@uniswap/v2-sdk'\nimport type { GasConfig } from '@masknet/web3-shared-evm'\nimport { useChainContext, useNetworkContext } from '@masknet/web3-hooks-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport { useSwapErrorCallback } from '../../SiteAdaptor/trader/hooks/useSwapErrorCallback.js'\nimport { useSwapParameters as useTradeParameters } from './useTradeParameters.js'\nimport type { SwapCall, Trade } from '../../types/index.js'\nimport { swapErrorToUserReadableMessage } from '../../helpers/index.js'\n\ninterface FailedCall {\n    parameters: SwapParameters\n    error: Error\n}\n\ninterface SwapCallEstimate {\n    call: SwapCall\n}\n\ninterface SuccessfulCall extends SwapCallEstimate {\n    call: SwapCall\n    gasEstimate: BigNumber\n}\n\ninterface FailedCall extends SwapCallEstimate {\n    call: SwapCall\n    error: Error\n}\n\nexport function useTradeCallback(\n    trade: TraderAPI.TradeComputed<Trade> | null,\n    tradeProvider?: TradeProvider,\n    gasConfig?: GasConfig,\n    allowedSlippage?: number,\n) {\n    const notifyError = useSwapErrorCallback()\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { pluginID } = useNetworkContext()\n    const tradeParameters = useTradeParameters(trade, tradeProvider, allowedSlippage)\n\n    return useAsyncFn(async () => {\n        if (!tradeParameters.length || pluginID !== NetworkPluginID.PLUGIN_EVM) {\n            return\n        }\n        // step 1: estimate each trade parameter\n        const estimatedCalls: SwapCallEstimate[] = await Promise.all(\n            tradeParameters.map(async (x) => {\n                const { address, calldata, value } = x\n                const config = {\n                    from: account,\n                    to: address,\n                    data: calldata,\n                    ...(!value || /^0x0*$/.test(value)\n                        ? {}\n                        : { value: `0x${Number.parseInt(value, 16).toString(16)}` }),\n                }\n\n                try {\n                    const gas = await Web3.estimateTransaction?.(config, undefined, { chainId })\n                    return {\n                        call: x,\n                        gasEstimate: new BigNumber(gas ?? 0),\n                    }\n                } catch (error) {\n                    return Web3.callTransaction(config, { chainId })\n                        .then(() => {\n                            return {\n                                call: x,\n                                error: new Error('Gas estimate failed'),\n                            }\n                        })\n                        .catch((error) => {\n                            return {\n                                call: x,\n                                error: new Error(swapErrorToUserReadableMessage(error)),\n                            }\n                        })\n                }\n            }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        let bestCallOption: SuccessfulCall | SwapCallEstimate | undefined = estimatedCalls.find(\n            (el, ix, list): el is SuccessfulCall =>\n                'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        // check if any calls errored with a recognizable error\n        if (!bestCallOption) {\n            const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n            if (errorCalls.length > 0) {\n                notifyError('Errors')\n                return\n            }\n            const firstNoErrorCall = estimatedCalls.find((call): call is SwapCallEstimate => !('error' in call))\n\n            bestCallOption = firstNoErrorCall\n        }\n\n        if (!bestCallOption) {\n            notifyError('No Best Call Option')\n            return\n        }\n\n        const {\n            call: { address, calldata, value },\n        } = bestCallOption\n\n        try {\n            const hash = await Web3.sendTransaction(\n                {\n                    from: account,\n                    to: address,\n                    data: calldata,\n                    ...('gasEstimate' in bestCallOption ? { gas: bestCallOption.gasEstimate.toFixed() } : {}),\n                    ...(!value || /^0x0*$/.test(value) ? {} : { value }),\n                    ...pickBy(gasConfig, identity),\n                },\n                {\n                    chainId,\n                    overrides: { ...gasConfig },\n                },\n            )\n            const receipt = await Web3.confirmTransaction(hash, { chainId })\n            if (!receipt.status) return\n            return receipt.transactionHash\n        } catch (error: any) {\n            if (!error?.code) {\n                throw error\n            }\n            throw new Error(\n                error?.message === 'Unable to add more requests.'\n                    ? 'Unable to add more requests.'\n                    : 'Transaction rejected.',\n            )\n        }\n    }, [account, tradeParameters, gasConfig, chainId, pluginID, notifyError])\n}\n","import { useMemo } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { pick } from 'lodash-es'\nimport stringify from 'json-stable-stringify'\nimport { useChainContext, useNetworkContext } from '@masknet/web3-hooks-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport type { GasConfig, Transaction } from '@masknet/web3-shared-evm'\nimport { Web3 } from '@masknet/web3-providers'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport type { SwapRouteSuccessResponse } from '../../types/index.js'\n\nexport function useTradeCallback(\n    tradeComputed: TraderAPI.TradeComputed<SwapRouteSuccessResponse> | null,\n    gasConfig?: GasConfig,\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { pluginID } = useNetworkContext()\n\n    // compose transaction config\n    const config = useMemo(() => {\n        if (!account || !tradeComputed?.trade_) return null\n        return {\n            from: account,\n            ...pick(tradeComputed.trade_, ['to', 'data', 'value']),\n        } as Transaction\n    }, [account, tradeComputed])\n\n    return useAsyncFn(async () => {\n        if (!account || !config || pluginID !== NetworkPluginID.PLUGIN_EVM) {\n            return\n        }\n\n        try {\n            const gas = await Web3.estimateTransaction?.(config, undefined, {\n                chainId,\n            })\n            const hash = await Web3.sendTransaction(\n                {\n                    ...config,\n                    gas,\n                },\n                { chainId, overrides: { ...gasConfig } },\n            )\n            const receipt = await Web3.confirmTransaction(hash, { chainId })\n            return receipt.transactionHash\n        } catch (error) {\n            return\n        }\n    }, [account, chainId, stringify(config), gasConfig, pluginID])\n}\n","import { pick } from 'lodash-es'\nimport { useMemo } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport stringify from 'json-stable-stringify'\nimport { ZERO } from '@masknet/web3-shared-base'\nimport { useChainContext, useNetworkContext } from '@masknet/web3-hooks-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport type { GasConfig } from '@masknet/web3-shared-evm'\nimport { Web3 } from '@masknet/web3-providers'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport { Bancor } from '../../providers/Bancor.js'\nimport type { SwapBancorRequest } from '../../types/index.js'\n\nexport function useTradeCallback(\n    tradeComputed: TraderAPI.TradeComputed<SwapBancorRequest> | null,\n    gasConfig?: GasConfig,\n) {\n    const { pluginID } = useNetworkContext()\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    const trade: SwapBancorRequest | null = useMemo(() => {\n        if (!account || !tradeComputed?.trade_) return null\n        return tradeComputed.trade_\n    }, [account, tradeComputed])\n\n    return useAsyncFn(async () => {\n        if (!account || !trade || pluginID !== NetworkPluginID.PLUGIN_EVM) return\n\n        try {\n            const data = await Bancor.swapTransactionBancor(trade)\n\n            // Note that if approval is required, the API will also return the necessary approval transaction.\n            const tradeTransaction = data.length === 1 ? data[0] : data[1]\n\n            const config = pick(tradeTransaction.transaction, ['to', 'data', 'from', 'value'])\n            const gas = await Web3.estimateTransaction?.(config, undefined, {\n                chainId,\n            })\n            const config_ = {\n                ...config,\n                gas: gas ?? ZERO.toString(),\n            }\n\n            // send transaction and wait for hash\n\n            const hash = await Web3.sendTransaction(config_, { chainId, overrides: { ...gasConfig } })\n            const receipt = await Web3.getTransactionReceipt(hash, {\n                chainId,\n            })\n\n            if (!receipt?.status) return\n\n            return receipt?.transactionHash\n        } catch (error) {\n            return\n        }\n    }, [account, chainId, stringify(trade), gasConfig, pluginID])\n}\n","import { useMemo } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { pick } from 'lodash-es'\nimport stringify from 'json-stable-stringify'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport type { GasConfig, Transaction } from '@masknet/web3-shared-evm'\nimport { useChainContext, useNetworkContext } from '@masknet/web3-hooks-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport type { SwapRouteSuccessResponse } from '../../types/index.js'\n\nexport function useTradeCallback(\n    tradeComputed: TraderAPI.TradeComputed<SwapRouteSuccessResponse> | null,\n    gasConfig?: GasConfig,\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { pluginID } = useNetworkContext()\n\n    // compose transaction config\n    const config = useMemo(() => {\n        if (!account || !tradeComputed?.trade_ || pluginID !== NetworkPluginID.PLUGIN_EVM) return null\n\n        return {\n            from: account,\n            ...pick(tradeComputed.trade_, ['to', 'data', 'value']),\n            ...gasConfig,\n        } as Transaction\n    }, [account, tradeComputed, gasConfig])\n\n    return useAsyncFn(async () => {\n        if (!account || !config) return\n\n        try {\n            const gas = await Web3.estimateTransaction?.(config, undefined, { chainId })\n            const hash = await Web3.sendTransaction(\n                {\n                    ...config,\n                    gas,\n                },\n                { chainId, overrides: { ...gasConfig } },\n            )\n            const receipt = await Web3.getTransactionReceipt(hash)\n            if (!receipt?.status) return\n\n            return receipt?.transactionHash\n        } catch (error) {\n            return\n        }\n    }, [account, chainId, stringify(config), pluginID])\n}\n","import { noop } from 'lodash-es'\nimport type { AsyncFnReturn } from 'react-use/lib/useAsyncFn.js'\nimport type { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport type { Trade as V3Trade } from '@uniswap/v3-sdk'\nimport type { Currency, TradeType } from '@uniswap/sdk-core'\nimport { unreachable } from '@masknet/kit'\nimport { TradeProvider } from '@masknet/public-api'\nimport type { ChainId, GasConfig } from '@masknet/web3-shared-evm'\nimport { useChainContext, useNetworkContext } from '@masknet/web3-hooks-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport { useTradeCallback as useNativeTokenWrapperCallback } from './native/useTradeCallback.js'\nimport { useTradeCallback as useZrxCallback } from './0x/useTradeCallback.js'\nimport { useTradeCallback as useUniswapCallback } from './uniswap/useTradeCallback.js'\nimport { useTradeCallback as useDODOCallback } from './dodo/useTradeCallback.js'\nimport { useTradeCallback as useBancorCallback } from './bancor/useTradeCallback.js'\nimport { useTradeCallback as useOpenOceanCallback } from './openocean/useTradeCallback.js'\nimport type { NativeTokenWrapper } from './native/useTradeComputed.js'\nimport { useGetTradeContext } from './useGetTradeContext.js'\nimport { isNativeTokenWrapper } from '../helpers/index.js'\nimport type {\n    SwapQuoteResponse,\n    SwapBancorRequest,\n    SwapRouteSuccessResponse,\n    SwapOOSuccessResponse,\n} from '../types/index.js'\n\nexport function useTradeCallback(\n    provider?: TradeProvider,\n    tradeComputed?: TraderAPI.TradeComputed | null,\n    gasConfig?: GasConfig,\n    allowedSlippage?: number,\n): AsyncFnReturn<() => Promise<string | undefined>> {\n    // trade context\n    const context = useGetTradeContext(provider)\n    const { chainId } = useChainContext()\n    const { pluginID } = useNetworkContext()\n    // create trade computed\n    const isNativeTokenWrapper_ = isNativeTokenWrapper(tradeComputed ?? null)\n    const tradeComputedForUniswapV2Like =\n        context?.IS_UNISWAP_V2_LIKE && !isNativeTokenWrapper_\n            ? (tradeComputed as TraderAPI.TradeComputed<V2Trade<Currency, Currency, TradeType>>)\n            : null\n    const tradeComputedForUniswapV3Like =\n        context?.IS_UNISWAP_V3_LIKE && !isNativeTokenWrapper_\n            ? (tradeComputed as TraderAPI.TradeComputed<V3Trade<Currency, Currency, TradeType>>)\n            : null\n    const tradeComputedForZRX = !isNativeTokenWrapper_\n        ? (tradeComputed as TraderAPI.TradeComputed<SwapQuoteResponse>)\n        : null\n    const tradeComputedForDODO = !isNativeTokenWrapper_\n        ? (tradeComputed as TraderAPI.TradeComputed<SwapRouteSuccessResponse>)\n        : null\n    const tradeComputedForBancor = !isNativeTokenWrapper_\n        ? (tradeComputed as TraderAPI.TradeComputed<SwapBancorRequest>)\n        : null\n    const tradeComputedForOpenOcean = !isNativeTokenWrapper_\n        ? (tradeComputed as TraderAPI.TradeComputed<SwapOOSuccessResponse>)\n        : null\n    // uniswap like providers\n    const uniswapV2Like = useUniswapCallback(tradeComputedForUniswapV2Like, provider, gasConfig, allowedSlippage)\n    const uniswapV3Like = useUniswapCallback(tradeComputedForUniswapV3Like, provider, gasConfig, allowedSlippage)\n\n    // other providers\n    const zrx = useZrxCallback(provider === TradeProvider.ZRX ? tradeComputedForZRX : null, gasConfig)\n    const dodo = useDODOCallback(provider === TradeProvider.DODO ? tradeComputedForDODO : null, gasConfig)\n    const bancor = useBancorCallback(provider === TradeProvider.BANCOR ? tradeComputedForBancor : null, gasConfig)\n    const openocean = useOpenOceanCallback(\n        provider === TradeProvider.OPENOCEAN ? tradeComputedForOpenOcean : null,\n        gasConfig,\n    )\n\n    // the trade is an ETH-WETH pair\n    const nativeTokenWrapper = useNativeTokenWrapperCallback(\n        tradeComputed as TraderAPI.TradeComputed<NativeTokenWrapper>,\n        gasConfig,\n        pluginID === NetworkPluginID.PLUGIN_EVM ? (chainId as ChainId) : undefined,\n    )\n    if (isNativeTokenWrapper_) return nativeTokenWrapper\n\n    // handle trades by various provider\n    switch (provider) {\n        case TradeProvider.UNISWAP_V2:\n            return uniswapV2Like\n        case TradeProvider.UNISWAP_V3:\n            return uniswapV3Like\n        case TradeProvider.SUSHISWAP:\n            return uniswapV2Like\n        case TradeProvider.QUICKSWAP:\n            return uniswapV2Like\n        case TradeProvider.PANCAKESWAP:\n            return uniswapV2Like\n        case TradeProvider.WANNASWAP:\n            return uniswapV2Like\n        case TradeProvider.TRISOLARIS:\n            return uniswapV2Like\n        case TradeProvider.MDEX:\n            return uniswapV2Like\n        case TradeProvider.ARTHSWAP:\n            return uniswapV2Like\n        case TradeProvider.VERSA:\n            return uniswapV2Like\n        case TradeProvider.ASTAREXCHANGE:\n            return uniswapV2Like\n        case TradeProvider.YUMISWAP:\n            return uniswapV2Like\n        case TradeProvider.ZRX:\n            return zrx\n        case TradeProvider.DODO:\n            return dodo\n        case TradeProvider.BANCOR:\n            return bancor\n        case TradeProvider.TRADERJOE:\n            return uniswapV2Like\n        case TradeProvider.PANGOLIN:\n            return uniswapV2Like\n        case TradeProvider.OPENOCEAN:\n            return openocean\n        default:\n            if (provider) unreachable(provider)\n            return [{ loading: false }, noop as () => Promise<undefined>] as AsyncFnReturn<\n                () => Promise<string | undefined>\n            >\n    }\n}\n","import { useMemo } from 'react'\nimport type { AsyncStateRetry } from 'react-use/lib/useAsyncRetry.js'\nimport { isGreaterThan, isLessThan, multipliedBy, leftShift } from '@masknet/web3-shared-base'\nimport {\n    useFungibleToken,\n    useFungibleTokenPrice,\n    useNativeTokenPrice,\n    useNetworkContext,\n    useWeb3Others,\n} from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport { MINIMUM_AMOUNT } from '../../../constants/index.js'\nimport { AllProviderTradeContext } from '../../../trader/useAllProviderTradeContext.js'\n\nexport function useSortedTrades(\n    traders: Array<AsyncStateRetry<TraderAPI.TradeInfo>>,\n    chainId: Web3Helper.ChainIdAll,\n    gasPrice?: string,\n) {\n    const { pluginID } = useNetworkContext()\n    const Others = useWeb3Others()\n    const { data: nativeToken } = useFungibleToken(pluginID, '', undefined, { chainId })\n    const { data: nativeTokenPrice = 0 } = useNativeTokenPrice(pluginID, { chainId })\n\n    const {\n        tradeState: [{ outputToken }],\n    } = AllProviderTradeContext.useContainer()\n\n    const { data: outputTokenPrice = 0 } = useFungibleTokenPrice(pluginID, outputToken?.address.toLowerCase(), {\n        chainId,\n    })\n\n    return useMemo(() => {\n        if (outputToken && nativeToken && (outputTokenPrice || nativeTokenPrice)) {\n            return traders\n                .map((trade) => {\n                    if (\n                        gasPrice &&\n                        trade.value?.value &&\n                        isGreaterThan(trade.value.value.outputAmount, MINIMUM_AMOUNT) &&\n                        trade.value.gas\n                    ) {\n                        const gasFee = multipliedBy(gasPrice, trade.value.gas).integerValue().toFixed()\n\n                        const gasFeeUSD = leftShift(gasFee ?? 0, nativeToken?.decimals).times(nativeTokenPrice)\n\n                        const finalPrice = leftShift(trade.value.value.outputAmount, outputToken.decimals)\n                            .times(\n                                !Others.isNativeTokenSchemaType(outputToken.schema)\n                                    ? outputTokenPrice\n                                    : nativeTokenPrice,\n                            )\n                            .minus(gasFeeUSD)\n\n                        return {\n                            ...trade,\n                            value: {\n                                ...trade.value,\n                                finalPrice,\n                            },\n                        }\n                    }\n                    return trade\n                })\n                .filter(({ value }) => !!value && !value.value?.outputAmount.isZero())\n                .sort((valueA, valueB) => {\n                    let a = valueA.value?.finalPrice\n                    let b = valueB.value?.finalPrice\n\n                    const gasA = valueA.value?.gas\n                    const gasB = valueB.value?.gas\n\n                    if (!gasA && gasB) {\n                        return 1 // B goes first\n                    } else if (gasA && !gasB) {\n                        return -1 // A goes first\n                    } else if (!gasA && !gasB) {\n                        a = valueA?.value?.value?.outputAmount\n                        b = valueB?.value?.value?.outputAmount\n                    }\n                    if (isGreaterThan(a ?? 0, b ?? 0)) return -1\n                    if (isLessThan(a ?? 0, b ?? 0)) return 1\n                    return 0\n                })\n        }\n        return traders\n            .filter(({ value }) => !!value && !value.value?.outputAmount.isZero())\n            .sort((valueA, valueB) => {\n                if (valueA.value?.value?.outputAmount.isGreaterThan(valueB.value?.value?.outputAmount ?? 0)) return -1\n                if (valueA.value?.value?.outputAmount.isLessThan(valueB.value?.value?.outputAmount ?? 0)) return 1\n                return 0\n            })\n    }, [\n        traders,\n        outputToken,\n        gasPrice,\n        outputTokenPrice,\n        nativeTokenPrice,\n        nativeToken,\n        Others.isNativeTokenSchemaType,\n    ])\n}\n","import { useEffect } from 'react'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { isNativeTokenAddress } from '@masknet/web3-shared-evm'\nimport { useChainContext, useBalance, useNetworkContext, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { AllProviderTradeActionType, AllProviderTradeContext } from '../../../trader/useAllProviderTradeContext.js'\n\nexport function useUpdateBalance(chainId: Web3Helper.ChainIdAll) {\n    const { account } = useChainContext()\n    const {\n        tradeState: [{ inputToken, outputToken }, dispatchTradeStore],\n    } = AllProviderTradeContext.useContainer()\n    const { pluginID } = useNetworkContext()\n    const Others = useWeb3Others()\n\n    const { data: balance } = useBalance(pluginID, {\n        chainId,\n    })\n\n    useEffect(() => {\n        if (account) return\n        dispatchTradeStore({\n            type: AllProviderTradeActionType.UPDATE_INPUT_TOKEN_BALANCE,\n            balance: '0',\n        })\n\n        dispatchTradeStore({\n            type: AllProviderTradeActionType.UPDATE_OUTPUT_TOKEN_BALANCE,\n            balance: '0',\n        })\n        return\n    }, [account])\n\n    useEffect(() => {\n        if (!account) return\n        if (Others.isNativeTokenSchemaType(inputToken?.schema)) {\n            dispatchTradeStore({\n                type: AllProviderTradeActionType.UPDATE_INPUT_TOKEN_BALANCE,\n                balance: balance || '0',\n            })\n        }\n    }, [account, inputToken?.schema, balance, Others.isNativeTokenSchemaType])\n\n    useEffect(() => {\n        if (!account) return\n        const value =\n            Others.isNativeTokenSchemaType(outputToken?.schema) || isNativeTokenAddress(outputToken?.address)\n                ? balance\n                : '0'\n        dispatchTradeStore({\n            type: AllProviderTradeActionType.UPDATE_OUTPUT_TOKEN_BALANCE,\n            balance: value || '0',\n        })\n    }, [account, outputToken?.schema, outputToken?.address, balance, Others.isNativeTokenSchemaType])\n}\n","import { noop } from 'lodash-es'\nimport { Chip, type ChipProps } from '@mui/material'\nimport { LoadingBase, makeStyles } from '@masknet/theme'\nimport { ExpandMore as ExpandMoreIcon, Error as ErrorIcon } from '@mui/icons-material'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { TokenIcon } from '../TokenIcon/index.js'\nimport type { Web3Helper } from '@masknet/web3-helpers'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        chip: {\n            border: 'none',\n            borderRadius: 8,\n            paddingLeft: theme.spacing(0.5),\n            fontSize: 12,\n        },\n        loadingChip: {\n            marginRight: theme.spacing(-0.5),\n            fontSize: 12,\n        },\n        icon: {\n            color: theme.palette.text.primary,\n            pointerEvents: 'none',\n        },\n        tokenIcon: {\n            width: 16,\n            height: 16,\n        },\n        noToken: {},\n    }\n})\n\nexport interface SelectTokenChipProps extends withClasses<'chip' | 'tokenIcon' | 'noToken'> {\n    token?: Web3Helper.FungibleTokenAll | null\n    error?: Error\n    loading?: boolean\n    readonly?: boolean\n    ChipProps?: Partial<ChipProps>\n    chainId?: Web3Helper.ChainIdAll\n}\n\n// todo: merge into one with SelectTokenChip\nexport function SelectTokenChip(props: SelectTokenChipProps) {\n    const t = useSharedTrans()\n    const { token, error, loading = false, readonly = false, ChipProps, chainId } = props\n    const { classes, cx } = useStyles(undefined, { props })\n    if (loading)\n        return (\n            <Chip\n                className={cx(classes.chip, classes.loadingChip)}\n                icon={<LoadingBase size={16} />}\n                size=\"small\"\n                clickable={false}\n                variant=\"outlined\"\n            />\n        )\n    if (!token)\n        return (\n            <Chip\n                className={cx(classes.chip, classes.noToken)}\n                label={t.select_token()}\n                size=\"small\"\n                clickable={!readonly}\n                {...ChipProps}\n            />\n        )\n\n    if (token && error)\n        return (\n            <Chip\n                className={classes.chip}\n                icon={<TokenIcon address={token.address} name={token.name} logoURL={token.logoURL} />}\n                deleteIcon={<ErrorIcon className={classes.icon} />}\n                label={token.symbol}\n                color=\"default\"\n                size=\"small\"\n                variant=\"outlined\"\n                clickable={!readonly}\n                // the delete icon only visible when this callback provided\n                onDelete={noop}\n                {...ChipProps}\n            />\n        )\n    return (\n        <Chip\n            className={classes.chip}\n            icon={\n                <TokenIcon\n                    className={classes.tokenIcon}\n                    address={token.address}\n                    name={token.name}\n                    logoURL={token.logoURL}\n                    chainId={chainId}\n                />\n            }\n            deleteIcon={readonly ? undefined : <ExpandMoreIcon className={classes.icon} />}\n            color=\"default\"\n            size=\"small\"\n            variant=\"outlined\"\n            clickable={!readonly}\n            label={token.symbol}\n            // the delete icon only visible when this callback provided\n            onDelete={readonly ? undefined : noop}\n            {...ChipProps}\n        />\n    )\n}\n","import { type ChangeEvent, memo, useCallback, useMemo } from 'react'\nimport { alpha, Box, Chip, chipClasses, lighten, Typography, InputBase } from '@mui/material'\nimport { makeStyles, MaskColorVar } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { isNativeTokenAddress } from '@masknet/web3-shared-evm'\nimport { formatBalance, formatCurrency, isZero } from '@masknet/web3-shared-base'\nimport { Sniffings, NUMERIC_INPUT_REGEXP_PATTERN } from '@masknet/shared-base'\nimport { FormattedBalance, SelectTokenChip, type SelectTokenChipProps } from '@masknet/shared'\nimport { useTraderTrans } from '../../../locales/index.js'\n\n// TODO: remove isDashboard after remove Dashboard page\nconst useStyles = makeStyles()((theme) => ({\n    filledInput: {\n        borderRadius: 12,\n        padding: 12,\n        background: `${\n            Sniffings.is_dashboard_page ? MaskColorVar.primaryBackground2 : theme.palette.maskColor?.input\n        }!important`,\n        border: `1px solid ${Sniffings.is_dashboard_page ? MaskColorVar.lineLight : theme.palette.maskColor?.line}`,\n        position: 'relative',\n        minHeight: 115,\n        outline: 'none!important',\n        '& input': {\n            padding: 11,\n            height: 18,\n        },\n    },\n    balance: {\n        fontWeight: 700,\n        lineHeight: '18px',\n        color: Sniffings.is_dashboard_page ? theme.palette.text.primary : theme.palette.maskColor?.second,\n        wordBreak: 'keep-all',\n    },\n    amount: {\n        marginLeft: 10,\n        color: !Sniffings.is_dashboard_page ? theme.palette.maskColor?.primary : undefined,\n        fontWeight: 700,\n    },\n    input: {\n        textAlign: 'right',\n        fontWeight: 500,\n        color: theme.palette.text.primary,\n        lineHeight: 1.2,\n        fontSize: 30,\n        paddingBottom: 20,\n    },\n    chip: {\n        borderRadius: 6,\n        marginLeft: 8,\n        height: 20,\n        backgroundColor: !Sniffings.is_dashboard_page ? theme.palette.maskColor?.primary : undefined,\n        '&:hover': {\n            backgroundColor: !Sniffings.is_dashboard_page\n                ? `${lighten(theme.palette.maskColor?.primary, 0.1)}!important`\n                : undefined,\n        },\n    },\n    chipLabel: {\n        fontSize: 12,\n        lineHeight: '16px',\n        color: theme.palette.common.white,\n        padding: '0 6px',\n    },\n    label: {\n        fontWeight: 700,\n        lineHeight: '18px',\n        color: theme.palette.maskColor?.second,\n        position: 'absolute',\n        top: 12,\n        left: 12,\n    },\n    price: {\n        lineHeight: '20px',\n        position: 'absolute',\n        bottom: 12,\n        right: 12,\n        color: Sniffings.is_dashboard_page ? MaskColorVar.normalText : theme.palette.maskColor?.second,\n    },\n    action: {\n        position: 'absolute',\n        top: 12,\n        right: 12,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    selectedTokenChip: {\n        borderRadius: '22px!important',\n        height: 'auto',\n        position: 'absolute',\n        top: 52.5,\n        left: 12,\n        transition: 'none',\n        backgroundColor: Sniffings.is_dashboard_page ? MaskColorVar.input : theme.palette.maskColor?.bottom,\n        paddingRight: 8,\n        [`& .${chipClasses.label}`]: {\n            paddingTop: 10,\n            paddingBottom: 10,\n            lineHeight: '18px',\n            fontSize: 14,\n            marginRight: 12,\n            fontWeight: 700,\n            color: !Sniffings.is_dashboard_page ? theme.palette.maskColor?.main : undefined,\n        },\n        ['&:hover']: {\n            backgroundColor: `${\n                Sniffings.is_dashboard_page ? MaskColorVar.input : theme.palette.maskColor?.bottom\n            }!important`,\n            boxShadow: `0px 4px 30px ${alpha(\n                theme.palette.maskColor.shadowBottom,\n                theme.palette.mode === 'dark' ? 0.15 : 0.1,\n            )}`,\n        },\n    },\n    chipTokenIcon: {\n        width: '30px!important',\n        height: '30px!important',\n    },\n    noToken: {\n        borderRadius: '18px !important',\n        backgroundColor: `${\n            Sniffings.is_dashboard_page ? theme.palette.primary.main : theme.palette.maskColor?.primary\n        } !important`,\n        ['&:hover']: {\n            backgroundColor: `${\n                Sniffings.is_dashboard_page\n                    ? theme.palette.primary.main\n                    : lighten(theme.palette.maskColor?.primary, 0.1)\n            }!important`,\n        },\n        [`& .${chipClasses.label}`]: {\n            color: theme.palette.common.white,\n            marginRight: 4,\n        },\n    },\n}))\n\ninterface InputTokenPanelUIProps extends withClasses<'root'> {\n    balance: string\n    amount: string\n    chainId: Web3Helper.ChainIdAll\n    maxAmount: string\n    token?: Web3Helper.FungibleTokenAll | null\n    tokenValueUSD: string\n    onAmountChange: (amount: string) => void\n    SelectTokenChip?: Partial<SelectTokenChipProps>\n    isAvailableBalance?: boolean\n}\n\nexport const InputTokenPanelUI = memo<InputTokenPanelUIProps>(\n    ({\n        chainId,\n        token,\n        balance,\n        onAmountChange,\n        amount,\n        SelectTokenChip: SelectTokenChipProps,\n        maxAmount,\n        tokenValueUSD,\n        isAvailableBalance,\n    }) => {\n        const t = useTraderTrans()\n        const { classes } = useStyles()\n\n        // #region update amount by self\n        const { RE_MATCH_WHOLE_AMOUNT, RE_MATCH_FRACTION_AMOUNT } = useMemo(\n            () => ({\n                RE_MATCH_FRACTION_AMOUNT: new RegExp(`^\\\\.\\\\d{0,${token?.decimals}}$`),\n                RE_MATCH_WHOLE_AMOUNT: new RegExp(`^\\\\d*\\\\.?\\\\d{0,${token?.decimals}}$`), // d.ddd...d\n            }),\n            [token?.decimals],\n        )\n\n        const onChange = useCallback(\n            (ev: ChangeEvent<HTMLInputElement>) => {\n                const amount_ = ev.currentTarget.value.replaceAll(',', '.')\n                if (amount_ && !new RegExp(NUMERIC_INPUT_REGEXP_PATTERN).test(amount_)) return\n                if (RE_MATCH_FRACTION_AMOUNT.test(amount_)) onAmountChange(`0${amount_}`)\n                else if (amount_ === '' || RE_MATCH_WHOLE_AMOUNT.test(amount_)) onAmountChange(amount_)\n            },\n            [onAmountChange, RE_MATCH_FRACTION_AMOUNT, RE_MATCH_WHOLE_AMOUNT],\n        )\n\n        const priceUSD = formatCurrency(tokenValueUSD, 'USD', { onlyRemainTwoOrZeroDecimal: true })\n\n        return (\n            <InputBase\n                fullWidth\n                type=\"text\"\n                className={classes.filledInput}\n                startAdornment={\n                    <Box>\n                        <Typography className={classes.label}>{t.plugin_trader_swap_from()}</Typography>\n                        <SelectTokenChip\n                            token={token}\n                            chainId={chainId}\n                            classes={{\n                                chip: classes.selectedTokenChip,\n                                tokenIcon: classes.chipTokenIcon,\n                                noToken: classes.noToken,\n                            }}\n                            {...SelectTokenChipProps}\n                        />\n                    </Box>\n                }\n                endAdornment={\n                    <>\n                        <Box className={classes.action}>\n                            <Typography className={classes.balance}>\n                                {isAvailableBalance || isNativeTokenAddress(token?.address)\n                                    ? t.available_balance()\n                                    : t.wallet_balance()}\n                                :\n                                <Typography component=\"span\" className={classes.amount} color=\"primary\">\n                                    <FormattedBalance\n                                        value={balance}\n                                        decimals={token?.decimals}\n                                        significant={6}\n                                        formatter={formatBalance}\n                                    />\n                                </Typography>\n                            </Typography>\n                            <Chip\n                                size=\"small\"\n                                label=\"MAX\"\n                                clickable\n                                color=\"primary\"\n                                variant=\"filled\"\n                                classes={{ root: classes.chip, label: classes.chipLabel }}\n                                onClick={() => {\n                                    onAmountChange(maxAmount)\n                                }}\n                            />\n                        </Box>\n                        <Typography className={classes.price}>\n                            {priceUSD.includes('<') || isZero(tokenValueUSD) ? '' : '\\u2248'}\n                            {priceUSD}\n                        </Typography>\n                    </>\n                }\n                value={amount}\n                onChange={onChange}\n                inputProps={{ className: classes.input, autoComplete: 'off' }}\n            />\n        )\n    },\n)\nInputTokenPanelUI.displayName = 'InputTokenPanelUI'\n","import { memo, useMemo } from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport { useFungibleTokenPrice, useNetworkContext, useWeb3Others } from '@masknet/web3-hooks-base'\nimport type { SelectTokenChipProps } from '@masknet/shared'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { formatEtherToWei } from '@masknet/web3-shared-evm'\nimport { InputTokenPanelUI } from './components/InputTokenPanelUI.js'\n\ninterface InputTokenPanelProps extends withClasses<'root'> {\n    balance: string\n    amount: string\n    chainId: Web3Helper.ChainIdAll\n    maxAmount: string\n    token?: Web3Helper.FungibleTokenAll | null\n    onAmountChange: (amount: string) => void\n    SelectTokenChip?: Partial<SelectTokenChipProps>\n    isAvailableBalance?: boolean\n}\n\nexport const InputTokenPanel = memo<InputTokenPanelProps>(\n    ({\n        chainId,\n        token,\n        balance,\n        onAmountChange,\n        amount,\n        SelectTokenChip: SelectTokenChipProps,\n        maxAmount,\n        isAvailableBalance,\n    }) => {\n        const { pluginID } = useNetworkContext()\n        const Others = useWeb3Others()\n        const { data: tokenPrice = 0 } = useFungibleTokenPrice(pluginID, token?.address?.toLowerCase())\n\n        const tokenValueUSD = useMemo(\n            () => (amount ? new BigNumber(amount).times(tokenPrice).toString() : '0'),\n            [amount, tokenPrice],\n        )\n\n        return (\n            <InputTokenPanelUI\n                isAvailableBalance={isAvailableBalance}\n                balance={Others.isNativeTokenAddress(token?.address) ? formatEtherToWei(maxAmount).toString() : balance}\n                token={token}\n                amount={amount}\n                chainId={chainId}\n                maxAmount={maxAmount}\n                onAmountChange={onAmountChange}\n                tokenValueUSD={tokenValueUSD}\n                SelectTokenChip={SelectTokenChipProps}\n            />\n        )\n    },\n)\n\nInputTokenPanel.displayName = 'InputTokenPanel'\n","import { useMemo } from 'react'\nimport type { BigNumber } from 'bignumber.js'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { multipliedBy, isGreaterThan } from '@masknet/web3-shared-base'\nimport { currentSlippageSettings } from '../../../settings.js'\nimport { AllProviderTradeContext } from '../../../trader/useAllProviderTradeContext.js'\n\nexport const useGreatThanSlippageSetting = (priceImpact?: BigNumber.Value) => {\n    const slippageSetting = useValueRef(currentSlippageSettings)\n    const { temporarySlippage } = AllProviderTradeContext.useContainer()\n\n    const slippage = temporarySlippage || slippageSetting\n\n    return useMemo(\n        () =>\n            isGreaterThan(\n                multipliedBy(priceImpact ?? 0, 10000)\n                    .toFixed(0)\n                    .replace(/\\.?0+$/, ''),\n                slippage,\n            ),\n        [priceImpact, slippage],\n    )\n}\n","import { memo } from 'react'\nimport { Box, TextField, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { Sniffings } from '@masknet/shared-base'\nimport { makeStyles, MaskColorVar } from '@masknet/theme'\nimport { formatBalance, isZero } from '@masknet/web3-shared-base'\nimport { FormattedBalance, DotLoading } from '@masknet/shared'\nimport { useTraderTrans } from '../../../locales/index.js'\n\n// TODO: remove isDashboard after remove Dashboard page\nconst useStyles = makeStyles()((theme) => ({\n    trade: {\n        marginBottom: 8,\n        padding: 10,\n        backgroundColor: `${\n            Sniffings.is_dashboard_page ? MaskColorVar.input : theme.palette.maskColor?.bottom\n        }!important`,\n        border: `1px solid ${Sniffings.is_dashboard_page ? MaskColorVar.lineLight : theme.palette.maskColor?.line}`,\n        borderRadius: 8,\n        alignItems: 'flex-start',\n        cursor: 'pointer',\n        position: 'relative',\n        minHeight: 82,\n    },\n    warningText: {\n        lineHeight: '18px',\n        position: 'absolute',\n        bottom: 10,\n        right: 10,\n        color: Sniffings.is_dashboard_page ? MaskColorVar.redMain : theme.palette.maskColor?.danger,\n        display: 'flex',\n        alignItems: 'center',\n        gap: 4,\n    },\n    provider: {\n        color: Sniffings.is_dashboard_page ? theme.palette.text.primary : theme.palette.maskColor?.main,\n        fontSize: 18,\n        lineHeight: '36px',\n        fontWeight: 700,\n        wordBreak: 'keep-all',\n    },\n    cost: {\n        color: Sniffings.is_dashboard_page ? MaskColorVar.normalText : theme.palette.maskColor?.second,\n        lineHeight: '18px',\n        marginTop: 8,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    input: {\n        textAlign: 'right',\n        fontWeight: 700,\n        color: theme.palette.text.primary,\n        lineHeight: 1.2,\n        fontSize: 30,\n        padding: 0,\n        cursor: 'pointer',\n        width: 'auto',\n    },\n    focus: {\n        border: `2px solid ${\n            Sniffings.is_dashboard_page ? theme.palette.primary.main : theme.palette.maskColor?.primary\n        }!important`,\n    },\n    best: {\n        position: 'absolute',\n        top: -12,\n        right: 22,\n    },\n    dotLoading: {\n        position: 'absolute',\n        top: 32,\n        right: 10,\n    },\n}))\n\ninterface TraderInfoUIProps {\n    isBest?: boolean\n    isFocus?: boolean\n    gasPrice?: string\n    onClick: () => void\n    loading: boolean\n    providerName: string\n    balance: string\n    priceImpact: string\n    isGreatThanSlippageSetting: boolean\n    gasFee: string\n    gasFeeValueUSD: string\n    nativeToken?: Web3Helper.FungibleTokenAll\n}\n\nexport const TraderInfoUI = memo<TraderInfoUIProps>(\n    ({\n        loading,\n        providerName,\n        onClick,\n        balance,\n        isFocus,\n        gasFee,\n        gasFeeValueUSD,\n        nativeToken,\n        isBest,\n        isGreatThanSlippageSetting,\n        priceImpact,\n    }) => {\n        const t = useTraderTrans()\n        const { classes, cx } = useStyles()\n\n        return (\n            <TextField\n                key={providerName}\n                fullWidth\n                type=\"text\"\n                variant=\"filled\"\n                onClick={onClick}\n                value={!loading ? balance : ''}\n                InputProps={{\n                    className: cx(classes.trade, isFocus ? classes.focus : null),\n                    disableUnderline: true,\n                    startAdornment: (\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                justifyContent: 'center',\n                                alignItems: 'flex-start',\n                                width: '100%',\n                            }}>\n                            <Typography className={classes.provider}>{providerName}</Typography>\n                            {!isZero(gasFee) ? (\n                                <Typography className={classes.cost}>\n                                    <Typography fontSize={14} lineHeight=\"20px\" component=\"span\">\n                                        {t.plugin_trader_gas_fee()}\n                                    </Typography>\n                                    <Typography fontSize={14} lineHeight=\"20px\" component=\"span\" marginLeft={0.5}>\n                                        <FormattedBalance\n                                            value={gasFee}\n                                            decimals={nativeToken?.decimals ?? 0}\n                                            significant={4}\n                                            symbol={nativeToken?.symbol}\n                                            formatter={formatBalance}\n                                        />\n                                    </Typography>\n                                    <Typography fontSize={14} lineHeight=\"20px\" component=\"span\">\n                                        ({gasFeeValueUSD.includes('<') ? '' : '\\u2248'}\n                                        {gasFeeValueUSD})\n                                    </Typography>\n                                </Typography>\n                            ) : null}\n                        </Box>\n                    ),\n                    endAdornment: (\n                        <>\n                            {isBest ? <Icons.BestTrade className={classes.best} /> : null}\n                            {isGreatThanSlippageSetting ? (\n                                <Typography className={classes.warningText}>\n                                    <Icons.CircleWarning size={18} />\n                                    {t.plugin_trader_price_image_value({\n                                        percent: priceImpact,\n                                    })}\n                                </Typography>\n                            ) : null}\n                            {loading ? (\n                                <div className={classes.dotLoading}>\n                                    <DotLoading />\n                                </div>\n                            ) : null}\n                        </>\n                    ),\n                }}\n                inputProps={{ className: classes.input, disabled: true }}\n            />\n        )\n    },\n)\n\ninterface DefaultTraderPlaceholderUIProps {\n    nativeToken?: Web3Helper.FungibleTokenAll\n}\n\nexport const DefaultTraderPlaceholderUI = memo<DefaultTraderPlaceholderUIProps>(({ nativeToken }) => {\n    const t = useTraderTrans()\n    const { classes, cx } = useStyles()\n\n    return (\n        <TextField\n            fullWidth\n            type=\"text\"\n            variant=\"filled\"\n            value={0}\n            InputProps={{\n                className: cx(classes.trade, classes.focus),\n                disableUnderline: true,\n                startAdornment: (\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            justifyContent: 'center',\n                            alignItems: 'flex-start',\n                            width: '100%',\n                        }}>\n                        <Typography className={classes.provider}>DEX</Typography>\n\n                        <Typography className={classes.cost}>\n                            <Typography fontSize={14} lineHeight=\"20px\" component=\"span\">\n                                {t.plugin_trader_gas_fee()}\n                            </Typography>\n                            <Typography fontSize={14} lineHeight=\"20px\" component=\"span\" marginLeft={0.5}>\n                                <FormattedBalance\n                                    value={0}\n                                    decimals={nativeToken?.decimals ?? 0}\n                                    significant={4}\n                                    symbol={nativeToken?.symbol}\n                                    formatter={formatBalance}\n                                />\n                            </Typography>\n                            <Typography fontSize={14} lineHeight=\"20px\" component=\"span\">\n                                {t.plugin_trader_tx_cost_usd({ usd: '0' })}\n                            </Typography>\n                        </Typography>\n                    </Box>\n                ),\n            }}\n            inputProps={{ className: classes.input, disabled: true }}\n        />\n    )\n})\n","import { TradeProvider } from '@masknet/public-api'\nimport { createLookupTableResolver } from '@masknet/shared-base'\n\nexport const resolveTradeProviderName = createLookupTableResolver<TradeProvider, string>(\n    {\n        [TradeProvider.UNISWAP_V2]: 'Uniswap V2',\n        [TradeProvider.UNISWAP_V3]: 'Uniswap V3',\n        [TradeProvider.ZRX]: '0x',\n        [TradeProvider.SUSHISWAP]: 'SushiSwap',\n        [TradeProvider.QUICKSWAP]: 'QuickSwap',\n        [TradeProvider.PANCAKESWAP]: 'PancakeSwap',\n        [TradeProvider.DODO]: 'DODO',\n        [TradeProvider.BANCOR]: 'Bancor',\n        [TradeProvider.OPENOCEAN]: 'OpenOcean',\n        [TradeProvider.TRADERJOE]: 'TraderJoe',\n        [TradeProvider.PANGOLIN]: 'PangolinDex',\n        [TradeProvider.TRISOLARIS]: 'Trisolaris',\n        [TradeProvider.WANNASWAP]: 'WannaSwap',\n        [TradeProvider.MDEX]: 'Mdex',\n        [TradeProvider.ARTHSWAP]: 'ArthSwap',\n        [TradeProvider.VERSA]: 'Versa',\n        [TradeProvider.ASTAREXCHANGE]: 'AstarExchange',\n        [TradeProvider.YUMISWAP]: 'YumiSwap',\n    },\n    (tradeProvider) => {\n        throw new Error(`Unknown provider type: ${tradeProvider}`)\n    },\n)\n","import { memo, useMemo } from 'react'\nimport type { AsyncStateRetry } from 'react-use/lib/useAsyncRetry.js'\nimport { formatWeiToEther } from '@masknet/web3-shared-evm'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport { multipliedBy, formatBalance, ZERO, formatCurrency, formatPercentage } from '@masknet/web3-shared-base'\nimport { useChainContext, useNativeTokenPrice, useNetworkContext, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { useGreatThanSlippageSetting } from './hooks/useGreatThanSlippageSetting.js'\nimport { DefaultTraderPlaceholderUI, TraderInfoUI } from './components/TraderInfoUI.js'\nimport { resolveTradeProviderName } from '../../helpers/index.js'\n\ninterface TraderInfoProps {\n    trade: AsyncStateRetry<TraderAPI.TradeInfo>\n    isBest?: boolean\n    isFocus?: boolean\n    gasPrice?: string\n    onClick: () => void\n}\n\nexport const TraderInfo = memo<TraderInfoProps>(({ trade, gasPrice, isBest, onClick, isFocus }) => {\n    const { chainId } = useChainContext()\n    const { pluginID } = useNetworkContext()\n    const Others = useWeb3Others()\n\n    // const nativeToken = createNativeToken(chainId)\n    const nativeToken = Others.createNativeToken(chainId)\n    const { data: tokenPrice = 0 } = useNativeTokenPrice(pluginID, { chainId })\n\n    const gasFee = useMemo(() => {\n        return trade.value?.gas && gasPrice\n            ? multipliedBy(gasPrice, trade.value?.gas)\n                  .integerValue()\n                  .toFixed()\n            : '0'\n    }, [trade.value?.gas, gasPrice])\n\n    const gasFeeValueUSD = useMemo(() => {\n        if (!gasFee) return ZERO.toString()\n        return formatCurrency(formatWeiToEther(gasFee).times(tokenPrice), 'USD', { onlyRemainTwoOrZeroDecimal: true })\n    }, [gasFee, tokenPrice])\n\n    const isGreatThanSlippageSetting = useGreatThanSlippageSetting(trade.value?.value?.priceImpact)\n\n    if (!trade.value) return null\n\n    return (\n        <TraderInfoUI\n            loading={trade.loading}\n            providerName={resolveTradeProviderName(trade.value.provider)}\n            onClick={onClick}\n            balance={formatBalance(trade.value?.value?.outputAmount ?? 0, trade?.value.value?.outputToken?.decimals, 2)}\n            gasFee={gasFee}\n            gasFeeValueUSD={gasFeeValueUSD}\n            nativeToken={nativeToken}\n            isBest={isBest}\n            isFocus={isFocus}\n            isGreatThanSlippageSetting={isGreatThanSlippageSetting}\n            priceImpact={formatPercentage(trade.value?.value?.priceImpact ?? 0)}\n        />\n    )\n})\n\nexport const DefaultTraderPlaceholder = memo(() => {\n    const { chainId } = useChainContext()\n    const Others = useWeb3Others()\n    const nativeToken = Others.createNativeToken(chainId)\n    return <DefaultTraderPlaceholderUI nativeToken={nativeToken} />\n})\n","import { memo, useCallback, useMemo, useRef, useState } from 'react'\nimport { useUpdateEffect } from 'react-use'\nimport type { AsyncStateRetry } from 'react-use/lib/useAsyncRetry.js'\nimport { first, noop } from 'lodash-es'\nimport { BigNumber } from 'bignumber.js'\nimport { Tune as TuneIcon } from '@mui/icons-material'\nimport { alpha, Box, chipClasses, Collapse, IconButton, lighten, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { SelectGasSettingsModal, SelectTokenChip, TokenSecurityBar, useTokenSecurity } from '@masknet/shared'\nimport { makeStyles, MaskColorVar } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { type ChainId, type GasConfig, GasEditor, type Transaction } from '@masknet/web3-shared-evm'\nimport { rightShift, multipliedBy, isZero, ZERO, formatBalance } from '@masknet/web3-shared-base'\nimport { PluginID, NetworkPluginID, Sniffings } from '@masknet/shared-base'\nimport { useChainContext, useNetworkContext, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport { useIsMinimalModeExtensionPage } from '@masknet/plugin-infra/extension-page'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport { InputTokenPanel } from './InputTokenPanel.js'\nimport { TokenPanel } from '../../types/index.js'\nimport { DefaultTraderPlaceholder, TraderInfo } from './TraderInfo.js'\nimport { MIN_GAS_LIMIT } from '../../constants/index.js'\nimport { AllProviderTradeContext } from '../../trader/useAllProviderTradeContext.js'\nimport { currentSlippageSettings } from '../../settings.js'\nimport { PluginTraderMessages } from '../../messages.js'\nimport { useTraderTrans } from '../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        root: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            padding: '0px 16px 16px',\n            marginTop: 28,\n            flex: 1,\n            maxHeight: 448,\n            overflow: 'auto',\n            '::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        reverseIcon: {\n            cursor: 'pointer',\n            color: Sniffings.is_dashboard_page\n                ? `${theme.palette.text.primary}!important`\n                : theme.palette.maskColor?.main,\n        },\n        card: {\n            background: Sniffings.is_dashboard_page ? MaskColorVar.primaryBackground2 : theme.palette.maskColor?.input,\n            border: `1px solid ${Sniffings.is_dashboard_page ? MaskColorVar.lineLight : theme.palette.maskColor?.line}`,\n            borderRadius: 12,\n            padding: 12,\n        },\n        reverse: {\n            backgroundColor: Sniffings.is_dashboard_page\n                ? MaskColorVar.lightBackground\n                : theme.palette.background.default,\n            width: 32,\n            height: 32,\n            borderRadius: 99,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        reverseWrapper: {\n            backgroundColor: theme.palette.background.paper,\n            padding: 2,\n            borderRadius: 99,\n            marginTop: -16,\n            zIndex: 1,\n        },\n        chevron: {\n            color: Sniffings.is_dashboard_page ? theme.palette.text.primary : theme.palette.text.strong,\n            transition: 'all 300ms',\n            cursor: 'pointer',\n        },\n        reverseChevron: {\n            transform: 'rotate(-180deg)',\n            transition: 'all 300ms',\n        },\n        status: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            padding: 16,\n        },\n        label: {\n            flex: 1,\n            textAlign: 'left',\n        },\n        icon: {\n            marginLeft: theme.spacing(0.5),\n            width: 20,\n            height: 20,\n            fontSize: 20,\n        },\n        section: {\n            width: '100%',\n        },\n\n        selectedTokenChip: {\n            borderRadius: '22px!important',\n            height: 'auto',\n            backgroundColor: Sniffings.is_dashboard_page ? MaskColorVar.input : theme.palette.maskColor?.bottom,\n            paddingRight: 8,\n            [`& .${chipClasses.label}`]: {\n                paddingTop: 10,\n                paddingBottom: 10,\n                lineHeight: '18px',\n                fontSize: 14,\n                marginRight: 12,\n                fontWeight: 700,\n                color: !Sniffings.is_dashboard_page ? theme.palette.maskColor?.main : undefined,\n            },\n            ['&:hover']: {\n                backgroundColor: `${\n                    Sniffings.is_dashboard_page ? MaskColorVar.input : theme.palette.maskColor?.bottom\n                }!important`,\n                boxShadow: `0px 4px 30px ${alpha(\n                    theme.palette.maskColor.shadowBottom,\n                    theme.palette.mode === 'dark' ? 0.15 : 0.1,\n                )}`,\n            },\n        },\n        chipTokenIcon: {\n            width: '28px!important',\n            height: '28px!important',\n        },\n        controller: {\n            width: '100%',\n            // Just for design\n            backgroundColor: Sniffings.is_dashboard_page ? MaskColorVar.mainBackground : theme.palette.maskColor.bottom,\n            position: 'sticky',\n            bottom: Sniffings.is_popup_page ? -12 : -20,\n        },\n        noToken: {\n            borderRadius: '18px !important',\n            backgroundColor: `${\n                Sniffings.is_dashboard_page ? theme.palette.primary.main : theme.palette.maskColor?.primary\n            } !important`,\n            ['&:hover']: {\n                backgroundColor: `${\n                    Sniffings.is_dashboard_page\n                        ? theme.palette.primary.main\n                        : lighten(theme.palette.maskColor?.primary, 0.1)\n                }!important`,\n            },\n            [`& .${chipClasses.label}`]: {\n                color: `${theme.palette.common.white}!important`,\n                marginRight: 4,\n            },\n        },\n        dropIcon: {\n            width: 20,\n            height: 24,\n            color: `${\n                Sniffings.is_dashboard_page ? theme.palette.text.primary : theme.palette.maskColor.main\n            }!important`,\n        },\n        whiteDrop: {\n            color: '#ffffff !important',\n        },\n\n        title: {\n            fontSize: 14,\n            fontWeight: 700,\n            lineHeight: '18px',\n            color: theme.palette.maskColor?.second,\n            marginBottom: 12,\n        },\n    }\n})\n\ninterface AllTradeFormProps extends withClasses<'root'> {\n    inputAmount: string\n    inputToken?: Web3Helper.FungibleTokenAll\n    outputToken?: Web3Helper.FungibleTokenAll\n    inputTokenBalance?: string\n    onInputAmountChange: (amount: string) => void\n    onTokenChipClick?: (token: TokenPanel) => void\n    onRefreshClick?: () => void\n    trades: Array<AsyncStateRetry<TraderAPI.TradeInfo>>\n    focusedTrade?: AsyncStateRetry<TraderAPI.TradeInfo>\n    gasPrice?: string\n    onFocusedTradeChange: (trade: AsyncStateRetry<TraderAPI.TradeInfo>) => void\n    onSwitch: () => void\n    settings?: boolean\n    gasConfig?: GasConfig\n    isSmartPay: boolean\n}\n\nexport const TradeForm = memo<AllTradeFormProps>(\n    ({\n        trades,\n        inputAmount,\n        inputToken,\n        outputToken,\n        onTokenChipClick = noop,\n        onInputAmountChange,\n        inputTokenBalance,\n        focusedTrade,\n        onFocusedTradeChange,\n        isSmartPay,\n        gasPrice,\n        onSwitch,\n        settings,\n        gasConfig,\n        ...props\n    }) => {\n        const maxAmountTrade = useRef<AsyncStateRetry<TraderAPI.TradeInfo> | null>(null)\n        const userSelected = useRef(false)\n        const t = useTraderTrans()\n        const { classes, cx } = useStyles(undefined, { props })\n        const { chainId } = useChainContext()\n        const { pluginID } = useNetworkContext()\n        const Others = useWeb3Others()\n        const { allTradeComputed } = AllProviderTradeContext.useContainer()\n        const [isExpand, setExpand] = useState(false)\n\n        const minimalPlugins = useActivatedPluginsSiteAdaptor(true)\n        const isGoPlusSecurityMinimal = minimalPlugins?.map((x) => x.ID).includes(PluginID.GoPlusSecurity)\n        const isClosedInExtensionPage = useIsMinimalModeExtensionPage(PluginID.GoPlusSecurity)\n        const isTokenSecurityEnable = !isGoPlusSecurityMinimal && !isClosedInExtensionPage\n\n        // #region token balance\n        const inputTokenBalanceAmount = new BigNumber(inputTokenBalance || '0')\n        // #endregion\n\n        // #region get the best trade\n        const bestTrade = useMemo(() => first(trades), [trades])\n        // #endregion\n\n        // #region form controls\n        const inputTokenTradeAmount = rightShift(inputAmount || '0', inputToken?.decimals)\n        // #endregion\n\n        const maxAmount = useMemo(() => {\n            const marginGasPrice = multipliedBy(gasPrice ?? 0, 1.1)\n            const gasFee = multipliedBy(marginGasPrice, focusedTrade?.value?.gas ?? MIN_GAS_LIMIT)\n            let amount_ = new BigNumber(inputTokenBalanceAmount.toFixed() ?? 0)\n            amount_ = BigNumber.max(\n                0,\n                Others.isNativeTokenSchemaType(inputToken?.schema) ? amount_.minus(gasFee) : amount_,\n            )\n\n            return isZero(amount_)\n                ? ZERO.toString()\n                : formatBalance(amount_.integerValue(), inputToken?.decimals, undefined, true)\n        }, [focusedTrade, gasPrice, inputTokenTradeAmount, inputToken, Others.isNativeTokenSchemaType])\n\n        const handleAmountChange = useCallback(\n            (amount: string) => {\n                maxAmountTrade.current =\n                    new BigNumber(maxAmount).isEqualTo(amount) && focusedTrade ? focusedTrade : null\n                onInputAmountChange(amount)\n            },\n            [onInputAmountChange, maxAmount, focusedTrade],\n        )\n\n        useUpdateEffect(() => {\n            setExpand(false)\n        }, [chainId, inputToken, inputAmount, outputToken])\n\n        useUpdateEffect(() => {\n            if (maxAmountTrade.current) {\n                onFocusedTradeChange(maxAmountTrade.current)\n                return\n            }\n\n            if (bestTrade?.value && !userSelected.current) {\n                onFocusedTradeChange(bestTrade)\n            }\n        }, [bestTrade])\n\n        const firstTraderInfo = useMemo(() => {\n            if (!bestTrade) return null\n\n            if (isExpand)\n                return (\n                    <TraderInfo\n                        trade={bestTrade}\n                        gasPrice={gasPrice}\n                        onClick={() => {\n                            if (!userSelected.current) userSelected.current = true\n                            onFocusedTradeChange(bestTrade)\n                            setExpand(false)\n                        }}\n                        isFocus={bestTrade.value?.provider === focusedTrade?.value?.provider}\n                        isBest\n                    />\n                )\n            else if (focusedTrade)\n                return (\n                    <TraderInfo\n                        trade={focusedTrade}\n                        gasPrice={gasPrice}\n                        onClick={() => {\n                            onFocusedTradeChange(focusedTrade)\n                            setExpand(false)\n                        }}\n                        isFocus\n                        isBest={bestTrade.value?.provider === focusedTrade?.value?.provider}\n                    />\n                )\n            return null\n        }, [trades, bestTrade, gasPrice, focusedTrade, onFocusedTradeChange, isExpand])\n\n        useUpdateEffect(() => {\n            userSelected.current = false\n        }, [inputAmount, inputToken, outputToken])\n\n        // #region clear maxAmount trade cache\n        useUpdateEffect(() => {\n            if (!focusedTrade || !maxAmountTrade.current) return\n            if (focusedTrade.value?.provider !== maxAmountTrade.current.value?.provider) maxAmountTrade.current = null\n        }, [focusedTrade])\n\n        useUpdateEffect(() => {\n            maxAmountTrade.current = null\n        }, [inputToken, outputToken])\n        // #endregion\n\n        // #region gas settings\n        const openSwapSettingDialog = useCallback(async () => {\n            PluginTraderMessages.swapSettingsUpdated.sendToAll({\n                open: true,\n            })\n            const { settings } = await SelectGasSettingsModal.openAndWaitForClose({\n                chainId,\n                disableGasLimit: true,\n                disableSlippageTolerance: false,\n                slippageTolerance: currentSlippageSettings.value / 100,\n                transaction: {\n                    gas: focusedTrade?.value?.gas ?? MIN_GAS_LIMIT,\n                    ...gasConfig,\n                },\n            })\n            if (settings?.slippageTolerance) currentSlippageSettings.value = settings.slippageTolerance\n\n            PluginTraderMessages.swapSettingsUpdated.sendToAll({\n                open: false,\n                gasConfig: GasEditor.fromTransaction(\n                    chainId as ChainId,\n                    settings?.transaction as Transaction,\n                ).getGasConfig(),\n            })\n        }, [chainId, focusedTrade?.value?.gas, gasConfig])\n        // #endregion\n\n        const { value: tokenSecurityInfo, error } = useTokenSecurity(\n            pluginID === NetworkPluginID.PLUGIN_EVM ? (chainId as ChainId) : undefined,\n            outputToken?.address.trim(),\n            isTokenSecurityEnable,\n        )\n\n        return (\n            <>\n                <Box className={classes.root}>\n                    <InputTokenPanel\n                        isAvailableBalance={isSmartPay}\n                        chainId={chainId}\n                        amount={inputAmount}\n                        balance={inputTokenBalanceAmount.toFixed()}\n                        token={inputToken}\n                        onAmountChange={handleAmountChange}\n                        maxAmount={maxAmount}\n                        SelectTokenChip={{\n                            ChipProps: {\n                                onClick: () => onTokenChipClick(TokenPanel.Input),\n                                onDelete: () => onTokenChipClick(TokenPanel.Input),\n                                deleteIcon: (\n                                    <Icons.Drop\n                                        className={cx(classes.dropIcon, !inputToken ? classes.whiteDrop : null)}\n                                    />\n                                ),\n                            },\n                        }}\n                    />\n                    <Box className={classes.reverseWrapper}>\n                        <Box className={classes.reverse}>\n                            <Icons.ArrowDownward className={classes.reverseIcon} onClick={onSwitch} />\n                        </Box>\n                    </Box>\n                    <Box className={classes.section} marginBottom={2.5}>\n                        <Box className={classes.card}>\n                            <Typography className={classes.title}>{t.plugin_trader_swap_receive()}</Typography>\n                            <SelectTokenChip\n                                chainId={chainId}\n                                classes={{\n                                    chip: classes.selectedTokenChip,\n                                    tokenIcon: classes.chipTokenIcon,\n                                    noToken: classes.noToken,\n                                }}\n                                token={outputToken}\n                                ChipProps={{\n                                    onClick: () => onTokenChipClick(TokenPanel.Output),\n                                    onDelete: () => onTokenChipClick(TokenPanel.Output),\n                                    deleteIcon: (\n                                        <Icons.Drop\n                                            className={cx(classes.dropIcon, !outputToken ? classes.whiteDrop : null)}\n                                        />\n                                    ),\n                                }}\n                            />\n                            <Box marginTop=\"8px\">\n                                {isTokenSecurityEnable && tokenSecurityInfo && !error ? (\n                                    <TokenSecurityBar tokenSecurity={tokenSecurityInfo} />\n                                ) : null}\n                            </Box>\n\n                            <Box marginTop=\"12px\">\n                                {trades.filter((item) => !!item.value).length > 0 ? (\n                                    firstTraderInfo\n                                ) : (\n                                    <DefaultTraderPlaceholder />\n                                )}\n                                <Collapse in={isExpand}>\n                                    {trades.slice(1).map((trade) => (\n                                        <TraderInfo\n                                            key={trade.value?.provider}\n                                            trade={trade}\n                                            onClick={() => {\n                                                if (!userSelected.current) userSelected.current = true\n                                                onFocusedTradeChange(trade)\n                                                setExpand(false)\n                                            }}\n                                            isFocus={trade.value?.provider === focusedTrade?.value?.provider}\n                                            gasPrice={gasPrice}\n                                        />\n                                    ))}\n                                </Collapse>\n                                {trades.filter((x) => !!x.value).length > 1 ? (\n                                    <Box width=\"100%\" display=\"flex\" justifyContent=\"center\" marginTop={1.5}>\n                                        <Icons.ChevronUp\n                                            className={cx(classes.chevron, isExpand ? classes.reverseChevron : null)}\n                                            onClick={() => setExpand(!isExpand)}\n                                        />\n                                    </Box>\n                                ) : null}\n                            </Box>\n                        </Box>\n                    </Box>\n                </Box>\n                {settings ? (\n                    <Box className={classes.section}>\n                        <Box className={classes.controller}>\n                            <Box className={classes.section}>\n                                <div className={classes.status}>\n                                    <Typography className={classes.label} color=\"textSecondary\" variant=\"body2\">\n                                        {t.plugin_trader_slippage_tolerance()}\n                                    </Typography>\n                                    <IconButton\n                                        className={classes.icon}\n                                        size=\"small\"\n                                        onClick={() => allTradeComputed.forEach((x) => x.retry())}>\n                                        <Icons.Refresh />\n                                    </IconButton>\n                                    <IconButton className={classes.icon} size=\"small\" onClick={openSwapSettingDialog}>\n                                        <TuneIcon fontSize=\"small\" />\n                                    </IconButton>\n                                </div>\n                            </Box>\n                        </Box>\n                    </Box>\n                ) : null}\n            </>\n        )\n    },\n)\n","import { ActionButton } from '@masknet/theme'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport { useRemoteControlledDialog } from '@masknet/shared-base-ui'\nimport { PluginGoPlusSecurityMessages } from '../messages.js'\nimport { useGoPlusLabsTrans } from '../locales/index.js'\n\ninterface Token {\n    contract: string\n    name: string\n    chainId: ChainId\n}\n\nexport interface TokenSecurityBoundaryProps {\n    children?: React.ReactNode\n    showTokenSecurity?: boolean\n    tokenInfo: Token\n    onSwap: () => void\n    disabled: boolean\n}\n\nexport function TokenSecurityBoundary(props: TokenSecurityBoundaryProps) {\n    const { children = null, showTokenSecurity = false, tokenInfo, onSwap, disabled = true } = props\n\n    const t = useGoPlusLabsTrans()\n\n    const { setDialog: setRiskWarningDialog } = useRemoteControlledDialog(\n        PluginGoPlusSecurityMessages.tokenRiskWarningDialogEvent,\n        ({ swap }) => {\n            if (swap) onSwap()\n        },\n    )\n\n    if (showTokenSecurity)\n        return (\n            <ActionButton\n                color=\"error\"\n                fullWidth\n                variant=\"contained\"\n                disabled={disabled}\n                onClick={() => {\n                    setRiskWarningDialog({\n                        open: true,\n                        token: tokenInfo,\n                        swap: false,\n                    })\n                }}>\n                {t.confirm_swap_risk()}\n            </ActionButton>\n        )\n\n    return <>{children}</>\n}\n","import { useMemo } from 'react'\nimport { TradeProvider } from '@masknet/public-api'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { type ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport { type FungibleToken, ZERO } from '@masknet/web3-shared-base'\nimport { useChainContext, useNetworkContext } from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useGetTradeContext } from './useGetTradeContext.js'\nimport type { SwapQuoteResponse } from '../types/index.js'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\n\n// Only Support EVM ERC20\nexport function useTradeApproveComputed(\n    trade: TraderAPI.TradeComputed | null,\n    provider?: TradeProvider,\n    token?: Web3Helper.FungibleTokenAll,\n) {\n    const { pluginID } = useNetworkContext()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const context = useGetTradeContext(provider)\n\n    return useMemo(() => {\n        return {\n            approveToken:\n                pluginID === NetworkPluginID.PLUGIN_EVM && token?.schema === SchemaType.ERC20\n                    ? (token as FungibleToken<ChainId, SchemaType.ERC20>)\n                    : null,\n            approveAmount: trade ? trade.inputAmount : ZERO,\n            approveAddress: (() => {\n                if (context?.TYPE === TradeProvider.ZRX)\n                    return trade?.trade_ ? (trade.trade_ as SwapQuoteResponse).allowanceTarget : ''\n                if (context?.TYPE === TradeProvider.OPENOCEAN)\n                    return trade?.trade_ ? (trade?.trade_ as SwapQuoteResponse).to : context?.SPENDER_CONTRACT_ADDRESS\n                return context?.SPENDER_CONTRACT_ADDRESS ?? ''\n            })(),\n        }\n    }, [chainId, trade, token, context])\n}\n","import { useCallback, useMemo } from 'react'\nimport type { AsyncStateRetry } from 'react-use/lib/useAsyncRetry.js'\nimport { BigNumber } from 'bignumber.js'\nimport { alpha } from '@mui/system'\nimport { Box } from '@mui/material'\nimport { TokenSecurityBoundary } from '@masknet/plugin-go-plus-security'\nimport { useActivatedPluginsSiteAdaptor } from '@masknet/plugin-infra/content-script'\nimport { openPopupWindow } from '@masknet/plugin-infra/dom/context'\nimport { useIsMinimalModeExtensionPage } from '@masknet/plugin-infra/extension-page'\nimport {\n    PluginWalletStatusBar,\n    WalletConnectedBoundary,\n    EthereumERC20TokenApprovedBoundary,\n    useTokenSecurity,\n    ChainBoundary,\n} from '@masknet/shared'\nimport { NetworkPluginID, PluginID, PopupRoutes, Sniffings } from '@masknet/shared-base'\nimport { ActionButton, makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext, useEnvironmentContext, useNetworkContext, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { isLessThan, leftShift, multipliedBy, rightShift } from '@masknet/web3-shared-base'\nimport { ChainId, formatWeiToEther, SchemaType, ZERO_ADDRESS } from '@masknet/web3-shared-evm'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport { MINIMUM_AMOUNT, MIN_GAS_LIMIT } from '../../constants/index.js'\nimport { isNativeTokenWrapper, resolveTradeProviderName } from '../../helpers/index.js'\nimport { AllProviderTradeContext } from '../../trader/useAllProviderTradeContext.js'\nimport { useTradeApproveComputed } from '../../trader/useTradeApproveComputed.js'\nimport type { NativeTokenWrapper } from '../../trader/native/useTradeComputed.js'\nimport { useTraderTrans } from '../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    button: {\n        borderRadius: 8,\n    },\n    disabledButton: {\n        borderRadius: 8,\n    },\n    stateBar: {\n        position: 'sticky',\n        bottom: 0,\n        boxShadow: `0px 0px 20px ${alpha(\n            theme.palette.maskColor.shadowBottom,\n            theme.palette.mode === 'dark' ? 0.12 : 0.05,\n        )}`,\n    },\n    unlockContainer: {\n        margin: 0,\n        width: '100%',\n        ['& > div']: {\n            padding: '0px !important',\n        },\n    },\n}))\n\ninterface TradeStateBarProps {\n    inputAmount: string\n    focusedTrade?: AsyncStateRetry<TraderAPI.TradeInfo>\n    inputToken?: Web3Helper.FungibleTokenAll\n    outputToken?: Web3Helper.FungibleTokenAll\n    trades: Array<AsyncStateRetry<TraderAPI.TradeInfo>>\n    inputTokenBalance?: string\n    gasPrice?: string\n    onSwap: () => void\n    refresh: () => void\n}\nexport function TraderStateBar({\n    trades,\n    focusedTrade,\n    inputToken,\n    outputToken,\n    inputAmount,\n    inputTokenBalance,\n    gasPrice,\n    onSwap,\n    refresh,\n}: TradeStateBarProps) {\n    const t = useTraderTrans()\n    const { classes } = useStyles()\n\n    const { chainId } = useChainContext()\n    const { pluginID } = useNetworkContext()\n    const { pluginID: actualPluginID } = useEnvironmentContext()\n    const Others = useWeb3Others()\n\n    const { isSwapping } = AllProviderTradeContext.useContainer()\n\n    // #region if `isPopupPage` be true, click the plugin status bar need to  open popup window\n    const openSelectWalletPopup = useCallback(() => {\n        openPopupWindow?.(PopupRoutes.SelectWallet, {\n            chainId,\n        })\n    }, [chainId])\n    // #endregion\n\n    // #region approve token\n    const { approveToken, approveAmount, approveAddress } = useTradeApproveComputed(\n        focusedTrade?.value?.value ?? null,\n        focusedTrade?.value?.provider,\n        inputToken,\n    )\n    // #endregion\n\n    const minimalPlugins = useActivatedPluginsSiteAdaptor(true)\n    const isGoPlusMinimal = minimalPlugins?.map((x) => x.ID).includes(PluginID.GoPlusSecurity)\n    const isClosedInExtensionPage = useIsMinimalModeExtensionPage(PluginID.GoPlusSecurity)\n\n    const isTokenSecurityEnable = !isGoPlusMinimal && !isClosedInExtensionPage\n\n    const { value: tokenSecurityInfo } = useTokenSecurity(\n        pluginID === NetworkPluginID.PLUGIN_EVM ? (chainId as ChainId) : undefined,\n        outputToken?.address.trim(),\n        isTokenSecurityEnable,\n    )\n\n    const isRisky = tokenSecurityInfo?.is_high_risk\n\n    // #region form controls\n    const inputTokenTradeAmount = rightShift(inputAmount || '0', inputToken?.decimals)\n    // #endregion\n\n    // #region token balance\n    const inputTokenBalanceAmount = new BigNumber(inputTokenBalance || '0')\n    // #endregion\n\n    const maxAmount = useMemo(() => {\n        const marginGasPrice = multipliedBy(gasPrice ?? 0, 1.1)\n        const gasFee = multipliedBy(marginGasPrice, focusedTrade?.value?.gas ?? MIN_GAS_LIMIT)\n        let amount_ = new BigNumber(inputTokenBalanceAmount.toFixed() ?? 0)\n        amount_ = Others.isNativeTokenSchemaType(inputToken?.schema) ? amount_.minus(gasFee) : amount_\n        return leftShift(BigNumber.max(0, amount_), inputToken?.decimals).toFixed(5)\n    }, [focusedTrade, gasPrice, inputTokenTradeAmount, inputToken, Others.isNativeTokenSchemaType])\n\n    // #region UI logic\n    // validate form return a message if an error exists\n    const validationMessage = useMemo(() => {\n        if (inputTokenTradeAmount.isZero()) return t.plugin_trader_error_amount_absence()\n        if (isLessThan(inputAmount, MINIMUM_AMOUNT)) return t.plugin_trade_error_input_amount_less_minimum_amount()\n        if (!inputToken || !outputToken) return t.plugin_trader_error_amount_absence()\n        if (!trades.length) return t.plugin_trader_error_insufficient_lp()\n\n        if (\n            inputTokenBalanceAmount.isLessThan(inputTokenTradeAmount) ||\n            (Others.isNativeTokenSchemaType(inputToken.schema) &&\n                formatWeiToEther(inputTokenTradeAmount).isGreaterThan(maxAmount))\n        )\n            return t.plugin_trader_error_insufficient_balance({\n                symbol: inputToken?.symbol,\n            })\n\n        if (focusedTrade?.value && !focusedTrade.value.value?.outputAmount) return t.plugin_trader_no_enough_liquidity()\n        return ''\n    }, [\n        inputAmount,\n        focusedTrade,\n        trades,\n        inputToken,\n        outputToken,\n        inputTokenBalanceAmount.toFixed(),\n        inputTokenTradeAmount.toFixed(),\n        maxAmount,\n        Others.isNativeTokenSchemaType,\n    ])\n    // #endregion\n\n    // #region native wrap message\n    const nativeWrapMessage = useMemo(() => {\n        if (focusedTrade?.value) {\n            if (isNativeTokenWrapper(focusedTrade.value.value)) {\n                const trade_ = focusedTrade.value.value as TraderAPI.TradeComputed<NativeTokenWrapper> | null\n                return trade_?.trade_?.isWrap ? t.plugin_trader_wrap() : t.plugin_trader_unwrap()\n            }\n            return t.plugin_trader_swap_amount_symbol()\n        } else {\n            return t.plugin_trader_no_trade()\n        }\n    }, [focusedTrade, outputToken])\n    // #endregion\n\n    return (\n        <Box className={classes.stateBar}>\n            <PluginWalletStatusBar\n                actualPluginID={actualPluginID}\n                onClick={Sniffings.is_popup_page ? openSelectWalletPopup : undefined}>\n                <WalletConnectedBoundary offChain expectedChainId={chainId}>\n                    <EthereumERC20TokenApprovedBoundary\n                        spender={approveAddress}\n                        amount={approveAmount.toFixed()}\n                        classes={{ container: classes.unlockContainer }}\n                        contractName={\n                            focusedTrade?.value?.provider ? resolveTradeProviderName(focusedTrade.value?.provider) : ''\n                        }\n                        infiniteUnlockContent={t.plugin_trader_unlock_symbol({\n                            symbol: approveToken?.symbol || '',\n                        })}\n                        token={\n                            !isNativeTokenWrapper(focusedTrade?.value?.value ?? null) &&\n                            approveToken?.schema === SchemaType.ERC20 &&\n                            !!approveAmount.toNumber()\n                                ? approveToken\n                                : undefined\n                        }\n                        ActionButtonProps={{\n                            color: 'primary',\n                            style: { borderRadius: 8 },\n                            size: 'medium',\n                        }}\n                        callback={refresh}>\n                        <ChainBoundary expectedChainId={chainId} expectedPluginID={pluginID}>\n                            <TokenSecurityBoundary\n                                tokenInfo={{\n                                    name: tokenSecurityInfo?.token_name ?? '--',\n                                    chainId: tokenSecurityInfo?.chainId ?? ChainId.Mainnet,\n                                    contract: tokenSecurityInfo?.contract ?? ZERO_ADDRESS,\n                                }}\n                                disabled={\n                                    focusedTrade?.loading || !focusedTrade?.value || !!validationMessage || isSwapping\n                                }\n                                onSwap={onSwap}\n                                showTokenSecurity={!!(isTokenSecurityEnable && isRisky)}>\n                                <ActionButton\n                                    fullWidth\n                                    loading={isSwapping}\n                                    variant=\"contained\"\n                                    disabled={\n                                        focusedTrade?.loading ||\n                                        !focusedTrade?.value ||\n                                        !!validationMessage ||\n                                        isSwapping\n                                    }\n                                    classes={{ root: classes.button, disabled: classes.disabledButton }}\n                                    color=\"primary\"\n                                    onClick={onSwap}>\n                                    {validationMessage || nativeWrapMessage}\n                                </ActionButton>\n                            </TokenSecurityBoundary>\n                        </ChainBoundary>\n                    </EthereumERC20TokenApprovedBoundary>\n                </WalletConnectedBoundary>\n            </PluginWalletStatusBar>\n        </Box>\n    )\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import { memo, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useUpdateEffect } from 'react-use'\nimport type { BigNumber } from 'bignumber.js'\nimport { ArrowDownward } from '@mui/icons-material'\nimport { Alert, alpha, Box, Button, DialogActions, DialogContent, dialogTitleClasses, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles, MaskColorVar, parseColor } from '@masknet/theme'\nimport { Sniffings } from '@masknet/shared-base'\nimport { FormattedBalance, InjectedDialog, TokenIcon, PluginWalletStatusBar, DotLoading } from '@masknet/shared'\nimport { formatBalance, formatCurrency, formatPercentage, isZero } from '@masknet/web3-shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport { ONE_BIPS, MIN_SLIPPAGE, MAX_SLIPPAGE } from '../../../constants/index.js'\nimport { useTraderTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    section: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        margin: '16px 0',\n        '& > p': {\n            fontSize: 14,\n            lineHeight: '18px',\n            fontWeight: 700,\n            display: 'flex',\n            alignItems: 'center',\n        },\n    },\n    title: {\n        color: Sniffings.is_dashboard_page ? theme.palette.text.primary : theme.palette.maskColor?.second,\n    },\n    description: {\n        color: Sniffings.is_dashboard_page ? theme.palette.text.primary : theme.palette.maskColor?.main,\n    },\n    card: {\n        borderRadius: 12,\n        padding: 12,\n        background: `${\n            Sniffings.is_dashboard_page ? MaskColorVar.primaryBackground2 : theme.palette.maskColor?.input\n        }!important`,\n        border: `1px solid ${Sniffings.is_dashboard_page ? MaskColorVar.lineLight : theme.palette.maskColor?.line}`,\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: 10,\n        ['& > div']: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n        },\n    },\n    label: {\n        fontWeight: 700,\n        lineHeight: '18px',\n        color: theme.palette.maskColor?.second,\n    },\n    symbol: {\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 8,\n        fontWeight: 700,\n        lineHeight: '18px',\n    },\n    amount: {\n        fontSize: 30,\n        lineHeight: 1.2,\n        fontWeight: 700,\n        color: theme.palette.maskColor?.main,\n    },\n    tokenIcon: {\n        width: 30,\n        height: 30,\n    },\n    reverseWrapper: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    reverse: {\n        marginTop: -8,\n        border: `2px solid ${theme.palette.maskColor?.bottom}`,\n        backgroundColor: Sniffings.is_dashboard_page ? MaskColorVar.lightBackground : theme.palette.background.default,\n        width: 32,\n        height: 32,\n        borderRadius: 99,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    reverseIcon: {\n        stroke: Sniffings.is_dashboard_page ? `${theme.palette.text.primary}!important` : theme.palette.maskColor?.main,\n    },\n    alert: {\n        marginTop: 12,\n        fontSize: 14,\n        lineHeight: '18px',\n        display: 'flex',\n        alignItems: 'center',\n        padding: 12,\n        borderRadius: 4,\n    },\n    warning: {\n        backgroundColor: Sniffings.is_dashboard_page\n            ? theme.palette.warning.main\n            : parseColor(theme.palette.maskColor?.warn)\n                  .setAlpha(0.1)\n                  .toRgbString(),\n        color: Sniffings.is_dashboard_page ? theme.palette.warning.main : theme.palette.maskColor?.warn,\n    },\n    info: {\n        backgroundColor: Sniffings.is_dashboard_page ? theme.palette.background.default : theme.palette.maskColor?.bg,\n        color: Sniffings.is_dashboard_page ? theme.palette.text.primary : theme.palette.maskColor?.main,\n    },\n    error: {\n        backgroundColor: Sniffings.is_dashboard_page\n            ? MaskColorVar.redMain\n            : parseColor(theme.palette.maskColor?.danger)\n                  .setAlpha(0.1)\n                  .toRgbString(),\n        color: Sniffings.is_dashboard_page ? theme.palette.common.white : theme.palette.maskColor?.danger,\n    },\n    action: {\n        marginRight: 0,\n        padding: 0,\n        minWidth: 88,\n    },\n    infoIcon: {\n        color: Sniffings.is_dashboard_page ? MaskColorVar.twitterInfo : theme.palette.maskColor?.main,\n    },\n    content: {\n        padding: 16,\n        minHeight: 458,\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    actions: {\n        padding: 0,\n        position: 'sticky',\n        bottom: 0,\n        boxShadow: `0px 0px 20px ${alpha(\n            theme.palette.maskColor.shadowBottom,\n            theme.palette.mode === 'dark' ? 0.12 : 0.05,\n        )}`,\n    },\n    danger: {\n        color: `${Sniffings.is_dashboard_page ? MaskColorVar.redMain : theme.palette.maskColor?.danger}!important`,\n    },\n    edit: {\n        lineHeight: '18px',\n        color: Sniffings.is_dashboard_page ? theme.palette.primary.main : theme.palette.maskColor?.primary,\n        marginRight: 4,\n        fontWeight: 700,\n        cursor: 'pointer',\n    },\n    alertMessage: {\n        padding: 0,\n    },\n    alertIcon: {\n        padding: 0,\n    },\n    dialog: {\n        [`.${dialogTitleClasses.root}`]: {\n            // 'row !important' is not assignable to FlexDirection\n            flexDirection: 'row !important' as 'row',\n            '& > p': {\n                justifyContent: 'center !important',\n            },\n        },\n    },\n}))\n\ninterface ConfirmDialogUIProps {\n    open: boolean\n    currentSlippage: number\n    inputTokenPrice: number\n    outputTokenPrice: number\n    gasFee: string\n    gasFeeUSD: string\n    isGreatThanSlippageSetting: boolean\n    trade: TraderAPI.TradeComputed\n    nativeToken?: Web3Helper.FungibleTokenAll\n    inputToken: Web3Helper.FungibleTokenAll\n    outputToken: Web3Helper.FungibleTokenAll\n    onClose: () => void\n    openSettingDialog?: () => void\n    onConfirm: () => void\n    loading: boolean\n}\n\nexport const ConfirmDialogUI = memo<ConfirmDialogUIProps>(\n    ({\n        open,\n        onClose,\n        trade,\n        currentSlippage,\n        inputTokenPrice,\n        nativeToken,\n        inputToken,\n        outputToken,\n        outputTokenPrice,\n        gasFee,\n        gasFeeUSD,\n        openSettingDialog,\n        isGreatThanSlippageSetting,\n        onConfirm,\n        loading,\n    }) => {\n        const t = useTraderTrans()\n        const { classes, cx } = useStyles()\n\n        const [cacheTrade, setCacheTrade] = useState<TraderAPI.TradeComputed>()\n        const [priceUpdated, setPriceUpdated] = useState(false)\n        const [priceReversed, setPriceReversed] = useState(false)\n\n        // #region detect price changing\n        const [executionPrice, setExecutionPrice] = useState<BigNumber | undefined>(cacheTrade?.executionPrice)\n        useEffect(() => {\n            if (open) setExecutionPrice(undefined)\n        }, [open])\n        // #endregion\n\n        const staled = !!(executionPrice && !executionPrice.isEqualTo(cacheTrade?.executionPrice ?? 0))\n\n        const alertTip = useMemo(() => {\n            if (currentSlippage < MIN_SLIPPAGE && !isGreatThanSlippageSetting)\n                return (\n                    <Alert\n                        classes={{ message: classes.alertMessage, icon: classes.alertIcon }}\n                        className={cx(classes.alert, classes.warning)}\n                        icon={<Icons.WarningTriangle />}\n                        severity=\"warning\">\n                        {t.plugin_trader_price_impact_warning_tips()}\n                    </Alert>\n                )\n            else if (currentSlippage > MAX_SLIPPAGE && !isGreatThanSlippageSetting) {\n                return (\n                    <Alert\n                        classes={{ message: classes.alertMessage, icon: classes.alertIcon }}\n                        className={cx(classes.alert, classes.warning)}\n                        icon={<Icons.WarningTriangle />}\n                        severity=\"warning\">\n                        {t.plugin_trader_confirm_tips()}\n                    </Alert>\n                )\n            } else if (isGreatThanSlippageSetting && cacheTrade?.priceImpact) {\n                return (\n                    <Alert\n                        classes={{ message: classes.alertMessage, icon: classes.alertIcon }}\n                        className={cx(classes.alert, classes.error)}\n                        icon={<Icons.CircleWarning className={classes.danger} />}\n                        severity=\"error\">\n                        {t.plugin_trader_price_impact_too_high_tips({\n                            impact: formatPercentage(cacheTrade?.priceImpact),\n                        })}\n                    </Alert>\n                )\n            }\n\n            return null\n        }, [currentSlippage, isGreatThanSlippageSetting, cacheTrade?.priceImpact])\n\n        const onAccept = useCallback(() => {\n            setPriceUpdated(false)\n            setCacheTrade(trade)\n            setExecutionPrice(trade.executionPrice)\n        }, [trade])\n\n        // #region update cache trade and price updated state\n        useUpdateEffect(() => {\n            // when dialog has been closed, reset state\n            if (!open) {\n                setPriceUpdated(false)\n                setCacheTrade(undefined)\n                return\n            }\n            if (!cacheTrade) {\n                setCacheTrade(trade)\n            }\n            // when output amount or minimum received has been changed\n            else if (!priceUpdated && !cacheTrade.outputAmount.isEqualTo(trade.outputAmount)) {\n                setPriceUpdated(true)\n            }\n        }, [open, trade, cacheTrade, priceUpdated])\n        // #endregion\n\n        if (!cacheTrade) return null\n\n        const { inputAmount, outputAmount } = cacheTrade\n        const swapUsdPrice = formatCurrency(inputAmount.shiftedBy(-inputToken.decimals).times(inputTokenPrice), 'USD', {\n            onlyRemainTwoOrZeroDecimal: true,\n        })\n        return (\n            <InjectedDialog\n                open={open}\n                onClose={onClose}\n                title={t.plugin_trader_confirm_swap()}\n                className={classes.dialog}>\n                <DialogContent className={classes.content}>\n                    <Box className={classes.card}>\n                        <Box>\n                            <Typography className={classes.label}>{t.plugin_trader_swap_from()}</Typography>\n                            <Typography className={classes.label}>\n                                {swapUsdPrice.includes('<') ? '' : '\\u2248'}\n                                {swapUsdPrice}\n                            </Typography>\n                        </Box>\n                        <Box>\n                            <Typography component=\"div\" className={classes.symbol}>\n                                <TokenIcon\n                                    className={classes.tokenIcon}\n                                    address={inputToken.address}\n                                    name={inputToken.name}\n                                    symbol={inputToken.symbol}\n                                    logoURL={inputToken.logoURL}\n                                />\n                                {inputToken.symbol}\n                            </Typography>\n                            <Typography className={classes.amount}>\n                                <FormattedBalance\n                                    value={inputAmount.toFixed() ?? '0'}\n                                    decimals={inputToken.decimals}\n                                    significant={6}\n                                    formatter={formatBalance}\n                                />\n                            </Typography>\n                        </Box>\n                    </Box>\n                    <Box className={classes.reverseWrapper}>\n                        <Box className={classes.reverse}>\n                            <ArrowDownward className={classes.reverseIcon} />\n                        </Box>\n                    </Box>\n                    <Box className={classes.card} mt={-1}>\n                        <Box>\n                            <Typography className={classes.label}>{t.plugin_trader_swap_receive()}</Typography>\n                            <Typography className={classes.label}>\n                                {swapUsdPrice.includes('<') ? '' : '\\u2248'}\n                                {swapUsdPrice}\n                            </Typography>\n                        </Box>\n                        <Box>\n                            <Typography component=\"div\" className={classes.symbol}>\n                                <TokenIcon\n                                    className={classes.tokenIcon}\n                                    chainId={outputToken.chainId}\n                                    address={outputToken.address}\n                                    name={outputToken.name}\n                                    symbol={outputToken.symbol}\n                                    logoURL={outputToken.logoURL}\n                                />\n                                {outputToken.symbol}\n                            </Typography>\n                            {loading ? (\n                                <DotLoading />\n                            ) : (\n                                <Typography className={classes.amount}>\n                                    <FormattedBalance\n                                        value={outputAmount.toFixed() ?? '0'}\n                                        decimals={outputToken.decimals}\n                                        significant={6}\n                                        formatter={formatBalance}\n                                    />\n                                </Typography>\n                            )}\n                        </Box>\n                    </Box>\n                    <Box className={classes.section}>\n                        <Typography className={classes.title}>{t.plugin_trader_tab_price()}</Typography>\n                        <Typography className={classes.description}>\n                            {priceReversed ? (\n                                <span>\n                                    <span>1 {outputToken.symbol}</span>\n                                    {' = '}\n                                    <span>\n                                        {formatBalance(\n                                            inputAmount\n                                                .dividedBy(outputAmount)\n                                                .shiftedBy(outputToken.decimals - inputToken.decimals)\n                                                .shiftedBy(inputToken.decimals)\n                                                .integerValue(),\n                                            inputToken.decimals,\n                                            6,\n                                        )}\n                                    </span>\n                                    {inputToken.symbol}\n                                </span>\n                            ) : (\n                                <span>\n                                    <span>1 {inputToken.symbol}</span>\n                                    {' = '}\n                                    <span>\n                                        {formatBalance(\n                                            outputAmount\n                                                .dividedBy(inputAmount)\n                                                .shiftedBy(inputToken.decimals - outputToken.decimals)\n                                                .shiftedBy(outputToken.decimals)\n                                                .integerValue(),\n                                            outputToken.decimals,\n                                            6,\n                                        )}{' '}\n                                        {outputToken.symbol}\n                                    </span>\n                                </span>\n                            )}\n                            <Icons.Retweet\n                                style={{ marginLeft: 4, cursor: 'pointer' }}\n                                onClick={() => setPriceReversed((x) => !x)}\n                            />\n                        </Typography>\n                    </Box>\n                    <Box className={classes.section}>\n                        <Typography className={classes.title}>\n                            {t.plugin_trader_confirm_slippage_tolerance()}\n                        </Typography>\n                        <Typography className={classes.description}>\n                            {openSettingDialog ? (\n                                <Typography component=\"span\" className={classes.edit} onClick={openSettingDialog}>\n                                    {t.edit()}\n                                </Typography>\n                            ) : null}\n                            {currentSlippage / 100}%\n                        </Typography>\n                    </Box>\n                    <Box className={classes.section}>\n                        <Typography className={classes.title}>{t.plugin_trader_price_impact()}</Typography>\n                        <Typography className={isGreatThanSlippageSetting ? classes.danger : classes.description}>\n                            {cacheTrade?.priceImpact?.isLessThan(ONE_BIPS)\n                                ? '<0.01%'\n                                : formatPercentage(cacheTrade.priceImpact)}\n                        </Typography>\n                    </Box>\n                    <Box className={classes.section}>\n                        <Typography className={classes.title}>{t.plugin_trader_confirm_minimum_received()}</Typography>\n                        <Typography className={classes.description}>\n                            <FormattedBalance\n                                value={cacheTrade.minimumReceived}\n                                decimals={outputToken.decimals}\n                                significant={6}\n                                symbol={outputToken.symbol}\n                                formatter={formatBalance}\n                            />\n                        </Typography>\n                    </Box>\n\n                    {!isZero(gasFee) ? (\n                        <Box className={classes.section}>\n                            <Typography className={classes.title}>{t.plugin_trader_gas()}</Typography>\n                            <Typography className={classes.description}>\n                                {openSettingDialog ? (\n                                    <Typography component=\"span\" className={classes.edit} onClick={openSettingDialog}>\n                                        {t.edit()}\n                                    </Typography>\n                                ) : null}\n                                <FormattedBalance\n                                    value={gasFee}\n                                    decimals={nativeToken?.decimals ?? 0}\n                                    significant={4}\n                                    symbol={nativeToken?.symbol}\n                                    formatter={formatBalance}\n                                />\n                                <span>\n                                    ({gasFeeUSD.includes('<') ? '' : '\\u2248'}\n                                    {gasFeeUSD})\n                                </span>\n                            </Typography>\n                        </Box>\n                    ) : null}\n\n                    {priceUpdated ? (\n                        <Alert\n                            classes={{ action: classes.action, message: classes.alertMessage, icon: classes.alertIcon }}\n                            className={cx(classes.alert, classes.info)}\n                            icon={<Icons.Info className={classes.infoIcon} />}\n                            action={\n                                <Button\n                                    variant=\"roundedOutlined\"\n                                    size=\"small\"\n                                    color=\"info\"\n                                    fullWidth\n                                    onClick={onAccept}>\n                                    {t.plugin_trader_update()}\n                                </Button>\n                            }>\n                            {t.plugin_trader_price_updated()}\n                        </Alert>\n                    ) : (\n                        alertTip\n                    )}\n                </DialogContent>\n\n                <DialogActions className={classes.actions}>\n                    <PluginWalletStatusBar>\n                        <Button disabled={staled || priceUpdated} fullWidth onClick={onConfirm}>\n                            {t.plugin_trader_confirm_swap()}\n                        </Button>\n                    </PluginWalletStatusBar>\n                </DialogActions>\n            </InjectedDialog>\n        )\n    },\n)\n","import { memo } from 'react'\nimport type { BigNumber } from 'bignumber.js'\nimport {\n    alpha,\n    Button,\n    DialogActions,\n    dialogClasses,\n    DialogContent,\n    dialogTitleClasses,\n    Typography,\n} from '@mui/material'\nimport { makeStyles, MaskColorVar } from '@masknet/theme'\nimport { InjectedDialog, type InjectedDialogProps } from '@masknet/shared'\nimport { Sniffings } from '@masknet/shared-base'\nimport { Icons } from '@masknet/icons'\nimport { formatPercentage } from '@masknet/web3-shared-base'\nimport { useTraderTrans, TraderTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    dialog: {\n        [`.${dialogClasses.paper}`]: {\n            width: '420px!important',\n        },\n        [`.${dialogTitleClasses.root}`]: {\n            // 'row !important' is not assignable to FlexDirection\n            flexDirection: 'row !important' as 'row',\n            '& > p': {\n                justifyContent: 'center !important',\n            },\n        },\n    },\n    content: {\n        minHeight: 278,\n        padding: '38px 16px 120px 16px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    icon: {\n        color: Sniffings.is_dashboard_page ? MaskColorVar.redMain : theme.palette.maskColor?.danger,\n        width: 90,\n        height: 90,\n    },\n    title: {\n        color: Sniffings.is_dashboard_page ? MaskColorVar.redMain : theme.palette.maskColor?.danger,\n        fontSize: 24,\n        lineHeight: 1.2,\n        fontWeight: 700,\n        marginTop: 16,\n    },\n    description: {\n        marginTop: 56,\n        color: theme.palette.maskColor?.second,\n        fontSize: 16,\n        lineHeight: '20px',\n        '& > span': {\n            color: Sniffings.is_dashboard_page ? MaskColorVar.redMain : theme.palette.maskColor?.danger,\n        },\n    },\n    actions: {\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: 16,\n        padding: 16,\n        position: 'sticky',\n        bottom: 0,\n        boxShadow: `0px 0px 20px ${alpha(\n            theme.palette.maskColor.shadowBottom,\n            theme.palette.mode === 'dark' ? 0.12 : 0.05,\n        )}`,\n\n        '& > *': {\n            margin: '0px !important',\n        },\n    },\n}))\n\ninterface PriceImpactDialogProps extends InjectedDialogProps {\n    priceImpact?: BigNumber.Value\n    symbol?: string\n    onConfirm: () => void\n    lostToken: string\n    lostValue: string\n}\n\nexport const PriceImpactDialogUI = memo<PriceImpactDialogProps>(\n    ({ open, onClose, lostToken, lostValue, priceImpact, symbol, onConfirm }) => {\n        const t = useTraderTrans()\n        const { classes } = useStyles()\n\n        return (\n            <InjectedDialog open={open} onClose={onClose} title={t.impact_warning()} className={classes.dialog}>\n                <DialogContent className={classes.content}>\n                    <Icons.CircleWarning className={classes.icon} />\n                    <Typography className={classes.title}>{t.risk_warning()}</Typography>\n                    <Typography className={classes.description}>\n                        <TraderTrans.risk_warning_description\n                            components={{ span: <span /> }}\n                            values={{\n                                impact: formatPercentage(priceImpact ?? 0),\n                                lostSymbol: `${lostToken.replace('<', '&lt;')} ${symbol}`,\n                                lostValue: `${lostValue.replace('<', '&lt;')} USD`,\n                            }}\n                        />\n                    </Typography>\n                </DialogContent>\n                <DialogActions className={classes.actions}>\n                    <Button fullWidth onClick={onClose}>\n                        {t.adjust_order()}\n                    </Button>\n                    <Button fullWidth color=\"error\" onClick={onConfirm}>\n                        {t.make_trade_anyway()}\n                    </Button>\n                </DialogActions>\n            </InjectedDialog>\n        )\n    },\n)\n","import { useCallback, useMemo, useState } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { BigNumber } from 'bignumber.js'\nimport { SelectGasSettingsModal } from '@masknet/shared'\nimport { formatBalance, formatCurrency, leftShift, multipliedBy } from '@masknet/web3-shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { formatWeiToEther, GasEditor, type GasConfig, type ChainId, type Transaction } from '@masknet/web3-shared-evm'\nimport {\n    useNativeTokenPrice,\n    useFungibleTokenPrice,\n    useChainContext,\n    useWeb3Others,\n    useNetworkContext,\n} from '@masknet/web3-hooks-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { TraderAPI } from '@masknet/web3-providers/types'\nimport { useGreatThanSlippageSetting } from './hooks/useGreatThanSlippageSetting.js'\nimport { currentSlippageSettings } from '../../settings.js'\nimport { ConfirmDialogUI } from './components/ConfirmDialogUI.js'\nimport { PriceImpactDialogUI } from './components/PriceImpactDialogUI.js'\nimport { AllProviderTradeContext } from '../../trader/useAllProviderTradeContext.js'\nimport { MIN_GAS_LIMIT } from '../../constants/index.js'\nimport { PluginTraderMessages } from '../../messages.js'\n\ninterface ConfirmDialogProps {\n    open: boolean\n    onClose: () => void\n    trade: TraderAPI.TradeComputed\n    inputToken: Web3Helper.FungibleTokenAll\n    outputToken: Web3Helper.FungibleTokenAll\n    gas?: string\n    gasPrice?: string\n    gasConfig?: GasConfig\n    onConfirm: () => void\n    loading: boolean\n}\nconst PERCENT_DENOMINATOR = 10000\n\nexport function ConfirmDialog(props: ConfirmDialogProps) {\n    const { inputToken, outputToken, gas = MIN_GAS_LIMIT, gasPrice, trade, onConfirm, gasConfig } = props\n    const { chainId } = useChainContext()\n    const { pluginID } = useNetworkContext()\n    const Others = useWeb3Others()\n    const { setTemporarySlippage } = AllProviderTradeContext.useContainer()\n\n    const [priceImpactDialogOpen, setPriceImpactDialogOpen] = useState(false)\n\n    const currentSlippage = useValueRef(currentSlippageSettings)\n    const nativeToken = Others.createNativeToken(chainId)\n    const { data: nativeTokenPrice = 0 } = useNativeTokenPrice(pluginID)\n\n    const { data: inputTokenPrice = 0 } = useFungibleTokenPrice(pluginID, inputToken.address)\n    const { data: outputTokenPrice = 0 } = useFungibleTokenPrice(pluginID, outputToken.address)\n\n    const gasFee = useMemo(() => {\n        return gas && gasPrice ? multipliedBy(gasPrice, gas).integerValue().toFixed() : '0'\n    }, [gas, gasPrice])\n\n    const gasFeeUSD = useMemo(() => {\n        if (!gasFee) return '0'\n        return formatCurrency(formatWeiToEther(gasFee).times(nativeTokenPrice), 'USD', {\n            onlyRemainTwoOrZeroDecimal: true,\n        })\n    }, [gasFee, nativeTokenPrice])\n\n    const isGreatThanSlippageSetting = useGreatThanSlippageSetting(trade?.priceImpact)\n\n    const lostTokenValue = multipliedBy(trade.inputAmount, trade.priceImpact).toFixed(0)\n    // #region price impact dialog\n    const lostToken = formatBalance(lostTokenValue, trade.inputToken?.decimals ?? 0, 6)\n\n    const lostValue = formatCurrency(\n        multipliedBy(inputTokenPrice ?? 0, leftShift(lostTokenValue, trade.inputToken?.decimals ?? 0)),\n        '',\n        { onlyRemainTwoOrZeroDecimal: true },\n    )\n\n    const handleOpenPriceImpactDialog = useCallback(() => {\n        setPriceImpactDialogOpen(true)\n        props.onClose()\n    }, [props.onClose])\n\n    const handlePriceImpactDialogConfirm = useCallback(() => {\n        if (!trade.priceImpact) return\n        setTemporarySlippage(new BigNumber(trade?.priceImpact.multipliedBy(PERCENT_DENOMINATOR).toFixed(0)).toNumber())\n        onConfirm()\n        setPriceImpactDialogOpen(false)\n    }, [trade])\n\n    const onPriceImpactDialogClose = useCallback(() => {\n        setPriceImpactDialogOpen(false)\n    }, [])\n    // #endregion\n\n    const [, openSettingDialog] = useAsyncFn(async () => {\n        const { settings } = await SelectGasSettingsModal.openAndWaitForClose({\n            chainId,\n            disableGasLimit: true,\n            disableSlippageTolerance: false,\n            slippageTolerance: currentSlippageSettings.value / 100,\n            transaction: {\n                gas,\n                ...gasConfig,\n            },\n        })\n        if (settings?.slippageTolerance) currentSlippageSettings.value = settings.slippageTolerance\n\n        PluginTraderMessages.swapSettingsUpdated.sendToLocal({\n            open: false,\n            gasConfig: GasEditor.fromTransaction(\n                chainId as ChainId,\n                settings?.transaction as Transaction,\n            ).getGasConfig(),\n        })\n    }, [chainId, currentSlippageSettings.value, gas, gasConfig])\n\n    return (\n        <>\n            <ConfirmDialogUI\n                {...props}\n                currentSlippage={currentSlippage}\n                gasFee={gasFee}\n                gasFeeUSD={gasFeeUSD}\n                nativeToken={nativeToken}\n                inputTokenPrice={inputTokenPrice}\n                outputTokenPrice={outputTokenPrice}\n                openSettingDialog={pluginID === NetworkPluginID.PLUGIN_EVM ? openSettingDialog : undefined}\n                isGreatThanSlippageSetting={isGreatThanSlippageSetting}\n                onConfirm={isGreatThanSlippageSetting ? handleOpenPriceImpactDialog : onConfirm}\n            />\n            <PriceImpactDialogUI\n                open={priceImpactDialogOpen}\n                onClose={onPriceImpactDialogClose}\n                onConfirm={handlePriceImpactDialogConfirm}\n                lostToken={lostToken}\n                symbol={inputToken.symbol}\n                lostValue={lostValue}\n                priceImpact={trade.priceImpact}\n            />\n        </>\n    )\n}\n","import { forwardRef, useCallback, useEffect, useImperativeHandle, useState, useMemo } from 'react'\nimport { useAsync, useUnmount, useUpdateEffect } from 'react-use'\nimport type { AsyncStateRetry } from 'react-use/lib/useAsyncRetry.js'\nimport { BigNumber } from 'bignumber.js'\nimport { delay } from '@masknet/kit'\nimport { Box, Typography, useTheme } from '@mui/material'\nimport { ConfirmModal, SelectProviderModal, SelectFungibleTokenModal } from '@masknet/shared'\nimport { formatBalance, isSameAddress, isZero, minus, toFixed } from '@masknet/web3-shared-base'\nimport { addGasMargin, ChainId, type EIP1559GasConfig, type GasConfig } from '@masknet/web3-shared-evm'\nimport { useGasConfig } from '@masknet/web3-hooks-evm'\nimport {\n    useChainContext,\n    useChainIdValid,\n    useFungibleTokenBalance,\n    useMaskTokenAddress,\n    useNetworkContext,\n    useWallet,\n    useWeb3Others,\n} from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useActivatedPlugin } from '@masknet/plugin-infra/dom'\nimport { NetworkPluginID, PluginID, Sniffings } from '@masknet/shared-base'\nimport { type TraderAPI } from '@masknet/web3-providers/types'\nimport { DepositPaymaster, SmartPayBundler, Web3 } from '@masknet/web3-providers'\nimport { useTraderTrans } from '../../locales/index.js'\nimport { isNativeTokenWrapper } from '../../helpers/index.js'\nimport { PluginTraderMessages } from '../../messages.js'\nimport { AllProviderTradeActionType, AllProviderTradeContext } from '../../trader/useAllProviderTradeContext.js'\nimport { useTradeCallback } from '../../trader/useTradeCallback.js'\nimport { TokenPanel } from '../../types/index.js'\nimport { useSortedTrades } from './hooks/useSortedTrades.js'\nimport { useUpdateBalance } from './hooks/useUpdateBalance.js'\nimport { TradeForm } from './TradeForm.js'\nimport { TraderStateBar } from './TraderStateBar.js'\nimport { ConfirmDialog } from './ConfirmDialog.js'\nimport { Icons } from '@masknet/icons'\n\nexport interface TraderProps extends withClasses<'root'> {\n    defaultInputCoin?: Web3Helper.FungibleTokenAll\n    defaultOutputCoin?: Web3Helper.FungibleTokenAll\n    chainId?: Web3Helper.ChainIdAll\n    settings?: boolean\n    share: ((text: string) => void) | undefined\n}\n\nexport interface TraderRef {\n    gasConfig?: GasConfig\n    focusedTrade?: TraderAPI.TradeInfo\n    refresh: () => void\n}\n\nexport const Trader = forwardRef<TraderRef, TraderProps>((props: TraderProps, ref) => {\n    const theme = useTheme()\n    const wallet = useWallet()\n    const { defaultOutputCoin, chainId: targetChainId, defaultInputCoin, settings = false, share } = props\n    const t = useTraderTrans()\n    const [focusedTrade, setFocusTrade] = useState<AsyncStateRetry<TraderAPI.TradeInfo>>()\n    const { chainId, account, setChainId } = useChainContext({\n        chainId: targetChainId,\n    })\n    const { pluginID } = useNetworkContext()\n    const traderDefinition = useActivatedPlugin(PluginID.Trader, 'any')\n    const chainIdList = traderDefinition?.enableRequirement?.web3?.[NetworkPluginID.PLUGIN_EVM]?.supportedChainIds ?? []\n    const chainIdValid = useChainIdValid(pluginID, chainId)\n    const Others = useWeb3Others()\n\n    // #region trade state\n    const {\n        setIsSwapping,\n        tradeState: [{ inputToken, outputToken, inputTokenBalance, inputAmount }, dispatchTradeStore],\n        allTradeComputed,\n        setTemporarySlippage,\n        openConfirmDialog,\n        setOpenConfirmDialog,\n    } = AllProviderTradeContext.useContainer()\n    // #endregion\n\n    // #region gas config and gas price\n    const { gasPrice, gasConfig, setGasConfig } = useGasConfig(chainId)\n    // #endregion\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            gasConfig,\n            focusedTrade: focusedTrade?.value,\n            refresh: () => {\n                allTradeComputed.map((x) => x.retry())\n            },\n        }),\n        [allTradeComputed, focusedTrade?.value, gasConfig],\n    )\n\n    useEffect(() => {\n        if (!chainIdValid || !chainIdList.includes(chainId)) setChainId(ChainId.Mainnet)\n    }, [chainIdValid, chainIdList, chainId])\n\n    // #region if chain id be changed, update input token be native token\n    useEffect(() => {\n        if (!chainIdValid) return\n\n        dispatchTradeStore({\n            type: AllProviderTradeActionType.UPDATE_INPUT_TOKEN,\n            token: Others.createNativeToken(chainId),\n        })\n    }, [chainId, chainIdValid, Others.createNativeToken])\n    // #endregion\n\n    const updateTradingCoin = useCallback(\n        (\n            type: AllProviderTradeActionType.UPDATE_INPUT_TOKEN | AllProviderTradeActionType.UPDATE_OUTPUT_TOKEN,\n            coin?: Web3Helper.FungibleTokenAll,\n        ) => {\n            if (!coin?.address) return\n            dispatchTradeStore({\n                type,\n                token: coin,\n            })\n        },\n        [],\n    )\n    useEffect(() => {\n        updateTradingCoin(AllProviderTradeActionType.UPDATE_INPUT_TOKEN, defaultInputCoin)\n    }, [updateTradingCoin, defaultInputCoin])\n    useEffect(() => {\n        updateTradingCoin(AllProviderTradeActionType.UPDATE_OUTPUT_TOKEN, defaultOutputCoin)\n    }, [updateTradingCoin, defaultOutputCoin])\n\n    const onInputAmountChange = useCallback((amount: string) => {\n        dispatchTradeStore({\n            type: AllProviderTradeActionType.UPDATE_INPUT_AMOUNT,\n            amount,\n        })\n    }, [])\n\n    // #region update balance\n    const { data: inputTokenBalance_, isLoading: loadingInputTokenBalance } = useFungibleTokenBalance(\n        pluginID,\n        inputToken?.address ?? '',\n        { chainId },\n    )\n\n    const { data: outputTokenBalance_, isLoading: loadingOutputTokenBalance } = useFungibleTokenBalance(\n        pluginID,\n        outputToken?.address ?? '',\n        { chainId },\n    )\n\n    useEffect(() => {\n        if (!inputTokenBalance_ || loadingInputTokenBalance || !inputToken) {\n            return\n        }\n        dispatchTradeStore({\n            type: AllProviderTradeActionType.UPDATE_INPUT_TOKEN_BALANCE,\n            balance: inputTokenBalance_,\n        })\n    }, [inputTokenBalance_, loadingInputTokenBalance, inputToken])\n\n    useEffect(() => {\n        if (!outputTokenBalance_ || loadingOutputTokenBalance || outputToken) {\n            return\n        }\n        dispatchTradeStore({\n            type: AllProviderTradeActionType.UPDATE_OUTPUT_TOKEN_BALANCE,\n            balance: outputTokenBalance_,\n        })\n    }, [outputTokenBalance_, loadingOutputTokenBalance, outputToken])\n\n    // #region select token\n    const excludeTokens = [inputToken, outputToken].filter(Boolean).map((x) => x?.address) as string[]\n\n    const onTokenChipClick = useCallback(\n        async (panelType: TokenPanel) => {\n            if (!account) {\n                SelectProviderModal.open()\n                return\n            }\n            const picked = await SelectFungibleTokenModal.openAndWaitForClose({\n                chainId,\n                disableNativeToken: false,\n                selectedTokens: excludeTokens,\n            })\n            if (!picked) return\n            dispatchTradeStore({\n                type:\n                    panelType === TokenPanel.Input\n                        ? AllProviderTradeActionType.UPDATE_INPUT_TOKEN\n                        : AllProviderTradeActionType.UPDATE_OUTPUT_TOKEN,\n                token: picked,\n                balance: '0',\n            })\n        },\n        [excludeTokens.join(','), chainId, account],\n    )\n    // #endregion\n\n    // #region blocking (swap)\n    const [{ loading: isTrading }, tradeCallback] = useTradeCallback(\n        focusedTrade?.value?.provider,\n        focusedTrade?.value?.value,\n        gasConfig,\n    )\n\n    useEffect(() => {\n        setIsSwapping(isTrading)\n    }, [isTrading])\n\n    const shareText = useMemo(() => {\n        const isTwitter = Sniffings.is_twitter_page\n        const isFacebook = Sniffings.is_facebook_page\n        const cashTag = isTwitter ? '$' : ''\n        return focusedTrade?.value && inputToken && outputToken\n            ? t.share_text({\n                  input_amount: formatBalance(focusedTrade.value.value?.inputAmount, inputToken.decimals, 6),\n                  input_symbol: `${cashTag}${inputToken.symbol}`,\n                  output_amount: formatBalance(focusedTrade.value.value?.outputAmount, outputToken.decimals, 6),\n                  output_symbol: `${cashTag}${outputToken.symbol}`,\n                  account_promote: t.account_promote({\n                      context: isTwitter ? 'twitter' : isFacebook ? 'facebook' : 'default',\n                  }),\n              })\n            : ''\n    }, [focusedTrade?.value, inputToken, outputToken, t])\n\n    const onConfirm = useCallback(async () => {\n        setOpenConfirmDialog(false)\n        await delay(100)\n\n        const hash = await tradeCallback()\n\n        setTemporarySlippage(undefined)\n\n        if (typeof hash !== 'string') return\n\n        const result = await Web3.confirmTransaction(hash)\n        if (!result.status) return\n\n        const confirmed = await ConfirmModal.openAndWaitForClose({\n            title: t.swap(),\n            content: (\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                    <Icons.FillSuccess size={90} style={{ borderRadius: 99 }} />\n                    <Typography\n                        fontSize={20}\n                        lineHeight=\"24px\"\n                        fontWeight={700}\n                        color={theme.palette.maskColor.success}\n                        marginTop=\"20px\">\n                        {t.congratulations()}\n                    </Typography>\n                    <Typography fontSize={16} lineHeight=\"20px\" fontWeight={700} mt={5}>\n                        {t.swap_successfully_description({\n                            input: `${formatBalance(\n                                focusedTrade?.value?.value?.inputAmount,\n                                focusedTrade?.value?.value?.inputToken?.decimals,\n                            )} ${focusedTrade?.value?.value?.inputToken?.symbol}`,\n                            output: `${formatBalance(\n                                focusedTrade?.value?.value?.outputAmount,\n                                focusedTrade?.value?.value?.outputToken?.decimals,\n                            )} ${focusedTrade?.value?.value?.outputToken?.symbol}`,\n                        })}\n                    </Typography>\n                </Box>\n            ),\n            confirmLabel: t.share(),\n            maxWidthOfContent: 420,\n        })\n        if (confirmed) share?.(shareText)\n        dispatchTradeStore({\n            type: AllProviderTradeActionType.UPDATE_INPUT_AMOUNT,\n            amount: '',\n        })\n    }, [tradeCallback, shareText, focusedTrade])\n\n    const onConfirmDialogClose = useCallback(() => {\n        setOpenConfirmDialog(false)\n    }, [])\n    // #endregion\n\n    // #region the click handler of switch arrow\n    const onSwitchToken = useCallback(() => {\n        dispatchTradeStore({\n            type: AllProviderTradeActionType.SWITCH_TOKEN,\n            inputToken: outputToken,\n            outputToken: inputToken,\n            inputBalance: outputToken ? outputTokenBalance_ ?? '0' : '0',\n            outputBalance: inputTokenBalance_ ?? '0',\n        })\n    }, [dispatchTradeStore, inputToken, outputToken, inputAmount, inputTokenBalance_, outputTokenBalance_])\n\n    // #region swap callback\n    const onSwap = useCallback(() => {\n        // no need to open the confirmation dialog if it (un)wraps the native token\n        if (focusedTrade?.value && isNativeTokenWrapper(focusedTrade.value.value)) tradeCallback()\n        else setOpenConfirmDialog(true)\n    }, [focusedTrade, tradeCallback])\n    // #endregion\n\n    // #region The trades sort by best price (Estimate received * price - Gas fee * native token price)\n    const sortedAllTradeComputed = useSortedTrades(allTradeComputed, chainId, gasPrice)\n    // #endregion\n\n    // Query the balance of native tokens on target chain\n    useUpdateBalance(chainId)\n    // #endregion\n\n    // #region reset focused trade when chainId, inputToken, outputToken, inputAmount be changed\n    useUpdateEffect(() => {\n        setFocusTrade(undefined)\n    }, [targetChainId, inputToken, outputToken, inputAmount])\n    // #endregion\n\n    // #region if chain id be changed, reset the chain id on context, and reset gas config\n    useEffect(() => {\n        if (!Others.isValidChainId(chainId)) return\n        setGasConfig(undefined)\n    }, [chainId, Others])\n    // #endregion\n\n    // #region if target chain id be changed, reset output token\n    useUpdateEffect(() => {\n        dispatchTradeStore({\n            type: AllProviderTradeActionType.UPDATE_OUTPUT_TOKEN,\n            token: undefined,\n        })\n    }, [targetChainId])\n    // #endregion\n\n    useEffect(() => {\n        return PluginTraderMessages.swapSettingsUpdated.on((event) => {\n            if (event.open) return\n\n            if (event.gasConfig) {\n                setGasConfig(event.gasConfig)\n            }\n        })\n    }, [])\n\n    useUnmount(() => {\n        dispatchTradeStore({\n            type: AllProviderTradeActionType.UPDATE_OUTPUT_TOKEN,\n            token: undefined,\n        })\n    })\n\n    // #region if trade has been changed, update the focused trade\n    useUpdateEffect(() => {\n        setFocusTrade((prev) => {\n            const target = allTradeComputed.find((x) => prev?.value?.provider === x.value?.provider)\n            return target ?? prev\n        })\n    }, [allTradeComputed])\n    // #endregion\n\n    // #region hack for smartPay, will be removed\n    const maskTokenAddress = useMaskTokenAddress()\n\n    const { value: smartPayConfig } = useAsync(async () => {\n        const smartPayChainId = await SmartPayBundler.getSupportedChainId()\n        const depositPaymaster = new DepositPaymaster(smartPayChainId)\n        const ratio = await depositPaymaster.getRatio()\n\n        return {\n            ratio,\n            smartPayChainId,\n        }\n    }, [])\n\n    const actualBalance = useMemo(() => {\n        if (\n            !wallet?.owner ||\n            chainId !== smartPayConfig?.smartPayChainId ||\n            !isSameAddress(inputToken?.address, maskTokenAddress)\n        )\n            return inputTokenBalance\n\n        return toFixed(\n            BigNumber.max(\n                minus(\n                    inputTokenBalance,\n\n                    new BigNumber((gasConfig as EIP1559GasConfig).maxFeePerGas)\n                        .multipliedBy(\n                            focusedTrade?.value?.gas && !isZero(focusedTrade?.value?.gas)\n                                ? addGasMargin(focusedTrade?.value.gas)\n                                : '150000',\n                        )\n                        .integerValue()\n                        .multipliedBy(smartPayConfig?.ratio ?? 1),\n                ),\n                0,\n            ),\n            0,\n        )\n    }, [\n        gasConfig,\n        wallet,\n        inputToken?.address,\n        maskTokenAddress,\n        smartPayConfig,\n        chainId,\n        inputTokenBalance,\n        focusedTrade,\n    ])\n    // #endregion\n\n    return (\n        <>\n            <TradeForm\n                isSmartPay={\n                    !!wallet?.owner &&\n                    chainId === smartPayConfig?.smartPayChainId &&\n                    isSameAddress(inputToken?.address, maskTokenAddress)\n                }\n                settings={settings}\n                classes={props.classes}\n                trades={sortedAllTradeComputed}\n                inputToken={inputToken}\n                outputToken={outputToken}\n                inputTokenBalance={actualBalance}\n                inputAmount={inputAmount}\n                onInputAmountChange={onInputAmountChange}\n                onTokenChipClick={onTokenChipClick}\n                focusedTrade={focusedTrade}\n                onFocusedTradeChange={(trade) => setFocusTrade(trade)}\n                gasPrice={gasPrice}\n                gasConfig={gasConfig}\n                onSwitch={onSwitchToken}\n            />\n            {focusedTrade?.value?.value &&\n            !isNativeTokenWrapper(focusedTrade.value.value) &&\n            inputToken &&\n            outputToken ? (\n                <ConfirmDialog\n                    open={openConfirmDialog}\n                    trade={focusedTrade.value.value}\n                    loading={focusedTrade.loading}\n                    gas={focusedTrade.value.gas}\n                    gasPrice={gasPrice}\n                    gasConfig={gasConfig}\n                    inputToken={inputToken}\n                    outputToken={outputToken}\n                    onConfirm={onConfirm}\n                    onClose={onConfirmDialogClose}\n                />\n            ) : null}\n\n            <TraderStateBar\n                trades={sortedAllTradeComputed}\n                inputToken={inputToken}\n                outputToken={outputToken}\n                inputTokenBalance={actualBalance}\n                inputAmount={inputAmount}\n                focusedTrade={focusedTrade}\n                gasPrice={gasPrice}\n                onSwap={onSwap}\n                refresh={() => allTradeComputed.map((x) => x.retry())}\n            />\n        </>\n    )\n})\n\nTrader.displayName = 'Trader'\n","// @ts-nocheck\n/* eslint-disable */\nimport { createElement, useMemo, type ComponentType } from \"react\";\nimport { useTranslation, Trans, type TransProps } from \"react-i18next\";\ntype TypedTransProps<Value, Components> = Omit<TransProps<string>, \"values\" | \"ns\" | \"i18nKey\"> & ({} extends Value ? {} : {\n    values: Value;\n}) & {\n    components: Components;\n};\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useTraderTrans(): {\n    /**\n      * `Instantly token exchange on Twitter. Install Mask.io to explore “better server” on Multi-chain Dex.`\n      */\n    promote(): string;\n    /**\n      * ``\n      */\n    account_promote$default(): string;\n    /**\n      * `Follow @$t(mask:twitter_account) to swap cryptocurrencies on Twitter`\n      */\n    account_promote$twitter(): string;\n    /**\n      * `Follow @$t(mask:facebook_account) to swap cryptocurrencies on Facebook`\n      */\n    account_promote$facebook(): string;\n    /**\n      * `I just swapped {{input_amount}} {{input_symbol}} for {{output_amount}} {{output_symbol}}. {{account_promote}}\n    $t(mask:hash_tag)`\n      */\n    share_text(options: Readonly<{\n        input_amount: string;\n        input_symbol: string;\n        output_amount: string;\n        output_symbol: string;\n        account_promote: string;\n    }>): string;\n    /**\n      * `Price Impact Warning`\n      */\n    impact_warning(): string;\n    /**\n      * `Risk Warning`\n      */\n    risk_warning(): string;\n    /**\n      * `Adjust order`\n      */\n    adjust_order(): string;\n    /**\n      * `Make Trade Anyway`\n      */\n    make_trade_anyway(): string;\n    /**\n      * `Swap Failed`\n      */\n    swap_failed(): string;\n    /**\n      * `Network or Dex provider errors`\n      */\n    swap_failed_description(): string;\n    /**\n      * `Swap`\n      */\n    swap(): string;\n    /**\n      * `Congratulations!`\n      */\n    congratulations(): string;\n    /**\n      * `Swap {{input}} for {{output}}`\n      */\n    swap_successfully_description(options: Readonly<{\n        input: string;\n        output: string;\n    }>): string;\n    /**\n      * `Confirm this transaction in your wallet`\n      */\n    plugin_wallet_snackbar_wait_for_confirming(): string;\n    /**\n      * `Transaction Submitted`\n      */\n    plugin_wallet_snackbar_hash(): string;\n    /**\n      * `Transaction Confirmed`\n      */\n    plugin_wallet_snackbar_confirmed(): string;\n    /**\n      * `Transaction Succeed`\n      */\n    plugin_wallet_snackbar_success(): string;\n    /**\n      * `Transaction Failed`\n      */\n    plugin_wallet_snackbar_failed(): string;\n    /**\n      * `Successfully swapped Token`\n      */\n    plugin_wallet_snackbar_swap_successful(): string;\n    /**\n      * `Successfully added NFTs`\n      */\n    plugin_wallet_snackbar_add_nft_successful(): string;\n    /**\n      * `Swap Token`\n      */\n    plugin_wallet_snackbar_swap_token(): string;\n    /**\n      * `Share`\n      */\n    share(): string;\n    /**\n      * `Fail to load trending info from  `\n      */\n    plugin_trader_fail_to_load(): string;\n    /**\n      * `Switch to {{provider}}`\n      */\n    plugin_trader_switch_provider(options: {\n        readonly provider: string;\n    }): string;\n    /**\n      * `Pop-up trading widget allows you to instantly view prices of the hottest Crypto/Stock and trade, also invest in the best performing managers.`\n      */\n    plugin_trader_swap_description(): string;\n    /**\n      * `Tutorial`\n      */\n    plugin_trader_tutorial(): string;\n    /**\n      * `What's LBP?`\n      */\n    plugin_trader_what_is_lbp(): string;\n    /**\n      * `Solid blue line illustrates the historical price of {{symbol}} on the {{symbol}}'s LBP. The price could continue to go down if no one buys. Please make your investment decision wisely.`\n      */\n    plugin_trader_lbp_intro(options: {\n        readonly symbol: string;\n    }): string;\n    /**\n      * `No pools found.`\n      */\n    plugin_trader_no_pools_found(): string;\n    /**\n      * `I understand`\n      */\n    plugin_trader_safety_agree(): string;\n    /**\n      * `View on Etherscan`\n      */\n    plugin_trader_view_on_etherscan(): string;\n    /**\n      * `Token Safety Alert`\n      */\n    plugin_trader_safety_alert_title(): string;\n    /**\n      * `Anyone can create and name any ERC20 token on Ethereum, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token. Similar to Etherscan, this site automatically tracks analytics for all ERC20 tokens independent of token integrity. Please do your own research before interacting with any ERC20 token.`\n      */\n    plugin_trader_safety_alert(): string;\n    /**\n      * `Total Supply`\n      */\n    plugin_trader_total_supply(): string;\n    /**\n      * `Circulating Supply`\n      */\n    plugin_trader_circulating_supply(): string;\n    /**\n      * `Accept`\n      */\n    plugin_trader_accept(): string;\n    /**\n      * `24 Hour Trading Vol`\n      */\n    plugin_trader_volume_24(): string;\n    /**\n      * `Market Cap`\n      */\n    plugin_trader_market_cap(): string;\n    /**\n      * `Risk Warning`\n      */\n    plugin_trader_risk_warning_short(): string;\n    /**\n      * `Confirm swap token contract risk`\n      */\n    plugin_trader_risk_warning(): string;\n    /**\n      * `Swap Anyway`\n      */\n    plugin_trader_make_risk_trade(): string;\n    /**\n      * `Dear Users,`\n      */\n    plugin_trader_dear_user(): string;\n    /**\n      * `Clicking the confirm button means that you agree to take the potential risks and proceed with the transaction.`\n      */\n    plugin_trader_user_warning(): string;\n    /**\n      * `The price has expired.`\n      */\n    plugin_trader_price_updated(): string;\n    /**\n      * `Market Statistic`\n      */\n    plugin_trader_market_statistic(): string;\n    /**\n      * `Floor Price`\n      */\n    plugin_trader_floor_price(): string;\n    /**\n      * `Trending`\n      */\n    plugin_trader_trending(): string;\n    /**\n      * `Highest Price`\n      */\n    plugin_trader_highest_price(): string;\n    /**\n      * `Total Volume`\n      */\n    plugin_trader_total_volume(): string;\n    /**\n      * `24H Average Price`\n      */\n    plugin_trader_one_day_average_price(): string;\n    /**\n      * `24H Traded Volume`\n      */\n    plugin_trader_one_day_traded_volume(): string;\n    /**\n      * `24H sale`\n      */\n    plugin_trader_one_day_sale(): string;\n    /**\n      * `Marketplace`\n      */\n    plugin_trader_marketplace(): string;\n    /**\n      * `Items`\n      */\n    plugin_trader_total_assets(): string;\n    /**\n      * `Owners`\n      */\n    plugin_trader_owners_count(): string;\n    /**\n      * `Sales (24h)`\n      */\n    plugin_trader_sales(): string;\n    /**\n      * `Rank #{{rank}}`\n      */\n    plugin_trader_rank(options: {\n        readonly rank: string;\n    }): string;\n    /**\n      * `Info`\n      */\n    plugin_trader_info(): string;\n    /**\n      * `Website`\n      */\n    plugin_trader_website(): string;\n    /**\n      * `Community`\n      */\n    plugin_trader_community(): string;\n    /**\n      * `Contract`\n      */\n    contract(): string;\n    /**\n      * `Load failed`\n      */\n    load_failed(): string;\n    /**\n      * `Swap`\n      */\n    plugin_trader_swap(): string;\n    /**\n      * `Wrap`\n      */\n    plugin_trader_wrap(): string;\n    /**\n      * `You sell`\n      */\n    plugin_trader_swap_from(): string;\n    /**\n      * `You buy`\n      */\n    plugin_trader_swap_receive(): string;\n    /**\n      * `Unwrap`\n      */\n    plugin_trader_unwrap(): string;\n    /**\n      * `Buy`\n      */\n    plugin_trader_buy(): string;\n    /**\n      * `No Data`\n      */\n    plugin_trader_no_data(): string;\n    /**\n      * `General`\n      */\n    plugin_trader_tab_market(): string;\n    /**\n      * `Price`\n      */\n    plugin_trader_tab_price(): string;\n    /**\n      * `Exchange`\n      */\n    plugin_trader_tab_exchange(): string;\n    /**\n      * `Activities`\n      */\n    plugin_trader_tab_activities(): string;\n    /**\n      * `NFTs`\n      */\n    plugin_trader_nft_items(): string;\n    /**\n      * `Swap`\n      */\n    plugin_trader_tab_swap(): string;\n    /**\n      * `Exchange`\n      */\n    plugin_trader_table_exchange(): string;\n    /**\n      * `Pair`\n      */\n    plugin_trader_table_pair(): string;\n    /**\n      * `Price`\n      */\n    plugin_trader_table_price(): string;\n    /**\n      * `Volume (24h)`\n      */\n    plugin_trader_table_volume(): string;\n    /**\n      * `NFT`\n      */\n    plugin_trader_table_nft(): string;\n    /**\n      * `Method`\n      */\n    plugin_trader_table_method(): string;\n    /**\n      * `Updated`\n      */\n    plugin_trader_table_updated(): string;\n    /**\n      * `Value`\n      */\n    plugin_trader_table_value(): string;\n    /**\n      * `From`\n      */\n    plugin_trader_table_from(): string;\n    /**\n      * `To`\n      */\n    plugin_trader_table_to(): string;\n    /**\n      * `Time`\n      */\n    plugin_trader_table_time(): string;\n    /**\n      * `Enter an amount`\n      */\n    plugin_trader_error_amount_absence(): string;\n    /**\n      * `Insufficient {{symbol}} balance`\n      */\n    plugin_trader_error_insufficient_balance(options: {\n        readonly symbol: string;\n    }): string;\n    /**\n      * `Insufficient liquidity for this trade`\n      */\n    plugin_trader_error_insufficient_lp(): string;\n    /**\n      * `Input amount is below the minimum amount`\n      */\n    plugin_trade_error_input_amount_less_minimum_amount(): string;\n    /**\n      * `Advanced Settings:`\n      */\n    plugin_trader_slippage_tolerance(): string;\n    /**\n      * `Gas fee`\n      */\n    plugin_trader_gas_fee(): string;\n    /**\n      * `Unlock {{symbol}}`\n      */\n    plugin_trader_unlock_symbol(options: {\n        readonly symbol: string;\n    }): string;\n    /**\n      * `You must give the {{provider}} Smart contracts permission to use your {{symbol}}.You only have to do this once per token.`\n      */\n    plugin_trader_unlock_tips(options: Readonly<{\n        provider: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `Swap`\n      */\n    plugin_trader_swap_amount_symbol(): string;\n    /**\n      * `From`\n      */\n    plugin_trader_confirm_from(): string;\n    /**\n      * `To`\n      */\n    plugin_trader_confirm_to(): string;\n    /**\n      * `Slippage tolerance`\n      */\n    plugin_trader_confirm_slippage_tolerance(): string;\n    /**\n      * `(${{usd}})`\n      */\n    plugin_trader_confirm_tx_cost(options: {\n        readonly usd: string;\n    }): string;\n    /**\n      * `Minimum Received`\n      */\n    plugin_trader_confirm_minimum_received(): string;\n    /**\n      * `Setting the max price slippage too high may cause the minimum amount returned lower than the amount desired.`\n      */\n    plugin_trader_confirm_tips(): string;\n    /**\n      * `Transaction with extremely low slippage tolerance might be reverted because of very small market movement.`\n      */\n    plugin_trader_price_impact_warning_tips(): string;\n    /**\n      * `High Price impact！More than {{impact}} drop！`\n      */\n    plugin_trader_price_impact_too_high_tips(options: {\n        readonly impact: string;\n    }): string;\n    /**\n      * `Confirm Swap`\n      */\n    plugin_trader_confirm_swap(): string;\n    /**\n      * `Update`\n      */\n    plugin_trader_update(): string;\n    /**\n      * `Price Impact`\n      */\n    plugin_trader_price_impact(): string;\n    /**\n      * `Price Impact (-{{percent}})`\n      */\n    plugin_trader_price_image_value(options: {\n        readonly percent: string;\n    }): string;\n    /**\n      * `You may receive 10% less with this level of slippage tolerance.`\n      */\n    plugin_trader_slippage_warning(): string;\n    /**\n      * `Confirm Price Impact {{percent}}`\n      */\n    plugin_trader_confirm_price_impact(options: {\n        readonly percent: string;\n    }): string;\n    /**\n      * `Max Slippage`\n      */\n    plugin_trader_max_slippage(): string;\n    /**\n      * `Instant`\n      */\n    plugin_trader_gas_setting_instant(): string;\n    /**\n      * `High`\n      */\n    plugin_trader_gas_setting_high(): string;\n    /**\n      * `Medium`\n      */\n    plugin_trader_gas_setting_medium(): string;\n    /**\n      * `Standard`\n      */\n    plugin_trader_gas_setting_standard(): string;\n    /**\n      * `Fast`\n      */\n    plugin_trader_gas_setting_fast(): string;\n    /**\n      * `Custom`\n      */\n    plugin_trader_gas_setting_custom(): string;\n    /**\n      * `(${{usd}})`\n      */\n    plugin_trader_tx_cost_usd(options: {\n        readonly usd: string;\n    }): string;\n    /**\n      * `({{usd}})`\n      */\n    plugin_trader_tx_cost_usd_new(options: {\n        readonly usd: string;\n    }): string;\n    /**\n      * `({{usd}})`\n      */\n    plugin_trader_tx_cost_very_small(options: {\n        readonly usd: string;\n    }): string;\n    /**\n      * `{{option}} ({{value}}) Gwei`\n      */\n    plugin_trader_gas_option(options: Readonly<{\n        option: string;\n        value: string;\n    }>): string;\n    /**\n      * `No enough liquidity`\n      */\n    plugin_trader_no_enough_liquidity(): string;\n    /**\n      * `Please select a trade`\n      */\n    plugin_trader_no_trade(): string;\n    /**\n      * `Swapping Risk`\n      */\n    plugin_trader_swap_risk(): string;\n    /**\n      * `Transaction cost`\n      */\n    plugin_trader_gas(): string;\n    /**\n      * `Loading`\n      */\n    loading(): string;\n    /**\n      * `Done`\n      */\n    done(): string;\n    /**\n      * `Download`\n      */\n    download(): string;\n    /**\n      * `Failed`\n      */\n    failed(): string;\n    /**\n      * `Buy Now`\n      */\n    buy_now(): string;\n    /**\n      * `No Enough Gas Fees`\n      */\n    no_enough_gas_fees(): string;\n    /**\n      * `Open`\n      */\n    open(): string;\n    /**\n      * `Settings`\n      */\n    settings(): string;\n    /**\n      * `Powered by`\n      */\n    powered_by(): string;\n    /**\n      * `Available Balance`\n      */\n    available_balance(): string;\n    /**\n      * `Balance`\n      */\n    wallet_balance(): string;\n    /**\n      * `Edit`\n      */\n    edit(): string;\n    /**\n      * - account_promote$default: ``\n    \n      * - account_promote$twitter: `Follow @$t(mask:twitter_account) to swap cryptocurrencies on Twitter`\n    \n      * - account_promote$facebook: `Follow @$t(mask:facebook_account) to swap cryptocurrencies on Facebook`\n      */\n    account_promote(options: {\n        readonly context: \"default\" | \"twitter\" | \"facebook\";\n    }): string;\n} { const { t } = useTranslation(\"com.maskbook.trader\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\nfunction createComponent(i18nKey: string) {\n    return (props) => createElement(Trans, { i18nKey, ns: \"com.maskbook.trader\", shouldUnescape: true, ...props });\n}\nexport const TraderTrans: {\n    /**\n      * `The amount you want to trade will cause the price to drop by <span>{{impact}}</span> comparing to the current market price. As a result, you might lose <span>{{lostSymbol}}</span>  or <span>{{- lostValue}}</span>.`\n      */\n    risk_warning_description: ComponentType<TypedTransProps<Readonly<{\n        impact: string;\n        lostSymbol: string;\n        lostValue: string;\n    }>, {\n        span: JSX.Element;\n    }>>;\n} = /*#__PURE__*/ createProxy(createComponent);\n","import { getPluginMessage, getPluginRPC, type PluginMessageEmitter } from '@masknet/plugin-infra'\nimport type { GasConfig } from '@masknet/web3-shared-evm'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { SocialIdentity } from '@masknet/shared-base'\nimport { PLUGIN_ID } from './constants/index.js'\nimport type { TagType } from './types/index.js'\n\ninterface TrendingAnchorEvent {\n    name: string\n    type: TagType\n    anchorBounding: DOMRect\n    anchorEl: HTMLElement | null\n    address?: string\n    isCollectionProjectPopper?: boolean\n    identity?: SocialIdentity\n    currentResult?: Web3Helper.TokenResultAll\n}\n\ninterface SwapSettingsEvent {\n    open: boolean\n    gasConfig?: GasConfig\n}\n\nexport interface TraderMessage {\n    /**\n     * View a cash tag\n     */\n    trendingAnchorObserved: TrendingAnchorEvent\n\n    /**\n     * Swap settings dialog\n     */\n    swapSettingsUpdated: SwapSettingsEvent\n\n    rpc: unknown\n}\n\nimport.meta.webpackHot?.accept()\nexport const PluginTraderMessages: PluginMessageEmitter<TraderMessage> = getPluginMessage(PLUGIN_ID)\nexport const PluginTraderRPC = getPluginRPC<typeof import('./apis/index.js')>(PLUGIN_ID)\n","import type { FungibleToken } from '@masknet/web3-shared-base'\nimport type { ChainIdOptionalRecord, ChainId, SchemaType } from '@masknet/web3-shared-evm'\n\ninterface ERC20TokenTable {\n    [tokenAddress: string]: Array<FungibleToken<ChainId, SchemaType.ERC20>>\n}\n\nexport type ERC20TokenCustomizedBase = Readonly<ChainIdOptionalRecord<ERC20TokenTable>>\n\nexport type ERC20AgainstToken = Readonly<ChainIdOptionalRecord<Array<FungibleToken<ChainId, SchemaType.ERC20>>>>\n\nexport enum ContentTab {\n    Market = 'market',\n    Price = 'price',\n    Exchange = 'exchange',\n    Swap = 'swap',\n    NFTItems = 'nft-items',\n}\n\nexport enum TokenPanel {\n    Input = 0,\n    Output = 1,\n}\n","import type { PluginMessageEmitterItem } from '@masknet/shared-base'\nimport { useState, useEffect, useCallback, useRef } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nexport interface RemoteControlledDialogEvent {\n    open: boolean\n    hookId?: string\n}\n\ninterface Result<T> {\n    open: boolean\n    closeDialog: () => void\n    openDialog: () => void\n    setDialog: (ev: T) => void\n}\n\n/**\n * Use a dialog state controlled by remote\n */\nexport function useRemoteControlledDialog<T extends { open: boolean }>(\n    event: PluginMessageEmitterItem<T>,\n    onUpdateByRemote?: (ev: T) => void,\n    tabType: 'self' | 'activated' = 'self',\n): Result<T> {\n    const [HOOK_ID] = useState(uuid) // create an uuid for every hook\n    const [open, setOpen] = useState(false)\n\n    useEffect(\n        () =>\n            event.on((_ev: T) => {\n                const event = _ev as unknown as RemoteControlledDialogEvent\n\n                // ignore the event from the same hook\n                if (event.hookId === HOOK_ID) return\n\n                setOpen(event.open)\n                onUpdateByRemote?.(_ev)\n            }),\n        [onUpdateByRemote, event, HOOK_ID],\n    )\n\n    const timer = useRef<ReturnType<typeof setTimeout> | null>(null)\n    const onUpdateByLocal = useCallback(\n        (ev: T) => {\n            setOpen(ev.open)\n\n            const timer_ = timer.current\n            if (timer_ !== null) clearTimeout(timer_)\n            timer.current = setTimeout(() => {\n                const payload: T & RemoteControlledDialogEvent = {\n                    hookId: HOOK_ID,\n                    ...ev,\n                }\n                tabType === 'self' ? event.sendToLocal(payload) : event.sendToVisiblePages(payload)\n            }, 100)\n        },\n        [event, tabType, HOOK_ID],\n    )\n    const openDialog = useCallback(() => {\n        onUpdateByLocal({ open: true } as T)\n    }, [])\n    const closeDialog = useCallback(() => {\n        onUpdateByLocal({ open: false } as T)\n    }, [])\n\n    return {\n        open,\n        openDialog,\n        closeDialog,\n        setDialog: onUpdateByLocal,\n    }\n}\n","const cache = new WeakMap<object, object>()\n/**\n * This function provides a localImplementation that has HMR support.\n * To update, call this function with the SAME key object.\n * @param impl The implementation. Can be an async function.\n * @param key The reference object that must be the same if you're updating.\n */\nexport async function getOrUpdateLocalImplementationHMR<T extends object>(impl: () => T | Promise<T>, key: object) {\n    if (!import.meta.webpackHot) return impl()\n\n    const result: any = await impl()\n    if (!cache.has(key)) cache.set(key, Object.create(null))\n    const localImpl = cache.get(key)\n    Object.setPrototypeOf(localImpl, result)\n    return localImpl\n}\n","import { useSubscription } from 'use-subscription'\nimport { FALSE, TRUE, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useAllowTestnet<T extends NetworkPluginID>(pluginID?: T) {\n    const { Settings } = useWeb3State(pluginID)\n    return useSubscription(Settings?.allowTestnet ?? (process.env.NODE_ENV === 'development' ? TRUE : FALSE))\n}\n","import React, { memo } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { delay } from '@masknet/kit'\nimport { Box } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles, ShadowRootTooltip, ActionButton, useCustomSnackbar } from '@masknet/theme'\nimport {\n    useNetworkContext,\n    useChainContext,\n    useNetworkDescriptor,\n    useAllowTestnet,\n    useChainIdValid,\n    RevokeChainContextProvider,\n    useWeb3Others,\n    useWeb3Connection,\n} from '@masknet/web3-hooks-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { WalletIcon } from '../WalletIcon/index.js'\nimport { type ActionButtonPromiseProps } from '../ActionButton/index.js'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { SelectProviderModal } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    tooltip: {\n        background: theme.palette.common.black,\n        color: theme.palette.common.white,\n        borderRadius: 4,\n        padding: 10,\n        maxWidth: 260,\n    },\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    connectWallet: {\n        '& > .MuiButton-startIcon': {\n            lineHeight: 1,\n        },\n    },\n}))\n\nexport interface ChainBoundaryProps<T extends NetworkPluginID> extends withClasses<'switchButton'> {\n    /** The expected network plugin ID */\n    expectedPluginID: T\n    /** The expected sub-network under the network plugin */\n    expectedChainId: Web3Helper.Definition[T]['ChainId']\n    /** Judge the network is available for children components */\n    predicate?: (actualPluginID: NetworkPluginID, actualChainId: Web3Helper.Definition[T]['ChainId']) => boolean\n    expectedAccount?: string\n    className?: string\n    hiddenConnectButton?: boolean\n    switchChainWithoutPopup?: boolean\n    forceShowingWrongNetworkButton?: boolean\n    children?: React.ReactNode\n    ActionButtonPromiseProps?: Partial<ActionButtonPromiseProps>\n    actualNetworkPluginID?: T\n    switchText?: string\n    disableConnectWallet?: boolean\n}\n\nexport function ChainBoundaryWithoutContext<T extends NetworkPluginID>(props: ChainBoundaryProps<T>) {\n    const {\n        expectedPluginID,\n        expectedChainId,\n        expectedAccount,\n        actualNetworkPluginID,\n        switchText,\n        forceShowingWrongNetworkButton = false,\n        disableConnectWallet = false,\n        predicate = (actualPluginID, actualChainId) =>\n            actualPluginID === expectedPluginID && actualChainId === expectedChainId,\n    } = props\n\n    const t = useSharedTrans()\n    const { classes } = useStyles(undefined, { props })\n\n    const { pluginID: actualPluginID } = useNetworkContext(actualNetworkPluginID)\n\n    const Web3 = useWeb3Connection(actualPluginID)\n\n    const { showSnackbar } = useCustomSnackbar()\n    const {\n        account,\n        chainId: actualChainId,\n        providerType: actualProviderType,\n    } = useChainContext({ account: expectedAccount })\n\n    const expectedOthers = useWeb3Others(expectedPluginID)\n    const expectedAllowTestnet = useAllowTestnet(expectedPluginID)\n\n    const chainIdValid = useChainIdValid(actualPluginID)\n\n    const expectedChainName = expectedOthers.chainResolver.chainName(expectedChainId)\n    const expectedNetworkDescriptor = useNetworkDescriptor(expectedPluginID, expectedChainId)\n    const expectedChainAllowed = expectedOthers.chainResolver.isValidChainId(expectedChainId, expectedAllowTestnet)\n\n    const isPluginIDMatched = actualPluginID === expectedPluginID\n    const isMatched = predicate(actualPluginID, actualChainId)\n\n    const [{ loading }, onSwitchChain] = useAsyncFn(async () => {\n        try {\n            if (actualProviderType !== ProviderType.WalletConnect || isMatched || !expectedChainAllowed) return\n            await Web3.switchChain?.(expectedChainId)\n            await delay(1500)\n\n            return 'complete'\n        } catch (error) {\n            if (error instanceof Error) {\n                if (error.message === 'Chain currently not supported' || error.message === 'Invalid Request') {\n                    showSnackbar(t.plugin_wallet_switch_network_title(), {\n                        processing: false,\n                        variant: 'error',\n                        message: t.plugin_wallet_unsupported_chain({ network: expectedChainName ?? '' }),\n                        autoHideDuration: 5000,\n                    })\n                } else {\n                    showSnackbar(t.plugin_wallet_switch_network_title(), {\n                        processing: false,\n                        variant: 'error',\n                        message: t.plugin_wallet_switch_chain_failed(),\n                        autoHideDuration: 5000,\n                    })\n                }\n            }\n            return 'failed'\n        }\n    }, [expectedChainAllowed, isMatched, expectedChainId, actualProviderType, Web3, expectedChainName])\n\n    const renderBox = (children?: React.ReactNode, tips?: string) => {\n        return (\n            <ShadowRootTooltip\n                title={tips ?? ''}\n                classes={{ tooltip: classes.tooltip, arrow: classes.arrow }}\n                arrow\n                placement=\"top\">\n                <Box className={props.className} display=\"flex\" flexDirection=\"column\" width=\"100%\">\n                    {children}\n                </Box>\n            </ShadowRootTooltip>\n        )\n    }\n\n    if (!chainIdValid && !expectedChainAllowed && forceShowingWrongNetworkButton)\n        return renderBox(\n            !props.hiddenConnectButton ? (\n                <ActionButton\n                    fullWidth\n                    startIcon={<Icons.Wallet size={18} />}\n                    onClick={() => SelectProviderModal.open()}\n                    {...props.ActionButtonPromiseProps}>\n                    {t.plugin_wallet_wrong_network()}\n                </ActionButton>\n            ) : null,\n        )\n\n    // No wallet connected\n    if (!account && !disableConnectWallet)\n        return renderBox(\n            !props.hiddenConnectButton ? (\n                <ActionButton\n                    className={classes.connectWallet}\n                    fullWidth\n                    startIcon={<Icons.Wallet size={18} />}\n                    onClick={() => SelectProviderModal.open()}\n                    {...props.ActionButtonPromiseProps}>\n                    {t.plugin_wallet_connect_a_wallet()}\n                </ActionButton>\n            ) : null,\n        )\n\n    // Network mismatch\n    if (!isPluginIDMatched) {\n        return renderBox(\n            <ActionButton\n                fullWidth\n                className={classes.switchButton}\n                disabled={actualProviderType === ProviderType.WalletConnect}\n                startIcon={<WalletIcon mainIcon={expectedNetworkDescriptor?.icon} size={18} />}\n                sx={props.ActionButtonPromiseProps?.sx}\n                onClick={() => SelectProviderModal.open()}\n                {...props.ActionButtonPromiseProps}>\n                {t.plugin_wallet_change_wallet()}\n            </ActionButton>,\n            actualProviderType === ProviderType.WalletConnect\n                ? t.plugin_wallet_connect_tips()\n                : t.plugin_wallet_not_support_network(),\n        )\n    }\n\n    // Provider is Wallet Connect\n    if (actualProviderType === ProviderType.WalletConnect && !isMatched) {\n        return renderBox(\n            <ActionButton\n                startIcon={<WalletIcon mainIcon={expectedNetworkDescriptor?.icon} size={18} />}\n                onClick={onSwitchChain}\n                loading={loading}\n                className={classes.switchButton}\n                sx={props.ActionButtonPromiseProps?.sx}\n                {...props.ActionButtonPromiseProps}>\n                {switchText ?? t.plugin_wallet_switch_network({ network: expectedChainName ?? '' })}\n            </ActionButton>,\n            t.plugin_wallet_connect_tips(),\n        )\n    }\n\n    return props.children\n}\n\nexport const ChainBoundary = memo(function <T extends NetworkPluginID>(props: ChainBoundaryProps<T>) {\n    return (\n        <RevokeChainContextProvider>\n            <ChainBoundaryWithoutContext {...props} />\n        </RevokeChainContextProvider>\n    )\n})\n\nChainBoundary.displayName = 'ChainBoundary'\n","import { Icons } from '@masknet/icons'\nimport type { ReactNode } from 'react'\n\nexport enum SecurityMessageLevel {\n    High = 'High',\n    Medium = 'Medium',\n    Safe = 'Safe',\n}\n\ntype DefineMapping = {\n    [key in SecurityMessageLevel]: {\n        bgColor: string\n        titleColor: string\n        icon(size?: number): ReactNode\n    }\n}\n\nexport const DefineMapping: DefineMapping = {\n    [SecurityMessageLevel.High]: {\n        titleColor: '#FF5F5F',\n        bgColor: 'rgba(255, 53, 69, 0.1)',\n        icon: (size: number) => <Icons.SecurityRisk size={size ?? 24} />,\n    },\n    [SecurityMessageLevel.Medium]: {\n        titleColor: '#FFB100',\n        bgColor: 'rgba(255, 177, 0, 0.1)',\n        // TODO: Merge duplicate icon in a another PR.\n        icon: (size: number) => <Icons.SecurityWarning size={size ?? 24} color=\"#FFB915\" />,\n    },\n    [SecurityMessageLevel.Safe]: {\n        titleColor: '#60DFAB',\n        bgColor: 'rgba(119, 224, 181, 0.1)',\n        icon: (size: number) => <Icons.Success size={size ?? 24} />,\n    },\n}\n","import { memo } from 'react'\nimport { Stack, Typography, type StackProps } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport type { SecurityAPI } from '@masknet/web3-providers/types'\nimport { CrossIsolationMessages } from '@masknet/shared-base'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { DefineMapping, SecurityMessageLevel } from './Common.js'\n\ninterface TokenCardProps {\n    tokenSecurity: SecurityAPI.TokenSecurityType\n}\n\nexport const TokenSecurityBar = memo<TokenCardProps>(({ tokenSecurity }) => {\n    const t = useSharedTrans()\n\n    const { warn_item_quantity: attentionFactors = 0, risk_item_quantity: riskyFactors = 0 } = tokenSecurity\n\n    const handleOpenDialog = () => {\n        CrossIsolationMessages.events.checkSecurityDialogEvent.sendToLocal({\n            open: true,\n            searchHidden: true,\n            tokenAddress: tokenSecurity.contract,\n            chainId: tokenSecurity.chainId,\n        })\n    }\n\n    return (\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1.5}>\n            {riskyFactors !== 0 && (\n                <Stack\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    borderRadius=\"4px\"\n                    padding=\"4px 8px\"\n                    bgcolor={DefineMapping[SecurityMessageLevel.High].bgColor}\n                    spacing={0.5}>\n                    {DefineMapping[SecurityMessageLevel.High].icon(14)}\n                    <Typography\n                        component=\"span\"\n                        fontSize=\"12px\"\n                        color={DefineMapping[SecurityMessageLevel.High].titleColor}>\n                        {riskyFactors > 1\n                            ? t.risky_items({ quantity: riskyFactors.toString() })\n                            : t.risky_item({ quantity: riskyFactors.toString() })}\n                    </Typography>\n                </Stack>\n            )}\n            {attentionFactors !== 0 && (\n                <Stack\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    borderRadius=\"4px\"\n                    padding=\"4px 8px\"\n                    bgcolor={DefineMapping[SecurityMessageLevel.Medium].bgColor}\n                    spacing={0.5}>\n                    {DefineMapping[SecurityMessageLevel.Medium].icon(14)}\n                    <Typography\n                        component=\"span\"\n                        fontSize=\"12px\"\n                        color={DefineMapping[SecurityMessageLevel.Medium].titleColor}>\n                        {attentionFactors > 1\n                            ? t.attention_items({ quantity: attentionFactors.toString() })\n                            : t.attention_item({ quantity: attentionFactors.toString() })}\n                    </Typography>\n                </Stack>\n            )}\n            {(attentionFactors !== 0 || riskyFactors !== 0) && (\n                <Stack\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    borderRadius=\"4px\"\n                    padding=\"4px 8px\"\n                    bgcolor=\"rgba(28, 104, 243, 0.1)\"\n                    sx={{ cursor: 'pointer' }}\n                    onClick={handleOpenDialog}\n                    spacing={0.5}>\n                    <Typography component=\"span\" fontSize=\"12px\" color=\"#1C68F3\">\n                        {t.more()}\n                    </Typography>\n                    <Icons.RightArrow size={14} color=\"#1C68F3\" />\n                </Stack>\n            )}\n        </Stack>\n    )\n})\n\nexport const NFTSpamBadge = memo(function NFTSpamBadge(props: StackProps) {\n    const t = useSharedTrans()\n\n    return (\n        <Stack\n            direction=\"row\"\n            alignItems=\"center\"\n            borderRadius=\"4px\"\n            padding=\"4px 8px\"\n            bgcolor={DefineMapping[SecurityMessageLevel.High].bgColor}\n            spacing={0.5}\n            {...props}>\n            {DefineMapping[SecurityMessageLevel.High].icon(14)}\n            <Typography component=\"span\" fontSize=\"12px\" color={DefineMapping[SecurityMessageLevel.High].titleColor}>\n                {t.spam()}\n            </Typography>\n        </Stack>\n    )\n})\n","import { useAsyncRetry } from 'react-use'\nimport { GoPlusLabs } from '@masknet/web3-providers'\nimport type { SecurityAPI } from '@masknet/web3-providers/types'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { type ChainId, ZERO_ADDRESS } from '@masknet/web3-shared-evm'\n\nexport const useTokenSecurity = (chainId?: Web3Helper.ChainIdAll, address?: string, isTokenSecurityEnable = true) => {\n    return useAsyncRetry(async (): Promise<SecurityAPI.TokenSecurityType | undefined> => {\n        if (!isTokenSecurityEnable || !chainId) return\n        if (!address || isSameAddress(address, ZERO_ADDRESS)) return\n        return GoPlusLabs.getTokenSecurity(chainId as ChainId, [address])\n    }, [chainId, address, isTokenSecurityEnable])\n}\n","import { useAsyncRetry } from 'react-use'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useBlockTimestamp<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n) {\n    const { chainId } = useChainContext({ chainId: options?.chainId })\n    const Web3 = useWeb3Connection(pluginID, {\n        chainId,\n        ...options,\n    })\n\n    return useAsyncRetry(async () => {\n        return Web3.getBlockTimestamp()\n    }, [Web3])\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Others } from './useWeb3Others.js'\n\nexport function useMaskTokenAddress<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n) {\n    const { chainId } = useChainContext()\n    const Others = useWeb3Others(pluginID)\n    return Others?.getMaskTokenAddress?.(options?.chainId ?? chainId)\n}\n","import { useMemo } from 'react'\nimport type { AbiItem } from 'web3-utils'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { type ChainId, createContract } from '@masknet/web3-shared-evm'\nimport type { BaseContract } from '@masknet/web3-contracts/types/types.js'\n\n/**\n * Create a contract which will forward its all transactions to the\n * EthereumService in the background page and decode the result of calls automatically\n * @param address\n * @param ABI\n * @param chainId\n */\nexport function useContract<T extends BaseContract>(chainId?: ChainId, address = '', ABI: AbiItem[] = EMPTY_LIST) {\n    return useMemo(() => createContract<T>(Web3.getWeb3({ chainId }), address, ABI), [address, ABI])\n}\n\n/**\n * Create many contracts with same ABI\n * @param listOfAddress\n * @param ABI\n * @param chainId\n */\nexport function useContracts<T extends BaseContract>(\n    chainId?: ChainId,\n    listOfAddress: string[] = EMPTY_LIST,\n    ABI: AbiItem[] = EMPTY_LIST,\n) {\n    return useMemo(\n        () =>\n            listOfAddress\n                .map((address) => createContract<T>(Web3.getWeb3({ chainId }), address, ABI))\n                .filter(Boolean) as T[],\n        [JSON.stringify(listOfAddress), ABI],\n    )\n}\n","import { useState } from 'react'\nimport { GasEditor, type ChainId, type GasConfig } from '@masknet/web3-shared-evm'\nimport { useGasOptions } from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\n\nexport function useGasConfig(chainId: Web3Helper.ChainIdAll) {\n    const [gasConfig, setGasConfig] = useState<GasConfig>()\n    const { data: gasOptions } = useGasOptions()\n\n    const editor = GasEditor.fromGasOptions(chainId as ChainId, gasOptions)\n\n    return {\n        gasPrice: editor.getGasPrice(),\n        gasConfig: gasConfig || editor.getGasConfig(),\n        setGasConfig,\n    }\n}\n","import { BigNumber } from 'bignumber.js'\n\nexport function addGasMargin(value: BigNumber.Value, scale = 3000) {\n    return new BigNumber(value).multipliedBy(new BigNumber(10000).plus(scale)).dividedToIntegerBy(10000)\n}\n","import { toHex } from 'web3-utils'\nimport { GasOptionType, isZero, multipliedBy, toFixed } from '@masknet/web3-shared-base'\nimport { formatWeiToEther } from '../helpers/formatter.js'\nimport type {\n    ChainId,\n    EIP1559GasConfig,\n    GasConfig,\n    GasOption,\n    PriorEIP1559GasConfig,\n    Transaction,\n} from '../types/index.js'\nimport { CHAIN_DESCRIPTORS } from '../constants/descriptors.js'\n\nexport class GasEditor {\n    constructor(\n        private chainId: ChainId,\n        private config: Partial<GasConfig>,\n    ) {}\n\n    private get isEIP1559() {\n        return !!CHAIN_DESCRIPTORS.find((x) => x.chainId === this.chainId)?.features?.includes('EIP1559')\n    }\n\n    private get EIP1559GasOptionConfig() {\n        return this.config as EIP1559GasConfig\n    }\n\n    private get priorEIP1559GasOptionConfig() {\n        return this.config as PriorEIP1559GasConfig\n    }\n\n    getGasFee(gas: string | number) {\n        return multipliedBy(this.getGasPrice(), gas)\n    }\n\n    getGasFeeInUSD(gas: string, price: string) {\n        return formatWeiToEther(this.getGasFee(gas)).multipliedBy(price)\n    }\n\n    getGasPrice() {\n        return this.EIP1559GasOptionConfig.maxFeePerGas || this.priorEIP1559GasOptionConfig.gasPrice || '0'\n    }\n\n    getGasConfig(fallback?: Partial<GasConfig>): GasConfig {\n        if (this.isEIP1559) {\n            const config = fallback as EIP1559GasConfig | undefined\n            return {\n                gasPrice: undefined,\n                maxFeePerGas: toHex(this.EIP1559GasOptionConfig.maxFeePerGas) || toHex(config?.maxFeePerGas || '0'),\n                maxPriorityFeePerGas:\n                    toHex(this.EIP1559GasOptionConfig.maxPriorityFeePerGas) ||\n                    toHex(config?.maxPriorityFeePerGas || '1'),\n                gasCurrency: this.EIP1559GasOptionConfig?.gasCurrency || fallback?.gasCurrency,\n                gas:\n                    this.EIP1559GasOptionConfig.gas && !isZero(this.EIP1559GasOptionConfig.gas)\n                        ? toHex(this.EIP1559GasOptionConfig.gas)\n                        : undefined,\n                gasOptionType: this.config.gasOptionType ?? config?.gasOptionType,\n            }\n        }\n\n        const priorConfig = fallback as PriorEIP1559GasConfig | undefined\n\n        return {\n            gasPrice: toHex(this.priorEIP1559GasOptionConfig.gasPrice) || toHex(priorConfig?.gasPrice || '0'),\n            maxFeePerGas: undefined,\n            maxPriorityFeePerGas: undefined,\n            gasOptionType: this.config.gasOptionType ?? priorConfig?.gasOptionType,\n        }\n    }\n\n    static fromConfig(chainId: ChainId, gasConfig: Partial<GasConfig> = {}) {\n        return new GasEditor(chainId, gasConfig)\n    }\n\n    static fromGasPrice(chainId: ChainId, gasPrice = '0') {\n        return new GasEditor(chainId, {\n            gasPrice,\n            maxFeePerGas: gasPrice,\n            maxPriorityFeePerGas: gasPrice,\n        })\n    }\n\n    static fromTransaction(chainId: ChainId, transaction?: Transaction) {\n        return new GasEditor(chainId, {\n            gas: transaction?.gas,\n            gasPrice: transaction?.gasPrice,\n            maxFeePerGas: transaction?.maxFeePerGas,\n            maxPriorityFeePerGas: transaction?.maxPriorityFeePerGas,\n        })\n    }\n\n    static fromGasOption(chainId: ChainId, gasOption?: GasOption) {\n        return new GasEditor(chainId, {\n            gasPrice: toFixed(gasOption?.suggestedMaxFeePerGas ?? 0, 0),\n            maxFeePerGas: toFixed(gasOption?.suggestedMaxFeePerGas ?? 0, 0),\n            maxPriorityFeePerGas: toFixed(gasOption?.suggestedMaxPriorityFeePerGas ?? 0, 0),\n        })\n    }\n\n    static fromGasOptions(\n        chainId: ChainId,\n        gasOptions?: Record<GasOptionType, GasOption>,\n        gasOptionType = GasOptionType.NORMAL,\n    ) {\n        return new GasEditor(chainId, {\n            gasPrice: toFixed(gasOptions?.[gasOptionType]?.suggestedMaxFeePerGas ?? 0, 0),\n            maxFeePerGas: toFixed(gasOptions?.[gasOptionType]?.suggestedMaxFeePerGas ?? 0, 0),\n            maxPriorityFeePerGas: toFixed(gasOptions?.[gasOptionType]?.suggestedMaxPriorityFeePerGas ?? 0, 0),\n        })\n    }\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z\"\n}), 'Tune');"],"names":["useActivatedPluginExtensionPage","useActivatedPluginSiteAdaptor","useActivatedPlugin","pluginID","minimalModeEqualsTo","pluginSiteAdaptor","pluginExtensionPage","WebExtensionMessage","serializer","DOMAIN_RPC","Symbol","getPluginMessage","type","domain","cache","has","get","messageCenter","events","serialization","set","__workaround__replaceImplementationOfCreatePluginMessage__","newImpl","Map","useMemo","useTranslation","createProxy","initValue","define","key","value","Object","defineProperty","container","configurable","__proto__","Proxy","_","undefined","getPrototypeOf","setPrototypeOf","v","getOwnPropertyDescriptor","useGoPlusLabsTrans","t","bind","PLUGIN_ID","webpackHot","accept","PluginGoPlusSecurityMessages","isNativeTokenWrapper","trade","trade_","WETH_ABI","useTokenConstants","useContract","useNativeTokenWrapperContract","chainId","WNATIVE_ADDRESS","useCallback","isLessThan","isZero","Web3","ContractTransaction","useChainContext","useNativeTokenWrapperCallback","account","wrapperContract","wrapCallback","amount","gasConfig","tx","fillAll","methods","deposit","from","hash","sendTransaction","overrides","receipt","getTransactionReceipt","status","transactionHash","unwrapCallback","all","wethBalance","balanceOf","call","withdraw","useAsyncFn","useWeb3Others","TraderAPI","useTradeCallback","targetChainId","Others","inputToken","outputToken","tradeAmount","inputAmount","toFixed","result","strategy","TradeStrategy","ExactIn","isNativeTokenSchemaType","schema","ExactOut","ChainId","SUPPORTED_CHAIN_ID_LIST","Mainnet","BSC","Matic","pick","stringify","NetworkPluginID","useNetworkContext","tradeComputed","config","PLUGIN_EVM","includes","gas","estimateTransaction","error","useRef","useCustomSnackbar","useTraderTrans","useSwapErrorCallback","snackbarKeyRef","showSnackbar","closeSnackbar","showSingletonSnackbar","title","options","current","message","swap_failed","processing","variant","swap_failed_description","RouterV2ABI","useRouterV2Contract","address","SwapRouterABI","useSwapRouterContract","BigNumber","useBlockTimestamp","DEFAULT_TRANSACTION_DEADLINE","L2_TRANSACTION_DEADLINE","useTransactionDeadline","timestamp","timestamp_","plus","unreachable","TradeProvider","getTraderConstants","PANCAKESWAP_BASE_AGAINST_TOKENS","PANCAKESWAP_CUSTOM_BASES","QUICKSWAP_BASE_AGAINST_TOKENS","QUICKSWAP_CUSTOM_BASES","SUSHISWAP_BASE_AGAINST_TOKENS","SUSHISWAP_CUSTOM_BASES","UNISWAP_BASE_AGAINST_TOKENS","UNISWAP_CUSTOM_BASES","TRADERJOE_BASE_AGAINST_TOKENS","TRADERJOE_CUSTOM_BASES","PANGOLIN_BASE_AGAINST_TOKENS","PANGOLIN_CUSTOM_BASES","WANNASWAP_BASE_AGAINST_TOKENS","WANNASWAP_CUSTOM_BASES","TRISOLARIS_BASE_AGAINST_TOKENS","TRISOLARIS_CUSTOM_BASES","MDEX_BASE_AGAINST_TOKENS","MDEX_CUSTOM_BASES","ARTHSWAP_BASE_AGAINST_TOKENS","ARTHSWAP_CUSTOM_BASES","VERSA_BASE_AGAINST_TOKENS","VERSA_CUSTOM_BASES","ASTAREXCHANGE_BASE_AGAINST_TOKENS","ASTAREXCHANGE_CUSTOM_BASES","YUMISWAP_BASE_AGAINST_TOKENS","YUMISWAP_CUSTOM_BASES","useGetTradeContext","tradeProvider","DEX_TRADE","UNISWAP_V2","TYPE","IS_UNISWAP_V2_LIKE","GRAPH_API","UNISWAP_V2_THEGRAPH","INIT_CODE_HASH","UNISWAP_V2_INIT_CODE_HASH","ROUTER_CONTRACT_ADDRESS","UNISWAP_V2_ROUTER_ADDRESS","SPENDER_CONTRACT_ADDRESS","FACTORY_CONTRACT_ADDRESS","UNISWAP_V2_FACTORY_ADDRESS","AGAINST_TOKENS","ADDITIONAL_TOKENS","CUSTOM_TOKENS","UNISWAP_V3","IS_UNISWAP_V3_LIKE","UNISWAP_V3_THEGRAPH","UNISWAP_V3_INIT_CODE_HASH","UNISWAP_SWAP_ROUTER_ADDRESS","UNISWAP_V3_FACTORY_ADDRESS","SUSHISWAP","SUSHISWAP_THEGRAPH","SUSHISWAP_INIT_CODE_HASH","SUSHISWAP_ROUTER_ADDRESS","SUSHISWAP_FACTORY_ADDRESS","QUICKSWAP","QUICKSWAP_THEGRAPH","QUICKSWAP_INIT_CODE_HASH","QUICKSWAP_ROUTER_ADDRESS","QUICKSWAP_FACTORY_ADDRESS","PANCAKESWAP","PANCAKESWAP_THEGRAPH","PANCAKESWAP_INIT_CODE_HASH","PANCAKESWAP_ROUTER_ADDRESS","PANCAKESWAP_FACTORY_ADDRESS","TRADERJOE","TRADERJOE_THEGRAPH","TRADERJOE_INIT_CODE_HASH","TRADERJOE_ROUTER_ADDRESS","TRADERJOE_FACTORY_ADDRESS","PANGOLIN","PANGOLIN_THEGRAPH","PANGOLIN_INIT_CODE_HASH","PANGOLIN_ROUTER_ADDRESS","PANGOLIN_FACTORY_ADDRESS","WANNASWAP","WANNASWAP_THEGRAPH","WANNASWAP_INIT_CODE_HASH","WANNASWAP_ROUTER_V2_ADDRESS","WANNASWAP_FACTORY_ADDRESS","TRISOLARIS","TRISOLARIS_THEGRAPH","TRISOLARIS_INIT_CODE_HASH","TRISOLARIS_ROUTER_ADDRESS","TRISOLARIS_FACTORY_ADDRESS","MDEX","MDEX_THEGRAPH","MDEX_INIT_CODE_HASH","MDEX_ROUTER_ADDRESS","MDEX_FACTORY_ADDRESS","ARTHSWAP","ARTHSWAP_THEGRAPH","ARTHSWAP_INIT_CODE_HASH","ARTHSWAP_ROUTER_ADDRESS","ARTHSWAP_FACTORY_ADDRESS","VERSA","VERSA_THEGRAPH","VERSA_INIT_CODE_HASH","VERSA_ROUTER_ADDRESS","VERSA_FACTORY_ADDRESS","ASTAREXCHANGE","ASTAREXCHANGE_THEGRAPH","ASTAREXCHANGE_INIT_CODE_HASH","ASTAREXCHANGE_ROUTER_ADDRESS","ASTAREXCHANGE_FACTORY_ADDRESS","YUMISWAP","YUMISWAP_THEGRAPH","YUMISWAP_INIT_CODE_HASH","YUMISWAP_ROUTER_ADDRESS","YUMISWAP_FACTORY_ADDRESS","ZRX","DODO","DODO_EXCHANGE_PROXY_ADDRESS","BANCOR","BANCOR_EXCHANGE_PROXY_ADDRESS","OPENOCEAN","OPENOCEAN_EXCHANGE_PROXY_ADDRESS","Percent","TradeType","Trade","V2Trade","SwapRouter","swapCallParameters","SLIPPAGE_DEFAULT","UNISWAP_BIPS_BASE","useSwapParameters","allowedSlippage","context","deadline","routerV2Contract","swapRouterContract","allowedSlippage_","parameters","feeOnTransfer","recipient","ttl","toNumber","tradeType","EXACT_INPUT","push","map","methodName","args","calldata","encodeABI","slippageTolerance","identity","pickBy","useTradeParameters","swapErrorToUserReadableMessage","notifyError","tradeParameters","length","estimatedCalls","Promise","x","to","data","test","Number","parseInt","toString","gasEstimate","callTransaction","then","Error","catch","bestCallOption","find","el","ix","list","errorCalls","filter","firstNoErrorCall","confirmTransaction","code","ZERO","Bancor","swapTransactionBancor","tradeTransaction","transaction","config_","noop","useZrxCallback","useUniswapCallback","useDODOCallback","useBancorCallback","useOpenOceanCallback","provider","isNativeTokenWrapper_","tradeComputedForUniswapV2Like","tradeComputedForUniswapV3Like","tradeComputedForZRX","tradeComputedForDODO","tradeComputedForBancor","tradeComputedForOpenOcean","uniswapV2Like","uniswapV3Like","zrx","dodo","bancor","openocean","nativeTokenWrapper","loading","isGreaterThan","multipliedBy","leftShift","useFungibleToken","useFungibleTokenPrice","useNativeTokenPrice","MINIMUM_AMOUNT","AllProviderTradeContext","useSortedTrades","traders","gasPrice","nativeToken","nativeTokenPrice","tradeState","useContainer","outputTokenPrice","toLowerCase","outputAmount","gasFee","integerValue","gasFeeUSD","decimals","times","finalPrice","minus","sort","valueA","valueB","a","b","gasA","gasB","useEffect","isNativeTokenAddress","useBalance","AllProviderTradeActionType","useUpdateBalance","dispatchTradeStore","balance","UPDATE_INPUT_TOKEN_BALANCE","UPDATE_OUTPUT_TOKEN_BALANCE","Chip","LoadingBase","makeStyles","ExpandMore","ExpandMoreIcon","ErrorIcon","useSharedTrans","TokenIcon","useStyles","theme","chip","border","borderRadius","paddingLeft","spacing","fontSize","loadingChip","marginRight","icon","color","palette","text","primary","pointerEvents","tokenIcon","width","height","noToken","SelectTokenChip","props","token","readonly","ChipProps","classes","cx","className","size","clickable","label","select_token","name","logoURL","deleteIcon","symbol","onDelete","memo","alpha","Box","chipClasses","lighten","Typography","InputBase","MaskColorVar","formatBalance","formatCurrency","Sniffings","NUMERIC_INPUT_REGEXP_PATTERN","FormattedBalance","filledInput","padding","background","is_dashboard_page","primaryBackground2","maskColor","input","lineLight","line","position","minHeight","outline","fontWeight","lineHeight","second","wordBreak","marginLeft","textAlign","paddingBottom","backgroundColor","chipLabel","common","white","top","left","price","bottom","right","normalText","action","display","alignItems","selectedTokenChip","transition","paddingRight","paddingTop","main","boxShadow","shadowBottom","mode","chipTokenIcon","InputTokenPanelUI","onAmountChange","SelectTokenChipProps","maxAmount","tokenValueUSD","isAvailableBalance","RE_MATCH_WHOLE_AMOUNT","RE_MATCH_FRACTION_AMOUNT","RegExp","onChange","ev","amount_","currentTarget","replaceAll","priceUSD","onlyRemainTwoOrZeroDecimal","fullWidth","startAdornment","plugin_trader_swap_from","endAdornment","available_balance","wallet_balance","component","significant","formatter","root","onClick","inputProps","autoComplete","displayName","formatEtherToWei","InputTokenPanel","tokenPrice","useValueRef","currentSlippageSettings","useGreatThanSlippageSetting","priceImpact","slippageSetting","temporarySlippage","slippage","replace","TextField","Icons","DotLoading","marginBottom","cursor","warningText","redMain","danger","gap","cost","marginTop","focus","best","dotLoading","TraderInfoUI","providerName","isFocus","gasFeeValueUSD","isBest","isGreatThanSlippageSetting","InputProps","disableUnderline","sx","flexDirection","justifyContent","plugin_trader_gas_fee","BestTrade","CircleWarning","plugin_trader_price_image_value","percent","div","disabled","DefaultTraderPlaceholderUI","plugin_trader_tx_cost_usd","usd","createLookupTableResolver","resolveTradeProviderName","formatWeiToEther","formatPercentage","TraderInfo","createNativeToken","DefaultTraderPlaceholder","useState","useUpdateEffect","first","Tune","TuneIcon","Collapse","IconButton","SelectGasSettingsModal","TokenSecurityBar","useTokenSecurity","GasEditor","rightShift","PluginID","useActivatedPluginsSiteAdaptor","useIsMinimalModeExtensionPage","TokenPanel","MIN_GAS_LIMIT","PluginTraderMessages","flex","maxHeight","overflow","reverseIcon","card","reverse","lightBackground","default","reverseWrapper","paper","zIndex","chevron","strong","reverseChevron","transform","section","controller","mainBackground","is_popup_page","dropIcon","whiteDrop","TradeForm","trades","onTokenChipClick","onInputAmountChange","inputTokenBalance","focusedTrade","onFocusedTradeChange","isSmartPay","onSwitch","settings","maxAmountTrade","userSelected","allTradeComputed","isExpand","setExpand","minimalPlugins","isGoPlusSecurityMinimal","ID","GoPlusSecurity","isClosedInExtensionPage","isTokenSecurityEnable","inputTokenBalanceAmount","bestTrade","inputTokenTradeAmount","marginGasPrice","max","handleAmountChange","isEqualTo","firstTraderInfo","openSwapSettingDialog","swapSettingsUpdated","sendToAll","open","openAndWaitForClose","disableGasLimit","disableSlippageTolerance","fromTransaction","getGasConfig","tokenSecurityInfo","trim","Input","Drop","ArrowDownward","plugin_trader_swap_receive","Output","tokenSecurity","item","in","slice","ChevronUp","plugin_trader_slippage_tolerance","forEach","retry","Refresh","ActionButton","useRemoteControlledDialog","TokenSecurityBoundary","children","showTokenSecurity","tokenInfo","onSwap","setDialog","setRiskWarningDialog","tokenRiskWarningDialogEvent","swap","confirm_swap_risk","SchemaType","useTradeApproveComputed","approveToken","ERC20","approveAmount","approveAddress","allowanceTarget","openPopupWindow","PluginWalletStatusBar","WalletConnectedBoundary","EthereumERC20TokenApprovedBoundary","ChainBoundary","PopupRoutes","useEnvironmentContext","ZERO_ADDRESS","button","disabledButton","stateBar","unlockContainer","margin","TraderStateBar","refresh","actualPluginID","isSwapping","openSelectWalletPopup","SelectWallet","isGoPlusMinimal","isRisky","is_high_risk","validationMessage","plugin_trader_error_amount_absence","plugin_trade_error_input_amount_less_minimum_amount","plugin_trader_error_insufficient_lp","plugin_trader_error_insufficient_balance","plugin_trader_no_enough_liquidity","nativeWrapMessage","isWrap","plugin_trader_wrap","plugin_trader_unwrap","plugin_trader_swap_amount_symbol","plugin_trader_no_trade","offChain","expectedChainId","spender","contractName","infiniteUnlockContent","plugin_trader_unlock_symbol","ActionButtonProps","style","callback","expectedPluginID","token_name","contract","Alert","Button","DialogActions","DialogContent","dialogTitleClasses","parseColor","InjectedDialog","ONE_BIPS","MIN_SLIPPAGE","MAX_SLIPPAGE","description","rowGap","columnGap","stroke","alert","warning","warn","setAlpha","toRgbString","info","bg","minWidth","infoIcon","twitterInfo","content","actions","edit","alertMessage","alertIcon","dialog","ConfirmDialogUI","onClose","currentSlippage","inputTokenPrice","openSettingDialog","onConfirm","cacheTrade","setCacheTrade","priceUpdated","setPriceUpdated","priceReversed","setPriceReversed","executionPrice","setExecutionPrice","staled","alertTip","WarningTriangle","severity","plugin_trader_price_impact_warning_tips","plugin_trader_confirm_tips","plugin_trader_price_impact_too_high_tips","impact","onAccept","swapUsdPrice","shiftedBy","plugin_trader_confirm_swap","mt","plugin_trader_tab_price","span","dividedBy","Retweet","plugin_trader_confirm_slippage_tolerance","plugin_trader_price_impact","plugin_trader_confirm_minimum_received","minimumReceived","plugin_trader_gas","Info","plugin_trader_update","plugin_trader_price_updated","dialogClasses","TraderTrans","PriceImpactDialogUI","lostToken","lostValue","impact_warning","risk_warning","risk_warning_description","components","values","lostSymbol","adjust_order","make_trade_anyway","PERCENT_DENOMINATOR","ConfirmDialog","setTemporarySlippage","priceImpactDialogOpen","setPriceImpactDialogOpen","lostTokenValue","handleOpenPriceImpactDialog","handlePriceImpactDialogConfirm","onPriceImpactDialogClose","sendToLocal","forwardRef","useImperativeHandle","useAsync","useUnmount","delay","useTheme","ConfirmModal","SelectProviderModal","SelectFungibleTokenModal","isSameAddress","addGasMargin","useGasConfig","useChainIdValid","useFungibleTokenBalance","useMaskTokenAddress","useWallet","DepositPaymaster","SmartPayBundler","Trader","ref","wallet","defaultOutputCoin","defaultInputCoin","share","setFocusTrade","setChainId","traderDefinition","chainIdList","enableRequirement","web3","supportedChainIds","chainIdValid","setIsSwapping","openConfirmDialog","setOpenConfirmDialog","setGasConfig","UPDATE_INPUT_TOKEN","updateTradingCoin","coin","UPDATE_OUTPUT_TOKEN","UPDATE_INPUT_AMOUNT","inputTokenBalance_","isLoading","loadingInputTokenBalance","outputTokenBalance_","loadingOutputTokenBalance","excludeTokens","Boolean","panelType","picked","disableNativeToken","selectedTokens","join","isTrading","tradeCallback","shareText","isTwitter","is_twitter_page","isFacebook","is_facebook_page","cashTag","share_text","input_amount","input_symbol","output_amount","output_symbol","account_promote","confirmed","FillSuccess","success","congratulations","swap_successfully_description","output","confirmLabel","maxWidthOfContent","onConfirmDialogClose","onSwitchToken","SWITCH_TOKEN","inputBalance","outputBalance","sortedAllTradeComputed","isValidChainId","on","event","prev","target","maskTokenAddress","smartPayConfig","smartPayChainId","getSupportedChainId","depositPaymaster","ratio","getRatio","actualBalance","owner","maxFeePerGas","createElement","Trans","createComponent","i18nKey","ns","shouldUnescape","getPluginRPC","PluginTraderRPC","ContentTab","Market","Price","Exchange","Swap","NFTItems","v4","uuid","onUpdateByRemote","tabType","HOOK_ID","setOpen","_ev","hookId","timer","onUpdateByLocal","timer_","clearTimeout","setTimeout","payload","sendToVisiblePages","openDialog","closeDialog","WeakMap","getOrUpdateLocalImplementationHMR","impl","create","localImpl","useSubscription","FALSE","TRUE","useWeb3State","useAllowTestnet","Settings","allowTestnet","process","env","NODE_ENV","React","ShadowRootTooltip","useNetworkDescriptor","RevokeChainContextProvider","useWeb3Connection","ProviderType","WalletIcon","tooltip","black","maxWidth","arrow","connectWallet","ChainBoundaryWithoutContext","expectedAccount","actualNetworkPluginID","switchText","forceShowingWrongNetworkButton","disableConnectWallet","predicate","actualChainId","providerType","actualProviderType","expectedOthers","expectedAllowTestnet","expectedChainName","chainResolver","chainName","expectedNetworkDescriptor","expectedChainAllowed","isPluginIDMatched","isMatched","onSwitchChain","WalletConnect","switchChain","plugin_wallet_switch_network_title","plugin_wallet_unsupported_chain","network","autoHideDuration","plugin_wallet_switch_chain_failed","renderBox","tips","placement","hiddenConnectButton","startIcon","Wallet","ActionButtonPromiseProps","plugin_wallet_wrong_network","plugin_wallet_connect_a_wallet","switchButton","mainIcon","plugin_wallet_change_wallet","plugin_wallet_connect_tips","plugin_wallet_not_support_network","plugin_wallet_switch_network","SecurityMessageLevel","High","Medium","Safe","DefineMapping","titleColor","bgColor","SecurityRisk","SecurityWarning","Success","Stack","CrossIsolationMessages","warn_item_quantity","attentionFactors","risk_item_quantity","riskyFactors","handleOpenDialog","checkSecurityDialogEvent","searchHidden","tokenAddress","direction","bgcolor","risky_items","quantity","risky_item","attention_items","attention_item","more","RightArrow","NFTSpamBadge","spam","useAsyncRetry","GoPlusLabs","getTokenSecurity","getBlockTimestamp","getMaskTokenAddress","EMPTY_LIST","createContract","ABI","getWeb3","useContracts","listOfAddress","JSON","useGasOptions","gasOptions","editor","fromGasOptions","getGasPrice","scale","dividedToIntegerBy","toHex","GasOptionType","CHAIN_DESCRIPTORS","constructor","isEIP1559","features","EIP1559GasOptionConfig","priorEIP1559GasOptionConfig","getGasFee","getGasFeeInUSD","fallback","maxPriorityFeePerGas","gasCurrency","gasOptionType","priorConfig","fromConfig","fromGasPrice","fromGasOption","gasOption","suggestedMaxFeePerGas","suggestedMaxPriorityFeePerGas","NORMAL"],"sourceRoot":"","x_google_ignoreList":[34,55]}