{"version":3,"file":"bundled/chunk.5148.js","mappings":"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","sources":["webpack://mask-network/./packages/mask/popups/components/NormalHeader/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Settings/index.tsx","webpack://mask-network/./packages/shared-base-ui/src/bom/open-window.ts"],"sourcesContent":["import { memo, useCallback, useContext, type ReactNode } from 'react'\nimport { useNavigate, useOutletContext } from 'react-router-dom'\nimport { Box, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { Icons } from '@masknet/icons'\nimport { PageTitleContext } from '../../hooks/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        background: theme.palette.maskColor.modalTitleBg,\n    },\n    header: {\n        padding: theme.spacing(2),\n        lineHeight: 0,\n        display: 'grid',\n        gridTemplateColumns: '24px auto 24px',\n        alignItems: 'center',\n        flexShrink: 0,\n    },\n    icon: {\n        fontSize: 24,\n        cursor: 'pointer',\n        color: theme.palette.maskColor.main,\n    },\n    title: {\n        fontSize: 18,\n        lineHeight: '22px',\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        minHeight: 22,\n        textAlign: 'center',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        gridArea: '1 / 2',\n    },\n    logo: {\n        width: 96,\n        height: 30,\n    },\n}))\n\ninterface NormalHeaderProps {\n    tabList?: ReactNode\n    onClose?: () => void\n}\n\nfunction canNavBack() {\n    try {\n        return history.length !== 1 || !!new URLSearchParams(location.search).get('goBack')\n    } catch {}\n    return false\n}\nexport const NormalHeader = memo<NormalHeaderProps>(function NormalHeader(props) {\n    const { onClose, tabList } = props\n    const { classes } = useStyles()\n    const navigate = useNavigate()\n    const { title, extension, customBackHandler } = useContext(PageTitleContext)\n\n    const canBack = canNavBack()\n    const showTitle = title !== undefined\n\n    const handleBack = useCallback(() => navigate(-1), [])\n    const { hasNavigator } = useOutletContext() as { hasNavigator: boolean }\n\n    const leftAction = hasNavigator ? null : canBack ? (\n        <Icons.Comeback className={classes.icon} onClick={customBackHandler ?? handleBack} />\n    ) : (\n        <Icons.Close className={classes.icon} onClick={onClose} />\n    )\n\n    return (\n        <Box className={classes.container}>\n            <Box className={classes.header}>\n                {showTitle ? (\n                    <>\n                        {leftAction}\n                        <Typography className={classes.title}>{title}</Typography>\n                        {extension}\n                    </>\n                ) : (\n                    <Icons.Mask className={classes.logo} />\n                )}\n            </Box>\n            {tabList}\n        </Box>\n    )\n})\n","import Services from '#services'\nimport { env } from '@masknet/flags'\nimport { Icons } from '@masknet/icons'\nimport { Appearance, LanguageOptions } from '@masknet/public-api'\nimport { DashboardRoutes, PopupModalRoutes, Sniffings } from '@masknet/shared-base'\nimport { openWindow } from '@masknet/shared-base-ui'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, List, ListItem, ListItemText, Typography, useTheme } from '@mui/material'\nimport { memo, useCallback, useMemo } from 'react'\nimport { Trans } from 'react-i18next'\nimport { UserContext, useAppearance, useLanguage, useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport { NormalHeader, useModalNavigate } from '../../components/index.js'\nimport { useSupportedSites } from '../../hooks/useSupportedSites.js'\nimport { useTitle } from '../../hooks/useTitle.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    container: {\n        padding: theme.spacing(2),\n        flex: 1,\n        paddingBottom: 80,\n        overflow: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: theme.spacing(2),\n    },\n    header: {\n        display: 'flex',\n        columnGap: theme.spacing(1.5),\n        marginBottom: theme.spacing(1.5),\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    headerIcon: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        color: theme.palette.maskColor.white,\n        padding: theme.spacing(1.25),\n        borderRadius: 10,\n        background: theme.palette.maskColor.primary,\n    },\n    title: {\n        fontSize: 14,\n        lineHeight: '18px',\n        fontWeight: 700,\n    },\n    titleDescription: {\n        fontSize: 14,\n        lineHeight: '20px',\n        color: theme.palette.maskColor.third,\n    },\n    list: {\n        borderRadius: 16,\n        background: theme.palette.maskColor.bottom,\n        boxShadow: theme.palette.maskColor.bottomBg,\n        backdropFilter: 'blur(8px)',\n        padding: theme.spacing(2),\n    },\n    listItem: {\n        cursor: 'pointer',\n        padding: theme.spacing(1.5, 0),\n        borderBottom: `1px solid ${theme.palette.maskColor.line}`,\n        '&:first-of-type': {\n            paddingTop: 0,\n        },\n        '&:last-of-type': {\n            paddingBottom: 0,\n            borderBottom: 'none',\n        },\n        '&:hover > span': {\n            color: theme.palette.maskColor.main,\n        },\n    },\n    listItemText: {\n        margin: 0,\n    },\n    listItemPrimaryText: {\n        color: theme.palette.maskColor.third,\n        fontSize: 12,\n        lineHeight: '16px',\n        fontWeight: 700,\n    },\n    listItemSecondaryText: {\n        color: theme.palette.maskColor.main,\n        fontSize: 12,\n        lineHeight: '16px',\n        fontWeight: 700,\n    },\n    arrow: {\n        color: theme.palette.maskColor.second,\n    },\n}))\n\nconst FEEDBACK_MAIL = 'Support@mask.io'\nconst FAQ_LINK =\n    'realmasknetwork.notion.site/realmasknetwork/Mask-Network-2-0-Setting-Up-Features-The-Broader-Ecosystem-e4b3e24182e045a58bdb5549c0daea82'\nconst HOME_LINK = 'Mask.io'\n\nconst Settings = memo(function Settings() {\n    const theme = useTheme()\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const modalNavigate = useModalNavigate()\n\n    const lang = useLanguage()\n    const mode = useAppearance()\n\n    const { user } = UserContext.useContainer()\n\n    const LANGUAGE_OPTIONS_MAP = useMemo(\n        () => ({\n            [LanguageOptions.__auto__]: t.popups_settings_language_auto(),\n            [LanguageOptions.enUS]: 'English',\n            [LanguageOptions.zhCN]: '简体中文',\n            [LanguageOptions.zhTW]: '繁体中文',\n            [LanguageOptions.jaJP]: '日本語',\n            [LanguageOptions.koKR]: '한국인',\n        }),\n        [t],\n    )\n\n    const APPEARANCE_OPTIONS_MAP = useMemo(\n        () => ({\n            [Appearance.default]: t.popups_settings_appearance_default(),\n            [Appearance.light]: t.popups_settings_appearance_light(),\n            [Appearance.dark]: t.popups_settings_appearance_dark(),\n        }),\n        [t],\n    )\n\n    const itemClasses = useMemo(\n        () => ({\n            root: classes.listItemText,\n            primary: classes.listItemPrimaryText,\n            secondary: classes.listItemSecondaryText,\n        }),\n        [classes],\n    )\n\n    const localBackupTip = useMemo(() => {\n        if (!user.backupPassword) return t.popups_settings_set_backup_password_tips()\n        const backupMethod = localStorage.getItem('backupMethod')\n        // old data\n        if (backupMethod === 'local' && !user.localBackupAt) return t.popups_settings_local_backup_exist()\n        if (!user.localBackupAt) return t.popups_settings_no_backup()\n        return t.popups_settings_backup_on({ time: user.localBackupAt })\n    }, [user])\n\n    const cloudBackupTip = useMemo(() => {\n        if (!user.backupPassword) return t.popups_settings_set_backup_password_tips()\n        const backupMethod = localStorage.getItem('backupMethod')\n        // old data\n        if (backupMethod === 'cloud' && !user.cloudBackupAt) return t.popups_settings_cloud_backup_exist()\n        if (!user.cloudBackupAt) return t.popups_settings_no_backup()\n        return t.popups_settings_backup_on({ time: user.cloudBackupAt })\n    }, [user])\n\n    const { data } = useSupportedSites()\n\n    const handleOpenDashboard = useCallback(async (route: DashboardRoutes) => {\n        await browser.tabs.create({\n            active: true,\n            url: browser.runtime.getURL(`/dashboard.html#${route}`),\n        })\n        if (Sniffings.is_firefox) {\n            window.close()\n        }\n        await Services.Helper.removePopupWindow()\n    }, [])\n\n    useTitle(t.settings())\n\n    return (\n        <>\n            <NormalHeader />\n            <Box className={classes.container} data-hide-scrollbar>\n                <Box>\n                    <Box className={classes.header}>\n                        <Box className={classes.headerIcon}>\n                            <Icons.Filter size={24} />\n                        </Box>\n                        <Box className={classes.headerContent}>\n                            <Typography className={classes.title}>{t.popups_settings_general()}</Typography>\n                            <Typography className={classes.titleDescription}>\n                                {t.popups_settings_basic_setting()}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    <List className={classes.list}>\n                        <ListItem\n                            className={classes.listItem}\n                            onClick={() => modalNavigate(PopupModalRoutes.SelectLanguage)}>\n                            <ListItemText\n                                classes={itemClasses}\n                                primary={t.popups_settings_language()}\n                                secondary={LANGUAGE_OPTIONS_MAP[lang]}\n                            />\n                            <Icons.ArrowRight size={24} className={classes.arrow} />\n                        </ListItem>\n                        <ListItem\n                            className={classes.listItem}\n                            onClick={() => modalNavigate(PopupModalRoutes.SelectAppearance)}>\n                            <ListItemText\n                                classes={itemClasses}\n                                primary={t.popups_settings_appearance()}\n                                secondary={APPEARANCE_OPTIONS_MAP[mode]}\n                            />\n                            <Icons.ArrowRight size={24} className={classes.arrow} />\n                        </ListItem>\n                        <ListItem\n                            className={classes.listItem}\n                            onClick={() => modalNavigate(PopupModalRoutes.SupportedSitesModal)}>\n                            <ListItemText\n                                classes={itemClasses}\n                                primary={t.popups_settings_supported_sites()}\n                                secondary={\n                                    <Trans\n                                        i18nKey=\"popups_settings_supported_website\"\n                                        components={{\n                                            strong: <span style={{ color: theme.palette.maskColor.main }} />,\n                                        }}\n                                        values={{ count: data?.filter((x) => x.allowInject && x.hasPermission).length }}\n                                    />\n                                }\n                            />\n                            <Icons.ArrowRight size={24} className={classes.arrow} />\n                        </ListItem>\n                    </List>\n                </Box>\n                <Box>\n                    <Box className={classes.header}>\n                        <Box className={classes.headerIcon}>\n                            <Icons.History size={24} />\n                        </Box>\n                        <Box className={classes.headerContent}>\n                            <Typography className={classes.title}>{t.popups_settings_backup_and_recovery()}</Typography>\n                            <Typography className={classes.titleDescription}>\n                                {t.popups_settings_data_correlation()}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    <List className={classes.list}>\n                        <ListItem\n                            className={classes.listItem}\n                            onClick={() => {\n                                if (!user.backupPassword) {\n                                    modalNavigate(PopupModalRoutes.SetBackupPassword)\n                                } else {\n                                    handleOpenDashboard(DashboardRoutes.CloudBackup)\n                                }\n                            }}>\n                            <ListItemText\n                                classes={itemClasses}\n                                primary={t.popups_settings_cloud_backup()}\n                                secondary={cloudBackupTip}\n                            />\n                            <Icons.ArrowRight size={24} className={classes.arrow} />\n                        </ListItem>\n                        <ListItem\n                            className={classes.listItem}\n                            onClick={() => {\n                                if (!user.backupPassword) {\n                                    modalNavigate(PopupModalRoutes.SetBackupPassword)\n                                } else {\n                                    handleOpenDashboard(DashboardRoutes.LocalBackup)\n                                }\n                            }}>\n                            <ListItemText\n                                classes={itemClasses}\n                                primary={t.popups_settings_local_backup()}\n                                secondary={localBackupTip}\n                            />\n                            <Icons.ArrowRight size={24} className={classes.arrow} />\n                        </ListItem>\n                        <ListItem\n                            className={classes.listItem}\n                            onClick={() => handleOpenDashboard(DashboardRoutes.RecoveryPersona)}>\n                            <ListItemText\n                                classes={itemClasses}\n                                primary={t.popups_settings_restore_database()}\n                                secondary={t.popups_settings_restore_database_description()}\n                            />\n                            <Icons.ArrowRight size={24} className={classes.arrow} />\n                        </ListItem>\n                        <ListItem\n                            className={classes.listItem}\n                            onClick={() =>\n                                modalNavigate(\n                                    user.backupPassword\n                                        ? PopupModalRoutes.ChangeBackupPassword\n                                        : PopupModalRoutes.SetBackupPassword,\n                                )\n                            }>\n                            <ListItemText\n                                classes={itemClasses}\n                                primary={t.popups_settings_backup_password()}\n                                secondary={\n                                    user.backupPassword\n                                        ? t.popups_settings_change_backup_password()\n                                        : t.popups_settings_not_set()\n                                }\n                            />\n                            <Icons.ArrowRight size={24} className={classes.arrow} />\n                        </ListItem>\n                    </List>\n                </Box>\n                <Box>\n                    <Box className={classes.header}>\n                        <Box className={classes.headerIcon}>\n                            <Icons.Questions size={24} />\n                        </Box>\n                        <Box className={classes.headerContent}>\n                            <Typography className={classes.title}>{t.popups_settings_support()}</Typography>\n                            <Typography className={classes.titleDescription}>\n                                {t.popups_settings_basic_setting()}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    <List className={classes.list}>\n                        <ListItem className={classes.listItem} onClick={() => openWindow(`mailto:${FEEDBACK_MAIL}`)}>\n                            <ListItemText\n                                classes={itemClasses}\n                                primary={t.popups_settings_feedback()}\n                                secondary={FEEDBACK_MAIL}\n                            />\n                            <Icons.ArrowRight size={24} className={classes.arrow} />\n                        </ListItem>\n                        <ListItem\n                            className={classes.listItem}\n                            onClick={() => openWindow(`https://${FAQ_LINK}`, '_blank', { referrer: false })}>\n                            <ListItemText\n                                classes={itemClasses}\n                                primary={t.popups_settings_faq()}\n                                secondary={'realmasknetwork.notion.site'}\n                            />\n                            <Icons.ArrowRight size={24} className={classes.arrow} />\n                        </ListItem>\n                        <ListItem\n                            className={classes.listItem}\n                            onClick={() => openWindow(`https://${HOME_LINK}`, '_blank', { referrer: false })}>\n                            <ListItemText\n                                classes={itemClasses}\n                                primary={t.popups_settings_website()}\n                                secondary={HOME_LINK}\n                            />\n                            <Icons.ArrowRight size={24} className={classes.arrow} />\n                        </ListItem>\n                    </List>\n                </Box>\n                <Box>\n                    <Box className={classes.header}>\n                        <Box className={classes.headerIcon}>\n                            <Icons.Appearance size={24} />\n                        </Box>\n                        <Box className={classes.headerContent}>\n                            <Typography className={classes.title}>{t.popups_settings_about()}</Typography>\n                        </Box>\n                    </Box>\n                    <List className={classes.list}>\n                        <ListItem\n                            className={classes.listItem}\n                            onClick={() =>\n                                openWindow('https://github.com/DimensionDev/Maskbook', '_blank', { referrer: false })\n                            }>\n                            <ListItemText\n                                classes={itemClasses}\n                                primary={t.popups_settings_version()}\n                                secondary={env.VERSION}\n                            />\n                            <Icons.ArrowRight size={24} className={classes.arrow} />\n                        </ListItem>\n                        <ListItem\n                            className={classes.listItem}\n                            onClick={() =>\n                                openWindow(\n                                    'https://legal.mask.io/maskbook/service-agreement-beta-browser.html',\n                                    '_blank',\n                                    { referrer: false },\n                                )\n                            }>\n                            <ListItemText classes={itemClasses} secondary={t.popups_settings_service_agreement()} />\n                            <Icons.ArrowRight size={24} className={classes.arrow} />\n                        </ListItem>\n                        <ListItem\n                            className={classes.listItem}\n                            onClick={() =>\n                                openWindow('https://legal.mask.io/maskbook/privacy-policy-browser.html', '_blank', {\n                                    referrer: false,\n                                })\n                            }>\n                            <ListItemText classes={itemClasses} secondary={t.popups_settings_primary_policy()} />\n                            <Icons.ArrowRight size={24} className={classes.arrow} />\n                        </ListItem>\n                    </List>\n                </Box>\n            </Box>\n        </>\n    )\n})\n\nexport default Settings\n","type WindowTarget = LiteralUnion<'_top' | '_self' | '_parent' | '_blank'>\n\ninterface BehaviorFlags {\n    popup?: boolean\n    toolbar?: boolean\n    status?: boolean\n    resizable?: boolean\n    scrollbars?: boolean\n}\n\ninterface WindowFeatureFlags {\n    // Behavior\n    opener?: boolean\n    referrer?: boolean\n    behaviors?: BehaviorFlags\n    // Dimension\n    width?: number\n    height?: number\n    screenX?: number\n    screenY?: number\n}\n\nexport function openWindow(\n    url: string | URL | undefined | null,\n    target: WindowTarget = '_blank',\n    features: WindowFeatureFlags = {},\n): Window | null {\n    if (!url) return null\n    const flags = []\n    for (const [name, value] of Object.entries(features.behaviors ?? {})) {\n        if (value) flags.push(`${name}=1`)\n    }\n    if (!features.opener) flags.push('noopener')\n    if (!features.referrer) flags.push('noreferrer')\n    if (Number.isFinite(features.width)) flags.push(`width=${features.width}`)\n    if (Number.isFinite(features.height)) flags.push(`height=${features.height}`)\n    if (Number.isFinite(features.screenX)) flags.push(`screenX=${features.screenX}`)\n    if (Number.isFinite(features.screenY)) flags.push(`screenY=${features.screenY}`)\n    return window.open(url, target, flags.join(' '))\n}\n"],"names":["memo","useCallback","useContext","useNavigate","useOutletContext","Box","Typography","makeStyles","Icons","PageTitleContext","useStyles","theme","container","background","palette","maskColor","modalTitleBg","header","padding","spacing","lineHeight","display","gridTemplateColumns","alignItems","flexShrink","icon","fontSize","cursor","color","main","title","fontWeight","minHeight","textAlign","whiteSpace","textOverflow","overflow","paddingLeft","paddingRight","gridArea","logo","width","height","canNavBack","history","length","URLSearchParams","location","search","get","NormalHeader","props","onClose","tabList","classes","navigate","extension","customBackHandler","canBack","showTitle","undefined","handleBack","hasNavigator","leftAction","Comeback","className","onClick","Close","Mask","Services","env","Appearance","LanguageOptions","DashboardRoutes","PopupModalRoutes","Sniffings","openWindow","List","ListItem","ListItemText","useTheme","useMemo","Trans","UserContext","useAppearance","useLanguage","useMaskSharedTrans","useModalNavigate","useSupportedSites","useTitle","flex","paddingBottom","flexDirection","rowGap","columnGap","marginBottom","headerContent","justifyContent","headerIcon","white","borderRadius","primary","titleDescription","third","list","bottom","boxShadow","bottomBg","backdropFilter","listItem","borderBottom","line","paddingTop","listItemText","margin","listItemPrimaryText","listItemSecondaryText","arrow","second","FEEDBACK_MAIL","FAQ_LINK","HOME_LINK","Settings","t","modalNavigate","lang","mode","user","useContainer","LANGUAGE_OPTIONS_MAP","__auto__","popups_settings_language_auto","enUS","zhCN","zhTW","jaJP","koKR","APPEARANCE_OPTIONS_MAP","default","popups_settings_appearance_default","light","popups_settings_appearance_light","dark","popups_settings_appearance_dark","itemClasses","root","secondary","localBackupTip","backupPassword","popups_settings_set_backup_password_tips","backupMethod","localStorage","getItem","localBackupAt","popups_settings_local_backup_exist","popups_settings_no_backup","popups_settings_backup_on","time","cloudBackupTip","cloudBackupAt","popups_settings_cloud_backup_exist","data","handleOpenDashboard","route","browser","tabs","create","active","url","runtime","getURL","is_firefox","window","close","Helper","removePopupWindow","settings","data-hide-scrollbar","Filter","size","popups_settings_general","popups_settings_basic_setting","SelectLanguage","popups_settings_language","ArrowRight","SelectAppearance","popups_settings_appearance","SupportedSitesModal","popups_settings_supported_sites","i18nKey","components","strong","span","style","values","count","filter","x","allowInject","hasPermission","History","popups_settings_backup_and_recovery","popups_settings_data_correlation","SetBackupPassword","CloudBackup","popups_settings_cloud_backup","LocalBackup","popups_settings_local_backup","RecoveryPersona","popups_settings_restore_database","popups_settings_restore_database_description","ChangeBackupPassword","popups_settings_backup_password","popups_settings_change_backup_password","popups_settings_not_set","Questions","popups_settings_support","popups_settings_feedback","referrer","popups_settings_faq","popups_settings_website","popups_settings_about","popups_settings_version","VERSION","popups_settings_service_agreement","popups_settings_primary_policy","target","features","flags","name","value","Object","entries","behaviors","push","opener","Number","isFinite","screenX","screenY","open","join"],"sourceRoot":"","x_google_ignoreList":[]}