{"version":3,"file":"bundled/chunk.4693.js","mappings":"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","sources":["webpack://mask-network/./packages/mask/popups/components/MissingParameter/index.tsx","webpack://mask-network/./packages/mask/popups/pages/PermissionAwareRedirect/ui.tsx","webpack://mask-network/./packages/mask/popups/pages/PermissionAwareRedirect/utils.ts","webpack://mask-network/./packages/mask/popups/pages/PermissionAwareRedirect/index.tsx"],"sourcesContent":["import { Card, CardContent, Typography } from '@mui/material'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\n\nexport function MissingParameter(props: { message: string }) {\n    const t = useMaskSharedTrans()\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">{props.message}</Typography>\n                <Typography variant=\"caption\">{t.popups_missing_parameter_caption()}</Typography>\n            </CardContent>\n        </Card>\n    )\n}\n","import { Typography, Card, CardContent, Button, CardActions } from '@mui/material'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport { Trans } from 'react-i18next'\n\nexport function PermissionAwareRedirectUI(props: PermissionAwareRedirectProps) {\n    const t = useMaskSharedTrans()\n    if (props.granted) {\n        return (\n            <>\n                {t.redirect_to()} {props.url}.\n                <br />\n                <Trans i18nKey=\"redirect_alert\" components={{ terms: <a href={props.url} /> }} />\n            </>\n        )\n    }\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h6\">{t.popups_permission_request()}</Typography>\n                <Typography variant=\"body1\">{t.popups_permission_request_content()}</Typography>\n                <br />\n                <Typography variant=\"body1\">{props.url}</Typography>\n                <br />\n                <Typography variant=\"body1\">{t.popups_permission_request_content2()}</Typography>\n            </CardContent>\n            <CardActions sx={{ flexDirection: 'row-reverse' }}>\n                <Button variant=\"contained\" onClick={props.onRequest}>\n                    {t.popups_grant()}\n                </Button>\n                <Button onClick={props.onCancel}>{t.cancel()}</Button>\n            </CardActions>\n        </Card>\n    )\n}\ninterface PermissionAwareRedirectProps {\n    url: string\n    onRequest(): void\n    onCancel(): void\n    granted: boolean\n}\n","export function getHostPermissionFieldFromURL(url: string) {\n    const u = new URL(url)\n    return `*://${u.hostname}/*`\n}\nexport function isValidURL(url: string): boolean {\n    if (!URL.canParse(url)) return false\n    const u = new URL(url)\n    return u.protocol.startsWith('http')\n}\n","import { useEffect } from 'react'\nimport { useAsyncRetry } from 'react-use'\nimport { useLocation } from 'react-router-dom'\nimport { parseURL } from '@masknet/shared-base'\nimport { MissingParameter } from '../../components/MissingParameter/index.js'\nimport { PermissionAwareRedirectUI } from './ui.js'\nimport { getHostPermissionFieldFromURL, isValidURL } from './utils.js'\n\nexport default function PermissionAwareRedirect() {\n    const url = new URLSearchParams(useLocation().search).get('url')\n    const context = new URLSearchParams(useLocation().search).get('context')\n    if (!url) return <MissingParameter message=\"Parameter URL not found.\" />\n    if (!context) return <MissingParameter message=\"Parameter context not found.\" />\n    if (!isValidURL(url)) return <MissingParameter message=\"Parameter URL is not valid.\" />\n    return <Inner url={url} context={context} />\n}\nfunction Inner({ url, context }: { url: string; context: string }) {\n    const { value: hasPermission, retry } = useAsyncRetry(async () => {\n        if (!url) return false\n        return browser.permissions.contains({ origins: [getHostPermissionFieldFromURL(url)] })\n    }, [url])\n    useEffect(() => {\n        if (!hasPermission) return\n        const parsed = parseURL(url)\n        if (!parsed) return\n        parsed.searchParams.append('mask_context', context)\n        location.assign(parsed.toString())\n    }, [hasPermission, url])\n    return (\n        <PermissionAwareRedirectUI\n            url={url}\n            granted={!!hasPermission}\n            onCancel={() => window.close()}\n            onRequest={() => {\n                browser.permissions.request({ origins: [getHostPermissionFieldFromURL(url)] }).finally(retry)\n            }}\n        />\n    )\n}\n"],"names":["Card","CardContent","Typography","useMaskSharedTrans","MissingParameter","props","t","variant","message","popups_missing_parameter_caption","Button","CardActions","Trans","PermissionAwareRedirectUI","granted","redirect_to","url","br","i18nKey","components","terms","a","href","popups_permission_request","popups_permission_request_content","popups_permission_request_content2","sx","flexDirection","onClick","onRequest","popups_grant","onCancel","cancel","getHostPermissionFieldFromURL","u","URL","hostname","isValidURL","canParse","protocol","startsWith","useEffect","useAsyncRetry","useLocation","parseURL","PermissionAwareRedirect","URLSearchParams","search","get","context","Inner","value","hasPermission","retry","browser","permissions","contains","origins","parsed","searchParams","append","location","assign","toString","window","close","request","finally"],"sourceRoot":"","x_google_ignoreList":[]}