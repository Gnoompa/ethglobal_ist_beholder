{"version":3,"file":"bundled/npm.twitter-text.js","mappings":"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cAAc;AAC7H,oBAAoB,uBAAgB;AACpC,aAAa,gBAAS;AACtB,cAAc,iBAAU;AACxB,iBAAiB,oBAAa;AAC9B,CAAC;AACD,8DAAe,gBAAgB;;ACdW;AACA;AAC1C;AACA;AACA;AACgC;AAC0B;AAC1D;AACA,6CAA6C;AAC7C;AACA;;AAEA;AACA;AACA,mFAAmF,uBAAgB;AACnG;AACA;AACA;;AAEA;;AAEA,oBAAoB,mBAAmB;AACvC;AACA,iCAAiC,0BAAgB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAAe,IAAI;;AClCnB;AACA;AACA;AACiD;AACK;AACY;AAClE,kBAAkB,aAAa,uCAAuC,mBAAmB,GAAG,yBAAyB;AACrH,sBAAsB,yBAAkB;AACxC,4BAA4B,+BAAwB;AACpD,CAAC;AACD,yDAAe,WAAW;;ACVkB;AACA;AACI;AACN;AAC1C;AACA;AACA;AAC6C;AAC0D;AACzE;AAC2B;AACV;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAU;AAChC;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA,8DAA8D,8CAAuC;AACrG;AACA;;AAEA;AACA;AACA,qBAAqB,uBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,GAAG;;AAEV;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,oBAAoB,kBAAW;AAC/B;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,SAAS,iBAAU;AACnB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B,QAAI;;AAElC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iEAAe,sBAAsB;;;;AC7GG;AACxC;AACA;AACA;AACA,6BAAe,SAAS,0BAAC;AACzB;AACA;AACA,GAAG;AACH;;AAEA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA,M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;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAAe,SAAS,4BAAC;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AC5D4C;AAC5C;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ,cAAc;AACd,aAAa;AACb;AACA,6BAAe,SAAS,WAAC;AACzB;AACA;AACA,GAAG;AACH;;;;;;;;ACf8C;AACF;AACE;AAC9C;AACA;AACA;AACsC;AACtC,IAAI,2BAAkB;AACtB;AACA;AACA;AACA;AACA;AACA,6BAAe,SAAS,SAAC;AACzB;;AAEA;AACA;;AAEA,QAAQ,2BAAkB;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,UAAU,mBAAmB,UAAU;AACnE;;AAEA;AACA;;AC/BA;AACA;AACA;AACkD;AAChB;AAClC,6BAAe,SAAS,WAAC;AACzB;AACA;AACA,IAAI;;;AAGJ;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA,UAAU,QAAQ;AAClB;AACA,SAAS,cAAc,MAAM,KAAK,GAAG,KAAK;AAC1C;;ACzB0C;AAC1C;AACA;AACA;AACuC;AACD;AACA;AACtC,6BAAe,SAAS,qBAAC;AACzB;AACA,SAAS,UAAU;AACnB;;AAEA,qDAAqD,cAAO;AAC5D,WAAW,UAAU;AACrB,IAAI;AACJ,0BAA0B,UAAU;AACpC;AACA;;ACjBA;AACA;AACA;AACgC;AACM;AACoB;AAC1D,6BAAe,SAAS,cAAC;AACzB,gBAAgB,UAAU;AAC1B,cAAc,KAAK,wBAAwB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,oBAAoB;AAC7B;;AClBA;AACA;AACA;AACA;AACA,sDAAe,QAAQ;;ACJmB;AAC1C;AACA;AACA;AACgC;AACM;AACG;AACiB;AAC1D,6BAAe,SAAS,cAAC;AACzB;AACA,gBAAgB,UAAU;AAC1B,cAAc,KAAK,wBAAwB;AAC3C;AACA;AACA;;AAEA,8BAA8B,eAAQ;AACtC;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,oBAAoB;AAC7B;;ACzB0C;AACE;AACA;AAC5C;AACA;AACA;AACsC;AACY;AAClD,6BAAe,SAAS,mBAAC;AACzB;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,UAAU;AACzB;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,yBAAyB;AACzB;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;;;AAGA;AACA,WAAW,cAAc,+BAA+B,kBAAkB,QAAQ,UAAU,OAAO,sBAAsB,UAAU,GAAG,iBAAiB,sCAAsC,uBAAuB,eAAe,UAAU,GAAG,gBAAgB,0CAA0C,UAAU,OAAO,SAAS,kBAAkB;AACtV;;AAEA;AACA;;AC7EA;AACA;AACA;AACA;AACA,4DAAe,cAAc;;ACJa;AAC1C;AACA;AACA;AACgC;AACM;AACA;AACgB;AACD;AACrD,6BAAe,SAAS,UAAC;AACzB;AACA;AACA,iBAAiB,UAAU,cAAc;AACzC;AACA;;AAEA;;AAEA;AACA,eAAe,kBAAkB;AACjC;;AAEA,cAAc,KAAK,wBAAwB;;AAE3C,iBAAiB,qBAAc;AAC/B;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,UAAU;AACnB;;ACjDA;AACA;AACA;AACgC;AACM;AACoB;AAC1D,6BAAe,SAAS,qBAAC;AACzB;AACA,aAAa,UAAU;AACvB,sBAAsB,UAAU;AAChC;AACA,cAAc,KAAK,wBAAwB;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,oBAAoB;AAC7B;;ACxBwC;AACxC;AACA;AACA;AACgC;AACwC;AAClC;AACM;AACA;AACR;AACsB,CAAC;;AAE3D,gDAAgD;;AAEhD,mDAAmD;;AAEnD,iDAAiD;;AAEjD;AACA,6BAAe,SAAS,iBAAC;AACzB,gBAAgB,KAAK,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2BAA2B;AACjD,qFAAqF,aAAa,IAAI;;AAEtG;;AAEA;AACA;;AAEA,kDAAkD,SAAS;AAC3D;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB;;AAEtB;AACA;AACA,GAAG;AACH,kDAAkD,UAAU;AAC5D;AACA;;AAEA,kBAAkB,qBAAqB;AACvC;AACA;;AAEA;AACA,gBAAgB,SAAS;AACzB,MAAM;AACN,gBAAgB,aAAa;AAC7B,MAAM;AACN,gBAAgB,oBAAoB;AACpC,MAAM;AACN,gBAAgB,aAAa;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;;ACzEA;AACA;AACA;AACsE;AACpB;AAClD,6BAAe,SAAS,SAAC;AACzB,iBAAiB,0BAA0B;AAC3C;AACA,GAAG;AACH,SAAS,gBAAgB;AACzB;;ACVA;AACA;AACA;AACkD;AACoB;AACtE,6BAAe,SAAS,iBAAC;AACzB,iBAAiB,0BAA0B;AAC3C,SAAS,gBAAgB;AACzB;;ACRA;AACA;AACA;AACsE;AACpB;AAClD,6BAAe,SAAS,iBAAC;AACzB,iBAAiB,8BAA0B;AAC3C,SAAS,gBAAgB;AACzB;;ACRA;AACA;AACA;AACkD;AACY;AAC9D,6BAAe,SAAS,mBAAC;AACzB,iBAAiB,0BAAsB;AACvC;AACA,GAAG;AACH,SAAS,gBAAgB;AACzB;;ACVA;AACA;AACA;AACoF;AAClC;AAClD,6BAAe,SAAS,yBAAC;AACzB,iBAAiB,iCAAiC;AAClD,SAAS,gBAAgB;AACzB;;ACRwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;;AAE1B;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gEAAe,qBAAqB;;ACvDpC;AACA;AACA;AACgE;AAChE,6BAAe,SAAS,gCAAC;AACzB,EAAE,yBAAqB;AACvB;;ACNA;AACA;AACA;AACkD;AAC8B;AAChF,6BAAe,SAAS,iBAAC;AACzB;AACA;AACA,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA,IAAI;;;AAGJ;;AAEA;AACA;AACA,IAAI;;;AAGJ,EAAE,+BAA+B;AACjC,SAAS,gBAAgB;AACzB;;ACtCA;AACA,8CAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;ACpFuC;AACxC;AACA;AACA;AACA,6BAAe,SAAS,0BAAC;AACzB;AACA;AACA;;AAEA;AACA,0BAA0B;;AAE1B;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACsE;AACtE,6BAAe,SAAS,gBAAC;AACzB;AACA,4BAA4B,0BAA0B;;AAEtD,kBAAkB,gCAAgC;AAClD;AACA;;AAEA;AACA;;ACbA;AACA;AACA;AACsE;AACtE,6BAAe,SAAS,gBAAC;AACzB;AACA,4BAA4B,8BAA0B;;AAEtD,kBAAkB,gCAAgC;AAClD;AACA;;AAEA;AACA;;ACbA;AACA;AACA;AACoF;AACpF,6BAAe,SAAS,2BAAC;AACzB;AACA;AACA,wBAAwB,iCAAiC;;AAEzD,kBAAkB,4BAA4B;AAC9C;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;ACrBA;AACA;AACA;AACsE;AACtE,6BAAe,SAAS,gBAAC;AACzB;AACA,+BAA+B,0BAA0B;;AAEzD,kBAAkB,mCAAmC;AACrD;AACA;AACA;;AAEA;AACA;;ACdA;AACA;AACA;AACgC;AACiB;AACnB;AAC9B,iBAAiB,aAAa,QAAQ,OAAO,IAAI,QAAQ,cAAc,KAAK;AAC5E,WAAW,cAAO;AAClB,UAAU,MAAM;AAChB,CAAC;AACD,wDAAe,UAAU;;ACVuB;AACN;AAC1C;AACA;AACA;AACuD;AACV;AAC7C,6BAAe,SAAS,eAAC;AACzB;AACA;AACA;;AAEA,sCAAsC,iBAAU;;AAEhD,uDAAuD,sBAAe;AACtE;AACA;;AAEA;AACA;;ACnBA;AACA;AACA;AAC8D;AAC9D,6BAAe,SAAS,YAAC;AACzB;AACA,wBAAwB,0BAAsB;;AAE9C,kBAAkB,4BAA4B;AAC9C;AACA;;AAEA;AACA;;;;ACb4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,YAAY;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6DAAe,kBAAkB;;ACzBjC;AACA;AACA;AACgE;AAChE,6BAAe,SAAS,gCAAC;AACzB,EAAE,yBAAqB;AACvB;;;;;;;;;;ACNA;AACA;AACA;AACoD;AACH;AACjD,mBAAmB,aAAa,KAAK,kBAAkB;AACvD,qBAAqB,wBAAiB;AACtC,CAAC;AACD,0DAAe,YAAY;;ACR3B;AACA;AACA;AACiD;AACjD,6BAAe,SAAS,qBAAC;AACzB,SAAS,mBAAY;AACrB;;;;ACN0C;AACA;AACE;AACE;AACL;AACzC;AACA;AACA;AACgC;AAC8B;AACJ;AACA;AACsB,CAAC;;AAEf;AACnB;AAC/C;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA,mBAAmB,KAAK;AACxB,UAAU,MAAM;AAChB,eAAe,OAAO;AACtB,oBAAoB,KAAK;AACzB,kBAAkB,KAAK;AACvB,sBAAsB,KAAK;AAC3B,oBAAoB,KAAK;AACzB;;AAEA;AACA;AACA,oFAAoF,OAAO;AAC3F,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA,mGAAmG;;AAEnG,+CAA+C,0BAAsB;AACrE,uEAAuE,sBAAuB;AAC9F;AACA;AACA;AACA,oBAAoB;;AAEpB,0BAA0B,yBAAyB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,wBAAwB,sBAAkB;AAC1C,MAAM;;;AAGN;AACA,eAAe,oBAAoB;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qDAAe,UAAU;;ACjHzB;AACA;AACA;AACgC;AAC8B;AACJ;AACsB;AACzB;AACjB;AACS;;AAE/C;AACA,oFAAoF,OAAO;AAC3F,SAAS,cAAU;AACnB;;AAEA,yDAAe,cAAc;;AChBe;AAC5C;AACA;AACA;;AAEA;AACA;A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","sources":["webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/cashtag.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/punct.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/lib/regexSupplant.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/spacesGroup.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/spaces.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validCashtag.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/extractCashtagsWithIndices.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/hashSigns.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/endHashtagMatch.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validCCTLD.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/directionalMarkersGroup.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/invalidCharsGroup.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/lib/stringSupplant.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/invalidDomainChars.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validDomainChars.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validDomainName.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validGTLD.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validPunycode.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validSubdomain.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validDomain.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validPortNumber.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/cyrillicLettersAndMarks.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/latinAccentChars.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validGeneralUrlPathChars.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validUrlBalancedParens.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validUrlPathEndingChars.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validUrlPath.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validUrlPrecedingChars.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validUrlQueryChars.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validUrlQueryEndingChars.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/extractUrl.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/invalidUrlWithoutProtocolPrecedingChars.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validAsciiDomain.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/lib/idna.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validTcoUrl.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/extractUrlsWithIndices.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/removeOverlappingEntities.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/astralLetterAndMarks.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/bmpLetterAndMarks.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/nonBmpCodePairs.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/hashtagAlpha.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/astralNumerals.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/bmpNumerals.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/hashtagSpecialChars.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/hashtagAlphaNumeric.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/codePoint.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/hashtagBoundary.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validHashtag.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/extractHashtagsWithIndices.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/atSigns.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/endMentionMatch.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validMentionPrecedingChars.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validMentionOrList.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/extractMentionsOrListsWithIndices.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/extractEntitiesWithIndices.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/lib/clone.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/extractHtmlAttrsFromOptions.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/htmlEscape.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/tagAttrs.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/linkToText.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/linkToTextWithSymbol.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/linkToCashtag.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/rtlChars.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/linkToHashtag.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/linkTextWithEntity.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/urlHasProtocol.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/linkToUrl.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/linkToMentionAndList.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/autoLinkEntities.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/autoLink.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/autoLinkCashtags.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/autoLinkHashtags.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/autoLinkUrlsCustom.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/autoLinkUsernamesOrLists.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/lib/convertUnicodeIndices.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/modifyIndicesFromUnicodeToUTF16.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/autoLinkWithJSON.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/configs.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/convertUnicodeIndices.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/extractCashtags.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/extractHashtags.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/extractMentionsWithIndices.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/extractMentions.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validReply.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/extractReplies.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/extractUrls.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/lib/getCharacterWeight.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/modifyIndicesFromUTF16ToUnicode.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/invalidChars.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/hasInvalidCharacters.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/parseTweet.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/getTweetLength.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/getUnicodeTextLength.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/splitTags.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/hitHighlight.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/isInvalidTweet.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/isValidHashtag.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/isValidList.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/isValidTweetText.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlUnreserved.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlPctEncoded.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlSubDelims.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlUserinfo.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlDomainSegment.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlDomainTld.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlSubDomainSegment.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlDomain.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlDecOctet.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlIpv4.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlIpv6.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlIp.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlHost.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlPort.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlAuthority.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlPchar.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlFragment.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlPath.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlQuery.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlScheme.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlUnencoded.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlUnicodeSubDomainSegment.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlUnicodeDomainSegment.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlUnicodeDomainTld.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlUnicodeDomain.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlUnicodeHost.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/validateUrlUnicodeAuthority.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/isValidUrl.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/isValidUsername.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/urlHasHttps.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/regexp/index.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/standardizeIndices.js","webpack://mask-network/./node_modules/.pnpm/twitter-text@3.1.0/node_modules/twitter-text/dist/esm/index.js"],"sourcesContent":["// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar cashtag = /[a-z]{1,6}(?:[._][a-z]{1,2})?/i;\nexport default cashtag;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar punct = /\\!'#%&'\\(\\)*\\+,\\\\\\-\\.\\/:;<=>\\?@\\[\\]\\^_{|}~\\$/;\nexport default punct;","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.array.index-of\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n// Builds a RegExp\nexport default function (regex, map, flags) {\n  flags = flags || '';\n\n  if (typeof regex !== 'string') {\n    if (regex.global && flags.indexOf('g') < 0) {\n      flags += 'g';\n    }\n\n    if (regex.ignoreCase && flags.indexOf('i') < 0) {\n      flags += 'i';\n    }\n\n    if (regex.multiline && flags.indexOf('m') < 0) {\n      flags += 'm';\n    }\n\n    regex = regex.source;\n  }\n\n  return new RegExp(regex.replace(/#\\{(\\w+)\\}/g, function (match, name) {\n    var newRegex = map[name] || '';\n\n    if (typeof newRegex !== 'string') {\n      newRegex = newRegex.source;\n    }\n\n    return newRegex;\n  }), flags);\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar spacesGroup = /\\x09-\\x0D\\x20\\x85\\xA0\\u1680\\u180E\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000/;\nexport default spacesGroup;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport spacesGroup from './spacesGroup';\nexport default regexSupplant(/[#{spacesGroup}]/, {\n  spacesGroup: spacesGroup\n});","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport cashtag from './cashtag';\nimport punct from './punct';\nimport regexSupplant from '../lib/regexSupplant';\nimport spaces from './spaces';\nvar validCashtag = regexSupplant('(^|#{spaces})(\\\\$)(#{cashtag})(?=$|\\\\s|[#{punct}])', {\n  cashtag: cashtag,\n  spaces: spaces,\n  punct: punct\n}, 'gi');\nexport default validCashtag;","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.index-of\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport validCashtag from './regexp/validCashtag';\nexport default function (text) {\n  if (!text || text.indexOf('$') === -1) {\n    return [];\n  }\n\n  var tags = [];\n  text.replace(validCashtag, function (match, before, dollar, cashtag, offset, chunk) {\n    var startPosition = offset + before.length;\n    var endPosition = startPosition + cashtag.length + 1;\n    tags.push({\n      cashtag: cashtag,\n      indices: [startPosition, endPosition]\n    });\n  });\n  return tags;\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar hashSigns = /[#＃]/;\nexport default hashSigns;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport hashSigns from './hashSigns';\nimport regexSupplant from '../lib/regexSupplant';\nvar endHashtagMatch = regexSupplant(/^(?:#{hashSigns}|:\\/\\/)/, {\n  hashSigns: hashSigns\n});\nexport default endHashtagMatch;","import \"core-js/modules/es6.regexp.constructor\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nvar validCCTLD = regexSupplant(RegExp('(?:(?:' + '한국|香港|澳門|新加坡|台灣|台湾|中國|中国|გე|ລາວ|ไทย|ලංකා|ഭാരതം|ಭಾರತ|భారత్|சிங்கப்பூர்|இலங்கை|இந்தியா|ଭାରତ|' + 'ભારત|ਭਾਰਤ|ভাৰত|ভারত|বাংলা|भारोत|भारतम्|भारत|ڀارت|پاکستان|موريتانيا|مليسيا|مصر|قطر|فلسطين|عمان|' + 'عراق|سورية|سودان|تونس|بھارت|بارت|ایران|امارات|المغرب|السعودية|الجزائر|البحرين|الاردن|հայ|қаз|' + 'укр|срб|рф|мон|мкд|ею|бел|бг|ευ|ελ|zw|zm|za|yt|ye|ws|wf|vu|vn|vi|vg|ve|vc|va|uz|uy|us|um|uk|' + 'ug|ua|tz|tw|tv|tt|tr|tp|to|tn|tm|tl|tk|tj|th|tg|tf|td|tc|sz|sy|sx|sv|su|st|ss|sr|so|sn|sm|sl|' + 'sk|sj|si|sh|sg|se|sd|sc|sb|sa|rw|ru|rs|ro|re|qa|py|pw|pt|ps|pr|pn|pm|pl|pk|ph|pg|pf|pe|pa|om|' + 'nz|nu|nr|np|no|nl|ni|ng|nf|ne|nc|na|mz|my|mx|mw|mv|mu|mt|ms|mr|mq|mp|mo|mn|mm|ml|mk|mh|mg|mf|' + 'me|md|mc|ma|ly|lv|lu|lt|ls|lr|lk|li|lc|lb|la|kz|ky|kw|kr|kp|kn|km|ki|kh|kg|ke|jp|jo|jm|je|it|' + 'is|ir|iq|io|in|im|il|ie|id|hu|ht|hr|hn|hm|hk|gy|gw|gu|gt|gs|gr|gq|gp|gn|gm|gl|gi|gh|gg|gf|ge|' + 'gd|gb|ga|fr|fo|fm|fk|fj|fi|eu|et|es|er|eh|eg|ee|ec|dz|do|dm|dk|dj|de|cz|cy|cx|cw|cv|cu|cr|co|' + 'cn|cm|cl|ck|ci|ch|cg|cf|cd|cc|ca|bz|by|bw|bv|bt|bs|br|bq|bo|bn|bm|bl|bj|bi|bh|bg|bf|be|bd|bb|' + 'ba|az|ax|aw|au|at|as|ar|aq|ao|an|am|al|ai|ag|af|ae|ad|ac' + ')(?=[^0-9a-zA-Z@+-]|$))'));\nexport default validCCTLD;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar directionalMarkersGroup = /\\u202A-\\u202E\\u061C\\u200E\\u200F\\u2066\\u2067\\u2068\\u2069/;\nexport default directionalMarkersGroup;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar invalidCharsGroup = /\\uFFFE\\uFEFF\\uFFFF/;\nexport default invalidCharsGroup;","import \"core-js/modules/es6.regexp.replace\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n// simple string interpolation\nexport default function (str, map) {\n  return str.replace(/#\\{(\\w+)\\}/g, function (match, name) {\n    return map[name] || '';\n  });\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport directionalMarkersGroup from './directionalMarkersGroup';\nimport invalidCharsGroup from './invalidCharsGroup';\nimport punct from './punct';\nimport spacesGroup from './spacesGroup';\nimport stringSupplant from '../lib/stringSupplant';\nvar invalidDomainChars = stringSupplant('#{punct}#{spacesGroup}#{invalidCharsGroup}#{directionalMarkersGroup}', {\n  punct: punct,\n  spacesGroup: spacesGroup,\n  invalidCharsGroup: invalidCharsGroup,\n  directionalMarkersGroup: directionalMarkersGroup\n});\nexport default invalidDomainChars;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport invalidDomainChars from './invalidDomainChars';\nimport regexSupplant from '../lib/regexSupplant';\nvar validDomainChars = regexSupplant(/[^#{invalidDomainChars}]/, {\n  invalidDomainChars: invalidDomainChars\n});\nexport default validDomainChars;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validDomainChars from './validDomainChars';\nvar validDomainName = regexSupplant(/(?:(?:#{validDomainChars}(?:-|#{validDomainChars})*)?#{validDomainChars}\\.)/, {\n  validDomainChars: validDomainChars\n});\nexport default validDomainName;","import \"core-js/modules/es6.regexp.constructor\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nvar validGTLD = regexSupplant(RegExp('(?:(?:' + '삼성|닷컴|닷넷|香格里拉|餐厅|食品|飞利浦|電訊盈科|集团|通販|购物|谷歌|诺基亚|联通|网络|网站|网店|网址|组织机构|移动|珠宝|点看|游戏|淡马锡|机构|書籍|时尚|新闻|' + '政府|政务|招聘|手表|手机|我爱你|慈善|微博|广东|工行|家電|娱乐|天主教|大拿|大众汽车|在线|嘉里大酒店|嘉里|商标|商店|商城|公益|公司|八卦|健康|信息|佛山|企业|' + '中文网|中信|世界|ポイント|ファッション|セール|ストア|コム|グーグル|クラウド|みんな|คอม|संगठन|नेट|कॉम|همراه|موقع|موبايلي|كوم|' + 'كاثوليك|عرب|شبكة|بيتك|بازار|العليان|ارامكو|اتصالات|ابوظبي|קום|сайт|рус|орг|онлайн|москва|ком|' + 'католик|дети|zuerich|zone|zippo|zip|zero|zara|zappos|yun|youtube|you|yokohama|yoga|yodobashi|' + 'yandex|yamaxun|yahoo|yachts|xyz|xxx|xperia|xin|xihuan|xfinity|xerox|xbox|wtf|wtc|wow|world|' + 'works|work|woodside|wolterskluwer|wme|winners|wine|windows|win|williamhill|wiki|wien|whoswho|' + 'weir|weibo|wedding|wed|website|weber|webcam|weatherchannel|weather|watches|watch|warman|' + 'wanggou|wang|walter|walmart|wales|vuelos|voyage|voto|voting|vote|volvo|volkswagen|vodka|' + 'vlaanderen|vivo|viva|vistaprint|vista|vision|visa|virgin|vip|vin|villas|viking|vig|video|' + 'viajes|vet|versicherung|vermögensberatung|vermögensberater|verisign|ventures|vegas|vanguard|' + 'vana|vacations|ups|uol|uno|university|unicom|uconnect|ubs|ubank|tvs|tushu|tunes|tui|tube|trv|' + 'trust|travelersinsurance|travelers|travelchannel|travel|training|trading|trade|toys|toyota|' + 'town|tours|total|toshiba|toray|top|tools|tokyo|today|tmall|tkmaxx|tjx|tjmaxx|tirol|tires|tips|' + 'tiffany|tienda|tickets|tiaa|theatre|theater|thd|teva|tennis|temasek|telefonica|telecity|tel|' + 'technology|tech|team|tdk|tci|taxi|tax|tattoo|tatar|tatamotors|target|taobao|talk|taipei|tab|' + 'systems|symantec|sydney|swiss|swiftcover|swatch|suzuki|surgery|surf|support|supply|supplies|' + 'sucks|style|study|studio|stream|store|storage|stockholm|stcgroup|stc|statoil|statefarm|' + 'statebank|starhub|star|staples|stada|srt|srl|spreadbetting|spot|sport|spiegel|space|soy|sony|' + 'song|solutions|solar|sohu|software|softbank|social|soccer|sncf|smile|smart|sling|skype|sky|' + 'skin|ski|site|singles|sina|silk|shriram|showtime|show|shouji|shopping|shop|shoes|shiksha|shia|' + 'shell|shaw|sharp|shangrila|sfr|sexy|sex|sew|seven|ses|services|sener|select|seek|security|' + 'secure|seat|search|scot|scor|scjohnson|science|schwarz|schule|school|scholarships|schmidt|' + 'schaeffler|scb|sca|sbs|sbi|saxo|save|sas|sarl|sapo|sap|sanofi|sandvikcoromant|sandvik|samsung|' + 'samsclub|salon|sale|sakura|safety|safe|saarland|ryukyu|rwe|run|ruhr|rugby|rsvp|room|rogers|' + 'rodeo|rocks|rocher|rmit|rip|rio|ril|rightathome|ricoh|richardli|rich|rexroth|reviews|review|' + 'restaurant|rest|republican|report|repair|rentals|rent|ren|reliance|reit|reisen|reise|rehab|' + 'redumbrella|redstone|red|recipes|realty|realtor|realestate|read|raid|radio|racing|qvc|quest|' + 'quebec|qpon|pwc|pub|prudential|pru|protection|property|properties|promo|progressive|prof|' + 'productions|prod|pro|prime|press|praxi|pramerica|post|porn|politie|poker|pohl|pnc|plus|' + 'plumbing|playstation|play|place|pizza|pioneer|pink|ping|pin|pid|pictures|pictet|pics|piaget|' + 'physio|photos|photography|photo|phone|philips|phd|pharmacy|pfizer|pet|pccw|pay|passagens|' + 'party|parts|partners|pars|paris|panerai|panasonic|pamperedchef|page|ovh|ott|otsuka|osaka|' + 'origins|orientexpress|organic|org|orange|oracle|open|ooo|onyourside|online|onl|ong|one|omega|' + 'ollo|oldnavy|olayangroup|olayan|okinawa|office|off|observer|obi|nyc|ntt|nrw|nra|nowtv|nowruz|' + 'now|norton|northwesternmutual|nokia|nissay|nissan|ninja|nikon|nike|nico|nhk|ngo|nfl|nexus|' + 'nextdirect|next|news|newholland|new|neustar|network|netflix|netbank|net|nec|nba|navy|natura|' + 'nationwide|name|nagoya|nadex|nab|mutuelle|mutual|museum|mtr|mtpc|mtn|msd|movistar|movie|mov|' + 'motorcycles|moto|moscow|mortgage|mormon|mopar|montblanc|monster|money|monash|mom|moi|moe|moda|' + 'mobily|mobile|mobi|mma|mls|mlb|mitsubishi|mit|mint|mini|mil|microsoft|miami|metlife|merckmsd|' + 'meo|menu|men|memorial|meme|melbourne|meet|media|med|mckinsey|mcdonalds|mcd|mba|mattel|' + 'maserati|marshalls|marriott|markets|marketing|market|map|mango|management|man|makeup|maison|' + 'maif|madrid|macys|luxury|luxe|lupin|lundbeck|ltda|ltd|lplfinancial|lpl|love|lotto|lotte|' + 'london|lol|loft|locus|locker|loans|loan|llp|llc|lixil|living|live|lipsy|link|linde|lincoln|' + 'limo|limited|lilly|like|lighting|lifestyle|lifeinsurance|life|lidl|liaison|lgbt|lexus|lego|' + 'legal|lefrak|leclerc|lease|lds|lawyer|law|latrobe|latino|lat|lasalle|lanxess|landrover|land|' + 'lancome|lancia|lancaster|lamer|lamborghini|ladbrokes|lacaixa|kyoto|kuokgroup|kred|krd|kpn|' + 'kpmg|kosher|komatsu|koeln|kiwi|kitchen|kindle|kinder|kim|kia|kfh|kerryproperties|' + 'kerrylogistics|kerryhotels|kddi|kaufen|juniper|juegos|jprs|jpmorgan|joy|jot|joburg|jobs|jnj|' + 'jmp|jll|jlc|jio|jewelry|jetzt|jeep|jcp|jcb|java|jaguar|iwc|iveco|itv|itau|istanbul|ist|' + 'ismaili|iselect|irish|ipiranga|investments|intuit|international|intel|int|insure|insurance|' + 'institute|ink|ing|info|infiniti|industries|inc|immobilien|immo|imdb|imamat|ikano|iinet|ifm|' + 'ieee|icu|ice|icbc|ibm|hyundai|hyatt|hughes|htc|hsbc|how|house|hotmail|hotels|hoteles|hot|' + 'hosting|host|hospital|horse|honeywell|honda|homesense|homes|homegoods|homedepot|holiday|' + 'holdings|hockey|hkt|hiv|hitachi|hisamitsu|hiphop|hgtv|hermes|here|helsinki|help|healthcare|' + 'health|hdfcbank|hdfc|hbo|haus|hangout|hamburg|hair|guru|guitars|guide|guge|gucci|guardian|' + 'group|grocery|gripe|green|gratis|graphics|grainger|gov|got|gop|google|goog|goodyear|goodhands|' + 'goo|golf|goldpoint|gold|godaddy|gmx|gmo|gmbh|gmail|globo|global|gle|glass|glade|giving|gives|' + 'gifts|gift|ggee|george|genting|gent|gea|gdn|gbiz|gay|garden|gap|games|game|gallup|gallo|' + 'gallery|gal|fyi|futbol|furniture|fund|fun|fujixerox|fujitsu|ftr|frontier|frontdoor|frogans|' + 'frl|fresenius|free|fox|foundation|forum|forsale|forex|ford|football|foodnetwork|food|foo|fly|' + 'flsmidth|flowers|florist|flir|flights|flickr|fitness|fit|fishing|fish|firmdale|firestone|fire|' + 'financial|finance|final|film|fido|fidelity|fiat|ferrero|ferrari|feedback|fedex|fast|fashion|' + 'farmers|farm|fans|fan|family|faith|fairwinds|fail|fage|extraspace|express|exposed|expert|' + 'exchange|everbank|events|eus|eurovision|etisalat|esurance|estate|esq|erni|ericsson|equipment|' + 'epson|epost|enterprises|engineering|engineer|energy|emerck|email|education|edu|edeka|eco|eat|' + 'earth|dvr|dvag|durban|dupont|duns|dunlop|duck|dubai|dtv|drive|download|dot|doosan|domains|' + 'doha|dog|dodge|doctor|docs|dnp|diy|dish|discover|discount|directory|direct|digital|diet|' + 'diamonds|dhl|dev|design|desi|dentist|dental|democrat|delta|deloitte|dell|delivery|degree|' + 'deals|dealer|deal|dds|dclk|day|datsun|dating|date|data|dance|dad|dabur|cyou|cymru|cuisinella|' + 'csc|cruises|cruise|crs|crown|cricket|creditunion|creditcard|credit|cpa|courses|coupons|coupon|' + 'country|corsica|coop|cool|cookingchannel|cooking|contractors|contact|consulting|construction|' + 'condos|comsec|computer|compare|company|community|commbank|comcast|com|cologne|college|coffee|' + 'codes|coach|clubmed|club|cloud|clothing|clinique|clinic|click|cleaning|claims|cityeats|city|' + 'citic|citi|citadel|cisco|circle|cipriani|church|chrysler|chrome|christmas|chloe|chintai|cheap|' + 'chat|chase|charity|channel|chanel|cfd|cfa|cern|ceo|center|ceb|cbs|cbre|cbn|cba|catholic|' + 'catering|cat|casino|cash|caseih|case|casa|cartier|cars|careers|career|care|cards|caravan|car|' + 'capitalone|capital|capetown|canon|cancerresearch|camp|camera|cam|calvinklein|call|cal|cafe|' + 'cab|bzh|buzz|buy|business|builders|build|bugatti|budapest|brussels|brother|broker|broadway|' + 'bridgestone|bradesco|box|boutique|bot|boston|bostik|bosch|boots|booking|book|boo|bond|bom|' + 'bofa|boehringer|boats|bnpparibas|bnl|bmw|bms|blue|bloomberg|blog|blockbuster|blanco|' + 'blackfriday|black|biz|bio|bingo|bing|bike|bid|bible|bharti|bet|bestbuy|best|berlin|bentley|' + 'beer|beauty|beats|bcn|bcg|bbva|bbt|bbc|bayern|bauhaus|basketball|baseball|bargains|barefoot|' + 'barclays|barclaycard|barcelona|bar|bank|band|bananarepublic|banamex|baidu|baby|azure|axa|aws|' + 'avianca|autos|auto|author|auspost|audio|audible|audi|auction|attorney|athleta|associates|asia|' + 'asda|arte|art|arpa|army|archi|aramco|arab|aquarelle|apple|app|apartments|aol|anz|anquan|' + 'android|analytics|amsterdam|amica|amfam|amex|americanfamily|americanexpress|alstom|alsace|' + 'ally|allstate|allfinanz|alipay|alibaba|alfaromeo|akdn|airtel|airforce|airbus|aigo|aig|agency|' + 'agakhan|africa|afl|afamilycompany|aetna|aero|aeg|adult|ads|adac|actor|active|aco|accountants|' + 'accountant|accenture|academy|abudhabi|abogado|able|abc|abbvie|abbott|abb|abarth|aarp|aaa|' + 'onion' + ')(?=[^0-9a-zA-Z@+-]|$))'));\nexport default validGTLD;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validPunycode = /(?:xn--[\\-0-9a-z]+)/;\nexport default validPunycode;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validDomainChars from './validDomainChars';\nvar validSubdomain = regexSupplant(/(?:(?:#{validDomainChars}(?:[_-]|#{validDomainChars})*)?#{validDomainChars}\\.)/, {\n  validDomainChars: validDomainChars\n});\nexport default validSubdomain;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validCCTLD from './validCCTLD';\nimport validDomainName from './validDomainName';\nimport validGTLD from './validGTLD';\nimport validPunycode from './validPunycode';\nimport validSubdomain from './validSubdomain';\nvar validDomain = regexSupplant(/(?:#{validSubdomain}*#{validDomainName}(?:#{validGTLD}|#{validCCTLD}|#{validPunycode}))/, {\n  validDomainName: validDomainName,\n  validSubdomain: validSubdomain,\n  validGTLD: validGTLD,\n  validCCTLD: validCCTLD,\n  validPunycode: validPunycode\n});\nexport default validDomain;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validPortNumber = /[0-9]+/;\nexport default validPortNumber;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar cyrillicLettersAndMarks = /\\u0400-\\u04FF/;\nexport default cyrillicLettersAndMarks;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar latinAccentChars = /\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF\\u0100-\\u024F\\u0253\\u0254\\u0256\\u0257\\u0259\\u025B\\u0263\\u0268\\u026F\\u0272\\u0289\\u028B\\u02BB\\u0300-\\u036F\\u1E00-\\u1EFF/;\nexport default latinAccentChars;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport cyrillicLettersAndMarks from './cyrillicLettersAndMarks';\nimport latinAccentChars from './latinAccentChars';\nimport regexSupplant from '../lib/regexSupplant';\nvar validGeneralUrlPathChars = regexSupplant(/[a-z#{cyrillicLettersAndMarks}0-9!\\*';:=\\+,\\.\\$\\/%#\\[\\]\\-\\u2013_~@\\|&#{latinAccentChars}]/i, {\n  cyrillicLettersAndMarks: cyrillicLettersAndMarks,\n  latinAccentChars: latinAccentChars\n});\nexport default validGeneralUrlPathChars;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validGeneralUrlPathChars from './validGeneralUrlPathChars'; // Allow URL paths to contain up to two nested levels of balanced parens\n//  1. Used in Wikipedia URLs like /Primer_(film)\n//  2. Used in IIS sessions like /S(dfd346)/\n//  3. Used in Rdio URLs like /track/We_Up_(Album_Version_(Edited))/\n\nvar validUrlBalancedParens = regexSupplant('\\\\(' + '(?:' + '#{validGeneralUrlPathChars}+' + '|' + // allow one nested level of balanced parentheses\n'(?:' + '#{validGeneralUrlPathChars}*' + '\\\\(' + '#{validGeneralUrlPathChars}+' + '\\\\)' + '#{validGeneralUrlPathChars}*' + ')' + ')' + '\\\\)', {\n  validGeneralUrlPathChars: validGeneralUrlPathChars\n}, 'i');\nexport default validUrlBalancedParens;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport cyrillicLettersAndMarks from './cyrillicLettersAndMarks';\nimport latinAccentChars from './latinAccentChars';\nimport regexSupplant from '../lib/regexSupplant';\nimport validUrlBalancedParens from './validUrlBalancedParens'; // Valid end-of-path chracters (so /foo. does not gobble the period).\n// 1. Allow =&# for empty URL parameters and other URL-join artifacts\n\nvar validUrlPathEndingChars = regexSupplant(/[\\+\\-a-z#{cyrillicLettersAndMarks}0-9=_#\\/#{latinAccentChars}]|(?:#{validUrlBalancedParens})/i, {\n  cyrillicLettersAndMarks: cyrillicLettersAndMarks,\n  latinAccentChars: latinAccentChars,\n  validUrlBalancedParens: validUrlBalancedParens\n});\nexport default validUrlPathEndingChars;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validGeneralUrlPathChars from './validGeneralUrlPathChars';\nimport validUrlBalancedParens from './validUrlBalancedParens';\nimport validUrlPathEndingChars from './validUrlPathEndingChars'; // Allow @ in a url, but only in the middle. Catch things like http://example.com/@user/\n\nvar validUrlPath = regexSupplant('(?:' + '(?:' + '#{validGeneralUrlPathChars}*' + '(?:#{validUrlBalancedParens}#{validGeneralUrlPathChars}*)*' + '#{validUrlPathEndingChars}' + ')|(?:@#{validGeneralUrlPathChars}+/)' + ')', {\n  validGeneralUrlPathChars: validGeneralUrlPathChars,\n  validUrlBalancedParens: validUrlBalancedParens,\n  validUrlPathEndingChars: validUrlPathEndingChars\n}, 'i');\nexport default validUrlPath;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport directionalMarkersGroup from './directionalMarkersGroup';\nimport invalidCharsGroup from './invalidCharsGroup';\nimport regexSupplant from '../lib/regexSupplant';\nvar validUrlPrecedingChars = regexSupplant(/(?:[^A-Za-z0-9@＠$#＃#{invalidCharsGroup}]|[#{directionalMarkersGroup}]|^)/, {\n  invalidCharsGroup: invalidCharsGroup,\n  directionalMarkersGroup: directionalMarkersGroup\n});\nexport default validUrlPrecedingChars;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validUrlQueryChars = /[a-z0-9!?\\*'@\\(\\);:&=\\+\\$\\/%#\\[\\]\\-_\\.,~|]/i;\nexport default validUrlQueryChars;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validUrlQueryEndingChars = /[a-z0-9\\-_&=#\\/]/i;\nexport default validUrlQueryEndingChars;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validDomain from './validDomain';\nimport validPortNumber from './validPortNumber';\nimport validUrlPath from './validUrlPath';\nimport validUrlPrecedingChars from './validUrlPrecedingChars';\nimport validUrlQueryChars from './validUrlQueryChars';\nimport validUrlQueryEndingChars from './validUrlQueryEndingChars';\nvar extractUrl = regexSupplant('(' + // $1 total match\n'(#{validUrlPrecedingChars})' + // $2 Preceeding chracter\n'(' + // $3 URL\n'(https?:\\\\/\\\\/)?' + // $4 Protocol (optional)\n'(#{validDomain})' + // $5 Domain(s)\n'(?::(#{validPortNumber}))?' + // $6 Port number (optional)\n'(\\\\/#{validUrlPath}*)?' + // $7 URL Path\n'(\\\\?#{validUrlQueryChars}*#{validUrlQueryEndingChars})?' + // $8 Query String\n')' + ')', {\n  validUrlPrecedingChars: validUrlPrecedingChars,\n  validDomain: validDomain,\n  validPortNumber: validPortNumber,\n  validUrlPath: validUrlPath,\n  validUrlQueryChars: validUrlQueryChars,\n  validUrlQueryEndingChars: validUrlQueryEndingChars\n}, 'gi');\nexport default extractUrl;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar invalidUrlWithoutProtocolPrecedingChars = /[-_.\\/]$/;\nexport default invalidUrlWithoutProtocolPrecedingChars;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport latinAccentChars from './latinAccentChars';\nimport regexSupplant from '../lib/regexSupplant';\nimport validCCTLD from './validCCTLD';\nimport validGTLD from './validGTLD';\nimport validPunycode from './validPunycode';\nvar validAsciiDomain = regexSupplant(/(?:(?:[\\-a-z0-9#{latinAccentChars}]+)\\.)+(?:#{validGTLD}|#{validCCTLD}|#{validPunycode})/gi, {\n  latinAccentChars: latinAccentChars,\n  validGTLD: validGTLD,\n  validCCTLD: validCCTLD,\n  validPunycode: validPunycode\n});\nexport default validAsciiDomain;","import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.match\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport punycode from 'punycode';\nimport validAsciiDomain from '../regexp/validAsciiDomain';\nvar MAX_DOMAIN_LABEL_LENGTH = 63;\nvar PUNYCODE_ENCODED_DOMAIN_PREFIX = 'xn--'; // This is an extremely lightweight implementation of domain name validation according to RFC 3490\n// Our regexes handle most of the cases well enough\n// See https://tools.ietf.org/html/rfc3490#section-4.1 for details\n\nvar idna = {\n  toAscii: function toAscii(domain) {\n    if (domain.substring(0, 4) === PUNYCODE_ENCODED_DOMAIN_PREFIX && !domain.match(validAsciiDomain)) {\n      // Punycode encoded url cannot contain non ASCII characters\n      return;\n    }\n\n    var labels = domain.split('.');\n\n    for (var i = 0; i < labels.length; i++) {\n      var label = labels[i];\n      var punycodeEncodedLabel = punycode.toASCII(label);\n\n      if (punycodeEncodedLabel.length < 1 || punycodeEncodedLabel.length > MAX_DOMAIN_LABEL_LENGTH) {\n        // DNS label has invalid length\n        return;\n      }\n    }\n\n    return labels.join('.');\n  }\n};\nexport default idna;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validUrlQueryChars from './validUrlQueryChars';\nimport validUrlQueryEndingChars from './validUrlQueryEndingChars';\nvar validTcoUrl = regexSupplant(/^https?:\\/\\/t\\.co\\/([a-z0-9]+)(?:\\?#{validUrlQueryChars}*#{validUrlQueryEndingChars})?/, {\n  validUrlQueryChars: validUrlQueryChars,\n  validUrlQueryEndingChars: validUrlQueryEndingChars\n}, 'i');\nexport default validTcoUrl;","import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.match\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractUrl from './regexp/extractUrl';\nimport invalidUrlWithoutProtocolPrecedingChars from './regexp/invalidUrlWithoutProtocolPrecedingChars';\nimport idna from './lib/idna';\nimport validAsciiDomain from './regexp/validAsciiDomain';\nimport validTcoUrl from './regexp/validTcoUrl';\nvar DEFAULT_PROTOCOL = 'https://';\nvar DEFAULT_PROTOCOL_OPTIONS = {\n  extractUrlsWithoutProtocol: true\n};\nvar MAX_URL_LENGTH = 4096;\nvar MAX_TCO_SLUG_LENGTH = 40;\n\nvar extractUrlsWithIndices = function extractUrlsWithIndices(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_PROTOCOL_OPTIONS;\n\n  if (!text || (options.extractUrlsWithoutProtocol ? !text.match(/\\./) : !text.match(/:/))) {\n    return [];\n  }\n\n  var urls = [];\n\n  var _loop = function _loop() {\n    var before = RegExp.$2;\n    var url = RegExp.$3;\n    var protocol = RegExp.$4;\n    var domain = RegExp.$5;\n    var path = RegExp.$7;\n    var endPosition = extractUrl.lastIndex;\n    var startPosition = endPosition - url.length;\n\n    if (!isValidUrl(url, protocol || DEFAULT_PROTOCOL, domain)) {\n      return \"continue\";\n    } // extract ASCII-only domains.\n\n\n    if (!protocol) {\n      if (!options.extractUrlsWithoutProtocol || before.match(invalidUrlWithoutProtocolPrecedingChars)) {\n        return \"continue\";\n      }\n\n      var lastUrl = null;\n      var asciiEndPosition = 0;\n      domain.replace(validAsciiDomain, function (asciiDomain) {\n        var asciiStartPosition = domain.indexOf(asciiDomain, asciiEndPosition);\n        asciiEndPosition = asciiStartPosition + asciiDomain.length;\n        lastUrl = {\n          url: asciiDomain,\n          indices: [startPosition + asciiStartPosition, startPosition + asciiEndPosition]\n        };\n        urls.push(lastUrl);\n      }); // no ASCII-only domain found. Skip the entire URL.\n\n      if (lastUrl == null) {\n        return \"continue\";\n      } // lastUrl only contains domain. Need to add path and query if they exist.\n\n\n      if (path) {\n        lastUrl.url = url.replace(domain, lastUrl.url);\n        lastUrl.indices[1] = endPosition;\n      }\n    } else {\n      // In the case of t.co URLs, don't allow additional path characters.\n      if (url.match(validTcoUrl)) {\n        var tcoUrlSlug = RegExp.$1;\n\n        if (tcoUrlSlug && tcoUrlSlug.length > MAX_TCO_SLUG_LENGTH) {\n          return \"continue\";\n        } else {\n          url = RegExp.lastMatch;\n          endPosition = startPosition + url.length;\n        }\n      }\n\n      urls.push({\n        url: url,\n        indices: [startPosition, endPosition]\n      });\n    }\n  };\n\n  while (extractUrl.exec(text)) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return urls;\n};\n\nvar isValidUrl = function isValidUrl(url, protocol, domain) {\n  var urlLength = url.length;\n  var punycodeEncodedDomain = idna.toAscii(domain);\n\n  if (!punycodeEncodedDomain || !punycodeEncodedDomain.length) {\n    return false;\n  }\n\n  urlLength = urlLength + punycodeEncodedDomain.length - domain.length;\n  return protocol.length + urlLength <= MAX_URL_LENGTH;\n};\n\nexport default extractUrlsWithIndices;","import \"core-js/modules/es6.array.sort\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nexport default function (entities) {\n  entities.sort(function (a, b) {\n    return a.indices[0] - b.indices[0];\n  });\n  var prev = entities[0];\n\n  for (var i = 1; i < entities.length; i++) {\n    if (prev.indices[1] > entities[i].indices[0]) {\n      entities.splice(i, 1);\n      i--;\n    } else {\n      prev = entities[i];\n    }\n  }\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n// Generated from unicode_regex/unicode_regex_groups.scala, same as objective c's \\p{L}\\p{M}\nvar astralLetterAndMarks = /\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\uddfd\\ude80-\\ude9c\\udea0-\\uded0\\udee0\\udf00-\\udf1f\\udf30-\\udf40\\udf42-\\udf49\\udf50-\\udf7a\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf]|\\ud801[\\udc00-\\udc9d\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe\\uddbf\\ude00-\\ude03\\ude05\\ude06\\ude0c-\\ude13\\ude15-\\ude17\\ude19-\\ude33\\ude38-\\ude3a\\ude3f\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee6\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48]|\\ud804[\\udc00-\\udc46\\udc7f-\\udcba\\udcd0-\\udce8\\udd00-\\udd34\\udd50-\\udd73\\udd76\\udd80-\\uddc4\\uddda\\ude00-\\ude11\\ude13-\\ude37\\udeb0-\\udeea\\udf01-\\udf03\\udf05-\\udf0c\\udf0f\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32\\udf33\\udf35-\\udf39\\udf3c-\\udf44\\udf47\\udf48\\udf4b-\\udf4d\\udf57\\udf5d-\\udf63\\udf66-\\udf6c\\udf70-\\udf74]|\\ud805[\\udc80-\\udcc5\\udcc7\\udd80-\\uddb5\\uddb8-\\uddc0\\ude00-\\ude40\\ude44\\ude80-\\udeb7]|\\ud806[\\udca0-\\udcdf\\udcff\\udec0-\\udef8]|\\ud808[\\udc00-\\udf98]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\uded0-\\udeed\\udef0-\\udef4\\udf00-\\udf36\\udf40-\\udf43\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\udf00-\\udf44\\udf50-\\udf7e\\udf8f-\\udf9f]|\\ud82c[\\udc00\\udc01]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99\\udc9d\\udc9e]|\\ud834[\\udd65-\\udd69\\udd6d-\\udd72\\udd7b-\\udd82\\udd85-\\udd8b\\uddaa-\\uddad\\ude42-\\ude44]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e\\udc9f\\udca2\\udca5\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb]|\\ud83a[\\udc00-\\udcc4\\udcd0-\\udcd6]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d]|\\ud87e[\\udc00-\\ude1d]|\\udb40[\\udd00-\\uddef]/;\nexport default astralLetterAndMarks;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n// Generated from unicode_regex/unicode_regex_groups.scala, same as objective c's \\p{L}\\p{M}\nvar bmpLetterAndMarks = /A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u065f\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07ca-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0-\\u08b2\\u08e4-\\u0963\\u0971-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09f0\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a70-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0c00-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c81-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0cf1\\u0cf2\\u0d01-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u103f\\u1050-\\u108f\\u109a-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16f1-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u180b-\\u180d\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f\\u1aa7\\u1ab0-\\u1abe\\u1b00-\\u1b4b\\u1b6b-\\u1b73\\u1b80-\\u1baf\\u1bba-\\u1bf3\\u1c00-\\u1c37\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1cf8\\u1cf9\\u1d00-\\u1df5\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2183\\u2184\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005\\u3006\\u302a-\\u302f\\u3031-\\u3035\\u303b\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua672\\ua674-\\ua67d\\ua67f-\\ua69d\\ua69f-\\ua6e5\\ua6f0\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua7ad\\ua7b0\\ua7b1\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8e0-\\ua8f7\\ua8fb\\ua90a-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf\\ua9e0-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab5f\\uab64\\uab65\\uabc0-\\uabea\\uabec\\uabed\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf870-\\uf87f\\uf882\\uf884-\\uf89f\\uf8b8\\uf8c1-\\uf8d6\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2d\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc/;\nexport default bmpLetterAndMarks;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar nonBmpCodePairs = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/gm;\nexport default nonBmpCodePairs;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport astralLetterAndMarks from './astralLetterAndMarks';\nimport bmpLetterAndMarks from './bmpLetterAndMarks';\nimport nonBmpCodePairs from './nonBmpCodePairs';\nimport regexSupplant from '../lib/regexSupplant'; // A hashtag must contain at least one unicode letter or mark, as well as numbers, underscores, and select special characters.\n\nvar hashtagAlpha = regexSupplant(/(?:[#{bmpLetterAndMarks}]|(?=#{nonBmpCodePairs})(?:#{astralLetterAndMarks}))/, {\n  bmpLetterAndMarks: bmpLetterAndMarks,\n  nonBmpCodePairs: nonBmpCodePairs,\n  astralLetterAndMarks: astralLetterAndMarks\n});\nexport default hashtagAlpha;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar astralNumerals = /\\ud801[\\udca0-\\udca9]|\\ud804[\\udc66-\\udc6f\\udcf0-\\udcf9\\udd36-\\udd3f\\uddd0-\\uddd9\\udef0-\\udef9]|\\ud805[\\udcd0-\\udcd9\\ude50-\\ude59\\udec0-\\udec9]|\\ud806[\\udce0-\\udce9]|\\ud81a[\\ude60-\\ude69\\udf50-\\udf59]|\\ud835[\\udfce-\\udfff]/;\nexport default astralNumerals;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar bmpNumerals = /0-9\\u0660-\\u0669\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u0a6f\\u0ae6-\\u0aef\\u0b66-\\u0b6f\\u0be6-\\u0bef\\u0c66-\\u0c6f\\u0ce6-\\u0cef\\u0d66-\\u0d6f\\u0de6-\\u0def\\u0e50-\\u0e59\\u0ed0-\\u0ed9\\u0f20-\\u0f29\\u1040-\\u1049\\u1090-\\u1099\\u17e0-\\u17e9\\u1810-\\u1819\\u1946-\\u194f\\u19d0-\\u19d9\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1b50-\\u1b59\\u1bb0-\\u1bb9\\u1c40-\\u1c49\\u1c50-\\u1c59\\ua620-\\ua629\\ua8d0-\\ua8d9\\ua900-\\ua909\\ua9d0-\\ua9d9\\ua9f0-\\ua9f9\\uaa50-\\uaa59\\uabf0-\\uabf9\\uff10-\\uff19/;\nexport default bmpNumerals;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar hashtagSpecialChars = /_\\u200c\\u200d\\ua67e\\u05be\\u05f3\\u05f4\\uff5e\\u301c\\u309b\\u309c\\u30a0\\u30fb\\u3003\\u0f0b\\u0f0c\\xb7/;\nexport default hashtagSpecialChars;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport astralLetterAndMarks from './astralLetterAndMarks';\nimport astralNumerals from './astralNumerals';\nimport bmpLetterAndMarks from './bmpLetterAndMarks';\nimport bmpNumerals from './bmpNumerals';\nimport hashtagSpecialChars from './hashtagSpecialChars';\nimport nonBmpCodePairs from './nonBmpCodePairs';\nimport regexSupplant from '../lib/regexSupplant';\nvar hashtagAlphaNumeric = regexSupplant(/(?:[#{bmpLetterAndMarks}#{bmpNumerals}#{hashtagSpecialChars}]|(?=#{nonBmpCodePairs})(?:#{astralLetterAndMarks}|#{astralNumerals}))/, {\n  bmpLetterAndMarks: bmpLetterAndMarks,\n  bmpNumerals: bmpNumerals,\n  hashtagSpecialChars: hashtagSpecialChars,\n  nonBmpCodePairs: nonBmpCodePairs,\n  astralLetterAndMarks: astralLetterAndMarks,\n  astralNumerals: astralNumerals\n});\nexport default hashtagAlphaNumeric;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar codePoint = /(?:[^\\uD800-\\uDFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/;\nexport default codePoint;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport codePoint from './codePoint';\nimport hashtagAlphaNumeric from './hashtagAlphaNumeric';\nimport regexSupplant from '../lib/regexSupplant';\nvar hashtagBoundary = regexSupplant(/(?:^|\\uFE0E|\\uFE0F|$|(?!#{hashtagAlphaNumeric}|&)#{codePoint})/, {\n  codePoint: codePoint,\n  hashtagAlphaNumeric: hashtagAlphaNumeric\n});\nexport default hashtagBoundary;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport hashSigns from './hashSigns';\nimport hashtagAlpha from './hashtagAlpha';\nimport hashtagAlphaNumeric from './hashtagAlphaNumeric';\nimport hashtagBoundary from './hashtagBoundary';\nimport regexSupplant from '../lib/regexSupplant';\nvar validHashtag = regexSupplant(/(#{hashtagBoundary})(#{hashSigns})(?!\\uFE0F|\\u20E3)(#{hashtagAlphaNumeric}*#{hashtagAlpha}#{hashtagAlphaNumeric}*)/gi, {\n  hashtagBoundary: hashtagBoundary,\n  hashSigns: hashSigns,\n  hashtagAlphaNumeric: hashtagAlphaNumeric,\n  hashtagAlpha: hashtagAlpha\n});\nexport default validHashtag;","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport endHashtagMatch from './regexp/endHashtagMatch';\nimport extractUrlsWithIndices from './extractUrlsWithIndices';\nimport hashSigns from './regexp/hashSigns';\nimport removeOverlappingEntities from './removeOverlappingEntities';\nimport validHashtag from './regexp/validHashtag';\n\nvar extractHashtagsWithIndices = function extractHashtagsWithIndices(text, options) {\n  if (!options) {\n    options = {\n      checkUrlOverlap: true\n    };\n  }\n\n  if (!text || !text.match(hashSigns)) {\n    return [];\n  }\n\n  var tags = [];\n  text.replace(validHashtag, function (match, before, hash, hashText, offset, chunk) {\n    var after = chunk.slice(offset + match.length);\n\n    if (after.match(endHashtagMatch)) {\n      return;\n    }\n\n    var startPosition = offset + before.length;\n    var endPosition = startPosition + hashText.length + 1;\n    tags.push({\n      hashtag: hashText,\n      indices: [startPosition, endPosition]\n    });\n  });\n\n  if (options.checkUrlOverlap) {\n    // also extract URL entities\n    var urls = extractUrlsWithIndices(text);\n\n    if (urls.length > 0) {\n      var entities = tags.concat(urls); // remove overlap\n\n      removeOverlappingEntities(entities); // only push back hashtags\n\n      tags = [];\n\n      for (var i = 0; i < entities.length; i++) {\n        if (entities[i].hashtag) {\n          tags.push(entities[i]);\n        }\n      }\n    }\n  }\n\n  return tags;\n};\n\nexport default extractHashtagsWithIndices;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar atSigns = /[@＠]/;\nexport default atSigns;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport atSigns from './atSigns';\nimport latinAccentChars from './latinAccentChars';\nimport regexSupplant from '../lib/regexSupplant';\nvar endMentionMatch = regexSupplant(/^(?:#{atSigns}|[#{latinAccentChars}]|:\\/\\/)/, {\n  atSigns: atSigns,\n  latinAccentChars: latinAccentChars\n});\nexport default endMentionMatch;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validMentionPrecedingChars = /(?:^|[^a-zA-Z0-9_!#$%&*@＠]|(?:^|[^a-zA-Z0-9_+~.-])(?:rt|RT|rT|Rt):?)/;\nexport default validMentionPrecedingChars;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport atSigns from './atSigns';\nimport regexSupplant from '../lib/regexSupplant';\nimport validMentionPrecedingChars from './validMentionPrecedingChars';\nvar validMentionOrList = regexSupplant('(#{validMentionPrecedingChars})' + // $1: Preceding character\n'(#{atSigns})' + // $2: At mark\n'([a-zA-Z0-9_]{1,20})' + // $3: Screen name\n'(/[a-zA-Z][a-zA-Z0-9_-]{0,24})?', // $4: List (optional)\n{\n  validMentionPrecedingChars: validMentionPrecedingChars,\n  atSigns: atSigns\n}, 'g');\nexport default validMentionOrList;","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport atSigns from './regexp/atSigns';\nimport endMentionMatch from './regexp/endMentionMatch';\nimport validMentionOrList from './regexp/validMentionOrList';\nexport default function (text) {\n  if (!text || !text.match(atSigns)) {\n    return [];\n  }\n\n  var possibleNames = [];\n  text.replace(validMentionOrList, function (match, before, atSign, screenName, slashListname, offset, chunk) {\n    var after = chunk.slice(offset + match.length);\n\n    if (!after.match(endMentionMatch)) {\n      slashListname = slashListname || '';\n      var startPosition = offset + before.length;\n      var endPosition = startPosition + screenName.length + slashListname.length + 1;\n      possibleNames.push({\n        screenName: screenName,\n        listSlug: slashListname,\n        indices: [startPosition, endPosition]\n      });\n    }\n  });\n  return possibleNames;\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractCashtagsWithIndices from './extractCashtagsWithIndices';\nimport extractHashtagsWithIndices from './extractHashtagsWithIndices';\nimport extractMentionsOrListsWithIndices from './extractMentionsOrListsWithIndices';\nimport extractUrlsWithIndices from './extractUrlsWithIndices';\nimport removeOverlappingEntities from './removeOverlappingEntities';\nexport default function (text, options) {\n  var entities = extractUrlsWithIndices(text, options).concat(extractMentionsOrListsWithIndices(text)).concat(extractHashtagsWithIndices(text, {\n    checkUrlOverlap: false\n  })).concat(extractCashtagsWithIndices(text));\n\n  if (entities.length == 0) {\n    return [];\n  }\n\n  removeOverlappingEntities(entities);\n  return entities;\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nexport default function (o) {\n  var r = {};\n\n  for (var k in o) {\n    if (o.hasOwnProperty(k)) {\n      r[k] = o[k];\n    }\n  }\n\n  return r;\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar BOOLEAN_ATTRIBUTES = {\n  disabled: true,\n  readonly: true,\n  multiple: true,\n  checked: true\n}; // Options which should not be passed as HTML attributes\n\nvar OPTIONS_NOT_ATTRIBUTES = {\n  urlClass: true,\n  listClass: true,\n  usernameClass: true,\n  hashtagClass: true,\n  cashtagClass: true,\n  usernameUrlBase: true,\n  listUrlBase: true,\n  hashtagUrlBase: true,\n  cashtagUrlBase: true,\n  usernameUrlBlock: true,\n  listUrlBlock: true,\n  hashtagUrlBlock: true,\n  linkUrlBlock: true,\n  usernameIncludeSymbol: true,\n  suppressLists: true,\n  suppressNoFollow: true,\n  targetBlank: true,\n  suppressDataScreenName: true,\n  urlEntities: true,\n  symbolTag: true,\n  textWithSymbolTag: true,\n  urlTarget: true,\n  invisibleTagAttrs: true,\n  linkAttributeBlock: true,\n  linkTextBlock: true,\n  htmlEscapeNonEntities: true\n};\nexport default function (options) {\n  var htmlAttrs = {};\n\n  for (var k in options) {\n    var v = options[k];\n\n    if (OPTIONS_NOT_ATTRIBUTES[k]) {\n      continue;\n    }\n\n    if (BOOLEAN_ATTRIBUTES[k]) {\n      v = v ? k : null;\n    }\n\n    if (v == null) {\n      continue;\n    }\n\n    htmlAttrs[k] = v;\n  }\n\n  return htmlAttrs;\n}","import \"core-js/modules/es6.regexp.replace\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar HTML_ENTITIES = {\n  '&': '&amp;',\n  '>': '&gt;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nexport default function (text) {\n  return text && text.replace(/[&\"'><]/g, function (character) {\n    return HTML_ENTITIES[character];\n  });\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport htmlEscape from './htmlEscape';\nvar BOOLEAN_ATTRIBUTES = {\n  disabled: true,\n  readonly: true,\n  multiple: true,\n  checked: true\n};\nexport default function (attributes) {\n  var htmlAttrs = '';\n\n  for (var k in attributes) {\n    var v = attributes[k];\n\n    if (BOOLEAN_ATTRIBUTES[k]) {\n      v = v ? k : null;\n    }\n\n    if (v == null) {\n      continue;\n    }\n\n    htmlAttrs += \" \".concat(htmlEscape(k), \"=\\\"\").concat(htmlEscape(v.toString()), \"\\\"\");\n  }\n\n  return htmlAttrs;\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport stringSupplant from './lib/stringSupplant';\nimport tagAttrs from './tagAttrs';\nexport default function (entity, text, attributes, options) {\n  if (!options.suppressNoFollow) {\n    attributes.rel = 'nofollow';\n  } // if linkAttributeBlock is specified, call it to modify the attributes\n\n\n  if (options.linkAttributeBlock) {\n    options.linkAttributeBlock(entity, attributes);\n  } // if linkTextBlock is specified, call it to get a new/modified link text\n\n\n  if (options.linkTextBlock) {\n    text = options.linkTextBlock(entity, text);\n  }\n\n  var d = {\n    text: text,\n    attr: tagAttrs(attributes)\n  };\n  return stringSupplant('<a#{attr}>#{text}</a>', d);\n}","import \"core-js/modules/es6.regexp.match\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport atSigns from './regexp/atSigns';\nimport htmlEscape from './htmlEscape';\nimport linkToText from './linkToText';\nexport default function (entity, symbol, text, attributes, options) {\n  var taggedSymbol = options.symbolTag ? \"<\".concat(options.symbolTag, \">\").concat(symbol, \"</\").concat(options.symbolTag, \">\") : symbol;\n  text = htmlEscape(text);\n  var taggedText = options.textWithSymbolTag ? \"<\".concat(options.textWithSymbolTag, \">\").concat(text, \"</\").concat(options.textWithSymbolTag, \">\") : text;\n\n  if (options.usernameIncludeSymbol || !symbol.match(atSigns)) {\n    return linkToText(entity, taggedSymbol + taggedText, attributes, options);\n  } else {\n    return taggedSymbol + linkToText(entity, taggedText, attributes, options);\n  }\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport clone from './lib/clone';\nimport htmlEscape from './htmlEscape';\nimport linkToTextWithSymbol from './linkToTextWithSymbol';\nexport default function (entity, text, options) {\n  var cashtag = htmlEscape(entity.cashtag);\n  var attrs = clone(options.htmlAttrs || {});\n  attrs.href = options.cashtagUrlBase + cashtag;\n  attrs.title = \"$\".concat(cashtag);\n  attrs['class'] = options.cashtagClass;\n\n  if (options.targetBlank) {\n    attrs.target = '_blank';\n  }\n\n  return linkToTextWithSymbol(entity, '$', cashtag, attrs, options);\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar rtlChars = /[\\u0600-\\u06FF]|[\\u0750-\\u077F]|[\\u0590-\\u05FF]|[\\uFE70-\\uFEFF]/gm;\nexport default rtlChars;","import \"core-js/modules/es6.regexp.match\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport clone from './lib/clone';\nimport htmlEscape from './htmlEscape';\nimport rtlChars from './regexp/rtlChars';\nimport linkToTextWithSymbol from './linkToTextWithSymbol';\nexport default function (entity, text, options) {\n  var hash = text.substring(entity.indices[0], entity.indices[0] + 1);\n  var hashtag = htmlEscape(entity.hashtag);\n  var attrs = clone(options.htmlAttrs || {});\n  attrs.href = options.hashtagUrlBase + hashtag;\n  attrs.title = \"#\".concat(hashtag);\n  attrs['class'] = options.hashtagClass;\n\n  if (hashtag.charAt(0).match(rtlChars)) {\n    attrs['class'] += ' rtl';\n  }\n\n  if (options.targetBlank) {\n    attrs.target = '_blank';\n  }\n\n  return linkToTextWithSymbol(entity, hash, hashtag, attrs, options);\n}","import \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.regexp.replace\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport htmlEscape from './htmlEscape';\nimport stringSupplant from './lib/stringSupplant';\nexport default function (entity, options) {\n  var displayUrl = entity.display_url;\n  var expandedUrl = entity.expanded_url; // Goal: If a user copies and pastes a tweet containing t.co'ed link, the resulting paste\n  // should contain the full original URL (expanded_url), not the display URL.\n  //\n  // Method: Whenever possible, we actually emit HTML that contains expanded_url, and use\n  // font-size:0 to hide those parts that should not be displayed (because they are not part of display_url).\n  // Elements with font-size:0 get copied even though they are not visible.\n  // Note that display:none doesn't work here. Elements with display:none don't get copied.\n  //\n  // Additionally, we want to *display* ellipses, but we don't want them copied.  To make this happen we\n  // wrap the ellipses in a tco-ellipsis class and provide an onCopy handler that sets display:none on\n  // everything with the tco-ellipsis class.\n  //\n  // Exception: pic.twitter.com images, for which expandedUrl = \"https://twitter.com/#!/username/status/1234/photo/1\n  // For those URLs, display_url is not a substring of expanded_url, so we don't do anything special to render the elided parts.\n  // For a pic.twitter.com URL, the only elided part will be the \"https://\", so this is fine.\n\n  var displayUrlSansEllipses = displayUrl.replace(/…/g, ''); // We have to disregard ellipses for matching\n  // Note: we currently only support eliding parts of the URL at the beginning or the end.\n  // Eventually we may want to elide parts of the URL in the *middle*.  If so, this code will\n  // become more complicated.  We will probably want to create a regexp out of display URL,\n  // replacing every ellipsis with a \".*\".\n\n  if (expandedUrl.indexOf(displayUrlSansEllipses) != -1) {\n    var displayUrlIndex = expandedUrl.indexOf(displayUrlSansEllipses);\n    var v = {\n      displayUrlSansEllipses: displayUrlSansEllipses,\n      // Portion of expandedUrl that precedes the displayUrl substring\n      beforeDisplayUrl: expandedUrl.substr(0, displayUrlIndex),\n      // Portion of expandedUrl that comes after displayUrl\n      afterDisplayUrl: expandedUrl.substr(displayUrlIndex + displayUrlSansEllipses.length),\n      precedingEllipsis: displayUrl.match(/^…/) ? '…' : '',\n      followingEllipsis: displayUrl.match(/…$/) ? '…' : ''\n    };\n\n    for (var k in v) {\n      if (v.hasOwnProperty(k)) {\n        v[k] = htmlEscape(v[k]);\n      }\n    } // As an example: The user tweets \"hi http://longdomainname.com/foo\"\n    // This gets shortened to \"hi http://t.co/xyzabc\", with display_url = \"…nname.com/foo\"\n    // This will get rendered as:\n    // <span class='tco-ellipsis'> <!-- This stuff should get displayed but not copied -->\n    //   …\n    //   <!-- There's a chance the onCopy event handler might not fire. In case that happens,\n    //        we include an &nbsp; here so that the … doesn't bump up against the URL and ruin it.\n    //        The &nbsp; is inside the tco-ellipsis span so that when the onCopy handler *does*\n    //        fire, it doesn't get copied.  Otherwise the copied text would have two spaces in a row,\n    //        e.g. \"hi  http://longdomainname.com/foo\".\n    //   <span style='font-size:0'>&nbsp;</span>\n    // </span>\n    // <span style='font-size:0'>  <!-- This stuff should get copied but not displayed -->\n    //   http://longdomai\n    // </span>\n    // <span class='js-display-url'> <!-- This stuff should get displayed *and* copied -->\n    //   nname.com/foo\n    // </span>\n    // <span class='tco-ellipsis'> <!-- This stuff should get displayed but not copied -->\n    //   <span style='font-size:0'>&nbsp;</span>\n    //   …\n    // </span>\n\n\n    v['invisible'] = options.invisibleTagAttrs;\n    return stringSupplant(\"<span class='tco-ellipsis'>#{precedingEllipsis}<span #{invisible}>&nbsp;</span></span><span #{invisible}>#{beforeDisplayUrl}</span><span class='js-display-url'>#{displayUrlSansEllipses}</span><span #{invisible}>#{afterDisplayUrl}</span><span class='tco-ellipsis'><span #{invisible}>&nbsp;</span>#{followingEllipsis}</span>\", v);\n  }\n\n  return displayUrl;\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar urlHasProtocol = /^https?:\\/\\//i;\nexport default urlHasProtocol;","import \"core-js/modules/es6.regexp.match\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport clone from './lib/clone';\nimport htmlEscape from './htmlEscape';\nimport linkToText from './linkToText';\nimport linkTextWithEntity from './linkTextWithEntity';\nimport urlHasProtocol from './regexp/urlHasProtocol';\nexport default function (entity, text, options) {\n  var url = entity.url;\n  var displayUrl = url;\n  var linkText = htmlEscape(displayUrl); // If the caller passed a urlEntities object (provided by a Twitter API\n  // response with include_entities=true), we use that to render the display_url\n  // for each URL instead of it's underlying t.co URL.\n\n  var urlEntity = options.urlEntities && options.urlEntities[url] || entity;\n\n  if (urlEntity.display_url) {\n    linkText = linkTextWithEntity(urlEntity, options);\n  }\n\n  var attrs = clone(options.htmlAttrs || {});\n\n  if (!url.match(urlHasProtocol)) {\n    url = \"http://\".concat(url);\n  }\n\n  attrs.href = url;\n\n  if (options.targetBlank) {\n    attrs.target = '_blank';\n  } // set class only if urlClass is specified.\n\n\n  if (options.urlClass) {\n    attrs['class'] = options.urlClass;\n  } // set target only if urlTarget is specified.\n\n\n  if (options.urlTarget) {\n    attrs.target = options.urlTarget;\n  }\n\n  if (!options.title && urlEntity.display_url) {\n    attrs.title = urlEntity.expanded_url;\n  }\n\n  return linkToText(entity, linkText, attrs, options);\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport clone from './lib/clone';\nimport htmlEscape from './htmlEscape';\nimport linkToTextWithSymbol from './linkToTextWithSymbol';\nexport default function (entity, text, options) {\n  var at = text.substring(entity.indices[0], entity.indices[0] + 1);\n  var user = htmlEscape(entity.screenName);\n  var slashListname = htmlEscape(entity.listSlug);\n  var isList = entity.listSlug && !options.suppressLists;\n  var attrs = clone(options.htmlAttrs || {});\n  attrs['class'] = isList ? options.listClass : options.usernameClass;\n  attrs.href = isList ? options.listUrlBase + user + slashListname : options.usernameUrlBase + user;\n\n  if (!isList && !options.suppressDataScreenName) {\n    attrs['data-screen-name'] = user;\n  }\n\n  if (options.targetBlank) {\n    attrs.target = '_blank';\n  }\n\n  return linkToTextWithSymbol(entity, at, isList ? user + slashListname : user, attrs, options);\n}","import \"core-js/modules/es6.array.sort\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport clone from './lib/clone';\nimport extractHtmlAttrsFromOptions from './extractHtmlAttrsFromOptions';\nimport htmlEscape from './htmlEscape';\nimport linkToCashtag from './linkToCashtag';\nimport linkToHashtag from './linkToHashtag';\nimport linkToUrl from './linkToUrl';\nimport linkToMentionAndList from './linkToMentionAndList'; // Default CSS class for auto-linked lists (along with the url class)\n\nvar DEFAULT_LIST_CLASS = 'tweet-url list-slug'; // Default CSS class for auto-linked usernames (along with the url class)\n\nvar DEFAULT_USERNAME_CLASS = 'tweet-url username'; // Default CSS class for auto-linked hashtags (along with the url class)\n\nvar DEFAULT_HASHTAG_CLASS = 'tweet-url hashtag'; // Default CSS class for auto-linked cashtags (along with the url class)\n\nvar DEFAULT_CASHTAG_CLASS = 'tweet-url cashtag';\nexport default function (text, entities, options) {\n  var options = clone(options || {});\n  options.hashtagClass = options.hashtagClass || DEFAULT_HASHTAG_CLASS;\n  options.hashtagUrlBase = options.hashtagUrlBase || 'https://twitter.com/search?q=%23';\n  options.cashtagClass = options.cashtagClass || DEFAULT_CASHTAG_CLASS;\n  options.cashtagUrlBase = options.cashtagUrlBase || 'https://twitter.com/search?q=%24';\n  options.listClass = options.listClass || DEFAULT_LIST_CLASS;\n  options.usernameClass = options.usernameClass || DEFAULT_USERNAME_CLASS;\n  options.usernameUrlBase = options.usernameUrlBase || 'https://twitter.com/';\n  options.listUrlBase = options.listUrlBase || 'https://twitter.com/';\n  options.htmlAttrs = extractHtmlAttrsFromOptions(options);\n  options.invisibleTagAttrs = options.invisibleTagAttrs || \"style='position:absolute;left:-9999px;'\"; // remap url entities to hash\n\n  var urlEntities, i, len;\n\n  if (options.urlEntities) {\n    urlEntities = {};\n\n    for (i = 0, len = options.urlEntities.length; i < len; i++) {\n      urlEntities[options.urlEntities[i].url] = options.urlEntities[i];\n    }\n\n    options.urlEntities = urlEntities;\n  }\n\n  var result = '';\n  var beginIndex = 0; // sort entities by start index\n\n  entities.sort(function (a, b) {\n    return a.indices[0] - b.indices[0];\n  });\n  var nonEntity = options.htmlEscapeNonEntities ? htmlEscape : function (text) {\n    return text;\n  };\n\n  for (var i = 0; i < entities.length; i++) {\n    var entity = entities[i];\n    result += nonEntity(text.substring(beginIndex, entity.indices[0]));\n\n    if (entity.url) {\n      result += linkToUrl(entity, text, options);\n    } else if (entity.hashtag) {\n      result += linkToHashtag(entity, text, options);\n    } else if (entity.screenName) {\n      result += linkToMentionAndList(entity, text, options);\n    } else if (entity.cashtag) {\n      result += linkToCashtag(entity, text, options);\n    }\n\n    beginIndex = entity.indices[1];\n  }\n\n  result += nonEntity(text.substring(beginIndex, text.length));\n  return result;\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractEntitiesWithIndices from './extractEntitiesWithIndices';\nimport autoLinkEntities from './autoLinkEntities';\nexport default function (text, options) {\n  var entities = extractEntitiesWithIndices(text, {\n    extractUrlsWithoutProtocol: false\n  });\n  return autoLinkEntities(text, entities, options);\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport autoLinkEntities from './autoLinkEntities';\nimport extractCashtagsWithIndices from './extractCashtagsWithIndices';\nexport default function (text, options) {\n  var entities = extractCashtagsWithIndices(text);\n  return autoLinkEntities(text, entities, options);\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractHashtagsWithIndices from './extractHashtagsWithIndices';\nimport autoLinkEntities from './autoLinkEntities';\nexport default function (text, options) {\n  var entities = extractHashtagsWithIndices(text);\n  return autoLinkEntities(text, entities, options);\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport autoLinkEntities from './autoLinkEntities';\nimport extractUrlsWithIndices from './extractUrlsWithIndices';\nexport default function (text, options) {\n  var entities = extractUrlsWithIndices(text, {\n    extractUrlsWithoutProtocol: false\n  });\n  return autoLinkEntities(text, entities, options);\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractMentionsOrListsWithIndices from './extractMentionsOrListsWithIndices';\nimport autoLinkEntities from './autoLinkEntities';\nexport default function (text, options) {\n  var entities = extractMentionsOrListsWithIndices(text);\n  return autoLinkEntities(text, entities, options);\n}","import \"core-js/modules/es6.array.sort\";\n\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n\n/**\n * Copied from https://github.com/twitter/twitter-text/blob/master/js/twitter-text.js\n */\nvar convertUnicodeIndices = function convertUnicodeIndices(text, entities, indicesInUTF16) {\n  if (entities.length === 0) {\n    return;\n  }\n\n  var charIndex = 0;\n  var codePointIndex = 0; // sort entities by start index\n\n  entities.sort(function (a, b) {\n    return a.indices[0] - b.indices[0];\n  });\n  var entityIndex = 0;\n  var entity = entities[0];\n\n  while (charIndex < text.length) {\n    if (entity.indices[0] === (indicesInUTF16 ? charIndex : codePointIndex)) {\n      var len = entity.indices[1] - entity.indices[0];\n      entity.indices[0] = indicesInUTF16 ? codePointIndex : charIndex;\n      entity.indices[1] = entity.indices[0] + len;\n      entityIndex++;\n\n      if (entityIndex === entities.length) {\n        // no more entity\n        break;\n      }\n\n      entity = entities[entityIndex];\n    }\n\n    var c = text.charCodeAt(charIndex);\n\n    if (c >= 0xd800 && c <= 0xdbff && charIndex < text.length - 1) {\n      // Found high surrogate char\n      c = text.charCodeAt(charIndex + 1);\n\n      if (c >= 0xdc00 && c <= 0xdfff) {\n        // Found surrogate pair\n        charIndex++;\n      }\n    }\n\n    codePointIndex++;\n    charIndex++;\n  }\n};\n\nexport default convertUnicodeIndices;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport convertUnicodeIndices from './lib/convertUnicodeIndices';\nexport default function (text, entities) {\n  convertUnicodeIndices(text, entities, false);\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport autoLinkEntities from './autoLinkEntities';\nimport modifyIndicesFromUnicodeToUTF16 from './modifyIndicesFromUnicodeToUTF16';\nexport default function (text, json, options) {\n  // map JSON entity to twitter-text entity\n  if (json.user_mentions) {\n    for (var i = 0; i < json.user_mentions.length; i++) {\n      // this is a @mention\n      json.user_mentions[i].screenName = json.user_mentions[i].screen_name;\n    }\n  }\n\n  if (json.hashtags) {\n    for (var i = 0; i < json.hashtags.length; i++) {\n      // this is a #hashtag\n      json.hashtags[i].hashtag = json.hashtags[i].text;\n    }\n  }\n\n  if (json.symbols) {\n    for (var i = 0; i < json.symbols.length; i++) {\n      // this is a $CASH tag\n      json.symbols[i].cashtag = json.symbols[i].text;\n    }\n  } // concatenate all entities\n\n\n  var entities = [];\n\n  for (var key in json) {\n    entities = entities.concat(json[key]);\n  } // modify indices to UTF-16\n\n\n  modifyIndicesFromUnicodeToUTF16(text, entities);\n  return autoLinkEntities(text, entities, options);\n}","// This file is generated by scripts/buildConfig.js\nexport default {\n  version1: {\n    version: 1,\n    maxWeightedTweetLength: 140,\n    scale: 1,\n    defaultWeight: 1,\n    transformedURLLength: 23,\n    ranges: []\n  },\n  version2: {\n    version: 2,\n    maxWeightedTweetLength: 280,\n    scale: 100,\n    defaultWeight: 200,\n    transformedURLLength: 23,\n    ranges: [{\n      start: 0,\n      end: 4351,\n      weight: 100\n    }, {\n      start: 8192,\n      end: 8205,\n      weight: 100\n    }, {\n      start: 8208,\n      end: 8223,\n      weight: 100\n    }, {\n      start: 8242,\n      end: 8247,\n      weight: 100\n    }]\n  },\n  version3: {\n    version: 3,\n    maxWeightedTweetLength: 280,\n    scale: 100,\n    defaultWeight: 200,\n    emojiParsingEnabled: true,\n    transformedURLLength: 23,\n    ranges: [{\n      start: 0,\n      end: 4351,\n      weight: 100\n    }, {\n      start: 8192,\n      end: 8205,\n      weight: 100\n    }, {\n      start: 8208,\n      end: 8223,\n      weight: 100\n    }, {\n      start: 8242,\n      end: 8247,\n      weight: 100\n    }]\n  },\n  defaults: {\n    version: 3,\n    maxWeightedTweetLength: 280,\n    scale: 100,\n    defaultWeight: 200,\n    emojiParsingEnabled: true,\n    transformedURLLength: 23,\n    ranges: [{\n      start: 0,\n      end: 4351,\n      weight: 100\n    }, {\n      start: 8192,\n      end: 8205,\n      weight: 100\n    }, {\n      start: 8208,\n      end: 8223,\n      weight: 100\n    }, {\n      start: 8242,\n      end: 8247,\n      weight: 100\n    }]\n  }\n};","import \"core-js/modules/es6.array.sort\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nexport default function (text, entities, indicesInUTF16) {\n  if (entities.length == 0) {\n    return;\n  }\n\n  var charIndex = 0;\n  var codePointIndex = 0; // sort entities by start index\n\n  entities.sort(function (a, b) {\n    return a.indices[0] - b.indices[0];\n  });\n  var entityIndex = 0;\n  var entity = entities[0];\n\n  while (charIndex < text.length) {\n    if (entity.indices[0] == (indicesInUTF16 ? charIndex : codePointIndex)) {\n      var len = entity.indices[1] - entity.indices[0];\n      entity.indices[0] = indicesInUTF16 ? codePointIndex : charIndex;\n      entity.indices[1] = entity.indices[0] + len;\n      entityIndex++;\n\n      if (entityIndex == entities.length) {\n        // no more entity\n        break;\n      }\n\n      entity = entities[entityIndex];\n    }\n\n    var c = text.charCodeAt(charIndex);\n\n    if (c >= 0xd800 && c <= 0xdbff && charIndex < text.length - 1) {\n      // Found high surrogate char\n      c = text.charCodeAt(charIndex + 1);\n\n      if (c >= 0xdc00 && c <= 0xdfff) {\n        // Found surrogate pair\n        charIndex++;\n      }\n    }\n\n    codePointIndex++;\n    charIndex++;\n  }\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractCashtagsWithIndices from './extractCashtagsWithIndices';\nexport default function (text) {\n  var cashtagsOnly = [],\n      cashtagsWithIndices = extractCashtagsWithIndices(text);\n\n  for (var i = 0; i < cashtagsWithIndices.length; i++) {\n    cashtagsOnly.push(cashtagsWithIndices[i].cashtag);\n  }\n\n  return cashtagsOnly;\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractHashtagsWithIndices from './extractHashtagsWithIndices';\nexport default function (text) {\n  var hashtagsOnly = [];\n  var hashtagsWithIndices = extractHashtagsWithIndices(text);\n\n  for (var i = 0; i < hashtagsWithIndices.length; i++) {\n    hashtagsOnly.push(hashtagsWithIndices[i].hashtag);\n  }\n\n  return hashtagsOnly;\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractMentionsOrListsWithIndices from './extractMentionsOrListsWithIndices';\nexport default function (text) {\n  var mentions = [];\n  var mentionOrList;\n  var mentionsOrLists = extractMentionsOrListsWithIndices(text);\n\n  for (var i = 0; i < mentionsOrLists.length; i++) {\n    mentionOrList = mentionsOrLists[i];\n\n    if (mentionOrList.listSlug === '') {\n      mentions.push({\n        screenName: mentionOrList.screenName,\n        indices: mentionOrList.indices\n      });\n    }\n  }\n\n  return mentions;\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractMentionsWithIndices from './extractMentionsWithIndices';\nexport default function (text) {\n  var screenNamesOnly = [],\n      screenNamesWithIndices = extractMentionsWithIndices(text);\n\n  for (var i = 0; i < screenNamesWithIndices.length; i++) {\n    var screenName = screenNamesWithIndices[i].screenName;\n    screenNamesOnly.push(screenName);\n  }\n\n  return screenNamesOnly;\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport atSigns from './atSigns';\nimport regexSupplant from '../lib/regexSupplant';\nimport spaces from './spaces';\nvar validReply = regexSupplant(/^(?:#{spaces})*#{atSigns}([a-zA-Z0-9_]{1,20})/, {\n  atSigns: atSigns,\n  spaces: spaces\n});\nexport default validReply;","import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.match\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport endMentionMatch from './regexp/endMentionMatch';\nimport validReply from './regexp/validReply';\nexport default function (text) {\n  if (!text) {\n    return null;\n  }\n\n  var possibleScreenName = text.match(validReply);\n\n  if (!possibleScreenName || RegExp.rightContext.match(endMentionMatch)) {\n    return null;\n  }\n\n  return possibleScreenName[1];\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractUrlsWithIndices from './extractUrlsWithIndices';\nexport default function (text, options) {\n  var urlsOnly = [];\n  var urlsWithIndices = extractUrlsWithIndices(text, options);\n\n  for (var i = 0; i < urlsWithIndices.length; i++) {\n    urlsOnly.push(urlsWithIndices[i].url);\n  }\n\n  return urlsOnly;\n}","import \"core-js/modules/es6.array.is-array\";\n\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar getCharacterWeight = function getCharacterWeight(ch, options) {\n  var defaultWeight = options.defaultWeight,\n      ranges = options.ranges;\n  var weight = defaultWeight;\n  var chCodePoint = ch.charCodeAt(0);\n\n  if (Array.isArray(ranges)) {\n    for (var i = 0, length = ranges.length; i < length; i++) {\n      var currRange = ranges[i];\n\n      if (chCodePoint >= currRange.start && chCodePoint <= currRange.end) {\n        weight = currRange.weight;\n        break;\n      }\n    }\n  }\n\n  return weight;\n};\n\nexport default getCharacterWeight;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport convertUnicodeIndices from './lib/convertUnicodeIndices';\nexport default function (text, entities) {\n  convertUnicodeIndices(text, entities, true);\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport invalidCharsGroup from './invalidCharsGroup';\nimport regexSupplant from '../lib/regexSupplant';\nvar invalidChars = regexSupplant(/[#{invalidCharsGroup}]/, {\n  invalidCharsGroup: invalidCharsGroup\n});\nexport default invalidChars;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport invalidChars from './regexp/invalidChars';\nexport default function (text) {\n  return invalidChars.test(text);\n}","import \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport configs from './configs';\nimport extractUrlsWithIndices from './extractUrlsWithIndices';\nimport getCharacterWeight from './lib/getCharacterWeight';\nimport hasInvalidCharacters from './hasInvalidCharacters';\nimport modifyIndicesFromUTF16ToUnicode from './modifyIndicesFromUTF16ToUnicode'; // TODO: WEB-19861 Replace with public package after it is open sourced\n\nimport { parse as extractEmojiWithIndices } from 'twemoji-parser';\nimport urlHasHttps from './regexp/urlHasHttps';\n/**\n * [parseTweet description]\n * @param  {string} text tweet text to parse\n * @param  {Object} options config options to pass\n * @return {Object} Fields in response described below:\n *\n * Response fields:\n * weightedLength {int} the weighted length of tweet based on weights specified in the config\n * valid {bool} If tweet is valid\n * permillage {float} permillage of the tweet over the max length specified in config\n * validRangeStart {int} beginning of valid text\n * validRangeEnd {int} End index of valid part of the tweet text (inclusive) in utf16\n * displayRangeStart {int} beginning index of display text\n * displayRangeEnd {int} end index of display text (inclusive) in utf16\n */\n\nvar parseTweet = function parseTweet() {\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : configs.defaults;\n  var mergedOptions = Object.keys(options).length ? options : configs.defaults;\n  var defaultWeight = mergedOptions.defaultWeight,\n      emojiParsingEnabled = mergedOptions.emojiParsingEnabled,\n      scale = mergedOptions.scale,\n      maxWeightedTweetLength = mergedOptions.maxWeightedTweetLength,\n      transformedURLLength = mergedOptions.transformedURLLength;\n  var normalizedText = typeof String.prototype.normalize === 'function' ? text.normalize() : text; // Hash all entities by their startIndex for fast lookup\n\n  var urlEntitiesMap = transformEntitiesToHash(extractUrlsWithIndices(normalizedText));\n  var emojiEntitiesMap = emojiParsingEnabled ? transformEntitiesToHash(extractEmojiWithIndices(normalizedText)) : [];\n  var tweetLength = normalizedText.length;\n  var weightedLength = 0;\n  var validDisplayIndex = 0;\n  var valid = true; // Go through every character and calculate weight\n\n  for (var charIndex = 0; charIndex < tweetLength; charIndex++) {\n    // If a url begins at the specified index handle, add constant length\n    if (urlEntitiesMap[charIndex]) {\n      var _urlEntitiesMap$charI = urlEntitiesMap[charIndex],\n          url = _urlEntitiesMap$charI.url,\n          indices = _urlEntitiesMap$charI.indices;\n      weightedLength += transformedURLLength * scale;\n      charIndex += url.length - 1;\n    } else if (emojiParsingEnabled && emojiEntitiesMap[charIndex]) {\n      var _emojiEntitiesMap$cha = emojiEntitiesMap[charIndex],\n          emoji = _emojiEntitiesMap$cha.text,\n          _indices = _emojiEntitiesMap$cha.indices;\n      weightedLength += defaultWeight;\n      charIndex += emoji.length - 1;\n    } else {\n      charIndex += isSurrogatePair(normalizedText, charIndex) ? 1 : 0;\n      weightedLength += getCharacterWeight(normalizedText.charAt(charIndex), mergedOptions);\n    } // Only test for validity of character if it is still valid\n\n\n    if (valid) {\n      valid = !hasInvalidCharacters(normalizedText.substring(charIndex, charIndex + 1));\n    }\n\n    if (valid && weightedLength <= maxWeightedTweetLength * scale) {\n      validDisplayIndex = charIndex;\n    }\n  }\n\n  weightedLength = weightedLength / scale;\n  valid = valid && weightedLength > 0 && weightedLength <= maxWeightedTweetLength;\n  var permillage = Math.floor(weightedLength / maxWeightedTweetLength * 1000);\n  var normalizationOffset = text.length - normalizedText.length;\n  validDisplayIndex += normalizationOffset;\n  return {\n    weightedLength: weightedLength,\n    valid: valid,\n    permillage: permillage,\n    validRangeStart: 0,\n    validRangeEnd: validDisplayIndex,\n    displayRangeStart: 0,\n    displayRangeEnd: text.length > 0 ? text.length - 1 : 0\n  };\n};\n\nvar transformEntitiesToHash = function transformEntitiesToHash(entities) {\n  return entities.reduce(function (map, entity) {\n    map[entity.indices[0]] = entity;\n    return map;\n  }, {});\n};\n\nvar isSurrogatePair = function isSurrogatePair(text, cIndex) {\n  // Test if a character is the beginning of a surrogate pair\n  if (cIndex < text.length - 1) {\n    var c = text.charCodeAt(cIndex);\n    var cNext = text.charCodeAt(cIndex + 1);\n    return 0xd800 <= c && c <= 0xdbff && 0xdc00 <= cNext && cNext <= 0xdfff;\n  }\n\n  return false;\n};\n\nexport default parseTweet;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport configs from './configs';\nimport extractUrlsWithIndices from './extractUrlsWithIndices';\nimport getCharacterWeight from './lib/getCharacterWeight';\nimport modifyIndicesFromUTF16ToUnicode from './modifyIndicesFromUTF16ToUnicode';\nimport nonBmpCodePairs from './regexp/nonBmpCodePairs';\nimport parseTweet from './parseTweet';\nimport urlHasHttps from './regexp/urlHasHttps';\n\nvar getTweetLength = function getTweetLength(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : configs.defaults;\n  return parseTweet(text, options).weightedLength;\n};\n\nexport default getTweetLength;","import \"core-js/modules/es6.regexp.replace\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n\n/**\n * Copied from https://github.com/twitter/twitter-text/blob/master/js/twitter-text.js\n */\nimport nonBmpCodePairs from './regexp/nonBmpCodePairs';\nexport default function (text) {\n  return text.replace(nonBmpCodePairs, ' ').length;\n}","import \"core-js/modules/es6.regexp.split\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n// this essentially does text.split(/<|>/)\n// except that won't work in IE, where empty strings are ommitted\n// so \"<>\".split(/<|>/) => [] in IE, but is [\"\", \"\", \"\"] in all others\n// but \"<<\".split(\"<\") => [\"\", \"\", \"\"]\nexport default function (text) {\n  var firstSplits = text.split('<'),\n      secondSplits,\n      allSplits = [],\n      split;\n\n  for (var i = 0; i < firstSplits.length; i += 1) {\n    split = firstSplits[i];\n\n    if (!split) {\n      allSplits.push('');\n    } else {\n      secondSplits = split.split('>');\n\n      for (var j = 0; j < secondSplits.length; j += 1) {\n        allSplits.push(secondSplits[j]);\n      }\n    }\n  }\n\n  return allSplits;\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport splitTags from './splitTags';\nexport default function (text, hits, options) {\n  var defaultHighlightTag = 'em';\n  hits = hits || [];\n  options = options || {};\n\n  if (hits.length === 0) {\n    return text;\n  }\n\n  var tagName = options.tag || defaultHighlightTag,\n      tags = [\"<\".concat(tagName, \">\"), \"</\".concat(tagName, \">\")],\n      chunks = splitTags(text),\n      i,\n      j,\n      result = '',\n      chunkIndex = 0,\n      chunk = chunks[0],\n      prevChunksLen = 0,\n      chunkCursor = 0,\n      startInChunk = false,\n      chunkChars = chunk,\n      flatHits = [],\n      index,\n      hit,\n      tag,\n      placed,\n      hitSpot;\n\n  for (i = 0; i < hits.length; i += 1) {\n    for (j = 0; j < hits[i].length; j += 1) {\n      flatHits.push(hits[i][j]);\n    }\n  }\n\n  for (index = 0; index < flatHits.length; index += 1) {\n    hit = flatHits[index];\n    tag = tags[index % 2];\n    placed = false;\n\n    while (chunk != null && hit >= prevChunksLen + chunk.length) {\n      result += chunkChars.slice(chunkCursor);\n\n      if (startInChunk && hit === prevChunksLen + chunkChars.length) {\n        result += tag;\n        placed = true;\n      }\n\n      if (chunks[chunkIndex + 1]) {\n        result += \"<\".concat(chunks[chunkIndex + 1], \">\");\n      }\n\n      prevChunksLen += chunkChars.length;\n      chunkCursor = 0;\n      chunkIndex += 2;\n      chunk = chunks[chunkIndex];\n      chunkChars = chunk;\n      startInChunk = false;\n    }\n\n    if (!placed && chunk != null) {\n      hitSpot = hit - prevChunksLen;\n      result += chunkChars.slice(chunkCursor, hitSpot) + tag;\n      chunkCursor = hitSpot;\n\n      if (index % 2 === 0) {\n        startInChunk = true;\n      } else {\n        startInChunk = false;\n      }\n    } else if (!placed) {\n      placed = true;\n      result += tag;\n    }\n  }\n\n  if (chunk != null) {\n    if (chunkCursor < chunkChars.length) {\n      result += chunkChars.slice(chunkCursor);\n    }\n\n    for (index = chunkIndex + 1; index < chunks.length; index += 1) {\n      result += index % 2 === 0 ? chunks[index] : \"<\".concat(chunks[index], \">\");\n    }\n  }\n\n  return result;\n}","import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport configs from './configs';\nimport getTweetLength from './getTweetLength';\nimport hasInvalidCharacters from './hasInvalidCharacters';\nexport default function (text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : configs.defaults;\n\n  if (!text) {\n    return 'empty';\n  }\n\n  var mergedOptions = _objectSpread({}, configs.defaults, {}, options);\n\n  var maxLength = mergedOptions.maxWeightedTweetLength; // Determine max length independent of URL length\n\n  if (getTweetLength(text, mergedOptions) > maxLength) {\n    return 'too_long';\n  }\n\n  if (hasInvalidCharacters(text)) {\n    return 'invalid_characters';\n  }\n\n  return false;\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractHashtags from './extractHashtags';\nexport default function (hashtag) {\n  if (!hashtag) {\n    return false;\n  }\n\n  var extracted = extractHashtags(hashtag); // Should extract the hashtag minus the # sign, hence the .slice(1)\n\n  return extracted.length === 1 && extracted[0] === hashtag.slice(1);\n}","import \"core-js/modules/es6.regexp.match\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from './lib/regexSupplant';\nimport validMentionOrList from './regexp/validMentionOrList';\nvar VALID_LIST_RE = regexSupplant(/^#{validMentionOrList}$/, {\n  validMentionOrList: validMentionOrList\n});\nexport default function (usernameList) {\n  var match = usernameList.match(VALID_LIST_RE); // Must have matched and had nothing before or after\n\n  return !!(match && match[1] == '' && match[4]);\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport isInvalidTweet from './isInvalidTweet';\nexport default function (text, options) {\n  return !isInvalidTweet(text, options);\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validateUrlUnreserved = /[a-z\\u0400-\\u04FF0-9\\-._~]/i;\nexport default validateUrlUnreserved;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validateUrlPctEncoded = /(?:%[0-9a-f]{2})/i;\nexport default validateUrlPctEncoded;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validateUrlSubDelims = /[!$&'()*+,;=]/i;\nexport default validateUrlSubDelims;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validateUrlUnreserved from './validateUrlUnreserved';\nimport validateUrlPctEncoded from './validateUrlPctEncoded';\nimport validateUrlSubDelims from './validateUrlSubDelims';\nvar validateUrlUserinfo = regexSupplant('(?:' + '#{validateUrlUnreserved}|' + '#{validateUrlPctEncoded}|' + '#{validateUrlSubDelims}|' + ':' + ')*', {\n  validateUrlUnreserved: validateUrlUnreserved,\n  validateUrlPctEncoded: validateUrlPctEncoded,\n  validateUrlSubDelims: validateUrlSubDelims\n}, 'i');\nexport default validateUrlUserinfo;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validateUrlDomainSegment = /(?:[a-z0-9](?:[a-z0-9\\-]*[a-z0-9])?)/i;\nexport default validateUrlDomainSegment;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validateUrlDomainTld = /(?:[a-z](?:[a-z0-9\\-]*[a-z0-9])?)/i;\nexport default validateUrlDomainTld;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validateUrlSubDomainSegment = /(?:[a-z0-9](?:[a-z0-9_\\-]*[a-z0-9])?)/i;\nexport default validateUrlSubDomainSegment;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validateUrlDomainSegment from './validateUrlDomainSegment';\nimport validateUrlDomainTld from './validateUrlDomainTld';\nimport validateUrlSubDomainSegment from './validateUrlSubDomainSegment';\nvar validateUrlDomain = regexSupplant(/(?:(?:#{validateUrlSubDomainSegment}\\.)*(?:#{validateUrlDomainSegment}\\.)#{validateUrlDomainTld})/i, {\n  validateUrlSubDomainSegment: validateUrlSubDomainSegment,\n  validateUrlDomainSegment: validateUrlDomainSegment,\n  validateUrlDomainTld: validateUrlDomainTld\n});\nexport default validateUrlDomain;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validateUrlDecOctet = /(?:[0-9]|(?:[1-9][0-9])|(?:1[0-9]{2})|(?:2[0-4][0-9])|(?:25[0-5]))/i;\nexport default validateUrlDecOctet;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validateUrlDecOctet from './validateUrlDecOctet';\nvar validateUrlIpv4 = regexSupplant(/(?:#{validateUrlDecOctet}(?:\\.#{validateUrlDecOctet}){3})/i, {\n  validateUrlDecOctet: validateUrlDecOctet\n});\nexport default validateUrlIpv4;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n// Punting on real IPv6 validation for now\nvar validateUrlIpv6 = /(?:\\[[a-f0-9:\\.]+\\])/i;\nexport default validateUrlIpv6;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validateUrlIpv4 from './validateUrlIpv4';\nimport validateUrlIpv6 from './validateUrlIpv6'; // Punting on IPvFuture for now\n\nvar validateUrlIp = regexSupplant('(?:' + '#{validateUrlIpv4}|' + '#{validateUrlIpv6}' + ')', {\n  validateUrlIpv4: validateUrlIpv4,\n  validateUrlIpv6: validateUrlIpv6\n}, 'i');\nexport default validateUrlIp;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validateUrlDomain from './validateUrlDomain';\nimport validateUrlIp from './validateUrlIp';\nvar validateUrlHost = regexSupplant('(?:' + '#{validateUrlIp}|' + '#{validateUrlDomain}' + ')', {\n  validateUrlIp: validateUrlIp,\n  validateUrlDomain: validateUrlDomain\n}, 'i');\nexport default validateUrlHost;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validateUrlPort = /[0-9]{1,5}/;\nexport default validateUrlPort;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validateUrlUserinfo from './validateUrlUserinfo';\nimport validateUrlHost from './validateUrlHost';\nimport validateUrlPort from './validateUrlPort';\nvar validateUrlAuthority = regexSupplant( // $1 userinfo\n'(?:(#{validateUrlUserinfo})@)?' + // $2 host\n'(#{validateUrlHost})' + // $3 port\n'(?::(#{validateUrlPort}))?', {\n  validateUrlUserinfo: validateUrlUserinfo,\n  validateUrlHost: validateUrlHost,\n  validateUrlPort: validateUrlPort\n}, 'i');\nexport default validateUrlAuthority;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validateUrlUnreserved from './validateUrlUnreserved';\nimport validateUrlPctEncoded from './validateUrlPctEncoded';\nimport validateUrlSubDelims from './validateUrlSubDelims'; // These URL validation pattern strings are based on the ABNF from RFC 3986\n\nvar validateUrlPchar = regexSupplant('(?:' + '#{validateUrlUnreserved}|' + '#{validateUrlPctEncoded}|' + '#{validateUrlSubDelims}|' + '[:|@]' + ')', {\n  validateUrlUnreserved: validateUrlUnreserved,\n  validateUrlPctEncoded: validateUrlPctEncoded,\n  validateUrlSubDelims: validateUrlSubDelims\n}, 'i');\nexport default validateUrlPchar;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validateUrlPchar from './validateUrlPchar';\nvar validateUrlFragment = regexSupplant(/(#{validateUrlPchar}|\\/|\\?)*/i, {\n  validateUrlPchar: validateUrlPchar\n});\nexport default validateUrlFragment;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validateUrlPchar from './validateUrlPchar';\nvar validateUrlPath = regexSupplant(/(\\/#{validateUrlPchar}*)*/i, {\n  validateUrlPchar: validateUrlPchar\n});\nexport default validateUrlPath;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validateUrlPchar from './validateUrlPchar';\nvar validateUrlQuery = regexSupplant(/(#{validateUrlPchar}|\\/|\\?)*/i, {\n  validateUrlPchar: validateUrlPchar\n});\nexport default validateUrlQuery;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validateUrlScheme = /(?:[a-z][a-z0-9+\\-.]*)/i;\nexport default validateUrlScheme;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant'; // Modified version of RFC 3986 Appendix B\n\nvar validateUrlUnencoded = regexSupplant('^' + // Full URL\n'(?:' + '([^:/?#]+):\\\\/\\\\/' + // $1 Scheme\n')?' + '([^/?#]*)' + // $2 Authority\n'([^?#]*)' + // $3 Path\n'(?:' + '\\\\?([^#]*)' + // $4 Query\n')?' + '(?:' + '#(.*)' + // $5 Fragment\n')?$', 'i');\nexport default validateUrlUnencoded;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validateUrlUnicodeSubDomainSegment = /(?:(?:[a-z0-9]|[^\\u0000-\\u007f])(?:(?:[a-z0-9_\\-]|[^\\u0000-\\u007f])*(?:[a-z0-9]|[^\\u0000-\\u007f]))?)/i;\nexport default validateUrlUnicodeSubDomainSegment;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar validateUrlUnicodeDomainSegment = /(?:(?:[a-z0-9]|[^\\u0000-\\u007f])(?:(?:[a-z0-9\\-]|[^\\u0000-\\u007f])*(?:[a-z0-9]|[^\\u0000-\\u007f]))?)/i;\nexport default validateUrlUnicodeDomainSegment;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n// Unencoded internationalized domains - this doesn't check for invalid UTF-8 sequences\nvar validateUrlUnicodeDomainTld = /(?:(?:[a-z]|[^\\u0000-\\u007f])(?:(?:[a-z0-9\\-]|[^\\u0000-\\u007f])*(?:[a-z0-9]|[^\\u0000-\\u007f]))?)/i;\nexport default validateUrlUnicodeDomainTld;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validateUrlUnicodeSubDomainSegment from './validateUrlUnicodeSubDomainSegment';\nimport validateUrlUnicodeDomainSegment from './validateUrlUnicodeDomainSegment';\nimport validateUrlUnicodeDomainTld from './validateUrlUnicodeDomainTld'; // Unencoded internationalized domains - this doesn't check for invalid UTF-8 sequences\n\nvar validateUrlUnicodeDomain = regexSupplant(/(?:(?:#{validateUrlUnicodeSubDomainSegment}\\.)*(?:#{validateUrlUnicodeDomainSegment}\\.)#{validateUrlUnicodeDomainTld})/i, {\n  validateUrlUnicodeSubDomainSegment: validateUrlUnicodeSubDomainSegment,\n  validateUrlUnicodeDomainSegment: validateUrlUnicodeDomainSegment,\n  validateUrlUnicodeDomainTld: validateUrlUnicodeDomainTld\n});\nexport default validateUrlUnicodeDomain;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validateUrlIp from './validateUrlIp';\nimport validateUrlUnicodeDomain from './validateUrlUnicodeDomain';\nvar validateUrlUnicodeHost = regexSupplant('(?:' + '#{validateUrlIp}|' + '#{validateUrlUnicodeDomain}' + ')', {\n  validateUrlIp: validateUrlIp,\n  validateUrlUnicodeDomain: validateUrlUnicodeDomain\n}, 'i');\nexport default validateUrlUnicodeHost;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport regexSupplant from '../lib/regexSupplant';\nimport validateUrlUserinfo from './validateUrlUserinfo';\nimport validateUrlUnicodeHost from './validateUrlUnicodeHost';\nimport validateUrlPort from './validateUrlPort';\nvar validateUrlUnicodeAuthority = regexSupplant( // $1 userinfo\n'(?:(#{validateUrlUserinfo})@)?' + // $2 host\n'(#{validateUrlUnicodeHost})' + // $3 port\n'(?::(#{validateUrlPort}))?', {\n  validateUrlUserinfo: validateUrlUserinfo,\n  validateUrlUnicodeHost: validateUrlUnicodeHost,\n  validateUrlPort: validateUrlPort\n}, 'i');\nexport default validateUrlUnicodeAuthority;","import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.match\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport validateUrlAuthority from './regexp/validateUrlAuthority';\nimport validateUrlFragment from './regexp/validateUrlFragment';\nimport validateUrlPath from './regexp/validateUrlPath';\nimport validateUrlQuery from './regexp/validateUrlQuery';\nimport validateUrlScheme from './regexp/validateUrlScheme';\nimport validateUrlUnencoded from './regexp/validateUrlUnencoded';\nimport validateUrlUnicodeAuthority from './regexp/validateUrlUnicodeAuthority';\n\nfunction isValidMatch(string, regex, optional) {\n  if (!optional) {\n    // RegExp[\"$&\"] is the text of the last match\n    // blank strings are ok, but are falsy, so we check stringiness instead of truthiness\n    return typeof string === 'string' && string.match(regex) && RegExp['$&'] === string;\n  } // RegExp[\"$&\"] is the text of the last match\n\n\n  return !string || string.match(regex) && RegExp['$&'] === string;\n}\n\nexport default function (url, unicodeDomains, requireProtocol) {\n  if (unicodeDomains == null) {\n    unicodeDomains = true;\n  }\n\n  if (requireProtocol == null) {\n    requireProtocol = true;\n  }\n\n  if (!url) {\n    return false;\n  }\n\n  var urlParts = url.match(validateUrlUnencoded);\n\n  if (!urlParts || urlParts[0] !== url) {\n    return false;\n  }\n\n  var scheme = urlParts[1],\n      authority = urlParts[2],\n      path = urlParts[3],\n      query = urlParts[4],\n      fragment = urlParts[5];\n\n  if (!((!requireProtocol || isValidMatch(scheme, validateUrlScheme) && scheme.match(/^https?$/i)) && isValidMatch(path, validateUrlPath) && isValidMatch(query, validateUrlQuery, true) && isValidMatch(fragment, validateUrlFragment, true))) {\n    return false;\n  }\n\n  return unicodeDomains && isValidMatch(authority, validateUrlUnicodeAuthority) || !unicodeDomains && isValidMatch(authority, validateUrlAuthority);\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractMentions from './extractMentions';\nexport default function (username) {\n  if (!username) {\n    return false;\n  }\n\n  var extracted = extractMentions(username); // Should extract the username minus the @ sign, hence the .slice(1)\n\n  return extracted.length === 1 && extracted[0] === username.slice(1);\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nvar urlHasHttps = /^https:\\/\\//i;\nexport default urlHasHttps;","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport astralLetterAndMarks from './astralLetterAndMarks';\nimport astralNumerals from './astralNumerals';\nimport atSigns from './atSigns';\nimport bmpLetterAndMarks from './bmpLetterAndMarks';\nimport bmpNumerals from './bmpNumerals';\nimport cashtag from './cashtag';\nimport codePoint from './codePoint';\nimport cyrillicLettersAndMarks from './cyrillicLettersAndMarks';\nimport endHashtagMatch from './endHashtagMatch';\nimport endMentionMatch from './endMentionMatch';\nimport extractUrl from './extractUrl';\nimport hashSigns from './hashSigns';\nimport hashtagAlpha from './hashtagAlpha';\nimport hashtagAlphaNumeric from './hashtagAlphaNumeric';\nimport hashtagBoundary from './hashtagBoundary';\nimport hashtagSpecialChars from './hashtagSpecialChars';\nimport invalidChars from './invalidChars';\nimport invalidCharsGroup from './invalidCharsGroup';\nimport invalidDomainChars from './invalidDomainChars';\nimport invalidUrlWithoutProtocolPrecedingChars from './invalidUrlWithoutProtocolPrecedingChars';\nimport latinAccentChars from './latinAccentChars';\nimport nonBmpCodePairs from './nonBmpCodePairs';\nimport punct from './punct';\nimport rtlChars from './rtlChars';\nimport spaces from './spaces';\nimport spacesGroup from './spacesGroup';\nimport urlHasHttps from './urlHasHttps';\nimport urlHasProtocol from './urlHasProtocol';\nimport validAsciiDomain from './validAsciiDomain';\nimport validateUrlAuthority from './validateUrlAuthority';\nimport validateUrlDecOctet from './validateUrlDecOctet';\nimport validateUrlDomain from './validateUrlDomain';\nimport validateUrlDomainSegment from './validateUrlDomainSegment';\nimport validateUrlDomainTld from './validateUrlDomainTld';\nimport validateUrlFragment from './validateUrlFragment';\nimport validateUrlHost from './validateUrlHost';\nimport validateUrlIp from './validateUrlIp';\nimport validateUrlIpv4 from './validateUrlIpv4';\nimport validateUrlIpv6 from './validateUrlIpv6';\nimport validateUrlPath from './validateUrlPath';\nimport validateUrlPchar from './validateUrlPchar';\nimport validateUrlPctEncoded from './validateUrlPctEncoded';\nimport validateUrlPort from './validateUrlPort';\nimport validateUrlQuery from './validateUrlQuery';\nimport validateUrlScheme from './validateUrlScheme';\nimport validateUrlSubDelims from './validateUrlSubDelims';\nimport validateUrlSubDomainSegment from './validateUrlSubDomainSegment';\nimport validateUrlUnencoded from './validateUrlUnencoded';\nimport validateUrlUnicodeAuthority from './validateUrlUnicodeAuthority';\nimport validateUrlUnicodeDomain from './validateUrlUnicodeDomain';\nimport validateUrlUnicodeDomainSegment from './validateUrlUnicodeDomainSegment';\nimport validateUrlUnicodeDomainTld from './validateUrlUnicodeDomainTld';\nimport validateUrlUnicodeHost from './validateUrlUnicodeHost';\nimport validateUrlUnicodeSubDomainSegment from './validateUrlUnicodeSubDomainSegment';\nimport validateUrlUnreserved from './validateUrlUnreserved';\nimport validateUrlUserinfo from './validateUrlUserinfo';\nimport validCashtag from './validCashtag';\nimport validCCTLD from './validCCTLD';\nimport validDomain from './validDomain';\nimport validDomainChars from './validDomainChars';\nimport validDomainName from './validDomainName';\nimport validGeneralUrlPathChars from './validGeneralUrlPathChars';\nimport validGTLD from './validGTLD';\nimport validHashtag from './validHashtag';\nimport validMentionOrList from './validMentionOrList';\nimport validMentionPrecedingChars from './validMentionPrecedingChars';\nimport validPortNumber from './validPortNumber';\nimport validPunycode from './validPunycode';\nimport validReply from './validReply';\nimport validSubdomain from './validSubdomain';\nimport validTcoUrl from './validTcoUrl';\nimport validUrlBalancedParens from './validUrlBalancedParens';\nimport validUrlPath from './validUrlPath';\nimport validUrlPathEndingChars from './validUrlPathEndingChars';\nimport validUrlPrecedingChars from './validUrlPrecedingChars';\nimport validUrlQueryChars from './validUrlQueryChars';\nimport validUrlQueryEndingChars from './validUrlQueryEndingChars';\nexport default {\n  astralLetterAndMarks: astralLetterAndMarks,\n  astralNumerals: astralNumerals,\n  atSigns: atSigns,\n  bmpLetterAndMarks: bmpLetterAndMarks,\n  bmpNumerals: bmpNumerals,\n  cashtag: cashtag,\n  codePoint: codePoint,\n  cyrillicLettersAndMarks: cyrillicLettersAndMarks,\n  endHashtagMatch: endHashtagMatch,\n  endMentionMatch: endMentionMatch,\n  extractUrl: extractUrl,\n  hashSigns: hashSigns,\n  hashtagAlpha: hashtagAlpha,\n  hashtagAlphaNumeric: hashtagAlphaNumeric,\n  hashtagBoundary: hashtagBoundary,\n  hashtagSpecialChars: hashtagSpecialChars,\n  invalidChars: invalidChars,\n  invalidCharsGroup: invalidCharsGroup,\n  invalidDomainChars: invalidDomainChars,\n  invalidUrlWithoutProtocolPrecedingChars: invalidUrlWithoutProtocolPrecedingChars,\n  latinAccentChars: latinAccentChars,\n  nonBmpCodePairs: nonBmpCodePairs,\n  punct: punct,\n  rtlChars: rtlChars,\n  spaces: spaces,\n  spacesGroup: spacesGroup,\n  urlHasHttps: urlHasHttps,\n  urlHasProtocol: urlHasProtocol,\n  validAsciiDomain: validAsciiDomain,\n  validateUrlAuthority: validateUrlAuthority,\n  validateUrlDecOctet: validateUrlDecOctet,\n  validateUrlDomain: validateUrlDomain,\n  validateUrlDomainSegment: validateUrlDomainSegment,\n  validateUrlDomainTld: validateUrlDomainTld,\n  validateUrlFragment: validateUrlFragment,\n  validateUrlHost: validateUrlHost,\n  validateUrlIp: validateUrlIp,\n  validateUrlIpv4: validateUrlIpv4,\n  validateUrlIpv6: validateUrlIpv6,\n  validateUrlPath: validateUrlPath,\n  validateUrlPchar: validateUrlPchar,\n  validateUrlPctEncoded: validateUrlPctEncoded,\n  validateUrlPort: validateUrlPort,\n  validateUrlQuery: validateUrlQuery,\n  validateUrlScheme: validateUrlScheme,\n  validateUrlSubDelims: validateUrlSubDelims,\n  validateUrlSubDomainSegment: validateUrlSubDomainSegment,\n  validateUrlUnencoded: validateUrlUnencoded,\n  validateUrlUnicodeAuthority: validateUrlUnicodeAuthority,\n  validateUrlUnicodeDomain: validateUrlUnicodeDomain,\n  validateUrlUnicodeDomainSegment: validateUrlUnicodeDomainSegment,\n  validateUrlUnicodeDomainTld: validateUrlUnicodeDomainTld,\n  validateUrlUnicodeHost: validateUrlUnicodeHost,\n  validateUrlUnicodeSubDomainSegment: validateUrlUnicodeSubDomainSegment,\n  validateUrlUnreserved: validateUrlUnreserved,\n  validateUrlUserinfo: validateUrlUserinfo,\n  validCashtag: validCashtag,\n  validCCTLD: validCCTLD,\n  validDomain: validDomain,\n  validDomainChars: validDomainChars,\n  validDomainName: validDomainName,\n  validGeneralUrlPathChars: validGeneralUrlPathChars,\n  validGTLD: validGTLD,\n  validHashtag: validHashtag,\n  validMentionOrList: validMentionOrList,\n  validMentionPrecedingChars: validMentionPrecedingChars,\n  validPortNumber: validPortNumber,\n  validPunycode: validPunycode,\n  validReply: validReply,\n  validSubdomain: validSubdomain,\n  validTcoUrl: validTcoUrl,\n  validUrlBalancedParens: validUrlBalancedParens,\n  validUrlPath: validUrlPath,\n  validUrlPathEndingChars: validUrlPathEndingChars,\n  validUrlPrecedingChars: validUrlPrecedingChars,\n  validUrlQueryChars: validUrlQueryChars,\n  validUrlQueryEndingChars: validUrlQueryEndingChars\n};","import \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport getUnicodeTextLength from './getUnicodeTextLength';\nexport default function standardizeIndices(text, startIndex, endIndex) {\n  var totalUnicodeTextLength = getUnicodeTextLength(text);\n  var encodingDiff = text.length - totalUnicodeTextLength;\n\n  if (encodingDiff > 0) {\n    // split the string into codepoints which will map to the API's indices\n    var byCodePair = Array.from(text);\n    var beforeText = startIndex === 0 ? '' : byCodePair.slice(0, startIndex).join('');\n    var actualText = byCodePair.slice(startIndex, endIndex).join('');\n    return [beforeText.length, beforeText.length + actualText.length];\n  }\n\n  return [startIndex, endIndex];\n}","// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport autoLink from './autoLink';\nimport autoLinkCashtags from './autoLinkCashtags';\nimport autoLinkEntities from './autoLinkEntities';\nimport autoLinkHashtags from './autoLinkHashtags';\nimport autoLinkUrlsCustom from './autoLinkUrlsCustom';\nimport autoLinkUsernamesOrLists from './autoLinkUsernamesOrLists';\nimport autoLinkWithJSON from './autoLinkWithJSON';\nimport configs from './configs';\nimport convertUnicodeIndices from './convertUnicodeIndices';\nimport extractCashtags from './extractCashtags';\nimport extractCashtagsWithIndices from './extractCashtagsWithIndices';\nimport extractEntitiesWithIndices from './extractEntitiesWithIndices';\nimport extractHashtags from './extractHashtags';\nimport extractHashtagsWithIndices from './extractHashtagsWithIndices';\nimport extractHtmlAttrsFromOptions from './extractHtmlAttrsFromOptions';\nimport extractMentions from './extractMentions';\nimport extractMentionsOrListsWithIndices from './extractMentionsOrListsWithIndices';\nimport extractMentionsWithIndices from './extractMentionsWithIndices';\nimport extractReplies from './extractReplies';\nimport extractUrls from './extractUrls';\nimport extractUrlsWithIndices from './extractUrlsWithIndices';\nimport getTweetLength from './getTweetLength';\nimport getUnicodeTextLength from './getUnicodeTextLength';\nimport hasInvalidCharacters from './hasInvalidCharacters';\nimport hitHighlight from './hitHighlight';\nimport htmlEscape from './htmlEscape';\nimport isInvalidTweet from './isInvalidTweet';\nimport isValidHashtag from './isValidHashtag';\nimport isValidList from './isValidList';\nimport isValidTweetText from './isValidTweetText';\nimport isValidUrl from './isValidUrl';\nimport isValidUsername from './isValidUsername';\nimport linkTextWithEntity from './linkTextWithEntity';\nimport linkToCashtag from './linkToCashtag';\nimport linkToHashtag from './linkToHashtag';\nimport linkToMentionAndList from './linkToMentionAndList';\nimport linkToText from './linkToText';\nimport linkToTextWithSymbol from './linkToTextWithSymbol';\nimport linkToUrl from './linkToUrl';\nimport modifyIndicesFromUTF16ToUnicode from './modifyIndicesFromUTF16ToUnicode';\nimport modifyIndicesFromUnicodeToUTF16 from './modifyIndicesFromUnicodeToUTF16';\nimport regexen from './regexp/index';\nimport removeOverlappingEntities from './removeOverlappingEntities';\nimport parseTweet from './parseTweet';\nimport splitTags from './splitTags';\nimport standardizeIndices from './standardizeIndices';\nimport tagAttrs from './tagAttrs';\nexport default {\n  autoLink: autoLink,\n  autoLinkCashtags: autoLinkCashtags,\n  autoLinkEntities: autoLinkEntities,\n  autoLinkHashtags: autoLinkHashtags,\n  autoLinkUrlsCustom: autoLinkUrlsCustom,\n  autoLinkUsernamesOrLists: autoLinkUsernamesOrLists,\n  autoLinkWithJSON: autoLinkWithJSON,\n  configs: configs,\n  convertUnicodeIndices: convertUnicodeIndices,\n  extractCashtags: extractCashtags,\n  extractCashtagsWithIndices: extractCashtagsWithIndices,\n  extractEntitiesWithIndices: extractEntitiesWithIndices,\n  extractHashtags: extractHashtags,\n  extractHashtagsWithIndices: extractHashtagsWithIndices,\n  extractHtmlAttrsFromOptions: extractHtmlAttrsFromOptions,\n  extractMentions: extractMentions,\n  extractMentionsOrListsWithIndices: extractMentionsOrListsWithIndices,\n  extractMentionsWithIndices: extractMentionsWithIndices,\n  extractReplies: extractReplies,\n  extractUrls: extractUrls,\n  extractUrlsWithIndices: extractUrlsWithIndices,\n  getTweetLength: getTweetLength,\n  getUnicodeTextLength: getUnicodeTextLength,\n  hasInvalidCharacters: hasInvalidCharacters,\n  hitHighlight: hitHighlight,\n  htmlEscape: htmlEscape,\n  isInvalidTweet: isInvalidTweet,\n  isValidHashtag: isValidHashtag,\n  isValidList: isValidList,\n  isValidTweetText: isValidTweetText,\n  isValidUrl: isValidUrl,\n  isValidUsername: isValidUsername,\n  linkTextWithEntity: linkTextWithEntity,\n  linkToCashtag: linkToCashtag,\n  linkToHashtag: linkToHashtag,\n  linkToMentionAndList: linkToMentionAndList,\n  linkToText: linkToText,\n  linkToTextWithSymbol: linkToTextWithSymbol,\n  linkToUrl: linkToUrl,\n  modifyIndicesFromUTF16ToUnicode: modifyIndicesFromUTF16ToUnicode,\n  modifyIndicesFromUnicodeToUTF16: modifyIndicesFromUnicodeToUTF16,\n  regexen: regexen,\n  removeOverlappingEntities: removeOverlappingEntities,\n  parseTweet: parseTweet,\n  splitTags: splitTags,\n  standardizeIndices: standardizeIndices,\n  tagAttrs: tagAttrs\n};"],"names":[],"sourceRoot":"","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131]}