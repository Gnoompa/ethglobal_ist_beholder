{"version":3,"file":"bundled/chunk.8958.js","mappings":"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;AACA;AACA;AACA,aAAa,kCAAoB,uBAAuB;AACxD,KAAK;AACL,aAAa,kCAAoB,mBAAmB;AACpD,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA,CAAC,KAAK,8BAAQ;AACd,SAAS,kCAAoB,uBAAuB,OAAO,kCAAoB,mBAAmB;AAClG;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH,QAAQ,kCAAoB,SAAS;AACrC;AACA;AACA,CAAC;AACD,SAAS,kCAAoB,uBAAuB,OAAO,kCAAoB,mBAAmB;AAClG;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD,SAAS,kCAAoB,uBAAuB,OAAO,kCAAoB,mBAAmB;AAClG;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD,sCAAsC,0BAAM;AAC5C;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,+DAA+D,6BAAU,6BAA6B;AACtG;AACA,CAAC;AACD;AACA;AACA,CAAC,KAAK,8BAAQ;AACd;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD,mCAAmC,gBAAgB;AACnD,gBAAgB,gCAAa;AAC7B;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,gBAAgB,+CAA6B;;AAE7C,aAAa,wBAAK;AAClB,8FAA8F,mBAAI,CAAC,+BAAgB;AACnH;AACA;AACA;AACA,GAAG;;AAEH,qBAAqB,8BAAQ,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,+DAA+D,mBAAI;AACnE;AACA;AACA;AACA,GAAG;AACH,sBAAsB,oBAAK,oBAAoB,8BAAQ;AACvD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,MAAqC,GAAG,CAuEvC,CAAC;AACF,kEAAe,aAAa;;;;;;;;AC3Of;;AAEb,sBAAsB,mBAAO,CAAC,KAAkB;;AAEhD;AACA;AACA;AACA;AACA;;AAEA,2CAA2C,IAAI;;AAE/C;AACA;AACA,4BAA4B,UAAU;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;AChH6B,2DAA2D,cAAc,OAAO,0CAA0C,aAAa,kCAAkC,oBAAoB,sDAAC,mFAAmF,0BAA0B,OAAO,+CAA+C,+BAA+B,qBAAqB,yBAAyB,2BAA2B,qEAAqE,kEAAkE,SAAS,wFAAwF,gBAAgB,eAAe,8BAA8B,oDAAoD,SAAS,uCAAuC,mCAAmC,iGAAiG,qDAAqD,OAAO,oBAAoB,QAAQ,iCAAiC,0BAA0B,uBAAuB,qBAAqB,QAAQ,8CAA8C,EAAE,iCAAiC,MAAM,8BAA8B,KAAK,+EAA+E,MAAM,WAAW,uDAAuD,kIAAkI,gDAAgD,sKAAsK,yBAAyB,oDAAoD,2DAA2D,sBAAsB,GAAG,IAAI,uBAAuB,8BAA8B,iBAAiB,OAAO,iEAAe,CAAC,EAAC;;;;;;;;;ACCtiE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;;;;;;;ACtCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpBA;AAC+B;;AAE/B,wCAAwC,gDAAmB;AAC3D,6BAA6B,6CAAgB;AAC7C;;AAE+C;AAC/C","sources":["webpack://mask-network/./packages/plugin-infra/src/dom/context.ts","webpack://mask-network/./packages/plugin-infra/src/manager/site-adaptor.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/context.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useAllPersonas.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useCurrentVisitingIdentity.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useLastRecognizedIdentity.ts","webpack://mask-network/./packages/plugins/NextID/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/NextID/src/components/BindPanelUI.tsx","webpack://mask-network/./packages/plugins/NextID/src/hooks/useBindPayload.ts","webpack://mask-network/./packages/plugins/NextID/src/hooks/usePersonaSign.ts","webpack://mask-network/./packages/plugins/NextID/src/hooks/useWalletSign.ts","webpack://mask-network/./packages/plugins/NextID/src/components/BindDialog.tsx","webpack://mask-network/./packages/plugins/NextID/src/components/Actions/index.tsx","webpack://mask-network/./packages/plugins/NextID/src/components/NextIdPage.tsx","webpack://mask-network/./packages/plugins/NextID/src/SiteAdaptor/index.tsx","webpack://mask-network/./packages/shared-base-ui/src/components/ErrorBoundary/context.tsx","webpack://mask-network/./packages/shared-base/src/SingletonModal/index.ts","webpack://mask-network/./packages/shared-base/src/helpers/personas.ts","webpack://mask-network/./packages/shared/src/UI/components/CopyButton/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/ImageIcon/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/LoadingStatus/index.tsx","webpack://mask-network/./packages/shared/src/hooks/useConnectedPersonas.ts","webpack://mask-network/./packages/shared/src/hooks/useCurrentPersona.ts","webpack://mask-network/./packages/shared/src/hooks/useNextIDVerify.ts","webpack://mask-network/./packages/shared/src/UI/components/PersonaSelectPanel/PersonaItemUI.tsx","webpack://mask-network/./packages/shared/src/UI/components/PersonaSelectPanel/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/PluginCardFrame/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/PluginEnableBoundary/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/ReloadStatus/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletIcon/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useClearTransactionsCallback.ts","webpack://mask-network/./packages/web3-hooks/base/src/useRemoveTransaction.ts","webpack://mask-network/./packages/web3-shared/evm/src/helpers/getContractOwnerDomain.ts","webpack://mask-network/./packages/shared/src/UI/components/WalletStatusBox/TransactionList.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletStatusBox/usePendingTransactions.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletStatusBox/index.tsx","webpack://mask-network/./packages/shared/src/UI/modals/modals.ts","webpack://mask-network/./packages/shared/src/UI/wallet/FormattedAddress.tsx","webpack://mask-network/./packages/shared/src/constants.tsx","webpack://mask-network/./packages/shared/src/hooks/useCurrentPersonaConnectStatus.ts","webpack://mask-network/./packages/shared/src/hooks/usePersonaProofs.ts","webpack://mask-network/./packages/theme/src/CSSVariables/constants.ts","webpack://mask-network/./packages/theme/src/CSSVariables/vars.ts","webpack://mask-network/./packages/theme/src/Components/ActionButton/index.tsx","webpack://mask-network/./packages/theme/src/Components/Dialogs/DialogStack.tsx","webpack://mask-network/./packages/theme/src/Components/LoadingBase/index.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Info.js","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Warning.js","webpack://mask-network/./packages/theme/src/Components/Snackbar/index.tsx","webpack://mask-network/./packages/theme/src/Components/WrappedComponents/ShadowRootTooltip.ts","webpack://mask-network/./packages/theme/src/ShadowRoot/Portal.tsx","webpack://mask-network/./packages/theme/src/ShadowRoot/ShadowRootSetup.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useBalance.ts","webpack://mask-network/./packages/web3-hooks/base/src/useChainIdValid.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleToken.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNativeToken.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNativeTokenAddress.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNetwork.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNetworkDescriptor.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNetworks.ts","webpack://mask-network/./packages/web3-hooks/base/src/useProviderDescriptor.ts","webpack://mask-network/./packages/web3-hooks/base/src/useRecentTransactions.ts","webpack://mask-network/./packages/web3-hooks/base/src/useReverseAddress.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWallet.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWallets.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWeb3Connection.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWeb3Hub.ts","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Done.js","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","webpack://mask-network/./node_modules/.pnpm/@mui+lab@5.0.0-alpha.102_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+material@5.10.8__fhlpvrxljs34dqlglckbh3kya4/node_modules/@mui/lab/LoadingButton/LoadingButton.js","webpack://mask-network/./node_modules/.pnpm/copy-to-clipboard@3.3.1/node_modules/copy-to-clipboard/index.js","webpack://mask-network/./node_modules/.pnpm/html-parse-stringify@3.0.1/node_modules/html-parse-stringify/dist/html-parse-stringify.module.js","webpack://mask-network/./node_modules/.pnpm/toggle-selection@1.0.6/node_modules/toggle-selection/index.js","webpack://mask-network/./node_modules/.pnpm/void-elements@3.1.0/node_modules/void-elements/index.js","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/isRestoring.mjs"],"sourcesContent":["// This file will be virtualized in the future.\n// Currently all plugins access the same value, but we can virtualize them in the future.\n\nimport type {\n    DashboardRoutes,\n    ECKeyIdentifier,\n    NextIDPlatform,\n    PersonaIdentifier,\n    PersonaInformation,\n    PopupRoutes,\n    PopupRoutesParamsMap,\n    ProfileIdentifier,\n    SignType,\n    SocialIdentity,\n} from '@masknet/shared-base'\nimport type { Subscription } from 'use-subscription'\nimport type { IdentityResolved } from '../types.js'\nimport type { LinkedProfileDetails } from '@masknet/public-api'\n\nexport interface __UIContext__ {\n    allPersonas: Subscription<readonly PersonaInformation[]>\n    currentPersona: Subscription<PersonaIdentifier | undefined>\n    queryPersonaAvatar(\n        identifiers: readonly PersonaIdentifier[],\n    ): Promise<Map<ProfileIdentifier | PersonaIdentifier, string | undefined>>\n    queryPersonaAvatar(identifiers: undefined | PersonaIdentifier): Promise<string | undefined>\n    querySocialIdentity: (\n        platform: NextIDPlatform,\n        identity: IdentityResolved | undefined,\n    ) => Promise<SocialIdentity | undefined>\n    // DO NOT add <T> to this function, you do not test if it is T right?\n    // (e.g. receive a function to check it validate: (x: unknown) => x is T)\n    // fetchJSON<T>(validate: (x: unknown) => x is T, input: RequestInfo | URL, init?: RequestInit): Promise<T>\n    fetchJSON(input: RequestInfo | URL, init?: RequestInit): Promise<unknown>\n    queryPersonaByProfile: (id: ProfileIdentifier) => Promise<PersonaInformation | undefined>\n    /** Open Dashboard with a new window */\n    openDashboard(route?: DashboardRoutes, search?: string): Promise<void>\n    /** Open popup window */\n    openPopupWindow<T extends PopupRoutes>(\n        route: T,\n        params: T extends keyof PopupRoutesParamsMap ? PopupRoutesParamsMap[T] : undefined,\n        evenWhenWalletLocked?: boolean,\n    ): Promise<void>\n    /** Sign a message with persona (w or w/o popups) */\n    signWithPersona(type: SignType, message: unknown, identifier?: ECKeyIdentifier, silent?: boolean): Promise<string>\n    hasPaymentPassword(): Promise<boolean>\n    createPersona: () => void\n    setCurrentPersonaIdentifier: ((x?: PersonaIdentifier) => Promise<void>) | undefined\n    attachProfile:\n        | ((\n              source: ProfileIdentifier,\n              target: ProfileIdentifier | PersonaIdentifier,\n              data: LinkedProfileDetails,\n          ) => Promise<void>)\n        | undefined\n    setPluginMinimalModeEnabled: ((id: string, enabled: boolean) => Promise<void>) | undefined\n    hasHostPermission: ((origins: readonly string[]) => Promise<boolean>) | undefined\n    requestHostPermission: ((origins: readonly string[]) => Promise<boolean>) | undefined\n}\nexport let allPersonas: __UIContext__['allPersonas']\nexport let currentPersona: __UIContext__['currentPersona']\nexport let queryPersonaAvatar: __UIContext__['queryPersonaAvatar']\nexport let querySocialIdentity: __UIContext__['querySocialIdentity']\nexport let fetchJSON: __UIContext__['fetchJSON']\nexport let queryPersonaByProfile: __UIContext__['queryPersonaByProfile']\nexport let openDashboard: __UIContext__['openDashboard']\nexport let openPopupWindow: __UIContext__['openPopupWindow']\nexport let signWithPersona: __UIContext__['signWithPersona']\nexport let hasPaymentPassword: __UIContext__['hasPaymentPassword']\nexport let createPersona: __UIContext__['createPersona']\nexport let setCurrentPersonaIdentifier: __UIContext__['setCurrentPersonaIdentifier']\nexport let attachProfile: __UIContext__['attachProfile']\nexport let setPluginMinimalModeEnabled: __UIContext__['setPluginMinimalModeEnabled']\nexport let hasHostPermission: __UIContext__['hasHostPermission']\nexport let requestHostPermission: __UIContext__['requestHostPermission']\n\nexport function __setUIContext__(value: __UIContext__) {\n    ;({\n        allPersonas,\n        currentPersona,\n        queryPersonaAvatar,\n        querySocialIdentity,\n        fetchJSON,\n        queryPersonaByProfile,\n        openDashboard,\n        openPopupWindow,\n        signWithPersona,\n        hasPaymentPassword,\n        createPersona,\n        setCurrentPersonaIdentifier,\n        attachProfile,\n        setPluginMinimalModeEnabled,\n        hasHostPermission,\n        requestHostPermission,\n    } = value)\n}\n","import { useMemo } from 'react'\nimport { isEqual } from 'lodash-es'\nimport { unreachable } from '@masknet/kit'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { type EnhanceableSite, ValueRefWithReady } from '@masknet/shared-base'\nimport { createManager } from './manage.js'\nimport { getPluginDefine } from './store.js'\nimport type { Plugin } from '../types.js'\n\nconst { events, activated, startDaemon, minimalMode } = createManager(\n    (def) => def.SiteAdaptor,\n    createManager.NoManagedContext,\n)\nconst activatedSub = new ValueRefWithReady<Plugin.SiteAdaptor.Definition[]>([], isEqual)\nevents.on('activateChanged', () => (activatedSub.value = [...activated.plugins]))\n\nconst minimalModeSub = new ValueRefWithReady<string[]>([], isEqual)\nevents.on('minimalModeChanged', () => (minimalModeSub.value = [...minimalMode]))\n\nexport function useActivatedPluginsSiteAdaptor(minimalModeEqualsTo: 'any' | boolean) {\n    const minimalMode = useValueRef(minimalModeSub)\n    const result = useValueRef(activatedSub)\n    return useMemo(() => {\n        if (minimalModeEqualsTo === 'any') return result\n        else if (minimalModeEqualsTo === true) return result.filter((x) => minimalMode.includes(x.ID))\n        else if (minimalModeEqualsTo === false) return result.filter((x) => !minimalMode.includes(x.ID))\n        unreachable(minimalModeEqualsTo)\n    }, [result, minimalMode, minimalModeEqualsTo])\n}\nuseActivatedPluginsSiteAdaptor.visibility = {\n    useMinimalMode: useActivatedPluginsSiteAdaptor.bind(null, true),\n    useNotMinimalMode: useActivatedPluginsSiteAdaptor.bind(null, false),\n    useAnyMode: useActivatedPluginsSiteAdaptor.bind(null, 'any'),\n}\n\nexport function useIsMinimalMode(pluginID: string) {\n    return useValueRef(minimalModeSub).includes(pluginID)\n}\n\n/**\n *\n * @param pluginID Get the plugin ID\n * @param visibility Should invisible plugin included?\n * @returns\n */\nexport function useActivatedPluginSiteAdaptor(pluginID: string, minimalModeEqualsTo: 'any' | boolean) {\n    const plugins = useActivatedPluginsSiteAdaptor(minimalModeEqualsTo)\n    const minimalMode = useValueRef(minimalModeSub)\n\n    return useMemo(() => {\n        const result = plugins.find((x) => x.ID === pluginID)\n        if (!result) return result\n        if (minimalModeEqualsTo === 'any') return result\n        else if (minimalModeEqualsTo === true) {\n            if (minimalMode.includes(result.ID)) return result\n            return undefined\n        } else if (minimalModeEqualsTo === false) {\n            if (minimalMode.includes(result.ID)) return undefined\n            return result\n        }\n        unreachable(minimalModeEqualsTo)\n    }, [pluginID, plugins, minimalMode, minimalModeEqualsTo])\n}\n\nexport function startPluginSiteAdaptor(\n    currentNetwork: EnhanceableSite,\n    host: Plugin.__Host.Host<Plugin.SiteAdaptor.Definition, Plugin.SiteAdaptor.SiteAdaptorContext>,\n) {\n    startDaemon(host, (id) => {\n        const def = getPluginDefine(id)\n        if (!def) return false\n\n        const status = def.enableRequirement.supports.sites[currentNetwork]\n        if (def.enableRequirement.supports.type === 'opt-in' && status !== true) return false\n        if (def.enableRequirement.supports.type === 'opt-out' && status === true) return false\n        return true\n    })\n}\n","// This file will be virtualized in the future.\n// Currently all plugins access the same value, but we can virtualize them in the future.\n\nimport type { Subscription } from 'use-subscription'\nimport type { IdentityResolved } from '../types.js'\nimport type { NextIDPlatform, PersonaIdentifier, PostIdentifier } from '@masknet/shared-base'\n\nexport interface __SiteAdaptorContext__ {\n    lastRecognizedProfile: Subscription<IdentityResolved | undefined>\n    currentVisitingProfile: Subscription<IdentityResolved | undefined>\n    currentNextIDPlatform: NextIDPlatform | undefined\n    currentPersonaIdentifier: Subscription<PersonaIdentifier | undefined>\n    getPostURL: (identifier: PostIdentifier) => URL | null\n    share: undefined | ((text: string) => void)\n    getUserIdentity: ((useId: string) => Promise<IdentityResolved | undefined>) | undefined\n    getPostIdFromNewPostToast: (() => string) | undefined\n    postMessage: ((text: string, options?: any) => Promise<void>) | undefined\n    getSearchedKeyword: (() => string) | undefined\n    connectPersona: () => Promise<void>\n}\nexport let lastRecognizedProfile: __SiteAdaptorContext__['lastRecognizedProfile']\nexport let currentVisitingProfile: __SiteAdaptorContext__['currentVisitingProfile']\nexport let currentNextIDPlatform: NextIDPlatform | undefined\nexport let currentPersonaIdentifier: __SiteAdaptorContext__['currentPersonaIdentifier']\nexport let getPostURL: __SiteAdaptorContext__['getPostURL']\nexport let share: __SiteAdaptorContext__['share']\nexport let getUserIdentity: __SiteAdaptorContext__['getUserIdentity']\nexport let getPostIdFromNewPostToast: __SiteAdaptorContext__['getPostIdFromNewPostToast']\nexport let postMessage: __SiteAdaptorContext__['postMessage']\nexport let getSearchedKeyword: __SiteAdaptorContext__['getSearchedKeyword']\nexport let connectPersona: __SiteAdaptorContext__['connectPersona']\nexport function __setSiteAdaptorContext__(value: __SiteAdaptorContext__) {\n    ;({\n        lastRecognizedProfile,\n        currentVisitingProfile,\n        currentNextIDPlatform,\n        currentPersonaIdentifier,\n        getPostURL,\n        share,\n        getUserIdentity,\n        getPostIdFromNewPostToast,\n        postMessage,\n        getSearchedKeyword,\n        connectPersona,\n    } = value)\n}\n","import { useSubscription } from 'use-subscription'\nimport { allPersonas } from '../dom/context.js'\n\nexport function useAllPersonas() {\n    return useSubscription(allPersonas)\n}\n","import { useSubscription } from 'use-subscription'\nimport { currentVisitingProfile } from './context.js'\n\nexport function useCurrentVisitingIdentity() {\n    return useSubscription(currentVisitingProfile)\n}\n","import { useSubscription } from 'use-subscription'\nimport { UNDEFINED } from '@masknet/shared-base'\nimport { lastRecognizedProfile } from './context.js'\n\nexport function useLastRecognizedIdentity() {\n    return useSubscription(lastRecognizedProfile ?? UNDEFINED)\n}\n","// @ts-nocheck\n/* eslint-disable */\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useNextID_Trans(): {\n    /**\n      * `Wallet`\n      */\n    wallet(): string;\n    /**\n      * `Persona`\n      */\n    persona(): string;\n    /**\n      * `Unsupported Network`\n      */\n    unsupported_network(): string;\n    /**\n      * `Wallets not found.`\n      */\n    connect_wallet__other_user_tip_intro(): string;\n    /**\n      * `1. Switch to the user’s tweets page and back.`\n      */\n    connect_wallet_other_user_tip1(): string;\n    /**\n      * `2. Invite the user to install the Mask extension and post a verification tweet.`\n      */\n    connect_wallet_other_user_tip2(): string;\n    /**\n      * `The user might have not connected wallets yet. You can try as following:`\n      */\n    connect_wallet_other_user_instruction(): string;\n    /**\n      * `In this Web3 section, you can show your address for receiving tips, your NFT collection, donation records, and other on-chain information to friends who have installed Mask Network.`\n      */\n    connect_wallet_tip(): string;\n    /**\n      * `Verify your wallet here.`\n      */\n    verify_wallet_intro(): string;\n    /**\n      * `In the Web3 tab, you can show your wallet addresses for receiving tips, NFT collections, donation records, and other on-chain feeds to friends who have also installed the Mask extension.`\n      */\n    verify_wallet(): string;\n    /**\n      * `Verify your Twitter ID here.`\n      */\n    verify_Twitter_ID_intro(): string;\n    /**\n      * `You can verify your Twitter ID with Next.ID to enhance your Web3 experience.`\n      */\n    verify_Twitter_ID(): string;\n    /**\n      * `This user has not connected wallets here.`\n      */\n    verify_other_Twitter_ID_intro(): string;\n    /**\n      * `Verify your Twitter ID`\n      */\n    verify_Twitter_ID_button(): string;\n    /**\n      * `Verify your wallet`\n      */\n    verify_wallet_button(): string;\n    /**\n      * `Add wallet`\n      */\n    add_wallet_button(): string;\n    /**\n      * `Verify your wallet`\n      */\n    verify_wallet_dialog_title(): string;\n    /**\n      * `This wallet address has already been connected.`\n      */\n    bind_wallet_bound_error(): string;\n    /**\n      * `Please switch to the address that you want to disconnect.`\n      */\n    unbind_wallet_same_account_error(): string;\n    /**\n      * `Disconnect Wallet`\n      */\n    unbind_dialog_title(): string;\n    /**\n      * `Persona Sign`\n      */\n    persona_sign(): string;\n    /**\n      * `Wallet Sign`\n      */\n    wallet_sign(): string;\n    /**\n      * `copied`\n      */\n    copied(): string;\n    /**\n      * `Provided by`\n      */\n    provided_by(): string;\n    /**\n      * `View on explorer`\n      */\n    view_on_explorer(): string;\n    /**\n      * `Persona Sign`\n      */\n    notify_persona_sign(): string;\n    /**\n      * `Confirm this sign in your Personas`\n      */\n    notify_persona_sign_confirm(): string;\n    /**\n      * `Your wallet cancelled the sign`\n      */\n    notify_persona_sign_cancel(): string;\n    /**\n      * `Wallet Sign`\n      */\n    notify_wallet_sign(): string;\n    /**\n      * `Confirm this transaction in your wallet.`\n      */\n    notify_wallet_sign_confirm(): string;\n    /**\n      * `Wallet sign cancelled.`\n      */\n    notify_wallet_sign_cancel(): string;\n    /**\n      * `Wallet Sign`\n      */\n    notify_wallet_sign_request_title(): string;\n    /**\n      * `Wallet sign succeeded.`\n      */\n    notify_wallet_sign_request_success(): string;\n    /**\n      * `Wallet sign failed.`\n      */\n    notify_wallet_sign_request_failed(): string;\n    /**\n      * `Create Persona`\n      */\n    create_persona(): string;\n    /**\n      * `Connect Persona`\n      */\n    connect_persona(): string;\n    /**\n      * `Please create persona`\n      */\n    please_create_persona(): string;\n    /**\n      * `Please connect persona`\n      */\n    please_connect_persona(): string;\n    /**\n      * `Choose either your Persona or the currently connected wallet to sign to disconnect.`\n      */\n    unbind_persona_tip(): string;\n    /**\n      * `Choose either your Persona or the currently connected wallet to sign to disconnect.`\n      */\n    unbind_wallet_tip(): string;\n    /**\n      * `Done`\n      */\n    done(): string;\n    /**\n      * `Confirm`\n      */\n    confirm(): string;\n    /**\n      * `Cancel`\n      */\n    cancel(): string;\n    /**\n      * `Delete`\n      */\n    [\"delete\"](): string;\n    /**\n      * `Copy wallet address successfully!`\n      */\n    copy_success_of_wallet_address(): string;\n    /**\n      * `This wallet will no longer show up in your Web3 profile page. Your Mask friends can no longer give tips to this wallet, or browse NFTs, donations and other on-chain information of this address.`\n      */\n    disconnect_warning(): string;\n    /**\n      * `Tips`\n      */\n    tips(): string;\n    /**\n      * `Insufficient balance`\n      */\n    token_insufficient_balance(): string;\n    /**\n      * `Sending...`\n      */\n    sending_tip(): string;\n    /**\n      * `The collectible doesn't exist or belong to you.`\n      */\n    nft_not_belong_to_you(): string;\n    /**\n      * `Sent tip successfully.`\n      */\n    send_tip_successfully(): string;\n    /**\n      * `Sent {{- amount}} {{name}} tip successfully.`\n      */\n    send_specific_tip_successfully(options: Readonly<{\n        amount: string;\n        name: string;\n    }>): string;\n    /**\n      * `Search`\n      */\n    search(): string;\n    /**\n      * `Web3 Profile`\n      */\n    web3_profile(): string;\n    /**\n      * `Mask Network`\n      */\n    mask_network(): string;\n    /**\n      * `Please create your persona to use Web3 Profile.`\n      */\n    create_persona_intro(): string;\n    /**\n      * `In the Web3 tab, you can show your wallet addresses for NFT collections, donation records, and other on-chain feeds to friends who have also installed the Mask extension.`\n      */\n    add_wallet_intro(): string;\n    /**\n      * `The user has not set this.`\n      */\n    others_lack_wallet(): string;\n    /**\n      * `Reload`\n      */\n    reload(): string;\n    /**\n      * `Load failed`\n      */\n    persona_load_failed(): string;\n    /**\n      * `Persona`\n      */\n    applications_create_persona_title(): string;\n    /**\n      * `Please create a Persona and verify your account to use this function.`\n      */\n    applications_create_persona_hint(): string;\n    /**\n      * `Create persona`\n      */\n    applications_create_persona_action(): string;\n} { const { t } = useTranslation(\"com.mask.next_id\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\n","import { memo } from 'react'\nimport { Box, DialogContent, Stack, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { LoadingButton } from '@mui/lab'\nimport { Done as DoneIcon } from '@mui/icons-material'\nimport { useNextID_Trans } from '../locales/index.js'\nimport { getMaskColor, makeStyles, MaskColorVar, LoadingBase } from '@masknet/theme'\nimport { InjectedDialog, WalletStatusBox } from '@masknet/shared'\nimport { useNetworkContext } from '@masknet/web3-hooks-base'\nimport { formatPersonaFingerprint, NetworkPluginID, type PersonaInformation } from '@masknet/shared-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    persona: {\n        padding: theme.spacing(1.7),\n        marginBottom: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n        borderRadius: 8,\n        alignItems: 'center',\n    },\n    iconContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        marginRight: '4px',\n        width: 48,\n        height: 48,\n    },\n    name: {\n        display: 'flex',\n        alignItems: 'center',\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n    },\n    identifier: {\n        fontSize: 12,\n        color: theme.palette.text.primary,\n        display: 'flex',\n        alignItems: 'center',\n        wordBreak: 'break-all',\n    },\n    subTitle: {\n        fontSize: 18,\n        lineHeight: '24px',\n        fontWeight: 600,\n        color: theme.palette.text.primary,\n    },\n    deneText: {\n        color: '#60DFAB',\n    },\n    done: {\n        background: '#60DFAB !important',\n        color: `${MaskColorVar.white} !important`,\n        opacity: '1 !important',\n    },\n    loadingIcon: {\n        position: 'relative',\n        right: -6,\n    },\n    error: {\n        marginTop: '14px',\n        color: getMaskColor(theme).redMain,\n        paddingLeft: theme.spacing(0.5),\n        borderLeft: `solid 2px ${getMaskColor(theme).redMain}`,\n    },\n}))\n\ninterface BindPanelUIProps {\n    title: string\n    open: boolean\n    currentPersona: PersonaInformation\n    signature: {\n        persona: {\n            value?: string\n            loading: boolean\n        }\n        wallet: {\n            value?: string\n            loading: boolean\n        }\n    }\n    isBound: boolean\n    isCurrentAccount: boolean\n    onClose(): void\n    onPersonaSign(): void\n    onWalletSign(): void\n}\n\nconst SUPPORTED_PLUGINS = [NetworkPluginID.PLUGIN_EVM]\n\nexport const BindPanelUI = memo<BindPanelUIProps>(\n    ({ onPersonaSign, onWalletSign, currentPersona, signature, isBound, title, onClose, open, isCurrentAccount }) => {\n        const t = useNextID_Trans()\n        const { classes } = useStyles()\n        const { pluginID } = useNetworkContext()\n        const isSupported = SUPPORTED_PLUGINS.includes(pluginID)\n\n        const isWalletSigned = !!signature.wallet.value\n        const isPersonaSigned = !!signature.persona.value\n\n        return (\n            <InjectedDialog open={open} title={title} onClose={onClose}>\n                <DialogContent style={{ padding: '24px' }}>\n                    <Box>\n                        <Stack alignItems=\"center\" direction=\"row\" justifyContent=\"space-between\" mb={1.25}>\n                            <Typography className={classes.subTitle}>{t.wallet()}</Typography>\n                            <Typography>\n                                <Typography\n                                    variant=\"body2\"\n                                    className={isWalletSigned ? classes.deneText : ''}\n                                    component=\"span\">\n                                    1\n                                </Typography>\n                                <Typography variant=\"body2\" component=\"span\">\n                                    {' / 2 '}\n                                </Typography>\n                            </Typography>\n                        </Stack>\n                        <WalletStatusBox />\n                        {isBound ? (\n                            <Typography className={classes.error}>{t.bind_wallet_bound_error()}</Typography>\n                        ) : null}\n                        <Box mt={3}>\n                            <LoadingButton\n                                fullWidth\n                                classes={{\n                                    loadingIndicatorEnd: classes.loadingIcon,\n                                }}\n                                loadingPosition=\"end\"\n                                disabled={!isCurrentAccount || isBound || !!isWalletSigned || !isSupported}\n                                className={isWalletSigned ? classes.done : ''}\n                                loading={signature.wallet.loading}\n                                onClick={onWalletSign}\n                                endIcon={isWalletSigned ? <DoneIcon sx={{ color: MaskColorVar.white }} /> : null}\n                                loadingIndicator={<LoadingBase />}>\n                                {isWalletSigned ? t.done() : t.wallet_sign()}\n                            </LoadingButton>\n                        </Box>\n                    </Box>\n                    {!isSupported && <Typography className={classes.error}>{t.unsupported_network()}</Typography>}\n                    <Box mt={3}>\n                        <Stack alignItems=\"center\" direction=\"row\" justifyContent=\"space-between\" mb={1.25}>\n                            <Typography className={classes.subTitle}>{t.persona()}</Typography>\n                            <Typography>\n                                <Typography\n                                    variant=\"body2\"\n                                    className={isPersonaSigned ? classes.deneText : ''}\n                                    component=\"span\">\n                                    2\n                                </Typography>\n                                <Typography component=\"span\" variant=\"body2\">\n                                    {' / 2 '}\n                                </Typography>\n                            </Typography>\n                        </Stack>\n                        <Stack direction=\"row\" className={classes.persona} mb={3}>\n                            <div className={classes.iconContainer}>\n                                <Icons.Masks size={48} />\n                            </div>\n                            <div>\n                                <Typography className={classes.name}>{currentPersona?.nickname}</Typography>\n                                <Typography className={classes.identifier}>\n                                    {formatPersonaFingerprint(currentPersona?.identifier.rawPublicKey ?? '', 10)}\n                                </Typography>\n                            </div>\n                        </Stack>\n                        <Box mt={3}>\n                            <LoadingButton\n                                fullWidth\n                                disabled={isBound || !!isPersonaSigned || !isSupported}\n                                classes={{\n                                    loadingIndicatorEnd: classes.loadingIcon,\n                                }}\n                                loadingPosition=\"end\"\n                                className={isPersonaSigned ? classes.done : ''}\n                                loading={signature.persona.loading}\n                                onClick={onPersonaSign}\n                                endIcon={isPersonaSigned ? <DoneIcon sx={{ color: MaskColorVar.white }} /> : null}\n                                loadingIndicator={<LoadingBase />}>\n                                {isPersonaSigned ? t.done() : t.persona_sign()}\n                            </LoadingButton>\n                        </Box>\n                    </Box>\n                </DialogContent>\n            </InjectedDialog>\n        )\n    },\n)\n","import { useAsyncRetry } from 'react-use'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { type NextIDAction, NextIDPlatform } from '@masknet/shared-base'\n\nexport const useBindPayload = (action: NextIDAction, address?: string, currentIdentifier?: string) => {\n    return useAsyncRetry(() => {\n        if (!address) return Promise.resolve(undefined)\n        if (!currentIdentifier || !address) return Promise.resolve(undefined)\n        return NextIDProof.createPersonaPayload(currentIdentifier, action, address, NextIDPlatform.Ethereum)\n    }, [currentIdentifier, address])\n}\n","import { useAsyncFn } from 'react-use'\nimport { type ECKeyIdentifier, SignType } from '@masknet/shared-base'\nimport { signWithPersona } from '@masknet/plugin-infra/dom/context'\n\nexport function usePersonaSign(message?: string, currentIdentifier?: ECKeyIdentifier) {\n    return useAsyncFn(async () => {\n        if (!message || !currentIdentifier) return\n        try {\n            return await signWithPersona?.(SignType.Message, message, currentIdentifier)\n        } catch {\n            return\n        }\n    }, [message, currentIdentifier])\n}\n","import { useAsyncFn, useUpdateEffect } from 'react-use'\nimport { useCustomSnackbar } from '@masknet/theme'\nimport { Web3 } from '@masknet/web3-providers'\nimport { useNextID_Trans } from '../locales/index.js'\n\nexport const useWalletSign = (message?: string, address?: string) => {\n    const t = useNextID_Trans()\n    const { showSnackbar } = useCustomSnackbar()\n\n    const [state, fn] = useAsyncFn(\n        async (changed: boolean) => {\n            if (changed || !address || !message) return\n            try {\n                showSnackbar(t.notify_wallet_sign(), { processing: true, message: t.notify_wallet_sign_confirm() })\n                const result = await Web3.signMessage('message', message, { account: address })\n                return result\n            } catch {\n                showSnackbar(t.notify_wallet_sign(), { variant: 'error', message: t.notify_wallet_sign_cancel() })\n                return\n            }\n        },\n        [address, message, address],\n    )\n\n    useUpdateEffect(() => {\n        fn(true)\n    }, [address])\n\n    return [state, () => fn(false)] as const\n}\n","import { memo } from 'react'\nimport { useAsyncRetry } from 'react-use'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport {\n    type NetworkPluginID,\n    type Binding,\n    type PersonaInformation,\n    NextIDAction,\n    NextIDPlatform,\n    MaskMessages,\n} from '@masknet/shared-base'\nimport { delay } from '@masknet/kit'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { useCustomSnackbar } from '@masknet/theme'\nimport { BindPanelUI } from './BindPanelUI.js'\nimport { useBindPayload } from '../hooks/useBindPayload.js'\nimport { usePersonaSign } from '../hooks/usePersonaSign.js'\nimport { useWalletSign } from '../hooks/useWalletSign.js'\nimport { useNextID_Trans } from '../locales/index.js'\n\ninterface BindDialogProps {\n    open: boolean\n    onClose(): void\n    onBound(): void\n    persona: PersonaInformation\n    bounds: Binding[]\n}\n\nexport const BindDialog = memo<BindDialogProps>(({ open, onClose, persona, onBound, bounds }) => {\n    const { account } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const t = useNextID_Trans()\n    const { showSnackbar } = useCustomSnackbar()\n    const currentIdentifier = persona.identifier\n    const isBound = !!bounds.find((x) => isSameAddress(x.identity, account))\n\n    const { value: message } = useBindPayload(NextIDAction.Create, account, persona.identifier.publicKeyAsHex)\n    const [personaSignState, handlePersonaSign] = usePersonaSign(message?.signPayload, currentIdentifier)\n    const [walletSignState, handleWalletSign] = useWalletSign(message?.signPayload, account)\n\n    useAsyncRetry(async () => {\n        if (\n            !personaSignState.value ||\n            !walletSignState.value ||\n            isBound ||\n            !message ||\n            !persona.identifier.publicKeyAsHex\n        )\n            return\n        try {\n            await NextIDProof.bindProof(\n                message.uuid,\n                persona.identifier.publicKeyAsHex,\n                NextIDAction.Create,\n                NextIDPlatform.Ethereum,\n                account,\n                message.createdAt,\n                {\n                    walletSignature: walletSignState.value,\n                    signature: personaSignState.value,\n                },\n            )\n            showSnackbar(t.notify_wallet_sign_request_title(), {\n                variant: 'success',\n                message: t.notify_wallet_sign_request_success(),\n            })\n\n            MaskMessages.events.ownProofChanged.sendToAll()\n\n            await delay(2000)\n            onBound()\n            onClose()\n        } catch {\n            showSnackbar(t.notify_wallet_sign_request_title(), {\n                variant: 'error',\n                message: t.notify_wallet_sign_request_failed(),\n            })\n        }\n    }, [walletSignState.value, personaSignState.value, isBound])\n\n    return (\n        <BindPanelUI\n            title={t.verify_wallet_dialog_title()}\n            onClose={onClose}\n            open={open}\n            currentPersona={persona}\n            onPersonaSign={handlePersonaSign}\n            onWalletSign={handleWalletSign}\n            isCurrentAccount\n            signature={{\n                persona: personaSignState,\n                wallet: walletSignState,\n            }}\n            isBound={isBound}\n        />\n    )\n})\n","import { memo } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { Button, Stack, Typography, useTheme } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { useNextID_Trans } from '../../locales/index.js'\nimport { PersonaSelectPanel } from '@masknet/shared'\n\nconst useStyles = makeStyles()((theme) => ({\n    button: {\n        display: 'inline-flex',\n        gap: theme.spacing(1),\n        minWidth: 254,\n        borderRadius: '20px',\n        width: 'fit-content !important',\n    },\n    unchecked: {\n        '& circle': {\n            stroke: theme.palette.maskColor.white,\n        },\n    },\n}))\n\ninterface CreatePersonaActionProps {\n    disabled: boolean\n    onCreate(): void\n}\n\nexport const CreatePersonaAction = memo<CreatePersonaActionProps>(({ disabled, onCreate }) => {\n    const t = useNextID_Trans()\n    const { classes, theme } = useStyles()\n\n    return (\n        <>\n            <Stack flex={1} px={1.25} justifyContent=\"flex-start\" width=\"100%\" boxSizing=\"border-box\">\n                <Typography fontWeight={400} fontSize={14} color={theme.palette.maskColor.second}>\n                    {t.create_persona_intro()}\n                </Typography>\n            </Stack>\n            <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n                <Button color=\"primary\" disabled={disabled} className={classes.button} onClick={onCreate}>\n                    <Icons.Identity size={18} />\n                    {t.create_persona()}\n                </Button>\n            </Stack>\n        </>\n    )\n})\n\nexport const SelectConnectPersonaAction = memo(() => {\n    const { classes } = useStyles()\n    return (\n        <Stack p={1.25} pb={0} width=\"100%\" boxSizing=\"border-box\">\n            <PersonaSelectPanel classes={{ unchecked: classes.unchecked, button: classes.button }} />\n        </Stack>\n    )\n})\n\ninterface AddWalletPersonaActionProps {\n    disabled: boolean\n    onAddWallet(): void\n}\n\nexport const AddWalletPersonaAction = memo<AddWalletPersonaActionProps>(({ onAddWallet }) => {\n    const t = useNextID_Trans()\n    const { classes, theme } = useStyles()\n    return (\n        <>\n            <Stack flex={1} px={1.25} justifyContent=\"flex-start\" width=\"100%\" boxSizing=\"border-box\">\n                <Typography fontWeight={400} fontSize={14} color={theme.palette.maskColor.second}>\n                    {t.add_wallet_intro()}\n                </Typography>\n            </Stack>\n            <Stack direction=\"row\" justifyContent=\"center\">\n                <Button color=\"primary\" variant=\"contained\" onClick={onAddWallet} className={classes.button}>\n                    <Icons.Wallet size={16} />\n                    {t.add_wallet_button()}\n                </Button>\n            </Stack>\n        </>\n    )\n})\n\nexport const OtherLackWalletAction = memo(() => {\n    const t = useNextID_Trans()\n    const theme = useTheme()\n    return (\n        <Stack justifyContent=\"center\" alignItems=\"center\" flex={1}>\n            <Typography fontWeight={400} fontSize={14} color={theme.palette.maskColor.second}>\n                {t.others_lack_wallet()}\n            </Typography>\n        </Stack>\n    )\n})\n","import { memo, useCallback, useMemo, useState } from 'react'\nimport { useAsyncRetry } from 'react-use'\nimport { ThemeProvider } from '@mui/material'\nimport { MaskLightTheme } from '@masknet/theme'\nimport {\n    useAllPersonas,\n    useCurrentVisitingIdentity,\n    useLastRecognizedIdentity,\n} from '@masknet/plugin-infra/content-script'\nimport {\n    PluginCardFrameMini,\n    useCurrentPersonaConnectStatus,\n    usePersonaProofs,\n    PluginEnableBoundary,\n    PopupHomeTabType,\n} from '@masknet/shared'\nimport { PluginID, PopupRoutes, EMPTY_LIST, currentPersonaIdentifier } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { BindDialog } from './BindDialog.js'\nimport {\n    AddWalletPersonaAction,\n    CreatePersonaAction,\n    OtherLackWalletAction,\n    SelectConnectPersonaAction,\n} from './Actions/index.js'\nimport { openDashboard, openPopupWindow, queryPersonaByProfile } from '@masknet/plugin-infra/dom/context'\n\nexport const NextIdPage = memo(function NextIdPage() {\n    const currentProfileIdentifier = useLastRecognizedIdentity()\n    const visitingPersonaIdentifier = useCurrentVisitingIdentity()\n    const allPersonas = useAllPersonas()\n    const currentIdentifier = useValueRef(currentPersonaIdentifier)\n\n    const { value: personaConnectStatus, loading: statusLoading } = useCurrentPersonaConnectStatus(\n        allPersonas,\n        currentIdentifier,\n        openDashboard,\n        currentProfileIdentifier,\n    )\n\n    const [openBindDialog, toggleBindDialog] = useState(false)\n    const isOwn =\n        currentProfileIdentifier &&\n        currentProfileIdentifier?.identifier?.userId === visitingPersonaIdentifier?.identifier?.userId\n\n    const { value: currentPersona, loading: loadingPersona } = useAsyncRetry(async () => {\n        if (!visitingPersonaIdentifier?.identifier) return\n        return queryPersonaByProfile?.(visitingPersonaIdentifier.identifier)\n    }, [visitingPersonaIdentifier?.identifier, personaConnectStatus.hasPersona])\n    const publicKeyAsHex = currentPersona?.identifier.publicKeyAsHex\n    const proofs = usePersonaProofs(publicKeyAsHex)\n\n    const handleAddWallets = useCallback(() => {\n        openPopupWindow?.(PopupRoutes.Personas, {\n            tab: PopupHomeTabType.ConnectedWallets,\n        })\n    }, [])\n\n    const ActionComponent = useMemo(() => {\n        if (!isOwn) return <OtherLackWalletAction />\n\n        if (!personaConnectStatus.hasPersona || !personaConnectStatus.connected || !personaConnectStatus.verified) {\n            if (!personaConnectStatus.hasPersona)\n                return (\n                    <CreatePersonaAction\n                        disabled={statusLoading}\n                        onCreate={() => personaConnectStatus.action?.(undefined, undefined, undefined, true)}\n                    />\n                )\n            if (!personaConnectStatus.connected || !personaConnectStatus.verified) return <SelectConnectPersonaAction />\n\n            return <AddWalletPersonaAction disabled={statusLoading} onAddWallet={handleAddWallets} />\n        }\n\n        return <AddWalletPersonaAction disabled={statusLoading} onAddWallet={handleAddWallets} />\n    }, [isOwn, statusLoading, handleAddWallets, personaConnectStatus])\n\n    if ((!proofs.data && proofs.isFetching) || loadingPersona) {\n        return (\n            <ThemeProvider theme={MaskLightTheme}>\n                <PluginCardFrameMini />\n            </ThemeProvider>\n        )\n    }\n\n    return (\n        <>\n            <ThemeProvider theme={MaskLightTheme}>\n                <PluginCardFrameMini>\n                    <PluginEnableBoundary pluginID={PluginID.Web3Profile}>{ActionComponent}</PluginEnableBoundary>\n                </PluginCardFrameMini>\n            </ThemeProvider>\n            {openBindDialog && currentPersona && isOwn ? (\n                <BindDialog\n                    open={openBindDialog}\n                    onClose={() => toggleBindDialog(false)}\n                    persona={currentPersona}\n                    bounds={proofs.data ?? EMPTY_LIST}\n                    onBound={proofs.refetch}\n                />\n            ) : null}\n        </>\n    )\n})\n","import type { Plugin } from '@masknet/plugin-infra'\nimport { base } from '../base.js'\nimport { PLUGIN_ID } from '../constants.js'\nimport { NextIdPage } from '../components/NextIdPage.js'\n\nconst site: Plugin.SiteAdaptor.Definition = {\n    ...base,\n    ProfileTabs: [\n        {\n            ID: `${PLUGIN_ID}_tabContent`,\n            label: 'Wallets',\n            priority: 10,\n            UI: {\n                TabContent: ({ identity }) => <NextIdPage />,\n            },\n        },\n    ],\n}\n\nexport default site\n","import { createContext, useContext, useRef } from 'react'\nimport type { BuildInfoFile } from '@masknet/flags'\nimport { useBuildInfo_raw } from '../../index.js'\nexport interface ErrorBoundaryError {\n    /** Type of the Error */\n    type: string\n    /** The Error message */\n    message: string\n    /** The error stack */\n    stack: string\n}\n/**\n * Provide the build info for CrashUI\n */\nconst BuildInfo = createContext<() => BuildInfoFile>(useBuildInfo_raw)\nBuildInfo.displayName = 'BuildInfo'\n\nexport function BuildInfoProvider(props: React.PropsWithChildren<{ value: () => BuildInfoFile }>) {\n    return <BuildInfo.Provider {...props} />\n}\nexport function useBuildInfo() {\n    return useRef(useContext(BuildInfo)).current()\n}\nexport function useBuildInfoMarkdown() {\n    const env = useBuildInfo()\n    const gitInfo = env.COMMIT_HASH\n        ? `\n## Git (${env.DIRTY ? '*' : ''}):\n${env.COMMIT_HASH} (${env.BRANCH_NAME})`\n        : ''\n\n    const buildInfoMarkdown =\n        `## Build info\n- Version: ${env.VERSION || 'unknown'}\n- NODE_ENV: ${process.env.NODE_ENV || 'unknown'}\n- userAgent: ${navigator.userAgent}\n- build: ${env.channel || 'unknown'}\n- BUILD_DATE: ${env.BUILD_DATE || 'unknown'}\n` + gitInfo\n    return buildInfoMarkdown\n}\n","import { defer, delay, type DeferTuple } from '@masknet/kit'\nimport { Emitter } from '@servie/events'\n\nexport type SingletonModalRefCreator<OpenProps = void, CloseProps = void> = (\n    onOpen: (props: OpenProps) => void,\n    onClose: (props: CloseProps) => void,\n    onAbort: (error: Error) => void,\n) => {\n    peek: () => boolean\n    open: (props: OpenProps) => void\n    close: (props: CloseProps) => void\n    abort?: (error: Error) => void\n}\n\nexport interface SingletonModalProps {\n    children: React.ReactNode\n}\n\nexport class SingletonModal<\n    OpenProps = void,\n    CloseProps = void,\n    T extends SingletonModalRefCreator<OpenProps, CloseProps> = SingletonModalRefCreator<OpenProps, CloseProps>,\n> {\n    constructor() {\n        this.open = this.open.bind(this)\n        this.close = this.close.bind(this)\n        this.abort = this.abort.bind(this)\n        this.openAndWaitForClose = this.openAndWaitForClose.bind(this)\n    }\n    readonly emitter = new Emitter<{\n        open: [OpenProps]\n        close: [CloseProps]\n        abort: [Error]\n    }>()\n\n    protected onOpen: ReturnType<T>['open'] | undefined\n    protected onClose: ReturnType<T>['close'] | undefined\n    protected onAbort: ReturnType<T>['abort'] | undefined\n\n    private dispatchPeek: ReturnType<T>['peek'] | undefined\n    private dispatchOpen: ReturnType<T>['open'] | undefined\n    private dispatchClose: ReturnType<T>['close'] | undefined\n    private dispatchAbort: ReturnType<T>['abort'] | undefined\n\n    /**\n     * Register a React modal component that implemented a forwarded ref.\n     * The ref item should be fed with open and close methods.\n     */\n    register = (creator: T | null) => {\n        if (!creator) {\n            this.dispatchOpen = undefined\n            this.dispatchClose = undefined\n            this.dispatchAbort = undefined\n            return\n        }\n\n        const ref = creator(\n            (props) => {\n                this.onOpen?.(props)\n                this.emitter.emit('open', props)\n            },\n            (props) => {\n                this.onClose?.(props)\n                this.emitter.emit('close', props)\n            },\n            (error) => {\n                this.onAbort?.(error)\n                this.emitter.emit('abort', error)\n            },\n        )\n        this.dispatchPeek = ref.peek\n        this.dispatchOpen = ref.open\n        this.dispatchClose = ref.close\n        this.dispatchAbort = ref.abort\n    }\n\n    /**\n     * Peek the open state of the React modal component.\n     */\n    peek() {\n        return this.dispatchPeek?.() ?? false\n    }\n\n    /**\n     * Open the registered modal component with props\n     * @param props\n     */\n    open(props: OpenProps) {\n        if (typeof this.dispatchOpen === 'undefined') console.warn(\"[SingletonModal]: The modal hasn't registered yet.\")\n        this.dispatchOpen?.(props)\n    }\n\n    /**\n     * Close the registered modal component with props\n     * @param props\n     */\n    close(props: CloseProps) {\n        this.dispatchClose?.(props)\n    }\n\n    /**\n     * Abort the registered modal component with Error\n     */\n    abort(error: Error) {\n        this.dispatchAbort?.(error)\n    }\n\n    /**\n     * Open the registered modal component and wait for it closes\n     * @param props\n     */\n    openAndWaitForClose(props: OpenProps): Promise<CloseProps> {\n        return new Promise<CloseProps>((resolve, reject) => {\n            this.open(props)\n            this.onClose = (props) => resolve(props)\n            this.onAbort = (error) => reject(error)\n        })\n    }\n}\n\nexport class SingletonModalQueued<OpenProps = void, CloseProps = void> extends SingletonModal<OpenProps, CloseProps> {\n    private opened = false\n    private tasks: Array<{\n        props: OpenProps\n        defer?: DeferTuple<CloseProps, Error>\n    }> = []\n\n    constructor() {\n        super()\n\n        this.emitter.on('open', () => {\n            this.opened = true\n        })\n        this.emitter.on('close', () => {\n            this.opened = false\n            this.cleanup()\n        })\n        this.emitter.on('abort', () => {\n            this.opened = false\n            this.cleanup()\n        })\n    }\n\n    override open(props: OpenProps) {\n        if (!this.opened) {\n            super.open(props)\n            return\n        }\n\n        this.tasks.push({\n            props,\n        })\n    }\n\n    override close(props: CloseProps) {\n        if (!this.opened) return\n\n        super.close(props)\n    }\n\n    override openAndWaitForClose(props: OpenProps) {\n        if (!this.opened) return super.openAndWaitForClose(props)\n\n        const d = defer<CloseProps, Error>()\n        this.tasks.push({\n            props,\n            defer: d,\n        })\n        return d[0]\n    }\n\n    private async cleanup() {\n        if (this.opened || !this.tasks.length) return\n\n        await delay(300)\n\n        const { props, defer } = this.tasks.shift()!\n\n        this.open(props)\n        if (!defer) return\n        this.onClose = (props) => defer[1](props)\n        this.onAbort = (error) => defer[2](error)\n    }\n}\n","import {\n    type ProfileIdentifier,\n    type PersonaIdentifier,\n    type PersonaInformation,\n    type ProfileInformation,\n    Identifier,\n} from '../index.js'\n\nexport function formatPersonaFingerprint(fingerprint: string, size?: number) {\n    if (!size) {\n        if (fingerprint.length <= 26) return fingerprint\n        return `${fingerprint.slice(0, 12)}...${fingerprint.slice(-9)}`\n    }\n\n    if (size <= 0) return fingerprint\n    return `${fingerprint.slice(0, Math.max(0, 2 + size))}...${fingerprint.slice(-size)}`\n}\n\nexport const MAX_PERSONA_LIMIT = 10\n\nexport const MAX_PERSONA_NAME_LENGTH = 12\n\nexport const formatPersonaName = (nickname?: string) => {\n    if (!nickname) return ''\n    if (nickname.length < MAX_PERSONA_NAME_LENGTH) return nickname\n\n    return `${nickname.slice(0, 12)}...`\n}\n\nfunction isSameIdentity<T extends Identifier>(identities: Array<T | { identifier: T } | undefined>) {\n    return identities.reduce((previousValue, T2, key) => {\n        if (key === 0) return true\n        const T1 = identities[key - 1]\n        if (!T2 || !T1) return false\n\n        const i1IdentifierText = (T1 instanceof Identifier ? T1 : T1.identifier).toText()\n        const i2IdentifierText = (T2 instanceof Identifier ? T2 : T2.identifier).toText()\n\n        return previousValue && i1IdentifierText.toLowerCase() === i2IdentifierText.toLowerCase()\n    }, false)\n}\n\nexport function isSamePersona(...personas: Array<PersonaIdentifier | PersonaInformation | undefined>) {\n    return isSameIdentity(personas)\n}\n\nexport function isSameProfile(...profiles: Array<ProfileIdentifier | ProfileInformation | undefined>) {\n    return isSameIdentity(profiles)\n}\n","import { Icons, type GeneratedIconProps } from '@masknet/icons'\nimport { ShadowRootTooltip, makeStyles } from '@masknet/theme'\nimport { Link, type LinkProps } from '@mui/material'\nimport { memo, useCallback, useRef, useState, type MouseEvent } from 'react'\nimport { useCopyToClipboard } from 'react-use'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    copy: {\n        '&:hover': {\n            color: theme.palette.maskColor.main,\n        },\n    },\n}))\n\nexport interface CopyButtonProps\n    extends Omit<LinkProps<'button'>, 'color'>,\n        Pick<GeneratedIconProps, 'size' | 'color'> {\n    title?: string\n    text: string\n    /** defaults to 'Copied' */\n    successText?: string\n    /** stop event propagation and prevent default */\n    scoped?: boolean\n}\n\nexport const CopyButton = memo<CopyButtonProps>(function CopyButton({\n    text,\n    title,\n    successText,\n    size,\n    color,\n    scoped = true,\n    className,\n    ...props\n}) {\n    const t = useSharedTrans()\n    const { classes, cx, theme } = useStyles(undefined, { props })\n\n    const [, copyToClipboard] = useCopyToClipboard()\n    const [copied, setCopied] = useState(false)\n    const [active, setActive] = useState(false)\n    const timerRef = useRef<ReturnType<typeof setTimeout>>()\n\n    const handleCopy = useCallback(\n        async (ev: MouseEvent<HTMLAnchorElement>) => {\n            if (scoped) {\n                ev.stopPropagation()\n                ev.preventDefault()\n            }\n            copyToClipboard(text)\n            setCopied(true)\n            setActive(true)\n            clearTimeout(timerRef.current)\n            timerRef.current = setTimeout(setActive, 1500, false)\n        },\n        [text, scoped],\n    )\n\n    const tooltipTitle = copied ? successText ?? t.copied() : title ?? t.copy()\n    const iconProps = { size, color }\n\n    return (\n        <ShadowRootTooltip open={active} title={tooltipTitle} placement=\"top\" disableInteractive arrow>\n            <Link\n                underline=\"none\"\n                component=\"button\"\n                onClick={handleCopy}\n                color=\"inherit\"\n                {...props}\n                fontSize={0}\n                className={cx(classes.root, className)}>\n                {active ? (\n                    <Icons.Check {...iconProps} color={theme.palette.maskColor.success} />\n                ) : (\n                    <Icons.Copy {...iconProps} className={classes.copy} />\n                )}\n            </Link>\n        </ShadowRootTooltip>\n    )\n})\n","import { memo, type HTMLProps, type CSSProperties } from 'react'\n\nexport interface ImageIconProps extends HTMLProps<HTMLImageElement> {\n    size?: number\n    icon?: string\n    iconFilterColor?: string\n}\n\nexport const ImageIcon = memo(function ImageIcon({ size = 48, icon, iconFilterColor, ...rest }: ImageIconProps) {\n    const style: CSSProperties | undefined = iconFilterColor\n        ? {\n              filter: `drop-shadow(0px 6px 12px ${iconFilterColor})`,\n              backdropFilter: 'blur(16px)',\n              ...rest.style,\n          }\n        : rest.style\n\n    return <img height={size} width={size} src={icon?.toString()} {...rest} style={style} />\n})\n","import { LoadingBase, makeStyles } from '@masknet/theme'\nimport { Box, Typography, type BoxProps } from '@mui/material'\nimport { memo } from 'react'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    statusBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    text: {\n        color: theme.palette.maskColor.second,\n        fontSize: '14px',\n        fontWeight: 400,\n        marginTop: theme.spacing(1.5),\n    },\n}))\n\ninterface Props extends BoxProps {\n    omitText?: boolean\n    iconSize?: number\n}\n\nexport const LoadingStatus = memo(function LoadingStatus({\n    omitText,\n    className,\n    iconSize = 32,\n    children,\n    ...rest\n}: Props) {\n    const { classes, cx } = useStyles()\n    const t = useSharedTrans()\n    return (\n        <Box className={cx(classes.statusBox, className)} p={2} {...rest}>\n            <LoadingBase size={iconSize} />\n            {omitText ? null : <Typography className={classes.text}>{children ?? t.loading()}</Typography>}\n        </Box>\n    )\n})\n","import { useEffect } from 'react'\nimport {\n    EMPTY_LIST,\n    MaskMessages,\n    NextIDPlatform,\n    type BindingProof,\n    type PersonaInformation,\n} from '@masknet/shared-base'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { useAllPersonas } from '@masknet/plugin-infra/content-script'\nimport { queryPersonaAvatar } from '@masknet/plugin-infra/dom/context'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useConnectedPersonas() {\n    const personasInDB = useAllPersonas()\n    const result = useQuery<\n        Array<{ persona: PersonaInformation; proof: BindingProof[]; avatar: string | undefined }>,\n        Error\n    >({\n        queryKey: ['connected-persona', personasInDB],\n        queryFn: async () => {\n            const allPersonaPublicKeys = personasInDB.map((x) => x.identifier.publicKeyAsHex)\n            const allPersonaIdentifiers = personasInDB.map((x) => x.identifier)\n\n            const avatars = await queryPersonaAvatar?.(allPersonaIdentifiers)\n            const allNextIDBindings = await NextIDProof.queryAllExistedBindingsByPlatform(\n                NextIDPlatform.NextID,\n                allPersonaPublicKeys.join(','),\n                undefined,\n            )\n\n            return personasInDB.map((x) => {\n                return {\n                    persona: x,\n                    proof:\n                        allNextIDBindings\n                            .find((p) => p.persona.toLowerCase() === x.identifier.publicKeyAsHex.toLowerCase())\n                            ?.proofs.filter((x) => x.is_valid) ?? EMPTY_LIST,\n                    avatar: avatars?.get(x.identifier),\n                }\n            })\n        },\n    })\n\n    useEffect(() => MaskMessages.events.ownProofChanged.on(() => result.refetch()), [result.refetch])\n\n    return result\n}\n","import { currentPersona } from '@masknet/plugin-infra/dom/context'\nimport { useSubscription } from 'use-subscription'\n\nexport function useCurrentPersona() {\n    return useSubscription(currentPersona)\n}\n","import { useRef } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport {\n    fromHex,\n    NextIDAction,\n    type PersonaInformation,\n    SignType,\n    toBase64,\n    languageSettings,\n    MaskMessages,\n} from '@masknet/shared-base'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport {\n    currentNextIDPlatform,\n    getPostIdFromNewPostToast,\n    postMessage,\n} from '@masknet/plugin-infra/content-script/context'\nimport { signWithPersona } from '@masknet/plugin-infra/dom/context'\n\nexport function useNextIDVerify() {\n    const verifyPostCollectTimer = useRef<ReturnType<typeof setTimeout> | null>(null)\n\n    return useAsyncFn(\n        async (persona?: PersonaInformation, username?: string, verifiedCallback?: () => void | Promise<void>) => {\n            if (!currentNextIDPlatform || !persona || !username) return\n\n            const payload = await NextIDProof.createPersonaPayload(\n                persona.identifier.publicKeyAsHex,\n                NextIDAction.Create,\n                username,\n                currentNextIDPlatform,\n                languageSettings.value ?? 'default',\n            )\n            if (!payload) throw new Error('Failed to create persona payload.')\n\n            const signature = await signWithPersona?.(SignType.Message, payload.signPayload, persona.identifier, true)\n            if (!signature) throw new Error('Failed to sign by persona.')\n\n            const postContent = payload.postContent.replace('%SIG_BASE64%', toBase64(fromHex(signature)))\n            postMessage?.(postContent, { recover: false, reason: 'verify' })\n            await new Promise<void>((resolve, reject) => {\n                verifyPostCollectTimer.current = setInterval(async () => {\n                    const postId = getPostIdFromNewPostToast?.()\n                    if (postId && persona.identifier.publicKeyAsHex) {\n                        clearInterval(verifyPostCollectTimer.current!)\n                        await NextIDProof.bindProof(\n                            payload.uuid,\n                            persona.identifier.publicKeyAsHex,\n                            NextIDAction.Create,\n                            currentNextIDPlatform!,\n                            username,\n                            payload.createdAt,\n                            {\n                                signature,\n                                proofLocation: postId,\n                            },\n                        )\n                        resolve()\n                    }\n                }, 1000)\n\n                setTimeout(() => {\n                    clearInterval(verifyPostCollectTimer.current!)\n                    reject()\n                }, 1000 * 20)\n            })\n\n            const isBound = await NextIDProof.queryIsBound(\n                persona.identifier.publicKeyAsHex,\n                currentNextIDPlatform,\n                username,\n            )\n            if (!isBound) throw new Error('Failed to verify.')\n\n            MaskMessages.events.ownProofChanged.sendToAll(undefined)\n            await verifiedCallback?.()\n        },\n        [],\n    )\n}\n","import { useMemo } from 'react'\nimport { Avatar, Box, Stack, Typography } from '@mui/material'\nimport {\n    type BindingProof,\n    resolveNextIDIdentityToProfile,\n    type ECKeyIdentifier,\n    formatPersonaFingerprint,\n    isSamePersona,\n    isSameProfile,\n    type PersonaInformation,\n} from '@masknet/shared-base'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport type { IdentityResolved } from '@masknet/plugin-infra'\nimport { CopyButton } from '../CopyButton/index.js'\n\n/* cspell:disable-next-line */\n// TODO: Migrate to SocialIdentity by @Lanttcat\nexport interface PersonaNextIDMixture {\n    persona: PersonaInformation\n    proof: BindingProof[]\n    avatar?: string\n}\n\ninterface PersonaItemProps extends withClasses<'checked' | 'unchecked'> {\n    data: PersonaNextIDMixture\n    onClick: () => void\n    currentPersona?: PersonaNextIDMixture\n    currentPersonaIdentifier?: ECKeyIdentifier\n    currentProfileIdentify?: IdentityResolved\n}\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        nickname: {\n            fontSize: 16,\n            lineHeight: '20px',\n            color: theme.palette.maskColor.main,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n        },\n        fingerprint: {\n            fontSize: 12,\n            lineHeight: '16px',\n            color: theme.palette.maskColor.second,\n        },\n        indicator: {\n            display: 'inline-block',\n            background: '#2DDF00',\n            borderRadius: '50%',\n            width: 7,\n            height: 7,\n            position: 'absolute',\n            left: '77.62%',\n            right: '5.84%',\n            top: '5.84%',\n            bottom: '77.62%',\n            border: `1px solid ${theme.palette.maskColor.bottom}`,\n        },\n    }\n})\n\nexport function PersonaItemUI(props: PersonaItemProps) {\n    const { data, onClick, currentPersona, currentPersonaIdentifier, currentProfileIdentify } = props\n    const { classes } = useStyles(undefined, { props })\n\n    const isVerified = useMemo(() => {\n        return data.proof.some(\n            (p) =>\n                isSameProfile(\n                    resolveNextIDIdentityToProfile(p.identity, p.platform),\n                    currentProfileIdentify?.identifier,\n                ) && p.is_valid,\n        )\n    }, [data.proof])\n\n    return (\n        <Stack direction=\"row\" alignItems=\"center\" gap={1} onClick={onClick}>\n            <Box flexGrow={0} position=\"relative\">\n                {data.avatar ? (\n                    <Avatar\n                        src={data.avatar}\n                        sx={{\n                            width: 30,\n                            height: 30,\n                            display: 'inline-block',\n                            borderRadius: '50%',\n                        }}\n                    />\n                ) : null}\n                {!data.avatar && <Icons.MenuPersonasActive size={30} />}\n                {isSamePersona(currentPersonaIdentifier, data.persona) && <Box className={classes.indicator} />}\n            </Box>\n            <Stack flexGrow={1}>\n                <Typography className={classes.nickname}>\n                    <Stack component=\"span\" display=\"inline-flex\" direction=\"row\" alignItems=\"center\" gap={0.25}>\n                        {data.persona.nickname}\n                        {isVerified ? <Icons.NextIDMini width={32} height={18} /> : null}\n                    </Stack>\n                </Typography>\n                <Typography className={classes.fingerprint}>\n                    <Stack component=\"span\" display=\"inline-flex\" direction=\"row\" alignItems=\"center\" gap={0.25}>\n                        {formatPersonaFingerprint(data.persona.identifier.rawPublicKey, 4)}\n                        <CopyButton size={14} text={data.persona.identifier.rawPublicKey} />\n                    </Stack>\n                </Typography>\n            </Stack>\n            <Stack flexGrow={0}>\n                {isSamePersona(currentPersona?.persona, data.persona) ? (\n                    <Icons.CheckCircle size={20} className={classes.checked} />\n                ) : (\n                    <Icons.RadioNo size={20} className={classes.unchecked} />\n                )}\n            </Stack>\n        </Stack>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { delay } from '@masknet/kit'\nimport { useLastRecognizedIdentity } from '@masknet/plugin-infra/content-script'\nimport { attachProfile, openDashboard, setCurrentPersonaIdentifier } from '@masknet/plugin-infra/dom/context'\nimport {\n    CrossIsolationMessages,\n    DashboardRoutes,\n    EMPTY_LIST,\n    isSamePersona,\n    isSameProfile,\n    resolveNextIDIdentityToProfile,\n    type PersonaIdentifier,\n    type ProfileIdentifier,\n} from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Telemetry } from '@masknet/web3-telemetry'\nimport { EventID, EventType } from '@masknet/web3-telemetry/types'\nimport { Button, Stack, Typography } from '@mui/material'\nimport { memo, useEffect, useLayoutEffect, useMemo, useState } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { useConnectedPersonas } from '../../../hooks/useConnectedPersonas.js'\nimport { useCurrentPersona } from '../../../hooks/useCurrentPersona.js'\nimport { useNextIDVerify } from '../../../hooks/useNextIDVerify.js'\nimport { ReloadStatus } from '../ReloadStatus/index.js'\nimport { LoadingStatus } from '../LoadingStatus/index.js'\nimport type { PersonaNextIDMixture } from './PersonaItemUI.js'\nimport { PersonaItemUI } from './PersonaItemUI.js'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { ApplicationBoardModal, LeavePageConfirmModal } from '../../modals/index.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        items: {\n            overflow: 'auto',\n            maxHeight: 225,\n            scrollbarWidth: 'none',\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        reloadStatus: {\n            padding: theme.spacing(1, 2, 2, 2),\n            minHeight: 148,\n            scrollbarWidth: 'none',\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n        button: {\n            display: 'inline-flex',\n            gap: theme.spacing(1),\n            borderRadius: 20,\n            width: '100%',\n        },\n    }\n})\n\nexport type PositionOption = 'center' | 'top-right'\n\ninterface PersonaSelectPanelProps extends withClasses<'checked' | 'unchecked' | 'button'> {\n    finishTarget?: string\n    enableVerify?: boolean\n    onClose?: () => void\n}\n\nexport const PersonaSelectPanel = memo<PersonaSelectPanelProps>((props) => {\n    const { finishTarget, enableVerify = true, onClose } = props\n\n    const t = useSharedTrans()\n\n    const currentPersonaIdentifier = useCurrentPersona()\n\n    const { classes } = useStyles(undefined, { props })\n\n    const [selectedPersona, setSelectedPersona] = useState<PersonaNextIDMixture>()\n\n    const [, handleVerifyNextID] = useNextIDVerify()\n    const currentProfileIdentify = useLastRecognizedIdentity()\n    const { data: personas = EMPTY_LIST, isLoading, error, refetch } = useConnectedPersonas()\n\n    useEffect(() => {\n        if (!currentPersonaIdentifier) {\n            setSelectedPersona(personas[0])\n            return\n        }\n\n        const persona = personas.find((x) => isSamePersona(x.persona, currentPersonaIdentifier))\n        setSelectedPersona(persona ?? personas[0])\n    }, [currentPersonaIdentifier?.toText(), personas.length])\n\n    const [, connect] = useAsyncFn(\n        async (profileIdentifier?: ProfileIdentifier, personaIdentifier?: PersonaIdentifier) => {\n            if (!profileIdentifier || !personaIdentifier) return\n            await attachProfile?.(profileIdentifier, personaIdentifier, {\n                connectionConfirmState: 'confirmed',\n            })\n            await setCurrentPersonaIdentifier?.(personaIdentifier)\n        },\n        [],\n    )\n\n    useLayoutEffect(() => {\n        if (personas.length || isLoading || error) return\n\n        onClose?.()\n        LeavePageConfirmModal.open({\n            openDashboard,\n            info: {\n                target: 'dashboard',\n                url: DashboardRoutes.SignUpPersona,\n                text: t.applications_create_persona_hint(),\n                title: t.applications_create_persona_title(),\n                actionHint: t.applications_create_persona_action(),\n            },\n        })\n    }, [!personas.length, isLoading, !error])\n\n    const actionButton = useMemo(() => {\n        let isConnected = true\n        let isVerified = true\n\n        if (!currentProfileIdentify || !selectedPersona) return null\n\n        // Selected persona does not link the current site\n        if (!selectedPersona.persona.linkedProfiles.find((x) => isSameProfile(x, currentProfileIdentify.identifier))) {\n            isConnected = false\n        }\n\n        if (!isSamePersona(selectedPersona.persona, currentPersonaIdentifier)) isConnected = false\n\n        const verifiedAtSite = selectedPersona.proof.find(\n            (x) =>\n                isSameProfile(\n                    resolveNextIDIdentityToProfile(x.identity, x.platform),\n                    currentProfileIdentify.identifier,\n                ) && x.is_valid,\n        )\n        if (!verifiedAtSite) {\n            isVerified = false\n        }\n\n        const handleClick = async () => {\n            if (!isConnected) {\n                await connect?.(currentProfileIdentify.identifier, selectedPersona.persona.identifier)\n                if (!finishTarget) Telemetry.captureEvent(EventType.Access, EventID.EntryProfileConnectTwitter)\n                else Telemetry.captureEvent(EventType.Access, EventID.EntryMaskComposeConnectTwitter)\n            }\n            if (!isVerified && enableVerify) {\n                onClose?.()\n                ApplicationBoardModal.close()\n                await handleVerifyNextID(selectedPersona.persona, currentProfileIdentify.identifier?.userId)\n                if (!finishTarget) Telemetry.captureEvent(EventType.Access, EventID.EntryProfileConnectVerify)\n                else Telemetry.captureEvent(EventType.Access, EventID.EntryMaskComposeVerifyTwitter)\n            }\n\n            if (isVerified) CrossIsolationMessages.events.personaBindFinished.sendToAll({ pluginID: finishTarget })\n\n            if (finishTarget) {\n                CrossIsolationMessages.events.applicationDialogEvent.sendToLocal({\n                    open: true,\n                    pluginID: finishTarget,\n                    selectedPersona: selectedPersona.persona,\n                })\n            }\n\n            await delay(100)\n            onClose?.()\n        }\n\n        const actionProps = {\n            ...(() => {\n                const { persona } = selectedPersona\n                if (!isConnected && !isVerified && enableVerify)\n                    return {\n                        buttonText: t.applications_persona_verify_connect({\n                            nickname: persona.nickname ?? '',\n                        }),\n                        hint: t.applications_persona_verify_connect_hint({\n                            nickname: persona.nickname ?? '',\n                        }),\n                    }\n                if (!isConnected)\n                    return {\n                        buttonText: t.applications_persona_connect({\n                            nickname: persona.nickname ?? '',\n                        }),\n                        hint: t.applications_persona_connect_hint({\n                            nickname: persona.nickname ?? '',\n                        }),\n                    }\n                if (!isVerified)\n                    return {\n                        buttonText: t.applications_persona_verify({\n                            nickname: persona.nickname ?? '',\n                        }),\n                        hint: t.applications_persona_verify_hint(),\n                    }\n                return {\n                    buttonText: t.applications_persona_connect({\n                        nickname: persona.nickname ?? '',\n                    }),\n                }\n            })(),\n            onClick: handleClick,\n        }\n\n        return <ActionContent {...actionProps} classes={{ button: props.classes?.button }} />\n    }, [\n        currentPersonaIdentifier,\n        currentProfileIdentify,\n        enableVerify,\n        finishTarget,\n        selectedPersona?.persona,\n        selectedPersona?.proof,\n        selectedPersona?.persona.linkedProfiles,\n    ])\n\n    if (isLoading) return <LoadingStatus iconSize={24} />\n\n    if (error) return <ReloadStatus className={classes.reloadStatus} onRetry={refetch} />\n\n    if (!personas.length) return <Stack height=\"100%\" justifyContent=\"space-between\" />\n\n    return (\n        <Stack height=\"100%\" justifyContent=\"space-between\">\n            <Stack gap={1.5} className={classes.items}>\n                {personas.map((x) => {\n                    return (\n                        <PersonaItemUI\n                            key={x.persona.identifier.toText()}\n                            data={x}\n                            onClick={() => setSelectedPersona(x)}\n                            currentPersona={selectedPersona}\n                            currentPersonaIdentifier={currentPersonaIdentifier}\n                            currentProfileIdentify={currentProfileIdentify}\n                            classes={{ unchecked: props.classes?.unchecked }}\n                        />\n                    )\n                })}\n            </Stack>\n            <Stack>{actionButton}</Stack>\n        </Stack>\n    )\n})\n\ninterface ActionContentProps extends withClasses<'button'> {\n    buttonText?: string\n    hint?: string\n    onClick(): Promise<void>\n}\n\nfunction ActionContent(props: ActionContentProps) {\n    const { buttonText, hint, onClick } = props\n    const { classes } = useStyles(undefined, { props })\n    if (!buttonText) return null\n    return (\n        <Stack gap={1.5} mt={1.5}>\n            {hint ? (\n                <Typography color={(t) => t.palette.maskColor.main} fontSize={14} lineHeight=\"18px\" height={36}>\n                    {hint}\n                </Typography>\n            ) : null}\n            <Stack direction=\"row\" justifyContent=\"center\">\n                <Button color=\"primary\" className={classes.button} onClick={onClick}>\n                    <Icons.Identity size={18} />\n                    {buttonText}\n                </Button>\n            </Stack>\n        </Stack>\n    )\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Link, Stack, Typography } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { LoadingStatus } from '../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    title: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.maskColor.main,\n    },\n    container: {\n        background:\n            'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.8) 100%), linear-gradient(90deg, rgba(28, 104, 243, 0.2) 0%, rgba(45, 41, 253, 0.2) 100%), #FFFFFF;',\n        minHeight: '196px',\n        justifyContent: 'space-between',\n        color: theme.palette.maskColor.main,\n    },\n    web3Icon: {\n        marginRight: 6,\n        marginTop: 2,\n    },\n    item1: {\n        color: theme.palette.maskColor.secondaryDark,\n        fontSize: '14px',\n        fontWeight: 400,\n    },\n    item2: {\n        color: theme.palette.maskColor.dark,\n        fontSize: '14px',\n        fontWeight: 500,\n        marginLeft: '2px',\n    },\n    linkOutIcon: {\n        color: theme.palette.maskColor.secondaryDark,\n    },\n}))\n\nexport interface PluginCardFrameMiniProps {\n    icon?: React.ReactNode\n    title?: React.ReactNode\n    provider?: React.ReactNode\n    providerLink?: string\n    children?: React.ReactNode\n}\n\nexport function PluginCardFrameMini({ icon, title, provider, providerLink, children }: PluginCardFrameMiniProps) {\n    const t = useSharedTrans()\n    const { classes, theme } = useStyles()\n\n    const PluginName = (\n        <Stack className={classes.title} direction=\"row\">\n            {icon ?? <Icons.Web3Profile className={classes.web3Icon} />}\n            <Typography fontSize={16} fontWeight={700} color={theme.palette.maskColor.main}>\n                {title ?? t.plugin_card_frame_default_title()}\n            </Typography>\n        </Stack>\n    )\n\n    return (\n        <Stack className={classes.container}>\n            <Stack direction=\"row\" justifyContent=\"space-between\" p={1.5}>\n                {PluginName}\n                <Stack direction=\"row\" gap={0.5}>\n                    <Typography className={classes.item1}>{t.plugin_card_frame_default_provided_by()}</Typography>\n                    <Typography className={classes.item2}>\n                        {provider ?? t.plugin_card_frame_default_provided_by_value()}\n                    </Typography>\n                    <Link\n                        underline=\"none\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        color=\"textPrimary\"\n                        href={providerLink ?? 'https://mask.io/'}\n                        width=\"22px\"\n                        height=\"22px\"\n                        style={{ alignSelf: 'center', marginLeft: '4px' }}>\n                        <Icons.LinkOut size={16} className={classes.linkOutIcon} />\n                    </Link>\n                </Stack>\n            </Stack>\n            <Stack flex={1} justifyContent=\"center\" alignItems=\"center\" p={1.5}>\n                {children ?? (\n                    <LoadingStatus iconSize={24} color={theme.palette.maskColor.main}>\n                        {t.plugin_card_frame_loading()}\n                    </LoadingStatus>\n                )}\n            </Stack>\n        </Stack>\n    )\n}\n","import { memo } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { Icons } from '@masknet/icons'\nimport type { PluginID } from '@masknet/shared-base'\nimport { useIsMinimalMode } from '@masknet/plugin-infra/content-script'\nimport { Stack, Typography } from '@mui/material'\nimport { makeStyles, ActionButton } from '@masknet/theme'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { setPluginMinimalModeEnabled } from '@masknet/plugin-infra/dom/context'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        display: 'inline-flex',\n        justifyContent: 'center',\n        borderRadius: 20,\n        width: 254,\n        height: 40,\n    },\n}))\n\ninterface PluginEnableBoundaryProps extends withClasses<'root'> {\n    pluginID: PluginID\n    children: React.ReactNode\n}\n\nexport const PluginEnableBoundary = memo<PluginEnableBoundaryProps>((props) => {\n    const t = useSharedTrans()\n    const { children, pluginID } = props\n    const { classes } = useStyles(undefined, { props })\n    const disabled = useIsMinimalMode(pluginID)\n\n    const [{ loading }, onEnablePlugin] = useAsyncFn(async () => {\n        await setPluginMinimalModeEnabled?.(pluginID, false)\n    }, [pluginID])\n\n    if (disabled) {\n        return (\n            <Stack alignItems=\"center\">\n                <Stack justifyContent=\"center\" alignItems=\"center\" width=\"100%\" boxSizing=\"border-box\">\n                    <Typography fontWeight={400} fontSize={14}>\n                        {t.enable_plugin_boundary_description()}\n                    </Typography>\n                </Stack>\n                <ActionButton\n                    loading={loading}\n                    startIcon={<Icons.Plugin size={18} />}\n                    className={classes.root}\n                    color=\"primary\"\n                    onClick={onEnablePlugin}\n                    sx={{ mt: 6 }}>\n                    {t.enable_plugin_boundary()}\n                </ActionButton>\n            </Stack>\n        )\n    }\n    return <>{children}</>\n})\n","import { makeStyles } from '@masknet/theme'\nimport { Box, Typography, type BoxProps, Button } from '@mui/material'\nimport { memo } from 'react'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    statusBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    text: {\n        color: theme.palette.maskColor.second,\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight: '36px',\n    },\n    button: {\n        marginTop: theme.spacing(1.5),\n        fontSize: '12px',\n        fontWeight: 700,\n        minWidth: theme.spacing(11),\n        height: theme.spacing(4),\n    },\n}))\n\ninterface Props extends BoxProps {\n    message?: string\n    actionLabel?: string\n    onRetry?(): void\n}\n\nexport const ReloadStatus = memo(function ReloadStatus({\n    className,\n    children,\n    message,\n    actionLabel,\n    onRetry,\n    ...rest\n}: Props) {\n    const { classes, cx } = useStyles()\n    const t = useSharedTrans()\n    return (\n        <Box className={cx(classes.statusBox, className)} p={2} {...rest}>\n            <Typography className={classes.text}>{message ?? t.load_failed()}</Typography>\n            <Button className={classes.button} onClick={() => onRetry?.()} variant=\"roundedContained\" size=\"medium\">\n                {actionLabel ?? t.load_retry()}\n            </Button>\n        </Box>\n    )\n})\n","import { makeStyles } from '@masknet/theme'\nimport { ImageIcon } from '../ImageIcon/index.js'\n\ninterface StyleProps {\n    size: number\n    badgeIconBorderColor?: string\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, props) => ({\n    root: {\n        position: 'relative',\n        display: 'flex',\n        height: props.size,\n        width: props.size,\n    },\n    mainIcon: {\n        display: 'block',\n    },\n    badgeIcon: {\n        position: 'absolute',\n        right: -6,\n        bottom: -4,\n        border: `1px solid ${props.badgeIconBorderColor ?? theme.palette.common.white}`,\n        borderRadius: '50%',\n    },\n}))\n\ninterface WalletIconProps extends withClasses<'root' | 'mainIcon'> {\n    size?: number\n    badgeSize?: number\n    mainIcon?: string\n    badgeIcon?: string\n    badgeIconBorderColor?: string\n    iconFilterColor?: string\n}\n\nexport function WalletIcon(props: WalletIconProps) {\n    const { size = 24, badgeSize = 14, mainIcon, badgeIcon, badgeIconBorderColor, iconFilterColor } = props\n    const { classes } = useStyles(\n        {\n            size: badgeSize > size ? badgeSize : size,\n            badgeIconBorderColor,\n        },\n        { props: { classes: props.classes } },\n    )\n\n    return (\n        <div\n            className={classes.root}\n            style={{\n                height: size,\n                width: size,\n            }}>\n            {mainIcon ? (\n                <ImageIcon className={classes.mainIcon} size={size} icon={mainIcon} iconFilterColor={iconFilterColor} />\n            ) : null}\n            {badgeIcon ? <ImageIcon className={classes.badgeIcon} size={badgeSize} icon={badgeIcon} /> : null}\n        </div>\n    )\n}\n","import { useCallback } from 'react'\nimport { type NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useClearTransactionsCallback<T extends NetworkPluginID>(pluginID?: T) {\n    const { account, chainId } = useChainContext()\n    const { Transaction } = useWeb3State(pluginID)\n\n    return useCallback(async () => {\n        if (!account) return\n        return Transaction?.clearTransactions?.(chainId, account)\n    }, [chainId, account, Transaction])\n}\n","import { useCallback } from 'react'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useRemoveTransactionCallback<T extends NetworkPluginID>(pluginID?: T) {\n    const { account, chainId } = useChainContext()\n    const { Transaction } = useWeb3State(pluginID)\n\n    return useCallback(\n        async (id: string) => {\n            if (!account) return\n            await Transaction?.removeTransaction?.(chainId, account, id)\n        },\n        [chainId, account, Transaction],\n    )\n}\n","import { filter, flatten, pick, uniq, values } from 'lodash-es'\nimport Aave from '@masknet/web3-constants/evm/aave.json'\nimport ArtBlocks from '@masknet/web3-constants/evm/artblocks.json'\nimport Gitcoin from '@masknet/web3-constants/evm/gitcoin.json'\nimport Lido from '@masknet/web3-constants/evm/lido.json'\nimport MaskBox from '@masknet/web3-constants/evm/mask-box.json'\nimport NftRedPacket from '@masknet/web3-constants/evm/nft-red-packet.json'\nimport RedPacket from '@masknet/web3-constants/evm/red-packet.json'\nimport Trader from '@masknet/web3-constants/evm/trader.json'\n\nconst collect = <T extends Record<string, Record<string, string | number>>>(\n    data: T,\n    fields: Array<keyof T>,\n): string[] => {\n    const groupedByFields = values(pick(data, fields))\n    const listOfAddresses = groupedByFields.map((v) => values(v))\n    const listOfAddress = flatten(listOfAddresses)\n    const collected = filter(uniq(listOfAddress), Boolean) as string[]\n    return collected.map((addr) => addr.toLowerCase())\n}\n\nconst domainAddressMap: Record<string, string[]> = {\n    'uniswap.org': collect(Trader, [\n        'UNISWAP_V2_ROUTER_ADDRESS',\n        'UNISWAP_V2_FACTORY_ADDRESS',\n        'UNISWAP_SWAP_ROUTER_ADDRESS',\n        'UNISWAP_V3_FACTORY_ADDRESS',\n        'UNISWAP_V3_QUOTER_ADDRESS',\n    ]),\n    'defikingdoms.com': collect(Trader, ['DEFIKINGDOMS_ROUTER_ADDRESS', 'DEFIKINGDOMS_FACTORY_ADDRESS']),\n    'app.openswap.one': collect(Trader, ['OPENSWAP_ROUTER_ADDRESS', 'OPENSWAP_FACTORY_ADDRESS']),\n    'viper.exchange': collect(Trader, ['VENOMSWAP_ROUTER_ADDRESS', 'VENOMSWAP_FACTORY_ADDRESS']),\n    'viperswap.one': collect(Trader, ['VENOMSWAP_ROUTER_ADDRESS', 'VENOMSWAP_FACTORY_ADDRESS']),\n    'www.sushi.com': collect(Trader, ['SUSHISWAP_ROUTER_ADDRESS', 'SUSHISWAP_FACTORY_ADDRESS']),\n    'quickswap.exchange': collect(Trader, ['QUICKSWAP_ROUTER_ADDRESS', 'QUICKSWAP_FACTORY_ADDRESS']),\n    'pancakeswap.finance': collect(Trader, ['PANCAKESWAP_ROUTER_ADDRESS', 'PANCAKESWAP_FACTORY_ADDRESS']),\n    'dodoex.io': collect(Trader, ['DODO_EXCHANGE_PROXY_ADDRESS']),\n    'www.bancor.network': collect(Trader, ['BANCOR_EXCHANGE_PROXY_ADDRESS']),\n    'traderjoexyz.com': collect(Trader, ['TRADERJOE_ROUTER_ADDRESS', 'TRADERJOE_FACTORY_ADDRESS']),\n    'openocean.finance': collect(Trader, ['OPENOCEAN_EXCHANGE_PROXY_ADDRESS']),\n    'pangolin.exchange': collect(Trader, ['PANGOLIN_ROUTER_ADDRESS', 'PANGOLIN_FACTORY_ADDRESS']),\n    'wannaswap.finance': collect(Trader, [\n        'WANNASWAP_ROUTER_V2_ADDRESS',\n        'WANNASWAP_ROUTER_ADDRESS',\n        'WANNASWAP_FACTORY_ADDRESS',\n    ]),\n    'yumiswap.com': collect(Trader, ['YUMISWAP_ROUTER_ADDRESS', 'YUMISWAP_FACTORY_ADDRESS']),\n    'www.trisolaris.io': collect(Trader, ['TRISOLARIS_ROUTER_ADDRESS', 'TRISOLARIS_FACTORY_ADDRESS']),\n    'mdex.com': collect(Trader, ['MDEX_ROUTER_ADDRESS', 'MDEX_FACTORY_ADDRESS']),\n    'aave.com': collect(Aave, ['AAVE_LENDING_POOL_ADDRESSES_PROVIDER_CONTRACT_ADDRESS']),\n    'www.artblocks.io': collect(ArtBlocks, ['GEN_ART_721_MINTER']),\n    'gitcoin.co': collect(Gitcoin as Pick<typeof Gitcoin, 'GITCOIN_ETH_ADDRESS' | 'BULK_CHECKOUT_ADDRESS'>, [\n        'GITCOIN_ETH_ADDRESS',\n        'BULK_CHECKOUT_ADDRESS',\n    ]),\n    'lido.fi': collect(Lido, ['LIDO_stETH_ADDRESS', 'LIDO_REFERRAL_ADDRESS']),\n    'mask.io': [\n        ...collect(RedPacket, [\n            'HAPPY_RED_PACKET_ADDRESS_V1',\n            'HAPPY_RED_PACKET_ADDRESS_V2',\n            'HAPPY_RED_PACKET_ADDRESS_V3',\n            'HAPPY_RED_PACKET_ADDRESS_V4',\n        ]),\n        ...collect(NftRedPacket, ['RED_PACKET_NFT_ADDRESS']),\n        ...collect(MaskBox, ['MASK_BOX_CONTRACT_ADDRESS']),\n    ],\n}\n\n// Not very common usage, no need to create a map of address-to-domain\nexport function getContractOwnerDomain(address?: string) {\n    if (!address) return address\n    const addr = address.toLowerCase()\n    const pair = Object.entries(domainAddressMap).find(([, addresses]) => {\n        return addresses.includes(addr)\n    })\n    return pair ? pair[0] : addr\n}\n","import { forwardRef, useCallback, useMemo, useState, useEffect } from 'react'\nimport { useAsync } from 'react-use'\nimport { noop } from 'lodash-es'\nimport { format } from 'date-fns'\nimport { Icons } from '@masknet/icons'\nimport { useChainContext, useWeb3Others, useWeb3State } from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { makeStyles, MaskColorVar } from '@masknet/theme'\nimport {\n    isSameAddress,\n    type RecentTransactionComputed,\n    TransactionStatusType,\n    type Transaction,\n} from '@masknet/web3-shared-base'\nimport { getContractOwnerDomain } from '@masknet/web3-shared-evm'\nimport { Grid, type GridProps, Link, List, ListItem, type ListProps, Stack, Typography } from '@mui/material'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    list: {\n        borderRadius: 8,\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n        padding: 0,\n    },\n    listItem: {\n        height: 52,\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1, 1),\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    transaction: {\n        width: '100%',\n    },\n    methodName: {\n        fontWeight: 500,\n        textTransform: 'capitalize',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n    },\n    timestamp: {\n        lineHeight: '18px',\n    },\n    cell: {\n        fontSize: 14,\n        display: 'flex',\n        alignItems: 'center',\n        color: theme.palette.text.primary,\n        boxSizing: 'border-box',\n    },\n    linkText: {\n        lineHeight: '18px',\n    },\n    link: {\n        display: 'flex',\n    },\n    linkIcon: {\n        // TODO: replace with theme color\n        color: theme.palette.mode === 'dark' ? '#F5F5F5' : '#07101B',\n        width: 17.5,\n        height: 17.5,\n        marginLeft: theme.spacing(0.5),\n    },\n    clear: {\n        color: MaskColorVar.blue,\n        cursor: 'pointer',\n    },\n}))\n\nconst statusTextColorMap: Record<TransactionStatusType, string> = {\n    [TransactionStatusType.NOT_DEPEND]: '#FFB915',\n    [TransactionStatusType.SUCCEED]: '#60DFAB',\n    [TransactionStatusType.FAILED]: '#FF5F5F',\n}\n\ninterface TransactionProps extends GridProps {\n    chainId: Web3Helper.ChainIdAll\n    transaction: RecentTransactionComputed<Web3Helper.ChainIdAll, Web3Helper.TransactionAll>\n    onClear?(tx: RecentTransactionComputed<Web3Helper.ChainIdAll, Web3Helper.TransactionAll>): void\n}\nfunction Transaction({ chainId, transaction: tx, onClear = noop, ...rest }: TransactionProps) {\n    const t = useSharedTrans()\n    const { classes, theme } = useStyles()\n\n    const statusTextMap: Record<TransactionStatusType, string> = {\n        [TransactionStatusType.NOT_DEPEND]: t.recent_transaction_pending(),\n        [TransactionStatusType.SUCCEED]: t.recent_transaction_success(),\n        [TransactionStatusType.FAILED]: t.recent_transaction_failed(),\n    }\n\n    const Others = useWeb3Others()\n    const { TransactionFormatter, TransactionWatcher } = useWeb3State()\n\n    const address = ((tx._tx as Transaction<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll>).to || '').toLowerCase()\n\n    const { value: functionName } = useAsync(async () => {\n        const formattedTransaction = await TransactionFormatter?.formatTransaction(chainId, tx._tx)\n        return formattedTransaction?.title ?? 'Contract Interaction'\n    }, [TransactionFormatter])\n\n    const handleClear = useCallback(() => {\n        onClear(tx)\n    }, [onClear, tx])\n\n    const domainOrAddress = useMemo(() => getContractOwnerDomain(address), [address])\n\n    const [txStatus, setTxStatus] = useState(tx.status)\n\n    useEffect(() => {\n        const off = TransactionWatcher?.emitter.on('progress', (chainId, id, status, transaction) => {\n            setTxStatus(status)\n        })\n\n        return () => {\n            off?.()\n        }\n    }, [tx.id, TransactionWatcher])\n\n    return (\n        <Grid container {...rest}>\n            <Grid item className={classes.cell} textAlign=\"left\" md={4}>\n                <Stack overflow=\"hidden\">\n                    <Typography\n                        className={classes.methodName}\n                        title={functionName || ''}\n                        variant=\"body1\"\n                        fontWeight={500}>\n                        {functionName}\n                    </Typography>\n                    <Typography className={classes.timestamp} variant=\"body1\" color={theme.palette.text.secondary}>\n                        {format(tx.createdAt, 'yyyy.MM.dd HH:mm')}\n                    </Typography>\n                </Stack>\n            </Grid>\n            <Grid item className={classes.cell} flexGrow={1} md={4} justifyContent=\"right\">\n                <Typography variant=\"body1\" className={classes.linkText}>\n                    {address && isSameAddress(domainOrAddress, address)\n                        ? Others.formatAddress(address, 4)\n                        : domainOrAddress || address}\n                </Typography>\n                <Link\n                    className={classes.link}\n                    href={Others.explorerResolver.transactionLink?.(chainId, tx.id)}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <Icons.LinkOut className={classes.linkIcon} />\n                </Link>\n            </Grid>\n            <Grid item className={classes.cell} md={2} justifyContent=\"center\">\n                <Typography fontWeight={400} justifyContent=\"center\" color={statusTextColorMap[txStatus]} fontSize={14}>\n                    {statusTextMap[txStatus]}\n                </Typography>\n            </Grid>\n            <Grid item className={classes.cell} md={2} justifyContent=\"right\">\n                {txStatus === TransactionStatusType.NOT_DEPEND ? (\n                    <Typography fontWeight={300} className={classes.clear} onClick={handleClear}>\n                        {t.wallet_status_pending_clear()}\n                    </Typography>\n                ) : null}\n            </Grid>\n        </Grid>\n    )\n}\n\ninterface Props extends ListProps {\n    transactions: Array<RecentTransactionComputed<Web3Helper.ChainIdAll, Web3Helper.TransactionAll>>\n    onClear?(tx: RecentTransactionComputed<Web3Helper.ChainIdAll, Web3Helper.TransactionAll>): void\n}\n\nexport const TransactionList = forwardRef<HTMLUListElement, Props>(\n    ({ className, transactions, onClear = noop, ...rest }, ref) => {\n        const { classes, cx } = useStyles()\n        const { chainId } = useChainContext()\n        if (!transactions.length) return null\n        return (\n            <List className={cx(classes.list, className)} {...rest} ref={ref}>\n                {transactions.map((tx) => (\n                    <ListItem key={tx.id} className={classes.listItem}>\n                        <Transaction\n                            className={classes.transaction}\n                            transaction={tx}\n                            chainId={chainId}\n                            onClear={onClear}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        )\n    },\n)\n","import {\n    useClearTransactionsCallback,\n    useRemoveTransactionCallback,\n    useRecentTransactions,\n} from '@masknet/web3-hooks-base'\nimport { makeStyles, MaskColorVar } from '@masknet/theme'\nimport { TransactionStatusType } from '@masknet/web3-shared-base'\nimport { Typography } from '@mui/material'\nimport { useState } from 'react'\nimport { TransactionList } from './TransactionList.js'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    summaryWrapper: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: theme.spacing(1, 1),\n    },\n    pendingSummary: {\n        cursor: 'default',\n        color: theme.palette.maskColor.warn,\n    },\n    clearAll: {\n        cursor: 'pointer',\n        color: theme.palette.mode === 'light' ? MaskColorVar.blue : theme.palette.common.white,\n    },\n    hide: {\n        display: 'none',\n    },\n}))\n\nexport function usePendingTransactions() {\n    const { classes, cx } = useStyles()\n    const t = useSharedTrans()\n\n    // #region recent pending transactions\n    const pendingTransactions = useRecentTransactions(undefined, TransactionStatusType.NOT_DEPEND)\n\n    // frozenTxes would not be reactive to pendingTransactions,\n    // it would be recreated then the list shows up.\n    const [meltedTxHashes, setMeltedTxHashes] = useState<string[]>([])\n\n    const clearRecentTxes = useClearTransactionsCallback()\n    const removeRecentTx = useRemoveTransactionCallback()\n\n    const transactions = pendingTransactions.slice(0, 5).filter((tx) => !meltedTxHashes.includes(tx.id))\n    // #endregion\n    const summary = pendingTransactions.length ? (\n        <section className={classes.summaryWrapper}>\n            <div className={cx(pendingTransactions.length ? '' : classes.hide)}>\n                {pendingTransactions.length ? (\n                    <Typography className={classes.pendingSummary} variant=\"body2\" mr={1} fontWeight={700}>\n                        {t.wallet_status_pending({ count: pendingTransactions.length })}\n                    </Typography>\n                ) : null}\n            </div>\n            {pendingTransactions.length ? (\n                <Typography className={classes.clearAll} onClick={clearRecentTxes} fontWeight={700}>\n                    {t.wallet_status_pending_clear_all()}\n                </Typography>\n            ) : null}\n        </section>\n    ) : null\n\n    const transactionList =\n        transactions.length > 0 ? (\n            <TransactionList\n                transactions={transactions}\n                onClear={(tx) => {\n                    setMeltedTxHashes((list) => [...list, tx.id])\n                    removeRecentTx(tx.id)\n                }}\n            />\n        ) : null\n\n    return { summary, transactionList }\n}\n","import { Button, Link, Typography, useTheme, ThemeProvider } from '@mui/material'\nimport { MaskColors, MaskLightTheme, getMaskColor, makeStyles } from '@masknet/theme'\nimport { Sniffings } from '@masknet/shared-base'\nimport {\n    useChainContext,\n    useNetworkDescriptor,\n    useProviderDescriptor,\n    useReverseAddress,\n    useNativeToken,\n    useWallet,\n    useWeb3Connection,\n    useBalance,\n    useChainIdValid,\n    useWeb3Others,\n} from '@masknet/web3-hooks-base'\nimport {\n    FormattedAddress,\n    WalletIcon,\n    SelectProviderModal,\n    useSharedTrans,\n    WalletStatusModal,\n    CopyButton,\n} from '@masknet/shared'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { formatBalance } from '@masknet/web3-shared-base'\nimport { delay } from '@masknet/kit'\nimport { Icons } from '@masknet/icons'\nimport { usePendingTransactions } from './usePendingTransactions.js'\n\nconst useStyles = makeStyles<{\n    contentBackground?: string\n    textColor?: string\n    disableChange?: boolean\n    withinRiskWarningDialog?: boolean\n}>()((theme, { contentBackground, disableChange, withinRiskWarningDialog, textColor }) => ({\n    currentAccount: {\n        padding: theme.spacing(0, 1.5),\n        marginBottom: withinRiskWarningDialog ? '7px' : theme.spacing(2),\n        display: 'flex',\n        background:\n            contentBackground ??\n            (Sniffings.is_dashboard_page ? getMaskColor(theme).primaryBackground2 : theme.palette.background.default),\n        borderRadius: 8,\n        alignItems: 'center',\n        height: disableChange ? 60 : 82,\n    },\n    dashboardBackground: {\n        background: theme.palette.background.default,\n    },\n    accountInfo: {\n        fontSize: 16,\n        flexGrow: 1,\n        marginLeft: theme.spacing(1.5),\n    },\n    accountName: {\n        color: !Sniffings.is_dashboard_page ? theme.palette.maskColor.dark : textColor,\n        fontWeight: 700,\n        marginRight: 5,\n        lineHeight: '18px',\n    },\n    balance: {\n        color: !Sniffings.is_dashboard_page ? theme.palette.maskColor.dark : textColor,\n        paddingTop: 2,\n        lineHeight: '18px',\n    },\n    infoRow: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    actionButton: {\n        fontSize: 12,\n        color: 'white',\n        backgroundColor: theme.palette.maskColor.dark,\n        marginLeft: theme.spacing(1),\n        padding: theme.spacing(1, 2),\n        '&:hover': {\n            backgroundColor: theme.palette.maskColor.dark,\n        },\n    },\n    link: {\n        fontSize: 14,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    connectButtonWrapper: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: theme.spacing(2, 0),\n    },\n    icon: {\n        width: 17.5,\n        height: 17.5,\n        marginRight: theme.spacing(0.5),\n    },\n    copyIcon: {\n        color: Sniffings.is_dashboard_page ? textColor : theme.palette.maskColor.dark,\n    },\n    linkIcon: {\n        color: Sniffings.is_dashboard_page ? textColor : theme.palette.maskColor?.dark,\n    },\n    statusBox: {\n        position: 'relative',\n    },\n}))\nexport interface WalletStatusBox {\n    disableChange?: boolean\n    withinRiskWarningDialog?: boolean\n    showPendingTransaction?: boolean\n    closeDialog?: () => void\n}\nexport function WalletStatusBox(props: WalletStatusBox) {\n    const t = useSharedTrans()\n    const providerDescriptor = useProviderDescriptor<'all'>()\n    const theme = useTheme()\n    const { classes, cx } = useStyles({\n        contentBackground: providerDescriptor?.backgroundGradient ?? theme.palette.maskColor.publicBg,\n        disableChange: props.disableChange,\n        withinRiskWarningDialog: props.withinRiskWarningDialog,\n        textColor:\n            providerDescriptor?.type === ProviderType.MaskWallet\n                ? theme.palette.maskColor.dark\n                : theme.palette.text.primary,\n    })\n\n    const Web3 = useWeb3Connection()\n    const Others = useWeb3Others()\n    const { account, chainId } = useChainContext()\n\n    const chainIdValid = useChainIdValid()\n    const wallet = useWallet()\n    const { data: balance = '0', isLoading: loadingBalance } = useBalance()\n    const { data: nativeToken, isLoading: loadingNativeToken } = useNativeToken()\n    const networkDescriptor = useNetworkDescriptor()\n    const { data: domain } = useReverseAddress(undefined, account)\n    const { summary: pendingSummary, transactionList } = usePendingTransactions()\n\n    if (!Others.isValidAddress(account)) {\n        return (\n            <section className={classes.connectButtonWrapper}>\n                <Button\n                    className={cx(classes.actionButton)}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    size=\"small\"\n                    onClick={() => SelectProviderModal.open()}>\n                    {t.plugin_wallet_on_connect()}\n                </Button>\n            </section>\n        )\n    }\n\n    return (\n        <>\n            <section\n                className={cx(\n                    classes.statusBox,\n                    classes.currentAccount,\n                    Sniffings.is_dashboard_page ? classes.dashboardBackground : '',\n                )}>\n                <WalletIcon\n                    size={30}\n                    badgeSize={12}\n                    mainIcon={providerDescriptor?.icon}\n                    badgeIcon={chainIdValid ? networkDescriptor?.icon : undefined}\n                />\n                <div className={classes.accountInfo}>\n                    {ProviderType.MaskWallet === providerDescriptor?.type ? (\n                        <Typography className={classes.accountName}>{wallet?.name}</Typography>\n                    ) : null}\n                    <div className={classes.infoRow}>\n                        <Typography className={classes.accountName}>\n                            {domain ? (\n                                Others.formatDomainName(domain)\n                            ) : (\n                                <FormattedAddress address={account} size={4} formatter={Others.formatAddress} />\n                            )}\n                        </Typography>\n                        <ThemeProvider theme={MaskLightTheme}>\n                            <CopyButton\n                                className={cx(classes.icon, classes.copyIcon)}\n                                color={MaskColors.light.maskColor.dark}\n                                size={17.5}\n                                text={account}\n                            />\n                        </ThemeProvider>\n                        {chainIdValid ? (\n                            <Link\n                                className={classes.link}\n                                href={Others.explorerResolver.addressLink(chainId, account) ?? ''}\n                                target=\"_blank\"\n                                title={t.plugin_wallet_view_on_explorer()}\n                                rel=\"noopener noreferrer\">\n                                <Icons.LinkOut className={cx(classes.icon, classes.linkIcon)} />\n                            </Link>\n                        ) : null}\n                    </div>\n\n                    {props.withinRiskWarningDialog ? null : (\n                        <div className={classes.infoRow}>\n                            <Typography className={classes.balance}>\n                                {loadingNativeToken || loadingBalance\n                                    ? '-'\n                                    : `${formatBalance(balance, nativeToken?.decimals, 3)} ${nativeToken?.symbol}`}\n                            </Typography>\n                        </div>\n                    )}\n                </div>\n\n                {!props.disableChange && (\n                    <section>\n                        <Button\n                            className={cx(classes.actionButton)}\n                            variant=\"contained\"\n                            size=\"small\"\n                            onClick={async () => {\n                                props.closeDialog?.()\n                                // TODO: remove this after global dialog be implement\n                                await delay(500)\n                                WalletStatusModal.close()\n                                await Web3.disconnect()\n                            }}>\n                            {t.plugin_wallet_disconnect()}\n                        </Button>\n                        <Button\n                            className={cx(classes.actionButton)}\n                            variant=\"contained\"\n                            size=\"small\"\n                            onClick={() => {\n                                SelectProviderModal.open()\n                                props.closeDialog?.()\n                            }}>\n                            {t.wallet_status_button_change()}\n                        </Button>\n                    </section>\n                )}\n            </section>\n            {props.showPendingTransaction ? (\n                <div>\n                    {pendingSummary}\n                    {transactionList}\n                </div>\n            ) : null}\n        </>\n    )\n}\n","import { SingletonModal } from '@masknet/shared-base'\nimport type { SelectProviderModalOpenProps, SelectProviderModalCloseProps } from './SelectProviderModal/index.js'\nimport type { WalletConnectQRCodeOpenProps } from './WalletConnectQRCodeModal/index.js'\nimport type { WalletRiskWarningModalOpenProps } from './WalletRiskWarningModal/index.js'\nimport type { ConnectWalletModalOpenProps, ConnectWalletModalCloseProps } from './ConnectWalletModal/index.js'\nimport type { LeavePageConfirmModalOpenProps } from './LeavePageConfirmModal/index.js'\nimport type {\n    ApplicationBoardModalOpenProps,\n    ApplicationBoardSettingsModalOpenProps,\n} from './ApplicationBoardModal/index.js'\nimport type { GasSettingModalOpenOrCloseProps } from './GasSettingModal/index.js'\nimport type { ConfirmModalCloseProps, ConfirmModalOpenProps } from './ConfirmModal/index.js'\nimport type { ConfirmDialogOpenProps } from './ConfirmDialog/index.js'\nimport type { TransactionConfirmModalOpenProps } from './TokenTransactionConfirmModal/index.js'\nimport type { SelectNonFungibleContractModalOpenProps } from './SelectNonFungibleContractModal/index.js'\nimport type {\n    SelectFungibleTokenModalOpenProps,\n    SelectFungibleTokenModalCloseProps,\n} from './SelectFungibleTokenModal/index.js'\nimport type {\n    SelectGasSettingsModalCloseProps,\n    SelectGasSettingsModalOpenProps,\n} from './SelectAdvancedSettingsDialog/index.js'\nimport type { AddCollectiblesModalCloseProps, AddCollectiblesModalOpenProps } from './AddCollectiblesModal/index.js'\nimport type { PersonaSelectPanelModalOpenProps } from './PersonaSelectPanelModal/index.js'\nimport type { ShareSelectNetworkModalOpenProps } from './ShareSelectNetwork/index.js'\n\nexport const WalletConnectQRCodeModal = new SingletonModal<WalletConnectQRCodeOpenProps>()\nexport const SelectProviderModal = new SingletonModal<SelectProviderModalOpenProps, SelectProviderModalCloseProps>()\nexport const WalletStatusModal = new SingletonModal()\nexport const WalletRiskWarningModal = new SingletonModal<WalletRiskWarningModalOpenProps>()\nexport const ConnectWalletModal = new SingletonModal<ConnectWalletModalOpenProps, ConnectWalletModalCloseProps>()\nexport const LeavePageConfirmModal = new SingletonModal<LeavePageConfirmModalOpenProps>()\nexport const ApplicationBoardModal = new SingletonModal<ApplicationBoardModalOpenProps>()\nexport const ApplicationBoardSettingsModal = new SingletonModal<ApplicationBoardSettingsModalOpenProps>()\nexport const GasSettingModal = new SingletonModal<GasSettingModalOpenOrCloseProps, GasSettingModalOpenOrCloseProps>()\nexport const TransactionConfirmModal = new SingletonModal<TransactionConfirmModalOpenProps>()\nexport const TransactionSnackbar = new SingletonModal()\nexport const ConfirmModal = new SingletonModal<ConfirmModalOpenProps, ConfirmModalCloseProps>()\nexport const ConfirmDialog = new SingletonModal<ConfirmDialogOpenProps, boolean>()\nexport const SelectNonFungibleContractModal = new SingletonModal<SelectNonFungibleContractModalOpenProps>()\nexport const SelectGasSettingsModal = new SingletonModal<\n    SelectGasSettingsModalOpenProps,\n    SelectGasSettingsModalCloseProps\n>()\nexport const AddCollectiblesModal = new SingletonModal<AddCollectiblesModalOpenProps, AddCollectiblesModalCloseProps>()\nexport const SelectFungibleTokenModal = new SingletonModal<\n    SelectFungibleTokenModalOpenProps,\n    SelectFungibleTokenModalCloseProps\n>()\n\nexport const PersonaSelectPanelModal = new SingletonModal<PersonaSelectPanelModalOpenProps>()\n\nexport const ShareSelectNetworkModal = new SingletonModal<ShareSelectNetworkModalOpenProps>()\n\nexport { ApplicationSettingTabs } from './ApplicationBoardModal/ApplicationBoardDialog.js'\n","import { Fragment } from 'react'\nimport { identity } from 'lodash-es'\n\nexport interface FormattedAddressProps {\n    address?: string\n    size?: number\n    formatter?: (address: string, size?: number) => string\n}\n\nexport function FormattedAddress({ address, size, formatter = identity }: FormattedAddressProps) {\n    if (!address) return null\n    return <Fragment>{formatter(address, size)}</Fragment>\n}\n","import type { ReactNode } from 'react'\nimport { Icons, type GeneratedIcon } from '@masknet/icons'\nimport { EnhanceableSite } from '@masknet/shared-base'\n\nexport const SOCIAL_MEDIA_ICON_MAPPING: Record<EnhanceableSite | string, ReactNode> = {\n    [EnhanceableSite.Twitter]: <Icons.TwitterX />,\n    [EnhanceableSite.Facebook]: <Icons.FacebookColored />,\n    [EnhanceableSite.Minds]: <Icons.Minds />,\n    [EnhanceableSite.Instagram]: <Icons.InstagramColored />,\n    [EnhanceableSite.OpenSea]: <Icons.OpenSeaColored />,\n    [EnhanceableSite.Mirror]: <Icons.Mirror />,\n    [EnhanceableSite.Localhost]: null,\n}\n\nexport const SOCIAL_MEDIA_ROUND_ICON_MAPPING: Record<EnhanceableSite | string, GeneratedIcon | null> = {\n    [EnhanceableSite.Twitter]: Icons.TwitterXRound,\n    [EnhanceableSite.Facebook]: Icons.FacebookRound,\n    [EnhanceableSite.Minds]: Icons.MindsRound,\n    [EnhanceableSite.Instagram]: Icons.InstagramRoundColored,\n    [EnhanceableSite.OpenSea]: Icons.OpenSeaColored,\n    [EnhanceableSite.Mirror]: Icons.Mirror,\n    [EnhanceableSite.Localhost]: null,\n}\n\nexport enum RSS3_NFT_SITE_KEY {\n    TWITTER = '_nfts',\n    FACEBOOK = '_facebook_nfts',\n    INSTAGRAM = '_instagram_nfts',\n}\n\nexport const EnhanceableSite_RSS3_NFT_SITE_KEY_map: Partial<Record<EnhanceableSite, RSS3_NFT_SITE_KEY>> = {\n    [EnhanceableSite.Facebook]: RSS3_NFT_SITE_KEY.FACEBOOK,\n    [EnhanceableSite.Twitter]: RSS3_NFT_SITE_KEY.TWITTER,\n    [EnhanceableSite.Instagram]: RSS3_NFT_SITE_KEY.INSTAGRAM,\n}\n\nexport const PERSONA_AVATAR_DB_NAMESPACE = 'com.maskbook.persona.avatar.storage'\n\nexport enum PopupHomeTabType {\n    SocialAccounts = 'Social Accounts',\n    ConnectedWallets = 'Connected Wallets',\n}\n","import { useCallback, useEffect } from 'react'\nimport { useAsyncRetry } from 'react-use'\nimport type { IdentityResolved } from '@masknet/plugin-infra/content-script'\nimport {\n    DashboardRoutes,\n    type PersonaInformation,\n    isSamePersona,\n    isSameProfile,\n    resolveNextIDIdentityToProfile,\n    MaskMessages,\n    type ECKeyIdentifier,\n} from '@masknet/shared-base'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { LeavePageConfirmModal, PersonaSelectPanelModal } from '../UI/modals/index.js'\nimport { useSharedTrans } from '../locales/index.js'\nimport type { PersonaConnectStatus } from '../types.js'\n\nconst DEFAULT_PERSONA_CONNECT_STATUS: PersonaConnectStatus = {\n    action: undefined,\n    currentPersona: undefined,\n    connected: false,\n    hasPersona: false,\n    verified: false,\n    proof: undefined,\n}\n\nexport function useCurrentPersonaConnectStatus(\n    personas: readonly PersonaInformation[],\n    currentPersonaIdentifier?: ECKeyIdentifier,\n    openDashboard?: (route?: DashboardRoutes, search?: string) => void,\n    identity?: IdentityResolved,\n) {\n    const t = useSharedTrans()\n\n    const create = useCallback((target?: string, position?: 'center' | 'top-right', _?: boolean, direct = false) => {\n        if (direct) {\n            openDashboard?.(DashboardRoutes.SignUpPersona)\n        } else {\n            LeavePageConfirmModal.open({\n                openDashboard,\n                info: {\n                    target: 'dashboard',\n                    url: target ?? DashboardRoutes.SignUpPersona,\n                    text: t.applications_create_persona_hint(),\n                    title: t.applications_create_persona_title(),\n                    actionHint: t.applications_create_persona_action(),\n                    position,\n                },\n            })\n        }\n    }, [])\n\n    const openPersonListDialog = useCallback(\n        (finishTarget?: string, position?: 'center' | 'top-right', enableVerify = true) => {\n            PersonaSelectPanelModal.open({\n                finishTarget,\n                position,\n                enableVerify,\n            })\n        },\n        [],\n    )\n\n    const {\n        value = DEFAULT_PERSONA_CONNECT_STATUS,\n        loading,\n        error,\n        retry,\n    } = useAsyncRetry<PersonaConnectStatus>(async () => {\n        const currentPersona = personas.find((x) => isSamePersona(x, currentPersonaIdentifier))\n        const currentProfile = currentPersona?.linkedProfiles.find((x) =>\n            isSameProfile(x.identifier, identity?.identifier),\n        )\n\n        // handle not have persona\n        if (!currentPersona || !personas.length) {\n            return {\n                action: create,\n                currentPersona: undefined,\n                connected: false,\n                hasPersona: false,\n            }\n        }\n\n        // handle had persona but not connect current site\n        if (!currentProfile) {\n            return {\n                action: openPersonListDialog,\n                currentPersona,\n                connected: false,\n                hasPersona: true,\n            }\n        }\n\n        // handle had persona and connected current site, then check the nextID\n        try {\n            const nextIDInfo = await NextIDProof.queryExistedBindingByPersona(currentPersona.identifier.publicKeyAsHex)\n            const verifiedProfile = nextIDInfo?.proofs.find(\n                (x) =>\n                    isSameProfile(resolveNextIDIdentityToProfile(x.identity, x.platform), currentProfile?.identifier) &&\n                    x.is_valid,\n            )\n\n            return {\n                action: verifiedProfile ? undefined : openPersonListDialog,\n                currentPersona,\n                connected: true,\n                hasPersona: true,\n                verified: !!verifiedProfile,\n                proof: nextIDInfo?.proofs,\n            }\n        } catch {\n            return {\n                action: openPersonListDialog,\n                currentPersona,\n                connected: true,\n                hasPersona: true,\n            }\n        }\n    }, [currentPersonaIdentifier, personas, identity?.identifier, create, openPersonListDialog])\n\n    useEffect(() => {\n        const cleanPersonaChangedListener = MaskMessages.events.ownPersonaChanged.on(retry)\n        const cleanProofsChangedListener = MaskMessages.events.ownProofChanged.on(retry)\n        return () => {\n            cleanPersonaChangedListener()\n            cleanProofsChangedListener()\n        }\n    }, [retry])\n\n    return { value, loading, retry, error }\n}\n","import { useEffect } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { EMPTY_LIST, type BindingProof, MaskMessages, Sniffings } from '@masknet/shared-base'\n\nexport function usePersonaProofs(publicKey?: string) {\n    const result = useQuery<BindingProof[], Error>({\n        queryKey: ['next-id', 'bindings-by-persona', publicKey],\n        queryFn: async () => {\n            if (Sniffings.is_popup_page) await NextIDProof.clearPersonaQueryCache(publicKey!)\n            const binding = await NextIDProof.queryExistedBindingByPersona(publicKey!)\n            return binding?.proofs ?? EMPTY_LIST\n        },\n    })\n    const { refetch } = result\n\n    useEffect(() => {\n        return MaskMessages.events.ownProofChanged.on(async () => {\n            // Clearing the query cache when the proof relation changes\n            if (publicKey) {\n                await NextIDProof.clearPersonaQueryCache(publicKey)\n            }\n            refetch()\n        })\n    }, [publicKey])\n\n    return result\n}\n","export const LightColor = {\n    bg: '##F9F9F9',\n    primary: '#1c68f3',\n    primaryContrastText: '#ffffff',\n    background: '#FFFFFF',\n    secondary: '#e8f0fe',\n    secondaryContrastText: '#1c68f3',\n    input: '#F6F6F8',\n    primaryBackground: '#ffffff',\n    primaryBackground2: '#FBFBFC',\n    secondaryBackground: '#f9fafa',\n    lightBackground: '#F9FAFA',\n    mainBackground: '#ffffff',\n    suspensionBackground: 'rgba(249, 250, 250, 0.8)',\n    normalBackground: '#F3F3F4',\n    twitterBackground: '#F7F9FA',\n    twitterBackgroundHover: '#EFF1F2',\n    twitterInputBackground: '#F6F8F8',\n    twitterButton: '#111418',\n    twitterButtonText: '#ffffff',\n    twitterBlue: '#1C68F3',\n    twitterBorderLine: '#EDF1F2',\n    twitterSecond: '#7B8192',\n    twitterMain: '#0F1419',\n    twitterBottom: '#ffffff',\n    twitterInfoBackground: '#AFC3E1',\n    twitterInfo: '#8CA3C7',\n    twitterBg: '#F6F8F8',\n    twitterTooltipBg: 'rgba(0,0,0,.6)',\n    twitterInput: '#EDF1F2',\n    twitterLine: '#EBEEF0',\n    redMain: '#ff5f5f',\n    redLight: '#ffafaf',\n    redContrastText: '#ffffff',\n\n    greenMain: '#3DC233',\n    greenLight: '#e6f6f0',\n\n    orangeMain: '#ffb915',\n    orangeLight: '#faf0d8',\n\n    iconLight: '#a6a9b6',\n\n    divider: '#eff3f4',\n\n    border: '#F3F3F4',\n    borderSecondary: '#536471',\n\n    textPrimary: '#111432',\n    textSecondary: '#7b8192',\n\n    secondaryInfoText: '#AFC3E1',\n    normalText: '#7B8192',\n    normalTextLight: 'rgba(255, 255, 255, 0.8)',\n    infoBackground: 'rgba(175, 195, 225, 0.15)',\n    success: '#60DFAB',\n    warning: '#FFB915',\n    blue: '#1C68F3',\n    textLink: '#1C68F3',\n    lineLight: '#E4E8F1',\n    lineLighter: '#E9E9EA',\n    textLight: '#A6A9B6',\n    lightestBackground: '#FFFFFF',\n    linkText: '#1C68F3',\n    twitter: '#2CA4EF',\n    facebook: '#4267B2',\n    white: '#ffffff',\n    bottom: '#F9FAFA',\n    main: '#1C68F3',\n    errorBackground: 'rgba(255, 95, 95, 0.15)',\n    tooltipBackground: '#ffffff',\n    warningBackground: 'rgba(255, 185, 21, 0.1)',\n    cyberconnectPrimary: '#000000',\n    errorPlugin: '#FF3545',\n    buttonPluginBackground: '#07101B',\n    textPluginColor: '#07101B',\n    buttonPluginColor: '#FFFFFF',\n}\nexport const DarkColor: typeof LightColor = {\n    bg: '#1C1C1C',\n    primary: '#1c68f3',\n    primaryContrastText: '#ffffff',\n    background: '#15171A',\n    secondary: '#242e57',\n    secondaryContrastText: '#ffffff',\n    input: '#282B49',\n    primaryBackground: '#212442',\n    primaryBackground2: '#212442',\n    secondaryBackground: '#252846',\n    lightBackground: '#2E314F',\n    mainBackground: '#111432',\n    suspensionBackground: 'rgba(27, 30, 60, 0.8)',\n    normalBackground: '#262947',\n    twitterInputBackground: '#17191D',\n    twitterBackground: '#17191D',\n    twitterBackgroundHover: '#17191D',\n    twitterButton: '#EFF3F4',\n    twitterButtonText: '#0F1419',\n    twitterBlue: '#4989FF',\n    twitterBorderLine: '#2F3336',\n    twitterInput: '#1D2023',\n    twitterSecond: '#636B72',\n    twitterMain: '#D9D9D9',\n    twitterBottom: '#000000',\n    twitterInfoBackground: '#AFC3E1',\n    twitterInfo: '#8CA3C7',\n    twitterLine: '#2F3336',\n    twitterBg: '#15171A',\n    twitterTooltipBg: 'rgba(91,112,131,.6)',\n    redMain: '#ff5f5f',\n    redLight: '#46304a',\n    redContrastText: '#ffffff',\n\n    greenMain: '#3DC233',\n    greenLight: '#314457',\n\n    orangeMain: '#ffb915',\n    orangeLight: '#463e3f',\n\n    iconLight: '#a6a9b6',\n\n    divider: '#3e455e',\n\n    border: '#3E455E',\n    borderSecondary: '#6e767d',\n\n    // TODO: ?\n    textPrimary: '#ffffff',\n    // TODO: ?\n    textSecondary: 'ghostwhite',\n\n    secondaryInfoText: '#AFC3E1',\n    normalText: 'rgba(255, 255, 255, 0.8)',\n    normalTextLight: 'rgba(255, 255, 255, 0.8)',\n\n    infoBackground: 'rgba(175, 195, 225, 0.15)',\n    success: '#60DFAB',\n    warning: '#FFB915',\n    blue: '#1C68F3',\n    textLink: '#ffffff',\n    lineLight: '#32365B',\n    lineLighter: '#32365B',\n    textLight: '#A6A9B6',\n    lightestBackground: '#212422',\n    linkText: '#ffffff',\n    twitter: '#2CA4EF',\n    facebook: '#4267B2',\n    white: '#ffffff',\n    bottom: '#000000',\n    main: '#D4D4D4',\n    errorBackground: 'rgba(255, 95, 95, 0.1)',\n    tooltipBackground: '#1A1D20',\n    warningBackground: 'rgba(255, 185, 21, 0.1)',\n    cyberconnectPrimary: '#ffffff',\n    errorPlugin: '#FF3545',\n    buttonPluginBackground: '#07101B',\n    textPluginColor: '#07101B',\n    buttonPluginColor: '#FFFFFF',\n}\nexport type Color = typeof LightColor\n","import type { Theme } from '@mui/material'\nimport { kebabCase } from 'lodash-es'\nimport { LightColor, DarkColor } from './constants.js'\n\nexport function getMaskColor(theme: Theme) {\n    if (theme.palette.mode === 'dark') return DarkColor\n    return LightColor\n}\nexport type MaskCSSVariableColor = string & {\n    /** Append alpha channel to the original color */\n    alpha(alpha: number): string\n} & ((defaultValue?: string) => string)\n\nfunction set(key: string | symbol) {\n    if (typeof key === 'symbol') return undefined\n    const cssVar = kebabCase(key)\n    function value(defaultValue?: string) {\n        // it might be an object when used in styled components.\n        if (typeof defaultValue !== 'string') defaultValue = undefined\n        const x = `var(--mask-${cssVar}${defaultValue ? ', ' + defaultValue : ''})`\n        return x\n    }\n    Object.assign(value, {\n        [Symbol.toPrimitive]: () => `var(--mask-${cssVar})`,\n        alpha: (alpha: number) => `rgba(var(--mask-${cssVar}-fragment), ${alpha})`,\n    })\n    Object.defineProperty(MaskColorVar, key, { configurable: true, enumerable: true, value })\n    return value\n}\n/**\n * @deprecated Use theme.palette.maskColor\n */\nexport const MaskColorVar: Record<keyof typeof LightColor, MaskCSSVariableColor> = {\n    __proto__: new Proxy(\n        {},\n        {\n            get: (_, p) => set(p),\n            getOwnPropertyDescriptor: (_, p) => {\n                set(p)\n                return Object.getOwnPropertyDescriptor(MaskColorVar, p)\n            },\n        },\n    ),\n} as any\n","import { Box, Button } from '@mui/material'\nimport type { ButtonProps } from '@mui/material/Button'\nimport { LoadingBase } from '../LoadingBase/index.js'\nimport { makeStyles } from '../../UIHelper/index.js'\n\nexport interface ActionButtonProps extends ButtonProps {\n    width?: number | string\n    loading?: boolean\n}\n\nconst useStyles = makeStyles()({\n    loading: {\n        ['& > *']: {\n            opacity: 0.3,\n        },\n    },\n})\n\nexport function ActionButton<T extends React.ComponentType<any> = React.ComponentType>(\n    props: ActionButtonProps & PropsOf<T>,\n) {\n    const { width, loading, children, className, style, ...rest } = props\n    const { classes, cx } = useStyles()\n    return (\n        <Button\n            className={cx('actionButton', className, loading ? classes.loading : undefined)}\n            style={{ width, ...style, pointerEvents: loading ? 'none' : undefined }}\n            {...rest}\n            disableElevation\n            disabled={!!(rest.disabled || loading)}>\n            {loading ? (\n                <Box\n                    position=\"absolute\"\n                    width=\"100%\"\n                    height=\"100%\"\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    style={{ opacity: 1 }}>\n                    <LoadingBase />\n                </Box>\n            ) : null}\n            {children}\n        </Button>\n    )\n}\n","import { useRef, useContext, createContext, useState, useMemo, useLayoutEffect } from 'react'\nimport { type DialogProps } from '@mui/material'\nimport { noop } from 'lodash-es'\n\ninterface StackContext {\n    stack: readonly string[]\n    push(id: string): void\n    pop(id: string): void\n    setParent(selfID: string, parentID: string | null): () => void\n    hasGlobalBackdrop: boolean\n}\nconst DialogStackingContext = createContext<StackContext>({\n    stack: [],\n    push: noop,\n    pop: noop,\n    setParent: () => noop,\n    hasGlobalBackdrop: false,\n})\nDialogStackingContext.displayName = 'DialogStackingContext'\n\nconst DialogHierarchyContext = createContext<string | null>(null)\nDialogHierarchyContext.displayName = 'DialogHierarchyContext'\n\n/**\n * If you're using <Dialog> on its own and you want to support DialogStack, please use this hook.\n *\n * Your dialog component MUST support the following attributes with the same semantics with MUI Dialog component.\n *\n * - disableEscapeKeyDown\n * - disableScrollLock\n * - hideBackdrop\n * - style\n * - aria-hidden\n * - open\n * - transitionDuration\n * @example\n * function SomeComponent() {\n *     const [open, setOpen] = useState(false)\n *     const { shouldReplaceExitWithBack, extraProps, TrackDialogHierarchy } = useDialogStackConsumer(open)\n *     return <TrackDialogHierarchy>\n *         <button onClick={() => setOpen(true)}></button>\n *         <Dialog open={open} {...extraProps}>\n *             You MUST hide Close button and and BackButton based on the value of `shouldReplaceExitWithBack`\n *         </Dialog>\n *     </TrackDialogHierarchy>\n * }\n */\nexport function useDialogStackActor(open: boolean): useDialogStackActorReturn {\n    const selfID = useRef('' + Math.random()).current\n    const { pop, push, stack, setParent, hasGlobalBackdrop } = useContext(DialogStackingContext)\n\n    // children's useEffect will run before parent's useEffect.\n    // when the hierarchy is A > B and they are both open,\n    // the stack will be [\"B\", \"A\"] (B pushed into the stack first.)\n    // we need to notify the context the react component tree hierarchy to order them correctly.\n    const parentID = useContext(DialogHierarchyContext)\n    useLayoutEffect(() => setParent(selfID, parentID), [parentID])\n\n    useLayoutEffect(() => {\n        open ? push(selfID) : pop(selfID)\n        return () => pop(selfID)\n    }, [open])\n\n    const TrackDialogHierarchy = (useRef<useDialogStackActorReturn['TrackDialogHierarchy']>(null!).current ??=\n        function TrackDialogHierarchy({ children }) {\n            return <DialogHierarchyContext.Provider value={selfID}>{children}</DialogHierarchyContext.Provider>\n        })\n\n    const returnVal: useDialogStackActorReturn = {\n        shouldReplaceExitWithBack: stack.length > 1,\n        extraProps: { open },\n        TrackDialogHierarchy,\n    }\n    if (hasGlobalBackdrop) returnVal.extraProps.hideBackdrop = true\n    if (stack.length > 1) returnVal.extraProps.transitionDuration = 0\n\n    if (!open) return returnVal\n    if (stack.at(-1) !== selfID) {\n        returnVal.extraProps = {\n            ...returnVal.extraProps,\n            disableEscapeKeyDown: true,\n            disableScrollLock: true,\n            hideBackdrop: true,\n            hidden: true,\n            style: { visibility: 'hidden' },\n            'aria-hidden': true,\n        }\n    }\n    return returnVal\n}\n\nexport interface useDialogStackActorReturn {\n    shouldReplaceExitWithBack: boolean\n    extraProps: DialogProps\n    TrackDialogHierarchy: React.ComponentType<React.PropsWithChildren<{}>>\n}\n\nexport interface DialogStackingProviderProps extends React.PropsWithChildren<{}> {\n    hasGlobalBackdrop?: boolean\n}\n\n/**\n * This Provider can turn any `MaskDialog` or `InjectedDialog` in the subtree into a unified dialog.\n *\n * For example:\n *\n * ```tsx\n * <DialogStackingProvider>\n *    <Dialog1>\n *        <Dialog2></Dialog2>\n *    </Dialog1>\n *    <Dialog3></Dialog3>\n * </DialogStackingProvider>\n * ```\n *\n * When Dialog1 and Dialog2 both opened, only Dialog2 will be visible and the left top button\n * becomes \"BackArrow\".\n */\nexport function DialogStackingProvider(props: DialogStackingProviderProps) {\n    const [stack, setStack] = useState<readonly string[]>([])\n    const [hierarchy, setHierarchy] = useState<Hierarchy>({})\n    const context = useMemo((): StackContext => {\n        const sortedStack = sortStackByHierarchy(hierarchy, stack)\n        return {\n            hasGlobalBackdrop: props.hasGlobalBackdrop || false,\n            stack: sortedStack,\n            // Note: the following methods MUST NOT use stack or hierarchy out of the useState callback.\n            setParent(child, parent) {\n                if (!parent) return noop\n                setHierarchy((hierarchy) => {\n                    if (hierarchy[parent]?.has(child)) return hierarchy\n                    const newSet = new Set(hierarchy[parent] || [])\n                    newSet.add(child)\n                    return { ...hierarchy, [parent]: newSet }\n                })\n\n                return () => {\n                    setHierarchy((hierarchy) => {\n                        const newSet = new Set(hierarchy[parent])\n                        newSet.delete(child)\n                        return { ...hierarchy, [parent]: newSet }\n                    })\n                }\n            },\n            pop(id: string) {\n                setStack((stack) => (stack.includes(id) ? stack.filter((x) => x !== id) : stack))\n            },\n            push(id: string) {\n                setStack((stack) => (stack.includes(id) ? stack : stack.concat(id)))\n            },\n        }\n    }, [stack, hierarchy, props.hasGlobalBackdrop])\n    return <DialogStackingContext.Provider value={context}>{props.children}</DialogStackingContext.Provider>\n}\n\nexport function useDialogStacking() {\n    return useContext(DialogStackingContext)\n}\n\ntype Hierarchy = {\n    readonly [parent: string]: undefined | ReadonlySet<string>\n}\nfunction sortStackByHierarchy(hierarchy: Hierarchy, stack: readonly string[]): readonly string[] {\n    if (stack.length <= 1) return stack\n    const last = stack.at(-1)!\n    const children = hierarchy[last]\n    if (!children?.size) return stack\n    for (const child of children) {\n        if (stack.includes(child)) return sortStackByHierarchy(hierarchy, [last].concat(stack.slice(0, -1)))\n    }\n    return stack\n}\n","import { type GeneratedIconProps, Icons } from '@masknet/icons'\nimport { makeStyles } from '../../UIHelper/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    animated: {\n        '@keyframes loadingAnimation': {\n            '0%': {\n                transform: 'rotate(0deg)',\n            },\n            '100%': {\n                transform: 'rotate(360deg)',\n            },\n        },\n        animation: 'loadingAnimation 1s linear infinite',\n    },\n}))\n\nexport function LoadingBase(props: GeneratedIconProps) {\n    const { classes, cx } = useStyles()\n    return <Icons.CircleLoading {...props} className={cx(classes.animated, props.className)} />\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');","import { forwardRef, useRef, memo, useCallback } from 'react'\nimport { keyframes } from 'tss-react'\nimport {\n    SnackbarProvider,\n    type SnackbarProviderProps,\n    type SnackbarKey,\n    useSnackbar,\n    type VariantType,\n    type SnackbarMessage,\n    SnackbarContent,\n    type SnackbarAction,\n    type OptionsObject,\n} from 'notistack'\nimport { Typography, IconButton, alpha } from '@mui/material'\nimport { Close as CloseIcon, Warning as WarningIcon, Info as InfoIcon } from '@mui/icons-material'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles } from '../../UIHelper/index.js'\nimport { MaskColorVar } from '../../CSSVariables/index.js'\nimport { usePortalShadowRoot } from '../../ShadowRoot/index.js'\n\nexport { PopupSnackbarProvider, usePopupCustomSnackbar } from './PopupSnackbar.js'\nexport { SnackbarProvider, useSnackbar } from 'notistack'\nexport type { VariantType, OptionsObject, SnackbarKey, SnackbarMessage } from 'notistack'\n\nexport interface StyleProps {\n    offsetY?: number\n}\n\nconst useStyles = makeStyles<StyleProps, 'title' | 'message'>()((theme, { offsetY }, classNames) => {\n    const spinningAnimationKeyFrames = keyframes`\n        to {\n          transform: rotate(360deg)\n        }\n    `\n    const title = {\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        fontSize: 14,\n        lineHeight: '18px',\n    } as const\n    const message = {\n        color: theme.palette.maskColor.main,\n        fontWeight: 400,\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: 14,\n        lineHeight: '18px',\n        wordBreak: 'break-word',\n        '& > a': {\n            display: 'flex',\n            alignItems: 'center',\n        },\n        '& :focus:not(:focus-visible)': {\n            outline: 0,\n        },\n    } as const\n    const defaultVariant = {\n        background: theme.palette.maskColor.bottom,\n        color: theme.palette.maskColor.main,\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 4px 30px rgba(255, 255, 255, 0.15)'\n                : '0px 4px 30px rgba(0, 0, 0, 0.1)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n\n        [`& .${classNames.message}`]: {\n            color: 'inherit',\n        },\n    }\n    const success = {\n        backgroundColor: theme.palette.maskColor.success,\n        color: theme.palette.maskColor.white,\n        boxShadow: `0px 6px 20px ${alpha(theme.palette.maskColor.success, 0.15)}`,\n        backdropFilter: 'blur(16px)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n        [`& .${classNames.message}`]: {\n            color: alpha(theme.palette.maskColor.white, 0.8),\n            '& svg': {\n                color: theme.palette.maskColor.white,\n            },\n        },\n    } as const\n\n    const error = {\n        background: theme.palette.maskColor.danger,\n        color: theme.palette.maskColor.white,\n        boxShadow: `0px 6px 20px ${alpha(theme.palette.maskColor.danger, 0.15)}`,\n        backdropFilter: 'blur(16px)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n        [`& .${classNames.message}`]: {\n            color: alpha(theme.palette.maskColor.white, 0.8),\n            '& svg': {\n                color: theme.palette.maskColor.white,\n            },\n        },\n    } as const\n\n    const info = {\n        background: theme.palette.maskColor.primary,\n        color: theme.palette.maskColor.white,\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 4px 30px rgba(255, 255, 255, 0.15)'\n                : '0px 4px 30px rgba(0, 0, 0, 0.1)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n        [`& .${classNames.message}`]: {\n            color: alpha(theme.palette.maskColor.white, 0.8),\n            '& svg': {\n                color: theme.palette.maskColor.white,\n            },\n        },\n    }\n\n    const warning = {\n        backgroundColor: theme.palette.maskColor.warn,\n        color: theme.palette.maskColor.white,\n        boxShadow: `0px 6px 20px ${alpha(theme.palette.maskColor.warn, 0.15)}`,\n        backdropFilter: 'blur(16px)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n        [`& .${classNames.message}`]: {\n            color: alpha(theme.palette.maskColor.white, 0.8),\n            '& svg': {\n                color: theme.palette.maskColor.white,\n            },\n        },\n    } as const\n\n    return {\n        root: {\n            zIndex: 9999,\n            transform: typeof offsetY !== 'undefined' ? `translateY(${offsetY}px)` : 'none',\n            color: MaskColorVar.textLight,\n            pointerEvents: 'inherit',\n        },\n        content: {\n            alignItems: 'center',\n            padding: theme.spacing(2),\n            borderRadius: 12,\n            width: 380,\n            flexWrap: 'nowrap !important' as 'nowrap',\n        },\n        // eslint-disable-next-line tss-unused-classes/unused-classes\n        default: defaultVariant,\n        success,\n        error,\n        info,\n        warning,\n        icon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            '& > svg': {\n                width: 24,\n                height: 24,\n            },\n        },\n        spinning: {\n            display: 'flex',\n            animation: `${spinningAnimationKeyFrames} 2s infinite linear`,\n        },\n        action: {\n            marginLeft: 'auto',\n        },\n        closeButton: {\n            color: 'inherit',\n            transform: 'translateY(-10px)',\n        },\n        texts: {\n            marginLeft: theme.spacing(1.5),\n            '& :focus:not(:focus-visible)': {\n                outline: 0,\n            },\n        },\n        title,\n        message,\n    }\n})\n\nexport interface CustomSnackbarContentProps {\n    id: SnackbarKey\n    title: SnackbarMessage\n    message?: string | React.ReactNode\n    icon?: React.ReactNode\n    processing?: boolean\n    variant?: VariantType\n    action?: SnackbarAction\n    offsetY?: number\n    classes?: Partial<ReturnType<typeof useStyles>['classes']>\n}\nconst IconMap: Record<VariantType, React.ReactNode> = {\n    default: <InfoIcon color=\"inherit\" />,\n    success: <Icons.SuccessForSnackBar />,\n    error: <Icons.TransactionFailed />,\n    warning: <WarningIcon color=\"inherit\" />,\n    info: <InfoIcon color=\"inherit\" />,\n}\n\nexport const CustomSnackbarContent = forwardRef<HTMLDivElement, CustomSnackbarContentProps>((props, ref) => {\n    const { classes, cx } = useStyles({ offsetY: props.offsetY }, { props })\n    const snackbar = useSnackbar()\n    const loadingIcon = <Icons.CircleLoading className={classes.spinning} />\n    const variantIcon = props.processing ? loadingIcon : props.variant ? IconMap[props.variant] : null\n    let renderedAction: React.ReactNode = (\n        <IconButton className={classes.closeButton} onClick={() => snackbar.closeSnackbar(props.id)}>\n            <CloseIcon />\n        </IconButton>\n    )\n    if (props.action) {\n        renderedAction = typeof props.action === 'function' ? props.action(props.id) : props.action\n    }\n    return (\n        <SnackbarContent ref={ref} className={cx(classes.content, classes[props.variant!])}>\n            {variantIcon ? <div className={classes.icon}>{variantIcon}</div> : null}\n            <div className={classes.texts}>\n                <Typography className={classes.title} variant=\"h2\">\n                    {props.title}\n                </Typography>\n                {props.message ? (\n                    <Typography className={classes.message} variant=\"body1\">\n                        {props.message}\n                    </Typography>\n                ) : null}\n            </div>\n            <div className={classes.action}>{renderedAction}</div>\n        </SnackbarContent>\n    )\n})\n\nexport const CustomSnackbarProvider = memo<\n    SnackbarProviderProps & {\n        offsetY?: number\n    }\n>(function CustomSnackbarProvider({ offsetY, ...rest }) {\n    const ref = useRef<SnackbarProvider>(null)\n    const { classes } = useStyles({ offsetY })\n    const onDismiss = (key: string | number) => () => {\n        ref.current?.closeSnackbar(key)\n    }\n\n    return usePortalShadowRoot((container) => (\n        <SnackbarProvider\n            ref={ref}\n            maxSnack={30}\n            disableWindowBlurListener\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            hideIconVariant\n            // this is a false positive, SnackbarProvider won't use it like it is a component.\n            // eslint-disable-next-line react/no-unstable-nested-components\n            content={(key, title) => (\n                <CustomSnackbarContent id={key} variant={rest.variant ?? 'default'} title={title} offsetY={offsetY} />\n            )}\n            // eslint-disable-next-line react/no-unstable-nested-components\n            action={(key) => (\n                <IconButton size=\"large\" onClick={onDismiss(key)} sx={{ color: 'inherit' }}>\n                    <CloseIcon color=\"inherit\" />\n                </IconButton>\n            )}\n            classes={{\n                containerRoot: classes.root,\n                variantSuccess: classes.success,\n                variantError: classes.error,\n                variantInfo: classes.info,\n                variantWarning: classes.warning,\n            }}\n            domRoot={container}\n            {...rest}\n        />\n    ))\n})\n\nexport interface ShowSnackbarOptions\n    extends OptionsObject,\n        Pick<CustomSnackbarContentProps, 'message' | 'processing' | 'icon' | 'classes'> {}\n\nexport function useCustomSnackbar() {\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n    const showSnackbar = useCallback(\n        (\n            text: SnackbarMessage,\n            options: ShowSnackbarOptions = {\n                variant: 'default',\n            },\n        ) => {\n            const { processing, message, variant, ...rest } = options\n            return enqueueSnackbar(text, {\n                variant: options.variant,\n                content: (key, title) => {\n                    return (\n                        <CustomSnackbarContent\n                            variant={variant ?? 'default'}\n                            id={key}\n                            title={title}\n                            message={message}\n                            processing={processing}\n                            action={rest.action}\n                            classes={rest.classes}\n                        />\n                    )\n                },\n                ...rest,\n            })\n        },\n        [enqueueSnackbar],\n    )\n\n    return { showSnackbar, closeSnackbar }\n}\n","import { Tooltip } from '@mui/material'\nimport { createShadowRootForwardedPopperComponent } from '../../ShadowRoot/index.js'\n\nexport const ShadowRootTooltip = createShadowRootForwardedPopperComponent(Tooltip)\nShadowRootTooltip.displayName = 'ShadowRootTooltip'\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { useRef, forwardRef, useContext } from 'react'\nimport { Flags } from '@masknet/flags'\nimport type { PopperProps } from '@mui/material'\nimport {\n    DisableShadowRootContext,\n    PreventShadowRootEventPropagationListContext,\n    stopPropagation,\n    StyleSheetsContext,\n} from './Contexts.js'\nimport { ref } from './ShadowRootSetup.js'\n\n/**\n * Render to a React Portal in to the page needs this hook. It will provide a wrapped container that provides ShadowRoot isolation and CSS support for it.\n *\n * The return value can only be used once!\n * @param renderer A function that want to use PortalShadowRoot\n * @example\n * const picker = usePortalShadowRoot((container) => (\n *      <DatePicker\n *          DialogProps={{ container }}\n *          PopperProps={{ container }}\n *          value={new Date()}\n *          onChange={() => {}}\n *          renderInput={(props) => <TextField {...props} />}\n *      />\n * ))\n */\nexport function usePortalShadowRoot<T>(renderer: (container: HTMLElement | undefined) => T, debugKey?: string): T {\n    const disabled = useRef(useContext(DisableShadowRootContext)).current\n    // we ignore the changes on DisableShadowRootContext during multiple render\n    // so we can violates the React hooks rule and still be safe.\n    if (disabled) return renderer(undefined)\n\n    const sheet = useContext(StyleSheetsContext)\n    const signal = useRef<AbortController | null>(null)\n    const preventEventPropagationList = useContext(PreventShadowRootEventPropagationListContext)\n    const container = useRefInit(() => {\n        signal.current = new AbortController()\n        const portal = ref.portalContainer\n\n        const root = document.createElement('div')\n        root.dataset.portalShadowRoot = debugKey || ''\n        const shadow = root.attachShadow(Flags.shadowRootInit)\n\n        for (const each of preventEventPropagationList) {\n            shadow.addEventListener(each, stopPropagation, { signal: signal.current.signal })\n        }\n\n        const container = shadow.appendChild(document.createElement('main'))\n\n        sheet.addContainer(shadow)\n\n        // This is important to make the portal orders correct.\n        Object.defineProperty(container, 'appendChild', {\n            configurable: true,\n            writable: true,\n            value: (child: Node) => {\n                if (!root.parentElement) portal.appendChild(root)\n                Node.prototype.appendChild.call(container, child)\n                return child\n            },\n        })\n        Object.defineProperty(container, 'removeChild', {\n            configurable: true,\n            writable: true,\n            value: (child: Node) => {\n                Node.prototype.removeChild.call(container, child)\n                if (container.childElementCount === 0) portal.removeChild(root)\n                return child\n            },\n        })\n\n        return container\n    })\n\n    return renderer(container)\n}\n\nexport function createShadowRootForwardedComponent<\n    T extends {\n        container?: Element | (() => Element | null) | null | undefined\n        open: boolean\n    },\n>(Component: React.ComponentType<T>) {\n    return forwardRef((props: T, ref) => {\n        return usePortalShadowRoot((container) => <Component container={container} {...props} ref={ref} />)\n    }) as any as typeof Component\n}\n\nexport function createShadowRootForwardedPopperComponent<\n    T extends {\n        PopperProps?: Partial<PopperProps>\n    },\n>(Component: React.ComponentType<T>) {\n    return forwardRef((props: T, ref) => {\n        return usePortalShadowRoot((container) => {\n            return <Component {...props} PopperProps={{ container, ...props.PopperProps }} ref={ref} />\n        })\n    }) as any as typeof Component\n}\n\nfunction useRefInit<T>(f: () => T): T {\n    const ref = useRef<T>(undefined!)\n    if (!ref.current) ref.current = f()\n    return ref.current\n}\n","import { ObservableMap } from '@masknet/shared-base'\nimport { StrictMode, useEffect, useState } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { PreventShadowRootEventPropagationListContext } from './Contexts.js'\n\n/**\n * This container is used to attach the single React root.\n * It does not contain direct DOM decedents.\n * All decedents are mounted via <Portal>.\n */\nlet globalContainer: HTMLElement\n/**\n * This container is prepared for all the Modals.\n */\nlet portalContainer: ShadowRoot\nexport type WrapJSX = ((jsx: React.ReactNode) => JSX.Element) | undefined\n/** @internal */\nexport const shadowEnvironmentMountingRoots = new ObservableMap<any, JSX.Element>()\n\nexport function setupReactShadowRootEnvironment(\n    init: ShadowRootInit,\n    preventEventPropagationList: Array<keyof HTMLElementEventMap>,\n    wrapJSX?: WrapJSX,\n) {\n    if (portalContainer) return portalContainer\n    // TODO: make sure globalContainer is the last DOM in the body?\n    globalContainer = document.body.appendChild(document.createElement('div'))\n    portalContainer = globalContainer.attachShadow(init)\n\n    // Note: This React Root does not expect to have any direct DOM children.\n    createRoot(globalContainer).render(\n        <StrictMode>\n            <MountingPoint wrapJSX={wrapJSX} preventPropagationList={preventEventPropagationList} />\n        </StrictMode>,\n    )\n    return portalContainer\n}\nfunction MountingPoint(props: { wrapJSX: WrapJSX; preventPropagationList: Array<keyof HTMLElementEventMap> }) {\n    const [children, setChildren] = useState<JSX.Element[]>([])\n    useEffect(() => {\n        shadowEnvironmentMountingRoots.event.on(shadowEnvironmentMountingRoots.ALL_EVENTS, () => {\n            setChildren(Array.from(shadowEnvironmentMountingRoots.values()))\n        })\n    }, [])\n    return (\n        <PreventShadowRootEventPropagationListContext.Provider value={props.preventPropagationList}>\n            {props.wrapJSX ? props.wrapJSX(children) : children}\n        </PreventShadowRootEventPropagationListContext.Provider>\n    )\n}\n\n/** @internal */\nexport const ref = {\n    get portalContainer(): Element | ShadowRoot {\n        let dom: Element | ShadowRoot\n        if (location.protocol.includes('extension')) dom = document.body\n        else if (globalThis.location.hostname === 'localhost') return document.body\n        else if (!portalContainer) throw new TypeError('Please call setupPortalShadowRoot first')\n        else dom = portalContainer\n\n        Object.defineProperty(ref, 'mountingPoint', { value: dom })\n        return dom\n    },\n}\n","import { noop } from 'lodash-es'\nimport { useEffect } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useWeb3Connection } from './useWeb3Connection.js'\n\nexport function useBalance<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n    /** Allow to control the request */\n    enabled = true,\n) {\n    const { account, chainId } = useChainContext({ account: options?.account, chainId: options?.chainId })\n    const Web3 = useWeb3Connection(pluginID, {\n        account,\n        chainId,\n        ...options,\n    })\n    const { BalanceNotifier } = useWeb3State(pluginID)\n\n    const result = useQuery({\n        enabled: !!account && !!Web3 && enabled,\n        queryKey: ['balance', pluginID, chainId, account, options],\n        queryFn: async () => {\n            if (!account) return 0\n            return Web3.getBalance(account, { ...options, chainId })\n        },\n    })\n\n    useEffect(() => {\n        return (\n            BalanceNotifier?.emitter.on('update', (ev) => {\n                if (isSameAddress(account, ev.account)) result.refetch()\n            }) ?? noop\n        )\n    }, [account, result.refetch, BalanceNotifier])\n\n    return result\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Others } from './useWeb3Others.js'\n\nexport function useChainIdValid<T extends NetworkPluginID>(\n    pluginID?: T,\n    expectedChainId?: Web3Helper.Definition[T]['ChainId'],\n) {\n    const { account, chainId } = useChainContext({ chainId: expectedChainId })\n    const Others = useWeb3Others(pluginID)\n\n    return (!account || Others.chainResolver.isValidChainId?.(chainId, process.env.NODE_ENV === 'development')) ?? false\n}\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { attemptUntil } from '@masknet/web3-shared-base'\nimport { useQuery } from '@tanstack/react-query'\nimport { useWeb3Hub } from './useWeb3Hub.js'\nimport { useChainContext } from './useContext.js'\nimport { isNativeTokenAddress } from '@masknet/web3-shared-evm'\nimport { useNetworks } from './useNetworks.js'\n\nexport function useFungibleToken<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    address?: string | null,\n    fallbackToken?: Web3Helper.FungibleTokenScope<S, T>,\n    options?: HubOptions<T>,\n) {\n    const { chainId } = useChainContext({ chainId: options?.chainId })\n    const Hub = useWeb3Hub(pluginID, {\n        chainId,\n        ...options,\n    })\n    const networks = useNetworks(pluginID)\n\n    return useQuery({\n        enabled: true,\n        queryKey: ['fungible-token', pluginID, address, chainId, options],\n        queryFn: async () => {\n            if (!address) return\n            return attemptUntil(\n                [\n                    async () => {\n                        if (pluginID !== NetworkPluginID.PLUGIN_EVM || !isNativeTokenAddress(address) || !chainId)\n                            return\n                        const network = networks.find((x) => x.chainId === chainId)\n                        return network?.nativeCurrency\n                    },\n                    async () => {\n                        const token = await Hub.getFungibleToken(address, { chainId })\n                        if (!token) return\n                        const logoURL = token.logoURL ?? fallbackToken?.logoURL\n                        const symbol =\n                            token.symbol === 'UNKNOWN' || !token.symbol ? fallbackToken?.symbol : token.symbol\n                        return { ...token, symbol, logoURL } as Web3Helper.FungibleTokenScope<S, T>\n                    },\n                ],\n                fallbackToken,\n            )\n        },\n    })\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useFungibleToken } from './useFungibleToken.js'\nimport { useNativeTokenAddress } from './useNativeTokenAddress.js'\n\nexport function useNativeToken<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n) {\n    const nativeTokenAddress = useNativeTokenAddress(pluginID, options)\n    return useFungibleToken<S, T>(pluginID, nativeTokenAddress, undefined, options)\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useWeb3Others } from './useWeb3Others.js'\nimport { useNetwork } from './useNetwork.js'\n\nexport function useNativeTokenAddress<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n) {\n    const network = useNetwork(pluginID)\n    const Others = useWeb3Others(pluginID)\n    if (network?.isCustomized) {\n        return network.nativeCurrency.address\n    }\n    return Others.getNativeTokenAddress(options?.chainId)\n}\n","import { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { EMPTY_STRING, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useNetworks } from './useNetworks.js'\n\nexport function useNetwork<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    chainId?: Web3Helper.Definition[T]['ChainId'],\n) {\n    const { Network } = useWeb3State(pluginID)\n    const networks = useNetworks(pluginID)\n    const networkID = useSubscription(Network?.networkID ?? EMPTY_STRING)\n\n    return useMemo(() => {\n        if (chainId) return networks.find((x) => x.chainId === chainId)\n        return networks.find((x) => x.ID === networkID)\n    }, [chainId, networkID, networks])\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport { getRegisteredWeb3Networks } from '@masknet/web3-providers'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext, useNetworkContext } from './useContext.js'\n\n/**\n * Get built in declared network descriptor\n * @param expectedPluginID\n * @param expectedChainIdOrNetworkTypeOrID\n * @returns\n */\nexport function useNetworkDescriptor<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n    expectedChainIdOrNetworkTypeOrID?: string | number,\n): Web3Helper.NetworkDescriptorScope<S, T> | undefined {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    const { networkType } = useChainContext()\n\n    return getRegisteredWeb3Networks(pluginID).find((x) =>\n        [x.chainId, x.type, x.ID].includes(expectedChainIdOrNetworkTypeOrID ?? networkType ?? ''),\n    )\n}\n","import { EMPTY_ARRAY, type NetworkPluginID } from '@masknet/shared-base'\nimport { uniqBy } from 'lodash-es'\nimport { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport { useWeb3State } from './useWeb3State.js'\n\n/**\n * Bulletin networks and custom networks.\n * There could be duplicate chian id among them, because that's allow to custom networks.\n */\nexport function useNetworks<T extends NetworkPluginID = NetworkPluginID>(pluginID?: T, uniqChainId?: boolean) {\n    const { Network } = useWeb3State(pluginID)\n    const networks = useSubscription(Network?.networks ?? EMPTY_ARRAY)\n    return useMemo(() => {\n        const list = networks.filter((x) => x.network === 'mainnet' || x.isCustomized)\n        return uniqChainId ? uniqBy(list, (x) => x.chainId) : list\n    }, [networks, uniqChainId])\n}\n","import { getRegisteredWeb3Providers } from '@masknet/web3-providers'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext, useNetworkContext } from './useContext.js'\n\n/**\n * Get built in declared provider descriptor\n * @param expectedPluginID\n * @param expectedProviderTypeOrID\n * @returns\n */\nexport function useProviderDescriptor<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n    expectedProviderTypeOrID?: string,\n): Web3Helper.ProviderDescriptorScope<S, T> | undefined {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    const { providerType } = useChainContext()\n\n    return getRegisteredWeb3Providers(pluginID).find((x) =>\n        [x.type, x.ID].includes(expectedProviderTypeOrID ?? providerType ?? ''),\n    )\n}\n","import { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport type { RecentTransactionComputed, TransactionStatusType } from '@masknet/web3-shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { EMPTY_ARRAY, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useRecentTransactions<T extends NetworkPluginID>(pluginID?: T, status?: TransactionStatusType) {\n    const { Transaction } = useWeb3State(pluginID)\n    const transactions = useSubscription(Transaction?.transactions ?? EMPTY_ARRAY)\n    type ChainId = Web3Helper.Definition[T]['ChainId']\n    type Transaction = Web3Helper.Definition[T]['Transaction']\n\n    return useMemo<Array<RecentTransactionComputed<ChainId, Transaction>>>(() => {\n        return (status ? transactions.filter((x) => status === x.status) : transactions).map((x) => ({\n            ...x,\n            _tx: x.candidates[x.indexId],\n        }))\n    }, [status, transactions])\n}\n","import { useQuery } from '@tanstack/react-query'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useReverseAddress<T extends NetworkPluginID>(pluginID?: T, address?: string, domainOnly?: boolean) {\n    const { NameService } = useWeb3State(pluginID)\n\n    return useQuery({\n        queryKey: ['reverse', address, domainOnly],\n        enabled: !!NameService?.reverse,\n        queryFn: async () => {\n            if (!address) return null\n            return (await NameService?.reverse?.(address, domainOnly)) || null\n        },\n    })\n}\n","import { useMemo } from 'react'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext } from './useContext.js'\nimport { useWallets } from './useWallets.js'\n\n/**\n * Use the currently selected wallet.\n * @param pluginID\n * @returns\n */\nexport function useWallet<T extends NetworkPluginID>(\n    pluginID?: T,\n    providerType?: Web3Helper.Definition[T]['ProviderType'],\n) {\n    const { account } = useChainContext()\n    const wallets = useWallets()\n\n    return useMemo(() => {\n        return account ? wallets.find((x) => isSameAddress?.(x.address, account)) ?? null : null\n    }, [account, wallets])\n}\n","import { EMPTY_LIST, type Wallet } from '@masknet/shared-base'\nimport { Providers } from '@masknet/web3-providers'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { useMemo } from 'react'\nimport { usePersistSubscription } from '@masknet/shared-base-ui'\n\nexport function useWallets() {\n    // We got stored Mask wallets only.\n    const wallets = usePersistSubscription(\n        '@@mask-wallets',\n        Providers[ProviderType.MaskWallet].subscription.wallets ?? EMPTY_LIST,\n    )\n\n    return useMemo(() => {\n        return [...wallets]\n            .map((w) => {\n                // Could be serialized by react query persist client\n                if (w.createdAt instanceof Date && w.updatedAt instanceof Date) return w\n                return {\n                    ...w,\n                    createdAt: new Date(w.createdAt),\n                    updatedAt: new Date(w.updatedAt),\n                } as Wallet\n            })\n            .sort((a, b) => {\n                if (a.owner && !b.owner) return 1\n                const timestampA = a.createdAt.getTime()\n                const timestampB = b.createdAt.getTime()\n                if (timestampA - timestampB > 10000) {\n                    return 1\n                } else if (timestampB - timestampA > 10000) {\n                    return -1\n                }\n                const numA = a.name.split('Wallet ')[1]\n                const numB = b.name.split('Wallet ')[1]\n                try {\n                    if (!numA && numB && !Number.isNaN(numB)) return 1\n                    if (!Number.isNaN(numA) && !Number.isNaN(numB)) {\n                        return Number(numA) > Number(numB) ? 1 : -1\n                    } else {\n                        return numB.length - numA.length\n                    }\n                } catch {\n                    return 0\n                }\n            })\n    }, [wallets])\n}\n","import { useMemo } from 'react'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { Web3All } from '@masknet/web3-providers'\nimport type { Connection, ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useNetworkContext } from './useContext.js'\n\nexport function useWeb3Connection<T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n    options?: ConnectionOptions<T>,\n) {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    return useMemo(() => Web3All.use(pluginID, options) as Connection<T>, [pluginID, JSON.stringify(options)])\n}\n","import { useMemo } from 'react'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { HubAll } from '@masknet/web3-providers'\nimport type { Hub, HubOptions } from '@masknet/web3-providers/types'\nimport { useNetworkContext } from './useContext.js'\n\nexport function useWeb3Hub<T extends NetworkPluginID = NetworkPluginID>(expectedPluginID?: T, options?: HubOptions<T>) {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    return useMemo(() => HubAll.use(pluginID, options) as Hub<T>, [pluginID, JSON.stringify(options)])\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n}; // TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\n\n\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\n\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: (theme.vars || theme).palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n\n  const {\n    children,\n    disabled = false,\n    id: idProp,\n    loading = false,\n    loadingIndicator: loadingIndicatorProp,\n    loadingPosition = 'center',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n    className: classes.loadingIndicator,\n    ownerState: ownerState,\n    children: loadingIndicator\n  }) : null;\n  return /*#__PURE__*/_jsxs(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","import e from\"void-elements\";var t=/\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g;function n(n){var r={type:\"tag\",name:\"\",voidElement:!1,attrs:{},children:[]},i=n.match(/<\\/?([^\\s]+?)[/\\s>]/);if(i&&(r.name=i[1],(e[i[1]]||\"/\"===n.charAt(n.length-2))&&(r.voidElement=!0),r.name.startsWith(\"!--\"))){var s=n.indexOf(\"--\\x3e\");return{type:\"comment\",comment:-1!==s?n.slice(4,s):\"\"}}for(var a=new RegExp(t),c=null;null!==(c=a.exec(n));)if(c[0].trim())if(c[1]){var o=c[1].trim(),l=[o,\"\"];o.indexOf(\"=\")>-1&&(l=o.split(\"=\")),r.attrs[l[0]]=l[1],a.lastIndex--}else c[2]&&(r.attrs[c[2]]=c[3].trim().substring(1,c[3].length-1));return r}var r=/<[a-zA-Z0-9\\-\\!\\/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g,i=/^\\s*$/,s=Object.create(null);function a(e,t){switch(t.type){case\"text\":return e+t.content;case\"tag\":return e+=\"<\"+t.name+(t.attrs?function(e){var t=[];for(var n in e)t.push(n+'=\"'+e[n]+'\"');return t.length?\" \"+t.join(\" \"):\"\"}(t.attrs):\"\")+(t.voidElement?\"/>\":\">\"),t.voidElement?e:e+t.children.reduce(a,\"\")+\"</\"+t.name+\">\";case\"comment\":return e+\"\\x3c!--\"+t.comment+\"--\\x3e\"}}var c={parse:function(e,t){t||(t={}),t.components||(t.components=s);var a,c=[],o=[],l=-1,m=!1;if(0!==e.indexOf(\"<\")){var u=e.indexOf(\"<\");c.push({type:\"text\",content:-1===u?e:e.substring(0,u)})}return e.replace(r,function(r,s){if(m){if(r!==\"</\"+a.name+\">\")return;m=!1}var u,f=\"/\"!==r.charAt(1),h=r.startsWith(\"\\x3c!--\"),p=s+r.length,d=e.charAt(p);if(h){var v=n(r);return l<0?(c.push(v),c):((u=o[l]).children.push(v),c)}if(f&&(l++,\"tag\"===(a=n(r)).type&&t.components[a.name]&&(a.type=\"component\",m=!0),a.voidElement||m||!d||\"<\"===d||a.children.push({type:\"text\",content:e.slice(p,e.indexOf(\"<\",p))}),0===l&&c.push(a),(u=o[l-1])&&u.children.push(a),o[l]=a),(!f||a.voidElement)&&(l>-1&&(a.voidElement||a.name===r.slice(2,-1))&&(l--,a=-1===l?c:o[l]),!m&&\"<\"!==d&&d)){u=-1===l?c:o[l].children;var x=e.indexOf(\"<\",p),g=e.slice(p,-1===x?void 0:x);i.test(g)&&(g=\" \"),(x>-1&&l+u.length>=0||\" \"!==g)&&u.push({type:\"text\",content:g})}}),c},stringify:function(e){return e.reduce(function(e,t){return e+a(\"\",t)},\"\")}};export default c;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","/**\n * This file automatically generated from `pre-publish.js`.\n * Do not manually edit.\n */\n\nmodule.exports = {\n  \"area\": true,\n  \"base\": true,\n  \"br\": true,\n  \"col\": true,\n  \"embed\": true,\n  \"hr\": true,\n  \"img\": true,\n  \"input\": true,\n  \"link\": true,\n  \"meta\": true,\n  \"param\": true,\n  \"source\": true,\n  \"track\": true,\n  \"wbr\": true\n};\n","'use client';\nimport * as React from 'react';\n\nconst IsRestoringContext = /*#__PURE__*/React.createContext(false);\nconst useIsRestoring = () => React.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\nexport { IsRestoringProvider, useIsRestoring };\n//# sourceMappingURL=isRestoring.mjs.map\n"],"names":["allPersonas","currentPersona","queryPersonaAvatar","querySocialIdentity","fetchJSON","queryPersonaByProfile","openDashboard","openPopupWindow","signWithPersona","hasPaymentPassword","createPersona","setCurrentPersonaIdentifier","attachProfile","setPluginMinimalModeEnabled","hasHostPermission","requestHostPermission","__setUIContext__","value","useMemo","isEqual","unreachable","useValueRef","ValueRefWithReady","createManager","getPluginDefine","events","activated","startDaemon","minimalMode","def","SiteAdaptor","NoManagedContext","activatedSub","on","plugins","minimalModeSub","useActivatedPluginsSiteAdaptor","minimalModeEqualsTo","result","filter","x","includes","ID","visibility","useMinimalMode","bind","useNotMinimalMode","useAnyMode","useIsMinimalMode","pluginID","useActivatedPluginSiteAdaptor","find","undefined","startPluginSiteAdaptor","currentNetwork","host","id","status","enableRequirement","supports","sites","type","lastRecognizedProfile","currentVisitingProfile","currentNextIDPlatform","currentPersonaIdentifier","getPostURL","share","getUserIdentity","getPostIdFromNewPostToast","postMessage","getSearchedKeyword","connectPersona","__setSiteAdaptorContext__","useSubscription","useAllPersonas","useCurrentVisitingIdentity","UNDEFINED","useLastRecognizedIdentity","useTranslation","createProxy","initValue","define","key","Object","defineProperty","container","configurable","__proto__","Proxy","get","_","getPrototypeOf","setPrototypeOf","v","getOwnPropertyDescriptor","useNextID_Trans","t","memo","Box","DialogContent","Stack","Typography","Icons","LoadingButton","Done","DoneIcon","getMaskColor","makeStyles","MaskColorVar","LoadingBase","InjectedDialog","WalletStatusBox","useNetworkContext","formatPersonaFingerprint","NetworkPluginID","useStyles","theme","persona","padding","spacing","marginBottom","backgroundColor","palette","background","default","borderRadius","alignItems","iconContainer","display","marginRight","width","height","name","color","text","primary","fontWeight","identifier","fontSize","wordBreak","subTitle","lineHeight","deneText","done","white","opacity","loadingIcon","position","right","error","marginTop","redMain","paddingLeft","borderLeft","SUPPORTED_PLUGINS","PLUGIN_EVM","BindPanelUI","onPersonaSign","onWalletSign","signature","isBound","title","onClose","open","isCurrentAccount","classes","isSupported","isWalletSigned","wallet","isPersonaSigned","style","direction","justifyContent","mb","className","variant","component","bind_wallet_bound_error","mt","fullWidth","loadingIndicatorEnd","loadingPosition","disabled","loading","onClick","endIcon","sx","loadingIndicator","wallet_sign","unsupported_network","div","Masks","size","nickname","rawPublicKey","persona_sign","useAsyncRetry","NextIDProof","NextIDPlatform","useBindPayload","action","address","currentIdentifier","Promise","resolve","createPersonaPayload","Ethereum","useAsyncFn","SignType","usePersonaSign","message","Message","useUpdateEffect","useCustomSnackbar","Web3","useWalletSign","showSnackbar","state","fn","changed","notify_wallet_sign","processing","notify_wallet_sign_confirm","signMessage","account","notify_wallet_sign_cancel","isSameAddress","NextIDAction","MaskMessages","delay","useChainContext","BindDialog","onBound","bounds","identity","Create","publicKeyAsHex","personaSignState","handlePersonaSign","signPayload","walletSignState","handleWalletSign","bindProof","uuid","createdAt","walletSignature","notify_wallet_sign_request_title","notify_wallet_sign_request_success","ownProofChanged","sendToAll","notify_wallet_sign_request_failed","verify_wallet_dialog_title","Button","useTheme","PersonaSelectPanel","button","gap","minWidth","unchecked","stroke","maskColor","CreatePersonaAction","onCreate","flex","px","boxSizing","second","create_persona_intro","Identity","create_persona","SelectConnectPersonaAction","p","pb","AddWalletPersonaAction","onAddWallet","add_wallet_intro","Wallet","add_wallet_button","OtherLackWalletAction","others_lack_wallet","useCallback","useState","ThemeProvider","MaskLightTheme","PluginCardFrameMini","useCurrentPersonaConnectStatus","usePersonaProofs","PluginEnableBoundary","PopupHomeTabType","PluginID","PopupRoutes","EMPTY_LIST","NextIdPage","currentProfileIdentifier","visitingPersonaIdentifier","personaConnectStatus","statusLoading","openBindDialog","toggleBindDialog","isOwn","userId","loadingPersona","hasPersona","proofs","handleAddWallets","Personas","tab","ConnectedWallets","ActionComponent","connected","verified","data","isFetching","Web3Profile","refetch","base","PLUGIN_ID","site","ProfileTabs","label","priority","UI","TabContent","createContext","useContext","useRef","useBuildInfo_raw","BuildInfo","displayName","BuildInfoProvider","props","Provider","useBuildInfo","current","useBuildInfoMarkdown","env","gitInfo","COMMIT_HASH","DIRTY","BRANCH_NAME","buildInfoMarkdown","VERSION","process","NODE_ENV","navigator","userAgent","channel","BUILD_DATE","defer","Emitter","SingletonModal","constructor","close","abort","openAndWaitForClose","emitter","onOpen","onAbort","dispatchPeek","dispatchOpen","dispatchClose","dispatchAbort","register","creator","ref","emit","peek","console","warn","reject","SingletonModalQueued","opened","tasks","cleanup","push","d","length","shift","Identifier","fingerprint","slice","Math","max","MAX_PERSONA_LIMIT","MAX_PERSONA_NAME_LENGTH","formatPersonaName","isSameIdentity","identities","reduce","previousValue","T2","T1","i1IdentifierText","toText","i2IdentifierText","toLowerCase","isSamePersona","personas","isSameProfile","profiles","ShadowRootTooltip","Link","useCopyToClipboard","useSharedTrans","copy","main","CopyButton","successText","scoped","cx","copyToClipboard","copied","setCopied","active","setActive","timerRef","handleCopy","ev","stopPropagation","preventDefault","clearTimeout","setTimeout","tooltipTitle","iconProps","placement","disableInteractive","arrow","underline","root","Check","success","Copy","ImageIcon","icon","iconFilterColor","rest","backdropFilter","img","src","toString","statusBox","flexDirection","LoadingStatus","omitText","iconSize","children","useEffect","useQuery","useConnectedPersonas","personasInDB","queryKey","queryFn","allPersonaPublicKeys","map","allPersonaIdentifiers","avatars","allNextIDBindings","queryAllExistedBindingsByPlatform","NextID","join","proof","is_valid","avatar","useCurrentPersona","fromHex","toBase64","languageSettings","useNextIDVerify","verifyPostCollectTimer","username","verifiedCallback","payload","Error","postContent","replace","recover","reason","setInterval","postId","clearInterval","proofLocation","queryIsBound","Avatar","resolveNextIDIdentityToProfile","overflow","textOverflow","whiteSpace","indicator","left","top","bottom","border","PersonaItemUI","currentProfileIdentify","isVerified","some","platform","flexGrow","MenuPersonasActive","NextIDMini","CheckCircle","checked","RadioNo","CrossIsolationMessages","DashboardRoutes","Telemetry","EventID","EventType","useLayoutEffect","ReloadStatus","ApplicationBoardModal","LeavePageConfirmModal","items","maxHeight","scrollbarWidth","reloadStatus","minHeight","finishTarget","enableVerify","selectedPersona","setSelectedPersona","handleVerifyNextID","isLoading","connect","profileIdentifier","personaIdentifier","connectionConfirmState","info","target","url","SignUpPersona","applications_create_persona_hint","applications_create_persona_title","actionHint","applications_create_persona_action","actionButton","isConnected","linkedProfiles","verifiedAtSite","handleClick","captureEvent","Access","EntryProfileConnectTwitter","EntryMaskComposeConnectTwitter","EntryProfileConnectVerify","EntryMaskComposeVerifyTwitter","personaBindFinished","applicationDialogEvent","sendToLocal","actionProps","buttonText","applications_persona_verify_connect","hint","applications_persona_verify_connect_hint","applications_persona_connect","applications_persona_connect_hint","applications_persona_verify","applications_persona_verify_hint","ActionContent","onRetry","web3Icon","item1","secondaryDark","item2","dark","marginLeft","linkOutIcon","provider","providerLink","PluginName","plugin_card_frame_default_title","plugin_card_frame_default_provided_by","plugin_card_frame_default_provided_by_value","rel","href","alignSelf","LinkOut","plugin_card_frame_loading","ActionButton","onEnablePlugin","enable_plugin_boundary_description","startIcon","Plugin","enable_plugin_boundary","actionLabel","load_failed","load_retry","mainIcon","badgeIcon","badgeIconBorderColor","common","WalletIcon","badgeSize","useWeb3State","useClearTransactionsCallback","chainId","Transaction","clearTransactions","useRemoveTransactionCallback","removeTransaction","flatten","pick","uniq","values","Aave","ArtBlocks","Gitcoin","Lido","MaskBox","NftRedPacket","RedPacket","Trader","collect","fields","groupedByFields","listOfAddresses","listOfAddress","collected","Boolean","addr","domainAddressMap","getContractOwnerDomain","pair","entries","addresses","forwardRef","useAsync","noop","format","useWeb3Others","TransactionStatusType","Grid","List","ListItem","list","paper","listItem","transaction","methodName","textTransform","timestamp","cell","linkText","link","linkIcon","mode","clear","blue","cursor","statusTextColorMap","NOT_DEPEND","SUCCEED","FAILED","tx","onClear","statusTextMap","recent_transaction_pending","recent_transaction_success","recent_transaction_failed","Others","TransactionFormatter","TransactionWatcher","_tx","to","functionName","formattedTransaction","formatTransaction","handleClear","domainOrAddress","txStatus","setTxStatus","off","item","textAlign","md","secondary","formatAddress","explorerResolver","transactionLink","wallet_status_pending_clear","TransactionList","transactions","useRecentTransactions","summaryWrapper","pendingSummary","clearAll","hide","usePendingTransactions","pendingTransactions","meltedTxHashes","setMeltedTxHashes","clearRecentTxes","removeRecentTx","summary","section","mr","wallet_status_pending","count","wallet_status_pending_clear_all","transactionList","MaskColors","Sniffings","useNetworkDescriptor","useProviderDescriptor","useReverseAddress","useNativeToken","useWallet","useWeb3Connection","useBalance","useChainIdValid","FormattedAddress","SelectProviderModal","WalletStatusModal","ProviderType","formatBalance","contentBackground","disableChange","withinRiskWarningDialog","textColor","currentAccount","is_dashboard_page","primaryBackground2","dashboardBackground","accountInfo","accountName","balance","paddingTop","infoRow","connectButtonWrapper","margin","copyIcon","providerDescriptor","backgroundGradient","publicBg","MaskWallet","chainIdValid","loadingBalance","nativeToken","loadingNativeToken","networkDescriptor","domain","isValidAddress","plugin_wallet_on_connect","formatDomainName","formatter","light","addressLink","plugin_wallet_view_on_explorer","decimals","symbol","closeDialog","disconnect","plugin_wallet_disconnect","wallet_status_button_change","showPendingTransaction","WalletConnectQRCodeModal","WalletRiskWarningModal","ConnectWalletModal","ApplicationBoardSettingsModal","GasSettingModal","TransactionConfirmModal","TransactionSnackbar","ConfirmModal","ConfirmDialog","SelectNonFungibleContractModal","SelectGasSettingsModal","AddCollectiblesModal","SelectFungibleTokenModal","PersonaSelectPanelModal","ShareSelectNetworkModal","ApplicationSettingTabs","Fragment","EnhanceableSite","SOCIAL_MEDIA_ICON_MAPPING","Twitter","TwitterX","Facebook","FacebookColored","Minds","Instagram","InstagramColored","OpenSea","OpenSeaColored","Mirror","Localhost","SOCIAL_MEDIA_ROUND_ICON_MAPPING","TwitterXRound","FacebookRound","MindsRound","InstagramRoundColored","RSS3_NFT_SITE_KEY","TWITTER","FACEBOOK","INSTAGRAM","EnhanceableSite_RSS3_NFT_SITE_KEY_map","PERSONA_AVATAR_DB_NAMESPACE","SocialAccounts","DEFAULT_PERSONA_CONNECT_STATUS","create","direct","openPersonListDialog","retry","currentProfile","nextIDInfo","queryExistedBindingByPersona","verifiedProfile","cleanPersonaChangedListener","ownPersonaChanged","cleanProofsChangedListener","publicKey","is_popup_page","clearPersonaQueryCache","binding","LightColor","bg","primaryContrastText","secondaryContrastText","input","primaryBackground","secondaryBackground","lightBackground","mainBackground","suspensionBackground","normalBackground","twitterBackground","twitterBackgroundHover","twitterInputBackground","twitterButton","twitterButtonText","twitterBlue","twitterBorderLine","twitterSecond","twitterMain","twitterBottom","twitterInfoBackground","twitterInfo","twitterBg","twitterTooltipBg","twitterInput","twitterLine","redLight","redContrastText","greenMain","greenLight","orangeMain","orangeLight","iconLight","divider","borderSecondary","textPrimary","textSecondary","secondaryInfoText","normalText","normalTextLight","infoBackground","warning","textLink","lineLight","lineLighter","textLight","lightestBackground","twitter","facebook","errorBackground","tooltipBackground","warningBackground","cyberconnectPrimary","errorPlugin","buttonPluginBackground","textPluginColor","buttonPluginColor","DarkColor","kebabCase","set","cssVar","defaultValue","assign","Symbol","toPrimitive","alpha","enumerable","pointerEvents","disableElevation","DialogStackingContext","stack","pop","setParent","hasGlobalBackdrop","DialogHierarchyContext","useDialogStackActor","selfID","random","parentID","TrackDialogHierarchy","returnVal","shouldReplaceExitWithBack","extraProps","hideBackdrop","transitionDuration","at","disableEscapeKeyDown","disableScrollLock","hidden","DialogStackingProvider","setStack","hierarchy","setHierarchy","context","sortedStack","sortStackByHierarchy","child","parent","has","newSet","Set","add","delete","concat","useDialogStacking","last","animated","transform","animation","CircleLoading","keyframes","SnackbarProvider","useSnackbar","SnackbarContent","IconButton","Close","CloseIcon","Warning","WarningIcon","Info","InfoIcon","usePortalShadowRoot","PopupSnackbarProvider","usePopupCustomSnackbar","offsetY","classNames","spinningAnimationKeyFrames","outline","defaultVariant","boxShadow","danger","zIndex","content","flexWrap","spinning","closeButton","texts","IconMap","SuccessForSnackBar","TransactionFailed","CustomSnackbarContent","snackbar","variantIcon","renderedAction","closeSnackbar","CustomSnackbarProvider","onDismiss","maxSnack","disableWindowBlurListener","anchorOrigin","vertical","horizontal","hideIconVariant","containerRoot","variantSuccess","variantError","variantInfo","variantWarning","domRoot","enqueueSnackbar","options","Tooltip","createShadowRootForwardedPopperComponent","Flags","DisableShadowRootContext","PreventShadowRootEventPropagationListContext","StyleSheetsContext","renderer","debugKey","sheet","signal","preventEventPropagationList","useRefInit","AbortController","portal","portalContainer","document","createElement","dataset","portalShadowRoot","shadow","attachShadow","shadowRootInit","each","addEventListener","appendChild","addContainer","writable","parentElement","Node","prototype","call","removeChild","childElementCount","createShadowRootForwardedComponent","Component","PopperProps","f","ObservableMap","StrictMode","createRoot","globalContainer","shadowEnvironmentMountingRoots","setupReactShadowRootEnvironment","init","wrapJSX","body","render","MountingPoint","preventPropagationList","setChildren","event","ALL_EVENTS","Array","from","dom","location","protocol","globalThis","hostname","TypeError","enabled","BalanceNotifier","getBalance","expectedChainId","chainResolver","isValidChainId","attemptUntil","useWeb3Hub","isNativeTokenAddress","useNetworks","useFungibleToken","fallbackToken","Hub","networks","network","nativeCurrency","token","getFungibleToken","logoURL","useNativeTokenAddress","nativeTokenAddress","useNetwork","isCustomized","getNativeTokenAddress","EMPTY_STRING","Network","networkID","getRegisteredWeb3Networks","expectedPluginID","expectedChainIdOrNetworkTypeOrID","networkType","EMPTY_ARRAY","uniqBy","uniqChainId","getRegisteredWeb3Providers","expectedProviderTypeOrID","providerType","candidates","indexId","domainOnly","NameService","reverse","useWallets","wallets","Providers","usePersistSubscription","subscription","w","Date","updatedAt","sort","a","b","owner","timestampA","getTime","timestampB","numA","split","numB","Number","isNaN","Web3All","use","JSON","stringify","HubAll"],"sourceRoot":"","x_google_ignoreList":[46,47,67,68,69,70,71,72,73,74]}