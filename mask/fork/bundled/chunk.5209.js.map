{"version":3,"file":"bundled/chunk.5209.js","mappings":"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","sources":["webpack://mask-network/./packages/plugin-infra/src/dom/usePluginWrapper.tsx","webpack://mask-network/./packages/shared-base-ui/src/hooks/useObservableMapSet.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/PostContext.ts","webpack://mask-network/./packages/plugins/Testplugin4/src/SiteAdaptor/index.tsx","webpack://mask-network/./packages/shared-base-ui/src/hooks/useValueRef.ts","webpack://mask-network/./node_modules/.pnpm/html-parse-stringify@3.0.1/node_modules/html-parse-stringify/dist/html-parse-stringify.module.js","webpack://mask-network/./node_modules/.pnpm/use-subscription@1.8.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-subscription/cjs/use-subscription.production.min.js","webpack://mask-network/./node_modules/.pnpm/use-subscription@1.8.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-subscription/index.js","webpack://mask-network/./node_modules/.pnpm/use-sync-external-store@1.2.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","webpack://mask-network/./node_modules/.pnpm/use-sync-external-store@1.2.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/use-sync-external-store/shim/index.js","webpack://mask-network/./node_modules/.pnpm/void-elements@3.1.0/node_modules/void-elements/index.js"],"sourcesContent":["import { createContext, useEffect, useContext, type ForwardRefExoticComponent, type RefAttributes } from 'react'\nimport { noop } from 'lodash-es'\nimport type { Plugin } from '../types.js'\n\nexport type PluginWrapperComponent<T extends Plugin.Shared.Definition = Plugin.Shared.Definition> =\n    ForwardRefExoticComponent<\n        React.PropsWithChildren<\n            RefAttributes<PluginWrapperMethods> & {\n                definition: T\n                lackHostPermission?: boolean\n            }\n        >\n    >\n\nconst emptyPluginWrapperMethods = {\n    setWrap: noop,\n    setWrapperName: noop,\n    setWidth: noop,\n}\n/** @internal */\nexport const PluginWrapperMethodsContext = createContext<PluginWrapperMethods>(emptyPluginWrapperMethods)\nPluginWrapperMethodsContext.displayName = 'PluginWrapperMethodsContext'\nexport interface PluginWrapperMethods {\n    setWrap(open: boolean): void\n    setWrapperName(name: string | undefined): void\n    setWidth(width: number | undefined): void\n}\n\nexport function usePluginWrapper(\n    open: boolean,\n    options?: {\n        width?: number\n        name?: string\n    },\n) {\n    const { setWidth, setWrap, setWrapperName } = useContext(PluginWrapperMethodsContext)\n    const { width, name } = options || {}\n\n    useEffect(() => {\n        setWrap(open)\n        return () => setWrap(open)\n    }, [open, setWrap])\n    useEffect(() => setWidth(width), [width, setWidth])\n    useEffect(() => setWrapperName(name), [name, setWrapperName])\n}\n","import { useMemo } from 'react'\nimport { useSubscription, type Subscription } from 'use-subscription'\nimport { type ObservableMap, type ObservableSet } from '@masknet/shared-base'\n\nexport function useObservableValues<T>(map: ObservableMap<any, T> | ObservableSet<T>) {\n    const subscription = useMemo<Subscription<T[]>>(\n        () => ({\n            getCurrentValue: () => map.asValues,\n            subscribe: (callback) => {\n                return (map.event as any).on(map.ALL_EVENTS, callback)\n            },\n        }),\n        [map],\n    )\n\n    return useSubscription(subscription)\n}\n","import { createContext, createElement, useContext } from 'react'\nimport { type Subscription, useSubscription } from 'use-subscription'\nimport type { Some } from 'ts-results-es'\nimport type { LiveSelector, DOMProxy } from '@dimensiondev/holoflows-kit'\nimport {\n    ObservableMap,\n    ObservableSet,\n    type PostIVIdentifier,\n    ValueRef,\n    type PostIdentifier,\n    type ProfileIdentifier,\n} from '@masknet/shared-base'\nimport { useObservableValues, useValueRef } from '@masknet/shared-base-ui'\nimport type { TypedMessage } from '@masknet/typed-message'\nimport type { SupportedPayloadVersions } from '@masknet/encryption'\n\nexport interface PostContextActions {\n    hasPayloadLike(content: string): boolean\n    getURLFromPostIdentifier?(post: PostIdentifier): URL | null\n}\nexport interface PostContextAuthor {\n    readonly nickname: Subscription<string | null>\n    readonly avatarURL: Subscription<URL | null>\n    readonly author: Subscription<ProfileIdentifier | null>\n    /** post id on the network. */\n    readonly postID: Subscription<string | null>\n}\n\nexport interface PostContextCoAuthor {\n    nickname?: string\n    avatarURL?: URL\n    author: ProfileIdentifier\n    post: PostIdentifier\n}\n\nexport interface PostContextComment {\n    readonly commentsSelector: LiveSelector<HTMLElement>\n    readonly commentBoxSelector: LiveSelector<HTMLElement>\n}\nexport interface PostContextCreation extends PostContextAuthor {\n    readonly rootElement: DOMProxy\n    readonly actionsElement?: DOMProxy\n    readonly isFocusing?: boolean\n    readonly suggestedInjectionPoint: HTMLElement\n    readonly comments?: PostContextComment\n    readonly coAuthors: Subscription<PostContextCoAuthor[]>\n    /**\n     * The result of this subscription will be merged with `PostContext.postMentionedLinks`.\n     *\n     * You don't need to provide this to resolve links in `PostContext.postContent`.\n     */\n    readonly postMentionedLinksProvider?: Subscription<string[]>\n    /** @deprecated It should parse image into rawMessage */\n    readonly postImagesProvider?: Subscription<string[]>\n    /**\n     * The raw TypedMessage that the site gives.\n     */\n    readonly rawMessage: Subscription<TypedMessage>\n    readonly signal?: AbortSignal\n}\nexport interface PostContext extends PostContextAuthor {\n    // #region DOM knowledge\n    get rootNode(): HTMLElement | null\n    readonly rootElement: DOMProxy\n    readonly actionsElement?: DOMProxy\n    readonly isFocusing?: boolean\n    readonly suggestedInjectionPoint: HTMLElement\n    // #endregion\n    readonly comment: PostContextComment | undefined\n    // #region Metadata of a post (author, mentioned items, ...)\n    /** Auto computed */\n    readonly identifier: Subscription<PostIdentifier | null>\n    readonly url: Subscription<URL | null>\n    readonly coAuthors: Subscription<PostContextCoAuthor[] | null>\n    // Meta\n    readonly mentionedLinks: Subscription<string[]>\n    /** @deprecated It should appears in rawMessage */\n    readonly postMetadataImages: Subscription<string[]>\n    // #endregion\n    // #region Raw post content (not decrypted)\n    readonly rawMessage: Subscription<TypedMessage>\n    readonly encryptComment: ValueRef<null | ((commentToEncrypt: string) => Promise<string>)>\n    readonly decryptComment: ValueRef<null | ((commentEncrypted: string) => Promise<string | null>)>\n    // #endregion\n    // #region Post payload discovered in the rawMessage\n    readonly hasMaskPayload: Subscription<boolean>\n    readonly postIVIdentifier: Subscription<PostIVIdentifier | null>\n    /**\n     * undefined => payload not found\n     */\n    readonly publicShared: Subscription<boolean | undefined>\n    readonly isAuthorOfPost: Subscription<boolean | undefined>\n    readonly version: Subscription<SupportedPayloadVersions | undefined>\n\n    decryptedReport(content: {\n        sharedPublic?: Some<boolean>\n        iv?: string\n        isAuthorOfPost?: Some<boolean>\n        version?: SupportedPayloadVersions\n    }): void\n    // #endregion\n}\nexport type PostInfo = PostContext\n\nexport const PostInfoContext = createContext<PostContext | null>(null)\nPostInfoContext.displayName = 'PostInfoContext'\n\n/** @deprecated use <PostInfoContext.Provider value={post}> */\nexport function PostInfoProvider(props: React.PropsWithChildren<{ post: PostInfo }>) {\n    return createElement(PostInfoContext.Provider, { value: props.post, children: props.children })\n}\nexport const usePostInfoDetails: {\n    // Change to use* when https://github.com/microsoft/TypeScript/issues/44643 fixed\n    [key in keyof PostInfo]: () => PostInfo[key] extends ValueRef<infer T>\n        ? T extends (...args: any) => any\n            ? T\n            : Readonly<T>\n        : PostInfo[key] extends ObservableSet<infer T>\n        ? ReadonlyArray<Readonly<T>>\n        : PostInfo[key] extends ObservableMap<any, infer T>\n        ? ReadonlyArray<Readonly<T>>\n        : PostInfo[key] extends Subscription<infer T>\n        ? Readonly<T>\n        : PostInfo[key]\n} = {\n    __proto__: new Proxy(\n        { __proto__: null },\n        {\n            get(_, key) {\n                if (typeof key === 'symbol') return undefined\n                function usePostInfoDetails() {\n                    const postInfo = useContext(PostInfoContext)\n                    if (!postInfo) throw new TypeError('No post context')\n                    if (!(key in postInfo)) throw new TypeError('postInfo.' + (key as string) + ' is not found')\n                    const k = postInfo[key as keyof PostInfo]\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (k instanceof ValueRef) return useValueRef<any>(k)\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (k instanceof ObservableMap) return useObservableValues<any>(k)\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (k instanceof ObservableSet) return useObservableValues<any>(k)\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\n                    if (isSubscription(k)) return useSubscription<any>(k)\n                    return k\n                }\n                Object.defineProperty(usePostInfoDetails, key, { value: usePostInfoDetails, configurable: true })\n                return usePostInfoDetails\n            },\n        },\n    ),\n} as any\nfunction isSubscription(x: any): x is Subscription<any> {\n    return (\n        typeof x === 'object' &&\n        x !== null &&\n        !!((x as Subscription<any>).getCurrentValue && (x as Subscription<any>).subscribe)\n    )\n}\n","/* eslint @masknet/unicode-specific-set: [\"error\", { \"only\": \"code\" }] */\nimport { Icons } from '@masknet/icons'\nimport { usePluginWrapper, usePostInfoDetails, type Plugin } from '@masknet/plugin-infra/content-script'\nimport { Typography } from '@mui/material'\nimport { Trans } from 'react-i18next'\nimport { useAsync } from 'react-use'\nimport { WarpFactory } from 'warp-contracts'\nimport { base } from '../base.js'\nimport { ARWEAVE_CONTRACT_ID, PLUGIN_DESCRIPTION, PLUGIN_NAME } from '../constants.js'\n\nconst warp = WarpFactory.forTestnet()\n\nfunction Renderer(postId) {\n    usePluginWrapper(true)\n\n    const { value, loading } = useAsync(() => {\n        return warp.contract(ARWEAVE_CONTRACT_ID).viewState({\n            function: 'readSentiment',\n            data: { entityID: 'twitter' + postId.postId },\n        })\n    }, [postId])\n\n    const { value: valueRead } = useAsync(() => {\n        return warp.contract(ARWEAVE_CONTRACT_ID).readState()\n    }, [postId])\n\n    const sendSentiment = () => {\n        console.log(postId)\n        warp.generateWallet().then(({ jwk: wallet, address: owner }) => {\n            warp.contract(ARWEAVE_CONTRACT_ID)\n                .connect(wallet)\n                .writeInteraction({\n                    function: 'writeSentiment',\n                    content: JSON.stringify({\n                        entityID: 'twitter' + postId.postId,\n                        score: 1,\n                        legitimacyProofs: [\n                            {\n                                vendor: 'lens',\n                            },\n                        ],\n                    }),\n                })\n        })\n    }\n\n    console.log(value, valueRead)\n\n    return (\n        <div>\n            <button onClick={sendSentiment}>Seems fishy!</button>\n            <Typography variant=\"h6\" fontWeight={700} color=\"red\">\n                {value?.result?.weight >= 5\n                    ? '\\u2757\\uFE0F\\u2757\\uFE0F\\u2757\\uFE0F THIS POST IS FISHY \\u2757\\uFE0F\\u2757\\uFE0F\\u2757\\uFE0F'\n                    : ''}\n            </Typography>\n        </div>\n    )\n}\n\nconst site: Plugin.SiteAdaptor.Definition = {\n    ...base,\n    init(signal) {},\n    PostInspector: function Component() {\n        const postID = usePostInfoDetails.postID()\n\n        return <Renderer postId={postID} />\n    },\n    ApplicationEntries: [\n        (() => {\n            const icon = <Icons.ScamSniffer size={36} />\n            return {\n                ApplicationEntryID: base.ID,\n                marketListSortingPriority: 19,\n                icon,\n                category: 'dapp',\n                description: <Trans i18nKey=\"__plugin_description\" defaults={PLUGIN_DESCRIPTION} ns={base.ID} />,\n                name: <Trans i18nKey=\"__plugin_name\" defaults={PLUGIN_NAME} ns={base.ID} />,\n                tutorialLink: 'https://scamsniffer.io/?utm_source=mask-setting',\n            }\n        })(),\n    ],\n}\n\nexport default site\n","import { useSyncExternalStore } from 'react'\nimport type { ValueRef, ValueRefJSON } from '@masknet/shared-base'\n\nfunction getServerSnapshot(): never {\n    throw new Error('getServerSnapshot is not supported')\n}\nexport function useValueRef<T>(ref: ValueRef<T>): Readonly<T> {\n    return useSyncExternalStore(\n        (f) => ref.addListener(f),\n        () => ref.value,\n        getServerSnapshot,\n    )\n}\n\n/** @deprecated */\nexport function useValueRefJSON<T extends object>(ref: ValueRefJSON<T>): Readonly<T> {\n    return useSyncExternalStore(\n        (f) => ref.addListener(f),\n        () => ref.asJSON,\n    )\n}\n","import e from\"void-elements\";var t=/\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g;function n(n){var r={type:\"tag\",name:\"\",voidElement:!1,attrs:{},children:[]},i=n.match(/<\\/?([^\\s]+?)[/\\s>]/);if(i&&(r.name=i[1],(e[i[1]]||\"/\"===n.charAt(n.length-2))&&(r.voidElement=!0),r.name.startsWith(\"!--\"))){var s=n.indexOf(\"--\\x3e\");return{type:\"comment\",comment:-1!==s?n.slice(4,s):\"\"}}for(var a=new RegExp(t),c=null;null!==(c=a.exec(n));)if(c[0].trim())if(c[1]){var o=c[1].trim(),l=[o,\"\"];o.indexOf(\"=\")>-1&&(l=o.split(\"=\")),r.attrs[l[0]]=l[1],a.lastIndex--}else c[2]&&(r.attrs[c[2]]=c[3].trim().substring(1,c[3].length-1));return r}var r=/<[a-zA-Z0-9\\-\\!\\/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g,i=/^\\s*$/,s=Object.create(null);function a(e,t){switch(t.type){case\"text\":return e+t.content;case\"tag\":return e+=\"<\"+t.name+(t.attrs?function(e){var t=[];for(var n in e)t.push(n+'=\"'+e[n]+'\"');return t.length?\" \"+t.join(\" \"):\"\"}(t.attrs):\"\")+(t.voidElement?\"/>\":\">\"),t.voidElement?e:e+t.children.reduce(a,\"\")+\"</\"+t.name+\">\";case\"comment\":return e+\"\\x3c!--\"+t.comment+\"--\\x3e\"}}var c={parse:function(e,t){t||(t={}),t.components||(t.components=s);var a,c=[],o=[],l=-1,m=!1;if(0!==e.indexOf(\"<\")){var u=e.indexOf(\"<\");c.push({type:\"text\",content:-1===u?e:e.substring(0,u)})}return e.replace(r,function(r,s){if(m){if(r!==\"</\"+a.name+\">\")return;m=!1}var u,f=\"/\"!==r.charAt(1),h=r.startsWith(\"\\x3c!--\"),p=s+r.length,d=e.charAt(p);if(h){var v=n(r);return l<0?(c.push(v),c):((u=o[l]).children.push(v),c)}if(f&&(l++,\"tag\"===(a=n(r)).type&&t.components[a.name]&&(a.type=\"component\",m=!0),a.voidElement||m||!d||\"<\"===d||a.children.push({type:\"text\",content:e.slice(p,e.indexOf(\"<\",p))}),0===l&&c.push(a),(u=o[l-1])&&u.children.push(a),o[l]=a),(!f||a.voidElement)&&(l>-1&&(a.voidElement||a.name===r.slice(2,-1))&&(l--,a=-1===l?c:o[l]),!m&&\"<\"!==d&&d)){u=-1===l?c:o[l].children;var x=e.indexOf(\"<\",p),g=e.slice(p,-1===x?void 0:x);i.test(g)&&(g=\" \"),(x>-1&&l+u.length>=0||\" \"!==g)&&u.push({type:\"text\",content:g})}}),c},stringify:function(e){return e.reduce(function(e,t){return e+a(\"\",t)},\"\")}};export default c;\n","/**\n * @license React\n * use-subscription.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=require(\"use-sync-external-store/shim\");exports.useSubscription=function(a){return b.useSyncExternalStore(a.subscribe,a.getCurrentValue)};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/use-subscription.production.min.js');\n} else {\n  module.exports = require('./cjs/use-subscription.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * This file automatically generated from `pre-publish.js`.\n * Do not manually edit.\n */\n\nmodule.exports = {\n  \"area\": true,\n  \"base\": true,\n  \"br\": true,\n  \"col\": true,\n  \"embed\": true,\n  \"hr\": true,\n  \"img\": true,\n  \"input\": true,\n  \"link\": true,\n  \"meta\": true,\n  \"param\": true,\n  \"source\": true,\n  \"track\": true,\n  \"wbr\": true\n};\n"],"names":["createContext","useEffect","useContext","noop","emptyPluginWrapperMethods","setWrap","setWrapperName","setWidth","PluginWrapperMethodsContext","displayName","usePluginWrapper","open","options","width","name","useMemo","useSubscription","useObservableValues","map","subscription","getCurrentValue","asValues","subscribe","callback","event","on","ALL_EVENTS","createElement","ObservableMap","ObservableSet","ValueRef","useValueRef","PostInfoContext","PostInfoProvider","props","Provider","value","post","children","usePostInfoDetails","__proto__","Proxy","get","_","key","undefined","postInfo","TypeError","k","isSubscription","Object","defineProperty","configurable","x","Icons","Typography","Trans","useAsync","WarpFactory","base","ARWEAVE_CONTRACT_ID","PLUGIN_DESCRIPTION","PLUGIN_NAME","warp","forTestnet","Renderer","postId","loading","contract","viewState","function","data","entityID","valueRead","readState","sendSentiment","console","log","generateWallet","then","jwk","wallet","address","owner","connect","writeInteraction","content","JSON","stringify","score","legitimacyProofs","vendor","div","button","onClick","variant","fontWeight","color","result","weight","site","init","signal","PostInspector","Component","postID","ApplicationEntries","icon","ScamSniffer","size","ApplicationEntryID","ID","marketListSortingPriority","category","description","i18nKey","defaults","ns","tutorialLink","useSyncExternalStore","getServerSnapshot","Error","ref","f","addListener","useValueRefJSON","asJSON"],"sourceRoot":"","x_google_ignoreList":[5,6,7,8,9,10]}