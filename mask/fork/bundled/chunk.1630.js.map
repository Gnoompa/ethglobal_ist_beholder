{"version":3,"file":"bundled/chunk.1630.js","mappings":"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r1B,kDAAWA,CAAC,IAAM+9B,iBAAiB;QAACA;KAAc;IAEnE,mDAAmD;IACnD,OAAO;QACHn+B,OAAO00B;QACPc,MAAMC;QACNnQ,SAAS4Y;QACT5I,MAAM,CAAC8I;QACPhH,OAAOiH;QACPvyB;QACAwyB;IACJ;AACJ;;;;;;;;;;;;AC5E4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,2CAA2C,4EAA4E,IAAI;AAClI,8BAA8B,+CAAQ;AACtC,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;ACjGA;AAC6E;AAC3B;;AAElD;AACA,kBAAkB,8EAAc;AAChC,SAAS,wEAAY,UAAU,gFAAqB;AACpD;;AAE4B;AAC5B","sources":["webpack://mask-network/./packages/mask/content-script/utils/pasteImageToActiveElements.ts","webpack://mask-network/./packages/mask/content-script/site-adaptor-infra/defaults/automation/AttachImageToComposition.ts","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/CommentBox.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptor-infra/defaults/inject/CommentBox.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Lock.js","webpack://mask-network/./packages/mask/content-script/components/InjectedComponents/PostComments.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptor-infra/defaults/inject/Comments.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/utils/parse-username.ts","webpack://mask-network/./packages/mask/shared/site-adaptors/implementations/facebook.com.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/shared.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/automation/openComposeBox.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/automation/pasteTextToComposition.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/utils/selector.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/utils/getProfileIdentifier.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/utils/user.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/collecting/identity.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/Composition.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/Banner.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/automation/pasteToCommentBoxFacebook.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/PostInspector.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/collecting/getSearchedKeyword.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/SearchResultInspector.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/collecting/posts.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/collecting/theme.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/customization/custom.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/ToolbarUI.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/Toolbar.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/NFT/ProfileNFTAvatar.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/NFT/NFTAvatarInFacebook.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/utils/avatar.ts","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/NFT/NFTAvatarInTimeline.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/NFT/NFTAvatarEditProfile.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/ProfileTab.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/PostReplacer.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/ProfileContent.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/customization/render-fragments.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/ProfileCover.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/injection/Avatar/index.tsx","webpack://mask-network/./packages/mask/content-script/site-adaptors/facebook.com/ui-provider.ts","webpack://mask-network/./packages/mask/shared-ui/locales_legacy/index.ts","webpack://mask-network/./packages/plugins/Avatar/src/SiteAdaptor/NFTImage.tsx","webpack://mask-network/./packages/plugins/Avatar/src/SiteAdaptor/NFTAvatar.tsx","webpack://mask-network/./packages/plugins/Avatar/src/hooks/useNFTAvatar.ts","webpack://mask-network/./packages/web3-hooks/base/src/useAllowTestnet.ts","webpack://mask-network/./packages/shared/src/UI/components/ChainBoundary/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/ElementAnchor/index.tsx","webpack://mask-network/./packages/shared/src/utils/isSameNFT.ts","webpack://mask-network/./packages/web3-hooks/base/src/useBlockedNonFungibleTokens.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNetworkDescriptors.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNonFungibleAssets.ts","webpack://mask-network/./node_modules/.pnpm/@react-hookz+web@23.1.0_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-experimental-0a360642d-20230711/node_modules/@react-hookz/web/esm/useIntersectionObserver/index.js","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs"],"sourcesContent":["import { pasteImage } from '@masknet/injected-script'\n\n/**\n * paste image to activeElements\n * @param image\n */\n\nexport async function pasteImageToActiveElements(image: File | Blob): Promise<void> {\n    pasteImage(new Uint8Array(await image.arrayBuffer()))\n}\n","import { waitDocumentReadyState } from '@masknet/kit'\nimport type { SiteAdaptorUI } from '@masknet/types'\nimport { MaskMessages } from '@masknet/shared-base'\nimport { activatedSiteAdaptorUI } from '../../ui.js'\nimport { downloadUrl, pasteImageToActiveElements } from '../../../utils/index.js'\n\nexport function pasteImageToCompositionDefault(hasSucceed: () => Promise<boolean> | boolean) {\n    return async function (\n        url: string | Blob,\n        { recover, relatedTextPayload }: SiteAdaptorUI.AutomationCapabilities.NativeCompositionAttachImageOptions,\n    ) {\n        const image = typeof url === 'string' ? await downloadUrl(url) : url\n        await waitDocumentReadyState('interactive')\n        if (relatedTextPayload) {\n            const p: Promise<void> | undefined =\n                activatedSiteAdaptorUI!.automation.nativeCompositionDialog?.attachText?.(relatedTextPayload, {\n                    recover: false,\n                })\n            await p\n        }\n        await pasteImageToActiveElements(image)\n\n        if (await hasSucceed()) return\n        if (recover) {\n            MaskMessages.events.autoPasteFailed.sendToLocal({ text: relatedTextPayload || '', image })\n        }\n    }\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Box, InputBase } from '@mui/material'\nimport { activatedSiteAdaptorUI } from '../../site-adaptor-infra/index.js'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport { EnhanceableSite } from '@masknet/shared-base'\n\ninterface StyleProps {\n    site: EnhanceableSite\n}\n\nconst useStyles = makeStyles<StyleProps>()((_theme, { site }) => ({\n    root: {\n        flex: 1,\n        fontSize: 13,\n        background: '#3a3b3c',\n        width: site === EnhanceableSite.Minds ? '96%' : '100%',\n        height: 34,\n        borderRadius: 20,\n        padding: '2px 1em',\n        boxSizing: 'border-box',\n        marginTop: 6,\n        color: '#e4e6eb',\n    },\n    input: {\n        '&::placeholder': {\n            color: '#b0b3b8',\n            opacity: 1,\n        },\n        '&:focus::placeholder': {\n            color: '#d0d2d6',\n        },\n    },\n}))\n\nexport interface CommentBoxProps {\n    onSubmit: (newVal: string) => void\n    inputProps?: Partial<PropsOf<typeof InputBase>>\n}\nexport function CommentBox(props: CommentBoxProps) {\n    const { classes } = useStyles({ site: activatedSiteAdaptorUI!.networkIdentifier })\n    const t = useMaskSharedTrans()\n    return (\n        <Box sx={{ display: 'flex', width: '100%' }}>\n            <InputBase\n                className={classes.root}\n                inputProps={{ className: classes.input, 'data-testid': 'comment_input' }}\n                placeholder={t.comment_box__placeholder()}\n                onKeyDown={(event) => {\n                    const node = event.target as HTMLInputElement\n                    if (!node.value) return\n                    if (event.key !== 'Enter') return\n                    props.onSubmit(node.value)\n                    node.value = '' // clear content\n                }}\n                {...props.inputProps}\n            />\n        </Box>\n    )\n}\n","import { memo, useCallback, useContext } from 'react'\nimport { type PostInfo, usePostInfoDetails, PostInfoContext } from '@masknet/plugin-infra/content-script'\nimport { type DOMProxy, MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { makeStyles } from '@masknet/theme'\nimport { MaskMessages } from '@masknet/shared-base'\nimport { CommentBox, type CommentBoxProps } from '../../../components/InjectedComponents/CommentBox.js'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\n\nasync function defaultOnPasteToCommentBox(\n    encryptedComment: string,\n    _current: PostInfo,\n    _realCurrent: HTMLElement | null,\n) {\n    MaskMessages.events.autoPasteFailed.sendToLocal({ text: encryptedComment })\n}\n\n// TODO: should not rely on onPasteToCommentBoxFacebook.\n// Use automation.nativeCommentBox.appendText\nexport const injectCommentBoxDefaultFactory = function <T extends string>(\n    onPasteToCommentBox = defaultOnPasteToCommentBox,\n    additionPropsToCommentBox: (classes: Record<T, string>) => Partial<CommentBoxProps> = () => ({}),\n    useCustomStyles: (props?: any) => {\n        classes: Record<T, string>\n    } = makeStyles()({}) as any,\n    mountPointCallback?: (node: DOMProxy) => void,\n) {\n    const CommentBoxUI = memo(function CommentBoxUI({ dom }: { dom: HTMLElement | null }) {\n        const info = useContext(PostInfoContext)\n        const encryptComment = usePostInfoDetails.encryptComment()\n        const { classes } = useCustomStyles()\n        const props = additionPropsToCommentBox(classes)\n        const onCallback = useCallback(\n            async (content: string) => {\n                if (!encryptComment) return\n                const encryptedComment = await encryptComment(content)\n                onPasteToCommentBox(encryptedComment, info!, dom)\n            },\n            [encryptComment, info, dom],\n        )\n\n        if (!encryptComment) return null\n        return <CommentBox onSubmit={onCallback} {...props} />\n    })\n    return (signal: AbortSignal, current: PostInfo) => {\n        if (!current.comment?.commentBoxSelector) return\n        const commentBoxWatcher = new MutationObserverWatcher(\n            current.comment.commentBoxSelector.clone(),\n            document.body,\n        ).useForeach((node, key, meta) => {\n            try {\n                mountPointCallback?.(meta)\n            } catch {}\n            const root = attachReactTreeWithContainer(meta.afterShadow, { signal })\n            root.render(\n                <PostInfoContext.Provider value={current}>\n                    <CommentBoxUI {...{ ...current, dom: meta.realCurrent }} />\n                </PostInfoContext.Provider>,\n            )\n            return root.destroy\n        })\n        startWatch(commentBoxWatcher, signal)\n    }\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"\n}), 'Lock');","import { useEffect } from 'react'\nimport { useAsync } from 'react-use'\nimport { Chip } from '@mui/material'\nimport type { ChipProps } from '@mui/material/Chip'\nimport { Lock } from '@mui/icons-material'\nimport type { ValueRef } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { makeStyles } from '@masknet/theme'\nimport { usePostInfoDetails } from '@masknet/plugin-infra/content-script'\n\nconst useStyle = makeStyles()({\n    root: {\n        height: 'auto',\n        width: 'calc(98% - 10px)',\n        padding: '6px',\n    },\n    label: {\n        width: '90%',\n        overflowWrap: 'break-word',\n        whiteSpace: 'normal',\n        textOverflow: 'clip',\n    },\n})\ntype PostCommentDecryptedProps = React.PropsWithChildren<{ ChipProps?: ChipProps }>\nfunction PostCommentDecrypted(props: PostCommentDecryptedProps) {\n    const { classes } = useStyle(undefined, { props: props.ChipProps || {} })\n    return (\n        <>\n            <Chip\n                data-testid=\"comment_field\"\n                icon={<Lock />}\n                label={props.children}\n                color=\"secondary\"\n                {...props.ChipProps}\n                classes={{ root: classes.root, label: classes.label }}\n            />\n        </>\n    )\n}\nexport interface PostCommentProps {\n    comment: ValueRef<string>\n    needZip(): void\n}\nexport function PostComment(props: PostCommentProps) {\n    const { needZip } = props\n    const comment = useValueRef(props.comment)\n    const decrypt = usePostInfoDetails.decryptComment()\n\n    const { value } = useAsync(async () => decrypt?.(comment), [decrypt, comment])\n\n    useEffect(() => void (value && needZip()), [value, needZip])\n    if (value) return <PostCommentDecrypted>{value}</PostCommentDecrypted>\n    return null\n}\n","import { memo } from 'react'\nimport { type PostInfo, PostInfoProvider } from '@masknet/plugin-infra/content-script'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { makeStyles } from '@masknet/theme'\nimport { ValueRef } from '@masknet/shared-base'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport { PostComment, type PostCommentProps } from '../../../components/InjectedComponents/PostComments.js'\nimport { collectNodeText } from '../../../utils/index.js'\n\ninterface injectPostCommentsDefaultConfig {\n    needZip?(): void\n}\n/**\n * Create a default implementation of injectPostComments\n */\nexport function injectPostCommentsDefault<T extends string>(\n    config: injectPostCommentsDefaultConfig = {},\n    additionalPropsToPostComment: (classes: Record<T, string>) => Partial<PostCommentProps> = () => ({}),\n    useCustomStyles: (props?: any) => {\n        classes: Record<T, string>\n    } = makeStyles()({}) as any,\n) {\n    const { needZip } = config\n    const PostCommentDefault = memo(function PostCommentDefault(props: Pick<PostCommentProps, 'needZip' | 'comment'>) {\n        const { classes } = useCustomStyles()\n        const additional = additionalPropsToPostComment(classes)\n        return <PostComment {...props} {...additional} />\n    })\n    return function injectPostComments(signal: AbortSignal, current: PostInfo) {\n        const selector = current.comment?.commentsSelector\n        if (!selector) return\n        const commentWatcher = new MutationObserverWatcher(selector, document.body).useForeach(\n            (commentNode, key, meta) => {\n                const commentRef = new ValueRef(collectNodeText(commentNode))\n                const needZipF = needZip || (() => undefined)\n                const root = attachReactTreeWithContainer(meta.afterShadow, { signal })\n                root.render(\n                    <PostInfoProvider post={current}>\n                        <PostCommentDefault needZip={needZipF} comment={commentRef} />\n                    </PostInfoProvider>,\n                )\n                return {\n                    onNodeMutation() {\n                        commentRef.value = collectNodeText(commentNode)\n                    },\n                    onTargetChanged() {\n                        commentRef.value = collectNodeText(commentNode)\n                    },\n                    onRemove() {\n                        root.destroy()\n                    },\n                }\n            },\n        )\n        startWatch(commentWatcher, signal)\n    }\n}\n","import type { ProfileIdentifier, PostIdentifier } from '@masknet/shared-base'\nimport { isMobileFacebook } from './isMobile.js'\nimport { i18n } from '../../../../shared-ui/locales_legacy/index.js'\n\n/**\n * @see https://www.facebook.com/help/105399436216001#What-are-the-guidelines-around-creating-a-custom-username?\n * ! Start to use this in a breaking change!\n */\nexport function isValidFacebookUsername(name: string) {\n    if (!name) return null\n    // Avoid common mistake\n    if (name === 'photo.php') return null\n    const n = name.toLowerCase().replaceAll('.', '')\n    if (n.match(/^[\\da-z]+$/)) {\n        return n\n    }\n    return null\n}\n/**\n * Normalize post url\n */\nexport function getPostUrlAtFacebook(post: PostIdentifier) {\n    const id = post.identifier\n    const { postId } = post\n    const { userId } = id\n    const host = getFacebookHostName()\n    if (!isValidFacebookUsername(userId)) return host\n    if (Number.parseFloat(userId)) return `${host}/permalink.php?story_fbid=${postId}&id=${userId}`\n    return `${host}/${userId}/posts/${postId}`\n}\n/**\n * Normalize profile url\n */\nexport function getProfilePageUrlAtFacebook(user: ProfileIdentifier) {\n    if (user.network !== 'facebook.com') throw new Error('Wrong origin')\n\n    const host = getFacebookHostName()\n    const username = user.userId\n    if (!isValidFacebookUsername(username)) throw new TypeError(i18n.t('service_username_invalid'))\n    if (Number.parseFloat(username)) return `${host}/profile.php?id=${username}`\n    return `${host}/${username}`\n}\nfunction getFacebookHostName() {\n    if (isMobileFacebook) return 'https://m.facebook.com'\n    return 'https://www.facebook.com'\n}\n","import urlcat from 'urlcat'\nimport { EnhanceableSite } from '@masknet/shared-base'\nimport type { SiteAdaptor } from '../types.js'\n\nconst origins = ['https://www.facebook.com/*', 'https://m.facebook.com/*', 'https://facebook.com/*']\nexport const FacebookAdaptor: SiteAdaptor.Definition = {\n    name: 'Facebook',\n    networkIdentifier: EnhanceableSite.Facebook,\n    declarativePermissions: { origins },\n    homepage: 'https://www.facebook.com',\n    isSocialNetwork: true,\n    sortIndex: 1,\n    getProfilePage: () => new URL('https://www.facebook.com'),\n    getShareLinkURL(message) {\n        const url = urlcat('https://www.facebook.com/sharer/sharer.php', {\n            quote: message,\n            u: 'mask.io',\n        })\n        return new URL(url)\n    },\n}\n","import type { SiteAdaptor } from '@masknet/types'\nimport { facebookBase } from './base.js'\nimport { getPostUrlAtFacebook, isValidFacebookUsername } from './utils/parse-username.js'\nimport type { PostIdentifier } from '@masknet/shared-base'\nimport { hasPayloadLike } from '../../utils/index.js'\nimport { createSiteAdaptorSpecializedPostContext } from '../../site-adaptor-infra/utils/create-post-context.js'\nimport { openWindow } from '@masknet/shared-base-ui'\nimport { FacebookAdaptor } from '../../../shared/site-adaptors/implementations/facebook.com.js'\n\nfunction getPostURL(post: PostIdentifier): URL | null {\n    return new URL(getPostUrlAtFacebook(post))\n}\nexport const facebookShared: SiteAdaptor.Shared & SiteAdaptor.Base = {\n    ...facebookBase,\n    utils: {\n        isValidUsername: (v) => !!isValidFacebookUsername(v),\n        getPostURL,\n        share(message) {\n            openWindow(FacebookAdaptor.getShareLinkURL?.(message))\n        },\n        createPostContext: createSiteAdaptorSpecializedPostContext({\n            hasPayloadLike,\n            getURLFromPostIdentifier: getPostURL,\n        }),\n    },\n}\n","import { LiveSelector } from '@dimensiondev/holoflows-kit'\nimport { CrossIsolationMessages, type CompositionDialogEvent } from '@masknet/shared-base'\nimport { i18n } from '../../../../shared-ui/locales_legacy/index.js'\nimport { makeTypedMessageText, type SerializableTypedMessages } from '@masknet/typed-message'\nimport { delay, waitDocumentReadyState } from '@masknet/kit'\n\nfunction nativeComposeButtonSelector() {\n    return new LiveSelector()\n        .querySelector<HTMLDivElement>(\n            [\n                '[role=\"region\"] [role=\"link\"]+[role=\"button\"]',\n                '#MComposer [role=\"button\"]', // mobile\n            ].join(','),\n        )\n        .enableSingleMode()\n}\n\nfunction nativeComposeTextareaSelector() {\n    return new LiveSelector()\n        .querySelector<HTMLTextAreaElement>(\n            [\n                '#structured_composer_form .mentions textarea', // mobile\n            ].join(','),\n        )\n        .enableSingleMode()\n}\n\nfunction nativeComposeDialogIndicatorSelector() {\n    return new LiveSelector().querySelector<HTMLDivElement>(\n        [\n            // PC -  the form of compose dialog\n            '[role=\"dialog\"] form[method=\"post\"]',\n\n            // mobile - the submit button\n            '#composer-main-view-id button[type=\"submit\"]',\n        ].join(','),\n    )\n}\n\nfunction nativeComposeDialogCloseButtonSelector() {\n    return new LiveSelector().querySelector<HTMLDivElement>('[role=\"dialog\"] form[method=\"post\"] [role=\"button\"]')\n}\n\nexport async function taskOpenComposeBoxFacebook(\n    content: string | SerializableTypedMessages,\n    options?: CompositionDialogEvent['options'],\n) {\n    await waitDocumentReadyState('interactive')\n    await delay(200)\n\n    // active the compose dialog\n    const composeTextarea = nativeComposeTextareaSelector().evaluate()\n    const composeButton = nativeComposeButtonSelector().evaluate()\n    if (composeTextarea) composeTextarea.focus()\n    if (composeButton) composeButton.click()\n    await delay(200)\n\n    // the indicator only available when compose dialog opened successfully\n    const composeIndicator = nativeComposeDialogIndicatorSelector().evaluate()\n    if (!composeIndicator) {\n        // eslint-disable-next-line no-alert\n        alert(i18n.t('automation_request_click_post_button'))\n        return\n    }\n\n    await delay(2000)\n    CrossIsolationMessages.events.compositionDialogEvent.sendToLocal({\n        reason: 'popup',\n        open: true,\n        content: typeof content === 'string' ? makeTypedMessageText(content) : content,\n        options,\n    })\n}\n\nexport async function taskCloseNativeComposeBoxFacebook() {\n    await waitDocumentReadyState('interactive')\n    await delay(200)\n    const closeDialogButton = nativeComposeDialogCloseButtonSelector().evaluate()?.[0]\n    closeDialogButton?.click()\n}\n","import { LiveSelector } from '@dimensiondev/holoflows-kit'\nimport type { SiteAdaptorUI } from '@masknet/types'\nimport { inputText, pasteText } from '@masknet/injected-script'\nimport { delay, waitDocumentReadyState } from '@masknet/kit'\nimport { MaskMessages } from '@masknet/shared-base'\nimport { isMobileFacebook } from '../utils/isMobile.js'\n\n/**\n * Access: https://(www|m).facebook.com/\n */\nexport async function pasteTextToCompositionFacebook(\n    text: string,\n    options: SiteAdaptorUI.AutomationCapabilities.NativeCompositionAttachTextOptions,\n) {\n    const { recover } = options\n    await waitDocumentReadyState('interactive')\n    // Save the scrolling position\n    const scrolling = document.scrollingElement || document.documentElement\n    const scrollBack = (\n        (top) => () =>\n            scrolling.scroll({ top })\n    )(scrolling.scrollTop)\n\n    const activated = new LiveSelector().querySelectorAll<HTMLDivElement | HTMLTextAreaElement>(\n        // cspell:disable-next-line\n        isMobileFacebook ? 'form textarea' : 'div[role=presentation] .notranslate[role=textbox]',\n    )\n    if (isMobileFacebook) activated.filter((x) => x.getClientRects().length > 0)\n\n    // Select element with fb customize background image.\n    const activatedCustom = new LiveSelector().querySelectorAll<HTMLDivElement | HTMLTextAreaElement>(\n        '.notranslate[aria-label]',\n    )\n\n    activatedCustom.filter((x) => x.parentElement?.parentElement?.parentElement?.parentElement?.hasAttribute('style'))\n\n    const element = activated.evaluate()[0] ?? activatedCustom.evaluate()[0]\n    try {\n        element.focus()\n        await delay(100)\n\n        const selection = window.getSelection()\n        if (selection) {\n            if (selection.rangeCount > 0) {\n                selection.removeAllRanges()\n            }\n            if (element.firstChild) {\n                const range = document.createRange()\n                range.selectNode(element.firstChild)\n                selection.addRange(range)\n            }\n        }\n        if ('value' in document.activeElement!) inputText(text)\n        else pasteText(text)\n        await delay(200)\n        if (isMobileFacebook) {\n            const e = document.querySelector<HTMLDivElement | HTMLTextAreaElement>('.mentions-placeholder')\n            if (e) e.style.display = 'none'\n        }\n        // Prevent Custom Paste failed, this will cause service not available to user.\n        if (!element.innerText.includes(text) || ('value' in element && !element.value.includes(text)))\n            copyFailed('Not detected')\n    } catch (error) {\n        copyFailed(error)\n    }\n    scrollBack()\n    function copyFailed(error: unknown) {\n        console.warn('Text not pasted to the text area', error)\n        if (recover) MaskMessages.events.autoPasteFailed.sendToLocal({ text })\n    }\n}\n","import { LiveSelector } from '@dimensiondev/holoflows-kit'\nimport { compact } from 'lodash-es'\n\ntype E = HTMLElement\n\nfunction querySelector<T extends E, SingleMode extends boolean = true>(selector: string, singleMode = true) {\n    const ls = new LiveSelector<T, SingleMode>().querySelector<T>(selector)\n    return (singleMode ? ls.enableSingleMode() : ls) as LiveSelector<T, SingleMode>\n}\n\nfunction querySelectorAll<T extends E>(selector: string) {\n    return new LiveSelector().querySelectorAll<T>(selector)\n}\n\nexport function searchUserIdOnMobileSelector() {\n    return querySelector<HTMLAnchorElement>('div[data-sigil$=\"profile\"] a')\n}\n\nexport function searchAvatarSelector() {\n    return querySelector<HTMLImageElement>(\n        '[role=\"navigation\"] svg g image, [role=\"main\"] [role=\"link\"] [role=\"img\"] image, [role=\"main\"] [role=\"button\"] [role=\"img\"] image',\n    )\n}\n\nexport function searchNickNameSelector(userId?: string | null) {\n    return querySelector<HTMLHeadingElement>(\n        compact([userId ? `a[href$=\"id=${userId}\"]` : undefined, 'span[dir=\"auto\"] div h1']).join(','),\n    )\n}\n\nexport function searchNickNameSelectorOnMobile() {\n    return querySelector<E>('#cover-name-root h3')\n}\n\nexport function bioDescriptionSelectorOnMobile() {\n    return querySelector('#bio div')\n}\n\nexport function searchUserIdSelector() {\n    return querySelector<HTMLAnchorElement>('div[role=\"tablist\"][data-visualcompletion=\"ignore-dynamic\"] a[role=\"tab\"]')\n}\n\nexport function searchUserIdSelectorOnMobile() {\n    return querySelector<HTMLAnchorElement>('#tlFeed div[data-sigil=\"scroll-area\"] a:last-child')\n}\n// #endregion facebook nft avatar\n\nexport function searchFacebookAvatarListSelector() {\n    return querySelector('[role=\"dialog\"] > div:nth-child(3)  input[type=file] + [role=\"button\"]')\n        .closest(3)\n        .querySelector('div')\n}\n\nexport function searchFacebookAvatarMobileListSelector() {\n    return querySelector('#nuxChoosePhotoButton').closest<E>(6)\n}\n\nexport function searchFacebookAvatarSelector() {\n    return querySelector('[role=\"main\"] [role=\"button\"] svg[role=\"img\"],[role=\"main\"] [role=\"link\"] svg[role=\"img\"]')\n}\n\nexport function searchFacebookAvatarOnMobileSelector() {\n    return querySelector('[data-sigil=\"timeline-cover\"] i[aria-label$=\"picture\"]')\n}\n\nexport function searchFaceBookPostAvatarSelector() {\n    return new LiveSelector<SVGElement, false>().querySelectorAll<SVGElement>(\n        '[type=\"nested/pressable\"] > a > div > svg, ul div[role=\"article\"] a > div > svg[role=\"none\"]',\n    )\n}\n\nexport function searchFaceBookPostAvatarOnMobileSelector() {\n    return querySelectorAll('[data-gt=\\'{\"tn\":\"~\"}\\']')\n}\n\nexport function searchFacebookAvatarOpenFilesSelector() {\n    return querySelector('[role=\"dialog\"] input[type=file] ~ div')\n}\n\nexport function searchFacebookAvatarOpenFilesOnMobileSelector() {\n    return querySelector<HTMLInputElement>('#nuxChoosePhotoButton ~ input')\n}\n\nexport function searchFacebookProfileSettingButtonSelector() {\n    return querySelector(\n        '[role=\"main\"] > div > div > div > div > div input[accept*=\"image\"] + div[role=\"button\"]',\n    ).closest<E>(2)\n}\n\nexport function searchFacebookProfileCoverSelector() {\n    return querySelector('[role=\"button\"] [role=\"img\"]')\n        .closest(10)\n        .querySelector('input[type=\"file\"] ~ div')\n        .closest<E>(6)\n        .querySelector('div')\n}\n\nexport function searchFacebookEditProfileSelector() {\n    return querySelector('[role=\"main\"] [role=\"button\"] [role=\"img\"]')\n        .closest(1)\n        .querySelector<E>('i[data-visualcompletion=\"css-img\"]')\n}\n\nexport function searchFacebookSaveAvatarButtonSelector() {\n    return new LiveSelector()\n        .querySelector('[role=\"dialog\"] [role=\"slider\"]')\n        .closest(7)\n        .querySelectorAll('div')\n        .map((x) => x.parentElement?.parentElement)\n        .at(-1)\n}\n\nexport function searchFacebookConfirmAvatarImageSelector() {\n    return querySelector('[role=\"dialog\"] [role=\"slider\"]').closest(7).querySelector('img')\n}\n\nexport function inpageAvatarSelector() {\n    return querySelectorAll('[type=\"nested/pressable\"]').closest<HTMLAnchorElement>(2)\n}\n// #region\n\nexport function toolboxInSidebarSelector() {\n    return querySelector<E>('[data-pagelet=\"LeftRail\"] > div > div > :nth-child(2) > ul > li:nth-child(2)')\n}\n\nexport function toolboxInSpecialSidebarSelector() {\n    return querySelector(\n        '[role=\"navigation\"] > div > div > div > :nth-child(2) > div > div > :nth-child(2) ul > li:nth-child(2)',\n    )\n}\nexport function toolboxInSidebarSelectorWithNoLeftRailStart() {\n    return querySelector<E, false>('[role=\"banner\"]')\n        .closest(1)\n        .querySelector('div + div > div > div > div > div > div > div > div > ul')\n        .closest(1)\n        .querySelector('div:nth-child(2) > ul > li:nth-child(2)')\n}\n\n// for getting normal tab style\nexport function profileTabUnselectedSelector() {\n    return querySelector<E>('[role=\"tablist\"] a[aria-selected=\"false\"]')\n}\n\n// for getting activated tab style\nexport function profileTabSelectedSelector() {\n    return querySelector<E>('[role=\"tablist\"] a[aria-selected=\"true\"]')\n}\n\n// for inserting web3 tab\nexport function searchProfileTabSelector() {\n    return querySelector<E>('[role=\"tablist\"] > div > div > :last-child')\n}\n\n// for getting the inserted web3 tab\nexport function web3TabSelector() {\n    return querySelector<HTMLSpanElement>('[role=\"tablist\"] a:nth-child(7)+span')\n}\n\n// for inserting web3 tab content\nexport function searchProfileTabPageSelector() {\n    return querySelector<E>('[role=\"main\"] > div:last-child > div')\n}\n\n// for getting profile section style\nexport function profileSectionSelector() {\n    return querySelector<E>('[role=\"main\"]').querySelector('[style]')\n}\n\nexport function searchIntroSectionSelector() {\n    return querySelector<E>('[role=\"main\"] > div:last-child > div:last-child')\n}\n\nexport function searchBioSelector() {\n    return querySelector<E>(\n        '[role=\"main\"] > div:last-child > div:last-child > div > div > div:last-child > div > div > div > div > div > div > div:nth-child(2) > div span',\n    )\n}\n\nexport function searchResultHeadingSelector() {\n    return querySelector('[role=\"article\"]')\n}\n\nexport function searchHomepageSelector() {\n    return querySelector<HTMLSpanElement>('[data-pagelet=\"ProfileTilesFeed_0\"] ul a span[dir=\"auto\"]')\n}\n","import { ProfileIdentifier, EnhanceableSite } from '@masknet/shared-base'\nimport type { IdentityResolved } from '@masknet/plugin-infra'\nimport Services from '#services'\nimport { getCurrentIdentifier } from '../../utils.js'\nimport { searchUserIdOnMobileSelector } from './selector.js'\n\ntype link = HTMLAnchorElement | null | undefined\n\n/**\n *\n * @param allowCollectInfo\n * @param links\n *  Could be a group of anchor element. Seems like this:\n *  [\n *      <a class=\"_2nlw _2nlv\" href=\"https://www.facebook.com/xxx\">\n *          [USERNAME HERE]\n *          <span class=\"alternate_name\">\n *              ([USER SCREEN NAME HERE])\n *          </span>\n *      </a>\n *  ]\n */\nexport function getProfileIdentifierAtFacebook(links: link[] | link, allowCollectInfo?: boolean): IdentityResolved {\n    const unknown: IdentityResolved = {}\n    try {\n        if (!Array.isArray(links)) links = [links]\n        const result = links\n            .filter(Boolean)\n            .map((x) => ({ nickname: x!.ariaLabel || x!.textContent?.trim(), id: getUserID(x!.href), dom: x }))\n            .filter((x) => x.id)\n        const { dom, id, nickname } = result[0] || {}\n        const identifier = ProfileIdentifier.of(EnhanceableSite.Facebook, id).unwrapOr(null)\n        if (identifier) {\n            const currentProfile = getCurrentIdentifier()\n            let avatar: string | null = null\n            try {\n                const image = dom!.closest('.clearfix')!.parentElement!.querySelector('img')!\n                avatar = image.src\n                if (allowCollectInfo && image.getAttribute('aria-label') === nickname && nickname) {\n                    Services.Identity.updateProfileInfo(identifier, { nickname, avatarURL: image.src })\n                    if (currentProfile?.linkedPersona) {\n                        Services.Identity.createNewRelation(identifier, currentProfile.linkedPersona)\n                    }\n                }\n            } catch {}\n            try {\n                const image = dom!.querySelector('img')!\n                avatar = image.src\n                if (allowCollectInfo && avatar) {\n                    Services.Identity.updateProfileInfo(identifier, { nickname, avatarURL: image.src })\n                    if (currentProfile?.linkedPersona) {\n                        Services.Identity.createNewRelation(identifier, currentProfile.linkedPersona)\n                    }\n                }\n            } catch {}\n            try {\n                const image = dom!.querySelector('image')!\n                avatar = image.getAttribute('xlink:href')\n                if (allowCollectInfo && avatar) {\n                    Services.Identity.updateProfileInfo(identifier, { nickname, avatarURL: avatar })\n                    if (currentProfile?.linkedPersona) {\n                        Services.Identity.createNewRelation(identifier, currentProfile.linkedPersona)\n                    }\n                }\n            } catch {}\n            return {\n                identifier,\n                avatar: avatar ?? undefined,\n                nickname: nickname ?? undefined,\n            }\n        }\n        return unknown\n    } catch (error) {\n        console.error(error)\n    }\n    return unknown\n}\nexport function getUserID(x: string) {\n    if (!x) return null\n    const relative = !x.startsWith('https://') && !x.startsWith('http://')\n    const url = relative ? new URL(x, location.host) : new URL(x)\n\n    if (url.hostname !== 'www.facebook.com' && url.hostname !== 'm.facebook.com') return null\n\n    // Get the userId from the meta element\n    if (url.hostname === 'm.facebook.com') {\n        const node = searchUserIdOnMobileSelector().evaluate()\n        if (!node) return null\n\n        const href = node.getAttribute('href')\n\n        if (!href) return null\n\n        const match = href.match(/lst=(\\w+)/)\n        if (!match) return null\n\n        return match[1]\n    }\n    if (url.pathname.endsWith('.php')) {\n        if (!url.search) return null\n        const search = new URLSearchParams(url.search)\n        return search.get('id')\n    }\n    const val = url.pathname.replace(/^\\//, '').replace(/\\/$/, '').split('/')[0]\n    if (val === 'me') return null\n    return val\n}\n","import { ValueRef } from '@masknet/shared-base'\nimport {\n    bioDescriptionSelectorOnMobile,\n    searchAvatarSelector,\n    searchBioSelector,\n    searchFacebookAvatarOnMobileSelector,\n    searchHomepageSelector,\n    searchIntroSectionSelector,\n    searchNickNameSelector,\n    searchNickNameSelectorOnMobile,\n    searchUserIdSelector,\n    searchUserIdSelectorOnMobile,\n} from './selector.js'\nimport { collectNodeText } from '../../../utils/index.js'\nimport { isMobileFacebook } from './isMobile.js'\n\nexport function getNickName(userId?: string | null) {\n    const node = isMobileFacebook\n        ? searchNickNameSelectorOnMobile().evaluate()\n        : searchNickNameSelector(userId).evaluate()\n    if (!node) return ''\n\n    return collectNodeText(node)\n}\n\nexport function getAvatar() {\n    const node = isMobileFacebook\n        ? searchFacebookAvatarOnMobileSelector().evaluate()\n        : searchAvatarSelector().evaluate()\n    if (!node) return\n\n    const imageURL =\n        (isMobileFacebook\n            ? node.style.background.match(/\\([\"']?(.*?)[\"']?\\)/)?.[1]\n            : node.getAttribute('xlink:href')) ?? ''\n\n    return imageURL.trim()\n}\n\nconst bioDescription = new ValueRef('')\nexport function getBioDescription() {\n    const intro = searchIntroSectionSelector().evaluate()\n    const node = isMobileFacebook ? bioDescriptionSelectorOnMobile().evaluate() : searchBioSelector().evaluate()\n\n    if (intro && node) {\n        const text = collectNodeText(node)\n        bioDescription.value = text\n    } else if (intro) {\n        bioDescription.value = ''\n    }\n\n    return bioDescription.value\n}\n\nexport function getFacebookId() {\n    const node = isMobileFacebook ? searchUserIdSelectorOnMobile().evaluate() : searchUserIdSelector().evaluate()\n    if (!node?.href) return ''\n\n    if (!URL.canParse(node.href, location.href)) return ''\n    const url = new URL(node.href, location.href)\n    if (url.pathname === '/profile.php') return url.searchParams.get(isMobileFacebook ? 'lst' : 'id')\n    return url.pathname.replaceAll('/', '')\n}\n\nconst FACEBOOK_AVATAR_ID_MATCH = /(\\w+).(?:png|jpg|gif|bmp)/\n\nexport function getAvatarId(avatarURL: string) {\n    if (!avatarURL) return ''\n    const _url = new URL(avatarURL)\n    const match = _url.pathname.match(FACEBOOK_AVATAR_ID_MATCH)\n    if (!match) return ''\n    return match[1]\n}\n\nconst homepageCache = new ValueRef('')\nexport function getPersonalHomepage() {\n    const intro = searchIntroSectionSelector().evaluate()\n    const node = searchHomepageSelector().evaluate()\n    if (intro && node) {\n        let text = collectNodeText(node)\n        if (text && !text.startsWith('http')) {\n            text = 'http://' + text\n        }\n        homepageCache.value = text\n    } else if (intro) {\n        homepageCache.value = ''\n    }\n\n    return homepageCache.value\n}\n","import { LiveSelector, MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport type { SiteAdaptorUI } from '@masknet/types'\nimport { creator } from '../../../site-adaptor-infra/index.js'\nimport { getProfileIdentifierAtFacebook, getUserID } from '../utils/getProfileIdentifier.js'\nimport { isMobileFacebook } from '../utils/isMobile.js'\nimport { ProfileIdentifier, EnhanceableSite, type ValueRef } from '@masknet/shared-base'\nimport { searchFacebookAvatarSelector, searchUserIdOnMobileSelector } from '../utils/selector.js'\nimport { getAvatar, getBioDescription, getFacebookId, getNickName, getPersonalHomepage } from '../utils/user.js'\nimport { delay } from '@masknet/kit'\nimport type { IdentityResolved } from '@masknet/plugin-infra'\n\nexport const IdentityProviderFacebook: SiteAdaptorUI.CollectingCapabilities.IdentityResolveProvider = {\n    hasDeprecatedPlaceholderName: true,\n    recognized: creator.EmptyIdentityResolveProviderState(),\n    start(signal) {\n        resolveLastRecognizedIdentityFacebookInner(this.recognized, signal)\n    },\n}\n\nfunction resolveLastRecognizedIdentityFacebookInner(ref: ValueRef<IdentityResolved>, signal: AbortSignal) {\n    const self = (isMobileFacebook ? myUsernameLiveSelectorMobile : myUsernameLiveSelectorPC)\n        .clone()\n        .map((x) => getProfileIdentifierAtFacebook(x, false))\n    new MutationObserverWatcher(self)\n        .addListener('onAdd', (e) => assign(e.value))\n        .addListener('onChange', (e) => assign(e.newValue))\n        .startWatch({ childList: true, subtree: true, characterData: true }, signal)\n    function assign(i: IdentityResolved) {\n        if (i.identifier) ref.value = i\n    }\n    fetch(new URL('/me', location.href), { method: 'HEAD', signal })\n        .then((x) => x.url)\n        .then(getUserID)\n        .then((id) => {\n            const nickname = getNickName(id)\n            const avatar = getAvatar()\n            assign({\n                ...ref.value,\n                nickname,\n                avatar,\n                isOwner: true,\n                identifier: ProfileIdentifier.of(EnhanceableSite.Facebook, id).unwrapOr(undefined),\n            })\n        })\n}\n\nfunction resolveCurrentVisitingIdentityInner(\n    ref: SiteAdaptorUI.CollectingCapabilities.IdentityResolveProvider['recognized'],\n    ownerRef: SiteAdaptorUI.CollectingCapabilities.IdentityResolveProvider['recognized'],\n    cancel: AbortSignal,\n) {\n    const selector = isMobileFacebook ? searchUserIdOnMobileSelector() : searchFacebookAvatarSelector()\n\n    const assign = async () => {\n        await delay(3000)\n        const nickname = getNickName()\n        const bio = getBioDescription()\n        const handle = getFacebookId()\n        const ownerHandle = ownerRef.value.identifier?.userId\n        const isOwner = !!(handle && ownerHandle && handle.toLowerCase() === ownerHandle.toLowerCase())\n        const homepage = getPersonalHomepage()\n        const avatar = getAvatar()\n\n        ref.value = {\n            identifier: ProfileIdentifier.of(EnhanceableSite.Facebook, handle).unwrapOr(undefined),\n            nickname,\n            avatar,\n            bio,\n            homepage,\n            isOwner,\n        }\n    }\n\n    const createWatcher = (selector: LiveSelector<HTMLElement, boolean>) => {\n        new MutationObserverWatcher(selector)\n            .addListener('onAdd', () => assign())\n            .addListener('onChange', () => assign())\n            .startWatch(\n                {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                },\n                cancel,\n            )\n        window.addEventListener('locationchange', assign, { signal: cancel })\n    }\n\n    assign()\n\n    createWatcher(selector)\n}\n\nexport const CurrentVisitingIdentityProviderFacebook: SiteAdaptorUI.CollectingCapabilities.IdentityResolveProvider = {\n    hasDeprecatedPlaceholderName: false,\n    recognized: creator.EmptyIdentityResolveProviderState(),\n    start(cancel) {\n        resolveCurrentVisitingIdentityInner(this.recognized, IdentityProviderFacebook.recognized, cancel)\n    },\n}\n\n// Try to resolve my identities\nconst myUsernameLiveSelectorPC = new LiveSelector()\n    .querySelectorAll<HTMLAnchorElement>(\n        '[data-pagelet=\"LeftRail\"] > [data-visualcompletion=\"ignore-dynamic\"]:first-child > div:first-child > ul [role=\"link\"]',\n    )\n\n    .filter((x) => x.innerText)\nconst myUsernameLiveSelectorMobile = new LiveSelector().querySelector<HTMLAnchorElement>(\n    '#bookmarks_flyout .mSideMenu > div > ul > li:first-child a, #MComposer a',\n)\n","import { useCallback } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { LiveSelector, MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { CrossIsolationMessages } from '@masknet/shared-base'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { Composition } from '../../../components/CompositionDialog/Composition.js'\nimport { isMobileFacebook } from '../utils/isMobile.js'\nimport { PostDialogHint } from '../../../components/InjectedComponents/PostDialogHint.js'\nimport { taskOpenComposeBoxFacebook, taskCloseNativeComposeBoxFacebook } from '../automation/openComposeBox.js'\nimport { startWatch } from '../../../utils/startWatch.js'\n\nlet composeBox: LiveSelector<Element>\n\nconst useStyles = makeStyles()(() => ({\n    tooltip: {\n        borderRadius: 8,\n        padding: 8,\n        marginBottom: '0 !important',\n        fontSize: 12,\n        background: 'rgba(0,0,0,.75)',\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.5)',\n        color: '#ddd',\n    },\n}))\n\nfunction isGroup() {\n    const matched = location.href.match(/\\/groups/)\n    if (!matched) return false\n    return matched[0]\n}\n\nif (isMobileFacebook) {\n    composeBox = new LiveSelector().querySelector('#structured_composer_form')\n} else {\n    if (isGroup()) {\n        composeBox = new LiveSelector()\n            .querySelector('[id=\"toolbarLabel\"]')\n            .closest(1)\n            .querySelector('div:nth-child(2) > div:nth-child(4)')\n    } else {\n        composeBox = new LiveSelector()\n            .querySelectorAll(\n                '[role=\"dialog\"] form > div:first-child > div:first-child > div:first-child > div:first-child > div:first-child > div:last-child > div:first-child  > div:last-child > div > div',\n            )\n            .at(-2)\n    }\n}\n\nexport function injectCompositionFacebook(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(composeBox.clone())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { signal }).render(<UI />)\n\n    signal.addEventListener(\n        'abort',\n        CrossIsolationMessages.events.compositionDialogEvent.on((data) => {\n            if (data.reason === 'popup') return\n            if (data.open === false) {\n                if (data.options?.isOpenFromApplicationBoard) taskCloseNativeComposeBoxFacebook()\n                return\n            }\n            taskOpenComposeBoxFacebook(data.content || '', data.options)\n        }),\n    )\n}\nfunction UI() {\n    const { classes } = useStyles()\n    const onHintButtonClicked = useCallback(\n        () => CrossIsolationMessages.events.compositionDialogEvent.sendToLocal({ reason: 'popup', open: true }),\n        [],\n    )\n    return (\n        <span style={{ display: 'block', padding: 0, marginTop: 0 }}>\n            <PostDialogHint\n                size={24}\n                classes={{ tooltip: classes.tooltip }}\n                onHintButtonClicked={onHintButtonClicked}\n                tooltip={{ disabled: false, placement: 'top' }}\n            />\n            <Composition type=\"popup\" />\n        </span>\n    )\n}\n","import { LiveSelector, MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport { isMobileFacebook } from '../utils/isMobile.js'\nimport { Banner } from '../../../components/Welcomes/Banner.js'\n\nlet composeBox: LiveSelector<Element>\nif (isMobileFacebook) {\n    composeBox = new LiveSelector().querySelector('#structured_composer_form')\n} else {\n    composeBox = new LiveSelector()\n        .querySelector('[role=\"dialog\"] form')\n        .querySelectorAll('[role=\"button\"][tabindex=\"0\"], [role=\"button\"][tabindex=\"-1\"]')\n        .map((x) => x.parentElement)\n        .at(-1)\n}\n\nexport function injectBannerAtFacebook(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(composeBox.clone())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { signal }).render(\n        <span\n            style={{\n                display: 'block',\n                padding: '0 16px',\n                marginTop: 0,\n            }}>\n            <Banner />\n        </span>,\n    )\n}\n","import { selectElementContents } from '../../../utils/selectElementContents.js'\nimport { delay } from '@masknet/kit'\nimport { isMobileFacebook } from '../utils/isMobile.js'\nimport type { PostInfo } from '@masknet/plugin-infra/content-script'\nimport { inputText, pasteText } from '@masknet/injected-script'\nimport { MaskMessages } from '@masknet/shared-base'\n\nexport async function pasteToCommentBoxFacebook(encryptedComment: string, current: PostInfo, dom: HTMLElement | null) {\n    const fail = () => {\n        MaskMessages.events.autoPasteFailed.sendToLocal({ text: encryptedComment })\n    }\n    if (isMobileFacebook) {\n        const root = dom || current.comment?.commentBoxSelector?.evaluate()[0]\n        if (!root) return fail()\n        const textarea = root.querySelector('textarea')\n        if (!textarea) return fail()\n        textarea.focus()\n        inputText(encryptedComment)\n        textarea.dispatchEvent(new CustomEvent('input', { bubbles: true, cancelable: false, composed: true }))\n        await delay(200)\n        if (!root.innerText.includes(encryptedComment)) return fail()\n    } else {\n        const root = dom || current.rootNode\n        if (!root) return fail()\n        const input = root.querySelector<HTMLElement>('[contenteditable] > *')\n        if (!input) return fail()\n        selectElementContents(input)\n        input.focus()\n        pasteText(encryptedComment)\n        await delay(200)\n        if (!root.innerText.includes(encryptedComment)) return fail()\n    }\n}\n","import type { DOMProxy } from '@dimensiondev/holoflows-kit'\nimport { isMobileFacebook } from '../utils/isMobile.js'\nimport type { PostInfo } from '@masknet/plugin-infra/content-script'\nimport { injectPostInspectorDefault } from '../../../site-adaptor-infra/defaults/inject/PostInspector.js'\nimport { Flags } from '@masknet/flags'\n\nconst map = new WeakMap<HTMLElement, ShadowRoot>()\nfunction getShadowRoot(node: HTMLElement) {\n    if (map.has(node)) return map.get(node)!\n    const dom = node.attachShadow(Flags.shadowRootInit)\n    map.set(node, dom)\n    return dom\n}\nexport function injectPostInspectorFacebook(signal: AbortSignal, current: PostInfo) {\n    clickSeeMore(current.rootElement.current?.parentElement)\n    return injectPostInspectorDefault({\n        zipPost(node) {\n            zipEncryptedPostContent(node)\n            zipPostLinkPreview(node)\n        },\n        injectionPoint: (post) => getShadowRoot(post.suggestedInjectionPoint),\n    })(current, signal)\n}\nfunction zipPostLinkPreview(node: DOMProxy) {\n    if (node.destroyed) return\n    const parentEle = node.current.parentElement\n    if (!parentEle) return\n    if (isMobileFacebook) {\n        const img =\n            parentEle.querySelector('a[href*=\"maskbook.io\"]') ??\n            parentEle.querySelector('a[href*=\"mask.io\"]') ??\n            parentEle.querySelector('a[href*=\"maskbook.com\"]')\n        const parent = img?.closest('section')\n        if (img && parent) {\n            parent.style.display = 'none'\n        }\n    } else {\n        const img =\n            parentEle.querySelector('a[href*=\"maskbook.io\"] img') ??\n            parentEle.querySelector('a[href*=\"mask.io\"] img') ??\n            parentEle.querySelector('a[href*=\"maskbook.com\"] img')\n        const parent = img?.closest('span')\n        if (img && parent) {\n            parent.style.display = 'none'\n        }\n    }\n}\nfunction zipEncryptedPostContent(node: DOMProxy) {\n    if (node.destroyed) return\n    const parent = node.current.parentElement\n    // It's image based encryption, skip zip post.\n    if (!node.current.innerText.includes('\\uD83C\\uDFBC')) return\n    // Style modification for repost\n    if (!node.current.className.includes('userContent') && node.current.innerText.length > 0) {\n        node.after.setAttribute(\n            'style',\n            `border: 1px solid #ebedf0;\ndisplay: block;\nborder-top: none;\nborder-bottom: none;\nmargin-bottom: 0;\npadding: 0 10px;`,\n        )\n    }\n    if (parent) {\n        // post content\n        const p = parent.querySelector('p')\n        if (p) {\n            p.style.display = 'block'\n            p.style.maxHeight = '20px'\n            p.style.overflow = 'hidden'\n            p.style.marginBottom = '0'\n        }\n    }\n}\nexport function clickSeeMore(node: HTMLElement | undefined | null) {\n    if (!node) return\n    const more = node.querySelector<HTMLDivElement | HTMLSpanElement>(\n        isMobileFacebook ? '[data-sigil=\"more\"] a' : '[role=article] span[dir=\"auto\"] div[dir=\"auto\"] [role=\"button\"]',\n    )\n\n    if (more && node.querySelector('img[alt=\"\\uD83C\\uDFBC\"]')) {\n        const trap = (e: Event) => {\n            e.preventDefault()\n        }\n        more.parentNode!.addEventListener('click', trap)\n        more.click()\n        setTimeout(() => {\n            if (more.parentNode) more.parentNode.removeEventListener('click', trap)\n        }, 0)\n    }\n}\n","export default function getSearchedKeywordAtFacebook() {\n    const hashKeyword = location.pathname.match(/^\\/hashtag\\/([A-za-z0\\u20139_]+)$/u)?.[1]\n    if (hashKeyword) return '#' + hashKeyword\n\n    if (/\\/search\\/top\\/?$/.test(location.pathname)) {\n        const params = new URLSearchParams(location.search)\n        return params.get('q') ?? ''\n    }\n\n    return ''\n}\n","import { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { SearchResultInspector } from '../../../components/InjectedComponents/SearchResultInspector.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport { searchResultHeadingSelector } from '../utils/selector.js'\n\nexport function injectSearchResultInspectorAtFacebook(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(searchResultHeadingSelector())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.beforeShadow, { signal }).render(<SearchResultInspector />)\n}\n","import { None, Some, type Option } from 'ts-results-es'\nimport { Flags } from '@masknet/flags'\nimport type { SiteAdaptorUI } from '@masknet/types'\nimport { DOMProxy, LiveSelector, MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { type TypedMessage, makeTypedMessageText, makeTypedMessageTuple } from '@masknet/typed-message'\nimport { creator } from '../../../site-adaptor-infra/utils.js'\nimport { isMobileFacebook } from '../utils/isMobile.js'\nimport { getProfileIdentifierAtFacebook } from '../utils/getProfileIdentifier.js'\nimport { clickSeeMore } from '../injection/PostInspector.js'\nimport { facebookShared } from '../shared.js'\nimport { createRefsForCreatePostContext } from '../../../site-adaptor-infra/utils/create-post-context.js'\nimport { collectNodeText } from '../../../utils/index.js'\nimport { startWatch } from '../../../utils/startWatch.js'\n\nconst posts = new LiveSelector().querySelectorAll<HTMLDivElement>(\n    isMobileFacebook ? '.story_body_container > div' : '[role=article]  [id]  span[dir=\"auto\"]',\n)\n\nexport const PostProviderFacebook: SiteAdaptorUI.CollectingCapabilities.PostsProvider = {\n    posts: creator.EmptyPostProviderState(),\n    start(signal) {\n        collectPostsFacebookInner(this.posts, signal)\n    },\n}\nfunction collectPostsFacebookInner(\n    store: SiteAdaptorUI.CollectingCapabilities.PostsProvider['posts'],\n    signal: AbortSignal,\n) {\n    startWatch(\n        new MutationObserverWatcher(posts).useForeach((node, key, metadata) => {\n            clickSeeMore(node)\n        }),\n        signal,\n    )\n\n    startWatch(\n        new MutationObserverWatcher(posts).useForeach((node, key, metadata) => {\n            const root = new LiveSelector()\n                .replace(() => [metadata.realCurrent])\n                .closest('[role=article] [id] span[dir=\"auto\"]')\n\n            const rootProxy = DOMProxy({\n                afterShadowRootInit: Flags.shadowRootInit,\n                beforeShadowRootInit: Flags.shadowRootInit,\n            })\n            rootProxy.realCurrent = root.evaluate()[0] as HTMLElement\n\n            // ? inject after comments\n            const commentSelectorPC = root\n                .clone()\n                .querySelectorAll('[role=article] [id] span[dir=\"auto\"]')\n                .closest<HTMLElement>(3)\n            const commentSelectorMobile = root\n                .clone()\n                .map((x) => x.parentElement)\n                .querySelectorAll<HTMLElement>('[data-commentid]')\n\n            const commentsSelector = isMobileFacebook ? commentSelectorMobile : commentSelectorPC\n\n            // ? inject comment text field\n            const commentBoxSelectorPC = root\n                .clone()\n                .querySelectorAll<HTMLFormElement>('[role=\"article\"] [role=\"presentation\"]:not(img)')\n                .map((x) => x.parentElement)\n\n            const commentBoxSelectorMobile = root\n                .clone()\n                .map((x) => x.parentElement)\n                .querySelectorAll('textarea')\n                .map((x) => x.parentElement)\n                .filter((x) => x.innerHTML.includes('comment'))\n\n            const commentBoxSelector = isMobileFacebook ? commentBoxSelectorMobile : commentBoxSelectorPC\n\n            const { subscriptions, ...info } = createRefsForCreatePostContext()\n            const postInfo = facebookShared.utils.createPostContext({\n                rootElement: rootProxy,\n                suggestedInjectionPoint: metadata.realCurrent!,\n                signal,\n                comments: { commentBoxSelector, commentsSelector },\n                ...subscriptions,\n            })\n\n            store.set(metadata, postInfo)\n            function collectPostInfo() {\n                rootProxy.realCurrent = root.evaluate()[0] as HTMLElement\n                const nextTypedMessage: TypedMessage[] = []\n                info.postBy.value = getPostBy(metadata, postInfo.hasMaskPayload.getCurrentValue())?.identifier || null\n                info.postID.value = getPostID(metadata, rootProxy.realCurrent)\n                // parse text\n                const text = collectNodeText(node, {\n                    onHTMLAnchorElement(node: HTMLAnchorElement): Option<string> {\n                        const href = node.getAttribute('href')\n                        if (!href) {\n                            return None\n                        }\n                        return Some(\n                            '\\n' +\n                                (href.includes('l.facebook.com')\n                                    ? new URL(href).searchParams.get('u')\n                                    : node.innerText),\n                        )\n                    },\n                })\n                nextTypedMessage.push(makeTypedMessageText(text))\n                // parse image\n                const images = getMetadataImages(metadata)\n                for (const url of images) {\n                    info.postMetadataImages.add(url)\n                }\n                info.postMessage.value = makeTypedMessageTuple(nextTypedMessage)\n            }\n\n            function collectLinks() {\n                if (metadata.destroyed) return\n                const linkElements = metadata.current.querySelectorAll<HTMLLinkElement>('[role=article] [id] a')\n                const links = [...Array.from(linkElements).filter((x) => x.href)]\n\n                const seen = new Set<string>()\n                for (const x of links) {\n                    if (seen.has(x.href)) continue\n                    seen.add(x.href)\n                    info.postMetadataMentionedLinks.set(x, x.href)\n                }\n            }\n\n            function run() {\n                collectPostInfo()\n                collectLinks()\n            }\n\n            run()\n            return {\n                onNodeMutation: run,\n                onTargetChanged: run,\n                onRemove: () => store.delete(metadata),\n            }\n        }),\n        signal,\n    )\n}\n\nfunction getPostBy(node: DOMProxy, allowCollectInfo: boolean) {\n    if (node.destroyed) return\n    const dom = isMobileFacebook\n        ? node.current.querySelectorAll('a')\n        : [(node.current.closest('[role=\"article\"]') ?? node.current.parentElement)!.querySelectorAll('a')[1]]\n    // side effect: save to service\n    return getProfileIdentifierAtFacebook(Array.from(dom), allowCollectInfo)\n}\n\nfunction getPostID(node: DOMProxy, root: HTMLElement): null | string {\n    if (node.destroyed) return null\n    if (isMobileFacebook) {\n        const abbr = node.current.querySelector('abbr')\n        if (!abbr) return null\n        const idElement = abbr.closest('a')\n        if (!idElement) return null\n        const id = new URL(idElement.href)\n        return id.searchParams.get('id') || ''\n    } else {\n        // In single url\n        if (location.href.match(/plugins.+(perma.+story_fbid%3D|posts%2F)?/)) {\n            const url = new URL(location.href)\n            return url.searchParams.get('id')\n        } else {\n            try {\n                // In timeline\n                const postTimeNode1 = root.closest('[role=article]')?.querySelector('[href*=\"permalink\"]')\n                const postIdMode1 = postTimeNode1\n                    ? postTimeNode1\n                          .getAttribute('href')\n                          ?.match(/story_fbid=(\\d+)/g)?.[0]\n                          .split('=')[1] ?? null\n                    : null\n\n                if (postIdMode1) return postIdMode1\n\n                const postTimeNode2 = root.closest('[role=article]')?.querySelector('[href*=\"posts\"]')\n                const postIdMode2 = postTimeNode2\n                    ? postTimeNode2\n                          .getAttribute('href')\n                          ?.match(/posts\\/(\\w+)/g)?.[0]\n                          .split('/')[1] ?? null\n                    : null\n                if (postIdMode2 && /^-?\\w+$/.test(postIdMode2)) return postIdMode2\n            } catch {\n                return null\n            }\n\n            const parent = node.current.parentElement\n            if (!parent) return null\n            const idNode = Array.from(parent.querySelectorAll('[id]'))\n                .map((x) => x.id.split(';'))\n                .filter((x) => x.length > 1)\n            if (!idNode.length) return null\n            return idNode[0][2]\n        }\n    }\n}\n\nfunction getMetadataImages(node: DOMProxy): string[] {\n    if (node.destroyed) return []\n    const parent = node.current.parentElement?.parentElement?.parentElement?.parentElement?.parentElement\n    if (!parent) return []\n    const imgNodes = isMobileFacebook\n        ? parent.querySelectorAll<HTMLImageElement>('div>div>div>a>div>div>i.img')\n        : parent.querySelectorAll('img') || []\n    if (!imgNodes.length) return []\n    const imgUrls = isMobileFacebook\n        ? (getComputedStyle(imgNodes[0]).backgroundImage || '')\n              .slice(4, -1)\n              .replaceAll(/[\"']/g, '')\n              .split(',')\n              .filter(Boolean)\n        : Array.from(imgNodes, (node) => node.src).filter(Boolean)\n    if (!imgUrls.length) return []\n    return imgUrls\n}\n","import type { SiteAdaptorUI } from '@masknet/types'\nimport { ThemeMode } from '@masknet/web3-shared-base'\nimport { creator } from '../../../site-adaptor-infra/utils.js'\n\nfunction resolveThemeSettingsInner(\n    ref: SiteAdaptorUI.CollectingCapabilities.ThemeSettingsProvider['recognized'],\n    cancel: AbortSignal,\n) {\n    function updateThemeColor(isDarkMode: boolean) {\n        ref.value = {\n            ...ref.value,\n            mode: isDarkMode ? ThemeMode.Dark : ThemeMode.Light,\n        }\n    }\n\n    updateThemeColor(document.documentElement.className.includes('dark-mode'))\n\n    const observer = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n            updateThemeColor(!mutation.oldValue?.includes('dark-mode'))\n        })\n    })\n\n    observer.observe(document.querySelector('html') as Node, {\n        attributes: true,\n        attributeOldValue: true,\n        attributeFilter: ['class'],\n    })\n\n    cancel.addEventListener('abort', () => observer.disconnect())\n}\n\nexport const ThemeSettingsProviderFacebook: SiteAdaptorUI.CollectingCapabilities.ThemeSettingsProvider = {\n    recognized: creator.EmptyThemeSettingsProviderState(),\n    async start(cancel) {\n        resolveThemeSettingsInner(this.recognized, cancel)\n    },\n}\n","import { useMemo } from 'react'\nimport { produce, setAutoFreeze } from 'immer'\nimport { type Theme, unstable_createMuiStrictModeTheme } from '@mui/material'\nimport { fromRGB, shade, toRGB } from '@masknet/plugin-infra/content-script'\nimport { useThemeSettings } from '../../../components/DataSource/useActivatedUI.js'\n\nexport function useThemeFacebookVariant(baseTheme: Theme) {\n    const themeSettings = useThemeSettings()\n\n    return useMemo(() => {\n        const primaryColorRGB = fromRGB(themeSettings.color)!\n        const primaryContrastColorRGB = fromRGB('rgb(255, 255, 255)')\n        setAutoFreeze(false)\n\n        const FacebookTheme = produce(baseTheme, (theme) => {\n            theme.palette.primary = {\n                light: toRGB(shade(primaryColorRGB, 10)),\n                main: toRGB(primaryColorRGB),\n                dark: toRGB(shade(primaryColorRGB, -10)),\n                contrastText: toRGB(primaryContrastColorRGB),\n            }\n            theme.shape.borderRadius = 15\n            theme.breakpoints.values = { xs: 0, sm: 687, md: 1024, lg: 1280, xl: 1920 }\n            theme.components = theme.components || {}\n            theme.components.MuiTypography = {\n                styleOverrides: {\n                    root: {\n                        // cspell:ignore SFNS\n                        fontFamily: \"system-ui, -apple-system, BlinkMacSystemFont, '.SFNSText-Regular', sans-serif\",\n                    },\n                },\n            }\n            theme.components.MuiPaper = {\n                defaultProps: {\n                    elevation: 0,\n                },\n            }\n            theme.components.MuiTab = {\n                styleOverrides: {\n                    root: {\n                        textTransform: 'none',\n                    },\n                },\n            }\n        })\n        setAutoFreeze(true)\n        return unstable_createMuiStrictModeTheme(FacebookTheme)\n    }, [baseTheme, themeSettings])\n}\n","import { styled, ListItemButton, Typography, ListItemIcon } from '@mui/material'\nimport { ToolboxHintUnstyled } from '../../../components/InjectedComponents/ToolboxUnstyled.js'\nimport { useMemo } from 'react'\n\nconst Container = styled('div')`\n    padding: 0 4px;\n`\nconst ContainerHasNavBar = styled('div')`\n    padding: 0 8px;\n`\n\nconst Item = styled(ListItemButton)`\n    border-radius: 8px;\n    padding-left: 10px;\n`\nconst Text = styled(Typography)`\n    font-size: 0.9375rem;\n    /* This CSS variable is inherit from Facebook. */\n    color: var(--primary-text);\n    font-weight: 500;\n    padding-left: 0.1rem;\n`\nconst Icon = styled(ListItemIcon, {\n    shouldForwardProp(name) {\n        return name !== 'hasTopNavBar' && name !== 'hasSpecificLeftRailStartBar'\n    },\n})<{\n    hasTopNavBar: boolean\n    hasSpecificLeftRailStartBar: boolean\n}>`\n    min-width: ${(props) => (!props.hasSpecificLeftRailStartBar ? '24px' : props.hasTopNavBar ? '46px' : 'auto')};\n    margin-right: ${(props) => (props.hasTopNavBar && props.hasSpecificLeftRailStartBar ? '0px' : '12px')};\n    padding-left: 4px;\n`\n\nexport function ToolboxAtFacebook(props: {\n    category: 'wallet' | 'application'\n    hasTopNavBar: boolean\n    hasSpecificLeftRailStartBar: boolean\n}) {\n    const ListItemIcon = useMemo(() => {\n        return ({ children }: React.PropsWithChildren<{}>) => (\n            <Icon\n                data-testid=\"abc\"\n                hasTopNavBar={props.hasTopNavBar}\n                hasSpecificLeftRailStartBar={props.hasSpecificLeftRailStartBar}>\n                {children}\n            </Icon>\n        )\n    }, [props.hasTopNavBar, props.hasSpecificLeftRailStartBar])\n\n    return (\n        <ToolboxHintUnstyled\n            iconSize={32}\n            Container={props.hasTopNavBar ? ContainerHasNavBar : Container}\n            ListItemButton={Item}\n            Typography={Text}\n            ListItemIcon={ListItemIcon}\n            category={props.category}\n        />\n    )\n}\n","import { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport {\n    toolboxInSidebarSelector,\n    toolboxInSidebarSelectorWithNoLeftRailStart,\n    toolboxInSpecialSidebarSelector,\n} from '../utils/selector.js'\nimport { ToolboxAtFacebook } from './ToolbarUI.js'\n\nfunction hasSpecificLeftRailStartBar() {\n    const ele = document\n        .querySelector('[role=\"banner\"] [role=\"navigation\"] > ul > li:last-child a[href=\"/bookmarks/\"]')\n        ?.closest('li')\n    if (!ele) return true\n    const style = window.getComputedStyle(ele)\n    return style.display === 'none'\n}\n\nfunction isNormalLeftRailStartBar() {\n    return !!document.querySelector('[data-pagelet=\"LeftRail\"]')\n}\n\nexport function injectToolboxHintAtFacebook(signal: AbortSignal, category: 'wallet' | 'application') {\n    const watcher = new MutationObserverWatcher(\n        isNormalLeftRailStartBar() ? toolboxInSidebarSelector() : toolboxInSpecialSidebarSelector(),\n    )\n    startWatch(watcher, signal)\n    const hasTopNavBar = !!document.querySelector<HTMLElement>('#ssrb_top_nav_start ~ [role=\"banner\"]')\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { signal }).render(\n        <ToolboxAtFacebook\n            category={category}\n            hasTopNavBar={hasTopNavBar}\n            hasSpecificLeftRailStartBar={hasSpecificLeftRailStartBar()}\n        />,\n    )\n\n    const watcherNoLeftRailStart = new MutationObserverWatcher(toolboxInSidebarSelectorWithNoLeftRailStart())\n    startWatch(watcherNoLeftRailStart, signal)\n    attachReactTreeWithContainer(watcherNoLeftRailStart.firstDOMProxy.afterShadow, { signal }).render(\n        <ToolboxAtFacebook\n            category={category}\n            hasTopNavBar={hasTopNavBar}\n            hasSpecificLeftRailStartBar={hasSpecificLeftRailStartBar()}\n        />,\n    )\n}\n","import { useCallback, useEffect } from 'react'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { makeStyles } from '@masknet/theme'\nimport { NFTAvatar, toPNG } from '@masknet/plugin-avatar'\nimport { hookInputUploadOnce } from '@masknet/injected-script'\nimport type { SelectTokenInfo } from '@masknet/plugin-avatar'\nimport { MaskMessages, NetworkPluginID, InMemoryStorages } from '@masknet/shared-base'\nimport { ChainId, SchemaType } from '@masknet/web3-shared-evm'\nimport {\n    searchFacebookAvatarListSelector,\n    searchFacebookAvatarMobileListSelector,\n    searchFacebookAvatarOpenFilesOnMobileSelector,\n    searchFacebookAvatarOpenFilesSelector,\n    searchFacebookConfirmAvatarImageSelector,\n    searchFacebookSaveAvatarButtonSelector,\n} from '../../utils/selector.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { useCurrentVisitingIdentity } from '../../../../components/DataSource/useActivatedUI.js'\nimport { getAvatarId } from '../../utils/user.js'\nimport { isMobileFacebook } from '../../utils/isMobile.js'\n\nexport async function injectProfileNFTAvatarInFaceBook(signal: AbortSignal) {\n    if (!isMobileFacebook) {\n        // The first step in setting an avatar\n        const watcher = new MutationObserverWatcher(searchFacebookAvatarListSelector())\n        startWatch(watcher, signal)\n        attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { untilVisible: true, signal }).render(\n            <NFTAvatarInFacebookFirstStep />,\n        )\n\n        // The second step in setting an avatar\n        const saveButtonWatcher = new MutationObserverWatcher(searchFacebookSaveAvatarButtonSelector()).useForeach(\n            (node, key, proxy) => {\n                const root = attachReactTreeWithContainer(proxy.afterShadow, { untilVisible: true, signal })\n                root.render(<NFTAvatarInFacebookSecondStep />)\n                return () => root.destroy()\n            },\n        )\n\n        startWatch(saveButtonWatcher, signal)\n    }\n    const watcher = new MutationObserverWatcher(searchFacebookAvatarMobileListSelector())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { untilVisible: true, signal }).render(\n        <NFTAvatarListInFaceBookMobile />,\n    )\n}\n\nconst useStyles = makeStyles()({\n    root: {\n        padding: '8px 0',\n        margin: '0 16px',\n    },\n})\n\nasync function changeImageToActiveElements(image: File | Blob): Promise<void> {\n    const imageBuffer = await image.arrayBuffer()\n    hookInputUploadOnce('image/png', 'avatar.png', new Uint8Array(imageBuffer))\n    searchFacebookAvatarOpenFilesSelector().evaluate()?.click()\n}\n\nfunction NFTAvatarInFacebookFirstStep() {\n    const { classes } = useStyles()\n\n    const identity = useCurrentVisitingIdentity()\n\n    const onChange = useCallback(\n        async (info: SelectTokenInfo) => {\n            if (!info.token.metadata?.imageURL || !info.token.contract?.address) return\n            const image = await toPNG(info.token.metadata.imageURL)\n            if (!image) return\n            if (!identity.identifier) return\n\n            await changeImageToActiveElements(image)\n\n            MaskMessages.events.NFTAvatarUpdated.sendToLocal({\n                userId: identity.identifier.userId,\n                avatarId: '',\n                address: info.token.contract.address,\n                tokenId: info.token.tokenId,\n                pluginID: info.pluginID ?? NetworkPluginID.PLUGIN_EVM,\n                chainId: info.token.chainId ?? ChainId.Mainnet,\n                schema: info.token.schema ?? SchemaType.ERC721,\n            })\n        },\n        [identity],\n    )\n\n    return <NFTAvatar onChange={onChange} classes={classes} />\n}\n\nfunction NFTAvatarInFacebookSecondStep() {\n    useEffect(() => {\n        const save = searchFacebookSaveAvatarButtonSelector().evaluate().at(0)\n        if (!save) return\n        const handler = () => {\n            const image = searchFacebookConfirmAvatarImageSelector().evaluate()\n            if (!image) return\n\n            const imageURL = image.getAttribute('src')\n            if (!imageURL) return\n\n            const avatarId = getAvatarId(imageURL)\n            if (avatarId) {\n                MaskMessages.events.NFTAvatarUpdated.sendToLocal({\n                    userId: '',\n                    address: '',\n                    tokenId: '',\n                    avatarId,\n                })\n            }\n        }\n\n        save.addEventListener('click', handler)\n\n        return () => save.removeEventListener('click', handler)\n    }, [])\n    return null\n}\n\nasync function changeImageToActiveElementsOnMobile(image: File | Blob): Promise<void> {\n    const imageBuffer = await image.arrayBuffer()\n\n    const input = searchFacebookAvatarOpenFilesOnMobileSelector().evaluate()\n\n    if (input) {\n        input.style.visibility = 'unset'\n        input.focus()\n        hookInputUploadOnce('image/png', 'avatar.png', new Uint8Array(imageBuffer), true)\n        input.style.visibility = 'hidden'\n\n        const file = new File([image], 'avatar.png', { type: 'image/png', lastModified: Date.now() })\n        const container = new DataTransfer()\n        container.items.add(file)\n        input.files = container.files\n    }\n}\n\nconst useMobileStyles = makeStyles()({\n    root: {\n        backgroundColor: '#ffffff',\n    },\n})\n\nfunction NFTAvatarListInFaceBookMobile() {\n    const { classes } = useMobileStyles()\n    const identity = useCurrentVisitingIdentity()\n\n    const onChange = useCallback(\n        async (info: SelectTokenInfo) => {\n            if (!info.token.metadata?.imageURL || !info.token.contract?.address) return\n            const image = await toPNG(info.token.metadata.imageURL)\n            if (!image) return\n\n            await changeImageToActiveElementsOnMobile(image)\n\n            identity.identifier &&\n                InMemoryStorages.FacebookNFTEventOnMobile.storage.userId.setValue(identity.identifier.userId)\n            InMemoryStorages.FacebookNFTEventOnMobile.storage.address.setValue(info.token.contract?.address)\n            InMemoryStorages.FacebookNFTEventOnMobile.storage.tokenId.setValue(info.token.tokenId)\n            InMemoryStorages.FacebookNFTEventOnMobile.storage.pluginID.setValue(\n                info.pluginID ?? NetworkPluginID.PLUGIN_EVM,\n            )\n            InMemoryStorages.FacebookNFTEventOnMobile.storage.chainId.setValue(info.token.chainId ?? ChainId.Mainnet)\n            InMemoryStorages.FacebookNFTEventOnMobile.storage.schema.setValue(info.token.schema ?? SchemaType.ERC721)\n        },\n        [identity],\n    )\n\n    return <NFTAvatar onChange={onChange} classes={{ root: classes.root }} />\n}\n","import { useEffect, useLayoutEffect, useMemo, useState } from 'react'\nimport { useAsync, useLocation, useWindowSize } from 'react-use'\nimport { max, pickBy } from 'lodash-es'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { makeStyles } from '@masknet/theme'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { useSaveStringStorage, type AvatarMetaDB, type NextIDAvatarMeta } from '@masknet/plugin-avatar'\nimport { useNFT, useNFTAvatar, NFTBadge, RSS3_KEY_SITE, useWallet } from '@masknet/plugin-avatar'\nimport { searchFacebookAvatarOnMobileSelector, searchFacebookAvatarSelector } from '../../utils/selector.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { type NFTAvatarEvent, NetworkPluginID, MaskMessages, InMemoryStorages } from '@masknet/shared-base'\nimport { useCurrentVisitingIdentity } from '../../../../components/DataSource/useActivatedUI.js'\nimport { getAvatarId } from '../../utils/user.js'\nimport { isMobileFacebook } from '../../utils/isMobile.js'\nimport { startWatch } from '../../../../utils/startWatch.js'\n\nexport function injectNFTAvatarInFacebook(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(searchFacebookAvatarSelector())\n    if (!isMobileFacebook) {\n        startWatch(watcher, signal)\n        attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { untilVisible: true, signal }).render(\n            <NFTAvatarInFacebook />,\n        )\n        return\n    }\n\n    // mobile\n    const mobileWatcher = new MutationObserverWatcher(searchFacebookAvatarOnMobileSelector())\n    startWatch(mobileWatcher, signal)\n    attachReactTreeWithContainer(mobileWatcher.firstDOMProxy.afterShadow, { untilVisible: true, signal }).render(\n        <NFTAvatarInFacebook />,\n    )\n}\n\nconst useStyles = makeStyles()(() => ({\n    root: {\n        position: 'absolute',\n        textAlign: 'center',\n        color: 'white',\n        width: '100%',\n        height: '100%',\n        top: 0,\n        left: 0,\n    },\n    text: {\n        fontSize: '20px !important',\n        fontWeight: 700,\n    },\n    icon: {\n        width: '19px !important',\n        height: '19px !important',\n    },\n}))\n\nconst clearStorages = () => {\n    InMemoryStorages.FacebookNFTEventOnMobile.storage.userId.setValue('')\n    InMemoryStorages.FacebookNFTEventOnMobile.storage.address.setValue('')\n    InMemoryStorages.FacebookNFTEventOnMobile.storage.tokenId.setValue('')\n}\n\nfunction NFTAvatarInFacebook() {\n    const { classes } = useStyles()\n\n    const [avatar, setAvatar] = useState<AvatarMetaDB>()\n    const identity = useCurrentVisitingIdentity()\n    const location = useLocation()\n    const { value: nftAvatar } = useNFTAvatar(identity.identifier?.userId, RSS3_KEY_SITE.FACEBOOK)\n    const { account } = useChainContext()\n    const { loading: loadingWallet, value: storage } = useWallet(nftAvatar?.userId)\n    const { value: nftInfo, loading: loadingNFTInfo } = useNFT(\n        storage?.address ?? account,\n        nftAvatar?.address,\n        nftAvatar?.tokenId,\n        nftAvatar?.pluginId ?? NetworkPluginID.PLUGIN_EVM,\n        nftAvatar?.chainId,\n    )\n\n    const [NFTEvent, setNFTEvent] = useState<NFTAvatarEvent>()\n    const saveNFTAvatar = useSaveStringStorage(NetworkPluginID.PLUGIN_EVM)\n\n    const windowSize = useWindowSize()\n    const showAvatar = useMemo(() => {\n        if (isMobileFacebook) {\n            const node = searchFacebookAvatarOnMobileSelector().closest<HTMLDivElement>(1).evaluate()\n\n            if (node) {\n                node.style.position = 'relative'\n            }\n        }\n        return getAvatarId(identity.avatar ?? '') === avatar?.avatarId\n    }, [avatar?.avatarId, identity.avatar, isMobileFacebook])\n\n    const size = useMemo(() => {\n        const ele = isMobileFacebook\n            ? searchFacebookAvatarOnMobileSelector().evaluate()\n            : searchFacebookAvatarSelector().evaluate()\n        if (ele) {\n            const style = window.getComputedStyle(ele)\n            return max([148, Number.parseInt(style.width.replace('px', '') ?? 0, 10)])\n        }\n        return 0\n    }, [windowSize, isMobileFacebook, avatar])\n\n    useEffect(() => {\n        return MaskMessages.events.NFTAvatarUpdated.on((data) =>\n            setNFTEvent((prev) => {\n                if (!prev) return data\n                return { ...prev, ...pickBy<NFTAvatarEvent>(data, (item) => !!item) }\n            }),\n        )\n    }, [])\n\n    // Because of the mobile upload step, need to use memory storage to store NFTEven\n    useAsync(async () => {\n        const storages = InMemoryStorages.FacebookNFTEventOnMobile.storage\n\n        if (!account) return\n        if (!identity.identifier) return\n        if (NFTEvent?.address && NFTEvent?.tokenId && NFTEvent?.avatarId) {\n            try {\n                const avatarInfo = await saveNFTAvatar(identity.identifier.userId, account, {\n                    ...NFTEvent,\n                    avatarId: getAvatarId(identity.avatar ?? ''),\n                } as NextIDAvatarMeta)\n                if (!avatarInfo) {\n                    setNFTEvent(undefined)\n                    setAvatar(undefined)\n                    // eslint-disable-next-line no-alert\n                    window.alert('Sorry, failed to save NFT Avatar. Please set again.')\n                    return\n                }\n\n                setAvatar(avatarInfo)\n\n                setNFTEvent(undefined)\n            } catch (error) {\n                setNFTEvent(undefined)\n                setAvatar(undefined)\n                // eslint-disable-next-line no-alert\n                alert((error as any).message)\n                return\n            }\n        } else if (storages.address.value && storages.userId.value && storages.tokenId.value) {\n            try {\n                const avatarInfo = await saveNFTAvatar(storages.userId.value, account, {\n                    userId: storages.userId.value,\n                    tokenId: storages.tokenId.value,\n                    address: storages.address.value,\n                    avatarId: getAvatarId(identity.avatar ?? ''),\n                    chainId: storages.chainId.value,\n                    pluginID: storages.pluginID.value,\n                    schema: storages.schema.value,\n                } as unknown as NextIDAvatarMeta)\n                if (!avatarInfo) {\n                    clearStorages()\n                    setAvatar(undefined)\n                    // eslint-disable-next-line no-alert\n                    alert('Sorry, failed to save NFT Avatar. Please set again.')\n                    return\n                }\n                setAvatar(avatarInfo)\n                clearStorages()\n            } catch (error) {\n                clearStorages()\n                setAvatar(undefined)\n                // eslint-disable-next-line no-alert\n                alert((error as any).message)\n                return\n            }\n        }\n    }, [identity.avatar])\n\n    useEffect(() => setAvatar(nftAvatar), [nftAvatar, location])\n\n    // #region clear white border\n    useLayoutEffect(() => {\n        const node = searchFacebookAvatarSelector().closest<HTMLDivElement>(3).evaluate()\n        if (!node) return\n        if (showAvatar) {\n            node.setAttribute('style', 'padding: 0')\n        } else {\n            node.removeAttribute('style')\n        }\n    })\n    // #endregion\n\n    if (!avatar || !size || !showAvatar || loadingWallet || loadingNFTInfo) return null\n\n    return (\n        <NFTBadge\n            nftInfo={nftInfo}\n            size={size}\n            classes={{ root: classes.root, text: classes.text, icon: classes.icon }}\n        />\n    )\n}\n","import { getAvatarId } from './user.js'\nimport { isMobileFacebook } from './isMobile.js'\n\nexport function getInjectNodeInfo(element: HTMLElement | SVGElement) {\n    if (!isMobileFacebook) {\n        const imgEle = element.querySelector<SVGImageElement>('image')\n        if (!imgEle) return\n\n        const nftDom = imgEle.parentNode?.parentNode as HTMLElement\n\n        const width = Number(window.getComputedStyle(nftDom).width.replace('px', '') ?? 0)\n        const height = Number(window.getComputedStyle(nftDom).height.replace('px', '') ?? 0)\n\n        const avatarId = getAvatarId(imgEle.href.baseVal)\n\n        if (!avatarId) return\n\n        return { element: nftDom, width, height, avatarId }\n    }\n\n    const imgEle = element.querySelector('i')\n\n    if (!imgEle) return\n\n    const nftDom = imgEle.parentNode?.parentNode as HTMLElement\n\n    const containerDom = imgEle.parentNode as HTMLElement\n\n    const width = Number(window.getComputedStyle(nftDom).width.replace('px', '') ?? 0)\n    const height = Number(window.getComputedStyle(nftDom).height.replace('px', '') ?? 0)\n\n    const avatarId = getAvatarId(imgEle.style.background.match(/\\([\"']?(.*?)[\"']?\\)/)?.[1] ?? '')\n\n    if (!avatarId) return\n\n    return { element: containerDom, width, height, avatarId }\n}\n","import { memo } from 'react'\nimport { noop } from 'lodash-es'\nimport { Flags } from '@masknet/flags'\nimport { makeStyles } from '@masknet/theme'\nimport { NFTBadgeTimeline, RSS3_KEY_SITE } from '@masknet/plugin-avatar'\nimport { DOMProxy, type LiveSelector, MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { getInjectNodeInfo } from '../../utils/avatar.js'\nimport { searchFaceBookPostAvatarOnMobileSelector, searchFaceBookPostAvatarSelector } from '../../utils/selector.js'\nimport { isMobileFacebook } from '../../utils/isMobile.js'\n\nconst useStyles = makeStyles()(() => ({\n    root: {\n        transform: 'scale(1)!important',\n    },\n}))\n\nconst TimelineRainbow = memo(\n    ({ userId, avatarId, width, height }: { userId: string; avatarId: string; width: number; height: number }) => {\n        const { classes } = useStyles()\n        return (\n            <div\n                style={{\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    zIndex: 2,\n                }}>\n                <NFTBadgeTimeline\n                    userId={userId}\n                    avatarId={avatarId}\n                    width={width}\n                    height={height}\n                    classes={{ root: classes.root }}\n                    siteKey={RSS3_KEY_SITE.FACEBOOK}\n                />\n            </div>\n        )\n    },\n)\n\nfunction getFacebookId(element: HTMLElement | SVGElement) {\n    const node = (isMobileFacebook ? element.firstChild : element.parentNode?.parentNode) as HTMLLinkElement\n    if (!node) return ''\n    const url = new URL(node.href, location.href)\n\n    if (url.pathname === '/profile.php' && url.searchParams.get('id')) {\n        return url.searchParams.get(isMobileFacebook ? 'lst' : 'id')\n    }\n\n    if (url.pathname.includes('/groups')) {\n        const match = url.pathname.match(/\\/user\\/(\\w+)\\//)\n        if (!match) return ''\n        return match[1]\n    }\n\n    return url.pathname.replace('/', '')\n}\n\nfunction _(selector: () => LiveSelector<HTMLElement | SVGElement>, signal: AbortSignal) {\n    startWatch(\n        new MutationObserverWatcher(selector()).useForeach((element, key) => {\n            let remove = noop\n\n            const run = async () => {\n                const facebookId = getFacebookId(element)\n\n                if (!facebookId) return\n\n                const info = getInjectNodeInfo(element)\n\n                if (!info) return\n\n                const proxy = DOMProxy({\n                    afterShadowRootInit: Flags.shadowRootInit,\n                })\n                proxy.realCurrent = info.element\n\n                const root = attachReactTreeWithContainer(proxy.afterShadow, { untilVisible: true, signal })\n\n                root.render(\n                    <div\n                        style={{\n                            position: 'absolute',\n                            left: 0,\n                            top: 0,\n                            zIndex: 2,\n                        }}>\n                        <TimelineRainbow\n                            userId={facebookId}\n                            avatarId={info.avatarId}\n                            width={info.width - 4}\n                            height={info.height - 4}\n                        />\n                    </div>,\n                )\n\n                remove = root.destroy\n            }\n\n            run()\n\n            return {\n                onNodeMutation: run,\n                onTargetChanged: run,\n                onRemove: () => remove(),\n            }\n        }),\n        signal,\n    )\n}\n\nexport async function injectUserNFTAvatarAtFacebook(signal: AbortSignal) {\n    _(isMobileFacebook ? searchFaceBookPostAvatarOnMobileSelector : searchFaceBookPostAvatarSelector, signal)\n}\n","import { useLayoutEffect, useState } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { useLocationChange } from '@masknet/shared-base-ui'\nimport { NFTAvatarButton } from '@masknet/plugin-avatar'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { searchFacebookEditProfileSelector, searchFacebookProfileSettingButtonSelector } from '../../utils/selector.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\n\nexport function injectOpenNFTAvatarEditProfileButton(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(searchFacebookProfileSettingButtonSelector())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.beforeShadow, { untilVisible: true, signal }).render(\n        <OpenNFTAvatarEditProfileButtonInFaceBook />,\n    )\n}\n\ninterface StyleProps {\n    minHeight: number\n    fontSize: number\n    marginTop: number\n    backgroundColor?: string\n    color?: string\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, props) => ({\n    root: {\n        minHeight: props.minHeight,\n        fontSize: props.fontSize,\n        marginTop: props.marginTop,\n        backgroundColor: theme.palette.maskColor.main,\n        marginRight: theme.spacing(0.5),\n        marginLeft: theme.spacing(1.25),\n        borderRadius: '6px !important',\n        border: 'none !important',\n        color: props.color,\n    },\n}))\n\nexport function openNFTAvatarSettingDialog() {\n    const editDom = searchFacebookEditProfileSelector().evaluate()\n    editDom?.click()\n}\n\nfunction OpenNFTAvatarEditProfileButtonInFaceBook() {\n    const [style, setStyle] = useState<StyleProps>({ minHeight: 36, fontSize: 15, marginTop: 6 })\n\n    const setStyleWithSelector = () => {\n        const editDom = searchFacebookProfileSettingButtonSelector().evaluate()\n        if (!editDom) return\n\n        const buttonDom = editDom.querySelector<HTMLDivElement>('div > div[role=\"button\"]')\n        if (!buttonDom) return\n\n        const editCss = window.getComputedStyle(editDom)\n        const buttonCss = window.getComputedStyle(buttonDom)\n\n        setStyle({\n            fontSize: Number(editCss.fontSize.replace('px', '')),\n            marginTop: Number(editCss.paddingTop.replace('px', '')),\n            minHeight: 36,\n            backgroundColor: buttonCss.backgroundColor,\n            color: buttonCss.color,\n        })\n    }\n\n    useLayoutEffect(() => {\n        setStyleWithSelector()\n    }, [])\n\n    useLocationChange(() => {\n        setStyleWithSelector()\n    })\n\n    const { classes } = useStyles(style)\n\n    return (\n        <NFTAvatarButton\n            classes={{\n                root: classes.root,\n            }}\n            onClick={openNFTAvatarSettingDialog}\n            showSetting={false}\n        />\n    )\n}\n","import { useEffect, useState } from 'react'\nimport { debounce } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport {\n    profileTabSelectedSelector,\n    profileTabUnselectedSelector,\n    searchProfileTabSelector,\n    web3TabSelector,\n} from '../utils/selector.js'\nimport { ProfileTab } from '../../../components/InjectedComponents/ProfileTab.js'\n\nfunction getStyleProps() {\n    const EMPTY_STYLE = {} as CSSStyleDeclaration\n    const divEle = profileTabUnselectedSelector().evaluate()?.querySelector('div') as Element\n    const spanEle = profileTabUnselectedSelector().evaluate()?.querySelector('div span') as Element\n    const selectedSpanEle = profileTabSelectedSelector().evaluate()?.querySelector('div span') as Element\n    const divStyle = divEle ? window.getComputedStyle(divEle) : EMPTY_STYLE\n    const spanStyle = spanEle ? window.getComputedStyle(spanEle) : EMPTY_STYLE\n    const selectedSpanStyle = selectedSpanEle ? window.getComputedStyle(selectedSpanEle) : EMPTY_STYLE\n\n    return {\n        color: 'var(--secondary-text)',\n        font: spanStyle.font,\n        fontSize: spanStyle.fontSize,\n        padding: divStyle.paddingLeft,\n        height: divStyle.height ?? '60px',\n        hover: 'var(--hover-overlay)',\n        line: selectedSpanStyle.color,\n    }\n}\n\nconst useStyles = makeStyles()((theme) => {\n    const props = getStyleProps()\n\n    return {\n        root: {\n            '&:hover': {\n                cursor: 'pointer',\n            },\n            height: props.height,\n            display: 'flex',\n            flexDirection: 'column',\n            alignContent: 'center',\n            justifyContent: 'center',\n            padding: '4px 0',\n            boxSizing: 'border-box',\n        },\n        button: {\n            flex: 1,\n            zIndex: 1,\n            position: 'relative',\n            display: 'flex',\n            minWidth: 56,\n            justifyContent: 'center',\n            alignItems: 'center',\n            textAlign: 'center',\n            padding: theme.spacing(0, props.padding || 0),\n            color: props.color,\n            font: props.font,\n            fontSize: props.fontSize,\n            fontWeight: 600,\n            '&:hover': {\n                backgroundColor: props.hover,\n                color: props.color,\n            },\n            borderRadius: 6,\n        },\n        selected: {\n            color: 'var(--accent)',\n        },\n        line: {\n            borderRadius: 9999,\n            position: 'absolute',\n            bottom: -4,\n            width: '100%',\n            alignSelf: 'center',\n            height: 3,\n            backgroundColor: 'var(--accent)',\n        },\n    }\n})\n\nfunction styleTab(textColor: string, borderColor: string) {\n    const ele = profileTabSelectedSelector().evaluate()\n    if (!ele) return\n\n    const textEle = ele.querySelector('span')\n    const borderEle = ele.querySelector('span ~ div:last-child') as HTMLDivElement\n    if (!textEle || !borderEle) return\n    textEle.style.color = textColor\n    borderEle.style.backgroundColor = borderColor\n\n    const iconEle = ele.querySelector('svg')\n    if (!iconEle) return\n    iconEle.style.fill = textColor\n}\nfunction ProfileTabAtFacebook() {\n    const { classes } = useStyles()\n    const [action, setAction] = useState('reset')\n\n    function clear() {\n        setAction('clear')\n        styleTab(getStyleProps().color, 'transparent')\n    }\n\n    function reset() {\n        setAction('reset')\n        styleTab('', getStyleProps().line)\n    }\n\n    // handle cleared tab will be reactivated after scroll\n    useEffect(() => {\n        const handler = debounce(() => {\n            if (action === 'clear') {\n                clear()\n            }\n        }, 1000)\n        window.addEventListener('scroll', handler)\n\n        return () => {\n            window.removeEventListener('scroll', handler)\n        }\n    }, [action])\n\n    return (\n        <ProfileTab\n            title=\"Web3\"\n            classes={{\n                root: classes.root,\n                button: classes.button,\n                selected: classes.selected,\n            }}\n            reset={reset}\n            clear={clear}\n            children={<div className={classes.line} />}\n        />\n    )\n}\n\nexport function injectProfileTabAtFacebook(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(searchProfileTabSelector())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { signal }).render(<ProfileTabAtFacebook />)\n\n    const assign = () => {\n        const web3Tab = web3TabSelector().evaluate()\n        if (web3Tab) web3Tab.style.float = 'left'\n    }\n\n    new MutationObserverWatcher(web3TabSelector())\n        .addListener('onChange', assign)\n        .addListener('onAdd', assign)\n        .startWatch(\n            {\n                childList: true,\n                subtree: true,\n                attributes: true,\n            },\n            signal,\n        )\n}\n","import { injectPostReplacer } from '../../../site-adaptor-infra/defaults/inject/PostReplacer.js'\nimport type { PostInfo } from '@masknet/plugin-infra/content-script'\n\nfunction resolveContentNode(node: HTMLElement) {\n    return node.querySelector<HTMLDivElement>('[role=article] div[dir=\"auto\"] > [id] > div > div > span')\n}\n\nexport function injectPostReplacerAtFacebook(signal: AbortSignal, current: PostInfo) {\n    return injectPostReplacer({\n        zipPost(node) {\n            if (node.destroyed) return\n            const langNode = resolveContentNode(node.current)\n            if (langNode) langNode.style.display = 'none'\n        },\n        unzipPost(node) {\n            if (node.destroyed || !node.current) return\n            const langNode = resolveContentNode(node.current)\n            if (langNode) langNode.style.display = 'unset'\n        },\n    })(current, signal)\n}\n","import { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { getMaskColor, makeStyles } from '@masknet/theme'\nimport { ProfileTabContent } from '../../../components/InjectedComponents/ProfileTabContent.js'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { profileSectionSelector, searchProfileTabPageSelector } from '../utils/selector.js'\n\nfunction injectProfileTabContentState(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(searchProfileTabPageSelector())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.beforeShadow, { signal }).render(<ProfileTabContentAtFacebook />)\n}\n\nexport function injectProfileTabContentAtFacebook(signal: AbortSignal) {\n    injectProfileTabContentState(signal)\n}\n\nfunction getStyleProps() {\n    const EMPTY_STYLE = {} as CSSStyleDeclaration\n    const profileSection = profileSectionSelector().evaluate()\n    const style = profileSection ? window.getComputedStyle(profileSection) : EMPTY_STYLE\n    return {\n        borderRadius: style.borderRadius,\n        backgroundColor: style.backgroundColor,\n        fontFamily: style.fontFamily,\n        boxShadow: style.boxShadow,\n    }\n}\n\nconst useStyles = makeStyles()((theme) => {\n    const props = getStyleProps()\n\n    return {\n        root: {\n            position: 'relative',\n            marginBottom: 16,\n            paddingBottom: 16,\n            background: props.backgroundColor,\n            borderRadius: props.borderRadius,\n            boxShadow: props.boxShadow,\n        },\n        text: {\n            paddingTop: 29,\n            paddingBottom: 29,\n            '& > p': {\n                fontSize: 28,\n                fontFamily: props.fontFamily,\n                fontWeight: 700,\n                color: getMaskColor(theme).textPrimary,\n            },\n        },\n        button: {\n            backgroundColor: props.backgroundColor,\n            color: 'white',\n            marginTop: 18,\n            '&:hover': {\n                backgroundColor: props.backgroundColor,\n            },\n        },\n    }\n})\n\nfunction ProfileTabContentAtFacebook() {\n    const { classes } = useStyles()\n    return (\n        <ProfileTabContent\n            classes={{\n                root: classes.root,\n                text: classes.text,\n                button: classes.button,\n            }}\n        />\n    )\n}\n","import { DefaultRenderFragments, type RenderFragmentsContextType } from '@masknet/typed-message-react'\nimport { memo } from 'react'\nimport { Link } from '@mui/material'\nimport { useTagEnhancer } from '../../../../shared-ui/TypedMessageRender/Components/Text.js'\n\nfunction Hash(props: RenderFragmentsContextType.HashLinkProps | RenderFragmentsContextType.CashLinkProps) {\n    const text = props.children.slice(1)\n    const target = `/hashtag/${encodeURIComponent(text)}`\n    const { hasMatch, ...events } = useTagEnhancer('hash', text)\n    return <Link {...events} href={target} children={props.children} fontSize=\"inherit\" />\n}\nexport const FacebookRenderFragments: RenderFragmentsContextType = {\n    // AtLink: not supported\n    HashLink: memo(Hash),\n    // Facebook has no native cashtag support. Treat it has a hash.\n    CashLink: memo(Hash),\n    Image: memo((props) => {\n        if (props.src.includes('emoji.php')) return null\n        return <DefaultRenderFragments.Image {...props} />\n    }),\n}\n","import { MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { searchFacebookProfileCoverSelector } from '../utils/selector.js'\nimport { attachReactTreeWithContainer } from '../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../utils/startWatch.js'\nimport { ProfileCover } from '../../../components/InjectedComponents/ProfileCover.js'\n\nexport function injectFacebookProfileCover(signal: AbortSignal) {\n    const watcher = new MutationObserverWatcher(searchFacebookProfileCoverSelector())\n    startWatch(watcher, signal)\n    attachReactTreeWithContainer(watcher.firstDOMProxy.afterShadow, { signal }).render(<ProfileCoverAtFacebook />)\n}\n\nfunction ProfileCoverAtFacebook() {\n    return <ProfileCover />\n}\n","import { noop } from 'lodash-es'\nimport { Flags } from '@masknet/flags'\nimport { DOMProxy, MutationObserverWatcher } from '@dimensiondev/holoflows-kit'\nimport { Plugin } from '@masknet/plugin-infra'\nimport { Avatar } from '../../../../components/InjectedComponents/Avatar.js'\nimport { attachReactTreeWithContainer } from '../../../../utils/shadow-root/renderInShadowRoot.js'\nimport { startWatch } from '../../../../utils/startWatch.js'\nimport { inpageAvatarSelector } from '../../utils/selector.js'\n\nexport async function injectAvatar(signal: AbortSignal) {\n    startWatch(\n        new MutationObserverWatcher(inpageAvatarSelector()).useForeach((ele) => {\n            let remover = noop\n            const remove = () => remover()\n\n            const run = async () => {\n                const proxy = DOMProxy({\n                    afterShadowRootInit: Flags.shadowRootInit,\n                })\n                proxy.realCurrent = ele.firstChild as HTMLElement\n                // create stacking context\n                ele.style.position = 'relative'\n                // TODO fetch userId\n                const userId = ''\n\n                const root = attachReactTreeWithContainer(proxy.afterShadow, { untilVisible: true, signal })\n                root.render(\n                    <div\n                        style={{\n                            position: 'absolute',\n                            left: 0,\n                            top: 0,\n                            width: '100%',\n                            height: '100%',\n                            zIndex: 2,\n                        }}>\n                        {userId ? (\n                            <Avatar userId={userId} sourceType={Plugin.SiteAdaptor.AvatarRealmSourceType.Post} />\n                        ) : null}\n                    </div>,\n                )\n                remover = root.destroy\n            }\n\n            run()\n            return {\n                onNodeMutation: run,\n                onTargetChanged: run,\n                onRemove: remove,\n            }\n        }),\n        signal,\n    )\n}\n","/* eslint-disable tss-unused-classes/unused-classes */\nimport type { SiteAdaptorUI } from '@masknet/types'\nimport { makeStyles } from '@masknet/theme'\nimport { ProfileIdentifier, EnhanceableSite } from '@masknet/shared-base'\nimport { stateCreator } from '../../site-adaptor-infra/utils.js'\nimport { facebookBase } from './base.js'\nimport { facebookShared } from './shared.js'\nimport { getProfilePageUrlAtFacebook } from './utils/parse-username.js'\nimport { taskOpenComposeBoxFacebook } from './automation/openComposeBox.js'\nimport { pasteTextToCompositionFacebook } from './automation/pasteTextToComposition.js'\nimport { CurrentVisitingIdentityProviderFacebook, IdentityProviderFacebook } from './collecting/identity.js'\nimport { InitAutonomousStateProfiles } from '../../site-adaptor-infra/defaults/state/InitProfiles.js'\nimport { injectCompositionFacebook } from './injection/Composition.js'\nimport { injectBannerAtFacebook } from './injection/Banner.js'\nimport { injectPostCommentsDefault } from '../../site-adaptor-infra/defaults/inject/Comments.js'\nimport { pasteToCommentBoxFacebook } from './automation/pasteToCommentBoxFacebook.js'\nimport { injectCommentBoxDefaultFactory } from '../../site-adaptor-infra/defaults/inject/CommentBox.js'\nimport { injectPostInspectorFacebook } from './injection/PostInspector.js'\nimport getSearchedKeywordAtFacebook from './collecting/getSearchedKeyword.js'\nimport { injectSearchResultInspectorAtFacebook } from './injection/SearchResultInspector.js'\nimport { PostProviderFacebook } from './collecting/posts.js'\nimport { ThemeSettingsProviderFacebook } from './collecting/theme.js'\nimport { pasteImageToCompositionDefault } from '../../site-adaptor-infra/defaults/automation/AttachImageToComposition.js'\nimport { injectPageInspectorDefault } from '../../site-adaptor-infra/defaults/inject/PageInspector.js'\nimport { createTaskStartSetupGuideDefault } from '../../site-adaptor-infra/defaults/inject/StartSetupGuide.js'\nimport { useThemeFacebookVariant } from './customization/custom.js'\nimport { activatedSiteAdaptor_state } from '../../site-adaptor-infra/index.js'\nimport { injectToolboxHintAtFacebook as injectToolboxAtFacebook } from './injection/Toolbar.js'\nimport { injectProfileNFTAvatarInFaceBook } from './injection/NFT/ProfileNFTAvatar.js'\nimport { injectNFTAvatarInFacebook } from './injection/NFT/NFTAvatarInFacebook.js'\nimport { injectUserNFTAvatarAtFacebook } from './injection/NFT/NFTAvatarInTimeline.js'\nimport {\n    injectOpenNFTAvatarEditProfileButton,\n    openNFTAvatarSettingDialog,\n} from './injection/NFT/NFTAvatarEditProfile.js'\nimport { injectProfileTabAtFacebook } from './injection/ProfileTab.js'\nimport { injectPostReplacerAtFacebook } from './injection/PostReplacer.js'\nimport { injectProfileTabContentAtFacebook } from './injection/ProfileContent.js'\nimport { FacebookRenderFragments } from './customization/render-fragments.js'\nimport { enableFbStyleTextPayloadReplace } from '../../../shared-ui/TypedMessageRender/transformer.js'\nimport { injectFacebookProfileCover } from './injection/ProfileCover.js'\nimport { injectAvatar } from './injection/Avatar/index.js'\n\nconst useInjectedDialogClassesOverwriteFacebook = makeStyles()((theme) => {\n    const smallQuery = `@media (max-width: ${theme.breakpoints.values.sm}px)`\n    return {\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            [smallQuery]: {\n                display: 'block !important',\n            },\n        },\n        container: {\n            alignItems: 'center',\n        },\n        paper: {\n            width: '600px !important',\n            maxWidth: 'none',\n            boxShadow: 'none',\n            backgroundImage: 'none',\n            [smallQuery]: {\n                display: 'block !important',\n                borderRadius: '0 !important',\n            },\n        },\n        dialogTitle: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: '3px 16px',\n            borderBottom: `1px solid ${theme.palette.mode === 'dark' ? '#2f3336' : '#eff3f4'}`,\n            '& > h2': {\n                display: 'inline-block',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n            },\n            [smallQuery]: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                maxWidth: 600,\n                margin: '0 auto',\n                padding: '7px 14px 6px 11px !important',\n            },\n        },\n        dialogContent: {\n            padding: 16,\n            [smallQuery]: {\n                display: 'flex',\n                flexDirection: 'column',\n                maxWidth: 600,\n                margin: '0 auto',\n                padding: '7px 14px 6px !important',\n            },\n        },\n        dialogActions: {\n            padding: '6px 16px',\n            [smallQuery]: {\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n                maxWidth: 600,\n                margin: '0 auto',\n                padding: '7px 14px 6px !important',\n            },\n        },\n        dialogBackdropRoot: {\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(110, 118, 125, 0.4)' : 'rgba(0, 0, 0, 0.4)',\n        },\n    }\n})\n\nconst facebookUI: SiteAdaptorUI.Definition = {\n    ...facebookBase,\n    ...facebookShared,\n    automation: {\n        redirect: {\n            profilePage(profile) {\n                // there is no PWA way on Facebook desktop.\n                // mobile not tested\n                location.assign(getProfilePageUrlAtFacebook(profile))\n            },\n            newsFeed() {\n                const homeLink = document.querySelector<HTMLAnchorElement>(\n                    [\n                        '[data-click=\"bluebar_logo\"] a[href]',\n                        '#feed_jewel a[href]', // mobile\n                    ].join(','),\n                )\n                if (homeLink) homeLink.click()\n                else if (location.pathname !== '/') location.assign('/')\n            },\n        },\n        maskCompositionDialog: { open: taskOpenComposeBoxFacebook },\n        nativeCompositionDialog: {\n            attachText: pasteTextToCompositionFacebook,\n            // TODO: make a better way to detect\n            attachImage: pasteImageToCompositionDefault(() => false),\n        },\n        nativeCommentBox: {\n            attachText: pasteToCommentBoxFacebook,\n        },\n    },\n    collecting: {\n        identityProvider: IdentityProviderFacebook,\n        currentVisitingIdentityProvider: CurrentVisitingIdentityProviderFacebook,\n        postsProvider: PostProviderFacebook,\n        themeSettingsProvider: ThemeSettingsProviderFacebook,\n        getSearchedKeyword: getSearchedKeywordAtFacebook,\n    },\n    customization: {\n        sharedComponentOverwrite: {\n            InjectedDialog: {\n                classes: useInjectedDialogClassesOverwriteFacebook,\n            },\n        },\n        componentOverwrite: {\n            RenderFragments: FacebookRenderFragments,\n        },\n        useTheme: useThemeFacebookVariant,\n    },\n    init(signal) {\n        const profiles = stateCreator.profiles()\n        InitAutonomousStateProfiles(signal, profiles, facebookShared.networkIdentifier)\n        enableFbStyleTextPayloadReplace()\n        return { profiles }\n    },\n    injection: {\n        newPostComposition: {\n            start: injectCompositionFacebook,\n            supportedOutputTypes: {\n                text: true,\n                image: true,\n            },\n            supportedInputTypes: {\n                text: true,\n                image: true,\n            },\n        },\n        userBadge: undefined,\n        searchResult: injectSearchResultInspectorAtFacebook,\n        banner: injectBannerAtFacebook,\n        commentComposition: {\n            compositionBox: injectPostCommentsDefault(),\n            commentInspector: injectCommentBoxDefaultFactory(\n                pasteToCommentBoxFacebook,\n                undefined,\n                undefined,\n                (node) => {\n                    setTimeout(() => {\n                        node.after.style.flexBasis = '100%'\n                        node.current.parentElement!.style.flexWrap = 'wrap'\n                    })\n                },\n            ),\n        },\n        userAvatar: injectUserNFTAvatarAtFacebook,\n        enhancedProfileNFTAvatar: injectProfileNFTAvatarInFaceBook,\n        profileAvatar: injectNFTAvatarInFacebook,\n        profileCover: injectFacebookProfileCover,\n        openNFTAvatar: injectOpenNFTAvatarEditProfileButton,\n        openNFTAvatarSettingDialog,\n        postReplacer: injectPostReplacerAtFacebook,\n        postInspector: injectPostInspectorFacebook,\n        pageInspector: injectPageInspectorDefault(),\n        setupWizard: createTaskStartSetupGuideDefault(),\n        toolbox: injectToolboxAtFacebook,\n        profileTab: injectProfileTabAtFacebook,\n        profileTabContent: injectProfileTabContentAtFacebook,\n        avatar: injectAvatar,\n    },\n    configuration: {\n        steganography: {\n            // ! Change this might be a breaking change !\n            password() {\n                const id =\n                    IdentityProviderFacebook.recognized.value.identifier?.userId ||\n                    activatedSiteAdaptor_state!.profiles.value?.[0].identifier.userId\n                if (!id) throw new Error('Cannot figure out password')\n                return ProfileIdentifier.of(EnhanceableSite.Facebook, id)\n                    .expect(`${id} should be a valid user id`)\n                    .toText()\n            },\n        },\n    },\n}\nexport default facebookUI\n","import { i18NextInstance } from '@masknet/shared-base'\nimport type { TFunction } from 'i18next'\nimport type en from '../locales/en-US.json'\n\ndeclare let f: TFunction<any>\n/** @deprecated Prefer useMaskTrans() */\nexport const i18n = i18NextInstance as {\n    t: typeof f<keyof typeof en, {}, string>\n}\n","import { memo } from 'react'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Tooltip } from '@mui/material'\nimport { Image } from '@masknet/shared'\nimport { useWeb3Others } from '@masknet/web3-hooks-base'\nimport type { AllChainsNonFungibleToken } from '../types.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        position: 'relative',\n        width: 100,\n        height: 100,\n        border: '1px solid transparent',\n        boxSizing: 'border-box',\n        borderRadius: 8,\n    },\n    icon: {\n        position: 'absolute',\n        top: 5,\n        right: 5,\n        color: theme.palette.maskColor.primary,\n    },\n    image: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover',\n        boxSizing: 'border-box',\n        borderRadius: 8,\n    },\n    selected: {\n        borderColor: theme.palette.maskColor.primary,\n    },\n    imageLoading: {\n        color: theme.palette.maskColor.main,\n        height: '20px !important',\n        width: '20px !important',\n    },\n    imageContainer: {\n        background:\n            theme.palette.mode === 'dark'\n                ? 'linear-gradient(180deg, #202020 0%, #181818 100%)'\n                : 'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.9) 100%), linear-gradient(90deg, rgba(98, 152, 234, 0.2) 1.03%, rgba(98, 152, 234, 0.2) 1.04%, rgba(98, 126, 234, 0.2) 100%)',\n        borderRadius: 8,\n        overflow: 'hidden',\n        width: '100%',\n        height: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n    },\n    tooltip: {\n        whiteSpace: 'nowrap',\n        maxWidth: '100%',\n    },\n}))\n\ninterface NFTImageProps {\n    className?: string\n    token: AllChainsNonFungibleToken\n    selected?: boolean\n    onSelect: (token: AllChainsNonFungibleToken) => void\n}\n\nexport const NFTImage = memo((props: NFTImageProps) => {\n    const { className, token, onSelect, selected } = props\n    const { classes, cx } = useStyles()\n    const Others = useWeb3Others()\n    const name = token.collection?.name || token.contract?.name\n    const uiTokenId = token.tokenId ? Others.formatTokenId(token.tokenId, 4) ?? `#${token.tokenId}` : name\n    const title = name ? `${name} ${uiTokenId}` : token.metadata?.name ?? ''\n\n    return (\n        <Tooltip\n            title={title}\n            arrow\n            classes={{ tooltip: classes.tooltip }}\n            disableInteractive\n            placement=\"top\"\n            PopperProps={{ disablePortal: true, popperOptions: { strategy: 'absolute' } }}>\n            <Box\n                className={cx(classes.root, className, selected ? classes.selected : '')}\n                onClick={() => onSelect(token)}>\n                <Image\n                    fallback={<Icons.MaskAvatar size={30} />}\n                    classes={{\n                        imageLoading: classes.imageLoading,\n                        container: classes.imageContainer,\n                    }}\n                    src={token.metadata?.imageURL ?? ''}\n                    className={classes.image}\n                />\n                {selected ? <Icons.CheckCircle className={classes.icon} size={24} /> : null}\n            </Box>\n        </Tooltip>\n    )\n})\n","import { useCallback, useState } from 'react'\nimport { compact, range, uniqBy } from 'lodash-es'\nimport {\n    AddCollectiblesModal,\n    ChainBoundary,\n    ElementAnchor,\n    ReloadStatus,\n    ReversedAddress,\n    SelectProviderModal,\n    isSameNFT,\n} from '@masknet/shared'\nimport { EMPTY_LIST, NetworkPluginID } from '@masknet/shared-base'\nimport { LoadingBase, makeStyles } from '@masknet/theme'\nimport {\n    useChainContext,\n    useNetworkContext,\n    useNonFungibleAssets,\n    useWeb3Connection,\n    useWeb3Hub,\n} from '@masknet/web3-hooks-base'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport { Box, Button, List, ListItem, Skeleton, Typography } from '@mui/material'\nimport { useAvatarTrans } from '../locales/i18n_generated.js'\nimport type { AllChainsNonFungibleToken, SelectTokenInfo } from '../types.js'\nimport { NFTImage } from './NFTImage.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {},\n    title: {\n        padding: 0,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    account: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    galleryItem: {\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: 4,\n        height: 200,\n        '::-webkit-scrollbar': {\n            display: 'none',\n        },\n        overflowY: 'auto',\n    },\n    skeleton: {\n        width: 100,\n        height: 100,\n        objectFit: 'cover',\n        boxSizing: 'border-box',\n    },\n    changeButton: {\n        fontSize: 14,\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'row',\n        marginTop: theme.spacing(1),\n        gap: 16,\n    },\n    list: {\n        gridGap: 13,\n        display: 'grid',\n        gridTemplateColumns: 'repeat(5, 1fr)',\n        padding: 8,\n        overflowY: 'auto',\n    },\n\n    nftItem: {\n        position: 'relative',\n        cursor: 'pointer',\n        display: 'flex',\n        overflow: 'hidden',\n        padding: 0,\n        flexDirection: 'column',\n        borderRadius: 12,\n        userSelect: 'none',\n        justifyContent: 'center',\n        lineHeight: 0,\n    },\n}))\n\nexport interface NFTAvatarProps extends withClasses<'root'> {\n    onChange: (token: SelectTokenInfo) => void\n    hideWallet?: boolean\n}\n\nexport function NFTAvatar(props: NFTAvatarProps) {\n    const { onChange, hideWallet } = props\n    const { classes } = useStyles(undefined, { props })\n    const { pluginID } = useNetworkContext()\n    const { account, chainId } = useChainContext()\n    const [selectedToken, setSelectedToken] = useState<AllChainsNonFungibleToken>()\n    const [customCollectibles, setCustomCollectibles] = useState<AllChainsNonFungibleToken[]>([])\n    const t = useAvatarTrans()\n    const {\n        value: collectibles = EMPTY_LIST,\n        done: loadFinish,\n        next: nextPage,\n        error: loadError,\n    } = useNonFungibleAssets(pluginID, undefined, { chainId, account })\n\n    const onClick = useCallback(async () => {\n        if (!selectedToken) return\n        onChange({\n            account,\n            token: selectedToken,\n            image: selectedToken.metadata?.imageURL ?? '',\n            pluginID,\n        })\n        setSelectedToken(undefined)\n    }, [onChange, selectedToken, pluginID])\n\n    const Web3 = useWeb3Connection(pluginID)\n    const Hub = useWeb3Hub(pluginID)\n    const handleAddCollectibles = useCallback(async () => {\n        const results = await AddCollectiblesModal.openAndWaitForClose({\n            pluginID,\n            chainId,\n        })\n        if (!results || !chainId) return\n        const [contract, tokenIds] = results\n        const address = contract.address\n        const allSettled = await Promise.allSettled(\n            tokenIds.map(async (tokenId) => {\n                const [asset, token, isOwner] = await Promise.all([\n                    Hub.getNonFungibleAsset(address, tokenId, {\n                        chainId,\n                        account,\n                    }),\n                    Web3.getNonFungibleToken(address, tokenId, undefined, {\n                        chainId,\n                    }),\n                    Web3.getNonFungibleTokenOwnership(address, tokenId, account, undefined, {\n                        chainId,\n                    }),\n                ])\n\n                if (!asset?.contract?.chainId || !token.chainId || token.contract?.chainId !== chainId) return\n                if (!isOwner) return\n                return { ...token, ...asset } as AllChainsNonFungibleToken\n            }),\n        )\n        const tokens = compact(allSettled.map((x) => (x.status === 'fulfilled' ? x.value : null)))\n        if (!tokens.length) return\n        setSelectedToken(tokens[0])\n        setCustomCollectibles((tokens) => uniqBy([...tokens, ...tokens], (x) => x.contract?.address && x.tokenId))\n    }, [pluginID, chainId, account])\n\n    const loadingSkeletons = (\n        <List className={classes.list}>\n            {range(8).map((i) => (\n                <ListItem key={i} className={classes.nftItem}>\n                    <Skeleton animation=\"wave\" variant=\"rectangular\" className={classes.skeleton} />\n                </ListItem>\n            ))}\n        </List>\n    )\n\n    return (\n        <Box className={classes.root}>\n            <Box className={classes.title}>\n                <Typography variant=\"body1\" color=\"textPrimary\">\n                    {t.nft_list_title()}\n                </Typography>\n                {account ? (\n                    <Typography variant=\"body1\" color=\"textPrimary\" className={classes.account}>\n                        {t.nft_wallet_label()}: <ReversedAddress address={account} size={4} />\n                        {!hideWallet ? (\n                            <Button\n                                variant=\"text\"\n                                onClick={() => SelectProviderModal.open()}\n                                size=\"small\"\n                                className={classes.changeButton}>\n                                {t.nft_wallet_change()}\n                            </Button>\n                        ) : null}\n                    </Typography>\n                ) : null}\n            </Box>\n            <ChainBoundary expectedPluginID={NetworkPluginID.PLUGIN_EVM} expectedChainId={chainId as ChainId}>\n                <Box className={classes.galleryItem}>\n                    {!loadFinish && !loadError && !collectibles.length ? (\n                        loadingSkeletons\n                    ) : loadError || (!collectibles.length && !customCollectibles.length) ? (\n                        <ReloadStatus\n                            message={t.dashboard_no_collectible_found()}\n                            actionLabel={t.retry()}\n                            onRetry={nextPage}\n                        />\n                    ) : (\n                        <List className={classes.list}>\n                            {uniqBy(\n                                [...customCollectibles, ...collectibles],\n                                (x) => x.contract?.address && x.tokenId,\n                            ).map((token: AllChainsNonFungibleToken, i) => (\n                                <ListItem className={classes.nftItem} key={i}>\n                                    <NFTImage\n                                        key={i}\n                                        token={token}\n                                        selected={isSameNFT(NetworkPluginID.PLUGIN_EVM, token, selectedToken)}\n                                        onSelect={setSelectedToken}\n                                    />\n                                </ListItem>\n                            ))}\n                            <ElementAnchor\n                                callback={() => {\n                                    nextPage?.()\n                                }}>\n                                {!loadFinish && <LoadingBase />}\n                            </ElementAnchor>\n                        </List>\n                    )}\n                </Box>\n\n                <Box className={classes.buttons}>\n                    <Button variant=\"outlined\" size=\"small\" onClick={handleAddCollectibles}>\n                        {t.add_collectible()}\n                    </Button>\n\n                    <Button variant=\"contained\" size=\"small\" onClick={onClick} disabled={!selectedToken}>\n                        {t.set_avatar_title()}\n                    </Button>\n                </Box>\n            </ChainBoundary>\n        </Box>\n    )\n}\n","import type { AsyncState } from 'react-use/lib/useAsyncFn.js'\nimport type { AvatarMetaDB } from '../types.js'\nimport type { RSS3_KEY_SITE } from '../constants.js'\nimport { useAsync } from 'react-use'\nimport { getEnhanceableSiteType } from '@masknet/shared-base'\nimport { useGetNFTAvatar } from './useGetNFTAvatar.js'\n\nexport function useNFTAvatar(userId: string | undefined, key: RSS3_KEY_SITE): AsyncState<AvatarMetaDB | undefined> {\n    const getNFTAvatar = useGetNFTAvatar()\n\n    return useAsync(async () => {\n        const siteType = getEnhanceableSiteType()\n        if (!siteType) return\n        return getNFTAvatar(userId, siteType, key)\n    }, [userId, key, getNFTAvatar])\n}\n","import { useSubscription } from 'use-subscription'\nimport { FALSE, TRUE, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useAllowTestnet<T extends NetworkPluginID>(pluginID?: T) {\n    const { Settings } = useWeb3State(pluginID)\n    return useSubscription(Settings?.allowTestnet ?? (process.env.NODE_ENV === 'development' ? TRUE : FALSE))\n}\n","import React, { memo } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { delay } from '@masknet/kit'\nimport { Box } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles, ShadowRootTooltip, ActionButton, useCustomSnackbar } from '@masknet/theme'\nimport {\n    useNetworkContext,\n    useChainContext,\n    useNetworkDescriptor,\n    useAllowTestnet,\n    useChainIdValid,\n    RevokeChainContextProvider,\n    useWeb3Others,\n    useWeb3Connection,\n} from '@masknet/web3-hooks-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { WalletIcon } from '../WalletIcon/index.js'\nimport { type ActionButtonPromiseProps } from '../ActionButton/index.js'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { SelectProviderModal } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    tooltip: {\n        background: theme.palette.common.black,\n        color: theme.palette.common.white,\n        borderRadius: 4,\n        padding: 10,\n        maxWidth: 260,\n    },\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    connectWallet: {\n        '& > .MuiButton-startIcon': {\n            lineHeight: 1,\n        },\n    },\n}))\n\nexport interface ChainBoundaryProps<T extends NetworkPluginID> extends withClasses<'switchButton'> {\n    /** The expected network plugin ID */\n    expectedPluginID: T\n    /** The expected sub-network under the network plugin */\n    expectedChainId: Web3Helper.Definition[T]['ChainId']\n    /** Judge the network is available for children components */\n    predicate?: (actualPluginID: NetworkPluginID, actualChainId: Web3Helper.Definition[T]['ChainId']) => boolean\n    expectedAccount?: string\n    className?: string\n    hiddenConnectButton?: boolean\n    switchChainWithoutPopup?: boolean\n    forceShowingWrongNetworkButton?: boolean\n    children?: React.ReactNode\n    ActionButtonPromiseProps?: Partial<ActionButtonPromiseProps>\n    actualNetworkPluginID?: T\n    switchText?: string\n    disableConnectWallet?: boolean\n}\n\nexport function ChainBoundaryWithoutContext<T extends NetworkPluginID>(props: ChainBoundaryProps<T>) {\n    const {\n        expectedPluginID,\n        expectedChainId,\n        expectedAccount,\n        actualNetworkPluginID,\n        switchText,\n        forceShowingWrongNetworkButton = false,\n        disableConnectWallet = false,\n        predicate = (actualPluginID, actualChainId) =>\n            actualPluginID === expectedPluginID && actualChainId === expectedChainId,\n    } = props\n\n    const t = useSharedTrans()\n    const { classes } = useStyles(undefined, { props })\n\n    const { pluginID: actualPluginID } = useNetworkContext(actualNetworkPluginID)\n\n    const Web3 = useWeb3Connection(actualPluginID)\n\n    const { showSnackbar } = useCustomSnackbar()\n    const {\n        account,\n        chainId: actualChainId,\n        providerType: actualProviderType,\n    } = useChainContext({ account: expectedAccount })\n\n    const expectedOthers = useWeb3Others(expectedPluginID)\n    const expectedAllowTestnet = useAllowTestnet(expectedPluginID)\n\n    const chainIdValid = useChainIdValid(actualPluginID)\n\n    const expectedChainName = expectedOthers.chainResolver.chainName(expectedChainId)\n    const expectedNetworkDescriptor = useNetworkDescriptor(expectedPluginID, expectedChainId)\n    const expectedChainAllowed = expectedOthers.chainResolver.isValidChainId(expectedChainId, expectedAllowTestnet)\n\n    const isPluginIDMatched = actualPluginID === expectedPluginID\n    const isMatched = predicate(actualPluginID, actualChainId)\n\n    const [{ loading }, onSwitchChain] = useAsyncFn(async () => {\n        try {\n            if (actualProviderType !== ProviderType.WalletConnect || isMatched || !expectedChainAllowed) return\n            await Web3.switchChain?.(expectedChainId)\n            await delay(1500)\n\n            return 'complete'\n        } catch (error) {\n            if (error instanceof Error) {\n                if (error.message === 'Chain currently not supported' || error.message === 'Invalid Request') {\n                    showSnackbar(t.plugin_wallet_switch_network_title(), {\n                        processing: false,\n                        variant: 'error',\n                        message: t.plugin_wallet_unsupported_chain({ network: expectedChainName ?? '' }),\n                        autoHideDuration: 5000,\n                    })\n                } else {\n                    showSnackbar(t.plugin_wallet_switch_network_title(), {\n                        processing: false,\n                        variant: 'error',\n                        message: t.plugin_wallet_switch_chain_failed(),\n                        autoHideDuration: 5000,\n                    })\n                }\n            }\n            return 'failed'\n        }\n    }, [expectedChainAllowed, isMatched, expectedChainId, actualProviderType, Web3, expectedChainName])\n\n    const renderBox = (children?: React.ReactNode, tips?: string) => {\n        return (\n            <ShadowRootTooltip\n                title={tips ?? ''}\n                classes={{ tooltip: classes.tooltip, arrow: classes.arrow }}\n                arrow\n                placement=\"top\">\n                <Box className={props.className} display=\"flex\" flexDirection=\"column\" width=\"100%\">\n                    {children}\n                </Box>\n            </ShadowRootTooltip>\n        )\n    }\n\n    if (!chainIdValid && !expectedChainAllowed && forceShowingWrongNetworkButton)\n        return renderBox(\n            !props.hiddenConnectButton ? (\n                <ActionButton\n                    fullWidth\n                    startIcon={<Icons.Wallet size={18} />}\n                    onClick={() => SelectProviderModal.open()}\n                    {...props.ActionButtonPromiseProps}>\n                    {t.plugin_wallet_wrong_network()}\n                </ActionButton>\n            ) : null,\n        )\n\n    // No wallet connected\n    if (!account && !disableConnectWallet)\n        return renderBox(\n            !props.hiddenConnectButton ? (\n                <ActionButton\n                    className={classes.connectWallet}\n                    fullWidth\n                    startIcon={<Icons.Wallet size={18} />}\n                    onClick={() => SelectProviderModal.open()}\n                    {...props.ActionButtonPromiseProps}>\n                    {t.plugin_wallet_connect_a_wallet()}\n                </ActionButton>\n            ) : null,\n        )\n\n    // Network mismatch\n    if (!isPluginIDMatched) {\n        return renderBox(\n            <ActionButton\n                fullWidth\n                className={classes.switchButton}\n                disabled={actualProviderType === ProviderType.WalletConnect}\n                startIcon={<WalletIcon mainIcon={expectedNetworkDescriptor?.icon} size={18} />}\n                sx={props.ActionButtonPromiseProps?.sx}\n                onClick={() => SelectProviderModal.open()}\n                {...props.ActionButtonPromiseProps}>\n                {t.plugin_wallet_change_wallet()}\n            </ActionButton>,\n            actualProviderType === ProviderType.WalletConnect\n                ? t.plugin_wallet_connect_tips()\n                : t.plugin_wallet_not_support_network(),\n        )\n    }\n\n    // Provider is Wallet Connect\n    if (actualProviderType === ProviderType.WalletConnect && !isMatched) {\n        return renderBox(\n            <ActionButton\n                startIcon={<WalletIcon mainIcon={expectedNetworkDescriptor?.icon} size={18} />}\n                onClick={onSwitchChain}\n                loading={loading}\n                className={classes.switchButton}\n                sx={props.ActionButtonPromiseProps?.sx}\n                {...props.ActionButtonPromiseProps}>\n                {switchText ?? t.plugin_wallet_switch_network({ network: expectedChainName ?? '' })}\n            </ActionButton>,\n            t.plugin_wallet_connect_tips(),\n        )\n    }\n\n    return props.children\n}\n\nexport const ChainBoundary = memo(function <T extends NetworkPluginID>(props: ChainBoundaryProps<T>) {\n    return (\n        <RevokeChainContextProvider>\n            <ChainBoundaryWithoutContext {...props} />\n        </RevokeChainContextProvider>\n    )\n})\n\nChainBoundary.displayName = 'ChainBoundary'\n","import { memo, useEffect, useRef } from 'react'\nimport { useIntersectionObserver } from '@react-hookz/web'\nimport { Stack, type StackProps } from '@mui/material'\n\ninterface ElementAnchorProps extends StackProps {\n    callback: (intersection: IntersectionObserverEntry | undefined) => void\n}\n\nexport const ElementAnchor = memo<ElementAnchorProps>(({ callback, children, ...rest }) => {\n    const elementRef = useRef<HTMLDivElement>(null)\n    const intersection = useIntersectionObserver(elementRef, {\n        rootMargin: '200px',\n    })\n\n    const callbackRef = useRef(callback)\n    callbackRef.current = callback\n    useEffect(() => {\n        if (!intersection?.isIntersecting) return\n        callbackRef.current(intersection)\n    }, [intersection])\n\n    return (\n        <Stack pt={1} ref={elementRef} justifyContent=\"center\" alignItems=\"center\" direction=\"row\" {...rest}>\n            {children}\n        </Stack>\n    )\n})\n\nElementAnchor.displayName = 'ElementAnchor'\n","import { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { isSameAddress } from '@masknet/web3-shared-base'\n\nexport function isSameNFT(\n    pluginID: NetworkPluginID,\n    a: Web3Helper.NonFungibleAssetAll,\n    b?: Web3Helper.NonFungibleAssetAll,\n) {\n    if (pluginID === NetworkPluginID.PLUGIN_SOLANA) return a.tokenId === b?.tokenId && a.id === b.id\n    if (!a.contract) return false\n    return (\n        isSameAddress(a.contract.address, b?.contract?.address) &&\n        a.contract?.chainId === b?.contract?.chainId &&\n        a.tokenId === b?.tokenId\n    )\n}\n","import { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport { EMPTY_ARRAY, type NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useBlockedNonFungibleTokens<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    schemaType?: Web3Helper.SchemaTypeScope<S, T>,\n) {\n    const { Token } = useWeb3State(pluginID)\n    const nfts = useSubscription(Token?.blockedNonFungibleTokens ?? EMPTY_ARRAY)\n    return useMemo<Array<Web3Helper.NonFungibleTokenScope<S, T>>>(() => {\n        return nfts.length && schemaType ? nfts.filter((x) => x.schema === schemaType) : nfts\n    }, [schemaType, nfts])\n}\n","import { type NetworkPluginID } from '@masknet/shared-base'\nimport { getRegisteredWeb3Networks } from '@masknet/web3-providers'\nimport { useNetworkContext } from './useContext.js'\n\n/**\n * Get all built in declared network descriptor\n * @param expectedPluginID\n * @param expectedChainIdOrNetworkTypeOrID\n * @returns\n */\nexport function useNetworkDescriptors<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n) {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    return getRegisteredWeb3Networks(pluginID)\n}\n","import { EMPTY_LIST, type NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useInfiniteQuery } from '@tanstack/react-query'\nimport { useCallback, useMemo } from 'react'\nimport { useBlockedNonFungibleTokens } from './useBlockedNonFungibleTokens.js'\nimport { useChainContext } from './useContext.js'\nimport { useNetworkDescriptors } from './useNetworkDescriptors.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\n\n/**\n * Blocked tokens would be filtered out\n */\nexport function useNonFungibleAssets<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    schemaType?: Web3Helper.SchemaTypeScope<S, T>,\n    options?: HubOptions<T>,\n) {\n    const { account, chainId } = useChainContext({ account: options?.account })\n    const Hub = useWeb3Hub(pluginID, { account, chainId, ...options })\n    const networks = useNetworkDescriptors(pluginID)\n    const availableChainIds = useMemo(() => {\n        return networks\n            .filter((x) => x.isMainnet && (options?.chainId ? x.chainId === options.chainId : true))\n            .map((x) => x.chainId)\n    }, [networks, options?.chainId])\n\n    const blockedTokens = useBlockedNonFungibleTokens()\n    const blockedTokenIds = useMemo(() => {\n        return blockedTokens.filter((x) => availableChainIds.includes(x.chainId)).map((x) => x.id)\n    }, [blockedTokens, availableChainIds])\n    const { data, isLoading, fetchNextPage, hasNextPage, refetch, error, dataUpdatedAt } = useInfiniteQuery({\n        queryKey: ['non-fungible-assets', account, availableChainIds, blockedTokenIds],\n        queryFn: async ({ pageParam }) => {\n            const chainId = pageParam?.chainId || availableChainIds[0]\n            const res = await Hub.getNonFungibleAssets!(account, {\n                indicator: pageParam?.indicator,\n                size: 20,\n                chainId,\n            })\n            const data = blockedTokenIds.length\n                ? res.data.filter((x) => {\n                      const id = `${x.chainId}.${x.address}.${x.tokenId}`.toLowerCase()\n                      return !blockedTokenIds.includes(id)\n                  })\n                : res.data\n            return {\n                ...res,\n                data,\n                chainId,\n            }\n        },\n        getNextPageParam: (lastPage) => {\n            const { nextIndicator, chainId } = lastPage\n            const nextChainId = nextIndicator ? chainId : availableChainIds[availableChainIds.indexOf(chainId) + 1]\n            if (!nextChainId) return\n            return {\n                indicator: nextIndicator,\n                chainId: nextChainId,\n            }\n        },\n    })\n\n    const list = useMemo(() => data?.pages.flatMap((x) => x.data) || EMPTY_LIST, [data?.pages])\n    const nextPage = useCallback(() => fetchNextPage(), [fetchNextPage])\n\n    // TODO rename these fields in style of react-query\n    return {\n        value: list,\n        next: nextPage,\n        loading: isLoading,\n        done: !hasNextPage,\n        retry: refetch,\n        error,\n        dataUpdatedAt,\n    }\n}\n","import { useEffect, useState } from 'react';\nconst DEFAULT_THRESHOLD = [0];\nconst DEFAULT_ROOT_MARGIN = '0px';\nconst observers = new Map();\nconst getObserverEntry = (options) => {\n    const root = options.root ?? document;\n    let rootObservers = observers.get(root);\n    if (!rootObservers) {\n        rootObservers = new Map();\n        observers.set(root, rootObservers);\n    }\n    const opt = JSON.stringify([options.rootMargin, options.threshold]);\n    let entry = rootObservers.get(opt);\n    if (!entry) {\n        const callbacks = new Map();\n        const observer = new IntersectionObserver((entries) => {\n            entries.forEach((e) => callbacks.get(e.target)?.forEach((cb) => setTimeout(() => {\n                cb(e);\n            }, 0)));\n        }, options);\n        entry = {\n            observer,\n            observe(target, callback) {\n                let cbs = callbacks.get(target);\n                if (!cbs) {\n                    // If target has no observers yet - register it\n                    cbs = new Set();\n                    callbacks.set(target, cbs);\n                    observer.observe(target);\n                }\n                // As Set is duplicate-safe - simply add callback on each call\n                cbs.add(callback);\n            },\n            unobserve(target, callback) {\n                const cbs = callbacks.get(target);\n                // Else branch should never occur in case of normal execution\n                // because callbacks map is hidden in closure - it is impossible to\n                // simulate situation with non-existent `cbs` Set\n                /* istanbul ignore else */\n                if (cbs) {\n                    // Remove current observer\n                    cbs.delete(callback);\n                    if (!cbs.size) {\n                        // If no observers left unregister target completely\n                        callbacks.delete(target);\n                        observer.unobserve(target);\n                        // If not tracked elements left - disconnect observer\n                        if (!callbacks.size) {\n                            observer.disconnect();\n                            rootObservers.delete(opt);\n                            if (!rootObservers.size) {\n                                observers.delete(root);\n                            }\n                        }\n                    }\n                }\n            },\n        };\n        rootObservers.set(opt, entry);\n    }\n    return entry;\n};\n/**\n * Tracks intersection of a target element with an ancestor element or with a\n * top-level document's viewport.\n *\n * @param target React reference or Element to track.\n * @param options Like `IntersectionObserver` options but `root` can also be\n * react reference\n */\nexport function useIntersectionObserver(target, { threshold = DEFAULT_THRESHOLD, root: r, rootMargin = DEFAULT_ROOT_MARGIN, } = {}) {\n    const [state, setState] = useState();\n    useEffect(() => {\n        const tgt = target && 'current' in target ? target.current : target;\n        if (!tgt)\n            return;\n        let subscribed = true;\n        const observerEntry = getObserverEntry({\n            root: r && 'current' in r ? r.current : r,\n            rootMargin,\n            threshold,\n        });\n        const handler = (entry) => {\n            // It is reinsurance for the highly asynchronous invocations, almost\n            // impossible to achieve in tests, thus excluding from LOC\n            /* istanbul ignore else */\n            if (subscribed) {\n                setState(entry);\n            }\n        };\n        observerEntry.observe(tgt, handler);\n        return () => {\n            subscribed = false;\n            observerEntry.unobserve(tgt, handler);\n        };\n    }, [target, r, rootMargin, ...threshold]);\n    return state;\n}\n","'use client';\nimport { parseQueryArgs, InfiniteQueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}\n\nexport { useInfiniteQuery };\n//# sourceMappingURL=useInfiniteQuery.mjs.map\n"],"names":["pasteImage","pasteImageToActiveElements","image","Uint8Array","arrayBuffer","waitDocumentReadyState","MaskMessages","activatedSiteAdaptorUI","downloadUrl","pasteImageToCompositionDefault","hasSucceed","url","recover","relatedTextPayload","p","automation","nativeCompositionDialog","attachText","events","autoPasteFailed","sendToLocal","text","makeStyles","Box","InputBase","useMaskSharedTrans","EnhanceableSite","useStyles","_theme","site","root","flex","fontSize","background","width","Minds","height","borderRadius","padding","boxSizing","marginTop","color","input","opacity","CommentBox","props","classes","networkIdentifier","t","sx","display","className","inputProps","placeholder","comment_box__placeholder","onKeyDown","event","node","target","value","key","onSubmit","memo","useCallback","useContext","usePostInfoDetails","PostInfoContext","MutationObserverWatcher","startWatch","attachReactTreeWithContainer","defaultOnPasteToCommentBox","encryptedComment","_current","_realCurrent","injectCommentBoxDefaultFactory","onPasteToCommentBox","additionPropsToCommentBox","useCustomStyles","mountPointCallback","CommentBoxUI","dom","info","encryptComment","onCallback","content","signal","current","comment","commentBoxSelector","commentBoxWatcher","clone","document","body","useForeach","meta","afterShadow","render","Provider","realCurrent","destroy","useEffect","useAsync","Chip","Lock","useValueRef","useStyle","label","overflowWrap","whiteSpace","textOverflow","PostCommentDecrypted","undefined","ChipProps","data-testid","icon","children","PostComment","needZip","decrypt","decryptComment","PostInfoProvider","ValueRef","collectNodeText","injectPostCommentsDefault","config","additionalPropsToPostComment","PostCommentDefault","additional","injectPostComments","selector","commentsSelector","commentWatcher","commentNode","commentRef","needZipF","post","onNodeMutation","onTargetChanged","onRemove","isMobileFacebook","i18n","isValidFacebookUsername","name","n","toLowerCase","replaceAll","match","getPostUrlAtFacebook","id","identifier","postId","userId","host","getFacebookHostName","Number","parseFloat","getProfilePageUrlAtFacebook","user","network","Error","username","TypeError","urlcat","origins","FacebookAdaptor","Facebook","declarativePermissions","homepage","isSocialNetwork","sortIndex","getProfilePage","URL","getShareLinkURL","message","quote","u","facebookBase","hasPayloadLike","createSiteAdaptorSpecializedPostContext","openWindow","getPostURL","facebookShared","utils","isValidUsername","v","share","createPostContext","getURLFromPostIdentifier","LiveSelector","CrossIsolationMessages","makeTypedMessageText","delay","nativeComposeButtonSelector","querySelector","join","enableSingleMode","nativeComposeTextareaSelector","nativeComposeDialogIndicatorSelector","nativeComposeDialogCloseButtonSelector","taskOpenComposeBoxFacebook","options","composeTextarea","evaluate","composeButton","focus","click","composeIndicator","alert","compositionDialogEvent","reason","open","taskCloseNativeComposeBoxFacebook","closeDialogButton","inputText","pasteText","pasteTextToCompositionFacebook","scrolling","scrollingElement","documentElement","scrollBack","top","scroll","scrollTop","activated","querySelectorAll","filter","x","getClientRects","length","activatedCustom","parentElement","hasAttribute","element","selection","window","getSelection","rangeCount","removeAllRanges","firstChild","range","createRange","selectNode","addRange","activeElement","e","style","innerText","includes","copyFailed","error","console","warn","compact","singleMode","ls","searchUserIdOnMobileSelector","searchAvatarSelector","searchNickNameSelector","searchNickNameSelectorOnMobile","bioDescriptionSelectorOnMobile","searchUserIdSelector","searchUserIdSelectorOnMobile","searchFacebookAvatarListSelector","closest","searchFacebookAvatarMobileListSelector","searchFacebookAvatarSelector","searchFacebookAvatarOnMobileSelector","searchFaceBookPostAvatarSelector","searchFaceBookPostAvatarOnMobileSelector","searchFacebookAvatarOpenFilesSelector","searchFacebookAvatarOpenFilesOnMobileSelector","searchFacebookProfileSettingButtonSelector","searchFacebookProfileCoverSelector","searchFacebookEditProfileSelector","searchFacebookSaveAvatarButtonSelector","map","at","searchFacebookConfirmAvatarImageSelector","inpageAvatarSelector","toolboxInSidebarSelector","toolboxInSpecialSidebarSelector","toolboxInSidebarSelectorWithNoLeftRailStart","profileTabUnselectedSelector","profileTabSelectedSelector","searchProfileTabSelector","web3TabSelector","searchProfileTabPageSelector","profileSectionSelector","searchIntroSectionSelector","searchBioSelector","searchResultHeadingSelector","searchHomepageSelector","ProfileIdentifier","Services","getCurrentIdentifier","getProfileIdentifierAtFacebook","links","allowCollectInfo","unknown","Array","isArray","result","Boolean","nickname","ariaLabel","textContent","trim","getUserID","href","of","unwrapOr","currentProfile","avatar","src","getAttribute","Identity","updateProfileInfo","avatarURL","linkedPersona","createNewRelation","relative","startsWith","location","hostname","pathname","endsWith","search","URLSearchParams","get","val","replace","split","getNickName","getAvatar","imageURL","bioDescription","getBioDescription","intro","getFacebookId","canParse","searchParams","FACEBOOK_AVATAR_ID_MATCH","getAvatarId","_url","homepageCache","getPersonalHomepage","creator","IdentityProviderFacebook","hasDeprecatedPlaceholderName","recognized","EmptyIdentityResolveProviderState","start","resolveLastRecognizedIdentityFacebookInner","ref","self","myUsernameLiveSelectorMobile","myUsernameLiveSelectorPC","addListener","assign","newValue","childList","subtree","characterData","i","fetch","method","then","isOwner","resolveCurrentVisitingIdentityInner","ownerRef","cancel","bio","handle","ownerHandle","createWatcher","attributes","addEventListener","CurrentVisitingIdentityProviderFacebook","Composition","PostDialogHint","composeBox","tooltip","marginBottom","boxShadow","isGroup","matched","injectCompositionFacebook","watcher","firstDOMProxy","UI","on","data","isOpenFromApplicationBoard","onHintButtonClicked","span","size","disabled","placement","type","Banner","injectBannerAtFacebook","selectElementContents","pasteToCommentBoxFacebook","fail","textarea","dispatchEvent","CustomEvent","bubbles","cancelable","composed","rootNode","injectPostInspectorDefault","Flags","WeakMap","getShadowRoot","has","attachShadow","shadowRootInit","set","injectPostInspectorFacebook","clickSeeMore","rootElement","zipPost","zipEncryptedPostContent","zipPostLinkPreview","injectionPoint","suggestedInjectionPoint","destroyed","parentEle","img","parent","after","setAttribute","maxHeight","overflow","more","trap","preventDefault","parentNode","setTimeout","removeEventListener","getSearchedKeywordAtFacebook","hashKeyword","test","params","SearchResultInspector","injectSearchResultInspectorAtFacebook","beforeShadow","None","Some","DOMProxy","makeTypedMessageTuple","createRefsForCreatePostContext","posts","PostProviderFacebook","EmptyPostProviderState","collectPostsFacebookInner","store","metadata","rootProxy","afterShadowRootInit","beforeShadowRootInit","commentSelectorPC","commentSelectorMobile","commentBoxSelectorPC","commentBoxSelectorMobile","innerHTML","subscriptions","postInfo","comments","collectPostInfo","nextTypedMessage","postBy","getPostBy","hasMaskPayload","getCurrentValue","postID","getPostID","onHTMLAnchorElement","push","images","getMetadataImages","postMetadataImages","add","postMessage","collectLinks","linkElements","from","seen","Set","postMetadataMentionedLinks","run","delete","abbr","idElement","postTimeNode1","postIdMode1","postTimeNode2","postIdMode2","idNode","imgNodes","imgUrls","getComputedStyle","backgroundImage","slice","ThemeMode","resolveThemeSettingsInner","updateThemeColor","isDarkMode","mode","Dark","Light","observer","MutationObserver","mutations","forEach","mutation","oldValue","observe","attributeOldValue","attributeFilter","disconnect","ThemeSettingsProviderFacebook","EmptyThemeSettingsProviderState","useMemo","produce","setAutoFreeze","unstable_createMuiStrictModeTheme","fromRGB","shade","toRGB","useThemeSettings","useThemeFacebookVariant","baseTheme","themeSettings","primaryColorRGB","primaryContrastColorRGB","FacebookTheme","theme","palette","primary","light","main","dark","contrastText","shape","breakpoints","values","xs","sm","md","lg","xl","components","MuiTypography","styleOverrides","fontFamily","MuiPaper","defaultProps","elevation","MuiTab","textTransform","styled","ListItemButton","Typography","ListItemIcon","ToolboxHintUnstyled","Container","ContainerHasNavBar","Item","Text","Icon","shouldForwardProp","hasSpecificLeftRailStartBar","hasTopNavBar","ToolboxAtFacebook","iconSize","category","ele","isNormalLeftRailStartBar","injectToolboxHintAtFacebook","watcherNoLeftRailStart","NFTAvatar","toPNG","hookInputUploadOnce","NetworkPluginID","InMemoryStorages","ChainId","SchemaType","useCurrentVisitingIdentity","injectProfileNFTAvatarInFaceBook","untilVisible","NFTAvatarInFacebookFirstStep","saveButtonWatcher","proxy","NFTAvatarInFacebookSecondStep","NFTAvatarListInFaceBookMobile","margin","changeImageToActiveElements","imageBuffer","identity","onChange","token","contract","address","NFTAvatarUpdated","avatarId","tokenId","pluginID","PLUGIN_EVM","chainId","Mainnet","schema","ERC721","save","handler","changeImageToActiveElementsOnMobile","visibility","file","File","lastModified","Date","now","container","DataTransfer","items","files","useMobileStyles","backgroundColor","FacebookNFTEventOnMobile","storage","setValue","useLayoutEffect","useState","useLocation","useWindowSize","max","pickBy","useChainContext","useSaveStringStorage","useNFT","useNFTAvatar","NFTBadge","RSS3_KEY_SITE","useWallet","injectNFTAvatarInFacebook","NFTAvatarInFacebook","mobileWatcher","position","textAlign","left","fontWeight","clearStorages","setAvatar","nftAvatar","FACEBOOK","account","loading","loadingWallet","nftInfo","loadingNFTInfo","pluginId","NFTEvent","setNFTEvent","saveNFTAvatar","windowSize","showAvatar","parseInt","prev","item","storages","avatarInfo","removeAttribute","getInjectNodeInfo","imgEle","nftDom","baseVal","containerDom","noop","NFTBadgeTimeline","transform","TimelineRainbow","div","zIndex","siteKey","_","remove","facebookId","injectUserNFTAvatarAtFacebook","useLocationChange","NFTAvatarButton","injectOpenNFTAvatarEditProfileButton","OpenNFTAvatarEditProfileButtonInFaceBook","minHeight","maskColor","marginRight","spacing","marginLeft","border","openNFTAvatarSettingDialog","editDom","setStyle","setStyleWithSelector","buttonDom","editCss","buttonCss","paddingTop","onClick","showSetting","debounce","ProfileTab","getStyleProps","EMPTY_STYLE","divEle","spanEle","selectedSpanEle","divStyle","spanStyle","selectedSpanStyle","font","paddingLeft","hover","line","cursor","flexDirection","alignContent","justifyContent","button","minWidth","alignItems","selected","bottom","alignSelf","styleTab","textColor","borderColor","textEle","borderEle","iconEle","fill","ProfileTabAtFacebook","action","setAction","clear","reset","title","injectProfileTabAtFacebook","web3Tab","float","injectPostReplacer","resolveContentNode","injectPostReplacerAtFacebook","langNode","unzipPost","getMaskColor","ProfileTabContent","injectProfileTabContentState","ProfileTabContentAtFacebook","injectProfileTabContentAtFacebook","profileSection","paddingBottom","textPrimary","DefaultRenderFragments","Link","useTagEnhancer","Hash","encodeURIComponent","hasMatch","FacebookRenderFragments","HashLink","CashLink","Image","ProfileCover","injectFacebookProfileCover","ProfileCoverAtFacebook","Plugin","Avatar","injectAvatar","remover","sourceType","SiteAdaptor","AvatarRealmSourceType","Post","stateCreator","InitAutonomousStateProfiles","injectPageInspectorDefault","createTaskStartSetupGuideDefault","activatedSiteAdaptor_state","injectToolboxAtFacebook","enableFbStyleTextPayloadReplace","useInjectedDialogClassesOverwriteFacebook","smallQuery","paper","maxWidth","dialogTitle","borderBottom","dialogContent","dialogActions","dialogBackdropRoot","facebookUI","redirect","profilePage","profile","newsFeed","homeLink","maskCompositionDialog","attachImage","nativeCommentBox","collecting","identityProvider","currentVisitingIdentityProvider","postsProvider","themeSettingsProvider","getSearchedKeyword","customization","sharedComponentOverwrite","InjectedDialog","componentOverwrite","RenderFragments","useTheme","init","profiles","injection","newPostComposition","supportedOutputTypes","supportedInputTypes","userBadge","searchResult","banner","commentComposition","compositionBox","commentInspector","flexBasis","flexWrap","userAvatar","enhancedProfileNFTAvatar","profileAvatar","profileCover","openNFTAvatar","postReplacer","postInspector","pageInspector","setupWizard","toolbox","profileTab","profileTabContent","configuration","steganography","password","expect","toText","i18NextInstance","Icons","Tooltip","useWeb3Others","right","objectFit","imageLoading","imageContainer","NFTImage","onSelect","cx","Others","collection","uiTokenId","formatTokenId","arrow","disableInteractive","PopperProps","disablePortal","popperOptions","strategy","fallback","MaskAvatar","CheckCircle","uniqBy","AddCollectiblesModal","ChainBoundary","ElementAnchor","ReloadStatus","ReversedAddress","SelectProviderModal","isSameNFT","EMPTY_LIST","LoadingBase","useNetworkContext","useNonFungibleAssets","useWeb3Connection","useWeb3Hub","Button","List","ListItem","Skeleton","useAvatarTrans","galleryItem","divider","overflowY","skeleton","changeButton","buttons","gap","list","gridGap","gridTemplateColumns","nftItem","userSelect","lineHeight","hideWallet","selectedToken","setSelectedToken","customCollectibles","setCustomCollectibles","collectibles","done","loadFinish","next","nextPage","loadError","Web3","Hub","handleAddCollectibles","results","openAndWaitForClose","tokenIds","allSettled","Promise","asset","all","getNonFungibleAsset","getNonFungibleToken","getNonFungibleTokenOwnership","tokens","status","loadingSkeletons","animation","variant","nft_list_title","nft_wallet_label","nft_wallet_change","expectedPluginID","expectedChainId","dashboard_no_collectible_found","actionLabel","retry","onRetry","callback","add_collectible","set_avatar_title","getEnhanceableSiteType","useGetNFTAvatar","getNFTAvatar","siteType","useSubscription","FALSE","TRUE","useWeb3State","useAllowTestnet","Settings","allowTestnet","process","env","NODE_ENV","React","useAsyncFn","ShadowRootTooltip","ActionButton","useCustomSnackbar","useNetworkDescriptor","useChainIdValid","RevokeChainContextProvider","ProviderType","WalletIcon","useSharedTrans","common","black","white","connectWallet","ChainBoundaryWithoutContext","expectedAccount","actualNetworkPluginID","switchText","forceShowingWrongNetworkButton","disableConnectWallet","predicate","actualPluginID","actualChainId","showSnackbar","providerType","actualProviderType","expectedOthers","expectedAllowTestnet","chainIdValid","expectedChainName","chainResolver","chainName","expectedNetworkDescriptor","expectedChainAllowed","isValidChainId","isPluginIDMatched","isMatched","onSwitchChain","WalletConnect","switchChain","plugin_wallet_switch_network_title","processing","plugin_wallet_unsupported_chain","autoHideDuration","plugin_wallet_switch_chain_failed","renderBox","tips","hiddenConnectButton","fullWidth","startIcon","Wallet","ActionButtonPromiseProps","plugin_wallet_wrong_network","plugin_wallet_connect_a_wallet","switchButton","mainIcon","plugin_wallet_change_wallet","plugin_wallet_connect_tips","plugin_wallet_not_support_network","plugin_wallet_switch_network","displayName","useRef","useIntersectionObserver","Stack","rest","elementRef","intersection","rootMargin","callbackRef","isIntersecting","pt","direction","isSameAddress","a","b","PLUGIN_SOLANA","EMPTY_ARRAY","useBlockedNonFungibleTokens","schemaType","Token","nfts","blockedNonFungibleTokens","getRegisteredWeb3Networks","useNetworkDescriptors","useInfiniteQuery","networks","availableChainIds","isMainnet","blockedTokens","blockedTokenIds","isLoading","fetchNextPage","hasNextPage","refetch","dataUpdatedAt","queryKey","queryFn","pageParam","res","getNonFungibleAssets","indicator","getNextPageParam","lastPage","nextIndicator","nextChainId","indexOf","pages","flatMap"],"sourceRoot":"","x_google_ignoreList":[4,50,51]}