{"version":3,"file":"bundled/chunk.6305.js","mappings":"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","sources":["webpack://mask-network/./packages/mask/popups/components/StyledRadio/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Wallet/ChangeOwner/index.tsx"],"sourcesContent":["import { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { Radio, radioClasses, type RadioProps } from '@mui/material'\nimport { forwardRef, memo } from 'react'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        '&:hover': {\n            backgroundColor: 'transparent',\n        },\n        color: theme.palette.maskColor.secondaryLine,\n        [`&.${radioClasses.checked} svg`]: {\n            filter: 'drop-shadow(0px 4px 10px rgba(28, 104, 243, 0.2))',\n        },\n        [`&.${radioClasses.disabled} svg`]: {\n            color: theme.palette.maskColor.secondaryLine,\n            '& circle': {\n                fill: `${theme.palette.maskColor.bg} !important`,\n            },\n        },\n    },\n}))\n\nexport const StyledRadio = memo(\n    forwardRef<{}, RadioProps>((props, ref) => {\n        const { classes } = useStyles()\n        return (\n            <Radio\n                {...props}\n                classes={{ root: classes.root }}\n                inputRef={ref}\n                checkedIcon={<Icons.RadioButtonChecked size={20} />}\n                icon={<Icons.RadioButtonUnChecked size={20} />}\n                disableRipple\n            />\n        )\n    }),\n)\n","import urlcat from 'urlcat'\nimport { useMemo, useState } from 'react'\nimport { useAsync, useAsyncFn } from 'react-use'\nimport { useNavigate } from 'react-router-dom'\nimport type { AbiItem } from 'web3-utils'\nimport { useContainer } from 'unstated-next'\nimport { Contract, ExplorerResolver, Web3 } from '@masknet/web3-providers'\nimport WalletABI from '@masknet/web3-contracts/abis/Wallet.json'\nimport type { Wallet } from '@masknet/web3-contracts/types/Wallet.js'\nimport { Box, Link, Popover, Typography, alpha } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { CopyButton } from '@masknet/shared'\nimport { ECKeyIdentifier, type NetworkPluginID } from '@masknet/shared-base'\nimport { ActionButton, makeStyles } from '@masknet/theme'\nimport { ChainContextProvider, useChainContext, useWallet, useWallets } from '@masknet/web3-hooks-base'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { formatEthereumAddress, ProviderType, type GasConfig } from '@masknet/web3-shared-evm'\nimport { useMaskSharedTrans } from '../../../../shared-ui/index.js'\nimport { StyledInput } from '../../../components/StyledInput/index.js'\nimport { StyledRadio } from '../../../components/StyledRadio/index.js'\nimport { PopupContext, useTitle } from '../../../hooks/index.js'\nimport { PersonaAvatar } from '../../../components/PersonaAvatar/index.js'\nimport { GasSettingMenu } from '../../../components/GasSettingMenu/index.js'\nimport { useQuery } from '@tanstack/react-query'\nimport Services from '#services'\nimport { BottomController } from '../../../components/BottomController/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    content: {\n        padding: theme.spacing(2),\n    },\n    title: {\n        fontSize: 14,\n        fontWeight: 700,\n        lineHeight: '16px',\n        color: theme.palette.maskColor.main,\n    },\n    list: {\n        padding: 0,\n        maxHeight: 212,\n        overflow: 'auto',\n        '::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    primaryItem: {\n        margin: 0,\n        cursor: 'default',\n        borderRadius: 8,\n        background:\n            theme.palette.mode === 'light'\n                ? 'linear-gradient(180deg, rgba(255, 255, 255, 0.00) 0%, rgba(255, 255, 255, 0.90) 100%), linear-gradient(90deg, rgba(98, 152, 234, 0.20) 1.03%, rgba(98, 152, 234, 0.20) 1.04%, rgba(98, 126, 234, 0.20) 100%)'\n                : 'linear-gradient(180deg, rgba(255, 255, 255, 0.10) 0%, rgba(255, 255, 255, 0.00) 100%)',\n    },\n    secondItem: {\n        margin: 0,\n        borderRadius: 8,\n        cursor: 'default',\n        background: theme.palette.maskColor.bottom,\n        border: `1px solid ${theme.palette.maskColor.line}`,\n    },\n    primaryItemText: {\n        fontSize: 14,\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n    },\n    primaryItemSecondText: {\n        display: 'flex',\n        fontSize: 12,\n        fontWeight: 400,\n        color: theme.palette.maskColor.second,\n        WebkitTextSizeAdjust: '100%',\n    },\n    walletAddress: {\n        marginRight: 4,\n        transform: 'scale(0.8333)',\n        transformOrigin: 'left',\n    },\n    walletInfo: {\n        marginLeft: 12,\n        height: 38,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n    },\n    item: {\n        display: 'flex',\n        padding: theme.spacing(1.5),\n        alignItems: 'center',\n        cursor: 'pointer',\n        justifyContent: 'space-between',\n        background: theme.palette.maskColor.bottom,\n    },\n    primaryItemBox: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 36,\n    },\n    paper: {\n        padding: theme.spacing(1.5),\n        borderRadius: 16,\n        '::-webkit-scrollbar': {\n            display: 'none',\n        },\n        background: theme.palette.maskColor.bottom,\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 4px 30px 0px rgba(255, 255, 255, 0.15)'\n                : '0px 4px 30px 0px rgba(0, 0, 0, 0.10)',\n    },\n    popoverTitle: {\n        fontSize: 16,\n        lineHeight: '20px',\n        fontWeight: 700,\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    identity: {\n        fontSIze: 14,\n        lineHeight: '18px',\n        color: '#767F8D',\n        display: 'flex',\n        alignItems: 'center',\n    },\n    button: {\n        fontWeight: 600,\n        padding: '9px 0',\n        fontSize: 14,\n        lineHeight: '20px',\n    },\n    disabledItem: {\n        opacity: 0.5,\n    },\n    linkIcon: {\n        color: theme.palette.maskColor.main,\n        cursor: 'pointer',\n        width: 16,\n        height: 16,\n        marginRight: 4,\n    },\n    avatar: {\n        borderRadius: '50%',\n        height: 24,\n        width: 24,\n        background: alpha(theme.palette.maskColor.primary, 0.2),\n    },\n    input: {\n        fontSize: 13,\n    },\n    label: {\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: 14,\n        color: theme.palette.maskColor.second,\n        fontWeight: 700,\n    },\n}))\n\nenum ManagerAccountType {\n    Wallet = 'Wallet',\n    Persona = 'Persona',\n}\n\ninterface ManagerAccount {\n    type: ManagerAccountType\n    name?: string\n    address?: string\n    identifier?: ECKeyIdentifier\n}\n\nconst FALLBACK_GAS = 50000\n\nexport default function ChangeOwner() {\n    const t = useMaskSharedTrans()\n    const { classes, cx } = useStyles()\n    const navigate = useNavigate()\n    const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n    const [manageAccount, setManageAccount] = useState<ManagerAccount>()\n\n    const { smartPayChainId } = useContainer(PopupContext)\n    const { data: personaManagers } = useQuery(\n        ['persona-managers'],\n        () => Services.Identity.queryOwnedPersonaInformation(true),\n        { networkMode: 'always' },\n    )\n    const chainContextValue = useMemo(() => ({ chainId: smartPayChainId }), [smartPayChainId])\n    const [paymentToken, setPaymentToken] = useState('')\n    const [gasConfig, setGasConfig] = useState<GasConfig>()\n    const wallet = useWallet()\n    const wallets = useWallets()\n\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    const walletManagers = useMemo(() => wallets.filter((x) => !x.owner), [wallets])\n\n    const walletManager = useMemo(\n        () => walletManagers.find((x) => !x.owner && isSameAddress(wallet?.owner, x.address)),\n        [walletManagers, wallet],\n    )\n    const personaManager = useMemo(\n        () => personaManagers?.find((x) => isSameAddress(wallet?.owner, x.address)),\n        [personaManagers, wallet],\n    )\n\n    const managerAddress = walletManager?.address ?? personaManager?.address\n\n    const { value: gas } = useAsync(async () => {\n        const contract = Contract.getWeb3Contract<Wallet>(wallet?.address, WalletABI as AbiItem[])\n        if (!manageAccount?.address || !wallet?.address) return\n        const tx = {\n            from: wallet.address,\n            to: wallet.address,\n            data: contract?.methods.changeOwner(manageAccount.address).encodeABI(),\n        }\n        const gas = await Web3.estimateTransaction?.(tx, FALLBACK_GAS)\n        return gas ? Number.parseInt(gas, 16).toString() : FALLBACK_GAS.toString()\n    }, [manageAccount?.address, wallet?.address])\n\n    const [{ loading: loadingHandleConfirm }, handleConfirm] = useAsyncFn(async () => {\n        if (!manageAccount?.address || !wallet) return\n\n        const hash = await Web3.changeOwner?.(manageAccount.address, {\n            chainId: smartPayChainId,\n            account: wallet?.address,\n            providerType: ProviderType.MaskWallet,\n            owner: wallet?.owner,\n            identifier: ECKeyIdentifier.from(wallet.identifier).unwrapOr(undefined),\n            gasOptionType: gasConfig?.gasOptionType,\n            overrides: gasConfig,\n        })\n\n        if (!hash) return\n\n        const receipt = await Web3.confirmTransaction(hash, {\n            signal: AbortSignal.timeout(5 * 60 * 1000),\n        })\n\n        if (!receipt.status) return\n\n        await Web3.updateWallet?.(\n            wallet.address,\n            {\n                owner: manageAccount.address,\n                identifier: manageAccount.identifier?.toText(),\n            },\n            { providerType: ProviderType.MaskWallet },\n        )\n    }, [manageAccount, smartPayChainId, wallet, gasConfig])\n    const disabled = !manageAccount?.address || !wallet || loadingHandleConfirm\n\n    useTitle(t.popups_wallet_change_owner())\n\n    return (\n        <>\n            <div className={classes.content}>\n                <Box className={cx(classes.item, classes.primaryItem)}>\n                    <Box className={classes.primaryItemBox}>\n                        <Icons.SmartPay size={24} />\n                        <div className={classes.walletInfo}>\n                            <Typography className={classes.primaryItemText}>{wallet?.name}</Typography>\n                            <Typography className={classes.primaryItemSecondText}>\n                                <span className={classes.walletAddress} style={{ width: 264 }}>\n                                    {wallet?.address}\n                                </span>\n                                {wallet?.address ? (\n                                    <>\n                                        <CopyButton size={16} className={classes.linkIcon} text={wallet.address} />\n                                        <Link\n                                            href={ExplorerResolver.addressLink(chainId, wallet.address)}\n                                            target=\"_blank\"\n                                            title={t.view_on_explorer()}\n                                            rel=\"noopener noreferrer\"\n                                            onClick={(event) => {\n                                                event.stopPropagation()\n                                            }}\n                                            className={classes.linkIcon}>\n                                            <Icons.LinkOut size={16} className={classes.linkIcon} />\n                                        </Link>\n                                    </>\n                                ) : null}\n                            </Typography>\n                        </div>\n                    </Box>\n                </Box>\n                <Typography className={classes.title} sx={{ mb: 2, mt: 2 }}>\n                    {t.popups_wallet_settings_current_management_account()}\n                </Typography>\n                <Box className={cx(classes.item, classes.secondItem)}>\n                    <Box className={classes.primaryItemBox}>\n                        {walletManager ? (\n                            <Icons.ETH size={24} />\n                        ) : personaManager ? (\n                            <div className={classes.avatar}>\n                                <PersonaAvatar avatar={personaManager.avatar} size={24} />\n                            </div>\n                        ) : null}\n                        <div className={classes.walletInfo}>\n                            <Typography className={classes.primaryItemText}>\n                                {walletManager?.name ?? personaManager?.nickname}\n                            </Typography>\n                            <Typography className={classes.primaryItemSecondText}>\n                                <span className={classes.walletAddress} style={{ width: 264 }}>\n                                    {managerAddress}\n                                </span>\n                                {managerAddress ? (\n                                    <>\n                                        <CopyButton size={16} className={classes.linkIcon} text={managerAddress} />\n                                        <Link\n                                            href={\n                                                walletManager\n                                                    ? ExplorerResolver.addressLink(chainId, managerAddress)\n                                                    : urlcat('https://web3.bio/', { s: managerAddress })\n                                            }\n                                            target=\"_blank\"\n                                            title={t.view_on_explorer()}\n                                            rel=\"noopener noreferrer\"\n                                            onClick={(event) => {\n                                                event.stopPropagation()\n                                            }}\n                                            className={classes.linkIcon}>\n                                            <Icons.LinkOut size={16} className={classes.linkIcon} />\n                                        </Link>\n                                    </>\n                                ) : null}\n                            </Typography>\n                        </div>\n                    </Box>\n                </Box>\n                <Typography className={classes.title} sx={{ mb: 2, mt: 2 }}>\n                    {t.popups_wallet_set_a_new_manage_account()}\n                </Typography>\n                <StyledInput\n                    placeholder={t.popups_wallet_settings_local_persona_or_wallet_only()}\n                    InputProps={{\n                        endAdornment: <Icons.ArrowDownRound size={18} sx={{ cursor: 'pointer' }} />,\n                        classes: { input: classes.input },\n                    }}\n                    value={manageAccount?.address}\n                    onMouseDown={(event) => {\n                        setAnchorEl(event.currentTarget)\n                    }}\n                    inputProps={{ style: { cursor: 'pointer' } }}\n                />\n                {manageAccount ? (\n                    <Box display=\"flex\" justifyContent=\"space-between\" mt={2}>\n                        <Typography className={classes.label}>{t.gas_fee()}</Typography>\n                        <ChainContextProvider value={chainContextValue}>\n                            <GasSettingMenu\n                                minimumGas={gas ?? FALLBACK_GAS.toString()}\n                                initConfig={gasConfig}\n                                paymentToken={paymentToken}\n                                defaultChainId={chainId}\n                                owner={wallet?.owner}\n                                onChange={setGasConfig}\n                                onPaymentTokenChange={(paymentToken) => setPaymentToken(paymentToken)}\n                                allowMaskAsGas\n                            />\n                        </ChainContextProvider>\n                    </Box>\n                ) : null}\n                <Popover\n                    open={!!anchorEl}\n                    anchorEl={anchorEl}\n                    onClose={() => {\n                        setAnchorEl(null)\n                    }}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    PaperProps={{\n                        style: { minWidth: `${anchorEl?.clientWidth ?? 568}px`, maxHeight: 212 },\n                        className: classes.paper,\n                    }}\n                    disableRestoreFocus>\n                    <Box className={classes.list}>\n                        {personaManagers?.map((persona) => (\n                            <Box\n                                key={persona.address}\n                                className={cx(\n                                    classes.item,\n                                    isSameAddress(persona.address, wallet?.owner) ? classes.disabledItem : undefined,\n                                )}\n                                onClick={() => {\n                                    if (isSameAddress(persona.address, wallet?.owner)) return\n                                    setManageAccount({\n                                        type: ManagerAccountType.Persona,\n                                        name: persona.nickname,\n                                        address: persona.address,\n                                        identifier: persona.identifier,\n                                    })\n                                    setAnchorEl(null)\n                                }}>\n                                <Box display=\"flex\" alignItems=\"center\" columnGap={0.5}>\n                                    <div className={classes.avatar}>\n                                        <PersonaAvatar avatar={persona.avatar} size={24} />\n                                    </div>\n\n                                    <Box ml=\"6px\">\n                                        <Typography className={classes.popoverTitle}>{persona.nickname}</Typography>\n                                        <Typography className={classes.identity}>\n                                            {persona.address ? formatEthereumAddress(persona.address, 4) : null}\n                                        </Typography>\n                                    </Box>\n                                </Box>\n                                <StyledRadio checked={isSameAddress(persona.address, manageAccount?.address)} />\n                            </Box>\n                        ))}\n                        {walletManagers?.map((wallet) => (\n                            <Box\n                                key={wallet.address}\n                                className={cx(\n                                    classes.item,\n                                    isSameAddress(wallet.address, wallet?.owner) ? classes.disabledItem : undefined,\n                                )}\n                                onClick={() => {\n                                    if (isSameAddress(wallet.address, wallet?.owner)) return\n                                    setManageAccount({\n                                        type: ManagerAccountType.Wallet,\n                                        name: wallet.name,\n                                        address: wallet.address,\n                                    })\n                                    setAnchorEl(null)\n                                }}>\n                                <Box display=\"flex\" alignItems=\"center\" columnGap={0.5}>\n                                    <Icons.MaskBlue size={24} />\n                                    <Box ml=\"6px\">\n                                        <Typography className={classes.popoverTitle}>{wallet.name}</Typography>\n                                        <Typography className={classes.identity}>\n                                            {formatEthereumAddress(wallet.address, 4)}\n                                        </Typography>\n                                    </Box>\n                                </Box>\n                                <StyledRadio checked={isSameAddress(manageAccount?.address, wallet.address)} />\n                            </Box>\n                        ))}\n                    </Box>\n                </Popover>\n            </div>\n            <BottomController>\n                <ActionButton\n                    fullWidth\n                    className={classes.button}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    disabled={disabled}\n                    onClick={async () => {\n                        navigate(-1)\n                        await Services.Helper.removePopupWindow()\n                    }}>\n                    {t.cancel()}\n                </ActionButton>\n                <ActionButton\n                    fullWidth\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={handleConfirm}\n                    loading={loadingHandleConfirm}\n                    disabled={disabled}>\n                    {t.wallet_status_button_change()}\n                </ActionButton>\n            </BottomController>\n        </>\n    )\n}\n"],"names":["Icons","makeStyles","Radio","radioClasses","forwardRef","memo","useStyles","theme","root","backgroundColor","color","palette","maskColor","secondaryLine","checked","filter","disabled","fill","bg","StyledRadio","props","ref","classes","inputRef","checkedIcon","RadioButtonChecked","size","icon","RadioButtonUnChecked","disableRipple","urlcat","useMemo","useState","useAsync","useAsyncFn","useNavigate","useContainer","Contract","ExplorerResolver","Web3","WalletABI","Box","Link","Popover","Typography","alpha","CopyButton","ECKeyIdentifier","ActionButton","ChainContextProvider","useChainContext","useWallet","useWallets","isSameAddress","formatEthereumAddress","ProviderType","useMaskSharedTrans","StyledInput","PopupContext","useTitle","PersonaAvatar","GasSettingMenu","useQuery","Services","BottomController","content","padding","spacing","title","fontSize","fontWeight","lineHeight","main","list","maxHeight","overflow","display","primaryItem","margin","cursor","borderRadius","background","mode","secondItem","bottom","border","line","primaryItemText","primaryItemSecondText","second","WebkitTextSizeAdjust","walletAddress","marginRight","transform","transformOrigin","walletInfo","marginLeft","height","flexDirection","justifyContent","item","alignItems","primaryItemBox","paper","boxShadow","popoverTitle","identity","fontSIze","button","disabledItem","opacity","linkIcon","width","avatar","primary","input","label","ManagerAccountType","Wallet","Persona","FALLBACK_GAS","ChangeOwner","t","cx","navigate","anchorEl","setAnchorEl","manageAccount","setManageAccount","smartPayChainId","data","personaManagers","Identity","queryOwnedPersonaInformation","networkMode","chainContextValue","chainId","paymentToken","setPaymentToken","gasConfig","setGasConfig","wallet","wallets","walletManagers","x","owner","walletManager","find","address","personaManager","managerAddress","value","gas","contract","getWeb3Contract","tx","from","to","methods","changeOwner","encodeABI","estimateTransaction","Number","parseInt","toString","loading","loadingHandleConfirm","handleConfirm","hash","account","providerType","MaskWallet","identifier","unwrapOr","undefined","gasOptionType","overrides","receipt","confirmTransaction","signal","AbortSignal","timeout","status","updateWallet","toText","popups_wallet_change_owner","div","className","SmartPay","name","span","style","text","href","addressLink","target","view_on_explorer","rel","onClick","event","stopPropagation","LinkOut","sx","mb","mt","popups_wallet_settings_current_management_account","ETH","nickname","s","popups_wallet_set_a_new_manage_account","placeholder","popups_wallet_settings_local_persona_or_wallet_only","InputProps","endAdornment","ArrowDownRound","onMouseDown","currentTarget","inputProps","gas_fee","minimumGas","initConfig","defaultChainId","onChange","onPaymentTokenChange","allowMaskAsGas","open","onClose","anchorOrigin","vertical","horizontal","PaperProps","minWidth","clientWidth","disableRestoreFocus","map","persona","type","columnGap","ml","MaskBlue","fullWidth","variant","Helper","removePopupWindow","cancel","wallet_status_button_change"],"sourceRoot":"","x_google_ignoreList":[]}