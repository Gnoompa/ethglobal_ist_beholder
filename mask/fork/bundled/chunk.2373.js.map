{"version":3,"file":"bundled/chunk.2373.js","mappings":"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","sources":["webpack://mask-network/./packages/plugin-infra/src/dom/useTrans.tsx","webpack://mask-network/./packages/plugins/CrossChainBridge/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/CrossChainBridge/src/SiteAdaptor/components/BridgeStack.tsx","webpack://mask-network/./packages/plugins/CrossChainBridge/src/SiteAdaptor/CrossChainBridgeDialog.tsx","webpack://mask-network/./packages/plugins/CrossChainBridge/src/SiteAdaptor/index.tsx","webpack://mask-network/./packages/shared-base-ui/src/bom/open-window.ts"],"sourcesContent":["import { useTranslation } from 'react-i18next'\nimport type { I18NFieldOrReactNode, I18NStringField } from '../types.js'\n\nexport interface PluginTransFieldRenderProps {\n    field: I18NFieldOrReactNode\n    pluginID: string\n}\nexport function PluginTransFieldRender({ pluginID, field }: PluginTransFieldRenderProps) {\n    const [t] = useTranslation()\n    if (!field) return null\n    if (typeof field === 'object' && 'fallback' in field) {\n        if (field.i18nKey) {\n            const translate = t(field.i18nKey, { ns: pluginID, nsSeparator: '%%%', defaultValue: field.fallback })\n            return <>{translate}</>\n        }\n        return <>{field.fallback}</>\n    }\n    return <>{field}</>\n}\nexport function usePluginTransField() {\n    const [t] = useTranslation()\n    return function (pluginID: string, field: I18NStringField) {\n        if (!field.i18nKey) return field.fallback\n        if (!field.i18nKey.startsWith('__')) {\n            /**\n             * This field is used in the definition of a plugin in form of\n             * { fallback: \"Text\", i18nKey: \"name\" }\n             *\n             * Which is highly not likely to be analyzed by the type system.\n             * Enforce those key to starts with __, we can exclude those keys\n             * from the unused key result to keep the functionality of the analyzer.\n             */\n            console.warn(\n                `[@masknet/plugin-infra] Plugin ${pluginID} uses i18n key ${field.i18nKey}. Please change it to __${field.i18nKey}.`,\n            )\n            return field.fallback\n        }\n        return t(field.i18nKey, { ns: pluginID, nsSeparator: '%%%', defaultValue: field.fallback })\n    }\n}\n","// @ts-nocheck\n/* eslint-disable */\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useCrossChainBridgeTrans(): {\n    /**\n      * `Cross-chain`\n      */\n    __plugin_name(): string;\n    /**\n      * `Official`\n      */\n    official(): string;\n    /**\n      * `Powered by Celer Network. Support $MASK!`\n      */\n    cbridge_intro(): string;\n} { const { t } = useTranslation(\"io.mask.cross-chain-bridge\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\n","import { Stack, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { openWindow } from '@masknet/shared-base-ui'\nimport { getCrossChainBridge } from '../../constants.js'\nimport { useCrossChainBridgeTrans } from '../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    bridgeItem: {\n        display: 'flex',\n        padding: '12px',\n        borderRadius: '8px',\n        ':hover': {\n            backgroundColor: theme.palette.maskColor.bg,\n            cursor: 'pointer',\n        },\n    },\n    bridgeInfo: {\n        marginLeft: '8px',\n    },\n    bridgeName: {\n        fontSize: '24px',\n        fontWeight: 600,\n        display: 'flex',\n    },\n    bridgeIntro: {\n        fontSize: '12px',\n        fontWeight: 400,\n        color: theme.palette.grey[700],\n    },\n    officialTag: {\n        width: '39px',\n        height: '15px',\n        fontSize: '12px',\n        fontWeight: 700,\n        alignSelf: 'center',\n        borderRadius: '8px',\n        backgroundColor: 'rgba(28, 104, 243, 0.1)',\n        color: '#1c68f3',\n        padding: '4px 12px 6px 8px',\n        marginLeft: '4px',\n    },\n}))\n\nexport function BridgeStack() {\n    const t = useCrossChainBridgeTrans()\n    const { classes } = useStyles()\n\n    return (\n        <Stack height=\"100%\" spacing={2}>\n            {getCrossChainBridge(t).map((bridge) => (\n                <div className={classes.bridgeItem} key={bridge.ID} onClick={() => openWindow(bridge.link)}>\n                    {bridge.icon}\n                    <div className={classes.bridgeInfo}>\n                        <Typography className={classes.bridgeName}>\n                            {bridge.name}\n                            {bridge.isOfficial ? (\n                                <Typography className={classes.officialTag} component=\"span\">\n                                    Official\n                                </Typography>\n                            ) : null}\n                        </Typography>\n                        {bridge.intro ? <Typography className={classes.bridgeIntro}>{bridge.intro}</Typography> : null}\n                    </div>\n                </div>\n            ))}\n        </Stack>\n    )\n}\n","import { DialogContent } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { useCrossChainBridgeTrans } from '../locales/index.js'\nimport { InjectedDialog } from '@masknet/shared'\nimport { BridgeStack } from './components/BridgeStack.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    content: {\n        height: 532,\n        padding: theme.spacing(2),\n    },\n}))\n\ninterface CrossChainBridgeDialogProps extends withClasses<'root'> {\n    open: boolean\n    onClose(): void\n}\n\nexport function CrossChainBridgeDialog(props: CrossChainBridgeDialogProps) {\n    const t = useCrossChainBridgeTrans()\n    const { classes } = useStyles(undefined, { props })\n    const { open, onClose } = props\n\n    return (\n        <InjectedDialog title={t.__plugin_name()} open={open} onClose={onClose}>\n            <DialogContent className={classes.content}>\n                <BridgeStack />\n            </DialogContent>\n        </InjectedDialog>\n    )\n}\n","import type { Plugin } from '@masknet/plugin-infra'\nimport { ApplicationEntry } from '@masknet/shared'\nimport { Icons } from '@masknet/icons'\nimport { PluginTransFieldRender } from '@masknet/plugin-infra/content-script'\nimport { base } from '../base.js'\nimport { useState } from 'react'\nimport { PluginID } from '@masknet/shared-base'\nimport { Trans } from 'react-i18next'\nimport { CrossChainBridgeDialog } from './CrossChainBridgeDialog.js'\n\nconst site: Plugin.SiteAdaptor.Definition = {\n    ...base,\n    ApplicationEntries: [\n        (() => {\n            const icon = <Icons.CrossBridge size={36} />\n            const name = <Trans ns={PluginID.CrossChainBridge} i18nKey=\"__plugin_name\" />\n            const iconFilterColor = 'rgba(183, 212, 255, 0.3)'\n            return {\n                ApplicationEntryID: base.ID,\n                RenderEntryComponent(EntryComponentProps) {\n                    const [open, setOpen] = useState(false)\n                    const clickHandler = () => setOpen(true)\n                    return (\n                        <>\n                            <ApplicationEntry\n                                title={<PluginTransFieldRender field={name} pluginID={base.ID} />}\n                                {...EntryComponentProps}\n                                iconFilterColor={iconFilterColor}\n                                icon={icon}\n                                onClick={\n                                    EntryComponentProps.onClick\n                                        ? () => EntryComponentProps.onClick?.(clickHandler)\n                                        : clickHandler\n                                }\n                            />\n                            <CrossChainBridgeDialog open={open} onClose={() => setOpen(false)} />\n                        </>\n                    )\n                },\n                appBoardSortingDefaultPriority: 9,\n                name,\n                icon,\n                iconFilterColor,\n            }\n        })(),\n    ],\n}\n\nexport default site\n","type WindowTarget = LiteralUnion<'_top' | '_self' | '_parent' | '_blank'>\n\ninterface BehaviorFlags {\n    popup?: boolean\n    toolbar?: boolean\n    status?: boolean\n    resizable?: boolean\n    scrollbars?: boolean\n}\n\ninterface WindowFeatureFlags {\n    // Behavior\n    opener?: boolean\n    referrer?: boolean\n    behaviors?: BehaviorFlags\n    // Dimension\n    width?: number\n    height?: number\n    screenX?: number\n    screenY?: number\n}\n\nexport function openWindow(\n    url: string | URL | undefined | null,\n    target: WindowTarget = '_blank',\n    features: WindowFeatureFlags = {},\n): Window | null {\n    if (!url) return null\n    const flags = []\n    for (const [name, value] of Object.entries(features.behaviors ?? {})) {\n        if (value) flags.push(`${name}=1`)\n    }\n    if (!features.opener) flags.push('noopener')\n    if (!features.referrer) flags.push('noreferrer')\n    if (Number.isFinite(features.width)) flags.push(`width=${features.width}`)\n    if (Number.isFinite(features.height)) flags.push(`height=${features.height}`)\n    if (Number.isFinite(features.screenX)) flags.push(`screenX=${features.screenX}`)\n    if (Number.isFinite(features.screenY)) flags.push(`screenY=${features.screenY}`)\n    return window.open(url, target, flags.join(' '))\n}\n"],"names":["useTranslation","PluginTransFieldRender","pluginID","field","t","i18nKey","translate","ns","nsSeparator","defaultValue","fallback","usePluginTransField","startsWith","console","warn","useMemo","createProxy","initValue","define","key","value","Object","defineProperty","container","configurable","__proto__","Proxy","get","_","undefined","getPrototypeOf","setPrototypeOf","v","getOwnPropertyDescriptor","useCrossChainBridgeTrans","bind","Stack","Typography","makeStyles","openWindow","getCrossChainBridge","useStyles","theme","bridgeItem","display","padding","borderRadius","backgroundColor","palette","maskColor","bg","cursor","bridgeInfo","marginLeft","bridgeName","fontSize","fontWeight","bridgeIntro","color","grey","officialTag","width","height","alignSelf","BridgeStack","classes","spacing","map","bridge","div","className","onClick","link","icon","name","isOfficial","component","intro","ID","DialogContent","InjectedDialog","content","CrossChainBridgeDialog","props","open","onClose","title","__plugin_name","ApplicationEntry","Icons","base","useState","PluginID","Trans","site","ApplicationEntries","CrossBridge","size","CrossChainBridge","iconFilterColor","ApplicationEntryID","RenderEntryComponent","EntryComponentProps","setOpen","clickHandler","appBoardSortingDefaultPriority","url","target","features","flags","entries","behaviors","push","opener","referrer","Number","isFinite","screenX","screenY","window","join"],"sourceRoot":"","x_google_ignoreList":[]}