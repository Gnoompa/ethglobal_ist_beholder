{"version":3,"file":"bundled/chunk.5511.js","mappings":"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","sources":["webpack://mask-network/./packages/mask/popups/hooks/useTokenParams.ts","webpack://mask-network/./packages/shared/src/UI/modals/index.tsx","webpack://mask-network/./packages/mask/popups/components/NetworkSelector/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Swap/SwapBox/index.tsx","webpack://mask-network/./packages/mask/popups/pages/Swap/index.tsx","webpack://mask-network/./packages/plugin-infra/src/manager/site-adaptor.ts","webpack://mask-network/./packages/plugin-infra/src/utils/rpc.ts","webpack://mask-network/./packages/shared-base-ui/src/utils/shareToTwitterAsPopup.ts","webpack://mask-network/./packages/shared/src/hooks/useMenu.tsx","webpack://mask-network/./packages/theme/src/Components/WrappedComponents/ShadowRootMenu.ts"],"sourcesContent":["import { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainId } from '@masknet/web3-hooks-base'\nimport { getNativeTokenAddress, type ChainId } from '@masknet/web3-shared-evm'\nimport { useSearchParams } from 'react-router-dom'\n\nexport function useTokenParams() {\n    const [params, setParams] = useSearchParams()\n    const defaultChainId = useChainId(NetworkPluginID.PLUGIN_EVM)\n    const rawChainId = params.get('chainId')\n    const chainId: ChainId = rawChainId ? Number.parseInt(rawChainId, 10) : defaultChainId\n    const rawAddress = params.get('address')\n    const address = rawAddress || getNativeTokenAddress(chainId)\n\n    return { chainId, address, rawChainId, rawAddress, params, setParams }\n}\n\n/**\n * No fallback for non-fungible token\n */\nexport function useNonFungibleTokenParams() {\n    const [params, setParams] = useSearchParams()\n    const defaultChainId = useChainId(NetworkPluginID.PLUGIN_EVM)\n    const rawChainId = params.get('nft:chainId')\n    const chainId: ChainId = rawChainId ? Number.parseInt(rawChainId, 10) : defaultChainId\n    const address = params.get('nft:address')\n    const tokenId = params.get('nft:tokenId')\n\n    return { chainId, address, tokenId, params, setParams }\n}\n","import { memo } from 'react'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { RootWeb3ContextProvider } from '@masknet/web3-hooks-base'\nimport { WalletStatusModal } from './WalletStatusModal/index.js'\nimport { SelectProviderModal } from './SelectProviderModal/index.js'\nimport { WalletConnectQRCodeModal } from './WalletConnectQRCodeModal/index.js'\nimport { WalletRiskWarningModal } from './WalletRiskWarningModal/index.js'\nimport { ConnectWalletModal } from './ConnectWalletModal/index.js'\nimport { LeavePageConfirmModal } from './LeavePageConfirmModal/index.js'\nimport { ApplicationBoardModal, ApplicationBoardSettingsModal } from './ApplicationBoardModal/index.js'\nimport { GasSettingModal } from './GasSettingModal/index.js'\nimport { TransactionSnackbarModal } from './TransactionSnackbar/index.js'\nimport { ConfirmModal } from './ConfirmModal/index.js'\nimport { TransactionConfirmModal } from './TokenTransactionConfirmModal/index.js'\nimport { SelectNonFungibleContractModal } from './SelectNonFungibleContractModal/index.js'\nimport { SelectFungibleTokenModal } from './SelectFungibleTokenModal/index.js'\nimport { SelectGasSettingsModal } from './SelectAdvancedSettingsDialog/index.js'\nimport { AddCollectiblesModal } from './AddCollectiblesModal/index.js'\nimport { PersonaSelectPanelModal } from './PersonaSelectPanelModal/index.js'\nimport { ShareSelectNetworkModal } from './ShareSelectNetwork/index.js'\n\nimport { noop } from 'lodash-es'\nimport * as modals from './modals.js'\nimport { ConfirmDialogComponent } from './ConfirmDialog/index.js'\nexport * from './modals.js'\n\nexport interface ModalProps {\n    createWallet(): void\n}\nexport const Modals = memo(function Modals(props: ModalProps) {\n    return (\n        <RootWeb3ContextProvider>\n            <ConnectWalletModal ref={modals.ConnectWalletModal.register} />\n            <WalletConnectQRCodeModal ref={modals.WalletConnectQRCodeModal.register} />\n            <ConfirmDialogComponent ref={modals.ConfirmDialog.register} />\n            <SelectProviderModal createWallet={props.createWallet} ref={modals.SelectProviderModal.register} />\n            <WalletStatusModal ref={modals.WalletStatusModal.register} />\n            <WalletRiskWarningModal ref={modals.WalletRiskWarningModal.register} />\n            <LeavePageConfirmModal ref={modals.LeavePageConfirmModal.register} />\n            <ApplicationBoardModal ref={modals.ApplicationBoardModal.register} />\n            <GasSettingModal ref={modals.GasSettingModal.register} />\n            <TransactionSnackbarModal pluginID={NetworkPluginID.PLUGIN_EVM} ref={modals.TransactionSnackbar.register} />\n            <TransactionConfirmModal ref={modals.TransactionConfirmModal.register} />\n            <ConfirmModal ref={modals.ConfirmModal.register} />\n            <SelectNonFungibleContractModal ref={modals.SelectNonFungibleContractModal.register} />\n            <SelectFungibleTokenModal ref={modals.SelectFungibleTokenModal.register} />\n            <SelectGasSettingsModal ref={modals.SelectGasSettingsModal.register} />\n            <AddCollectiblesModal ref={modals.AddCollectiblesModal.register} />\n            <PersonaSelectPanelModal ref={modals.PersonaSelectPanelModal.register} />\n            <ApplicationBoardSettingsModal ref={modals.ApplicationBoardSettingsModal.register} />\n            <ShareSelectNetworkModal ref={modals.ShareSelectNetworkModal.register} />\n        </RootWeb3ContextProvider>\n    )\n})\n\nexport const SwapPageModals = memo(function SwapPageModals() {\n    return (\n        <>\n            <ConnectWalletModal ref={modals.ConnectWalletModal.register} />\n            <SelectProviderModal createWallet={noop} ref={modals.SelectProviderModal.register} />\n            <WalletRiskWarningModal ref={modals.WalletRiskWarningModal.register} />\n            <SelectFungibleTokenModal ref={modals.SelectFungibleTokenModal.register} />\n            <SelectGasSettingsModal ref={modals.SelectGasSettingsModal.register} />\n        </>\n    )\n})\n\n// Common modals\nexport { ConfirmDialogComponent } from './ConfirmDialog/index.js'\nexport { ConfirmDialog } from './modals.js'\n","import { memo, useCallback, useMemo } from 'react'\nimport { Box, MenuItem, Typography } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport type { ChainId, NetworkType, SchemaType } from '@masknet/web3-shared-evm'\nimport { useChainContext, useNetworks, useWeb3State } from '@masknet/web3-hooks-base'\nimport { ImageIcon, NetworkIcon, useMenuConfig } from '@masknet/shared'\nimport { Icons } from '@masknet/icons'\nimport type { ReasonableNetwork } from '@masknet/web3-shared-base'\nimport { NetworkPluginID, PluginID } from '@masknet/shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { useActivatedPlugin } from '@masknet/plugin-infra/dom'\nimport { first } from 'lodash-es'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        minWidth: 140,\n        backgroundColor: theme.palette.primary.main,\n        padding: '4px 12px 4px 4px',\n        minHeight: 28,\n        borderRadius: 18,\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    title: {\n        color: '#ffffff',\n        fontSize: 12,\n        lineHeight: '16px',\n        marginLeft: 4,\n    },\n    menu: {\n        maxHeight: 466,\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n}))\n\nexport const NetworkSelector = memo(() => {\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const networks = useNetworks(NetworkPluginID.PLUGIN_EVM)\n    const { Network } = useWeb3State(NetworkPluginID.PLUGIN_EVM)\n\n    const traderDefinition = useActivatedPlugin(PluginID.Trader, 'any')\n    const chainIdList = traderDefinition?.enableRequirement.web3?.[NetworkPluginID.PLUGIN_EVM]?.supportedChainIds ?? []\n\n    const actualNetworks = useMemo(\n        () => networks.filter((x) => chainIdList.includes(x.chainId)),\n        [networks, chainIdList],\n    )\n\n    const onChainChange = useCallback(\n        async (network: ReasonableNetwork<ChainId, SchemaType, NetworkType>) => {\n            await Network?.switchNetwork(network.ID)\n            await Web3.switchChain?.(network.chainId)\n        },\n        [Network, Web3],\n    )\n\n    return (\n        <NetworkSelectorUI\n            currentNetwork={actualNetworks.find((x) => x.chainId === chainId) ?? first(actualNetworks)}\n            onChainChange={onChainChange}\n            networks={actualNetworks}\n        />\n    )\n})\n\ninterface NetworkSelectorUIProps {\n    currentNetwork?: ReasonableNetwork<ChainId, SchemaType, NetworkType>\n    networks: Array<ReasonableNetwork<ChainId, SchemaType, NetworkType>>\n    onChainChange: (network: ReasonableNetwork<ChainId, SchemaType, NetworkType>) => void\n}\n\nconst NetworkSelectorUI = memo<NetworkSelectorUIProps>(({ currentNetwork, onChainChange, networks }) => {\n    const { classes } = useStyles()\n\n    const [menu, openMenu] = useMenuConfig(\n        networks.map((network) => {\n            const chainId = network.chainId\n\n            return (\n                <MenuItem\n                    key={chainId}\n                    onClick={() => onChainChange(network)}\n                    selected={chainId === currentNetwork?.chainId}>\n                    {network.iconUrl ? (\n                        <ImageIcon size={20} icon={network.iconUrl} name={network.name} />\n                    ) : (\n                        <NetworkIcon\n                            pluginID={NetworkPluginID.PLUGIN_EVM}\n                            chainId={network.chainId}\n                            size={20}\n                            network={network}\n                        />\n                    )}\n\n                    <Typography sx={{ marginLeft: 1 }}>{network.name}</Typography>\n                </MenuItem>\n            )\n        }) ?? [],\n        {\n            classes: { paper: classes.menu },\n        },\n    )\n\n    if (!currentNetwork) return\n    return (\n        <>\n            <Box className={classes.root} onClick={openMenu}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    {currentNetwork.iconUrl ? (\n                        <ImageIcon size={20} icon={currentNetwork.iconUrl} name={currentNetwork.name} />\n                    ) : (\n                        <NetworkIcon\n                            pluginID={NetworkPluginID.PLUGIN_EVM}\n                            chainId={currentNetwork.chainId}\n                            size={20}\n                            network={currentNetwork}\n                        />\n                    )}\n                    <Typography className={classes.title}>{currentNetwork?.name}</Typography>\n                </div>\n                <Icons.ArrowDownRound size={16} color=\"#fff\" />\n            </Box>\n            {menu}\n        </>\n    )\n})\n","import { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext, useFungibleToken } from '@masknet/web3-hooks-base'\nimport { createERC20Token } from '@masknet/web3-shared-evm'\nimport { Trader } from '@masknet/plugin-trader'\nimport { shareToTwitterAsPopup } from '@masknet/shared-base-ui'\n\nexport function SwapBox() {\n    const location = useLocation()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const params = new URLSearchParams(location.search)\n    const address = params.get('contract_address')\n    const name = params.get('name')\n    const symbol = params.get('symbol')\n    const decimals = params.get('decimals')\n\n    const fallbackToken = useMemo(() => {\n        return createERC20Token(\n            chainId,\n            address ?? '',\n            name ? name : undefined,\n            symbol ? symbol : undefined,\n            Number.parseInt(decimals ?? '0', 10),\n        )\n    }, [chainId, address, name, symbol, decimals])\n    const { data: coin } = useFungibleToken(NetworkPluginID.PLUGIN_EVM, address ?? '', fallbackToken, { chainId })\n\n    return <Trader share={shareToTwitterAsPopup} defaultInputCoin={coin} chainId={chainId} />\n}\n","import { AllProviderTradeContext } from '@masknet/plugin-trader'\nimport { Appearance } from '@masknet/public-api'\nimport { SharedContextProvider, SwapPageModals } from '@masknet/shared'\nimport { applyMaskColorVars, makeStyles } from '@masknet/theme'\nimport { ChainContextProvider, DefaultWeb3ContextProvider } from '@masknet/web3-hooks-base'\nimport { Typography } from '@mui/material'\nimport { useMemo } from 'react'\nimport { useMaskSharedTrans } from '../../../shared-ui/index.js'\nimport { NetworkSelector } from '../../components/NetworkSelector/index.js'\nimport { useTokenParams } from '../../hooks/index.js'\nimport { SwapBox } from './SwapBox/index.js'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        page: {\n            minHeight: '100vh',\n            maxWidth: '100vw',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: theme.palette.maskColor.bg,\n        },\n        container: {\n            width: 800,\n            backgroundColor: theme.palette.background.paper,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            minHeight: 720,\n            maxHeight: '90vh',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderRadius: 16,\n            padding: '32px 0',\n        },\n        header: {\n            width: 598,\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: '22px 16px',\n        },\n        title: {\n            fontSize: 32,\n            fontWeight: 'bold',\n            color: theme.palette.maskColor.second,\n        },\n        main: {\n            width: 598,\n            overflowY: 'scroll',\n            '&::-webkit-scrollbar': {\n                display: 'none',\n            },\n        },\n    }\n})\n\nexport default function SwapPage() {\n    const t = useMaskSharedTrans()\n    const { classes } = useStyles()\n    const { chainId } = useTokenParams()\n    applyMaskColorVars(document.body, Appearance.light)\n    const chainContextValue = useMemo(() => ({ chainId }), [chainId])\n\n    return (\n        <SharedContextProvider>\n            <ChainContextProvider value={chainContextValue}>\n                <div className={classes.page}>\n                    <div className={classes.container}>\n                        <header className={classes.header}>\n                            <Typography variant=\"h1\" className={classes.title}>\n                                {t.plugin_trader_swap()}\n                            </Typography>\n                            <NetworkSelector />\n                        </header>\n                        <main className={classes.main}>\n                            <DefaultWeb3ContextProvider>\n                                <AllProviderTradeContext.Provider>\n                                    <SwapBox />\n                                </AllProviderTradeContext.Provider>\n                            </DefaultWeb3ContextProvider>\n                        </main>\n                    </div>\n                </div>\n            </ChainContextProvider>\n            <SwapPageModals />\n        </SharedContextProvider>\n    )\n}\n","import { useMemo } from 'react'\nimport { isEqual } from 'lodash-es'\nimport { unreachable } from '@masknet/kit'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { type EnhanceableSite, ValueRefWithReady } from '@masknet/shared-base'\nimport { createManager } from './manage.js'\nimport { getPluginDefine } from './store.js'\nimport type { Plugin } from '../types.js'\n\nconst { events, activated, startDaemon, minimalMode } = createManager(\n    (def) => def.SiteAdaptor,\n    createManager.NoManagedContext,\n)\nconst activatedSub = new ValueRefWithReady<Plugin.SiteAdaptor.Definition[]>([], isEqual)\nevents.on('activateChanged', () => (activatedSub.value = [...activated.plugins]))\n\nconst minimalModeSub = new ValueRefWithReady<string[]>([], isEqual)\nevents.on('minimalModeChanged', () => (minimalModeSub.value = [...minimalMode]))\n\nexport function useActivatedPluginsSiteAdaptor(minimalModeEqualsTo: 'any' | boolean) {\n    const minimalMode = useValueRef(minimalModeSub)\n    const result = useValueRef(activatedSub)\n    return useMemo(() => {\n        if (minimalModeEqualsTo === 'any') return result\n        else if (minimalModeEqualsTo === true) return result.filter((x) => minimalMode.includes(x.ID))\n        else if (minimalModeEqualsTo === false) return result.filter((x) => !minimalMode.includes(x.ID))\n        unreachable(minimalModeEqualsTo)\n    }, [result, minimalMode, minimalModeEqualsTo])\n}\nuseActivatedPluginsSiteAdaptor.visibility = {\n    useMinimalMode: useActivatedPluginsSiteAdaptor.bind(null, true),\n    useNotMinimalMode: useActivatedPluginsSiteAdaptor.bind(null, false),\n    useAnyMode: useActivatedPluginsSiteAdaptor.bind(null, 'any'),\n}\n\nexport function useIsMinimalMode(pluginID: string) {\n    return useValueRef(minimalModeSub).includes(pluginID)\n}\n\n/**\n *\n * @param pluginID Get the plugin ID\n * @param visibility Should invisible plugin included?\n * @returns\n */\nexport function useActivatedPluginSiteAdaptor(pluginID: string, minimalModeEqualsTo: 'any' | boolean) {\n    const plugins = useActivatedPluginsSiteAdaptor(minimalModeEqualsTo)\n    const minimalMode = useValueRef(minimalModeSub)\n\n    return useMemo(() => {\n        const result = plugins.find((x) => x.ID === pluginID)\n        if (!result) return result\n        if (minimalModeEqualsTo === 'any') return result\n        else if (minimalModeEqualsTo === true) {\n            if (minimalMode.includes(result.ID)) return result\n            return undefined\n        } else if (minimalModeEqualsTo === false) {\n            if (minimalMode.includes(result.ID)) return undefined\n            return result\n        }\n        unreachable(minimalModeEqualsTo)\n    }, [pluginID, plugins, minimalMode, minimalModeEqualsTo])\n}\n\nexport function startPluginSiteAdaptor(\n    currentNetwork: EnhanceableSite,\n    host: Plugin.__Host.Host<Plugin.SiteAdaptor.Definition, Plugin.SiteAdaptor.SiteAdaptorContext>,\n) {\n    startDaemon(host, (id) => {\n        const def = getPluginDefine(id)\n        if (!def) return false\n\n        const status = def.enableRequirement.supports.sites[currentNetwork]\n        if (def.enableRequirement.supports.type === 'opt-in' && status !== true) return false\n        if (def.enableRequirement.supports.type === 'opt-out' && status === true) return false\n        return true\n    })\n}\n","import { Environment, isEnvironment } from '@dimensiondev/holoflows-kit'\nimport { AsyncCall, type AsyncCallLogLevel, AsyncGeneratorCall } from 'async-call-rpc/full'\nimport { serializer, getOrUpdateLocalImplementationHMR } from '@masknet/shared-base'\nimport { getPluginMessage } from '@masknet/plugin-infra'\nimport { DOMAIN_RPC } from './message.js'\n\nconst log: AsyncCallLogLevel = {\n    type: 'pretty',\n    requestReplay: process.env.NODE_ENV === 'development',\n    sendLocalStack: process.env.NODE_ENV === 'development',\n}\nlet isBackground = () => isEnvironment(Environment.ManifestBackground)\nexport function __workaround__replaceIsBackground__(f: () => boolean) {\n    isBackground = f\n}\n\nfunction getPluginRPCInternal(\n    cache: Map<string, object>,\n    pluginID: string,\n    starter: typeof AsyncCall | typeof AsyncGeneratorCall,\n    entry: keyof RPCMessage,\n) {\n    if (cache.has(pluginID)) return cache.get(pluginID)\n    const message = getPluginMessage<RPCMessage>(pluginID, DOMAIN_RPC)\n    const rpc = starter(Object.create(null), {\n        key: `@plugin/${pluginID}`,\n        channel: {\n            on: message[entry].on,\n            send: message[entry].sendToBackgroundPage,\n        },\n        serializer,\n        log,\n        thenable: false,\n    })\n    cache.set(pluginID, rpc)\n    return rpc\n}\nconst cache = new Map<string, object>()\nconst cacheGenerator = new Map<string, object>()\nexport function getPluginRPC<T>(pluginID: string): T {\n    if (isBackground()) startPluginRPC(pluginID, new AbortController().signal, Object.create(null))\n    return getPluginRPCInternal(cache, pluginID, AsyncCall, '_') as T\n}\nexport function getPluginRPCGenerator<T>(pluginID: string): T {\n    if (isBackground()) startPluginGeneratorRPC(pluginID, new AbortController().signal, Object.create(null))\n    return getPluginRPCInternal(cacheGenerator, pluginID, AsyncGeneratorCall, '$') as T\n}\n\nfunction startPluginRPCInternal(\n    cache: Map<string, object>,\n    pluginID: string,\n    signal: AbortSignal,\n    impl: object,\n    starter: typeof AsyncCall | typeof AsyncGeneratorCall,\n    entry: keyof RPCMessage,\n) {\n    if (!isBackground()) throw new Error('Cannot start RPC in the UI.')\n    const message = getPluginMessage<RPCMessage>(pluginID, DOMAIN_RPC)\n    const delegate = getOrUpdateLocalImplementationHMR(() => impl, message[entry])\n    if (cache.has(pluginID)) return\n    cache.set(pluginID, delegate)\n    starter(delegate, {\n        key: pluginID,\n        channel: {\n            on: message[entry].on,\n            send: message[entry].sendByBroadcast,\n        },\n        serializer,\n        log,\n        thenable: false,\n    })\n}\n/** @internal */\nexport function startPluginRPC(pluginID: string, signal: AbortSignal, impl: object) {\n    startPluginRPCInternal(cache, pluginID, signal, impl, AsyncCall, '_')\n}\n/** @internal */\nexport function startPluginGeneratorRPC(pluginID: string, signal: AbortSignal, impl: object) {\n    startPluginRPCInternal(cacheGenerator, pluginID, signal, impl, AsyncGeneratorCall, '$')\n}\n\ninterface RPCMessage {\n    // RPC\n    _: unknown\n    // Generator\n    $: unknown\n}\n","import { openWindow } from '../bom/open-window.js'\nimport urlcat from 'urlcat'\n\nexport function shareToTwitterAsPopup(message: string) {\n    const url = urlcat('https://twitter.com/intent/tweet', { text: message })\n    const width = 700\n    const height = 520\n    const openedWindow = openWindow(url, 'share', {\n        width,\n        height,\n        screenX: window.screenX + (window.innerWidth - width) / 2,\n        screenY: window.screenY + (window.innerHeight - height) / 2,\n        opener: true,\n        referrer: true,\n        behaviors: {\n            toolbar: true,\n            status: true,\n            resizable: true,\n            scrollbars: true,\n        },\n    })\n    if (openedWindow === null) {\n        location.assign(url)\n    }\n}\n","import {\n    type SyntheticEvent,\n    cloneElement,\n    isValidElement,\n    useCallback,\n    useState,\n    type MutableRefObject,\n    createElement,\n} from 'react'\nimport { useUpdate } from 'react-use'\nimport { Menu, type MenuProps } from '@mui/material'\nimport { makeStyles, ShadowRootMenu } from '@masknet/theme'\n\n/**\n * A util hooks for easier to use `<Menu>`s.\n *\n * If you need configuration, please use useMenuConfig\n */\n// ! Do not change signature of this. Change useMenuConfig instead.\nexport function useMenu(...elements: Array<JSX.Element | null>) {\n    return useMenuConfig(elements, {})\n}\n\nexport interface MenuConfigOptions extends Partial<MenuProps> {\n    anchorSibling?: boolean\n    useShadowRoot?: boolean\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    menu: {\n        // TODO: replace hard code to theme\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 0px 20px rgba(255, 255, 255, 0.12)'\n                : '0px 4px 30px rgba(0, 0, 0, 0.1)',\n    },\n}))\n\nexport function useMenuConfig(\n    elements: Array<JSX.Element | null>,\n    config: MenuConfigOptions,\n    ref?: MutableRefObject<HTMLDivElement | null>,\n): [\n    menu: React.ReactNode,\n    openDialog: (anchorElOrEvent: HTMLElement | SyntheticEvent<HTMLElement>) => void,\n    closeDialog: () => void,\n    open: boolean,\n] {\n    const { classes } = useStyles()\n    const { anchorSibling = false, useShadowRoot = true, ...menuProps } = config\n    const [open, setOpen] = useState(false)\n    const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n    const close = () => {\n        setOpen(false)\n        setAnchorEl(null)\n    }\n    const update = useUpdate()\n    return [\n        createElement(\n            useShadowRoot ? ShadowRootMenu : Menu,\n            {\n                ...menuProps,\n                PaperProps: menuProps?.PaperProps,\n                classes: { paper: classes.menu, ...menuProps.classes },\n                MenuListProps: menuProps?.MenuListProps,\n                open,\n                anchorEl,\n                ref,\n                onClose: close,\n                onClick: close,\n                anchorOrigin: menuProps?.anchorOrigin,\n                transformOrigin: menuProps?.transformOrigin,\n                disableScrollLock: true,\n            },\n            elements?.map((element, key) =>\n                isValidElement<object>(element) ? cloneElement(element, { ...element.props, key }) : element,\n            ),\n        ),\n        useCallback((anchorElOrEvent: HTMLElement | SyntheticEvent<HTMLElement>) => {\n            let element: HTMLElement\n            if (anchorElOrEvent instanceof HTMLElement) {\n                element = anchorElOrEvent\n            } else {\n                element = anchorElOrEvent.currentTarget\n            }\n\n            // when the essential content of currentTarget would be closed over,\n            //  we can set the anchorEl with currentTarget's bottom sibling to avoid it.\n            const finalAnchor = anchorSibling ? (element.nextElementSibling as HTMLElement) ?? undefined : element\n            setAnchorEl(finalAnchor)\n            setOpen(true)\n            // HACK: it seems like anchor doesn't work correctly\n            // but a force repaint can solve the problem.\n            window.requestAnimationFrame(update)\n        }, []),\n        useCallback(() => {\n            setOpen(false)\n            setAnchorEl(null)\n        }, []),\n        open,\n    ]\n}\n","import { Menu } from '@mui/material'\nimport { createShadowRootForwardedComponent } from '../../ShadowRoot/index.js'\n\nexport const ShadowRootMenu = createShadowRootForwardedComponent(Menu)\nShadowRootMenu.displayName = 'ShadowRootTooltip'\n"],"names":["NetworkPluginID","useChainId","getNativeTokenAddress","useSearchParams","useTokenParams","params","setParams","defaultChainId","PLUGIN_EVM","rawChainId","get","chainId","Number","parseInt","rawAddress","address","useNonFungibleTokenParams","tokenId","memo","RootWeb3ContextProvider","WalletStatusModal","SelectProviderModal","WalletConnectQRCodeModal","WalletRiskWarningModal","ConnectWalletModal","LeavePageConfirmModal","ApplicationBoardModal","ApplicationBoardSettingsModal","GasSettingModal","TransactionSnackbarModal","ConfirmModal","TransactionConfirmModal","SelectNonFungibleContractModal","SelectFungibleTokenModal","SelectGasSettingsModal","AddCollectiblesModal","PersonaSelectPanelModal","ShareSelectNetworkModal","noop","modals","ConfirmDialogComponent","Modals","props","ref","register","ConfirmDialog","createWallet","pluginID","TransactionSnackbar","SwapPageModals","useCallback","useMemo","Box","MenuItem","Typography","makeStyles","useChainContext","useNetworks","useWeb3State","ImageIcon","NetworkIcon","useMenuConfig","Icons","PluginID","Web3","useActivatedPlugin","first","useStyles","theme","root","minWidth","backgroundColor","palette","primary","main","padding","minHeight","borderRadius","cursor","display","alignItems","justifyContent","title","color","fontSize","lineHeight","marginLeft","menu","maxHeight","NetworkSelector","networks","Network","traderDefinition","Trader","chainIdList","enableRequirement","web3","supportedChainIds","actualNetworks","filter","x","includes","onChainChange","network","switchNetwork","ID","switchChain","NetworkSelectorUI","currentNetwork","find","classes","openMenu","map","onClick","selected","iconUrl","size","icon","name","sx","paper","className","div","style","ArrowDownRound","useLocation","useFungibleToken","createERC20Token","shareToTwitterAsPopup","SwapBox","location","URLSearchParams","search","symbol","decimals","fallbackToken","undefined","data","coin","share","defaultInputCoin","AllProviderTradeContext","Appearance","SharedContextProvider","applyMaskColorVars","ChainContextProvider","DefaultWeb3ContextProvider","useMaskSharedTrans","page","maxWidth","maskColor","bg","container","width","background","marginRight","flexDirection","header","fontWeight","second","overflowY","SwapPage","t","document","body","light","chainContextValue","value","variant","plugin_trader_swap","Provider","isEqual","unreachable","useValueRef","ValueRefWithReady","createManager","getPluginDefine","events","activated","startDaemon","minimalMode","def","SiteAdaptor","NoManagedContext","activatedSub","on","plugins","minimalModeSub","useActivatedPluginsSiteAdaptor","minimalModeEqualsTo","result","visibility","useMinimalMode","bind","useNotMinimalMode","useAnyMode","useIsMinimalMode","useActivatedPluginSiteAdaptor","startPluginSiteAdaptor","host","id","status","supports","sites","type","Environment","isEnvironment","AsyncCall","AsyncGeneratorCall","serializer","getOrUpdateLocalImplementationHMR","getPluginMessage","DOMAIN_RPC","log","requestReplay","process","env","NODE_ENV","sendLocalStack","isBackground","ManifestBackground","__workaround__replaceIsBackground__","f","getPluginRPCInternal","cache","starter","entry","has","message","rpc","Object","create","key","channel","send","sendToBackgroundPage","thenable","set","Map","cacheGenerator","getPluginRPC","startPluginRPC","AbortController","signal","getPluginRPCGenerator","startPluginGeneratorRPC","startPluginRPCInternal","impl","Error","delegate","sendByBroadcast","openWindow","urlcat","url","text","height","openedWindow","screenX","window","innerWidth","screenY","innerHeight","opener","referrer","behaviors","toolbar","resizable","scrollbars","assign","cloneElement","isValidElement","useState","createElement","useUpdate","Menu","ShadowRootMenu","useMenu","elements","boxShadow","mode","config","anchorSibling","useShadowRoot","menuProps","open","setOpen","anchorEl","setAnchorEl","close","update","PaperProps","MenuListProps","onClose","anchorOrigin","transformOrigin","disableScrollLock","element","anchorElOrEvent","HTMLElement","currentTarget","finalAnchor","nextElementSibling","requestAnimationFrame","createShadowRootForwardedComponent","displayName"],"sourceRoot":"","x_google_ignoreList":[]}