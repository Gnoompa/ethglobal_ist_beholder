{"version":3,"file":"bundled/chunk.5818.js","mappings":"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","sources":["webpack://mask-network/./packages/plugins/RSS3/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/contexts/FeedOwnerContext.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/hooks/useAddressLabel.ts","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/share.ts","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/modals/modals.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/base.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/common.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/CollectibleApprovalCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/CollectibleCard.tsx","webpack://mask-network/./node_modules/.pnpm/linkify-react@4.1.1_linkifyjs@4.1.1_react@0.0.0-experimental-0a360642d-20230711/node_modules/linkify-react/dist/linkify-react.es.js","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/useMarkdownStyles.ts","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/CommentCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/Slider.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/DonationCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/LiquidityCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/hooks/usePublicationId.ts","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/NoteCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/LensAvatar.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/ProfileCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/ProfileLinkCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/ProfileProxy.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/ProposeCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/TokenApprovalCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/TokenBridgeCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/TokenOperationCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/TokenSwapCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/VoteCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/UnknownCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/StakingCard.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/components/FeedCard/index.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/hooks/useFeeds.ts","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/FeedsPage.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/modals/DetailsModal/DetailDialog.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/modals/DetailsModal/index.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/modals/index.tsx","webpack://mask-network/./packages/plugins/RSS3/src/SiteAdaptor/index.tsx","webpack://mask-network/./packages/shared-base-ui/src/hooks/useEverSeen.ts","webpack://mask-network/./packages/shared-base-ui/src/hooks/useSingletonModal.ts","webpack://mask-network/./packages/shared/src/UI/components/ChainIcon/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/ElementAnchor/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/EmptyStatus/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/Icon/name2Image.ts","webpack://mask-network/./packages/shared/src/UI/components/Icon/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/Image/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/Linking.tsx","webpack://mask-network/./packages/shared/src/UI/components/LoadRetry/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/NetworkIcon/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/ReversedAddress/index.tsx","webpack://mask-network/./packages/theme/src/Components/Boundary/index.tsx","webpack://mask-network/./packages/theme/src/hooks/useBoundedPopperProps.ts","webpack://mask-network/./packages/web3-hooks/base/src/ScopedDomains/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useNetwork.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNetworks.ts","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs","webpack://mask-network/./node_modules/.pnpm/unstated-next@1.1.0/node_modules/unstated-next/dist/unstated-next.mjs"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\nimport { createElement, useMemo, type ComponentType } from \"react\";\nimport { useTranslation, Trans, type TransProps } from \"react-i18next\";\ntype TypedTransProps<Value, Components> = Omit<TransProps<string>, \"values\" | \"ns\" | \"i18nKey\"> & ({} extends Value ? {} : {\n    values: Value;\n}) & {\n    components: Components;\n};\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useRSS3Trans(): {\n    /**\n      * `$t(token_operation$mint)`\n      */\n    token_operation_verbose$mint(): string;\n    /**\n      * `$t(token_operation$burn)`\n      */\n    token_operation_verbose$burn(): string;\n    /**\n      * `$t(token_operation$deposit)`\n      */\n    token_operation_verbose$deposit(): string;\n    /**\n      * `$t(token_operation$withdraw)`\n      */\n    token_operation_verbose$withdraw(): string;\n    /**\n      * `{{- value}} {{- symbol}}`\n      */\n    token_value(options: Readonly<{\n        value: string;\n        symbol: string;\n    }>): string;\n    /**\n      * `{{- from_value}} {{from_symbol}} for {{- to_value}} {{to_symbol}}`\n      */\n    token_swap_pair(options: Readonly<{\n        from_value: string;\n        from_symbol: string;\n        to_value: string;\n        to_symbol: string;\n    }>): string;\n    /**\n      * `Original`\n      */\n    original(): string;\n    /**\n      * `Details`\n      */\n    details(): string;\n    /**\n      * `There’s no feed associated with this address.`\n      */\n    no_data$activities(): string;\n    /**\n      * `There’s no feed associated with this address.`\n      */\n    no_data$donation(): string;\n    /**\n      * `There’s no feed associated with this address.`\n      */\n    no_data$social(): string;\n    /**\n      * - no_data$activities: `There’s no feed associated with this address.`\n    \n      * - no_data$donation: `There’s no feed associated with this address.`\n    \n      * - no_data$social: `There’s no feed associated with this address.`\n      */\n    no_data(options: {\n        readonly context: \"activities\" | \"donation\" | \"social\";\n    }): string;\n} { const { t } = useTranslation(\"bio.rss3\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\nfunction createComponent(i18nKey: string) {\n    return (props) => createElement(Trans, { i18nKey, ns: \"bio.rss3\", shouldUnescape: true, ...props });\n}\nexport const RSS3Trans: {\n    /**\n      * `<to>{{to}}</to> minted <bold>{{value}} {{symbol}}</bold>`\n      */\n    token_operation$mint: ComponentType<TypedTransProps<Readonly<{\n        to: (string & string) & string;\n        value: string & string;\n        symbol: string & string;\n    }>, {\n        to: JSX.Element;\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<from>{{from}}</from> sent to <to>{{to}}</to>`\n      */\n    token_operation$send: ComponentType<TypedTransProps<Readonly<{\n        from: (((string & string) & string) & string) & string;\n        to: string;\n    }>, {\n        [\"from\"]: JSX.Element;\n        to: JSX.Element;\n    }>>;\n    /**\n      * `<to>{{to}}</to> claimed from <from>{{from}}</from>`\n      */\n    token_operation$claim: ComponentType<TypedTransProps<Readonly<{\n        to: string;\n        from: string;\n    }>, {\n        to: JSX.Element;\n        [\"from\"]: JSX.Element;\n    }>>;\n    /**\n      * `<from>{{from}}</from> burned <bold>{{value}} {{symbol}}</bold>`\n      */\n    token_operation$burn: ComponentType<TypedTransProps<Readonly<{\n        from: string;\n        value: string;\n        symbol: string;\n    }>, {\n        [\"from\"]: JSX.Element;\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<from>{{from}}</from> deposited on <bold>{{exchange}}</bold>`\n      */\n    token_operation$deposit: ComponentType<TypedTransProps<Readonly<{\n        from: string;\n        exchange: string & string;\n    }>, {\n        [\"from\"]: JSX.Element;\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<from>{{from}}</from> withdrew on <bold>{{exchange}}</bold>`\n      */\n    token_operation$withdraw: ComponentType<TypedTransProps<Readonly<{\n        from: string;\n        exchange: string;\n    }>, {\n        [\"from\"]: JSX.Element;\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<from>{{from}}</from> sent to <to>{{to}}</to> for <bold>{{value}} {{symbol}}</bold>`\n      */\n    token_operation_verbose$send: ComponentType<TypedTransProps<Readonly<{\n        from: string & string;\n        to: string & string;\n        value: string & string;\n        symbol: string & string;\n    }>, {\n        [\"from\"]: JSX.Element;\n        to: JSX.Element;\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<to>{{to}}</to> claimed from <from>{{from}}</from> for <bold>{{value}} {{symbol}}</bold>`\n      */\n    token_operation_verbose$claim: ComponentType<TypedTransProps<Readonly<{\n        to: string;\n        from: string;\n        value: string;\n        symbol: string;\n    }>, {\n        to: JSX.Element;\n        [\"from\"]: JSX.Element;\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> staked <bold>{{symbol}}</bold>`\n      */\n    token_staking$stake: ComponentType<TypedTransProps<Readonly<{\n        user: (string & string) & string;\n        symbol: (string & string) & string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> claimed <bold>{{symbol}}</bold>`\n      */\n    token_staking$claim: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        symbol: string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> unstaked <bold>{{symbol}}</bold>`\n      */\n    token_staking$unstake: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        symbol: string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> approved <bold>{{- amount}} {{symbol}}</bold> to <bold>{{contract}}</bold>`\n      */\n    token_approval$approve: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        amount: string & string;\n        symbol: string & string;\n        contract: string & string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> revoked the approval of <bold>{{- amount}} {{symbol}}</bold> to <bold>{{contract}}</bold>`\n      */\n    token_approval$revoke: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        amount: string;\n        symbol: string;\n        contract: string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> approved <bold>{{- amount}} {{symbol}}</bold>`\n      */\n    token_approval_verbose$approve: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        amount: string & string;\n        symbol: string & string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> revoked the approval of <bold>{{- amount}} {{symbol}}</bold>`\n      */\n    token_approval_verbose$revoke: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        amount: string;\n        symbol: string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> approved {{collection}} to <bold>{{contract}}</bold>`\n      */\n    collectible_approval$approve: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        collection: string & string;\n        contract: string & string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> revoked the approval of {{collection}} to <bold>{{contract}}</bold>`\n      */\n    collectible_approval$revoke: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        collection: string;\n        contract: string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> supplied liquidity on <platform>{{platform}}</platform>`\n      */\n    liquidity$supply: ComponentType<TypedTransProps<Readonly<{\n        user: (((((string & string) & string) & string) & string) & string) & string;\n        platform: (((((string & string) & string) & string) & string) & string) & string;\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> added liquidity on <platform>{{platform}}</platform>`\n      */\n    liquidity$add: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        platform: string;\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> repaid liquidity on <platform>{{platform}}</platform>`\n      */\n    liquidity$repay: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        platform: string;\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> withdrew liquidity on <platform>{{platform}}</platform>`\n      */\n    liquidity$withdraw: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        platform: string;\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> collected liquidity on <platform>{{platform}}</platform>`\n      */\n    liquidity$collect: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        platform: string;\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> removed liquidity on <platform>{{platform}}</platform>`\n      */\n    liquidity$remove: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        platform: string;\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> borrowed liquidity on <platform>{{platform}}</platform>`\n      */\n    liquidity$borrow: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        platform: string;\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> swapped on <platform>{{platform}}</platform>`\n      */\n    token_swap$normal: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        platform: string & string;\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> swapped <bold>{{- from_value}} {{from_symbol}}</bold> for <bold>{{- to_value}} {{to_symbol}}</bold> on <platform>{{platform}}</platform>`\n      */\n    token_swap$verbose: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        from_value: string;\n        from_symbol: string;\n        to_value: string;\n        to_symbol: string;\n        platform: string;\n    }>, {\n        user: JSX.Element;\n        bold: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> bridged <bold>{{- amount}} {{symbol}}</bold> from <platform>{{source}}</platform> to <platform>{{target}}</platform>`\n      */\n    token_bridge: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        amount: string;\n        symbol: string;\n        source: string;\n        target: string;\n    }>, {\n        user: JSX.Element;\n        bold: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> registered <ens>{{ens}}</ens> for <cost>{{cost_value}} {{cost_symbol}}</cost>`\n      */\n    collectible_register_ens: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        ens: string;\n        cost_value: string;\n        cost_symbol: string;\n    }>, {\n        user: JSX.Element;\n        ens: JSX.Element;\n        cost: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> minted <collectible>{{collectible}}</collectible> for <cost>{{cost_value}} {{cost_symbol}}</cost>`\n      */\n    collectible_mint$cost: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        collectible: string & string;\n        cost_value: string;\n        cost_symbol: string;\n    }>, {\n        user: JSX.Element;\n        collectible: JSX.Element;\n        cost: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> minted <collectible>{{collectible}}</collectible>`\n      */\n    collectible_mint$no_cost: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        collectible: string;\n    }>, {\n        user: JSX.Element;\n        collectible: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> sent <collectible>{{collectible}}</collectible> to <other>{{other}}</other>`\n      */\n    collectible_operation$send: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        collectible: string & string;\n        other: string & string;\n    }>, {\n        user: JSX.Element;\n        collectible: JSX.Element;\n        other: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> claimed <collectible>{{collectible}}</collectible> from <other>{{other}}</other>`\n      */\n    collectible_operation$claim: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        collectible: string;\n        other: string;\n    }>, {\n        user: JSX.Element;\n        collectible: JSX.Element;\n        other: JSX.Element;\n    }>>;\n    /**\n      * `$t(collectible_operation$claim) for <cost>{{cost_value}} {{cost_symbol}}</cost>`\n      */\n    collectible_operation$claim_cost: ComponentType<TypedTransProps<Readonly<{\n        cost_value: string;\n        cost_symbol: string;\n    }>, {\n        cost: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> sold <collectible>{{collectible}}</collectible> to <recipient>{{recipient}}</recipient> for <bold>{{cost_value}} {{cost_symbol}}</bold>`\n      */\n    collectible_trade$no_platform: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        collectible: string & string;\n        recipient: string & string;\n        cost_value: string & string;\n        cost_symbol: string & string;\n    }>, {\n        bold: JSX.Element;\n        collectible: JSX.Element;\n        recipient: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> sold <collectible>{{collectible}}</collectible> to <recipient>{{recipient}}</recipient> for <bold>{{cost_value}} {{cost_symbol}}</bold> on <bold>{{platform}}</bold>`\n      */\n    collectible_trade$platform: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        collectible: string;\n        recipient: string;\n        cost_value: string;\n        cost_symbol: string;\n        platform: string;\n    }>, {\n        bold: JSX.Element;\n        collectible: JSX.Element;\n        recipient: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> burned <collectible>{{collectible}}</collectible>`\n      */\n    collectible_burn: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        collectible: string;\n    }>, {\n        user: JSX.Element;\n        collectible: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> carried out an activity to <bold>{{target}}</bold> on <bold>{{platform}}</bold>`\n      */\n    carry_out_activity: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        target: string;\n        platform: string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> donated <bold>{{cost_value}} {{cost_symbol}}</bold>`\n      */\n    donation_donate: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        cost_value: string;\n        cost_symbol: string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> donated <bold>{{cost_value}} {{cost_symbol}}</bold> to <bold>{{project}}</bold>`\n      */\n    donation_donate_verbose: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        cost_value: string;\n        cost_symbol: string;\n        project: string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> posted a note on <bold>{{platform}}</bold>`\n      */\n    note$post: ComponentType<TypedTransProps<Readonly<{\n        user: (((string & string) & string) & string) & string;\n        platform: (((string & string) & string) & string) & string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> minted a note on <bold>{{platform}}</bold>`\n      */\n    note$mint: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        platform: string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> revised a note on <bold>{{platform}}</bold>`\n      */\n    note$revise: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        platform: string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> made a comment on <bold>{{platform}}</bold>`\n      */\n    note$comment: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        platform: string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> shared a note on <bold>{{platform}}</bold>`\n      */\n    note$share: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        platform: string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> created a profile on <platform>{{platform}}</platform>`\n      */\n    profile$create: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        platform: string & string;\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> updated a profile on <platform>{{platform}}</platform>`\n      */\n    profile$update: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        platform: string;\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> followed <other>{{other}}</other> on <platform>{{platform}}</platform>`\n      */\n    profile_link$follow: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        other: string & string;\n        platform: string & string;\n    }>, {\n        user: JSX.Element;\n        other: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> unfollowed <other>{{other}}</other> on <platform>{{platform}}</platform>`\n      */\n    profile_link$unfollow: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        other: string;\n        platform: string;\n    }>, {\n        user: JSX.Element;\n        other: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<user>{{user}}</user> appointed a proxy on <platform>{{platform}}</platform>`\n      */\n    profile_proxy: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        platform: string;\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> voted for <bold>{{- option}}</bold> on <bold>{{- platform }}</bold>`\n      */\n    vote: ComponentType<TypedTransProps<Readonly<{\n        user: string;\n        option: string;\n        platform: string;\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * `<bold>{{user}}</bold> proposed`\n      */\n    propose: ComponentType<TypedTransProps<{\n        readonly user: string;\n    }, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * - token_operation$mint: `<to>{{to}}</to> minted <bold>{{value}} {{symbol}}</bold>`\n    \n      * - token_operation$send: `<from>{{from}}</from> sent to <to>{{to}}</to>`\n    \n      * - token_operation$claim: `<to>{{to}}</to> claimed from <from>{{from}}</from>`\n    \n      * - token_operation$burn: `<from>{{from}}</from> burned <bold>{{value}} {{symbol}}</bold>`\n    \n      * - token_operation$deposit: `<from>{{from}}</from> deposited on <bold>{{exchange}}</bold>`\n    \n      * - token_operation$withdraw: `<from>{{from}}</from> withdrew on <bold>{{exchange}}</bold>`\n      */\n    token_operation: ComponentType<TypedTransProps<Readonly<{\n        to: (string & string) & string;\n        value: string & string;\n        symbol: string & string;\n        from: (((string & string) & string) & string) & string;\n        exchange: string & string;\n        context?: \"mint\" | \"send\" | \"claim\" | \"burn\" | \"deposit\" | \"withdraw\";\n    }>, {\n        to: JSX.Element;\n        bold: JSX.Element;\n        [\"from\"]: JSX.Element;\n    }>>;\n    /**\n      * - token_operation_verbose$mint: `$t(token_operation$mint)`\n    \n      * - token_operation_verbose$send: `<from>{{from}}</from> sent to <to>{{to}}</to> for <bold>{{value}} {{symbol}}</bold>`\n    \n      * - token_operation_verbose$claim: `<to>{{to}}</to> claimed from <from>{{from}}</from> for <bold>{{value}} {{symbol}}</bold>`\n    \n      * - token_operation_verbose$burn: `$t(token_operation$burn)`\n    \n      * - token_operation_verbose$deposit: `$t(token_operation$deposit)`\n    \n      * - token_operation_verbose$withdraw: `$t(token_operation$withdraw)`\n      */\n    token_operation_verbose: ComponentType<TypedTransProps<Readonly<{\n        from: string & string;\n        to: string & string;\n        value: string & string;\n        symbol: string & string;\n        context?: \"mint\" | \"send\" | \"claim\" | \"burn\" | \"deposit\" | \"withdraw\";\n    }>, {\n        [\"from\"]: JSX.Element;\n        to: JSX.Element;\n        bold: JSX.Element;\n    }>>;\n    /**\n      * - token_staking$stake: `<bold>{{user}}</bold> staked <bold>{{symbol}}</bold>`\n    \n      * - token_staking$claim: `<bold>{{user}}</bold> claimed <bold>{{symbol}}</bold>`\n    \n      * - token_staking$unstake: `<bold>{{user}}</bold> unstaked <bold>{{symbol}}</bold>`\n      */\n    token_staking: ComponentType<TypedTransProps<Readonly<{\n        user: (string & string) & string;\n        symbol: (string & string) & string;\n        context?: \"stake\" | \"claim\" | \"unstake\";\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * - token_approval$approve: `<bold>{{user}}</bold> approved <bold>{{- amount}} {{symbol}}</bold> to <bold>{{contract}}</bold>`\n    \n      * - token_approval$revoke: `<bold>{{user}}</bold> revoked the approval of <bold>{{- amount}} {{symbol}}</bold> to <bold>{{contract}}</bold>`\n      */\n    token_approval: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        amount: string & string;\n        symbol: string & string;\n        contract: string & string;\n        context?: \"approve\" | \"revoke\";\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * - token_approval_verbose$approve: `<bold>{{user}}</bold> approved <bold>{{- amount}} {{symbol}}</bold>`\n    \n      * - token_approval_verbose$revoke: `<bold>{{user}}</bold> revoked the approval of <bold>{{- amount}} {{symbol}}</bold>`\n      */\n    token_approval_verbose: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        amount: string & string;\n        symbol: string & string;\n        context?: \"approve\" | \"revoke\";\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * - collectible_approval$approve: `<bold>{{user}}</bold> approved {{collection}} to <bold>{{contract}}</bold>`\n    \n      * - collectible_approval$revoke: `<bold>{{user}}</bold> revoked the approval of {{collection}} to <bold>{{contract}}</bold>`\n      */\n    collectible_approval: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        collection: string & string;\n        contract: string & string;\n        context?: \"approve\" | \"revoke\";\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * - liquidity$supply: `<user>{{user}}</user> supplied liquidity on <platform>{{platform}}</platform>`\n    \n      * - liquidity$add: `<user>{{user}}</user> added liquidity on <platform>{{platform}}</platform>`\n    \n      * - liquidity$repay: `<user>{{user}}</user> repaid liquidity on <platform>{{platform}}</platform>`\n    \n      * - liquidity$withdraw: `<user>{{user}}</user> withdrew liquidity on <platform>{{platform}}</platform>`\n    \n      * - liquidity$collect: `<user>{{user}}</user> collected liquidity on <platform>{{platform}}</platform>`\n    \n      * - liquidity$remove: `<user>{{user}}</user> removed liquidity on <platform>{{platform}}</platform>`\n    \n      * - liquidity$borrow: `<user>{{user}}</user> borrowed liquidity on <platform>{{platform}}</platform>`\n      */\n    liquidity: ComponentType<TypedTransProps<Readonly<{\n        user: (((((string & string) & string) & string) & string) & string) & string;\n        platform: (((((string & string) & string) & string) & string) & string) & string;\n        context?: \"supply\" | \"add\" | \"repay\" | \"withdraw\" | \"collect\" | \"remove\" | \"borrow\";\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * - token_swap$normal: `<user>{{user}}</user> swapped on <platform>{{platform}}</platform>`\n    \n      * - token_swap$verbose: `<user>{{user}}</user> swapped <bold>{{- from_value}} {{from_symbol}}</bold> for <bold>{{- to_value}} {{to_symbol}}</bold> on <platform>{{platform}}</platform>`\n      */\n    token_swap: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        platform: string & string;\n        from_value: string;\n        from_symbol: string;\n        to_value: string;\n        to_symbol: string;\n        context?: \"normal\" | \"verbose\";\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n        bold: JSX.Element;\n    }>>;\n    /**\n      * - collectible_mint$cost: `<user>{{user}}</user> minted <collectible>{{collectible}}</collectible> for <cost>{{cost_value}} {{cost_symbol}}</cost>`\n    \n      * - collectible_mint$no_cost: `<user>{{user}}</user> minted <collectible>{{collectible}}</collectible>`\n      */\n    collectible_mint: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        collectible: string & string;\n        cost_value: string;\n        cost_symbol: string;\n        context?: \"cost\" | \"no_cost\";\n    }>, {\n        user: JSX.Element;\n        collectible: JSX.Element;\n        cost: JSX.Element;\n    }>>;\n    /**\n      * - collectible_operation$send: `<user>{{user}}</user> sent <collectible>{{collectible}}</collectible> to <other>{{other}}</other>`\n    \n      * - collectible_operation$claim: `<user>{{user}}</user> claimed <collectible>{{collectible}}</collectible> from <other>{{other}}</other>`\n    \n      * - collectible_operation$claim_cost: `$t(collectible_operation$claim) for <cost>{{cost_value}} {{cost_symbol}}</cost>`\n      */\n    collectible_operation: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        collectible: string & string;\n        other: string & string;\n        cost_value: string;\n        cost_symbol: string;\n        context?: \"send\" | \"claim\" | \"claim_cost\";\n    }>, {\n        user: JSX.Element;\n        collectible: JSX.Element;\n        other: JSX.Element;\n        cost: JSX.Element;\n    }>>;\n    /**\n      * - collectible_trade$no_platform: `<bold>{{user}}</bold> sold <collectible>{{collectible}}</collectible> to <recipient>{{recipient}}</recipient> for <bold>{{cost_value}} {{cost_symbol}}</bold>`\n    \n      * - collectible_trade$platform: `<bold>{{user}}</bold> sold <collectible>{{collectible}}</collectible> to <recipient>{{recipient}}</recipient> for <bold>{{cost_value}} {{cost_symbol}}</bold> on <bold>{{platform}}</bold>`\n      */\n    collectible_trade: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        collectible: string & string;\n        recipient: string & string;\n        cost_value: string & string;\n        cost_symbol: string & string;\n        platform: string;\n        context?: \"no_platform\" | \"platform\";\n    }>, {\n        bold: JSX.Element;\n        collectible: JSX.Element;\n        recipient: JSX.Element;\n    }>>;\n    /**\n      * - note$post: `<bold>{{user}}</bold> posted a note on <bold>{{platform}}</bold>`\n    \n      * - note$mint: `<bold>{{user}}</bold> minted a note on <bold>{{platform}}</bold>`\n    \n      * - note$revise: `<bold>{{user}}</bold> revised a note on <bold>{{platform}}</bold>`\n    \n      * - note$comment: `<bold>{{user}}</bold> made a comment on <bold>{{platform}}</bold>`\n    \n      * - note$share: `<bold>{{user}}</bold> shared a note on <bold>{{platform}}</bold>`\n      */\n    note: ComponentType<TypedTransProps<Readonly<{\n        user: (((string & string) & string) & string) & string;\n        platform: (((string & string) & string) & string) & string;\n        context?: \"post\" | \"mint\" | \"revise\" | \"comment\" | \"share\";\n    }>, {\n        bold: JSX.Element;\n    }>>;\n    /**\n      * - profile$create: `<user>{{user}}</user> created a profile on <platform>{{platform}}</platform>`\n    \n      * - profile$update: `<user>{{user}}</user> updated a profile on <platform>{{platform}}</platform>`\n      */\n    profile: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        platform: string & string;\n        context?: \"create\" | \"update\";\n    }>, {\n        user: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n    /**\n      * - profile_link$follow: `<user>{{user}}</user> followed <other>{{other}}</other> on <platform>{{platform}}</platform>`\n    \n      * - profile_link$unfollow: `<user>{{user}}</user> unfollowed <other>{{other}}</other> on <platform>{{platform}}</platform>`\n      */\n    profile_link: ComponentType<TypedTransProps<Readonly<{\n        user: string & string;\n        other: string & string;\n        platform: string & string;\n        context?: \"follow\" | \"unfollow\";\n    }>, {\n        user: JSX.Element;\n        other: JSX.Element;\n        platform: JSX.Element;\n    }>>;\n} = /*#__PURE__*/ createProxy(createComponent);\n","import { createContext, useContext } from 'react'\n\nexport interface FeedOwnerOptions {\n    address: string\n    /** ENS, RNS or SOL, etc */\n    name?: string | null\n    ownerDisplay: string\n}\nexport const FeedOwnerContext = createContext<FeedOwnerOptions>(null!)\n\nexport function useFeedOwner() {\n    return useContext(FeedOwnerContext)\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport { ScopedDomainsContainer, useReverseAddress, useWeb3Others } from '@masknet/web3-hooks-base'\n\nexport function useAddressLabel(address: string, pluginID?: NetworkPluginID): string {\n    const Others = useWeb3Others()\n    const { getDomain } = ScopedDomainsContainer.useContainer()\n\n    const { data } = useReverseAddress(pluginID, address)\n    const domain = getDomain(address) || data\n    const formattedDomain = domain ? Others.formatDomainName(domain) : undefined\n    const label = formattedDomain || Others.formatAddress(address, 4) || address\n    return label\n}\n","import type { ComponentType } from 'react'\nimport { format as formatDateTime } from 'date-fns'\nimport { Icons } from '@masknet/icons'\nimport type { GeneratedIconNonSquareProps } from '@masknet/icons'\nimport type { RSS3BaseAPI } from '@masknet/web3-providers/types'\n\ntype IconComponent =\n    | ComponentType<GeneratedIconNonSquareProps>\n    | ComponentType<GeneratedIconNonSquareProps<'light'>>\n    | ComponentType<GeneratedIconNonSquareProps<'dark'>>\n    | ComponentType<GeneratedIconNonSquareProps<'dim'>>\n    | ComponentType<GeneratedIconNonSquareProps<'light' | 'dark'>>\n\nexport enum CardType {\n    AchievementBurn = 1,\n    AchievementReceive = 2,\n    CollectibleBurn = 3,\n    CollectibleIn = 4,\n    CollectibleMint = 5,\n    CollectibleOut = 6,\n    CollectibleApproval = 7,\n    DonationDonate = 8,\n    DonationLaunch = 9,\n    GovernancePropose = 10,\n    GovernanceVote = 11,\n    NoteCreate = 12,\n    NoteMint = 13,\n    NoteEdit = 14,\n    NoteLink = 15,\n    NoteBurn = 16,\n    ProfileBurn = 17,\n    ProfileCreate = 18,\n    ProfileUpdate = 19,\n    ProfileLink = 20,\n    ProfileProxy = 21,\n    TokenMint = 22,\n    TokenIn = 23,\n    TokenLiquidity = 24,\n    TokenOut = 25,\n    TokenStake = 26,\n    TokenUnstake = 27,\n    TokenSwap = 28,\n    TokenBridge = 29,\n    TokenBurn = 30,\n    TokenApproval = 31,\n    UnknownBurn = 32,\n    UnknownCancel = 33,\n    UnknownIn = 34,\n    UnknownOut = 35,\n}\n\nexport const cardTypeIconMap: Record<CardType, IconComponent> = {\n    [CardType.AchievementBurn]: Icons.AchievementBurn,\n    [CardType.AchievementReceive]: Icons.AchievementReceive,\n    [CardType.CollectibleBurn]: Icons.CollectibleBurn,\n    [CardType.CollectibleIn]: Icons.CollectibleIn,\n    [CardType.CollectibleMint]: Icons.CollectibleMint,\n    [CardType.CollectibleOut]: Icons.CollectibleOut,\n    [CardType.CollectibleApproval]: Icons.CollectibleApprove,\n    [CardType.DonationDonate]: Icons.DonationDonate,\n    [CardType.DonationLaunch]: Icons.DonationLaunch,\n    [CardType.GovernancePropose]: Icons.GovernancePropose,\n    [CardType.GovernanceVote]: Icons.GovernanceVote,\n    [CardType.NoteCreate]: Icons.NoteCreate,\n    [CardType.NoteMint]: Icons.NoteMint,\n    [CardType.NoteEdit]: Icons.NoteEdit,\n    [CardType.NoteLink]: Icons.NoteLink,\n    [CardType.NoteBurn]: Icons.NoteBurn,\n    [CardType.ProfileBurn]: Icons.ProfileBurn,\n    [CardType.ProfileCreate]: Icons.ProfileCreate,\n    [CardType.ProfileUpdate]: Icons.ProfileUpdate,\n    [CardType.ProfileLink]: Icons.ProfileLink,\n    [CardType.ProfileProxy]: Icons.ProfileProxy,\n    [CardType.TokenMint]: Icons.TokenMint,\n    [CardType.TokenIn]: Icons.TokenIn,\n    [CardType.TokenLiquidity]: Icons.TokenLiquidity,\n    [CardType.TokenOut]: Icons.TokenOut,\n    [CardType.TokenStake]: Icons.TokenStake,\n    [CardType.TokenUnstake]: Icons.TokenUnstake,\n    [CardType.TokenSwap]: Icons.TokenSwap,\n    [CardType.TokenBridge]: Icons.TokenBridge,\n    [CardType.TokenBurn]: Icons.TokenBurn,\n    [CardType.TokenApproval]: Icons.ApprovalApprove,\n    [CardType.UnknownBurn]: Icons.UnknownBurn,\n    [CardType.UnknownCancel]: Icons.UnknownCancel,\n    [CardType.UnknownIn]: Icons.UnknownIn,\n    [CardType.UnknownOut]: Icons.UnknownOut,\n}\n\nconst platformIconMap: Record<Lowercase<RSS3BaseAPI.Network | RSS3BaseAPI.Platform>, IconComponent | null> = {\n    // Networks\n    ethereum: Icons.ETH,\n    binance_smart_chain: Icons.BSC,\n    polygon: Icons.Polygon,\n    xdai: Icons.Gnosis,\n    arbitrum: Icons.Arbitrum,\n    optimism: Icons.Optimism,\n    fantom: Icons.Fantom,\n    avalanche: Icons.Avalanche,\n    zksync: Icons.ZkScan,\n    // Platforms\n    gitcoin: Icons.Gitcoin,\n    mirror: Icons.Mirror,\n    snapshot: Icons.Snapshot,\n    uniswap: Icons.Uniswap,\n    binance: Icons.BSC,\n    lens: Icons.Lens,\n    farcaster: Icons.Farcaster,\n    crossbell: Icons.Crossbell,\n    '0x': Icons.ZeroX,\n    'ens registrar': null,\n    crosssync: Icons.CrossSync,\n    metamask: Icons.MetaMask,\n    opensea: Icons.OpenSea,\n    sushiswap: Icons.SushiSwap,\n    pancakeswap: Icons.PancakeSwap,\n    aave: Icons.Aave,\n    'crossbell.io': Icons.Crossbell,\n    xlog: Icons.XLog,\n    'eip-1577': Icons.EIP1577,\n    planet: Icons.Planet,\n    arweave: Icons.Arweave,\n}\n\nexport const getPlatformIcon = (platform?: RSS3BaseAPI.Network | RSS3BaseAPI.Platform) => {\n    if (!platform) return null\n    return platformIconMap[platform.toLowerCase() as Lowercase<RSS3BaseAPI.Network | RSS3BaseAPI.Platform>]\n}\n\nexport const hostIconMap: Record<string, IconComponent> = {\n    'etherscan.io': Icons.EtherScan,\n    'opensea.io': Icons.OpenSea,\n    'polygonscan.com': Icons.PolygonScan,\n    'crossbell.io': Icons.Crossbell,\n    'scan.crossbell.io': Icons.Crossbell,\n    'lenster.xyz': Icons.Lens,\n    'looksrare.org': Icons.LooksRare,\n    'gitcoin.co': Icons.Gitcoin,\n    'bscscan.com': Icons.BSC,\n    'zkscan.io': Icons.ZkScan,\n    'mirror.xyz': Icons.Mirror,\n    'ipfs.io': Icons.IPFS,\n    'snapshot.org': Icons.Snapshot,\n    'momoka.lens.xyz': Icons.Momoka,\n}\n\nexport const hostNameMap: Record<string, string> = {\n    'etherscan.io': 'Etherscan',\n    'opensea.io': 'Opensea',\n    'polygonscan.com': 'Polygonscan',\n    'crossbell.io': 'Crossbell',\n    'scan.crossbell.io': 'Crossbell Scan',\n    'lenster.xyz': 'Lenster',\n    'looksrare.org': 'LooksRare',\n    'gitcoin.co': 'Gitcoin',\n    'bscscan.com': 'BscScan',\n    'zkscan.io': 'ZkScan',\n    'ipfs.io': 'IPFS',\n    'snapshot.org': 'Snapshot',\n    'mirror.xyz': 'Mirror',\n    'momoka.lens.xyz': 'Momoka',\n}\n\nexport function getLastAction<\n    T extends RSS3BaseAPI.Tag,\n    P extends keyof RSS3BaseAPI.MetadataMap[T] = keyof RSS3BaseAPI.MetadataMap[T],\n>(feed: RSS3BaseAPI.Web3FeedGeneric<T, P>) {\n    return feed.actions.at(-1)!\n}\n\n/**\n * Get cost from multiple actions.\n * We used to get it from the last action, but it might not always exists in\n * the last action.\n */\nexport function getCost(feed: RSS3BaseAPI.CollectibleTradeFeed): RSS3BaseAPI.TransactionMetadata | null {\n    for (const action of feed.actions) {\n        if (action.metadata?.cost) {\n            return action.metadata.cost\n        }\n    }\n    return null\n}\n\nconst ONE_MIN = 60 * 1000\nconst ONE_HOUR = 60 * ONE_MIN\nconst ONE_DAY = 24 * ONE_HOUR\nconst ONE_WEEK = 7 * ONE_DAY\n\nconst plural = (num: number, unit: string) => `${num} ${unit}${num !== 1 ? 's' : ''}`\n\n/**\n * A datetime formatter follows RSS3's\n */\nexport function formatTimestamp(timestamp: string): string {\n    const date = new Date(timestamp)\n    const ms = date.getTime()\n    const distance = Date.now() - ms\n    if (distance > ONE_WEEK) {\n        return formatDateTime(date, 'MM/dd/yyyy')\n    }\n    if (distance > ONE_DAY) {\n        const days = Math.floor(distance / ONE_DAY)\n        return plural(days, 'day')\n    }\n    if (distance > ONE_HOUR) {\n        const hours = Math.floor(distance / ONE_HOUR)\n        return plural(hours, 'hr')\n    }\n    const mins = Math.floor(distance / ONE_MIN)\n    return plural(mins, 'min')\n}\n\n/**\n * @deprecated\n */\nexport function transformPlanetResource(markdown: string, base: string) {\n    return markdown\n        .replaceAll(/(<img [^>]*)\\bsrc=(\"|')([^\"']*)\\2([^>]*>)/gi, (match, before, quotation, url, after) => {\n            if (url.match(/^https?:\\/\\//)) return match\n            return `${before}src=${quotation}https://thumbor.rss3.dev/unsafe/${base}/${url}${quotation}${after}`\n        })\n        .replaceAll(/(!\\[.*?])\\((.*?)\\)/g, (match, head, url) => {\n            if (url.match(/^https?:\\/\\//)) return match\n            return `${head}(https://thumbor.rss3.dev/unsafe/${base}/${url})`\n        })\n}\n","import { SingletonModal } from '@masknet/shared-base'\nimport type { FeedDetailsModalOpenProps } from './DetailsModal/index.js'\n\nexport const FeedDetailsModal = new SingletonModal<FeedDetailsModalOpenProps>()\n","import { Icons } from '@masknet/icons'\nimport { makeStyles, ShadowRootTooltip } from '@masknet/theme'\nimport type { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { Typography } from '@mui/material'\nimport { BigNumber } from 'bignumber.js'\nimport type { HTMLProps, ReactNode } from 'react'\nimport { format as formatDateTime } from 'date-fns'\nimport { type CardType, cardTypeIconMap, formatTimestamp, getPlatformIcon } from './share.js'\nimport { FeedDetailsModal } from '../modals/modals.js'\nimport { ScopedDomainsContainer } from '@masknet/web3-hooks-base'\n\ninterface FeedCardBaseProps {\n    feed: RSS3BaseAPI.Web3Feed\n    /**\n     * to specify action from the feed\n     * for example donation feed. there might be multiple actions to render\n     */\n    actionIndex?: number\n    /**\n     * verbose variant is\n     * - not inspectable (not clickable)\n     * - showing more details, including fee, and more other content, in different layout\n     */\n    verbose?: boolean\n}\n\nexport interface FeedCardProps extends Omit<HTMLProps<HTMLDivElement>, 'type' | 'action'>, FeedCardBaseProps {}\n\nconst useStyles = makeStyles()((theme) => ({\n    inspectable: {\n        cursor: 'pointer',\n        '&:hover': {\n            backgroundColor: theme.palette.maskColor.bg,\n        },\n    },\n    header: {\n        display: 'flex',\n    },\n    fee: {\n        display: 'flex',\n        fontWeight: 400,\n        fontSize: 12,\n        borderRadius: '4px',\n        backgroundColor: theme.palette.maskColor.bg,\n        color: theme.palette.maskColor.third,\n        height: 20,\n        padding: '0 4px',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: theme.spacing(1.5),\n    },\n    timestamp: {\n        marginLeft: theme.spacing(1.5),\n        fontSize: 14,\n        fontWeight: 400,\n        color: theme.palette.maskColor.third,\n    },\n    body: {\n        marginTop: theme.spacing(1.5),\n        flexGrow: 1,\n    },\n    icon: {\n        marginLeft: theme.spacing(1.5),\n    },\n}))\n\ninterface CardFrameProps extends Omit<HTMLProps<HTMLDivElement>, 'type' | 'action'>, FeedCardBaseProps {\n    type: CardType\n    badge?: ReactNode\n}\n\nexport function CardFrame({\n    type,\n    feed,\n    actionIndex,\n    className,\n    children,\n    onClick,\n    verbose,\n    badge,\n    ...rest\n}: CardFrameProps) {\n    const { classes, cx } = useStyles()\n    const CardIcon = cardTypeIconMap[type]\n    const PrimaryPlatformIcon = getPlatformIcon(feed.network)\n    const ProviderPlatformIcon = getPlatformIcon(feed.platform)\n    const { map } = ScopedDomainsContainer.useContainer()\n\n    return (\n        <article\n            className={cx(className, verbose ? null : classes.inspectable)}\n            onClick={(event: React.MouseEvent<HTMLDivElement>) => {\n                onClick?.(event)\n                if (!verbose) {\n                    FeedDetailsModal.open({\n                        type,\n                        scopedDomainsMap: map,\n                        feed,\n                        actionIndex,\n                    })\n                }\n            }}\n            {...rest}>\n            <div className={classes.header}>\n                <CardIcon width={36} height={18} />\n                {verbose && feed.fee ? (\n                    <div className={classes.fee}>\n                        <Icons.Gas size={16} />\n                        <Typography ml=\"4px\">{new BigNumber(feed.fee).toFixed(6)}</Typography>\n                    </div>\n                ) : null}\n                {ProviderPlatformIcon ? (\n                    <ProviderPlatformIcon className={classes.icon} height={18} width=\"auto\" />\n                ) : null}\n                {PrimaryPlatformIcon && PrimaryPlatformIcon !== ProviderPlatformIcon ? (\n                    <PrimaryPlatformIcon className={classes.icon} height={18} width=\"auto\" />\n                ) : null}\n                <ShadowRootTooltip\n                    title={formatDateTime(new Date(feed.timestamp), 'yyyy-MM-dd HH:mm:ss')}\n                    placement=\"right\">\n                    <Typography className={classes.timestamp}>{formatTimestamp(feed.timestamp)}</Typography>\n                </ShadowRootTooltip>\n                {badge}\n            </div>\n            <div className={classes.body}>{children}</div>\n        </article>\n    )\n}\n","import { type ReverseAddressProps, ReversedAddress } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { formatBalance } from '@masknet/web3-shared-base'\nimport { Link, Typography } from '@mui/material'\nimport type { ComponentProps } from 'react'\nimport { type IntermediateRepresentation, type Opts } from 'linkifyjs'\n\nconst useStyles = makeStyles()((theme) => ({\n    label: {\n        color: theme.palette.maskColor.main,\n        marginLeft: theme.spacing(1),\n        fontWeight: 700,\n        marginRight: theme.spacing(1),\n        whiteSpace: 'nowrap',\n        '&:first-of-type': {\n            marginLeft: 0,\n        },\n        '&:last-of-type': {\n            marginRight: 0,\n        },\n    },\n    link: {\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n    },\n}))\n\ninterface LabelProps extends ComponentProps<typeof Typography> {\n    className?: string\n    title?: string\n}\n\nexport function Label({ className, ...rest }: LabelProps) {\n    const { classes, cx } = useStyles()\n    return <Typography className={cx(classes.label, className)} component=\"span\" {...rest} />\n}\n\ninterface AddressLabelProps extends Omit<ReverseAddressProps, 'address'> {\n    address?: ReverseAddressProps['address']\n}\nexport function AddressLabel({ address, pluginID, size, className, ...rest }: AddressLabelProps) {\n    const { classes, cx } = useStyles()\n    return address ? (\n        <ReversedAddress\n            address={address}\n            pluginID={pluginID}\n            size={size}\n            className={cx(classes.label, className)}\n            component=\"span\"\n            {...rest}\n        />\n    ) : (\n        <Label className={className} {...rest} />\n    )\n}\n\nexport const formatValue = (value?: { value: string; decimals: number } | null): string => {\n    if (!value) return ''\n    return formatBalance(value.value, value.decimals, 5)\n}\n\nfunction LinkifyRender({ attributes, content }: IntermediateRepresentation) {\n    const { classes, cx } = useStyles()\n    return (\n        <Link {...attributes} className={cx(classes.link, attributes.className)}>\n            {content}\n        </Link>\n    )\n}\n\nexport const LinkifyOptions: Opts = {\n    target: '_blank',\n    render: LinkifyRender,\n}\n\nexport const htmlToPlain = (htmlString?: string) => {\n    if (!htmlString) return htmlString\n    return htmlString.trimStart().replaceAll(/<[^>]+>/g, '')\n}\n","import { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { Typography } from '@mui/material'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useFeedOwner } from '../../contexts/index.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { CardType } from '../share.js'\nimport { Label } from './common.js'\n\nconst useStyles = makeStyles<void, 'verboseToken'>()((theme, _, refs) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    verboseToken: {},\n    token: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: theme.spacing(1),\n        [`&.${refs.verboseToken}`]: {\n            height: 186,\n            justifyContent: 'center',\n        },\n    },\n    value: {\n        color: theme.palette.maskColor.main,\n        marginLeft: theme.spacing(1.5),\n        fontSize: 14,\n        fontWeight: 700,\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isCollectibleApprovalFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.CollectibleApprovalFeed {\n    return feed.tag === Tag.Collectible && feed.type === Type.Approval\n}\n\ninterface CollectibleApprovalFeedCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.CollectibleApprovalFeed\n}\n\n/**\n * CollectibleApprovalCard.\n * Including:\n *\n * - CollectibleApproval\n */\nexport function CollectibleApprovalCard({ feed, ...rest }: CollectibleApprovalFeedCardProps) {\n    const { verbose } = rest\n    const { classes, cx } = useStyles()\n\n    const action = feed.actions[0]\n    const metadata = action.metadata\n\n    const owner = useFeedOwner()\n    const user = useAddressLabel(owner.address)\n\n    return (\n        <CardFrame type={CardType.CollectibleApproval} feed={feed} {...rest}>\n            <Typography className={classes.summary}>\n                <RSS3Trans.collectible_approval\n                    values={{\n                        user,\n                        collection: metadata?.collection!,\n                        contract: formatEthereumAddress(action.address_to!, 4),\n                        context: metadata?.action,\n                    }}\n                    components={{\n                        bold: <Label />,\n                    }}\n                />\n            </Typography>\n            {metadata ? (\n                <div className={cx(classes.token, verbose ? classes.verboseToken : null)}>\n                    <Typography className={classes.value}>{metadata.collection}</Typography>\n                </div>\n            ) : null}\n        </CardFrame>\n    )\n}\n","import { Image } from '@masknet/shared'\nimport { makeStyles, ShadowRootTooltip, TextOverflowTooltip } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { isSameAddress, resolveResourceURL } from '@masknet/web3-shared-base'\nimport { formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { Typography } from '@mui/material'\nimport { useMemo } from 'react'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { CardType, getCost, getLastAction } from '../share.js'\nimport { AddressLabel, formatValue, Label } from './common.js'\n\nconst useStyles = makeStyles<void, 'image' | 'verbose' | 'info' | 'center' | 'failedImage'>()((theme, _, refs) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    verbose: {},\n    image: {\n        img: {\n            objectFit: 'cover',\n        },\n    },\n    center: {},\n    failedImage: {},\n    soloImage: {\n        // If only single image, place it center\n        marginTop: theme.spacing(5),\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        marginTop: theme.spacing(1.5),\n        [`&.${refs.center}`]: {\n            alignItems: 'center',\n        },\n        [`&.${refs.verbose}`]: {\n            display: 'block',\n            [`.${refs.image}`]: {\n                width: 552,\n                height: 'auto',\n                aspectRatio: 'auto',\n            },\n            [`.${refs.image}.${refs.failedImage}`]: {\n                height: 100,\n                width: 100,\n                marginLeft: 'auto',\n                marginRight: 'auto',\n            },\n            [`.${refs.info}`]: {\n                marginLeft: 0,\n                marginTop: theme.spacing(1.5),\n            },\n        },\n        [`.${refs.image}`]: {\n            width: 64,\n            height: 64,\n            aspectRatio: '1 / 1',\n            borderRadius: 8,\n            overflow: 'hidden',\n            flexShrink: 0,\n        },\n    },\n    info: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        fontSize: 14,\n        color: theme.palette.maskColor.main,\n        lineHeight: '18px',\n        marginLeft: theme.spacing(1.5),\n        overflow: 'auto',\n    },\n    title: {\n        fontWeight: 700,\n    },\n    subtitle: {\n        fontWeight: 400,\n        display: '-webkit-box',\n        WebkitBoxOrient: 'vertical',\n        WebkitLineClamp: 2,\n        overflow: 'hidden',\n    },\n    attributes: {\n        display: 'grid',\n        marginTop: theme.spacing(1.5),\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        gridGap: theme.spacing(2, 2),\n    },\n    attribute: {\n        backgroundColor: theme.palette.maskColor.bg,\n        padding: theme.spacing(1.5),\n        borderRadius: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'space-between',\n        flexGrow: 0,\n        flexShrink: 0,\n        overflow: 'hidden',\n    },\n    attributeType: {\n        color: theme.palette.maskColor.second,\n        textTransform: 'uppercase',\n        fontSize: 14,\n        fontWeight: 400,\n    },\n    attributeValue: {\n        color: theme.palette.maskColor.main,\n        fontSize: 14,\n        fontWeight: 700,\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isCollectibleFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.CollectibleFeed {\n    return feed.tag === Tag.Collectible && [Type.Mint, Type.Trade, Type.Transfer, Type.Burn].includes(feed.type)\n}\n\nfunction isRegisteringENS(feed: RSS3BaseAPI.CollectibleFeed) {\n    return feed.actions[1]?.platform === 'ENS Registrar'\n}\n\ninterface CollectibleCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.CollectibleFeed\n}\n\n/**\n * CollectibleCard\n * Including:\n *\n * - CollectibleIn\n * - CollectibleBurn\n * - CollectibleIn\n * - CollectibleMint\n * - CollectibleOut\n */\nexport function CollectibleCard({ feed, ...rest }: CollectibleCardProps) {\n    const { verbose } = rest\n    const { classes, cx } = useStyles()\n\n    const user = useAddressLabel(feed.owner)\n\n    const { metadata, cardType, summary } = useMemo(() => {\n        let action\n        let metadata\n        switch (feed.type) {\n            case Type.Mint:\n                // If only one action, it should be free minting\n                metadata = getLastAction(feed as RSS3BaseAPI.CollectibleMintFeed).metadata\n                return {\n                    cardType: CardType.CollectibleMint,\n                    metadata,\n                    summary: (\n                        <RSS3Trans.collectible_mint\n                            values={{\n                                user,\n                                collectible: verbose ? metadata!.name : 'an NFT',\n                                cost_value: formatValue(metadata?.cost),\n                                cost_symbol: metadata?.cost?.symbol ?? '',\n                                context: metadata?.cost ? 'cost' : 'no_cost',\n                            }}\n                            components={{\n                                user: <Label />,\n                                cost: <Label />,\n                                collectible: verbose ? <Label /> : <span />,\n                            }}\n                        />\n                    ),\n                }\n            case Type.Trade:\n                action = getLastAction(feed as RSS3BaseAPI.CollectibleTradeFeed)\n                metadata = action.metadata\n                const cost = getCost(feed as RSS3BaseAPI.CollectibleTradeFeed)\n                return {\n                    cardType: CardType.CollectibleOut,\n                    metadata,\n                    summary: (\n                        <RSS3Trans.collectible_trade\n                            values={{\n                                user,\n                                collectible: verbose ? metadata!.name : 'an NFT',\n                                recipient: formatEthereumAddress(action.address_to ?? '', 4),\n                                cost_value: formatValue(cost),\n                                cost_symbol: cost?.symbol ?? '',\n                                platform: feed.platform!,\n                                context: feed.platform ? 'platform' : 'no_platform',\n                            }}\n                            components={{\n                                recipient: <AddressLabel address={action.address_to} />,\n                                bold: <Label />,\n                                collectible: verbose ? <Label /> : <span />,\n                            }}\n                        />\n                    ),\n                }\n            case Type.Transfer:\n                if (isRegisteringENS(feed)) {\n                    return {\n                        cardType: CardType.CollectibleIn,\n                        metadata: feed.actions[1].metadata,\n                        summary: (\n                            <RSS3Trans.collectible_register_ens\n                                values={{\n                                    user,\n                                    ens: verbose ? feed.actions[1].metadata!.name : 'an ENS',\n                                    cost_value: formatValue(\n                                        (feed.actions[0] as RSS3BaseAPI.CollectibleTransferAction).metadata,\n                                    ),\n                                    cost_symbol: feed.actions[0].metadata?.symbol ?? '',\n                                }}\n                                components={{\n                                    user: <Label />,\n                                    cost: <Label />,\n                                    ens: verbose ? <Label /> : <span />,\n                                }}\n                            />\n                        ),\n                    }\n                }\n                action = getLastAction(feed as RSS3BaseAPI.CollectibleTransferFeed)\n                metadata = action.metadata\n                const standard = feed.actions[0].metadata?.standard\n                const costMetadata: RSS3BaseAPI.TransactionMetadata | undefined =\n                    standard && ['Native', 'ERC-20'].includes(standard)\n                        ? (feed.actions[0].metadata as RSS3BaseAPI.TransactionMetadata)\n                        : undefined\n                const isSending = isSameAddress(feed.owner, action.address_from)\n                const otherAddress = isSending ? action.address_to : action.address_from\n                return {\n                    cardType: isSending ? CardType.CollectibleOut : CardType.CollectibleIn,\n                    metadata,\n                    summary: (\n                        <RSS3Trans.collectible_operation\n                            values={{\n                                user,\n                                collectible: verbose ? metadata!.name : 'an NFT',\n                                other: formatEthereumAddress(otherAddress ?? '', 4),\n                                context: isSending ? 'send' : costMetadata ? 'claim_cost' : 'claim',\n                                cost_value: formatValue(costMetadata),\n                                cost_symbol: costMetadata?.symbol!,\n                            }}\n                            components={{\n                                user: <Label />,\n                                other: <AddressLabel address={otherAddress} />,\n                                collectible: verbose ? <Label /> : <span />,\n                                cost: <Label />,\n                            }}\n                        />\n                    ),\n                }\n            case Type.Burn:\n                metadata = getLastAction(feed as RSS3BaseAPI.CollectibleBurnFeed).metadata\n                return {\n                    cardType: CardType.CollectibleBurn,\n                    metadata,\n                    summary: (\n                        <RSS3Trans.collectible_burn\n                            values={{\n                                user,\n                                collectible: verbose ? metadata!.name : 'an NFT',\n                            }}\n                            components={{\n                                user: <Label />,\n                                collectible: verbose ? <Label /> : <span />,\n                            }}\n                        />\n                    ),\n                }\n        }\n\n        return { summary: '', cardType: CardType.CollectibleIn }\n    }, [feed, user])\n\n    const imageWidth = verbose ? '100%' : 64\n    const imageHeight = verbose ? 'auto' : 64\n    const attributes = metadata && 'attributes' in metadata ? metadata.attributes?.filter((x) => x.trait_type) : []\n    const soloImage = verbose && !metadata?.description && !attributes?.length\n\n    return (\n        <CardFrame type={cardType} feed={feed} {...rest}>\n            <Typography className={classes.summary}>{summary}</Typography>\n            {metadata ? (\n                <div\n                    className={cx(classes.body, {\n                        [classes.verbose]: verbose,\n                        [classes.center]: !verbose && !metadata.description,\n                    })}>\n                    <Image\n                        classes={{\n                            container: cx(classes.image, soloImage ? classes.soloImage : undefined),\n                            failed: classes.failedImage,\n                        }}\n                        src={resolveResourceURL(metadata.image)}\n                        width={imageWidth}\n                        height={imageHeight}\n                    />\n                    <div className={classes.info}>\n                        {verbose ? null : <Typography className={classes.title}>{metadata.name}</Typography>}\n                        {metadata.description ? (\n                            <Typography className={classes.subtitle}>{metadata.description}</Typography>\n                        ) : null}\n                    </div>\n                    {verbose && attributes?.length ? (\n                        <div className={classes.attributes}>\n                            {attributes.map((attribute) => {\n                                const value = Array.isArray(attribute.value)\n                                    ? attribute.value.map((x) => x.uri).join('\\n')\n                                    : attribute.value\n\n                                return (\n                                    <div className={classes.attribute} key={attribute.trait_type}>\n                                        <Typography className={classes.attributeType}>\n                                            {attribute.trait_type}\n                                        </Typography>\n                                        <TextOverflowTooltip title={value} as={ShadowRootTooltip}>\n                                            <Typography className={classes.attributeValue}>{value}</Typography>\n                                        </TextOverflowTooltip>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    ) : null}\n                </div>\n            ) : null}\n        </CardFrame>\n    )\n}\n","import * as React from 'react';\nimport { Options, options, tokenize } from 'linkifyjs';\n\n/**\n * Given a string, converts to an array of valid React components\n * (which may include strings)\n * @param {string} str\n * @param {Options} opts\n * @param {{ [elementId: string]: number }} meta\n * @returns {React.ReactNodeArray}\n */\nfunction stringToElements(str, opts, meta) {\n  const tokens = tokenize(str);\n  const elements = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.t === 'nl' && opts.get('nl2br')) {\n      const key = `__linkify-el-${meta.elementId++}`;\n      elements.push(React.createElement('br', {\n        key\n      }));\n    } else if (!token.isLink || !opts.check(token)) {\n      // Regular text\n      elements.push(token.toString());\n    } else {\n      let rendered = opts.render(token);\n      if (!('key' in rendered.props)) {\n        // Ensure generated element has unique key\n        const key = `__linkify-el-${meta.elementId++}`;\n        const props = options.assign({\n          key\n        }, rendered.props);\n        rendered = React.cloneElement(rendered, props);\n      }\n      elements.push(rendered);\n    }\n  }\n  return elements;\n}\n\n// Recursively linkify the contents of the given React Element instance\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {React.ReactElement<P, T>} element\n * @param {Options} opts\n * @param {{ [elementId: string]: number }} meta\n * @returns {React.ReactElement<P, T>}\n */\nfunction linkifyReactElement(element, opts, meta) {\n  if (React.Children.count(element.props.children) === 0) {\n    // No need to clone if the element had no children\n    return element;\n  }\n  const children = [];\n  React.Children.forEach(element.props.children, child => {\n    if (typeof child === 'string') {\n      // ensure that we always generate unique element IDs for keys\n      children.push.apply(children, stringToElements(child, opts, meta));\n    } else if (React.isValidElement(child)) {\n      if (typeof child.type === 'string' && opts.ignoreTags.indexOf(child.type.toUpperCase()) >= 0) {\n        // Don't linkify this element\n        children.push(child);\n      } else {\n        children.push(linkifyReactElement(child, opts, meta));\n      }\n    } else {\n      // Unknown element type, just push\n      children.push(child);\n    }\n  });\n\n  // Set a default unique key, copy over remaining props\n  const key = `__linkify-el-${meta.elementId++}`;\n  const newProps = options.assign({\n    key\n  }, element.props);\n  return React.cloneElement(element, newProps, children);\n}\n\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {P & { as?: T, tagName?: T, options?: import('linkifyjs').Opts, children?: React.ReactNode}} props\n * @returns {React.ReactElement<P, T>}\n */\nconst Linkify = props => {\n  // Copy over all non-linkify-specific props\n  let linkId = 0;\n  const defaultLinkRender = _ref => {\n    let {\n      tagName,\n      attributes,\n      content\n    } = _ref;\n    attributes.key = `__linkify-lnk-${linkId++}`;\n    if (attributes.class) {\n      attributes.className = attributes.class;\n      delete attributes.class;\n    }\n    return React.createElement(tagName, attributes, content);\n  };\n  const newProps = {\n    key: '__linkify-wrapper'\n  };\n  for (const prop in props) {\n    if (prop !== 'options' && prop !== 'as' && prop !== 'tagName' && prop !== 'children') {\n      newProps[prop] = props[prop];\n    }\n  }\n  const opts = new Options(props.options, defaultLinkRender);\n  const as = props.as || props.tagName || React.Fragment || 'span';\n  const children = props.children;\n  const element = React.createElement(as, newProps, children);\n  return linkifyReactElement(element, opts, {\n    elementId: 0\n  });\n};\n\nexport { Linkify as default };\n","import { makeStyles } from '@masknet/theme'\n\n/* eslint-disable tss-unused-classes/unused-classes */\nexport const useMarkdownStyles = makeStyles()((theme) => ({\n    markdown: {\n        wordBreak: 'break-all',\n        overflow: 'auto',\n        img: {\n            maxWidth: '100%',\n        },\n        a: {\n            color: theme.palette.maskColor.highlight,\n        },\n        pre: {\n            overflow: 'auto',\n        },\n    },\n}))\n","import { Image, Markdown } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { resolveResourceURL } from '@masknet/web3-shared-base'\nimport { Typography } from '@mui/material'\nimport Linkify from 'linkify-react'\nimport { RSS3Trans, useRSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { CardType } from '../share.js'\nimport { Label, LinkifyOptions, htmlToPlain } from './common.js'\nimport { useMarkdownStyles } from './useMarkdownStyles.js'\n\nconst useStyles = makeStyles<void, 'image' | 'verbose' | 'content' | 'failedImage'>()((theme, _, refs) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    comment: {\n        color: theme.palette.maskColor.main,\n    },\n    image: {},\n    failedImage: {},\n    verbose: {},\n    target: {\n        display: 'flex',\n        alignItems: 'center',\n        border: `1px solid ${theme.palette.maskColor.line}`,\n        padding: theme.spacing(1),\n        borderRadius: 8,\n        marginTop: theme.spacing(1.5),\n        color: theme.palette.maskColor.main,\n        [`.${refs.image}`]: {\n            width: 64,\n            height: 64,\n            borderRadius: 8,\n            overflow: 'hidden',\n            flexShrink: 0,\n            marginRight: theme.spacing(1.5),\n        },\n        [`&.${refs.verbose}`]: {\n            display: 'block',\n            [`.${refs.image}`]: {\n                width: '100%',\n                height: '100%',\n                borderRadius: 8,\n                marginTop: theme.spacing(1),\n            },\n            [`.${refs.image}.${refs.failedImage}`]: {\n                height: 100,\n                width: 100,\n                marginLeft: 'auto',\n                marginRight: 'auto',\n            },\n            [`.${refs.content}`]: {\n                marginLeft: 0,\n                maxHeight: 'none',\n                display: 'block',\n            },\n        },\n    },\n    originalLabel: {\n        fontSize: 14,\n        color: theme.palette.maskColor.second,\n    },\n    title: {\n        fontSize: '16px',\n        fontWeight: 700,\n        margin: theme.spacing(0.5, 0),\n    },\n    content: {\n        color: theme.palette.maskColor.main,\n        whiteSpace: 'pre-wrap',\n        display: '-webkit-box',\n        WebkitBoxOrient: 'vertical',\n        WebkitLineClamp: 3,\n        overflow: 'hidden',\n        wordBreak: 'break-all',\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isCommentFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.CommentFeed {\n    return feed.tag === Tag.Social && feed.type === Type.Comment\n}\n\ninterface CommentCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.CommentFeed\n}\n\n/**\n * CommentCard\n * Including:\n *\n * - NoteLink\n */\nexport function CommentCard({ feed, ...rest }: CommentCardProps) {\n    const { verbose } = rest\n    const { classes, cx } = useStyles()\n    const { classes: mdClasses } = useMarkdownStyles()\n\n    const t = useRSS3Trans()\n\n    const action = feed.actions[0]\n    const metadata = action.metadata\n\n    const user = useAddressLabel(feed.owner)\n    const commentTarget = metadata?.target\n\n    const imageSize = verbose ? '100%' : 64\n\n    return (\n        <CardFrame type={CardType.NoteLink} feed={feed} {...rest}>\n            <Typography className={classes.summary}>\n                <RSS3Trans.note\n                    values={{\n                        user,\n                        platform: action.platform!,\n                        context: 'comment',\n                    }}\n                    components={{\n                        bold: <Label />,\n                    }}\n                />\n            </Typography>\n            <Typography className={classes.comment}>\n                <Linkify options={LinkifyOptions}>{metadata?.body}</Linkify>\n            </Typography>\n            <article className={cx(classes.target, verbose ? classes.verbose : null)}>\n                {verbose ? <Typography className={classes.originalLabel}>{t.original()}</Typography> : null}\n                {commentTarget?.media?.[0].mime_type?.startsWith('image/') ? (\n                    <Image\n                        classes={{ container: classes.image, failed: classes.failedImage }}\n                        src={resolveResourceURL(commentTarget.media[0].address)}\n                        height={imageSize}\n                        width={imageSize}\n                    />\n                ) : null}\n                <div>\n                    {commentTarget?.title ? (\n                        <Typography variant=\"h1\" className={classes.title}>\n                            {commentTarget?.title}\n                        </Typography>\n                    ) : null}\n                    {verbose && commentTarget?.body ? (\n                        <Markdown defaultStyle={false} className={mdClasses.markdown}>\n                            {commentTarget.body}\n                        </Markdown>\n                    ) : (\n                        <Typography className={classes.content}>\n                            <Linkify options={LinkifyOptions}>{htmlToPlain(commentTarget?.body)}</Linkify>\n                        </Typography>\n                    )}\n                </div>\n            </article>\n        </CardFrame>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { range } from 'lodash-es'\nimport { Children, useState, useRef, type CSSProperties, type HTMLProps, useEffect, useLayoutEffect } from 'react'\n\nconst useStyles = makeStyles<void, 'active'>()((theme, _, refs) => ({\n    container: {},\n    slider: {\n        width: '100%',\n    },\n    sliderWrapper: {\n        transition: 'transform 0.2s ease-in-out',\n        display: 'flex',\n    },\n    slide: {\n        width: '100%',\n    },\n    sliderControllers: {\n        display: 'flex',\n    },\n    indicators: {\n        display: 'flex',\n        gap: 1.5,\n        margin: 'auto',\n        [`.${refs.active}`]: {\n            backgroundColor: theme.palette.maskColor.second,\n        },\n    },\n    indicator: {\n        width: 3,\n        height: 3,\n        display: 'inline-block',\n        borderRadius: '50%',\n        backgroundColor: theme.palette.maskColor.third,\n    },\n    active: {},\n}))\n\ninterface Props extends HTMLProps<HTMLDivElement> {\n    onUpdate?(index: number): void\n}\n\nexport function Slider({ children, className, onUpdate, ...rest }: Props) {\n    const containerRef = useRef<HTMLDivElement>(null)\n    const { classes, cx } = useStyles()\n    const [index, setIndex] = useState(0)\n\n    const count = Children.count(children)\n    const [style, setStyle] = useState<CSSProperties>({})\n    useLayoutEffect(() => {\n        if (!containerRef.current) return\n        const offsetWidth = containerRef.current.offsetWidth\n        setStyle({\n            width: offsetWidth * count,\n            transform: `RSS3Trans(${-offsetWidth * index}px, 0)`,\n        })\n    }, [count, index])\n\n    useEffect(() => {\n        onUpdate?.(index)\n    }, [onUpdate, index])\n\n    return (\n        <div className={cx(classes.container, className)} ref={containerRef} {...rest}>\n            <div className={classes.slider}>\n                <div className={classes.sliderWrapper} style={style}>\n                    {Children.map(children, (child, index) => (\n                        <div key={index} className={classes.slide} style={{ width: containerRef.current?.offsetWidth }}>\n                            {child}\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className={classes.sliderControllers}>\n                <Icons.LeftArrow\n                    size={18}\n                    onClick={(event) => {\n                        event.stopPropagation()\n                        setIndex((idx) => (((idx - 1) % count) + count) % count)\n                    }}\n                />\n                <div className={classes.indicators}>\n                    {range(count).map((idx) => {\n                        return <i className={cx(classes.indicator, index === idx ? classes.active : null)} key={idx} />\n                    })}\n                </div>\n                <Icons.RightArrow\n                    size={18}\n                    onClick={(event) => {\n                        event.stopPropagation()\n                        setIndex((idx) => (idx + 1) % count)\n                    }}\n                />\n            </div>\n        </div>\n    )\n}\n","import { Image, Markdown } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { Typography } from '@mui/material'\nimport { type HTMLProps, memo, useState } from 'react'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardType } from '../share.js'\nimport { Slider } from '../Slider.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { formatValue, Label } from './common.js'\nimport { useMarkdownStyles } from './useMarkdownStyles.js'\n\nconst useStyles = makeStyles<void, 'image'>()((theme, _, refs) => ({\n    badge: {\n        display: 'inline-block',\n        height: 18,\n        lineHeight: '18px',\n        borderRadius: 4,\n        marginLeft: theme.spacing(1.5),\n        fontSize: 12,\n        backgroundColor: theme.palette.maskColor.main,\n        color: theme.palette.maskColor.bottom,\n        padding: '0 6px',\n    },\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    content: {\n        marginTop: theme.spacing(1.5),\n        fontSize: 14,\n        fontWeight: 400,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.main,\n        WebkitBoxOrient: 'vertical',\n        WebkitLineClamp: 2,\n        overflow: 'hidden',\n        alignItems: 'flex-start',\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        [`.${refs.image}`]: {\n            width: 64,\n            height: 64,\n            borderRadius: 8,\n            overflow: 'hidden',\n            flexShrink: 0,\n        },\n    },\n    image: {\n        img: {\n            objectFit: 'cover',\n        },\n    },\n    verbose: {\n        [`.${refs.image}`]: {\n            marginTop: theme.spacing(1),\n            aspectRatio: 'auto',\n        },\n    },\n    info: {\n        overflow: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        fontSize: 14,\n        color: theme.palette.maskColor.main,\n        lineHeight: '18px',\n        marginLeft: theme.spacing(1.5),\n        height: 80,\n    },\n    title: {\n        fontWeight: 700,\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n    },\n    subtitle: {\n        fontWeight: 400,\n        overflow: 'hidden',\n        display: '-webkit-box',\n        WebkitBoxOrient: 'vertical',\n        WebkitLineClamp: 2,\n    },\n}))\n\nconst { Tag } = RSS3BaseAPI\nexport function isDonationFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.DonationFeed {\n    return feed.tag === Tag.Donation\n}\n\ninterface DonationCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.DonationFeed\n}\n\ninterface CardBodyProps extends HTMLProps<HTMLDivElement> {\n    metadata: RSS3BaseAPI.DonateMetadata\n}\nconst CardBody = memo(({ metadata, className, ...rest }: CardBodyProps) => {\n    const { classes, cx } = useStyles()\n    return (\n        <div className={cx(classes.body, className)} {...rest}>\n            <Image classes={{ container: classes.image }} src={metadata.logo} height={64} width={64} />\n            <div className={classes.info}>\n                <Typography className={classes.title}>{metadata.title}</Typography>\n                <Typography className={classes.subtitle}>{metadata.description}</Typography>\n            </div>\n        </div>\n    )\n})\n\n/**\n * DonationCard\n * Including:\n *\n * - DonationDonate\n */\nexport function DonationCard({ feed, actionIndex, className, ...rest }: DonationCardProps) {\n    const { verbose } = rest\n    const { classes, cx } = useStyles()\n    const { classes: mdClasses } = useMarkdownStyles()\n\n    const [index, setIndex] = useState(0)\n    const activeActionIndex = actionIndex ?? index\n    // Might mixin a transaction action\n    const availableActions = feed.actions.filter((x) => x.metadata?.title)\n    const action = availableActions[activeActionIndex]\n    const metadata = action.metadata\n\n    const user = useAddressLabel(feed.owner)\n    const actionSize = feed.actions.length\n    const badge = actionSize > 1 ? <Typography className={classes.badge}>+{actionSize}</Typography> : null\n\n    if (verbose) {\n        return (\n            <CardFrame\n                type={CardType.DonationDonate}\n                feed={feed}\n                className={cx(rest.verbose ? classes.verbose : null, className)}\n                badge={badge}\n                {...rest}>\n                <Typography className={classes.summary}>\n                    <RSS3Trans.donation_donate_verbose\n                        values={{\n                            user,\n                            cost_value: formatValue(metadata?.token),\n                            cost_symbol: metadata?.token?.symbol ?? 'Unknown Token',\n                            project: action.metadata?.title ?? 'Unknown Project',\n                        }}\n                        components={{\n                            bold: <Label />,\n                        }}\n                    />\n                </Typography>\n                <Image classes={{ container: classes.image }} src={metadata!.logo} width=\"100%\" />\n                <Markdown className={mdClasses.markdown} defaultStyle={false}>\n                    {metadata!.description}\n                </Markdown>\n            </CardFrame>\n        )\n    }\n\n    return (\n        <CardFrame\n            type={CardType.DonationDonate}\n            feed={feed}\n            actionIndex={activeActionIndex}\n            badge={badge}\n            className={className}\n            {...rest}>\n            <Typography className={classes.summary}>\n                <RSS3Trans.donation_donate\n                    values={{\n                        user,\n                        cost_value: formatValue(metadata?.token),\n                        cost_symbol: metadata?.token?.symbol ?? 'Unknown Token',\n                    }}\n                    components={{\n                        bold: <Label />,\n                    }}\n                />\n            </Typography>\n            {availableActions.length > 1 ? (\n                <Slider className={classes.content} onUpdate={setIndex}>\n                    {availableActions.map((action, index) => (\n                        <CardBody key={index} metadata={action.metadata!} />\n                    ))}\n                </Slider>\n            ) : (\n                <CardBody className={classes.content} metadata={availableActions[0].metadata!} />\n            )}\n        </CardFrame>\n    )\n}\n","import { Image } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { resolveResourceURL } from '@masknet/web3-shared-base'\nimport { Typography } from '@mui/material'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useRSS3Trans } from '../../../locales/index.js'\nimport { useFeedOwner } from '../../contexts/index.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { CardType } from '../share.js'\nimport { Label, formatValue } from './common.js'\n\nconst useStyles = makeStyles<void, 'tokenIcon' | 'supply' | 'withdraw' | 'horizonCenter'>()((theme, _, refs) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    tokenIcon: {},\n    // helper box to center token list in horizontal direction\n    horizonCenter: {},\n    tokenList: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n    },\n    verbose: {\n        [`.${refs.horizonCenter}`]: {\n            minHeight: 186,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n    },\n    token: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: theme.spacing(1),\n        [`.${refs.tokenIcon}`]: {\n            width: 40,\n            height: 40,\n            borderRadius: '50%',\n            overflow: 'hidden',\n        },\n    },\n    supply: {},\n    withdraw: {},\n    value: {\n        color: theme.palette.maskColor.main,\n        marginLeft: theme.spacing(1.5),\n        fontSize: 14,\n        fontWeight: 700,\n        [`&.${refs.supply}`]: {\n            color: theme.palette.maskColor.success,\n        },\n        [`&.${refs.withdraw}`]: {\n            color: theme.palette.maskColor.danger,\n        },\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isLiquidityFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.LiquidityFeed {\n    return feed.tag === Tag.Exchange && feed.type === Type.Liquidity\n}\n\ninterface TokenFeedCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.LiquidityFeed\n}\n\n/**\n * LiquidityCard.\n * Including:\n *\n * - TokenIn\n * - TokenOut\n * - UnknownBurn\n */\nexport function LiquidityCard({ feed, className, ...rest }: TokenFeedCardProps) {\n    const { verbose } = rest\n    const t = useRSS3Trans()\n    const { classes, cx } = useStyles()\n\n    const owner = useFeedOwner()\n    const user = useAddressLabel(owner.address)\n\n    // You might see two transaction actions in a liquidity feed as well\n    const actions = feed.actions.filter((x) => x.tag === Tag.Exchange)\n\n    return (\n        <>\n            {actions.map((action) => {\n                const metadata = action.metadata\n                const isUp = !!metadata?.action && ['supply', 'add', 'repay', 'collect'].includes(metadata?.action)\n\n                return (\n                    <CardFrame\n                        key={`${feed.hash}/${action.index}`}\n                        type={CardType.TokenLiquidity}\n                        feed={feed}\n                        className={cx(className, verbose ? classes.verbose : null)}\n                        {...rest}>\n                        <Typography className={classes.summary}>\n                            <RSS3Trans.liquidity\n                                values={{\n                                    user,\n                                    platform: feed.platform!,\n                                    context: metadata?.action!,\n                                }}\n                                components={{\n                                    user: <Label title={action.address_from} />,\n                                    platform: <Label />,\n                                    bold: <Label />,\n                                }}\n                            />\n                        </Typography>\n                        {metadata?.tokens.length ? (\n                            <div className={classes.horizonCenter}>\n                                <div className={classes.tokenList}>\n                                    {metadata.tokens.map((token) => (\n                                        <div key={token.contract_address} className={classes.token}>\n                                            <Image\n                                                classes={{ container: classes.tokenIcon }}\n                                                src={resolveResourceURL(token.image)}\n                                                height={40}\n                                                width={40}\n                                            />\n                                            <Typography\n                                                className={cx(classes.value, isUp ? classes.supply : classes.withdraw)}>\n                                                {isUp ? '+ ' : '- '}\n                                                {t.token_value({\n                                                    value: formatValue(token),\n                                                    symbol: token.symbol,\n                                                })}\n                                            </Typography>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ) : null}\n                    </CardFrame>\n                )\n            })}\n        </>\n    )\n}\n","import { Lens } from '@masknet/web3-providers'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function usePublicationId(txId: string | null) {\n    return useQuery({\n        queryKey: ['lens', 'transaction-publication-id', txId],\n        queryFn: async () => {\n            if (!txId) return null\n            return Lens.queryTransactionPublicationId(txId)\n        },\n    })\n}\n","import { Icons } from '@masknet/icons'\nimport { Image, Markdown } from '@masknet/shared'\nimport { useEverSeen } from '@masknet/shared-base-ui'\nimport { LoadingBase, makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { resolveIPFS_URL, resolveResourceURL } from '@masknet/web3-shared-base'\nimport { Link, Typography } from '@mui/material'\nimport Linkify from 'linkify-react'\nimport { useCallback } from 'react'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useAddressLabel, usePublicationId } from '../../hooks/index.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { CardType } from '../share.js'\nimport { Label, LinkifyOptions, htmlToPlain } from './common.js'\nimport { useMarkdownStyles } from './useMarkdownStyles.js'\n\nconst useStyles = makeStyles<\n    void,\n    'title' | 'image' | 'content' | 'info' | 'body' | 'center' | 'playButton' | 'failedImage'\n>()((theme, _, refs) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    title: {\n        fontWeight: 700,\n        marginTop: theme.spacing(1),\n        color: theme.palette.maskColor.main,\n    },\n    info: {},\n    center: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    failedImage: {},\n    soloImage: {\n        // If only single image, place it center\n        marginTop: theme.spacing(5),\n        [`&.${refs.image}`]: {\n            marginTop: theme.spacing(5),\n        },\n    },\n    image: {\n        [`& + .${refs.info}`]: {\n            marginLeft: theme.spacing(1.5),\n        },\n        img: {\n            objectFit: 'cover',\n        },\n    },\n    playButton: {\n        color: theme.palette.maskColor.main,\n        width: 64,\n        height: 64,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexShrink: 0,\n        backgroundColor: theme.palette.maskColor.bg,\n        [`& + .${refs.info}`]: {\n            marginLeft: theme.spacing(1.5),\n        },\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginTop: theme.spacing(0.5),\n        [`.${refs.image}`]: {\n            width: 64,\n            aspectRatio: '1 / 1',\n            borderRadius: 8,\n            overflow: 'hidden',\n            flexShrink: 0,\n        },\n    },\n    content: {\n        marginTop: theme.spacing(1),\n        fontSize: 14,\n        color: theme.palette.maskColor.main,\n        lineHeight: '18px',\n        maxHeight: 80,\n        overflow: 'hidden',\n        display: '-webkit-box',\n        WebkitBoxOrient: 'vertical',\n        WebkitLineClamp: 3,\n        wordBreak: 'break-all',\n    },\n    verbose: {\n        [`.${refs.title}`]: {\n            lineHeight: '18px',\n            marginBottom: theme.spacing(1.5),\n        },\n        [`.${refs.body}`]: {\n            display: 'block',\n        },\n        [`.${refs.content}`]: {\n            display: 'block',\n            maxHeight: 'none',\n            overflow: 'unset',\n        },\n        [`.${refs.image}`]: {\n            width: 552,\n            marginTop: theme.spacing(1.5),\n            [`& + .${refs.info}`]: {\n                marginTop: theme.spacing(1.5),\n                marginLeft: 0,\n            },\n            aspectRatio: 'auto',\n            img: {\n                objectFit: 'unset',\n            },\n        },\n        [`.${refs.image}.${refs.failedImage}`]: {\n            height: 100,\n            width: 100,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n        [`.${refs.info}`]: {\n            marginLeft: 0,\n        },\n        [`.${refs.playButton}`]: {\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isNoteFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.NoteFeed {\n    return feed.tag === Tag.Social && [Type.Post, Type.Revise, Type.Mint, Type.Share].includes(feed.type)\n}\n\ninterface NoteCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.NoteFeed\n}\n\nconst cardTypeMap = {\n    [Type.Mint]: CardType.NoteMint,\n    [Type.Post]: CardType.NoteCreate,\n    [Type.Revise]: CardType.NoteEdit,\n    [Type.Share]: CardType.NoteLink,\n} as const\n\nconst toHex = (num: number) => {\n    const str = num.toString(16)\n    return str.length % 2 === 0 ? str : str.padStart(str.length + 1, '0')\n}\n\nfunction resolveDetailLink(\n    publicationId?: string | null,\n    metadata?: RSS3BaseAPI.PostMetadata,\n    related_urls?: string[],\n) {\n    if (publicationId) return `https://lenstube.xyz/watch/${publicationId}`\n    if (!metadata) return null\n\n    const { profile_id, publication_id } = metadata\n    if (!profile_id || !publication_id || !related_urls?.length) return null\n\n    const pubId = `0x${toHex(profile_id)}-0x${toHex(publication_id)}`\n    return related_urls.find((x) => x.toLowerCase().endsWith(pubId))\n}\n\n/**\n * NoteCard\n * Including:\n *\n * - NoteMint\n * - NoteCreate\n * - NoteEdit\n * - NoteLink\n */\nexport function NoteCard({ feed, className, ...rest }: NoteCardProps) {\n    const { classes, cx } = useStyles()\n    const { classes: mdClasses } = useMarkdownStyles()\n\n    // You might see a collectible action on a note minting feed\n    const action = feed.actions.filter((x) => x.tag === Tag.Social)[0]\n    const metadata = 'target' in action.metadata! ? action.metadata.target : action.metadata\n\n    const user = useAddressLabel(feed.owner)\n    const type = action.type\n\n    const imageSize = rest.verbose ? '100%' : 64\n    const transformUri = useCallback(\n        (uri: string) => {\n            if (action.platform === 'Planet' && action.related_urls?.[0] && !uri.match(/^https?:\\/\\//))\n                return `https://thumbor.rss3.dev/unsafe/${action.related_urls[0]}/${uri}`\n            return resolveIPFS_URL(uri)!\n        },\n        [action.platform, action.related_urls?.[0]],\n    )\n\n    const media = metadata?.media?.[0]\n    const [seen, ref] = useEverSeen()\n    const enablePublicationId = seen && !!media?.mime_type.startsWith('video/')\n    const { data: publicationId, isLoading } = usePublicationId(enablePublicationId ? feed.hash : null)\n\n    // Image post on Forcaster\n    const isImagePost = metadata?.body ? /https?:\\/\\/.*?\\.(jpg|png)$/.test(metadata.body) : false\n    const soloImage = rest.verbose && isImagePost\n\n    return (\n        <CardFrame\n            type={cardTypeMap[type]}\n            feed={feed}\n            className={cx(rest.verbose ? classes.verbose : null, className)}\n            {...rest}>\n            <Typography className={classes.summary}>\n                <RSS3Trans.note\n                    values={{\n                        user,\n                        platform: action.platform!,\n                        context: type,\n                    }}\n                    components={{\n                        bold: <Label />,\n                    }}\n                />\n            </Typography>\n            <div className={classes.body} ref={ref}>\n                {media?.mime_type.startsWith('image/') || isImagePost ? (\n                    <Image\n                        classes={{\n                            container: cx(classes.image, soloImage ? classes.soloImage : undefined),\n                            failed: classes.failedImage,\n                        }}\n                        src={isImagePost ? metadata!.body : resolveResourceURL(media!.address)}\n                        height={imageSize}\n                        width={imageSize}\n                    />\n                ) : media?.mime_type.startsWith('video/') ? (\n                    <Link\n                        className={classes.playButton}\n                        href={\n                            resolveDetailLink(publicationId, metadata, action.related_urls) ||\n                            resolveResourceURL(media.address)\n                        }\n                        target=\"_blank\"\n                        onClick={(evt) => evt.stopPropagation()}>\n                        {isLoading ? <LoadingBase size={36} /> : <Icons.Play size={64} />}\n                    </Link>\n                ) : null}\n                <div className={cx(classes.info, metadata?.title || rest.verbose ? null : classes.center)}>\n                    {metadata?.title ? <Typography className={classes.title}>{metadata.title}</Typography> : null}\n                    {isImagePost ? null : rest.verbose && metadata?.body ? (\n                        <Markdown\n                            className={mdClasses.markdown}\n                            defaultStyle={false}\n                            transformLinkUri={transformUri}\n                            transformImageUri={transformUri}>\n                            {metadata.body}\n                        </Markdown>\n                    ) : (\n                        <Typography className={classes.content}>\n                            <Linkify options={LinkifyOptions}>\n                                {htmlToPlain(metadata?.summary || metadata?.body)}\n                            </Linkify>\n                        </Typography>\n                    )}\n                </div>\n            </div>\n        </CardFrame>\n    )\n}\n","import { memo, useMemo } from 'react'\nimport { v4 as uuid } from 'uuid'\n\ninterface Props {\n    handle: string\n    size?: number | string\n    className?: string\n}\nexport const LensAvatar = memo<Props>(({ handle, size, className }) => {\n    const id1 = useMemo(uuid, [])\n    const id2 = useMemo(uuid, [])\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={size ?? 100}\n            height={size ?? 100}\n            className={className}\n            fill=\"none\"\n            viewBox=\"0 0 450 450\">\n            <defs>\n                <linearGradient id={id1} x1={-137} x2={415} y1={-236} y2={486} gradientUnits=\"userSpaceOnUse\">\n                    <stop stopColor=\"#fff\" />\n                    <stop offset={1} stopColor=\"#fff\" stopOpacity={0.2} />\n                </linearGradient>\n                <clipPath id={id2}>\n                    <rect width={450} height={450} fill=\"#fff\" rx={16} />\n                </clipPath>\n            </defs>\n            <g clipPath={`url(#${id2})`}>\n                <path fill=\"#ABFE2C\" d=\"M0 0h450v450H0z\" />\n                <path\n                    fill=\"#00501e\"\n                    d=\"m231.3 345.6.1.2-.3-67a113.6 113.6 0 0 0 99.7 58.6 115 115 0 0 0 48.9-10.8l-5.8-10a103.9 103.9 0 0 1-120.5-25.5l4.3 2.9a77 77 0 0 0 77.9 1l-5.7-10-2 1.1a66.4 66.4 0 0 1-96.5-54c19-1.1-30.8-1.1-12 .1a66.4 66.4 0 0 1-98.5 52.8l-5.7 10 2.4 1.2a76.1 76.1 0 0 0 79.8-5 103.9 103.9 0 0 1-120.6 25.5l-5.7 9.9a115 115 0 0 0 138.5-32.2c3.8-4.8 7.2-10 10-15.3l.6 66.9v-.4h11Z\"\n                />\n                <path\n                    stroke=\"#00501e\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={8.3}\n                    d=\"M241.6 182.8c-2.4 6.6-9.6 12.2-19.2 12.2-9.3 0-17.3-5.3-19.4-12.4\"\n                />\n                <g fill=\"#00501e\">\n                    <path d=\"M187.3 158.6a11.9 11.9 0 1 1-23.8 0 11.9 11.9 0 0 1 23.8 0ZM271.1 158.6a11.9 11.9 0 1 1-23.8 0 11.9 11.9 0 0 1 23.8 0Z\" />\n                </g>\n                <path\n                    stroke=\"#00501e\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={8.3}\n                    d=\"M148.8 166.4c0-14.6 13.8-26.4 30.8-26.4s30.8 11.8 30.8 26.4m23.2 0c0-14.6 13.8-26.4 30.8-26.4s30.8 11.8 30.8 26.4\"\n                />\n                <path\n                    stroke=\"#00501e\"\n                    strokeMiterlimit={10}\n                    strokeWidth={11.2}\n                    d=\"m279.1 100.3-3.2 3.3.1-4.6v-4.7c-1.8-65.4-100.3-65.4-102.1 0l-.1 4.7v4.6l-3.1-3.3-3.4-3.3C119.8 52 50 121.7 95 169.2l3.3 3.4c54.3 54.2 126.6 54.4 126.6 54.4s72.3-.2 126.5-54.4l3.3-3.4C399.7 121.7 330 52 282.5 97l-3.4 3.3Z\"\n                />\n                <path fill=\"#ABFE2C\" d=\"M0 370h450v80H0z\" />\n                <text\n                    x={225}\n                    y={410}\n                    fill=\"#00501E\"\n                    dominantBaseline=\"middle\"\n                    fontFamily=\"Space Grotesk\"\n                    fontSize={24}\n                    fontWeight={500}\n                    letterSpacing=\"0em\"\n                    textAnchor=\"middle\">\n                    @{handle}\n                </text>\n                <rect width={444} height={444} x={2.5} y={2.5} stroke={`url(#${id1})`} strokeWidth={5} rx={13} />\n                <path\n                    fill=\"#fff\"\n                    fillOpacity={0.8}\n                    d=\"M70 423a14 14 0 0 1-13-1c2 1 5 1 8-1l-1-2h-1a9 9 0 0 1-8 0 9 9 0 0 1-4-6c3-1 11-2 17-8v-1a8 8 0 0 0 3-6c0-2-1-4-3-5-1-2-3-3-5-3l-5 1-3-4c-2-2-4-2-6-2s-4 0-5 2l-3 4-5-1-6 3-2 5a8 8 0 0 0 2 6l1 1c6 6 14 7 17 8a9 9 0 0 1-4 6 9 9 0 0 1-9 0l-2 2h1c2 2 5 2 8 1a14 14 0 0 1-13 1h-1l-1 2 1 1c3 1 7 2 10 1a16 16 0 0 0 10-6v6h3v-6a16 16 0 0 0 13 6l7-1 1-1-2-2Zm-27-29v-1c1-4 4-6 6-6 3 0 6 2 6 6v5l2-3h1v-1c3-2 6-1 8 0 2 2 3 6 0 8v1c-7 7-17 7-17 7s-9 0-16-7l-1-1c-3-2-2-6 0-8l4-1 4 1 1 1 3 3-1-4Z\"\n                />\n            </g>\n        </svg>\n    )\n})\n\nLensAvatar.displayName = 'LensAvatar'\n","import { Image } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { resolveResourceURL } from '@masknet/web3-shared-base'\nimport { Typography } from '@mui/material'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { CardType } from '../share.js'\nimport { LensAvatar } from './LensAvatar.js'\nimport { Label } from './common.js'\n\nconst useStyles = makeStyles<void, 'image' | 'verbose' | 'info' | 'center'>()((theme, _, refs) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    verbose: {},\n    image: {},\n    center: {},\n    body: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        marginTop: theme.spacing(1.5),\n        [`&.${refs.center}`]: {\n            alignItems: 'center',\n        },\n        [`&.${refs.verbose}`]: {\n            display: 'block',\n            [`.${refs.image}`]: {\n                width: 552,\n            },\n            [`.${refs.info}`]: {\n                marginLeft: 0,\n                marginTop: theme.spacing(1.5),\n            },\n        },\n        [`.${refs.image}`]: {\n            width: 64,\n            aspectRatio: '1 / 1',\n            borderRadius: 8,\n            overflow: 'hidden',\n            flexShrink: 0,\n        },\n    },\n    info: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        fontSize: 14,\n        color: theme.palette.maskColor.main,\n        lineHeight: '18px',\n        marginLeft: theme.spacing(1.5),\n    },\n    title: {\n        fontWeight: 700,\n    },\n    bio: {\n        fontWeight: 400,\n        display: '-webkit-box',\n        WebkitBoxOrient: 'vertical',\n        WebkitLineClamp: 2,\n        overflow: 'hidden',\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isProfileFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.ProfileFeed {\n    return feed.tag === Tag.Social && feed.type === Type.Profile\n}\n\ninterface ProfileCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.ProfileFeed\n}\n\n/**\n * ProfileCard\n * Including:\n *\n * - ProfileCreate\n */\nexport function ProfileCard({ feed, ...rest }: ProfileCardProps) {\n    const { verbose } = rest\n    const { classes, cx } = useStyles()\n\n    const user = useAddressLabel(feed.owner)\n\n    const action = feed.actions[0]\n    const metadata = action.metadata\n\n    const imageSize = verbose ? '100%' : 64\n\n    return (\n        <CardFrame\n            type={metadata?.action === 'update' ? CardType.ProfileUpdate : CardType.ProfileCreate}\n            feed={feed}\n            {...rest}>\n            <Typography className={classes.summary}>\n                <RSS3Trans.profile\n                    values={{\n                        user,\n                        platform: metadata?.platform!,\n                        context: metadata?.action,\n                    }}\n                    components={{\n                        user: <Label />,\n                        platform: <Label />,\n                    }}\n                />\n            </Typography>\n            {metadata ? (\n                <div\n                    className={cx(classes.body, {\n                        [classes.verbose]: verbose,\n                        [classes.center]: !metadata.bio && !verbose,\n                    })}>\n                    {metadata.source === 'Lens' ? (\n                        <LensAvatar handle={metadata.handle} size={imageSize} />\n                    ) : metadata.profile_uri ? (\n                        <Image\n                            classes={{ container: classes.image }}\n                            src={resolveResourceURL(metadata.profile_uri[0])}\n                            height={imageSize}\n                            width={imageSize}\n                        />\n                    ) : null}\n                    <div className={classes.info}>\n                        <Typography className={classes.title}>{metadata.name || metadata.handle}</Typography>\n                        {metadata.bio ? <Typography className={classes.bio}>{metadata.bio}</Typography> : null}\n                    </div>\n                </div>\n            ) : null}\n        </CardFrame>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { Image } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { formatDomainName } from '@masknet/web3-shared-evm'\nimport { Typography } from '@mui/material'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { CardType } from '../share.js'\nimport { Label } from './common.js'\n\nconst useStyles = makeStyles<void, 'body'>()((theme, _, refs) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n        fontSize: 14,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: theme.spacing(1.5),\n        gap: theme.spacing(2),\n    },\n    verbose: {\n        [`.${refs.body}`]: {\n            height: 186,\n            justifyContent: 'center',\n        },\n    },\n\n    user: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    name: {\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        fontSize: 14,\n        marginLeft: theme.spacing(1),\n    },\n    image: {\n        height: 32,\n        width: 32,\n        borderRadius: '50%',\n        overflow: 'hidden',\n    },\n    avatar: {\n        height: 32,\n        width: 32,\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isProfileLinkFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.ProfileLinkFeed {\n    return feed.tag === Tag.Social && [Type.Follow, Type.Unfollow].includes(feed.type)\n}\n\ninterface ProfileLinkCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.ProfileLinkFeed\n}\n\nconst suffixMap: Record<string, string> = {\n    Crossbell: '.csb',\n    Lens: '.lens',\n    ENS: '.eth',\n}\nconst resolveHandle = (metadata: RSS3BaseAPI.FollowMetadata) => {\n    if (!metadata.handle) return ''\n    const handle = metadata.handle.toLowerCase()\n    const suffix = (metadata.platform && suffixMap[metadata.platform]) || ''\n    // handle might contain suffix at this time.\n    return handle.endsWith(suffix) ? handle : `${handle}${suffix}`\n}\n\n/**\n * ProfileLinkCard\n * Including:\n *\n * - ProfileLink, aka Follow, Unfollow\n */\nexport function ProfileLinkCard({ feed, className, ...rest }: ProfileLinkCardProps) {\n    const { classes, cx } = useStyles()\n\n    const action = feed.actions[0]\n    const metadata = action.metadata\n\n    const user = useAddressLabel(feed.owner)\n    const formattedUser = formatDomainName(user, 16, true)\n    const otherEns = useAddressLabel(metadata?.address ?? '')\n    const other = metadata ? resolveHandle(metadata) : otherEns\n    const formattedOther = formatDomainName(other, 16, true)\n    const Icon = feed.type === 'follow' ? Icons.Follow : Icons.Unfollow\n\n    return (\n        <CardFrame\n            type={CardType.ProfileLink}\n            feed={feed}\n            className={cx(className, rest.verbose ? classes.verbose : null)}\n            {...rest}>\n            <Typography className={classes.summary}>\n                <RSS3Trans.profile_link\n                    values={{\n                        user: formattedUser,\n                        other: formattedOther,\n                        platform: feed.platform!,\n                        context: feed.type,\n                    }}\n                    components={{\n                        user: <Label title={user} fontSize={14} />,\n                        other: <Label title={other} fontSize={14} />,\n                        platform: <Label fontSize={14} />,\n                    }}\n                />\n            </Typography>\n            {metadata ? (\n                <div className={cx(classes.body)}>\n                    <div className={classes.user}>\n                        <Image\n                            className={classes.avatar}\n                            classes={{\n                                container: classes.image,\n                            }}\n                            height={32}\n                            width={32}\n                            src={`https://cdn.stamp.fyi/avatar/${feed.owner}`}\n                        />\n                        <Typography className={classes.name} title={user}>\n                            {formattedUser}\n                        </Typography>\n                    </div>\n                    <Icon height={18} width={48} />\n                    <div className={classes.user}>\n                        <Image\n                            className={classes.avatar}\n                            classes={{\n                                container: classes.image,\n                            }}\n                            src={`https://cdn.stamp.fyi/avatar/${metadata.address}`}\n                            height={32}\n                            width={32}\n                        />\n                        <Typography className={classes.name} title={other}>\n                            {formattedOther}\n                        </Typography>\n                    </div>\n                </div>\n            ) : null}\n        </CardFrame>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { Image } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { Typography } from '@mui/material'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { CardType } from '../share.js'\nimport { Label } from './common.js'\n\nconst useStyles = makeStyles<void, 'body'>()((theme, _, refs) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: theme.spacing(1.5),\n        gap: theme.spacing(2),\n    },\n    verbose: {\n        [`.${refs.body}`]: {\n            height: 186,\n            justifyContent: 'center',\n        },\n    },\n\n    user: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    name: {\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        marginLeft: theme.spacing(1),\n    },\n    image: {\n        height: 32,\n        width: 32,\n        borderRadius: '50%',\n        overflow: 'hidden',\n    },\n    avatar: {\n        height: 32,\n        width: 32,\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isProfileProxyFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.ProfileLinkFeed {\n    return feed.tag === Tag.Social && feed.type === Type.Proxy\n}\n\ninterface ProfileProxyCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.ProfileLinkFeed\n}\n\n/**\n * ProfileProxyCard\n * Including:\n *\n * - ProfileProxy\n */\nexport function ProfileProxyCard({ feed, className, ...rest }: ProfileProxyCardProps) {\n    const { classes, cx } = useStyles()\n\n    const action = feed.actions[0]\n    const metadata = action.metadata\n\n    const user = useAddressLabel(feed.owner)\n\n    return (\n        <CardFrame\n            type={CardType.ProfileProxy}\n            feed={feed}\n            className={cx(className, rest.verbose ? classes.verbose : null)}\n            {...rest}>\n            <Typography className={classes.summary}>\n                <RSS3Trans.profile_proxy\n                    values={{\n                        user,\n                        platform: feed.platform!,\n                    }}\n                    components={{\n                        user: <Label />,\n                        platform: <Label />,\n                    }}\n                />\n            </Typography>\n            {metadata ? (\n                <div className={cx(classes.body)}>\n                    <div className={classes.user}>\n                        <Image\n                            className={classes.avatar}\n                            classes={{\n                                container: classes.image,\n                            }}\n                            height={32}\n                            width={32}\n                            src={`https://cdn.stamp.fyi/avatar/${feed.owner}`}\n                        />\n                        <Typography className={classes.name}>{user}</Typography>\n                    </div>\n                    <Icons.Follow height={18} width={48} />\n                </div>\n            ) : null}\n        </CardFrame>\n    )\n}\n","import { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { Typography } from '@mui/material'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardType } from '../share.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { Label } from './common.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    title: {\n        marginTop: theme.spacing(1),\n        color: theme.palette.maskColor.main,\n    },\n    content: {\n        marginTop: theme.spacing(1),\n        fontSize: 14,\n        color: theme.palette.maskColor.main,\n        lineHeight: '18px',\n        marginLeft: theme.spacing(1.5),\n        maxHeight: 80,\n        overflow: 'hidden',\n        display: '-webkit-box',\n        WebkitBoxOrient: 'vertical',\n        WebkitLineClamp: 3,\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isProposeFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.ProposeFeed {\n    return feed.tag === Tag.Governance && feed.type === Type.Propose\n}\n\ninterface ProposeCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.ProposeFeed\n}\n\n/**\n * ProposeCard\n * Including:\n *\n * - NoteCreate\n * - NoteEdit\n */\nexport function ProposeCard({ feed, ...rest }: ProposeCardProps) {\n    const { classes } = useStyles()\n\n    const action = feed.actions[0]\n    const metadata = action.metadata\n\n    const user = useAddressLabel(feed.owner)\n\n    return (\n        <CardFrame type={CardType.GovernancePropose} feed={feed} {...rest}>\n            <Typography className={classes.summary}>\n                <RSS3Trans.propose\n                    values={{\n                        user,\n                    }}\n                    components={{\n                        bold: <Label />,\n                    }}\n                />\n            </Typography>\n            {metadata?.title ? <Typography className={classes.title}>{metadata.title}</Typography> : null}\n            <Typography className={classes.content}>{metadata?.body}</Typography>\n        </CardFrame>\n    )\n}\n","import { Image } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { isGreaterThan } from '@masknet/web3-shared-base'\nimport { Typography } from '@mui/material'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useFeedOwner } from '../../contexts/index.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardType } from '../share.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { Label } from './common.js'\nimport { formatEthereumAddress } from '@masknet/web3-shared-evm'\n\nconst useStyles = makeStyles<void, 'tokenIcon' | 'verboseToken'>()((theme, _, refs) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    tokenIcon: {},\n    verboseToken: {},\n    token: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: theme.spacing(1),\n        [`.${refs.tokenIcon}`]: {\n            width: 40,\n            height: 40,\n            borderRadius: '50%',\n            overflow: 'hidden',\n        },\n        [`&.${refs.verboseToken}`]: {\n            height: 186,\n            justifyContent: 'center',\n        },\n    },\n    value: {\n        color: theme.palette.maskColor.main,\n        marginLeft: theme.spacing(1.5),\n        fontSize: 14,\n        fontWeight: 700,\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isTokenApprovalFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.TokenApprovalFeed {\n    return feed.tag === Tag.Transaction && feed.type === Type.Approval\n}\n\ninterface TokenApprovalFeedCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.TokenApprovalFeed\n}\n\n/**\n * TokenApprovalCard.\n * Including:\n *\n * - TokenApproval\n */\nexport function TokenApprovalCard({ feed, ...rest }: TokenApprovalFeedCardProps) {\n    const { verbose } = rest\n    const { classes, cx } = useStyles()\n\n    const action = feed.actions[0]\n    const metadata = action.metadata\n\n    const owner = useFeedOwner()\n\n    const user = useAddressLabel(owner.address)\n\n    const amount = isGreaterThan(metadata!.value, '1e+10') ? 'infinite' : metadata?.value_display!\n\n    return (\n        <CardFrame type={CardType.TokenApproval} feed={feed} {...rest}>\n            <Typography className={classes.summary}>\n                {verbose ? (\n                    <RSS3Trans.token_approval_verbose\n                        values={{\n                            user,\n                            amount,\n                            symbol: metadata!.symbol!,\n                            context: metadata!.action,\n                        }}\n                        components={{\n                            bold: <Label />,\n                        }}\n                    />\n                ) : (\n                    <RSS3Trans.token_approval\n                        values={{\n                            user,\n                            amount: isGreaterThan(metadata!.value, '1e+10') ? 'infinite' : metadata?.value_display!,\n                            symbol: metadata!.symbol!,\n                            contract: formatEthereumAddress(action.address_to!, 4),\n                            context: metadata!.action,\n                        }}\n                        components={{\n                            bold: <Label />,\n                        }}\n                    />\n                )}\n            </Typography>\n            {metadata ? (\n                <div className={cx(classes.token, verbose ? classes.verboseToken : null)}>\n                    <Image classes={{ container: classes.tokenIcon }} src={metadata?.image} height={40} width={40} />\n                    <Typography className={classes.value}>{`${amount} ${metadata.symbol}`}</Typography>\n                </div>\n            ) : null}\n        </CardFrame>\n    )\n}\n","import { Icons } from '@masknet/icons'\nimport { Image, NetworkIcon } from '@masknet/shared'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { Typography } from '@mui/material'\nimport { RSS3Trans } from '../../../locales/index.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { CardType, getPlatformIcon } from '../share.js'\nimport { Label, formatValue } from './common.js'\n\nconst useStyles = makeStyles<void, 'tokenIcon' | 'verboseToken'>()((theme, _, refs) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    tokenIcon: {},\n    verboseToken: {},\n    token: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: theme.spacing(1),\n        color: theme.palette.maskColor.main,\n        [`.${refs.tokenIcon}`]: {\n            width: 32,\n            height: 32,\n            borderRadius: '50%',\n            overflow: 'hidden',\n        },\n        [`&.${refs.verboseToken}`]: {\n            height: 186,\n            justifyContent: 'center',\n        },\n    },\n    tokenValue: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    bridgePair: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isTokenBridgeFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.TokenBridgeFeed {\n    return feed.tag === Tag.Transaction && feed.type === Type.Bridge\n}\n\ninterface TokenBridgeCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.TokenBridgeFeed\n}\n\n/**\n * TokenBridgeCard\n * Including:\n *\n * - TokenBridge\n */\nexport function TokenBridgeCard({ feed, ...rest }: TokenBridgeCardProps) {\n    const { verbose } = rest\n    const { classes, cx } = useStyles()\n\n    // You might see some `transfer` type actions as well\n    const action = feed.actions.filter((x) => x.tag === Tag.Transaction && x.type === Type.Bridge)[0]\n    const metadata = action.metadata\n\n    const user = useAddressLabel(feed.owner)\n    const FromNetworkIcon = getPlatformIcon(feed.network) || Icons.ETH\n\n    return (\n        <CardFrame type={CardType.TokenBridge} feed={feed} {...rest}>\n            <Typography className={classes.summary}>\n                <RSS3Trans.token_bridge\n                    values={{\n                        user,\n                        amount: formatValue(metadata?.token),\n                        symbol: metadata!.token.symbol,\n                        source: feed.network,\n                        target: metadata!.target_network.name,\n                    }}\n                    components={{\n                        user: <Label title={feed.owner} />,\n                        platform: <Label title={feed.platform!} sx={{ textTransform: 'capitalize' }} />,\n                        bold: <Label />,\n                    }}\n                />\n            </Typography>\n            {metadata ? (\n                <div className={cx(classes.token, verbose ? classes.verboseToken : null)}>\n                    <div className={classes.bridgePair}>\n                        <FromNetworkIcon size={32} />\n                        <div className={classes.tokenValue}>\n                            <Icons.RSS3Link height={2} width={9} />\n                            <Image\n                                classes={{ container: classes.tokenIcon }}\n                                src={metadata.token.image}\n                                fallback={<img src={metadata.token.image} className={classes.tokenIcon} />}\n                                height={18}\n                                width={18}\n                            />\n                            <Typography fontWeight={700} mr={1.5}>\n                                {formatValue(metadata.token)} {metadata.token.symbol}\n                            </Typography>\n                            <Icons.RSS3Link height={2} width={9} />\n                        </div>\n                        <NetworkIcon\n                            pluginID={NetworkPluginID.PLUGIN_EVM}\n                            chainId={metadata.target_network.chain_id}\n                            size={32}\n                        />\n                    </div>\n                </div>\n            ) : null}\n        </CardFrame>\n    )\n}\n","import { Image } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { Typography } from '@mui/material'\nimport { useRSS3Trans } from '../../../locales/index.js'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useFeedOwner } from '../../contexts/index.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardType } from '../share.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { formatValue, Label } from './common.js'\n\nconst useStyles = makeStyles<void, 'tokenIcon' | 'verboseToken'>()((theme, _, refs) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    tokenIcon: {},\n    verboseToken: {},\n    token: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: theme.spacing(1),\n        [`.${refs.tokenIcon}`]: {\n            width: 40,\n            height: 40,\n            borderRadius: '50%',\n            overflow: 'hidden',\n        },\n        [`&.${refs.verboseToken}`]: {\n            height: 186,\n            justifyContent: 'center',\n        },\n    },\n    value: {\n        color: theme.palette.maskColor.main,\n        marginLeft: theme.spacing(1.5),\n        fontSize: 14,\n        fontWeight: 700,\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\ntype Type = RSS3BaseAPI.Type\nexport function isTokenOperationFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.TokenOperationFeed {\n    const isTxTag = feed.tag === Tag.Transaction && [Type.Transfer, Type.Burn, Type.Mint].includes(feed.type)\n    const isExchangeTag = feed.tag === Tag.Exchange && [Type.Deposit, Type.Withdraw].includes(feed.type)\n    return isTxTag || isExchangeTag\n}\n\ninterface TokenFeedCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.TokenOperationFeed\n}\n\nconst cardTypeMap: Partial<Record<RSS3BaseAPI.Type, CardType>> = {\n    [Type.Burn]: CardType.TokenBurn,\n    [Type.Mint]: CardType.TokenMint,\n    [Type.Withdraw]: CardType.TokenIn,\n    [Type.Deposit]: CardType.TokenOut,\n}\nconst contextMap: Partial<\n    Record<\n        RSS3BaseAPI.Type,\n        RSS3BaseAPI.Type.Burn | RSS3BaseAPI.Type.Mint | RSS3BaseAPI.Type.Withdraw | RSS3BaseAPI.Type.Deposit\n    >\n> = {\n    [Type.Burn]: Type.Burn,\n    [Type.Mint]: Type.Mint,\n    [Type.Withdraw]: Type.Withdraw,\n    [Type.Deposit]: Type.Deposit,\n}\n\n/**\n * TokenOperationCard.\n * Including:\n *\n * - TokenMint\n * - TokenIn\n * - TokenOut\n * - TokenBurn\n */\nexport function TokenOperationCard({ feed, ...rest }: TokenFeedCardProps) {\n    const { verbose } = rest\n    const t = useRSS3Trans()\n    const { classes, cx } = useStyles()\n\n    const action = feed.actions.find((x) => x.address_from && x.address_to) || feed.actions[0]\n    const metadata = action.metadata\n\n    const owner = useFeedOwner()\n    const isFromOwner = isSameAddress(owner.address, action.address_from)\n\n    const cardType = cardTypeMap[feed.type] || (isFromOwner ? CardType.TokenOut : CardType.TokenIn)\n    const context = contextMap[feed.type] || (isFromOwner ? 'send' : 'claim')\n\n    const from = useAddressLabel(action.address_from ?? '')\n    const to = useAddressLabel(action.address_to ?? '')\n\n    return (\n        <CardFrame type={cardType} feed={feed} {...rest}>\n            <Typography className={classes.summary}>\n                {verbose ? (\n                    <RSS3Trans.token_operation_verbose\n                        values={{\n                            from,\n                            to,\n                            value: formatValue(metadata),\n                            symbol: metadata!.symbol,\n                            /* eslint-disable-next-line  @typescript-eslint/ban-ts-comment */\n                            // @ts-ignore\n                            exchange: action.platform!,\n                            context,\n                        }}\n                        components={{\n                            from: <Label title={action.address_from} />,\n                            to: <Label title={action.address_to} />,\n                            bold: <Label />,\n                        }}\n                    />\n                ) : (\n                    <RSS3Trans.token_operation\n                        values={{\n                            from,\n                            to,\n                            value: formatValue(metadata),\n                            symbol: metadata!.symbol,\n                            exchange: action.platform!,\n                            context,\n                        }}\n                        components={{\n                            from: <Label title={action.address_from} />,\n                            to: <Label title={action.address_to} />,\n                            bold: <Label />,\n                        }}\n                    />\n                )}\n            </Typography>\n            {metadata ? (\n                <div className={cx(classes.token, verbose ? classes.verboseToken : null)}>\n                    <Image classes={{ container: classes.tokenIcon }} src={metadata?.image} height={40} width={40} />\n                    <Typography className={classes.value}>\n                        {t.token_value({\n                            value: formatValue(metadata),\n                            symbol: metadata.symbol,\n                        })}\n                    </Typography>\n                </div>\n            ) : null}\n        </CardFrame>\n    )\n}\n","import { Image } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { Typography } from '@mui/material'\nimport { useRSS3Trans } from '../../../locales/index.js'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardType } from '../share.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { formatValue, Label } from './common.js'\n\nconst useStyles = makeStyles<void, 'tokenIcon' | 'verboseToken'>()((theme, _, refs) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    tokenIcon: {},\n    verboseToken: {},\n    token: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: theme.spacing(1),\n        [`.${refs.tokenIcon}`]: {\n            width: 32,\n            height: 32,\n            borderRadius: '50%',\n            overflow: 'hidden',\n        },\n        [`&.${refs.verboseToken}`]: {\n            height: 186,\n            justifyContent: 'center',\n        },\n    },\n    iconStack: {\n        display: 'flex',\n        [`.${refs.tokenIcon}:not(:first-of-type)`]: {\n            marginLeft: -7,\n        },\n    },\n    value: {\n        color: theme.palette.maskColor.main,\n        marginLeft: theme.spacing(1.5),\n        fontSize: 14,\n        fontWeight: 700,\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isTokenSwapFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.TokenSwapFeed {\n    return feed.tag === Tag.Exchange && feed.type === Type.Swap\n}\n\ninterface TokenSwapCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.TokenSwapFeed\n}\n\n/**\n * TokenSwapCard\n * Including:\n *\n * - TokenSwap\n */\nexport function TokenSwapCard({ feed, ...rest }: TokenSwapCardProps) {\n    const { verbose } = rest\n    const t = useRSS3Trans()\n    const { classes, cx } = useStyles()\n\n    // You might see some `transfer` type actions as well\n    const action = feed.actions.filter((x) => x.tag === Tag.Exchange && x.type === Type.Swap)[0]\n    const metadata = action.metadata\n\n    const user = useAddressLabel(feed.owner)\n\n    return (\n        <CardFrame type={CardType.TokenSwap} feed={feed} {...rest}>\n            <Typography className={classes.summary}>\n                <RSS3Trans.token_swap\n                    values={{\n                        user,\n                        from_value: formatValue(metadata?.from),\n                        from_symbol: metadata?.from.symbol ?? 'Unknown Token',\n                        to_value: formatValue(metadata?.to),\n                        to_symbol: metadata?.to.symbol ?? 'Unknown Token',\n                        platform: feed.platform!,\n                        context: verbose ? 'verbose' : 'normal',\n                    }}\n                    components={{\n                        user: <Label title={feed.owner} />,\n                        platform: <Label title={feed.platform} />,\n                        bold: <Label />,\n                    }}\n                />\n            </Typography>\n            {metadata ? (\n                <div className={cx(classes.token, verbose ? classes.verboseToken : null)}>\n                    <div className={classes.iconStack}>\n                        <Image\n                            classes={{ container: classes.tokenIcon }}\n                            src={metadata.from.image}\n                            fallback={<img src={metadata.from.image} className={classes.tokenIcon} />}\n                            height={32}\n                            width={32}\n                        />\n                        <Image\n                            classes={{ container: classes.tokenIcon }}\n                            src={metadata.to.image}\n                            fallback={<img src={metadata.to.image} className={classes.tokenIcon} />}\n                            height={32}\n                            width={32}\n                        />\n                    </div>\n                    <Typography className={classes.value}>\n                        {t.token_swap_pair({\n                            from_value: formatValue(metadata.from),\n                            from_symbol: metadata.from.symbol,\n                            to_value: formatValue(metadata.to),\n                            to_symbol: metadata.to.symbol,\n                        })}\n                    </Typography>\n                </div>\n            ) : null}\n        </CardFrame>\n    )\n}\n","import { Markdown } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { Typography } from '@mui/material'\nimport Linkify from 'linkify-react'\nimport { useMemo } from 'react'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { CardType } from '../share.js'\nimport { Label, LinkifyOptions, htmlToPlain } from './common.js'\nimport { useMarkdownStyles } from './useMarkdownStyles.js'\n\nconst useStyles = makeStyles<void, 'summary'>()((theme, _, refs) => ({\n    verbose: {\n        [`.${refs.summary}`]: {\n            whiteSpace: 'normal',\n            overflow: 'visible',\n            span: {\n                whiteSpace: 'normal',\n            },\n        },\n    },\n    summary: {\n        fontSize: 14,\n        color: theme.palette.maskColor.third,\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n    },\n    title: {\n        marginTop: theme.spacing(1.5),\n        color: theme.palette.maskColor.main,\n        fontSize: 14,\n        fontWeight: 700,\n        lineHeight: '18px',\n    },\n    content: {\n        color: theme.palette.maskColor.main,\n        whiteSpace: 'pre-wrap',\n        maxHeight: '3em',\n        display: '-webkit-box',\n        WebkitBoxOrient: 'vertical',\n        WebkitLineClamp: 2,\n        overflow: 'hidden',\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isVoteFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.VoteFeed {\n    return feed.tag === Tag.Governance && feed.type === Type.Vote\n}\n\ninterface VoteCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.VoteFeed\n}\n\n/**\n * DonationCard\n * Including:\n *\n * - NoteCreate\n * - NoteEdit\n */\nexport function VoteCard({ feed, className, ...rest }: VoteCardProps) {\n    const { verbose } = rest\n    const { classes, cx } = useStyles()\n    const { classes: mdClasses } = useMarkdownStyles()\n\n    const action = feed.actions[0]\n    const metadata = action.metadata\n\n    const user = useAddressLabel(feed.owner)\n    const option = useMemo(() => {\n        if (!metadata?.choice) return ''\n        const { choice, proposal } = metadata\n        const choices: number[] = /^\\[.*?]$/.test(choice) ? JSON.parse(choice) : [Number.parseInt(choice, 10)]\n        return choices.map((no) => proposal.options[no - 1]).join(', ')\n    }, [metadata?.choice, metadata?.proposal])\n\n    if (!metadata) return null\n\n    return (\n        <CardFrame\n            type={CardType.GovernanceVote}\n            feed={feed}\n            className={cx(className, verbose ? classes.verbose : null)}\n            {...rest}>\n            <Typography className={classes.summary}>\n                <RSS3Trans.vote\n                    values={{\n                        user,\n                        option,\n                        platform: action.platform!,\n                    }}\n                    components={{\n                        bold: <Label />,\n                    }}\n                />\n            </Typography>\n            {metadata.proposal ? (\n                <>\n                    <Typography className={classes.title}>{metadata.proposal.title}</Typography>\n                    {verbose ? (\n                        <Markdown className={mdClasses.markdown} defaultStyle={false}>\n                            {metadata.proposal.body}\n                        </Markdown>\n                    ) : (\n                        <Typography className={classes.content}>\n                            <Linkify options={LinkifyOptions}>{htmlToPlain(metadata.proposal.body)}</Linkify>\n                        </Typography>\n                    )}\n                </>\n            ) : null}\n        </CardFrame>\n    )\n}\n","import { makeStyles } from '@masknet/theme'\nimport { type RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { Typography } from '@mui/material'\nimport { useFeedOwner } from '../../contexts/index.js'\nimport { CardType } from '../share.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { RSS3Trans } from '../../../locales/index.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { Label } from './common.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n}))\n\ninterface TokenFeedCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.Web3Feed\n}\n\nexport function UnknownCard({ feed, ...rest }: TokenFeedCardProps) {\n    const { classes, theme } = useStyles()\n\n    const action = feed.actions[0]\n\n    const user = useAddressLabel(feed.owner)\n    const targetUser = useAddressLabel(feed.address_to)\n    const owner = useFeedOwner()\n    const isFromOwner = isSameAddress(owner.address, action.address_from)\n\n    const cardType = isFromOwner ? CardType.UnknownOut : CardType.UnknownIn\n\n    return (\n        <CardFrame type={cardType} feed={feed} {...rest}>\n            <Typography className={classes.summary}>\n                <RSS3Trans.carry_out_activity\n                    values={{\n                        user,\n                        target: targetUser,\n                        platform: feed.platform!,\n                    }}\n                    components={{\n                        bold: <Label />,\n                    }}\n                />\n            </Typography>\n            {process.env.NODE_ENV === 'development' ? (\n                <Typography color={theme.palette.maskColor.danger}>\n                    Unknown feed. Tag: {feed.tag}, Type: {feed.type}, {feed.actions.length} actions\n                </Typography>\n            ) : null}\n        </CardFrame>\n    )\n}\n","import { Image } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { resolveResourceURL } from '@masknet/web3-shared-base'\nimport { Typography } from '@mui/material'\nimport { RSS3Trans } from '../../../locales/i18n_generated.js'\nimport { useRSS3Trans } from '../../../locales/index.js'\nimport { useFeedOwner } from '../../contexts/index.js'\nimport { useAddressLabel } from '../../hooks/index.js'\nimport { CardFrame, type FeedCardProps } from '../base.js'\nimport { CardType } from '../share.js'\nimport { Label, formatValue } from './common.js'\n\nconst useStyles = makeStyles<void, 'tokenIcon' | 'verboseToken'>()((theme, _, refs) => ({\n    summary: {\n        color: theme.palette.maskColor.third,\n    },\n    tokenIcon: {},\n    verboseToken: {},\n    token: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: theme.spacing(1),\n        [`.${refs.tokenIcon}`]: {\n            width: 40,\n            height: 40,\n            borderRadius: '50%',\n            overflow: 'hidden',\n        },\n        [`&.${refs.verboseToken}`]: {\n            height: 186,\n            justifyContent: 'center',\n        },\n    },\n    value: {\n        color: theme.palette.maskColor.main,\n        marginLeft: theme.spacing(1.5),\n        fontSize: 14,\n        fontWeight: 700,\n    },\n}))\n\nconst { Tag, Type } = RSS3BaseAPI\nexport function isStakingFeed(feed: RSS3BaseAPI.Web3Feed): feed is RSS3BaseAPI.StakingFeed {\n    return feed.tag === Tag.Exchange && feed.type === Type.Staking\n}\n\ninterface StakingFeedCardProps extends Omit<FeedCardProps, 'feed'> {\n    feed: RSS3BaseAPI.StakingFeed\n}\n\n/**\n * StakingCard.\n * Including:\n *\n * - TokenStake\n * - TokenUnstake\n */\nexport function StakingCard({ feed, ...rest }: StakingFeedCardProps) {\n    const { verbose } = rest\n    const t = useRSS3Trans()\n    const { classes, cx } = useStyles()\n\n    const action = feed.actions.find((x) => x.type === Type.Staking)\n    const metadata = action?.metadata\n\n    const owner = useFeedOwner()\n    const user = useAddressLabel(owner.address)\n\n    const cardType = metadata?.action === 'stake' ? CardType.TokenStake : CardType.TokenUnstake\n\n    return (\n        <CardFrame type={cardType} feed={feed} {...rest}>\n            <Typography className={classes.summary}>\n                <RSS3Trans.token_staking\n                    values={{\n                        user,\n                        symbol: metadata?.token?.symbol!,\n                        context: metadata?.action!,\n                    }}\n                    components={{\n                        bold: <Label />,\n                    }}\n                />\n            </Typography>\n            {metadata ? (\n                <div className={cx(classes.token, verbose ? classes.verboseToken : null)}>\n                    <Image\n                        classes={{ container: classes.tokenIcon }}\n                        src={resolveResourceURL(metadata?.token.image)}\n                        height={40}\n                        width={40}\n                    />\n                    <Typography className={classes.value}>\n                        {t.token_value({\n                            value: formatValue(metadata.token),\n                            symbol: metadata.token?.symbol,\n                        })}\n                    </Typography>\n                </div>\n            ) : null}\n        </CardFrame>\n    )\n}\n","import { memo } from 'react'\nimport type { FeedCardProps } from '../base.js'\nimport { CollectibleApprovalCard, isCollectibleApprovalFeed } from './CollectibleApprovalCard.js'\nimport { CollectibleCard, isCollectibleFeed } from './CollectibleCard.js'\nimport { CommentCard, isCommentFeed } from './CommentCard.js'\nimport { DonationCard, isDonationFeed } from './DonationCard.js'\nimport { isLiquidityFeed, LiquidityCard } from './LiquidityCard.js'\nimport { isNoteFeed, NoteCard } from './NoteCard.js'\nimport { isProfileFeed, ProfileCard } from './ProfileCard.js'\nimport { isProfileLinkFeed, ProfileLinkCard } from './ProfileLinkCard.js'\nimport { isProfileProxyFeed, ProfileProxyCard } from './ProfileProxy.js'\nimport { isProposeFeed, ProposeCard } from './ProposeCard.js'\nimport { isTokenApprovalFeed, TokenApprovalCard } from './TokenApprovalCard.js'\nimport { isTokenBridgeFeed, TokenBridgeCard } from './TokenBridgeCard.js'\nimport { isTokenOperationFeed, TokenOperationCard } from './TokenOperationCard.js'\nimport { isTokenSwapFeed, TokenSwapCard } from './TokenSwapCard.js'\nimport { isVoteFeed, VoteCard } from './VoteCard.js'\nimport { UnknownCard } from './UnknownCard.js'\nimport { StakingCard, isStakingFeed } from './StakingCard.js'\n\nexport const FeedCard = memo(({ feed, ...rest }: FeedCardProps) => {\n    if (isTokenOperationFeed(feed)) return <TokenOperationCard feed={feed} {...rest} />\n\n    if (isTokenSwapFeed(feed)) return <TokenSwapCard feed={feed} {...rest} />\n\n    if (isLiquidityFeed(feed)) return <LiquidityCard feed={feed} {...rest} />\n\n    if (isStakingFeed(feed)) return <StakingCard feed={feed} {...rest} />\n\n    if (isCollectibleFeed(feed)) return <CollectibleCard feed={feed} {...rest} />\n\n    if (isDonationFeed(feed)) return <DonationCard feed={feed} {...rest} />\n\n    if (isNoteFeed(feed)) return <NoteCard feed={feed} {...rest} />\n\n    if (isCommentFeed(feed)) return <CommentCard feed={feed} {...rest} />\n\n    if (isProfileFeed(feed)) return <ProfileCard feed={feed} {...rest} />\n\n    if (isProfileLinkFeed(feed)) return <ProfileLinkCard feed={feed} {...rest} />\n\n    if (isProposeFeed(feed)) return <ProposeCard feed={feed} {...rest} />\n\n    if (isVoteFeed(feed)) return <VoteCard feed={feed} {...rest} />\n\n    if (isTokenApprovalFeed(feed)) return <TokenApprovalCard feed={feed} {...rest} />\n\n    if (isCollectibleApprovalFeed(feed)) return <CollectibleApprovalCard feed={feed} {...rest} />\n\n    if (isTokenBridgeFeed(feed)) return <TokenBridgeCard feed={feed} {...rest} />\n\n    if (isProfileProxyFeed(feed)) return <ProfileProxyCard feed={feed} {...rest} />\n\n    return <UnknownCard feed={feed} {...rest} />\n})\n\nFeedCard.displayName = 'FeedCard'\n","import { useMemo } from 'react'\nimport { useInfiniteQuery } from '@tanstack/react-query'\nimport { RSS3 } from '@masknet/web3-providers'\nimport { EMPTY_LIST } from '@masknet/shared-base'\nimport type { RSS3BaseAPI } from '@masknet/web3-providers/types'\n\nexport function useFeeds(address?: string, tag?: RSS3BaseAPI.Tag) {\n    const { data, isLoading, error, fetchNextPage } = useInfiniteQuery({\n        enabled: !!address,\n        queryKey: ['rss3-feeds', address, tag],\n        queryFn: async ({ pageParam }) => {\n            const res = await RSS3.getAllNotes(address!, { tag }, { indicator: pageParam, size: 20 })\n            return res\n        },\n        getNextPageParam: (lastPage) => lastPage?.nextIndicator,\n    })\n\n    const feeds = useMemo(() => {\n        if (!data?.pages) return EMPTY_LIST\n        return data.pages.flatMap((page) => page.data)\n    }, [data?.pages])\n\n    return {\n        feeds,\n        isLoading,\n        error: error as Error | undefined,\n        next: fetchNextPage,\n    }\n}\n","import { memo, useMemo } from 'react'\nimport { range } from 'lodash-es'\nimport { ElementAnchor, EmptyStatus, RetryHint } from '@masknet/shared'\nimport { LoadingBase, makeStyles } from '@masknet/theme'\nimport { ScopedDomainsContainer, useReverseAddress, useWeb3Others } from '@masknet/web3-hooks-base'\nimport type { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { Box, Skeleton } from '@mui/material'\nimport { useRSS3Trans } from '../locales/index.js'\nimport { FeedCard } from './components/index.js'\nimport { FeedOwnerContext, type FeedOwnerOptions } from './contexts/index.js'\nimport { useFeeds } from './hooks/useFeeds.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    feedCard: {\n        padding: theme.spacing(2, 2, 1),\n    },\n    loading: {\n        color: theme.palette.maskColor.main,\n    },\n}))\n\nexport interface FeedPageProps {\n    address?: string\n    tag?: RSS3BaseAPI.Tag.Donation | RSS3BaseAPI.Tag.Social\n}\n\nexport const FeedsPage = memo(function FeedsPage({ address, tag }: FeedPageProps) {\n    const t = useRSS3Trans()\n    const { classes } = useStyles()\n    const Others = useWeb3Others()\n\n    const { feeds, isLoading: loadingFeeds, error, next } = useFeeds(address, tag)\n\n    const { data: reversedName, isLoading: loadingENS } = useReverseAddress(undefined, address)\n    const { getDomain } = ScopedDomainsContainer.useContainer()\n\n    const loading = loadingFeeds || loadingENS\n\n    const name = address ? getDomain(address) || reversedName : reversedName\n    const feedOwner = useMemo((): FeedOwnerOptions | undefined => {\n        if (!address) return\n        return {\n            address,\n            name,\n            ownerDisplay: name ? Others.formatDomainName(name) : Others.formatAddress(address, 4) ?? address,\n        }\n    }, [address, name, Others.formatDomainName, Others.formatAddress])\n\n    if (error && !feeds.length)\n        return (\n            <Box p={2} boxSizing=\"border-box\">\n                <Box mt=\"100px\" color={(theme) => theme.palette.maskColor.main}>\n                    <RetryHint retry={next} />\n                </Box>\n            </Box>\n        )\n\n    if ((loading && !feeds.length) || !feedOwner) {\n        return (\n            <Box p={2} boxSizing=\"border-box\">\n                {range(3).map((i) => (\n                    <Box mb={2} key={i}>\n                        <Skeleton animation=\"wave\" variant=\"rectangular\" height={125} />\n                    </Box>\n                ))}\n            </Box>\n        )\n    }\n    if (!feeds.length && !loading) {\n        return <EmptyStatus height={260}>{t.no_data({ context: tag || 'activities' })}</EmptyStatus>\n    }\n\n    return (\n        <FeedOwnerContext.Provider value={feedOwner}>\n            {/* padding for profile card footer */}\n            <Box paddingBottom=\"48px\">\n                {feeds.map((feed, index) => (\n                    <FeedCard key={index} className={classes.feedCard} feed={feed} />\n                ))}\n                <ElementAnchor callback={() => next()}>\n                    {loading ? <LoadingBase className={classes.loading} /> : null}\n                </ElementAnchor>\n            </Box>\n        </FeedOwnerContext.Provider>\n    )\n})\n","import { Icons } from '@masknet/icons'\nimport { InjectedDialog, Linking, type InjectedDialogProps } from '@masknet/shared'\nimport { parseURL } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { ScopedDomainsContainer, useReverseAddress } from '@masknet/web3-hooks-base'\nimport { Others } from '@masknet/web3-providers'\nimport { DialogContent, Typography } from '@mui/material'\nimport { useMemo, type PropsWithChildren } from 'react'\nimport { useRSS3Trans } from '../../../locales/index.js'\nimport type { FeedCardProps } from '../../components/base.js'\nimport { FeedCard } from '../../components/index.js'\nimport { hostIconMap, hostNameMap, type CardType } from '../../components/share.js'\nimport { FeedOwnerContext, type FeedOwnerOptions } from '../../contexts/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    detailsDialog: {\n        width: 600,\n        minHeight: 400,\n        maxHeight: 620,\n        backgroundImage: 'none',\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        paddingBottom: theme.spacing(3),\n    },\n    details: {\n        overflow: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        '::-webkit-scrollbar': {\n            display: 'none',\n        },\n        '::-webkit-scrollbar-thumb': {},\n    },\n    card: {\n        flexGrow: 1,\n    },\n    links: {\n        display: 'flex',\n        gap: theme.spacing(1.5),\n        marginTop: 'auto',\n        flexShrink: 0,\n        flexGrow: 0,\n        paddingTop: theme.spacing(2),\n    },\n    link: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 24,\n        textDecoration: 'none',\n        color: theme.palette.maskColor.highlight,\n    },\n    linkLabel: {\n        fontSize: 18,\n        fontWeight: 700,\n        lineHeight: '22px',\n        marginLeft: theme.spacing(1),\n    },\n}))\n\ninterface FeedDetailsDialogProps\n    extends PropsWithChildren<InjectedDialogProps>,\n        Pick<FeedCardProps, 'feed' | 'actionIndex'> {\n    type: CardType\n}\n\nexport function FeedDetailsDialog({ type, feed, onClose, actionIndex, ...rest }: FeedDetailsDialogProps) {\n    const t = useRSS3Trans()\n    const { classes } = useStyles()\n    const links = feed.actions[0].related_urls\n\n    const address = feed.owner || feed.address_from || feed.actions[0].address_from || ''\n    const { data: reversedName } = useReverseAddress(undefined, address)\n    const { getDomain } = ScopedDomainsContainer.useContainer()\n\n    const name = address ? getDomain(address) || reversedName : reversedName\n    const feedOwner = useMemo((): FeedOwnerOptions => {\n        return {\n            address,\n            name,\n            ownerDisplay: name ? Others.formatDomainName(name) : Others.formatAddress(feed.owner, 4) ?? address,\n        }\n    }, [address, name, Others.formatDomainName, Others.formatAddress, feed.owner])\n\n    return (\n        <FeedOwnerContext.Provider value={feedOwner}>\n            <InjectedDialog\n                classes={{\n                    paper: classes.detailsDialog,\n                }}\n                {...rest}\n                title={t.details()}\n                onClose={() => {\n                    onClose?.()\n                }}>\n                <DialogContent className={classes.content}>\n                    <div className={classes.details}>\n                        <FeedCard className={classes.card} feed={feed} actionIndex={actionIndex} verbose />\n                        {links?.length ? (\n                            <div className={classes.links}>\n                                {links.map((link, index) => {\n                                    const url = parseURL(link)\n                                    if (!url || !['http:', 'https:'].includes(url.protocol)) return null\n                                    const Icon = hostIconMap[url.host] ?? Icons.SettingsLanguage\n                                    const name = hostNameMap[url.host] ?? url.host\n                                    return (\n                                        <Linking key={index} LinkProps={{ className: classes.link }} href={link}>\n                                            <Icon size={24} />\n                                            <Typography className={classes.linkLabel}>{name}</Typography>\n                                        </Linking>\n                                    )\n                                })}\n                            </div>\n                        ) : null}\n                    </div>\n                </DialogContent>\n            </InjectedDialog>\n        </FeedOwnerContext.Provider>\n    )\n}\n","import { forwardRef, useState, type PropsWithChildren } from 'react'\nimport { type InjectedDialogProps } from '@masknet/shared'\nimport type { SingletonModalRefCreator } from '@masknet/shared-base'\nimport { useSingletonModal } from '@masknet/shared-base-ui'\nimport type { FeedCardProps } from '../../components/base.js'\nimport { CardType } from '../../components/share.js'\nimport { FeedDetailsDialog } from './DetailDialog.js'\nimport { ScopedDomainsContainer } from '@masknet/web3-hooks-base'\n\nexport interface FeedDetailsModalOpenProps\n    extends Omit<PropsWithChildren<InjectedDialogProps>, 'open'>,\n        Pick<FeedCardProps, 'feed' | 'actionIndex'> {\n    type: CardType\n    scopedDomainsMap: Record<string, string>\n}\n\nexport const FeedDetailsModal = forwardRef<SingletonModalRefCreator<FeedDetailsModalOpenProps>>((props, ref) => {\n    const [props_, setProps_] = useState<Omit<FeedDetailsModalOpenProps, 'scopedDomainsMap'>>()\n    const [scopedDomainsMap, setScopedDomainsMap] = useState<Record<string, string>>({})\n    const [open, dispatch] = useSingletonModal(ref, {\n        onOpen({ scopedDomainsMap, ...props }) {\n            setProps_(props)\n            setScopedDomainsMap(scopedDomainsMap)\n        },\n    })\n\n    if (!open) return null\n    return (\n        <ScopedDomainsContainer.Provider initialState={scopedDomainsMap}>\n            <FeedDetailsDialog\n                open\n                onClose={() => dispatch?.close()}\n                {...props_}\n                type={props_?.type ?? CardType.UnknownIn}\n                feed={props_?.feed!}\n            />\n        </ScopedDomainsContainer.Provider>\n    )\n})\n\nFeedDetailsModal.displayName = 'FeedDetailsModal'\n","import { memo } from 'react'\nimport { FeedDetailsModal } from './DetailsModal/index.js'\n\nimport * as modals from './modals.js'\n\nexport const Modals = memo(function Modals() {\n    return (\n        <>\n            <FeedDetailsModal ref={modals.FeedDetailsModal.register} />\n        </>\n    )\n})\n","import type { Plugin } from '@masknet/plugin-infra'\nimport { Box } from '@mui/material'\nimport { NetworkPluginID, type SocialAccount, type SocialIdentity, SocialAddressType } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { DefaultWeb3ContextProvider } from '@masknet/web3-hooks-base'\nimport { RSS3BaseAPI } from '@masknet/web3-providers/types'\nimport { SearchResultType } from '@masknet/web3-shared-base'\nimport { base } from '../base.js'\nimport { PLUGIN_ID } from '../constants.js'\nimport { type FeedPageProps, FeedsPage } from './FeedsPage.js'\nimport { Modals } from './modals/index.js'\n\nfunction shouldDisplay(_?: SocialIdentity, socialAccount?: SocialAccount<Web3Helper.ChainIdAll>) {\n    return socialAccount?.pluginID === NetworkPluginID.PLUGIN_EVM\n}\n\nconst createProfileTabConfig = (label: string, props: FeedPageProps, priority = 1): Plugin.SiteAdaptor.ProfileTab => {\n    return {\n        ID: `${PLUGIN_ID}_${label}`,\n        label,\n        priority,\n        UI: {\n            TabContent: ({ socialAccount }) => {\n                const key = [socialAccount?.address ?? '-', props.tag ?? '-'].join('_')\n\n                return (\n                    <DefaultWeb3ContextProvider>\n                        <FeedsPage key={key} address={socialAccount?.address} {...props} />\n                    </DefaultWeb3ContextProvider>\n                )\n            },\n        },\n        Utils: {\n            shouldDisplay,\n        },\n    }\n}\n\nconst createSearchTabConfig = (\n    label: string,\n    props: FeedPageProps,\n    priority = 1,\n): Plugin.SiteAdaptor.SearchResultTab => {\n    return {\n        ID: `${PLUGIN_ID}_${label}`,\n        label,\n        priority,\n        UI: {\n            TabContent: ({ result }) => {\n                const socialAccount = {\n                    pluginID: NetworkPluginID.PLUGIN_EVM,\n                    address: result.type === SearchResultType.Domain ? result.address ?? '' : result.keyword,\n                    label: result.type === SearchResultType.Domain ? result.keyword : '',\n                    supportedAddressTypes: [SocialAddressType.ENS],\n                }\n                const key = [socialAccount?.address ?? '-', props.tag ?? '-'].join('_')\n\n                return (\n                    <Box style={{ minHeight: 300 }}>\n                        <DefaultWeb3ContextProvider>\n                            <FeedsPage key={key} address={socialAccount?.address} {...props} />\n                        </DefaultWeb3ContextProvider>\n                    </Box>\n                )\n            },\n        },\n        Utils: {\n            shouldDisplay(result) {\n                return [SearchResultType.Domain, SearchResultType.EOA].includes(result.type)\n            },\n        },\n    }\n}\n\nconst ActivitiesTabConfig: Plugin.SiteAdaptor.ProfileTab = createProfileTabConfig('Activities', {}, 2)\nconst ActivitiesTabConfigInProfileCard: Plugin.SiteAdaptor.ProfileTab = createProfileTabConfig('Activities', {}, 2)\nconst ActivitiesTabConfigInSearchResult: Plugin.SiteAdaptor.SearchResultTab = createSearchTabConfig('Activities', {}, 2)\n\nconst DonationTabConfig: Plugin.SiteAdaptor.ProfileTab = createProfileTabConfig(\n    'Donation',\n    {\n        tag: RSS3BaseAPI.Tag.Donation,\n    },\n    3,\n)\nconst DonationsTabConfigInProfileCard: Plugin.SiteAdaptor.ProfileTab = createProfileTabConfig(\n    'Donation',\n    {\n        tag: RSS3BaseAPI.Tag.Donation,\n    },\n    3,\n)\nconst DonationsTabConfigInSearchResult: Plugin.SiteAdaptor.SearchResultTab = createSearchTabConfig(\n    'Donation',\n    {\n        tag: RSS3BaseAPI.Tag.Donation,\n    },\n    3,\n)\n\nconst SocialTabConfig: Plugin.SiteAdaptor.ProfileTab = createProfileTabConfig(\n    'Social',\n    {\n        tag: RSS3BaseAPI.Tag.Social,\n    },\n    1,\n)\nconst SocialTabConfigInProfileCard: Plugin.SiteAdaptor.ProfileTab = createProfileTabConfig(\n    'Social',\n    {\n        tag: RSS3BaseAPI.Tag.Social,\n    },\n    1,\n)\nconst SocialTabConfigInSearchResult: Plugin.SiteAdaptor.SearchResultTab = createSearchTabConfig(\n    'Social',\n    {\n        tag: RSS3BaseAPI.Tag.Social,\n    },\n    1,\n)\n\nconst site: Plugin.SiteAdaptor.Definition = {\n    ...base,\n    init(_, context) {},\n    GlobalInjection() {\n        return <Modals />\n    },\n    ProfileTabs: [ActivitiesTabConfig, DonationTabConfig, SocialTabConfig],\n    ProfileCardTabs: [ActivitiesTabConfigInProfileCard, DonationsTabConfigInProfileCard, SocialTabConfigInProfileCard],\n    SearchResultTabs: [\n        ActivitiesTabConfigInSearchResult,\n        DonationsTabConfigInSearchResult,\n        SocialTabConfigInSearchResult,\n    ],\n}\n\nexport default site\n","import { useState, type RefObject, useEffect, useRef } from 'react'\nimport { useIntersection } from 'react-use'\n\nexport function useEverSeen<E = HTMLDivElement>(): [boolean, RefObject<E>] {\n    const ref = useRef(null)\n    const [seen, setSeen] = useState(false)\n    const nullRef = useRef(null)\n    const entry = useIntersection(seen ? nullRef : ref, {})\n    useEffect(() => {\n        if (entry?.isIntersecting) setSeen(true)\n    }, [entry?.isIntersecting])\n\n    return [seen, ref]\n}\n","import { useCallback, useImperativeHandle, useRef, useState } from 'react'\nimport type { SingletonModalRefCreator } from '@masknet/shared-base'\n\nexport function useSingletonModal<OpenProps, CloseProps>(\n    ref: React.ForwardedRef<SingletonModalRefCreator<OpenProps, CloseProps>>,\n    options?: {\n        onOpen?: (props: OpenProps) => void\n        onClose?: (props: CloseProps) => void\n        onAbort?: (error: Error) => void\n    },\n) {\n    type T = SingletonModalRefCreator<OpenProps, CloseProps>\n\n    const [open, setOpen] = useState(false)\n    const dispatchRef = useRef<ReturnType<T>>()\n    const optionsRef = useRef<typeof options>()\n    const openRef = useRef(open)\n    optionsRef.current = options\n    openRef.current = open\n\n    const creator: T = useCallback((dispatchOpen, dispatchClose, dispatchAbort) => {\n        dispatchRef.current = {\n            peek() {\n                return openRef.current\n            },\n            open(props) {\n                optionsRef.current?.onOpen?.(props)\n                dispatchOpen(props)\n                setOpen(true)\n            },\n            close(props) {\n                optionsRef.current?.onClose?.(props)\n                dispatchClose(props)\n                setOpen(false)\n            },\n            abort(error) {\n                optionsRef.current?.onAbort?.(error)\n                dispatchAbort(error)\n                setOpen(false)\n            },\n        }\n        return dispatchRef.current\n    }, [])\n\n    useImperativeHandle(ref, () => creator, [creator])\n\n    return [open, dispatchRef.current] as const\n}\n","import { memo } from 'react'\nimport { Icon, type IconProps } from '../Icon/index.js'\n\nexport interface ChainIconProps extends IconProps {}\nexport const ChainIcon = memo<ChainIconProps>(function ChainIcon({ ...rest }) {\n    return <Icon {...rest} sx={{ fontSize: 12, fontWeight: 'bold', ...rest.sx }} size={rest.size ?? 12.5} />\n})\n","import { memo, useEffect, useRef } from 'react'\nimport { useIntersectionObserver } from '@react-hookz/web'\nimport { Stack, type StackProps } from '@mui/material'\n\ninterface ElementAnchorProps extends StackProps {\n    callback: (intersection: IntersectionObserverEntry | undefined) => void\n}\n\nexport const ElementAnchor = memo<ElementAnchorProps>(({ callback, children, ...rest }) => {\n    const elementRef = useRef<HTMLDivElement>(null)\n    const intersection = useIntersectionObserver(elementRef, {\n        rootMargin: '200px',\n    })\n\n    const callbackRef = useRef(callback)\n    callbackRef.current = callback\n    useEffect(() => {\n        if (!intersection?.isIntersecting) return\n        callbackRef.current(intersection)\n    }, [intersection])\n\n    return (\n        <Stack pt={1} ref={elementRef} justifyContent=\"center\" alignItems=\"center\" direction=\"row\" {...rest}>\n            {children}\n        </Stack>\n    )\n})\n\nElementAnchor.displayName = 'ElementAnchor'\n","import { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Typography, type BoxProps } from '@mui/material'\nimport { memo } from 'react'\n\nconst useStyles = makeStyles()((theme) => ({\n    statusBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    text: {\n        color: theme.palette.maskColor.second,\n        fontSize: '14px',\n        fontWeight: 400,\n        marginTop: theme.spacing(1.5),\n    },\n}))\n\ninterface Props extends BoxProps {\n    iconSize?: number\n}\n\nexport const EmptyStatus = memo(function EmptyStatus({ className, children, iconSize = 32, ...rest }: Props) {\n    const { classes, cx } = useStyles()\n    return (\n        <Box className={cx(classes.statusBox, className)} p={2} {...rest}>\n            <Icons.EmptySimple size={iconSize} />\n            <Typography className={classes.text} component=\"div\">\n                {children}\n            </Typography>\n        </Box>\n    )\n})\n","const DEFAULT_IMAGES = [\n    new URL('./Aura1.svg', import.meta.url).toString(),\n    new URL('./Aura2.svg', import.meta.url).toString(),\n    new URL('./Aura3.svg', import.meta.url).toString(),\n    new URL('./Aura4.svg', import.meta.url).toString(),\n    new URL('./Aura5.svg', import.meta.url).toString(),\n    new URL('./Aura6.svg', import.meta.url).toString(),\n    new URL('./Aura7.svg', import.meta.url).toString(),\n    new URL('./Aura8.svg', import.meta.url).toString(),\n    new URL('./Aura9.svg', import.meta.url).toString(),\n    new URL('./Aura10.svg', import.meta.url).toString(),\n    new URL('./Aura11.svg', import.meta.url).toString(),\n    new URL('./Aura12.svg', import.meta.url).toString(),\n]\n\nexport const name2Image = (name?: string): string => {\n    if (!name) return DEFAULT_IMAGES[0]\n    let sum = 0\n    for (let i = 0; i < name.length; i += 1) {\n        sum += name.charCodeAt(i)\n    }\n\n    return DEFAULT_IMAGES[sum % DEFAULT_IMAGES.length]\n}\n","import { memo, useState } from 'react'\nimport { Avatar, type AvatarProps, useTheme } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { name2Image } from './name2Image.js'\n\nconst useStyles = makeStyles<Pick<IconProps, 'size'>>()((theme, { size }) => ({\n    icon: {\n        margin: 0,\n        borderRadius: '50%',\n        color: `${theme.palette.maskColor.dark} !important`,\n        backgroundSize: 'cover',\n        height: size,\n        width: size,\n    },\n}))\n\nexport interface IconProps extends AvatarProps {\n    color?: string\n    size?: number | string\n    name?: string\n    label?: string\n    logoURL?: string\n}\n\nexport const Icon = memo<IconProps>(function Icon(props) {\n    const { logoURL, size, color, name, label, className, ...rest } = props\n    const [failed, setFailed] = useState(false)\n\n    const defaultBackgroundImage = name2Image(name)\n    const { classes, cx } = useStyles({ size })\n    const theme = useTheme()\n\n    const showImage = logoURL && !failed\n\n    return (\n        <Avatar\n            className={cx(classes.icon, className)}\n            src={logoURL}\n            {...rest}\n            imgProps={{\n                onError: (event) => {\n                    setFailed(true)\n                    rest.imgProps?.onError?.(event)\n                },\n                ...rest.imgProps,\n            }}\n            sx={{\n                ...rest.sx,\n                backgroundImage: showImage ? undefined : `url(\"${defaultBackgroundImage}\")`,\n                backgroundColor: showImage ? color ?? theme.palette.common.white : undefined,\n            }}>\n            {label ?? name?.slice(0, 1).toUpperCase() ?? '?'}\n        </Avatar>\n    )\n})\n\nIcon.displayName = 'Icon'\n","import { type HTMLProps, type ImgHTMLAttributes, useState } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { useTheme } from '@mui/material'\n\nconst useStyles = makeStyles<Pick<ImageProps, 'size' | 'rounded'>, 'center'>()((theme, { size, rounded }, refs) => ({\n    optimistic: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    container: {\n        width: size ?? '100%',\n        height: size ?? '100%',\n        position: 'relative',\n        borderRadius: rounded ? '50%' : undefined,\n        overflow: rounded ? 'hidden' : undefined,\n    },\n    image: {\n        display: 'block',\n    },\n    failImage: {\n        width: 30,\n        height: 30,\n    },\n    center: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    failed: {\n        [`&.${refs.center}`]: {\n            background:\n                theme.palette.mode === 'light'\n                    ? 'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.9) 100%), linear-gradient(90deg, rgba(98, 152, 234, 0.2) 1.03%, rgba(98, 152, 234, 0.2) 1.04%, rgba(98, 126, 234, 0.2) 100%)'\n                    : 'linear-gradient(180deg, #202020 0%, #181818 100%)',\n        },\n    },\n}))\n\nconst MASK_DARK_FALLBACK = new URL('./mask-dark.png', import.meta.url).href\nconst MASK_LIGHT_FALLBACK = new URL('./mask-light.png', import.meta.url).href\n\nexport interface ImageProps\n    extends ImgHTMLAttributes<HTMLImageElement>,\n        withClasses<'container' | 'fallbackImage' | 'imageLoading' | 'failed'> {\n    size?: number | string\n    rounded?: boolean\n    fallback?: string | JSX.Element | null\n    disableSpinner?: boolean\n    containerProps?: HTMLProps<HTMLDivElement>\n}\n\nexport function Image({\n    fallback,\n    size,\n    rounded,\n    disableSpinner,\n    classes: extraClasses,\n    onClick,\n    containerProps,\n    ...rest\n}: ImageProps) {\n    const { classes, cx } = useStyles({ size, rounded }, { props: { classes: extraClasses } })\n    const theme = useTheme()\n    const [failed, setFailed] = useState(false)\n\n    if (rest.src && !failed) {\n        return (\n            <div {...containerProps} className={cx(classes.container, classes.optimistic, containerProps?.className)}>\n                <img\n                    className={classes.image}\n                    width={size}\n                    height={size}\n                    {...rest}\n                    src={rest.src}\n                    onError={() => setFailed(true)}\n                />\n            </div>\n        )\n    }\n\n    if (fallback && !(fallback instanceof URL) && typeof fallback !== 'string') {\n        return (\n            <div\n                {...containerProps}\n                className={cx(classes.container, classes.failed, classes.center, containerProps?.className)}>\n                {fallback}\n            </div>\n        )\n    }\n\n    return (\n        <div\n            {...containerProps}\n            className={cx(classes.container, classes.failed, classes.center, containerProps?.className)}>\n            <img\n                loading=\"lazy\"\n                decoding=\"async\"\n                width={size}\n                height={size}\n                {...rest}\n                src={fallback?.toString() ?? (theme.palette.mode === 'dark' ? MASK_DARK_FALLBACK : MASK_LIGHT_FALLBACK)}\n                className={cx(classes.image, classes.failImage, classes.fallbackImage)}\n            />\n        </div>\n    )\n}\n","import { Link, type LinkProps, Typography, type TypographyProps } from '@mui/material'\n\nexport interface LinkingProps {\n    href?: string\n    children?: React.ReactNode\n    LinkProps?: Partial<LinkProps>\n    TypographyProps?: Partial<TypographyProps>\n}\n\nexport function Linking(props: LinkingProps) {\n    const { href, LinkProps, TypographyProps, children } = props\n    if (href && URL.canParse(href)) {\n        const { hostname } = new URL(href)\n        return (\n            <Link\n                color={(theme) => theme.palette.maskColor.main}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={props.href}\n                {...LinkProps}>\n                {children ? (\n                    children\n                ) : (\n                    <Typography variant=\"body2\" component=\"span\" {...TypographyProps}>\n                        {hostname.replace(/^www./i, '')}\n                    </Typography>\n                )}\n            </Link>\n        )\n    } else {\n        return (\n            <span className={LinkProps?.className} title={LinkProps?.title}>\n                {children ? (\n                    children\n                ) : (\n                    <Typography variant=\"body2\" component=\"span\" {...TypographyProps}>\n                        {href}\n                    </Typography>\n                )}\n            </span>\n        )\n    }\n}\n","import { memo } from 'react'\nimport { Button, type ButtonProps, Stack, Typography } from '@mui/material'\nimport { useSharedTrans } from '../../../locales/index.js'\n\ninterface RetryHintProps {\n    hint?: boolean\n    retry?(): void\n    ButtonProps?: ButtonProps\n}\n\nexport const RetryHint = memo<RetryHintProps>(({ retry, hint = true, ButtonProps }) => {\n    const t = useSharedTrans()\n    return (\n        <Stack justifyContent=\"center\" direction=\"row\" alignItems=\"center\" height={hint ? '100%' : '100px'}>\n            <Stack gap={2.75}>\n                {hint ? (\n                    <Typography textAlign=\"center\" fontSize={12} fontWeight={700}>\n                        {t.load_failed()}\n                    </Typography>\n                ) : null}\n                <Button {...ButtonProps} size=\"small\" style={{ borderRadius: 16 }} onClick={() => retry?.()}>\n                    {t.load_retry()}\n                </Button>\n            </Stack>\n        </Stack>\n    )\n})\n\nRetryHint.displayName = 'RetryHint'\n","import type { Web3Helper } from '@masknet/web3-helpers'\nimport { useNetwork } from '@masknet/web3-hooks-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { ImageIcon, type ImageIconProps } from '../ImageIcon/index.js'\nimport { ChainIcon } from '../index.js'\nimport { memo } from 'react'\nimport type { ReasonableNetwork } from '@masknet/web3-shared-base'\n\nexport interface NetworkIconProps extends ImageIconProps {\n    pluginID: NetworkPluginID\n    chainId: Web3Helper.ChainIdAll\n    /**\n     * It's allow to add custom network with duplicate chainIds. Network could\n     * be specified with this prop.\n     */\n    network?: ReasonableNetwork<Web3Helper.ChainIdAll, Web3Helper.SchemaTypeAll, Web3Helper.NetworkTypeAll>\n}\n\nexport const NetworkIcon = memo(function NetworkIcon(props: NetworkIconProps) {\n    const { pluginID, chainId, icon, network: expectedNetwork, ...rest } = props\n    const fallbackNetwork = useNetwork(pluginID, chainId)\n    const network = expectedNetwork || fallbackNetwork\n    const iconUrl = network?.iconUrl || icon\n\n    if (iconUrl && !network?.isCustomized) return <ImageIcon size={20} {...rest} icon={iconUrl} />\n    return (\n        <ChainIcon\n            size={rest.size || 20}\n            name={network?.name}\n            color={rest.color || network?.color}\n            className={rest.className}\n        />\n    )\n})\n","import { type ComponentProps, memo } from 'react'\nimport { type NetworkPluginID } from '@masknet/shared-base'\nimport { useReverseAddress, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { Typography } from '@mui/material'\nimport { ShadowRootTooltip, useBoundedPopperProps } from '@masknet/theme'\nimport { isSameAddress } from '@masknet/web3-shared-base'\n\nexport interface ReverseAddressProps extends ComponentProps<typeof Typography> {\n    address: string\n    pluginID?: NetworkPluginID\n    size?: number\n    // declare explicitly to avoid ts warning\n    component?: string\n}\n\nexport const ReversedAddress = memo<ReverseAddressProps>(({ address, pluginID, size = 4, ...rest }) => {\n    const { data: domain } = useReverseAddress(pluginID, address)\n    const Others = useWeb3Others(pluginID)\n\n    const showDomain = !!domain && Others.isValidDomain(domain)\n    const uiLabel = showDomain ? Others.formatDomainName(domain) : Others.formatAddress(address, size) ?? address\n    const hasEllipsis = showDomain ? uiLabel !== domain : !isSameAddress(uiLabel, address)\n    const node = (\n        <Typography fontWeight={700} {...rest}>\n            {uiLabel}\n        </Typography>\n    )\n    const popperProps = useBoundedPopperProps()\n\n    return hasEllipsis ? (\n        <ShadowRootTooltip\n            title={showDomain ? domain : address}\n            PopperProps={{ ...popperProps, style: { whiteSpace: 'break-spaces' } }}>\n            {node}\n        </ShadowRootTooltip>\n    ) : (\n        node\n    )\n})\n\nReversedAddress.displayName = 'ReversedAddress'\n","import {\n    cloneElement,\n    createContext,\n    memo,\n    type RefObject,\n    useContext,\n    useMemo,\n    useRef,\n    type ReactElement,\n} from 'react'\n\ninterface Options {\n    boundaryRef: RefObject<HTMLElement>\n}\n\nconst BoundaryContext = createContext<Options>({\n    boundaryRef: { current: null },\n})\n\ninterface BoundaryProps {\n    // cloneElement is used.\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    children: ReactElement\n}\n\nexport const Boundary = memo(({ children }: BoundaryProps) => {\n    const boundaryRef = useRef<HTMLElement>(null)\n    const contextValue = useMemo(() => ({ boundaryRef }), [boundaryRef.current])\n    return (\n        <BoundaryContext.Provider value={contextValue}>\n            {cloneElement(children, { ...children.props, ref: boundaryRef })}\n        </BoundaryContext.Provider>\n    )\n})\n\nBoundary.displayName = 'Boundary'\n\nexport function useBoundary() {\n    return useContext(BoundaryContext)\n}\n","import type { PopperProps } from '@mui/material'\nimport { useBoundary } from '../Components/index.js'\n\nexport function useBoundedPopperProps() {\n    const { boundaryRef } = useBoundary()\n\n    const tooltipPopperProps: Partial<PopperProps> = {\n        disablePortal: !!boundaryRef.current,\n        placement: 'top',\n        modifiers: [\n            {\n                name: 'flip',\n                options: {\n                    rootBoundary: boundaryRef.current,\n                    boundary: boundaryRef.current,\n                },\n            },\n        ],\n    }\n\n    return tooltipPopperProps\n}\n","import { useCallback, useState } from 'react'\nimport { createContainer } from 'unstated-next'\n\nfunction useMap(initialState?: Record<string, string>) {\n    const [map, setMap] = useState<Record<string, string>>({})\n\n    const setPair = useCallback((address: string, domain: string) => {\n        setMap((map) => {\n            const key = address.toLowerCase()\n            if (map[key] === domain || !domain.includes('.')) return map\n            return { ...map, [key]: domain }\n        })\n    }, [])\n    const getDomain = useCallback(\n        (address: string) => {\n            return initialState?.[address.toLowerCase()] || map[address.toLowerCase()]\n        },\n        [map, initialState],\n    )\n\n    return { setPair, getDomain, map }\n}\n\nexport const ScopedDomainsContainer = createContainer(useMap)\n\nScopedDomainsContainer.Provider.displayName = 'ScopedDomainsContainer.Provider'\n","import { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { EMPTY_STRING, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useNetworks } from './useNetworks.js'\n\nexport function useNetwork<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    chainId?: Web3Helper.Definition[T]['ChainId'],\n) {\n    const { Network } = useWeb3State(pluginID)\n    const networks = useNetworks(pluginID)\n    const networkID = useSubscription(Network?.networkID ?? EMPTY_STRING)\n\n    return useMemo(() => {\n        if (chainId) return networks.find((x) => x.chainId === chainId)\n        return networks.find((x) => x.ID === networkID)\n    }, [chainId, networkID, networks])\n}\n","import { EMPTY_ARRAY, type NetworkPluginID } from '@masknet/shared-base'\nimport { uniqBy } from 'lodash-es'\nimport { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport { useWeb3State } from './useWeb3State.js'\n\n/**\n * Bulletin networks and custom networks.\n * There could be duplicate chian id among them, because that's allow to custom networks.\n */\nexport function useNetworks<T extends NetworkPluginID = NetworkPluginID>(pluginID?: T, uniqChainId?: boolean) {\n    const { Network } = useWeb3State(pluginID)\n    const networks = useSubscription(Network?.networks ?? EMPTY_ARRAY)\n    return useMemo(() => {\n        const list = networks.filter((x) => x.network === 'mainnet' || x.isCustomized)\n        return uniqChainId ? uniqBy(list, (x) => x.chainId) : list\n    }, [networks, uniqChainId])\n}\n","'use client';\nimport { parseQueryArgs, InfiniteQueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}\n\nexport { useInfiniteQuery };\n//# sourceMappingURL=useInfiniteQuery.mjs.map\n","import React from 'react';\n\nfunction createContainer(useHook) {\n  var Context = React.createContext(null);\n\n  function Provider(props) {\n    var value = useHook(props.initialState);\n    return React.createElement(Context.Provider, {\n      value: value\n    }, props.children);\n  }\n\n  function useContainer() {\n    var value = React.useContext(Context);\n\n    if (value === null) {\n      throw new Error(\"Component must be wrapped with <Container.Provider>\");\n    }\n\n    return value;\n  }\n\n  return {\n    Provider: Provider,\n    useContainer: useContainer\n  };\n}\nfunction useContainer(container) {\n  return container.useContainer();\n}\n\nexport { createContainer, useContainer };\n//# sourceMappingURL=unstated-next.mjs.map\n"],"names":["createElement","useMemo","useTranslation","Trans","createProxy","initValue","define","key","value","Object","defineProperty","container","configurable","__proto__","Proxy","get","_","undefined","getPrototypeOf","setPrototypeOf","v","getOwnPropertyDescriptor","useRSS3Trans","t","bind","createComponent","i18nKey","props","ns","shouldUnescape","RSS3Trans","createContext","useContext","FeedOwnerContext","useFeedOwner","ScopedDomainsContainer","useReverseAddress","useWeb3Others","useAddressLabel","address","pluginID","Others","getDomain","useContainer","data","domain","formattedDomain","formatDomainName","label","formatAddress","format","formatDateTime","Icons","CardType","AchievementBurn","AchievementReceive","CollectibleBurn","CollectibleIn","CollectibleMint","CollectibleOut","CollectibleApproval","DonationDonate","DonationLaunch","GovernancePropose","GovernanceVote","NoteCreate","NoteMint","NoteEdit","NoteLink","NoteBurn","ProfileBurn","ProfileCreate","ProfileUpdate","ProfileLink","ProfileProxy","TokenMint","TokenIn","TokenLiquidity","TokenOut","TokenStake","TokenUnstake","TokenSwap","TokenBridge","TokenBurn","TokenApproval","UnknownBurn","UnknownCancel","UnknownIn","UnknownOut","cardTypeIconMap","CollectibleApprove","ApprovalApprove","platformIconMap","ethereum","ETH","binance_smart_chain","BSC","polygon","Polygon","xdai","Gnosis","arbitrum","Arbitrum","optimism","Optimism","fantom","Fantom","avalanche","Avalanche","zksync","ZkScan","gitcoin","Gitcoin","mirror","Mirror","snapshot","Snapshot","uniswap","Uniswap","binance","lens","Lens","farcaster","Farcaster","crossbell","Crossbell","ZeroX","crosssync","CrossSync","metamask","MetaMask","opensea","OpenSea","sushiswap","SushiSwap","pancakeswap","PancakeSwap","aave","Aave","xlog","XLog","EIP1577","planet","Planet","arweave","Arweave","getPlatformIcon","platform","toLowerCase","hostIconMap","EtherScan","PolygonScan","LooksRare","IPFS","Momoka","hostNameMap","getLastAction","feed","actions","at","getCost","action","metadata","cost","ONE_MIN","ONE_HOUR","ONE_DAY","ONE_WEEK","plural","num","unit","formatTimestamp","timestamp","date","Date","ms","getTime","distance","now","days","Math","floor","hours","mins","transformPlanetResource","markdown","base","replaceAll","match","before","quotation","url","after","head","SingletonModal","FeedDetailsModal","makeStyles","ShadowRootTooltip","Typography","BigNumber","useStyles","theme","inspectable","cursor","backgroundColor","palette","maskColor","bg","header","display","fee","fontWeight","fontSize","borderRadius","color","third","height","padding","justifyContent","alignItems","marginLeft","spacing","body","marginTop","flexGrow","icon","CardFrame","type","actionIndex","className","children","onClick","verbose","badge","rest","classes","cx","CardIcon","PrimaryPlatformIcon","network","ProviderPlatformIcon","map","article","event","open","scopedDomainsMap","div","width","Gas","size","ml","toFixed","title","placement","ReversedAddress","formatBalance","Link","main","marginRight","whiteSpace","link","Label","component","AddressLabel","formatValue","decimals","LinkifyRender","attributes","content","LinkifyOptions","target","render","htmlToPlain","htmlString","trimStart","RSS3BaseAPI","formatEthereumAddress","refs","summary","verboseToken","token","flexDirection","Tag","Type","isCollectibleApprovalFeed","tag","Collectible","Approval","CollectibleApprovalCard","owner","user","collectible_approval","values","collection","contract","address_to","context","components","bold","Image","TextOverflowTooltip","isSameAddress","resolveResourceURL","image","img","objectFit","center","failedImage","soloImage","aspectRatio","info","overflow","flexShrink","lineHeight","subtitle","WebkitBoxOrient","WebkitLineClamp","gridTemplateColumns","gridGap","attribute","attributeType","second","textTransform","attributeValue","textOverflow","isCollectibleFeed","Mint","Trade","Transfer","Burn","includes","isRegisteringENS","CollectibleCard","cardType","collectible_mint","collectible","name","cost_value","cost_symbol","symbol","span","collectible_trade","recipient","collectible_register_ens","ens","standard","costMetadata","isSending","address_from","otherAddress","collectible_operation","other","collectible_burn","imageWidth","imageHeight","filter","x","trait_type","description","length","failed","src","Array","isArray","uri","join","as","useMarkdownStyles","wordBreak","maxWidth","a","highlight","pre","Markdown","Linkify","comment","border","line","maxHeight","originalLabel","margin","isCommentFeed","Social","Comment","CommentCard","mdClasses","commentTarget","imageSize","note","options","original","media","mime_type","startsWith","variant","defaultStyle","range","Children","useState","useRef","useEffect","useLayoutEffect","slider","sliderWrapper","transition","slide","sliderControllers","indicators","gap","active","indicator","Slider","onUpdate","containerRef","index","setIndex","count","style","setStyle","current","offsetWidth","transform","ref","child","LeftArrow","stopPropagation","idx","i","RightArrow","memo","bottom","isDonationFeed","Donation","CardBody","logo","DonationCard","activeActionIndex","availableActions","actionSize","donation_donate_verbose","project","donation_donate","tokenIcon","horizonCenter","tokenList","minHeight","supply","withdraw","success","danger","isLiquidityFeed","Exchange","Liquidity","LiquidityCard","isUp","liquidity","tokens","token_value","contract_address","hash","useQuery","usePublicationId","txId","queryKey","queryFn","queryTransactionPublicationId","useEverSeen","LoadingBase","resolveIPFS_URL","useCallback","playButton","marginBottom","isNoteFeed","Post","Revise","Share","cardTypeMap","toHex","str","toString","padStart","resolveDetailLink","publicationId","related_urls","profile_id","publication_id","pubId","find","endsWith","NoteCard","transformUri","seen","enablePublicationId","isLoading","isImagePost","test","href","evt","Play","transformLinkUri","transformImageUri","v4","uuid","LensAvatar","handle","id1","id2","svg","xmlns","fill","viewBox","defs","linearGradient","id","x1","x2","y1","y2","gradientUnits","stop","stopColor","offset","stopOpacity","clipPath","rect","rx","g","path","d","stroke","strokeLinejoin","strokeWidth","strokeMiterlimit","text","y","dominantBaseline","fontFamily","letterSpacing","textAnchor","fillOpacity","displayName","bio","isProfileFeed","Profile","ProfileCard","profile","source","profile_uri","avatar","isProfileLinkFeed","Follow","Unfollow","suffixMap","ENS","resolveHandle","suffix","ProfileLinkCard","formattedUser","otherEns","formattedOther","Icon","profile_link","isProfileProxyFeed","ProfileProxyCard","profile_proxy","isProposeFeed","Governance","Propose","ProposeCard","propose","isGreaterThan","isTokenApprovalFeed","Transaction","TokenApprovalCard","amount","value_display","token_approval_verbose","token_approval","NetworkIcon","NetworkPluginID","tokenValue","bridgePair","isTokenBridgeFeed","Bridge","TokenBridgeCard","FromNetworkIcon","token_bridge","target_network","sx","RSS3Link","fallback","mr","PLUGIN_EVM","chainId","chain_id","isTokenOperationFeed","isTxTag","isExchangeTag","Deposit","Withdraw","contextMap","TokenOperationCard","isFromOwner","from","to","token_operation_verbose","exchange","token_operation","iconStack","isTokenSwapFeed","Swap","TokenSwapCard","token_swap","from_value","from_symbol","to_value","to_symbol","token_swap_pair","isVoteFeed","Vote","VoteCard","option","choice","proposal","choices","JSON","parse","Number","parseInt","no","vote","UnknownCard","targetUser","carry_out_activity","process","env","NODE_ENV","isStakingFeed","Staking","StakingCard","token_staking","FeedCard","useInfiniteQuery","RSS3","EMPTY_LIST","useFeeds","error","fetchNextPage","enabled","pageParam","res","getAllNotes","getNextPageParam","lastPage","nextIndicator","feeds","pages","flatMap","page","next","ElementAnchor","EmptyStatus","RetryHint","Box","Skeleton","feedCard","loading","FeedsPage","loadingFeeds","reversedName","loadingENS","feedOwner","ownerDisplay","p","boxSizing","mt","retry","mb","animation","no_data","Provider","paddingBottom","callback","InjectedDialog","Linking","parseURL","DialogContent","detailsDialog","backgroundImage","details","card","links","paddingTop","textDecoration","linkLabel","FeedDetailsDialog","onClose","paper","protocol","host","SettingsLanguage","LinkProps","forwardRef","useSingletonModal","props_","setProps_","setScopedDomainsMap","dispatch","onOpen","initialState","close","modals","Modals","register","SocialAddressType","DefaultWeb3ContextProvider","SearchResultType","PLUGIN_ID","shouldDisplay","socialAccount","createProfileTabConfig","priority","ID","UI","TabContent","Utils","createSearchTabConfig","result","Domain","keyword","supportedAddressTypes","EOA","ActivitiesTabConfig","ActivitiesTabConfigInProfileCard","ActivitiesTabConfigInSearchResult","DonationTabConfig","DonationsTabConfigInProfileCard","DonationsTabConfigInSearchResult","SocialTabConfig","SocialTabConfigInProfileCard","SocialTabConfigInSearchResult","site","init","GlobalInjection","ProfileTabs","ProfileCardTabs","SearchResultTabs","useIntersection","setSeen","nullRef","entry","isIntersecting","useImperativeHandle","setOpen","dispatchRef","optionsRef","openRef","creator","dispatchOpen","dispatchClose","dispatchAbort","peek","abort","onAbort","ChainIcon","useIntersectionObserver","Stack","elementRef","intersection","rootMargin","callbackRef","pt","direction","statusBox","iconSize","EmptySimple","DEFAULT_IMAGES","URL","name2Image","sum","charCodeAt","Avatar","useTheme","dark","backgroundSize","logoURL","setFailed","defaultBackgroundImage","showImage","imgProps","onError","common","white","slice","toUpperCase","rounded","optimistic","position","failImage","background","mode","MASK_DARK_FALLBACK","MASK_LIGHT_FALLBACK","disableSpinner","extraClasses","containerProps","decoding","fallbackImage","TypographyProps","canParse","hostname","rel","replace","Button","useSharedTrans","hint","ButtonProps","textAlign","load_failed","load_retry","useNetwork","ImageIcon","expectedNetwork","fallbackNetwork","iconUrl","isCustomized","useBoundedPopperProps","showDomain","isValidDomain","uiLabel","hasEllipsis","node","popperProps","PopperProps","cloneElement","BoundaryContext","boundaryRef","Boundary","contextValue","useBoundary","tooltipPopperProps","disablePortal","modifiers","rootBoundary","boundary","createContainer","useMap","setMap","setPair","useSubscription","EMPTY_STRING","useWeb3State","useNetworks","Network","networks","networkID","EMPTY_ARRAY","uniqBy","uniqChainId","list"],"sourceRoot":"","x_google_ignoreList":[9,53,54]}