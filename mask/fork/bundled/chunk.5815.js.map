{"version":3,"file":"bundled/chunk.5815.js","mappings":";;;;;;;;;;;;;;;;;;AAAqD;AAG9C,eAAeC,mBAAmBC,KAAa,EAAEC,OAAe;IACnE,MAAMC,gBAAgBJ,yBAAWA,CAACK,oBAAoB,CAAC,WAAWF;IAClE,OAAOC,cAAcE,GAAG,CAAcJ;AAC1C;;;;;ACN4B;AACI;;;;;;;;;;;;;ACDL;AAC4B;AAEhD,eAAeO,eAAeC,IAAY,EAAEC,IAAY;IAC3D,IAAI;QACA,MAAMC,WAAW,MAAMC,MACnBN,4DAAMA,CAACC,yEAAqBA,EAAE;YAC1BE;YACAC,MAAMA,KAAKG,OAAO,CAAC,OAAO;QAC9B;QAEJ,OAAQ,MAAMF,SAASG,IAAI;IAK/B,EAAE,OAAOC,KAAK;QACV,MAAM,IAAIC,MAAMC,QAAQZ,GAAG,CAACa,OAAOH,MAAM;IAC7C;AACJ","sources":["webpack://mask-network/./packages/plugins/MaskBox/src/apis/storage.ts","webpack://mask-network/./packages/plugins/MaskBox/src/apis/index.ts","webpack://mask-network/./packages/plugins/MaskBox/src/apis/merkleProof.ts"],"sourcesContent":["import { Web3Storage } from '@masknet/web3-providers'\nimport type { BoxMetadata } from '../type.js'\n\nexport async function getMaskBoxMetadata(boxId: string, creator: string) {\n    const stringStorage = Web3Storage.createFireflyStorage('MaskBox', creator)\n    return stringStorage.get<BoxMetadata>(boxId)\n}\n","export * from './storage.js'\nexport * from './merkleProof.js'\n","import urlcat from 'urlcat'\nimport { MERKLE_PROOF_ENDPOINT } from '../constants.js'\n\nexport async function getMerkleProof(leaf: string, root: string) {\n    try {\n        const response = await fetch(\n            urlcat(MERKLE_PROOF_ENDPOINT, {\n                leaf,\n                root: root.replace(/^0x/, ''),\n            }),\n        )\n        return (await response.json()) as {\n            proof?: string[]\n            message?: string\n            module?: string\n        }\n    } catch (err) {\n        throw new Error(Reflect.get(Object(err), 'message'))\n    }\n}\n"],"names":["Web3Storage","getMaskBoxMetadata","boxId","creator","stringStorage","createFireflyStorage","get","urlcat","MERKLE_PROOF_ENDPOINT","getMerkleProof","leaf","root","response","fetch","replace","json","err","Error","Reflect","Object"],"sourceRoot":"","x_google_ignoreList":[]}