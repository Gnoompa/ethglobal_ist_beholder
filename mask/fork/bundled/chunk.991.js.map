{"version":3,"file":"bundled/chunk.991.js","mappings":"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SAASkG,YAAY;YAC3F3rB,SAAS+rB;QACb;QAEA,MAAMY,UAAU,MAAMrtB,mEAAIA,CAAC6B,kBAAkB,CAACH,MAAM;YAChDhB,SAAS+rB;YACTtrB,QAAQC,YAAYC,OAAO,CAAC,IAAI,KAAK;QACzC;QAEA,IAAIgsB,SAAS;YACTb;YACAK;YACAG;QACJ;IACJ,GACA;QAAChsB;QAASmlB;QAAQ4F;QAAS9xB;QAASosB;QAAkBoG;QAAc/rB;KAAQ;IAGhF,MAAM4sB,gBAAgB5yB,kDAAWA,CAAC;QAC9BmyB;QACAG;IACJ,GAAG;QAACH;KAAkB;IAEtB,OAAO;QACH;YACIj2B,MAAMyvB;YACN5P;YACA0P;YACA4F;YACAlX;QACJ;QACA;YAAE,GAAGvD,KAAK;YAAE1V,SAASkxB,oBAAoBH,kBAAkBrb,MAAM1V,OAAO;YAAE2xB,gBAAgBjc,MAAM1V,OAAO;QAAC;QACxG2qB;QACA+G;KACH;AACL;;;;;;;;;;;;;;ACtG+B;AACI;AACK;AACQ;;AAEhD;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA,IAAI;AACJ;AACA,sBAAsB,sDAAI,CAAC,4DAAM;AACjC;AACA,GAAG;AACH;AACA,MAAqC,GAAG,CAGvC,CAAC;;;;;;;ACtBW;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;;AAGA;AACA,IAAI,IAA6B;AACjC;AACA;;;;;;;;ACpKY;;AAEZ;AACA;AACA;;AAEA,sBAAsB,cAAc;AACpC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa,8bAA8b;AAC3c,cAAc,kCAAkC,iBAAiB,UAAU,0BAA0B,4CAA4C,kCAAkC,mDAAmD,kBAAkB,kBAAkB,uBAAuB,GAAG,uBAAuB,GAAG,eAAe,GAAG,kBAAkB,GAAG,gBAAgB,GAAG,YAAY,GAAG,YAAY,GAAG,cAAc,GAAG,gBAAgB,GAAG,kBAAkB,GAAG,gBAAgB;AAC/d,oBAAoB,GAAG,mBAAmB,YAAY,UAAU,wBAAwB,YAAY,UAAU,yBAAyB,aAAa,iBAAiB,yBAAyB,aAAa,iBAAiB,iBAAiB,aAAa,qDAAqD,oBAAoB,aAAa,iBAAiB,kBAAkB,aAAa,iBAAiB,cAAc,aAAa,iBAAiB,cAAc,aAAa;AACxd,gBAAgB,aAAa,iBAAiB,kBAAkB,aAAa,iBAAiB,oBAAoB,aAAa,iBAAiB,kBAAkB,aAAa,iBAAiB,sBAAsB,aAAa;AACnO,0BAA0B,aAAa,2PAA2P,cAAc;;;;;;;;ACbnS;;AAEb,IAAI,IAAqC;AACzC,EAAE,2CAA4D;AAC9D,EAAE,KAAK,EAEN;;;;;;;;;;;;;;;;;;;;ACND;AAC+B;;AAE/B,wCAAwC,gDAAmB;AAC3D,6BAA6B,6CAAgB;AAC7C;;AAE+C;AAC/C;;;;;;;;;;;;;ACR0B;;AAE1B;AACA,gBAAgB,gDAAmB;;AAEnC;AACA;AACA,WAAW,gDAAmB;AAC9B;AACA,KAAK;AACL;;AAEA;AACA,gBAAgB,6CAAgB;;AAEhC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyC;AACzC","sources":["webpack://mask-network/./packages/plugin-infra/src/dom/context.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/context.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useAllPersonas.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useLastRecognizedIdentity.ts","webpack://mask-network/./packages/plugin-infra/src/utils/message.ts","webpack://mask-network/./packages/plugins/SmartPay/src/message.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useCurrentPersonaInformation.ts","webpack://mask-network/./packages/plugins/SmartPay/src/hooks/useQueryQualifications.ts","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/components/SmartPayEntry.tsx","webpack://mask-network/./packages/plugins/SmartPay/src/hooks/useSmartPayContext.ts","webpack://mask-network/./packages/plugins/SmartPay/src/locales/i18n_generated.ts","webpack://mask-network/./packages/plugins/SmartPay/src/hooks/useDeploy.tsx","webpack://mask-network/./packages/plugins/SmartPay/src/hooks/useManagers.ts","webpack://mask-network/./packages/plugins/SmartPay/src/type.ts","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/components/CreateSuccessDialog.tsx","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/components/ManagePopover.tsx","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/components/SmartPayBanner.tsx","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/components/Deploy.tsx","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/components/InEligibilityTips.tsx","webpack://mask-network/./packages/web3-shared/base/src/helpers/getTokenUSDValue.ts","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/components/AddSmartPayPopover.tsx","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/components/AccountsManagePopover.tsx","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/components/SmartPayContent.tsx","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/components/RouterDialog.tsx","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/components/SmartPayDialog.tsx","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/components/ReceiveDialog.tsx","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/components/SmartPayDescriptionDialog.tsx","webpack://mask-network/./packages/plugins/SmartPay/src/SiteAdaptor/index.tsx","webpack://mask-network/./packages/shared-base-ui/src/hooks/useRemoteControlledDialog.ts","webpack://mask-network/./packages/shared-base/src/SingletonModal/index.ts","webpack://mask-network/./packages/shared-base/src/helpers/personas.ts","webpack://mask-network/./packages/shared-base/src/types/Persona.ts","webpack://mask-network/./packages/shared/src/UI/components/PersonaAction/PersonaAction.tsx","webpack://mask-network/./packages/shared/src/UI/components/PersonaAction/PersonaImageIcon.tsx","webpack://mask-network/./packages/shared/src/UI/components/PersonaAction/PlatformAvatar.tsx","webpack://mask-network/./packages/shared/src/UI/components/QRCode/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletIcon/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/WalletStatusBar/WalletDescription.tsx","webpack://mask-network/./packages/shared/src/UI/contexts/components/ApproveMaskDialog.tsx","webpack://mask-network/./packages/shared/src/UI/modals/modals.ts","webpack://mask-network/./packages/shared/src/UI/wallet/FormattedBalance.tsx","webpack://mask-network/./packages/shared/src/UI/wallet/FormattedCurrency.tsx","webpack://mask-network/./packages/shared/src/hooks/useMenu.tsx","webpack://mask-network/./packages/theme/src/Components/WrappedComponents/ShadowRootMenu.ts","webpack://mask-network/./packages/web3-hooks/base/src/useCurrencyType.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFiatCurrencyRate.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNetworkDescriptor.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useERC20TokenAllowance.ts","webpack://mask-network/./packages/web3-hooks/evm/src/useERC20TokenApproveCallback.ts","webpack://mask-network/./node_modules/.pnpm/@mui+styled-engine@5.10.8_@emotion+react@11.11.1_@emotion+styled@11.11.0_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","webpack://mask-network/./node_modules/.pnpm/dijkstrajs@1.0.2/node_modules/dijkstrajs/dijkstra.js","webpack://mask-network/./node_modules/.pnpm/encode-utf8@1.0.3/node_modules/encode-utf8/index.js","webpack://mask-network/./node_modules/.pnpm/react-is@18.2.0/node_modules/react-is/cjs/react-is.production.min.js","webpack://mask-network/./node_modules/.pnpm/react-is@18.2.0/node_modules/react-is/index.js","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/isRestoring.mjs","webpack://mask-network/./node_modules/.pnpm/unstated-next@1.1.0/node_modules/unstated-next/dist/unstated-next.mjs"],"sourcesContent":["// This file will be virtualized in the future.\n// Currently all plugins access the same value, but we can virtualize them in the future.\n\nimport type {\n    DashboardRoutes,\n    ECKeyIdentifier,\n    NextIDPlatform,\n    PersonaIdentifier,\n    PersonaInformation,\n    PopupRoutes,\n    PopupRoutesParamsMap,\n    ProfileIdentifier,\n    SignType,\n    SocialIdentity,\n} from '@masknet/shared-base'\nimport type { Subscription } from 'use-subscription'\nimport type { IdentityResolved } from '../types.js'\nimport type { LinkedProfileDetails } from '@masknet/public-api'\n\nexport interface __UIContext__ {\n    allPersonas: Subscription<readonly PersonaInformation[]>\n    currentPersona: Subscription<PersonaIdentifier | undefined>\n    queryPersonaAvatar(\n        identifiers: readonly PersonaIdentifier[],\n    ): Promise<Map<ProfileIdentifier | PersonaIdentifier, string | undefined>>\n    queryPersonaAvatar(identifiers: undefined | PersonaIdentifier): Promise<string | undefined>\n    querySocialIdentity: (\n        platform: NextIDPlatform,\n        identity: IdentityResolved | undefined,\n    ) => Promise<SocialIdentity | undefined>\n    // DO NOT add <T> to this function, you do not test if it is T right?\n    // (e.g. receive a function to check it validate: (x: unknown) => x is T)\n    // fetchJSON<T>(validate: (x: unknown) => x is T, input: RequestInfo | URL, init?: RequestInit): Promise<T>\n    fetchJSON(input: RequestInfo | URL, init?: RequestInit): Promise<unknown>\n    queryPersonaByProfile: (id: ProfileIdentifier) => Promise<PersonaInformation | undefined>\n    /** Open Dashboard with a new window */\n    openDashboard(route?: DashboardRoutes, search?: string): Promise<void>\n    /** Open popup window */\n    openPopupWindow<T extends PopupRoutes>(\n        route: T,\n        params: T extends keyof PopupRoutesParamsMap ? PopupRoutesParamsMap[T] : undefined,\n        evenWhenWalletLocked?: boolean,\n    ): Promise<void>\n    /** Sign a message with persona (w or w/o popups) */\n    signWithPersona(type: SignType, message: unknown, identifier?: ECKeyIdentifier, silent?: boolean): Promise<string>\n    hasPaymentPassword(): Promise<boolean>\n    createPersona: () => void\n    setCurrentPersonaIdentifier: ((x?: PersonaIdentifier) => Promise<void>) | undefined\n    attachProfile:\n        | ((\n              source: ProfileIdentifier,\n              target: ProfileIdentifier | PersonaIdentifier,\n              data: LinkedProfileDetails,\n          ) => Promise<void>)\n        | undefined\n    setPluginMinimalModeEnabled: ((id: string, enabled: boolean) => Promise<void>) | undefined\n    hasHostPermission: ((origins: readonly string[]) => Promise<boolean>) | undefined\n    requestHostPermission: ((origins: readonly string[]) => Promise<boolean>) | undefined\n}\nexport let allPersonas: __UIContext__['allPersonas']\nexport let currentPersona: __UIContext__['currentPersona']\nexport let queryPersonaAvatar: __UIContext__['queryPersonaAvatar']\nexport let querySocialIdentity: __UIContext__['querySocialIdentity']\nexport let fetchJSON: __UIContext__['fetchJSON']\nexport let queryPersonaByProfile: __UIContext__['queryPersonaByProfile']\nexport let openDashboard: __UIContext__['openDashboard']\nexport let openPopupWindow: __UIContext__['openPopupWindow']\nexport let signWithPersona: __UIContext__['signWithPersona']\nexport let hasPaymentPassword: __UIContext__['hasPaymentPassword']\nexport let createPersona: __UIContext__['createPersona']\nexport let setCurrentPersonaIdentifier: __UIContext__['setCurrentPersonaIdentifier']\nexport let attachProfile: __UIContext__['attachProfile']\nexport let setPluginMinimalModeEnabled: __UIContext__['setPluginMinimalModeEnabled']\nexport let hasHostPermission: __UIContext__['hasHostPermission']\nexport let requestHostPermission: __UIContext__['requestHostPermission']\n\nexport function __setUIContext__(value: __UIContext__) {\n    ;({\n        allPersonas,\n        currentPersona,\n        queryPersonaAvatar,\n        querySocialIdentity,\n        fetchJSON,\n        queryPersonaByProfile,\n        openDashboard,\n        openPopupWindow,\n        signWithPersona,\n        hasPaymentPassword,\n        createPersona,\n        setCurrentPersonaIdentifier,\n        attachProfile,\n        setPluginMinimalModeEnabled,\n        hasHostPermission,\n        requestHostPermission,\n    } = value)\n}\n","// This file will be virtualized in the future.\n// Currently all plugins access the same value, but we can virtualize them in the future.\n\nimport type { Subscription } from 'use-subscription'\nimport type { IdentityResolved } from '../types.js'\nimport type { NextIDPlatform, PersonaIdentifier, PostIdentifier } from '@masknet/shared-base'\n\nexport interface __SiteAdaptorContext__ {\n    lastRecognizedProfile: Subscription<IdentityResolved | undefined>\n    currentVisitingProfile: Subscription<IdentityResolved | undefined>\n    currentNextIDPlatform: NextIDPlatform | undefined\n    currentPersonaIdentifier: Subscription<PersonaIdentifier | undefined>\n    getPostURL: (identifier: PostIdentifier) => URL | null\n    share: undefined | ((text: string) => void)\n    getUserIdentity: ((useId: string) => Promise<IdentityResolved | undefined>) | undefined\n    getPostIdFromNewPostToast: (() => string) | undefined\n    postMessage: ((text: string, options?: any) => Promise<void>) | undefined\n    getSearchedKeyword: (() => string) | undefined\n    connectPersona: () => Promise<void>\n}\nexport let lastRecognizedProfile: __SiteAdaptorContext__['lastRecognizedProfile']\nexport let currentVisitingProfile: __SiteAdaptorContext__['currentVisitingProfile']\nexport let currentNextIDPlatform: NextIDPlatform | undefined\nexport let currentPersonaIdentifier: __SiteAdaptorContext__['currentPersonaIdentifier']\nexport let getPostURL: __SiteAdaptorContext__['getPostURL']\nexport let share: __SiteAdaptorContext__['share']\nexport let getUserIdentity: __SiteAdaptorContext__['getUserIdentity']\nexport let getPostIdFromNewPostToast: __SiteAdaptorContext__['getPostIdFromNewPostToast']\nexport let postMessage: __SiteAdaptorContext__['postMessage']\nexport let getSearchedKeyword: __SiteAdaptorContext__['getSearchedKeyword']\nexport let connectPersona: __SiteAdaptorContext__['connectPersona']\nexport function __setSiteAdaptorContext__(value: __SiteAdaptorContext__) {\n    ;({\n        lastRecognizedProfile,\n        currentVisitingProfile,\n        currentNextIDPlatform,\n        currentPersonaIdentifier,\n        getPostURL,\n        share,\n        getUserIdentity,\n        getPostIdFromNewPostToast,\n        postMessage,\n        getSearchedKeyword,\n        connectPersona,\n    } = value)\n}\n","import { useSubscription } from 'use-subscription'\nimport { allPersonas } from '../dom/context.js'\n\nexport function useAllPersonas() {\n    return useSubscription(allPersonas)\n}\n","import { useSubscription } from 'use-subscription'\nimport { UNDEFINED } from '@masknet/shared-base'\nimport { lastRecognizedProfile } from './context.js'\n\nexport function useLastRecognizedIdentity() {\n    return useSubscription(lastRecognizedProfile ?? UNDEFINED)\n}\n","import { WebExtensionMessage } from '@dimensiondev/holoflows-kit'\nimport type { PluginMessageEmitterItem } from '@masknet/plugin-infra'\nimport { serializer } from '@masknet/shared-base'\n\n/** @internal */\nexport const DOMAIN_RPC = Symbol('create RPC instead of normal message')\n/**\n * Create a plugin message emitter\n * @param pluginID The plugin ID\n *\n * @example\n * export const MyPluginMessage = getPluginMessage(PLUGIN_ID)\n */\nexport let getPluginMessage = <T>(pluginID: string, type?: typeof DOMAIN_RPC): PluginMessageEmitter<T> => {\n    const domain = (type === DOMAIN_RPC ? '@plugin-rpc/' : '@plugin/') + pluginID\n    if (cache.has(domain)) return cache.get(domain) as any\n\n    const messageCenter = new WebExtensionMessage<T>({ domain })\n    const events = messageCenter.events\n    messageCenter.serialization = serializer\n    cache.set(domain, events)\n    return events\n}\n\nexport function __workaround__replaceImplementationOfCreatePluginMessage__(\n    newImpl: (pluginID: string) => PluginMessageEmitter<any>,\n) {\n    getPluginMessage = newImpl\n}\nexport type PluginMessageEmitter<T> = { readonly [key in keyof T]: PluginMessageEmitterItem<T[key]> }\nconst cache = new Map<string, PluginMessageEmitter<unknown>>()\n\n// TODO: this type should be defined here, not shared-base\nexport type { PluginMessageEmitterItem } from '@masknet/shared-base'\n","import { getPluginMessage, type PluginMessageEmitter } from '@masknet/plugin-infra'\nimport type { PersonaInformation, Wallet } from '@masknet/shared-base'\nimport { PLUGIN_ID } from './constants.js'\n\ntype SmartPayDescriptionDialogEvent = { open: boolean }\ntype SmartPayDialogEvent = {\n    open: boolean\n    hasAccounts?: boolean\n    signPersona?: PersonaInformation\n    signWallet?: Wallet\n}\ntype ReceiveDialogEvent = { open: boolean; address?: string; name?: string }\n\ninterface PluginSmartPayMessage {\n    smartPayDescriptionDialogEvent: SmartPayDescriptionDialogEvent\n    smartPayDialogEvent: SmartPayDialogEvent\n    receiveDialogEvent: ReceiveDialogEvent\n}\n\nimport.meta.webpackHot?.accept()\nexport const PluginSmartPayMessages: PluginMessageEmitter<PluginSmartPayMessage> = getPluginMessage(PLUGIN_ID)\n","import { useSubscription } from 'use-subscription'\nimport { UNDEFINED } from '@masknet/shared-base'\nimport { allPersonas, currentPersona } from '../dom/context.js'\n\nexport function useCurrentPersonaInformation() {\n    const current = useSubscription(currentPersona ?? UNDEFINED)\n    const personas = useSubscription(allPersonas)\n    return personas?.find((x) => x.identifier.rawPublicKey === current?.rawPublicKey)\n}\n","import { intersectionWith, first } from 'lodash-es'\nimport { useAsync } from 'react-use'\nimport type { AsyncState } from 'react-use/lib/useAsyncFn.js'\nimport {\n    useLastRecognizedIdentity,\n    useCurrentPersonaInformation,\n    useAllPersonas,\n} from '@masknet/plugin-infra/content-script'\nimport { NextIDPlatform, type PersonaInformation, type Wallet } from '@masknet/shared-base'\nimport { useWallets } from '@masknet/web3-hooks-base'\nimport { NextIDProof } from '@masknet/web3-providers'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { isValidAddress } from '@masknet/web3-shared-evm'\n\nexport function useQueryQualifications(): AsyncState<{\n    hasVerifiedPersona: boolean\n    signPersona?: PersonaInformation\n    signWallet?: Wallet\n}> {\n    const currentIdentity = useLastRecognizedIdentity()\n    const currentPersona = useCurrentPersonaInformation()\n    const wallets = useWallets()\n    const personas = useAllPersonas()\n\n    return useAsync(async () => {\n        if (!currentIdentity?.identifier?.userId || (!currentPersona && !wallets.length) || !currentIdentity.isOwner)\n            return {\n                hasVerifiedPersona: false,\n            }\n\n        // If currentPersona is bound, set the currentPersona be signer\n        if (currentPersona) {\n            const isVerifiedPersona = await NextIDProof.queryIsBound(\n                currentPersona.identifier.publicKeyAsHex.toLowerCase(),\n                NextIDPlatform.Twitter,\n                currentIdentity?.identifier?.userId,\n            )\n\n            if (isVerifiedPersona)\n                return {\n                    hasVerifiedPersona: true,\n                    signPersona: currentPersona,\n                }\n        }\n\n        const response = await NextIDProof.queryAllExistedBindingsByPlatform(\n            NextIDPlatform.Twitter,\n            currentIdentity.identifier.userId,\n        )\n\n        const verifiedPersona = intersectionWith(\n            personas.map((x) => ({ ...x, persona: x.identifier.publicKeyAsHex.toLowerCase() })),\n            response,\n            (a, b) => a.persona === b.persona,\n        )\n\n        const verifiedWallets = intersectionWith(\n            wallets.map((x) => ({\n                ...x,\n                identity: x.address,\n            })),\n            response.flatMap((x) =>\n                x.proofs.filter((y) => y.platform === NextIDPlatform.Ethereum && isValidAddress(y.identity)),\n            ),\n            (a, b) => isSameAddress(a.identity, b.identity),\n        )\n\n        if (verifiedPersona.length) {\n            return {\n                hasVerifiedPersona: true,\n            }\n        } else if (verifiedWallets.length) {\n            return {\n                hasVerifiedPersona: false,\n                signWallet: first(verifiedWallets),\n            }\n        }\n\n        return {\n            hasVerifiedPersona: false,\n        }\n    }, [currentIdentity, currentPersona, wallets, personas])\n}\n","import { memo, useCallback, useEffect } from 'react'\nimport { Trans } from 'react-i18next'\nimport { ApplicationEntry, LeavePageConfirmModal, PersonaSelectPanelModal, useSharedTrans } from '@masknet/shared'\nimport { CrossIsolationMessages, DashboardRoutes, PluginID } from '@masknet/shared-base'\nimport { useRemoteControlledDialog } from '@masknet/shared-base-ui'\nimport { Icons } from '@masknet/icons'\nimport { useWallets } from '@masknet/web3-hooks-base'\nimport { useAllPersonas } from '@masknet/plugin-infra/content-script'\nimport { PluginSmartPayMessages } from '../../message.js'\nimport { useQueryQualifications } from '../../hooks/useQueryQualifications.js'\nimport { openDashboard } from '@masknet/plugin-infra/dom/context'\n\ninterface SmartPayEntryProps {\n    disabled: boolean\n    tooltipHint?: string\n    onClick?: (walletConnectedCallback?: () => void) => void\n}\n\nexport const SmartPayEntry = memo<SmartPayEntryProps>((props) => {\n    const t = useSharedTrans()\n\n    const wallets = useWallets()\n    const personas = useAllPersonas()\n\n    const { setDialog: setSmartPayDialog } = useRemoteControlledDialog(PluginSmartPayMessages.smartPayDialogEvent)\n\n    const { value, loading } = useQueryQualifications()\n\n    const handleClick = useCallback(async () => {\n        if (loading || !value) return\n\n        // Contract account already exists\n        if (wallets.filter((x) => x.owner).length) {\n            setSmartPayDialog({\n                open: true,\n                hasAccounts: true,\n                signWallet: value.signWallet,\n                signPersona: value.signPersona,\n            })\n            return\n        }\n        // If there is no persona and no signer\n        if (!personas.length && !value.signPersona && !value.signWallet) {\n            LeavePageConfirmModal.open({\n                info: {\n                    target: 'dashboard',\n                    url: DashboardRoutes.SignUpPersona,\n                    text: t.create_persona_hint(),\n                    title: t.create_persona_title(),\n                    actionHint: t.create_persona_action(),\n                    position: 'center',\n                },\n                openDashboard,\n            })\n            return\n        }\n\n        // if there is verified persona but current persona isn't verified\n        if ((value.hasVerifiedPersona || personas.length) && !value.signPersona && !value.signWallet) {\n            return PersonaSelectPanelModal.open({\n                enableVerify: true,\n                finishTarget: PluginID.SmartPay,\n            })\n        }\n        return setSmartPayDialog({\n            open: true,\n            signWallet: value.signWallet,\n            signPersona: value.signPersona,\n        })\n    }, [loading, wallets, value, personas])\n\n    useEffect(() => {\n        return CrossIsolationMessages.events.applicationDialogEvent.on(({ selectedPersona, pluginID, open }) => {\n            if (pluginID !== PluginID.SmartPay) return\n            setSmartPayDialog({\n                open,\n                signPersona: selectedPersona,\n            })\n        })\n    }, [])\n\n    return (\n        <ApplicationEntry\n            {...props}\n            icon={<Icons.SmartPay size={36} />}\n            title={<Trans ns={PluginID.SmartPay} i18nKey=\"__plugin_name\" />}\n            onClick={() => (props.onClick ? props.onClick() : handleClick())}\n        />\n    )\n})\n","import { useState } from 'react'\nimport { createContainer } from 'unstated-next'\nimport type { PersonaInformation, Wallet } from '@masknet/shared-base'\n\nfunction useSmartPayContext() {\n    const [signer, setSigner] = useState<\n        | {\n              signWallet?: Wallet\n              signPersona?: PersonaInformation\n          }\n        | undefined\n    >()\n\n    return {\n        signer,\n        setSigner,\n    }\n}\n\nexport const SmartPayContext = createContainer(useSmartPayContext)\n","// @ts-nocheck\n/* eslint-disable */\nimport { createElement, useMemo, type ComponentType } from \"react\";\nimport { useTranslation, Trans, type TransProps } from \"react-i18next\";\ntype TypedTransProps<Value, Components> = Omit<TransProps<string>, \"values\" | \"ns\" | \"i18nKey\"> & ({} extends Value ? {} : {\n    values: Value;\n}) & {\n    components: Components;\n};\nfunction createProxy(initValue: (key: string) => any) {\n    function define(key: string) {\n        const value = initValue(key);\n        Object.defineProperty(container, key, { value, configurable: true });\n        return value;\n    }\n    const container = {\n        __proto__: new Proxy({ __proto__: null }, {\n            get(_, key) {\n                if (typeof key === \"symbol\")\n                    return undefined;\n                return define(key);\n            }\n        })\n    };\n    return new Proxy(container, {\n        getPrototypeOf: () => null,\n        setPrototypeOf: (_, v) => v === null,\n        getOwnPropertyDescriptor: (_, key) => {\n            if (typeof key === \"symbol\")\n                return undefined;\n            if (!(key in container))\n                define(key);\n            return Object.getOwnPropertyDescriptor(container, key);\n        }\n    });\n}\nexport function useSmartPayTrans(): {\n    /**\n      * `Smart Pay`\n      */\n    __plugin_name(): string;\n    /**\n      * `Loading`\n      */\n    loading(): string;\n    /**\n      * `Add SmartPay Wallet`\n      */\n    add_smart_pay_wallet(): string;\n    /**\n      * `Approve`\n      */\n    approve_mask(): string;\n    /**\n      * `To interact with Polygon Network, MATIC tokens are required to pay as gas fees. SmartPay allow users to pay gas fee on Polygon Network with MASK token.`\n      */\n    approve_mask_description(): string;\n    /**\n      * `Do you want to set MASK token as gas fee?`\n      */\n    approve_mask_question(): string;\n    /**\n      * `Allow Mask as gas`\n      */\n    allow_mask_as_gas_token(): string;\n    /**\n      * `Set MASK tokens to pay gas fee when interacting with Polygon Network.`\n      */\n    allow_mask_as_gas_token_description(): string;\n    /**\n      * `Create`\n      */\n    create(): string;\n    /**\n      * `Create a New Wallet`\n      */\n    create_a_new_wallet_title(): string;\n    /**\n      * `Create a new Mask wallet in Pop-up.`\n      */\n    create_a_new_wallet_desc(): string;\n    /**\n      * `Create a New Persona`\n      */\n    create_a_new_persona_title(): string;\n    /**\n      * `Create a new Persona in Pop-up.`\n      */\n    create_a_new_persona_desc(): string;\n    /**\n      * `Created successfully!`\n      */\n    create_successfully(): string;\n    /**\n      * `Create SmartPay Wallet`\n      */\n    create_smart_pay_wallet(): string;\n    /**\n      * `Created a SmartPay Wallet on Ploygon network.`\n      */\n    created_smart_pay_wallet_description(): string;\n    /**\n      * `Congratulation! You’ve deployed SmartPay Wallet {{address}}.`\n      */\n    create_successfully_tips(options: {\n        readonly address: string;\n    }): string;\n    /**\n      * `Management account of the SmartPay Wallet is {{owner}}.`\n      */\n    create_successfully_tips_owner(options: {\n        readonly owner: string;\n    }): string;\n    /**\n      * `Receives assets on Polygon Network ONLY`\n      */\n    can_only_receive_polygon_assets(): string;\n    /**\n      * `Current Management account`\n      */\n    current_manage_account(): string;\n    /**\n      * `Change Owner`\n      */\n    change_owner(): string;\n    /**\n      * `Done`\n      */\n    done(): string;\n    /**\n      * `Deploy`\n      */\n    deploy(): string;\n    /**\n      * `What to know before SmartPay Wallet deployment:`\n      */\n    deploy_tips_title(): string;\n    /**\n      * `User need to deploy the SmartPay Wallet on Polygon Network before using it for blockchain interaction. Wallet that has not been deployed can receive assets, but cannot send any transactions.`\n      */\n    deploy_tips_description_one(): string;\n    /**\n      * `You can change management account of SmartPay Wallet. In Mask Network, both Persona and Mask Wallet can be authorized as management account.`\n      */\n    deploy_tips_description_two(): string;\n    /**\n      * `Users can use SmartPay Wallet (free gas fee and private key change) only on Polygon Network at the moment.`\n      */\n    deploy_tips_description_three(): string;\n    /**\n      * `This SmartPay Wallet can only receive assets on Polygon Network. Please do not use this address to receive assets from other EVM chains.`\n      */\n    deploy_tips_description_four(): string;\n    /**\n      * `The ERC-4337 will open the door to more creativity and more important features for wallet design.`\n      */\n    erc_4337_features_title(): string;\n    /**\n      * `Multisigs and social recovery`\n      */\n    erc_4337_features_one(): string;\n    /**\n      * `More efficient and simpler signature algorithms (eg. Schnorr, BLS)`\n      */\n    erc_4337_features_two(): string;\n    /**\n      * `Post-quantum safe signature algorithms (eg. Lamport, Winternitz)`\n      */\n    erc_4337_features_three(): string;\n    /**\n      * `Upgradeability`\n      */\n    erc_4337_features_four(): string;\n    /**\n      * `Lucky Drop`\n      */\n    lucky_drop(): string;\n    /**\n      * `Manage Account`\n      */\n    managed_accounts(): string;\n    /**\n      * `Sorry, you are not in the free trial whitelist.`\n      */\n    ineligibility_tips(): string;\n    /**\n      * `You are in the trial whitelist.`\n      */\n    white_list_tips(): string;\n    /**\n      * `Create a SmartPay Wallet with your Twitter account.`\n      */\n    personas_description(): string;\n    /**\n      * `Swap`\n      */\n    swap(): string;\n    /**\n      * `SmartPay Wallet`\n      */\n    smart_pay_wallet(): string;\n    /**\n      * `SmartPay Wallet Deployment`\n      */\n    smart_pay_wallet_deployment(): string;\n    /**\n      * `Set up the Management Account for SmartPay Wallet`\n      */\n    setup_smart_pay_managed_account(): string;\n    /**\n      * `Send`\n      */\n    send(): string;\n    /**\n      * `SmartPay is based on ERC-4337 and is currently deployed on Polygon Network. Multiple chains will be supported in the future. ERC-4337 is a new wallet proposal that would open the door for creativity in wallet design and could provide more important features. And we will design more fascinating features based on the new wallet proposal in Mask Network.`\n      */\n    smart_pay_description(): string;\n    /**\n      * `You need to know before using SmartPay:`\n      */\n    setup_smart_pay_title(): string;\n    /**\n      * `Free gas experience in Mask Network’s dApps like Lucky Drop and Tips.`\n      */\n    setup_smart_pay_two(): string;\n    /**\n      * `Your private key and Json file can only be used in SmartPay.`\n      */\n    setup_smart_pay_three(): string;\n    /**\n      * `Scan address to receive payment`\n      */\n    scan_address_to_payment(): string;\n    /**\n      * `MASK token can be used to pay gas fee.`\n      */\n    remain_mask_tips(): string;\n    /**\n      * `The Twitter account above remains {{count}} time to create SmartPay Wallet.`\n      */\n    remain_times_tips_one(options: {\n        readonly count: (string | number | bigint) & (string | number | bigint);\n    }): string;\n    /**\n      * `The Twitter account above remains {{count}} times to create SmartPay Wallet.`\n      */\n    remain_times_tips_other(options: {\n        readonly count: string | number | bigint;\n    }): string;\n    /**\n      * `Personas`\n      */\n    personas(): string;\n    /**\n      * `Receive`\n      */\n    receive(): string;\n    /**\n      * `Timeout`\n      */\n    timeout(): string;\n    /**\n      * `Transaction submitted.`\n      */\n    transaction_submitted(): string;\n    /**\n      * `Transaction rejected.`\n      */\n    transaction_rejected(): string;\n    /**\n      * `User cancelled the process.`\n      */\n    user_cancelled_the_transaction(): string;\n    /**\n      * `Network error.`\n      */\n    network_error(): string;\n    /**\n      * `Wallets`\n      */\n    wallets(): string;\n    /**\n      * `Waiting for user signature`\n      */\n    waiting_for_user_signature(): string;\n    /**\n      * `What is SmartPay`\n      */\n    what_is_smart_pay(): string;\n    /**\n      * `What is SmartPay?`\n      */\n    what_is_smart_pay_title(): string;\n    /**\n      * - deploy_tips_description_one: `User need to deploy the SmartPay Wallet on Polygon Network before using it for blockchain interaction. Wallet that has not been deployed can receive assets, but cannot send any transactions.`\n    \n      * - deploy_tips_description_two: `You can change management account of SmartPay Wallet. In Mask Network, both Persona and Mask Wallet can be authorized as management account.`\n      */\n    deploy_tips_description(options: {\n        readonly count: string | number | bigint;\n    }): string;\n    /**\n      * - erc_4337_features_one: `Multisigs and social recovery`\n    \n      * - erc_4337_features_two: `More efficient and simpler signature algorithms (eg. Schnorr, BLS)`\n      */\n    erc_4337_features(options: {\n        readonly count: string | number | bigint;\n    }): string;\n    /**\n      * - remain_times_tips_one: `The Twitter account above remains {{count}} time to create SmartPay Wallet.`\n    \n      * - remain_times_tips_other: `The Twitter account above remains {{count}} times to create SmartPay Wallet.`\n      */\n    remain_times_tips(options: {\n        readonly count: string | number | bigint;\n    }): string;\n} { const { t } = useTranslation(\"com.mask.smart-pay\"); return useMemo(() => createProxy((key) => t.bind(null, key)), [t]); }\nfunction createComponent(i18nKey: string) {\n    return (props) => createElement(Trans, { i18nKey, ns: \"com.mask.smart-pay\", shouldUnescape: true, ...props });\n}\nexport const SmartPayTrans: {\n    /**\n      * `You can follow Mask Network <Link>Twitter</Link> or <Discord>Discord</Discord> to participate in the event and get free qualification to have gas-free blockchain experiences with SmartPay. Soon we will publish the second batch of users participating in the test!`\n      */\n    eligibility_description: ComponentType<TypedTransProps<Readonly<{}>, {\n        Link: JSX.Element;\n        Discord: JSX.Element;\n    }>>;\n    /**\n      * `Click <Link>here</Link> and fill the SmartPay Wallet whitelist application form.`\n      */\n    eligibility_query: ComponentType<TypedTransProps<Readonly<{}>, {\n        Link: JSX.Element;\n    }>>;\n    /**\n      * `<strong>Your smart contract wallet is only deployed on Polygon Network for now. Please do not receive funds on other chains with the same address. </strong> We will support more chains in the future.`\n      */\n    setup_smart_pay_one: ComponentType<TypedTransProps<Readonly<{}>, {\n        strong: JSX.Element;\n    }>>;\n    /**\n      * - setup_smart_pay_one: `<strong>Your smart contract wallet is only deployed on Polygon Network for now. Please do not receive funds on other chains with the same address. </strong> We will support more chains in the future.`\n    \n      * - setup_smart_pay_two: `Free gas experience in Mask Network’s dApps like Lucky Drop and Tips.`\n      */\n    setup_smart_pay: ComponentType<TypedTransProps<{\n        readonly count: string | number | bigint;\n    }, {\n        strong: JSX.Element;\n    }>>;\n} = /*#__PURE__*/ createProxy(createComponent);\n","import { useCallback, useRef } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { getUnixTime } from 'date-fns'\nimport { Typography } from '@mui/material'\nimport { useLastRecognizedIdentity } from '@masknet/plugin-infra/content-script'\nimport {\n    type NetworkPluginID,\n    type PersonaInformation,\n    PopupRoutes,\n    ProofType,\n    SignType,\n    type Wallet,\n} from '@masknet/shared-base'\nimport { useRemoteControlledDialog } from '@masknet/shared-base-ui'\nimport { useChainContext, useWeb3State } from '@masknet/web3-hooks-base'\nimport type { OwnerAPI } from '@masknet/web3-providers/types'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { type ShowSnackbarOptions, type SnackbarKey, type SnackbarMessage, useCustomSnackbar } from '@masknet/theme'\nimport { Web3 } from '@masknet/web3-providers'\nimport type { ManagerAccount } from '../type.js'\nimport { useSmartPayTrans } from '../locales/index.js'\nimport { PluginSmartPayMessages } from '../message.js'\nimport { openPopupWindow, signWithPersona, hasPaymentPassword } from '@masknet/plugin-infra/dom/context'\n\nexport function useDeploy(\n    signPersona?: PersonaInformation,\n    signWallet?: Wallet,\n    signAccount?: ManagerAccount,\n    contractAccount?: OwnerAPI.AbstractAccount<NetworkPluginID.PLUGIN_EVM>,\n    nonce?: number,\n    onSuccess?: () => void,\n) {\n    const snackbarKeyRef = useRef<SnackbarKey>()\n    const t = useSmartPayTrans()\n\n    const { TransactionWatcher, Transaction } = useWeb3State()\n    const lastRecognizedIdentity = useLastRecognizedIdentity()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    const { showSnackbar, closeSnackbar } = useCustomSnackbar()\n\n    const showSingletonSnackbar = useCallback(\n        (title: SnackbarMessage, options: ShowSnackbarOptions) => {\n            if (snackbarKeyRef.current !== undefined) closeSnackbar(snackbarKeyRef.current)\n            snackbarKeyRef.current = showSnackbar(title, options)\n            return () => {\n                closeSnackbar(snackbarKeyRef.current)\n            }\n        },\n        [showSnackbar, closeSnackbar],\n    )\n\n    const { closeDialog } = useRemoteControlledDialog(PluginSmartPayMessages.smartPayDialogEvent)\n\n    return useAsyncFn(async () => {\n        try {\n            const options = {\n                account: undefined,\n                chainId,\n                providerType: ProviderType.MaskWallet,\n                signal: AbortSignal.timeout(5 * 60 * 1000),\n            }\n            if (\n                !chainId ||\n                !lastRecognizedIdentity?.isOwner ||\n                !lastRecognizedIdentity?.identifier?.userId ||\n                !signAccount?.address ||\n                !contractAccount ||\n                (!signPersona && !signWallet)\n            )\n                return\n\n            const hasPassword = await hasPaymentPassword()\n            if (!hasPassword) return openPopupWindow(PopupRoutes.SetPaymentPassword, {})\n\n            if (contractAccount.funded && !contractAccount.deployed) {\n                const hash = await Web3.deploy?.(signAccount.address, signAccount.identifier, options)\n\n                if (!hash) return\n\n                const result = await Web3.confirmTransaction(hash, options)\n\n                if (!result?.status) return\n\n                onSuccess?.()\n\n                return result?.transactionHash\n            }\n            const payload = JSON.stringify({\n                twitterHandle: lastRecognizedIdentity.identifier.userId,\n                ts: getUnixTime(new Date()),\n                ownerAddress: signAccount.address,\n                nonce,\n            })\n\n            let signature: string | undefined\n\n            showSingletonSnackbar(t.create_smart_pay_wallet(), {\n                message: t.waiting_for_user_signature(),\n                processing: true,\n                variant: 'default',\n            })\n\n            if (signPersona) {\n                signature = await signWithPersona(SignType.Message, payload, signPersona.identifier)\n            } else if (signWallet) {\n                signature = await Web3.signMessage('message', payload, options)\n            }\n            const publicKey = signPersona ? signPersona.identifier.publicKeyAsHex : signWallet?.address\n            if (!signature || !publicKey) return\n\n            closeSnackbar()\n\n            const hash = await Web3.fund?.(\n                {\n                    publicKey,\n                    type: signPersona ? ProofType.Persona : ProofType.EOA,\n                    signature,\n                    payload,\n                },\n                options,\n            )\n            if (!hash) throw new Error('Deploy Failed')\n\n            const result = await Web3.confirmTransaction(hash, options)\n            if (!result?.status) return\n\n            const deployHash = await Web3.deploy?.(signAccount.address, signAccount.identifier, options)\n            if (!deployHash) return\n\n            const deployResult = await Web3.confirmTransaction(deployHash, options)\n            if (!deployResult?.status) return\n            await Transaction?.removeTransaction?.(chainId, '', hash)\n            await Transaction?.removeTransaction?.(chainId, '', deployHash)\n            onSuccess?.()\n\n            return deployResult.transactionHash\n        } catch (error) {\n            if (error instanceof Error) {\n                let message = ''\n                switch (error.message) {\n                    case 'Failed To Fund':\n                        message = t.transaction_rejected()\n                        break\n                    case 'Persona Rejected':\n                        message = t.user_cancelled_the_transaction()\n                        break\n                    case 'Timeout':\n                        message = t.timeout()\n                        break\n                    default:\n                        message = t.network_error()\n                }\n\n                showSingletonSnackbar(t.create_smart_pay_wallet(), {\n                    processing: false,\n                    variant: 'error',\n                    message: <Typography>{message}</Typography>,\n                })\n\n                if (error.message === 'Timeout') {\n                    closeDialog()\n                }\n            }\n        }\n    }, [\n        chainId,\n        signAccount,\n        lastRecognizedIdentity,\n        signWallet,\n        signPersona,\n        contractAccount,\n        nonce,\n        onSuccess,\n        TransactionWatcher,\n        Transaction,\n    ])\n}\n","import { useMemo } from 'react'\nimport { useWallets } from '@masknet/web3-hooks-base'\nimport { useAllPersonas } from '@masknet/plugin-infra/content-script'\n\nexport function useManagers() {\n    const wallets = useWallets()\n    const personaManagers = useAllPersonas()\n    const walletManagers = useMemo(() => wallets.filter((x) => !x.owner), [wallets])\n\n    return {\n        personaManagers,\n        walletManagers,\n    }\n}\n","import type { ECKeyIdentifier } from '@masknet/shared-base'\n\nexport enum ManagerAccountType {\n    Wallet = 'Wallet',\n    Persona = 'Persona',\n}\n\nexport interface ManagerAccount {\n    type: ManagerAccountType\n    name?: string\n    address?: string\n    identifier?: ECKeyIdentifier\n}\n","import { Icons } from '@masknet/icons'\nimport { ActionButton, makeStyles, usePortalShadowRoot } from '@masknet/theme'\nimport { formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { Dialog, DialogActions, DialogContent, Typography } from '@mui/material'\nimport { useSmartPayTrans } from '../../locales/i18n_generated.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    paper: {\n        margin: 0,\n        width: 320,\n        backgroundColor: theme.palette.maskColor.bottom,\n    },\n    content: {\n        padding: '29px 24px 24px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    title: {\n        color: theme.palette.maskColor.success,\n        marginTop: 30,\n        marginBottom: 24,\n        fontSize: 20,\n        fontWeight: 700,\n        lineHeight: '24px',\n        textAlign: 'center',\n    },\n    description: {\n        fontSize: 14,\n        color: theme.palette.maskColor.second,\n        lineHeight: '18px',\n    },\n}))\n\ninterface CreateSuccessDialogProps {\n    open: boolean\n    onClose: () => void\n    address: string\n    owner: string\n}\n\nexport function CreateSuccessDialog({ open, onClose, address, owner }: CreateSuccessDialogProps) {\n    const t = useSmartPayTrans()\n    const { classes } = useStyles()\n\n    return usePortalShadowRoot((container) => (\n        <Dialog\n            container={container}\n            open={open}\n            onClose={(_, reason) => {\n                if (reason === 'backdropClick') return\n                onClose()\n            }}\n            classes={{ paper: classes.paper }}>\n            <DialogContent className={classes.content}>\n                <Icons.FillSuccess size={50} />\n\n                <Typography className={classes.title}>{t.create_successfully()}</Typography>\n                <Typography className={classes.description}>\n                    {t.create_successfully_tips({ address: formatEthereumAddress(address, 4) })}\n                </Typography>\n                <Typography className={classes.description} sx={{ marginTop: 2 }}>\n                    {t.create_successfully_tips_owner({ owner })}\n                </Typography>\n            </DialogContent>\n            <DialogActions sx={{ p: 3 }}>\n                <ActionButton fullWidth variant=\"roundedContained\" onClick={onClose}>\n                    {t.done()}\n                </ActionButton>\n            </DialogActions>\n        </Dialog>\n    ))\n}\n","import { Icons } from '@masknet/icons'\nimport { openDashboard, openPopupWindow } from '@masknet/plugin-infra/dom/context'\nimport { CopyButton } from '@masknet/shared'\nimport { DashboardRoutes, formatPersonaFingerprint, PopupRoutes } from '@masknet/shared-base'\nimport { makeStyles, usePortalShadowRoot } from '@masknet/theme'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { Box, Button, Popover, Radio, Typography } from '@mui/material'\nimport { memo } from 'react'\nimport { useManagers } from '../../hooks/useManagers.js'\nimport { useSmartPayTrans } from '../../locales/index.js'\nimport { type ManagerAccount, ManagerAccountType } from '../../type.js'\n\ninterface ManagePopoverProps {\n    open: boolean\n    anchorEl: HTMLElement | null\n    onClose: () => void\n    selectedAddress?: string\n    onSelect: (account: ManagerAccount) => void\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    paper: {\n        background: theme.palette.maskColor.bottom,\n        padding: theme.spacing(1.5, 1.5, 2, 1.5),\n        boxSizing: 'border-box',\n        backgroundColor: theme.palette.maskColor.bottom,\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 0px 20px rgba(255, 255, 255, 0.12)'\n                : '0px 4px 30px rgba(0, 0, 0, 0.1)',\n        borderRadius: 16,\n        maxHeight: 296,\n        '::-webkit-scrollbar': {\n            backgroundColor: 'transparent',\n            width: 20,\n        },\n        '::-webkit-scrollbar-thumb': {\n            borderRadius: '20px',\n            width: 5,\n            border: '7px solid rgba(0, 0, 0, 0)',\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(250, 250, 250, 0.2)' : 'rgba(0, 0, 0, 0.2)',\n            backgroundClip: 'padding-box',\n        },\n    },\n    title: {\n        color: theme.palette.maskColor.main,\n        fontSize: 16,\n        lineHeight: '20px',\n        fontWeight: 700,\n    },\n    list: {\n        padding: theme.spacing(2, 0),\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: 10,\n    },\n    item: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    identity: {\n        color: theme.palette.maskColor.second,\n        fontSize: 14,\n        lineHeight: '18px',\n        display: 'flex',\n        columnGap: '2px',\n        alignItems: 'center',\n    },\n    footer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    desc: {\n        fontSize: 14,\n        lineHeight: '18px',\n    },\n}))\n\nexport const ManagePopover = memo<ManagePopoverProps>(({ open, anchorEl, onClose, onSelect, selectedAddress }) => {\n    const t = useSmartPayTrans()\n    const { classes } = useStyles()\n    const { personaManagers, walletManagers } = useManagers()\n\n    return usePortalShadowRoot((container) => (\n        <Popover\n            disableScrollLock\n            container={container}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={onClose}\n            PaperProps={{ style: { minWidth: `${anchorEl?.clientWidth ?? 568}px` }, className: classes.paper }}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            disableRestoreFocus>\n            <Typography className={classes.title}>{t.personas()}</Typography>\n            {personaManagers.length ? (\n                <Box className={classes.list}>\n                    {personaManagers.map((persona, index) => (\n                        <Box\n                            key={index}\n                            className={classes.item}\n                            onClick={() =>\n                                onSelect({\n                                    type: ManagerAccountType.Persona,\n                                    name: persona.nickname,\n                                    address: persona.address,\n                                    identifier: persona.identifier,\n                                })\n                            }>\n                            <Box display=\"flex\" alignItems=\"center\" columnGap={0.5}>\n                                <Icons.MaskBlue size={30} />\n                                <Box>\n                                    <Typography className={classes.title}>{persona.nickname}</Typography>\n                                    <Typography className={classes.identity}>\n                                        {formatPersonaFingerprint(persona.identifier.rawPublicKey, 4)}\n                                        <CopyButton size={14} text={persona.identifier.rawPublicKey} />\n                                    </Typography>\n                                </Box>\n                            </Box>\n                            <Radio checked={isSameAddress(persona.address, selectedAddress)} />\n                        </Box>\n                    ))}\n                </Box>\n            ) : (\n                <Box className={classes.footer} sx={{ py: 2 }}>\n                    <Box>\n                        <Typography className={classes.title}>{t.create_a_new_persona_title()}</Typography>\n                        <Typography className={classes.desc}>{t.create_a_new_persona_desc()}</Typography>\n                    </Box>\n                    <Button\n                        variant=\"roundedContained\"\n                        size=\"small\"\n                        sx={{ height: 32 }}\n                        onClick={() => openDashboard(DashboardRoutes.SignUpPersona)}>\n                        {t.create()}\n                    </Button>\n                </Box>\n            )}\n            <Typography className={classes.title}>{t.wallets()}</Typography>\n            {walletManagers.length ? (\n                <Box className={classes.list}>\n                    {walletManagers.map((wallet, index) => (\n                        <Box\n                            key={index}\n                            className={classes.item}\n                            onClick={() =>\n                                onSelect({\n                                    type: ManagerAccountType.Wallet,\n                                    name: wallet.name,\n                                    address: wallet.address,\n                                })\n                            }>\n                            <Box display=\"flex\" alignItems=\"center\" columnGap={0.5}>\n                                <Icons.MaskBlue size={30} />\n                                <Box>\n                                    <Typography className={classes.title}>{wallet.name}</Typography>\n                                    <Typography className={classes.identity}>\n                                        {formatEthereumAddress(wallet.address, 4)}\n                                        <CopyButton size={14} text={wallet.address} />\n                                    </Typography>\n                                </Box>\n                            </Box>\n                            <Radio checked={isSameAddress(selectedAddress, wallet.address)} />\n                        </Box>\n                    ))}\n                </Box>\n            ) : (\n                <Box className={classes.footer}>\n                    <Box>\n                        <Typography className={classes.title}>{t.create_a_new_wallet_title()}</Typography>\n                        <Typography className={classes.desc}>{t.create_a_new_wallet_desc()}</Typography>\n                    </Box>\n                    <Button\n                        variant=\"roundedContained\"\n                        size=\"small\"\n                        sx={{ height: 32 }}\n                        onClick={() => openPopupWindow(PopupRoutes.WalletStartUp, undefined)}>\n                        {t.create()}\n                    </Button>\n                </Box>\n            )}\n        </Popover>\n    ))\n})\n","import { makeStyles } from '@masknet/theme'\nimport { Box, Typography } from '@mui/material'\nimport { memo, type PropsWithChildren } from 'react'\n\nconst useStyles = makeStyles()((theme) => ({\n    card: {\n        borderRadius: 12,\n        padding: theme.spacing(2, 2, 2, 16),\n        display: 'flex',\n        alignItems: 'center',\n        background: `url(${new URL('../../assets/banner.png', import.meta.url).toString()})`,\n        backgroundSize: '100% 100%',\n        backgroundRepeat: 'no-repeat',\n        height: 90,\n        boxSizing: 'border-box',\n    },\n    tips: {\n        '& > p': {\n            color: theme.palette.maskColor.publicMain,\n            fontSize: 16,\n            fontWeight: 700,\n            lineHeight: '120%',\n            width: '100%',\n            wordBreak: 'break-word',\n        },\n    },\n}))\n\ninterface SmartPayBannerProps extends PropsWithChildren {}\n\nexport const SmartPayBanner = memo<SmartPayBannerProps>(({ children }) => {\n    const { classes } = useStyles()\n    return (\n        <Box className={classes.card}>\n            <Typography className={classes.tips}>{children}</Typography>\n        </Box>\n    )\n})\n","import { first } from 'lodash-es'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useAsync, useBoolean, useUpdateEffect } from 'react-use'\nimport { useNavigate } from 'react-router-dom'\nimport { Box, Typography, alpha } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { useCurrentPersonaInformation, useLastRecognizedIdentity } from '@masknet/plugin-infra/content-script'\nimport { queryPersonaAvatar } from '@masknet/plugin-infra/dom/context'\nimport { CopyButton, ImageIcon, PersonaAction, WalletDescription } from '@masknet/shared'\nimport { NetworkPluginID, formatPersonaFingerprint } from '@masknet/shared-base'\nimport { useRemoteControlledDialog } from '@masknet/shared-base-ui'\nimport { ActionButton, LoadingBase, makeStyles } from '@masknet/theme'\nimport { useChainContext, useNetworkDescriptor, useProviderDescriptor, useWallets } from '@masknet/web3-hooks-base'\nimport { ExplorerResolver, SmartPayOwner, Web3 } from '@masknet/web3-providers'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { ProviderType, formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { RoutePaths } from '../../constants.js'\nimport { useDeploy } from '../../hooks/useDeploy.js'\nimport { useManagers } from '../../hooks/useManagers.js'\nimport { SmartPayContext } from '../../hooks/useSmartPayContext.js'\nimport { useSmartPayTrans } from '../../locales/index.js'\nimport { PluginSmartPayMessages } from '../../message.js'\nimport { ManagerAccountType, type ManagerAccount } from '../../type.js'\nimport { CreateSuccessDialog } from './CreateSuccessDialog.js'\nimport { ManagePopover } from './ManagePopover.js'\nimport { SmartPayBanner } from './SmartPayBanner.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    walletDescription: {\n        backgroundColor: theme.palette.maskColor.bottom,\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 0px 20px rgba(255, 255, 255, 0.12)'\n                : '0px 0px 20px rgba(0, 0, 0, 0.05)',\n        backdropFilter: 'blur(8px);',\n        borderRadius: 12,\n        marginTop: theme.spacing(1.5),\n        padding: theme.spacing(2),\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    badge: {\n        position: 'absolute',\n        right: -6,\n        bottom: -4,\n        border: `1px solid ${theme.palette.common.white}`,\n        borderRadius: '50%',\n    },\n    address: {\n        color: theme.palette.maskColor.second,\n        fontSize: 14,\n        lineHeight: '18px',\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 2,\n    },\n    select: {\n        cursor: 'pointer',\n        backgroundColor: theme.palette.maskColor.input,\n        borderRadius: 12,\n        padding: theme.spacing(1.5),\n        marginTop: theme.spacing(1.5),\n    },\n    selectTitle: {\n        color: theme.palette.maskColor.second,\n        fontSize: 13,\n        lineHeight: '18px',\n    },\n    maskIcon: {\n        filter: 'drop-shadow(0px 6px 12px rgba(0, 65, 185, 0.2))',\n        backdropFilter: 'blur(8px)',\n    },\n    arrow: {\n        color: theme.palette.maskColor.second,\n    },\n    tips: {\n        marginTop: theme.spacing(1.5),\n        padding: theme.spacing(1.5),\n        backgroundColor: theme.palette.maskColor.bg,\n        borderRadius: 12,\n        maxHeight: 200,\n        boxSizing: 'border-box',\n        overflowY: 'scroll',\n        '::-webkit-scrollbar': {\n            backgroundColor: 'transparent',\n            width: 20,\n        },\n        '::-webkit-scrollbar-thumb': {\n            borderRadius: '20px',\n            width: 5,\n            border: '7px solid rgba(0, 0, 0, 0)',\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(250, 250, 250, 0.2)' : 'rgba(0, 0, 0, 0.2)',\n            backgroundClip: 'padding-box',\n        },\n    },\n    stateBar: {\n        position: 'sticky',\n        bottom: 0,\n        boxShadow: `0px 0px 20px ${alpha(\n            theme.palette.maskColor.shadowBottom,\n            theme.palette.mode === 'dark' ? 0.12 : 0.05,\n        )}`,\n        backgroundColor: theme.palette.maskColor.bottom,\n    },\n    walletStatus: {\n        height: 68,\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        boxSizing: 'border-box',\n        padding: theme.spacing(2),\n        boxShadow: theme.palette.shadow.popup,\n    },\n    content: {\n        padding: theme.spacing(2),\n        minHeight: 564,\n        boxSizing: 'border-box',\n    },\n    bottomFixed: { height: 68, boxSizing: 'border-box' },\n}))\n\nexport function Deploy({ open }: { open: boolean }) {\n    const t = useSmartPayTrans()\n    const navigate = useNavigate()\n    const { classes } = useStyles()\n    const wallets = useWallets()\n    const currentPersona = useCurrentPersonaInformation()\n    const [successDialogOpen, toggle] = useBoolean(false)\n    const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n    const [manager, setManager] = useState<ManagerAccount>()\n\n    const { personaManagers, walletManagers } = useManagers()\n\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { closeDialog } = useRemoteControlledDialog(PluginSmartPayMessages.smartPayDialogEvent)\n\n    const { signer } = SmartPayContext.useContainer()\n    const { signWallet, signPersona } = signer || {}\n    const providerDescriptor = useProviderDescriptor(NetworkPluginID.PLUGIN_EVM, ProviderType.MaskWallet)\n    const polygonDescriptor = useNetworkDescriptor(NetworkPluginID.PLUGIN_EVM, chainId)\n    const currentVisitingProfile = useLastRecognizedIdentity()\n\n    const { value: avatar } = useAsync(async () => {\n        if (signPersona) return queryPersonaAvatar(signPersona.identifier)\n\n        return null\n    }, [signPersona])\n\n    // #region get contract account\n    const { value, loading: queryContractLoading } = useAsync(async () => {\n        if (!manager?.address || !open || !chainId) return\n\n        const accounts = await SmartPayOwner.getAccountsByOwner(chainId, manager.address, false)\n        const nonce = accounts.filter((x) => x.deployed && isSameAddress(manager.address, x.creator)).length\n\n        return {\n            account: accounts[nonce],\n            nonce,\n        }\n    }, [manager, open, chainId])\n    // #endregion\n\n    const { account: contractAccount, nonce } = value ?? {}\n\n    const [{ loading: deployLoading }, handleDeploy] = useDeploy(\n        signPersona,\n        signWallet,\n        manager,\n        contractAccount,\n        nonce,\n        toggle,\n    )\n\n    const handleSelectManager = useCallback((manager: ManagerAccount) => {\n        setManager(manager)\n        setAnchorEl(null)\n    }, [])\n\n    useEffect(() => {\n        if (manager) return\n        if (personaManagers?.length) {\n            const firstPersona = first(personaManagers)\n\n            setManager({\n                type: ManagerAccountType.Persona,\n                name: firstPersona?.nickname,\n                address: firstPersona?.address,\n                identifier: firstPersona?.identifier,\n            })\n\n            return\n        } else if (walletManagers) {\n            const firstWallet = first(walletManagers)\n            setManager({\n                type: ManagerAccountType.Wallet,\n                name: firstWallet?.name,\n                address: firstWallet?.address,\n            })\n            return\n        }\n    }, [personaManagers, walletManagers, manager])\n\n    useUpdateEffect(() => {\n        if (\n            (signer?.signPersona &&\n                currentPersona?.identifier.publicKeyAsHex !== signer.signPersona.identifier.publicKeyAsHex) ||\n            (signer?.signWallet && !wallets.some((x) => isSameAddress(x.address, signer.signWallet?.address)))\n        ) {\n            closeDialog()\n        }\n    }, [currentPersona, signer, wallets])\n\n    return (\n        <>\n            <Box className={classes.content}>\n                <SmartPayBanner>\n                    <Typography>{t.white_list_tips()}</Typography>\n                    <Typography>{t.personas_description()}</Typography>\n                </SmartPayBanner>\n                <Box className={classes.walletDescription}>\n                    <Box display=\"flex\" alignItems=\"center\" columnGap={1.5}>\n                        <Box position=\"relative\" width={30} height={30}>\n                            <Icons.SmartPay size={30} />\n                            <ImageIcon className={classes.badge} size={12} icon={polygonDescriptor?.icon} />\n                        </Box>\n                        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\">\n                            <Typography lineHeight=\"18px\" fontWeight={700}>\n                                SmartPay Wallet\n                            </Typography>\n\n                            <Typography className={classes.address}>\n                                {queryContractLoading ? (\n                                    <LoadingBase size={14} />\n                                ) : (\n                                    <>\n                                        {formatEthereumAddress(contractAccount?.address ?? '', 4)}\n                                        <CopyButton size={14} text={contractAccount?.address ?? ''} />\n                                    </>\n                                )}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    <Box display=\"flex\" alignItems=\"flex-end\" columnGap={0.5}>\n                        <Typography lineHeight=\"18px\" fontWeight={700}>\n                            $\n                        </Typography>\n                        <Typography fontSize={24} fontWeight={700} lineHeight=\"1.2\">\n                            0.00\n                        </Typography>\n                    </Box>\n                </Box>\n                <Box\n                    className={classes.select}\n                    onMouseDown={(event) => {\n                        event.stopPropagation()\n                        event.preventDefault()\n                        setAnchorEl(event.currentTarget)\n                    }}>\n                    <Typography className={classes.selectTitle}>{t.setup_smart_pay_managed_account()}</Typography>\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mt={0.5}>\n                        <Box display=\"flex\" alignItems=\"center\" columnGap={1}>\n                            <Icons.MaskBlue size={24} className={classes.maskIcon} />\n                            <Typography fontSize={18} fontWeight={700} lineHeight=\"22px\">\n                                {manager?.type === 'Persona'\n                                    ? formatPersonaFingerprint(manager?.identifier?.rawPublicKey ?? '', 4)\n                                    : formatEthereumAddress(manager?.address ?? '', 4)}\n                            </Typography>\n                        </Box>\n                        <Icons.ArrowDrop className={classes.arrow} size={24} />\n                    </Box>\n                    <ManagePopover\n                        open={!!anchorEl}\n                        anchorEl={anchorEl}\n                        onClose={() => {\n                            setAnchorEl(null)\n                        }}\n                        selectedAddress={manager?.address}\n                        onSelect={handleSelectManager}\n                    />\n                </Box>\n                <Box className={classes.tips}>\n                    <Typography>{t.deploy_tips_title()}</Typography>\n                    <Box component=\"ol\" pl={1.5}>\n                        <Typography component=\"li\">{t.deploy_tips_description_one()}</Typography>\n                        <Typography component=\"li\">{t.deploy_tips_description_two()}</Typography>\n                        <Typography component=\"li\">{t.deploy_tips_description_three()}</Typography>\n                        <Typography component=\"li\">{t.deploy_tips_description_four()}</Typography>\n                    </Box>\n                </Box>\n            </Box>\n            <Box className={classes.stateBar}>\n                {signPersona ? (\n                    <PersonaAction\n                        classes={{ bottomFixed: classes.bottomFixed }}\n                        avatar={avatar !== null ? avatar : undefined}\n                        currentPersona={signPersona}\n                        currentVisitingProfile={currentVisitingProfile}>\n                        <ActionButton\n                            onClick={handleDeploy}\n                            loading={deployLoading}\n                            disabled={deployLoading || queryContractLoading || !signPersona}\n                            variant=\"roundedContained\">\n                            {t.deploy()}\n                        </ActionButton>\n                    </PersonaAction>\n                ) : (\n                    <Box className={classes.walletStatus}>\n                        <WalletDescription\n                            pending={false}\n                            providerIcon={providerDescriptor?.icon}\n                            networkIcon={polygonDescriptor?.icon}\n                            iconFilterColor={providerDescriptor?.iconFilterColor}\n                            name={signWallet?.name}\n                            formattedAddress={\n                                signWallet?.address ? formatEthereumAddress(signWallet.address, 4) : undefined\n                            }\n                            addressLink={\n                                signWallet?.address && chainId\n                                    ? ExplorerResolver.addressLink(chainId, signWallet?.address)\n                                    : undefined\n                            }\n                        />\n                        <ActionButton\n                            onClick={handleDeploy}\n                            loading={deployLoading}\n                            disabled={deployLoading || queryContractLoading || !signWallet}\n                            variant=\"roundedContained\">\n                            {t.deploy()}\n                        </ActionButton>\n                    </Box>\n                )}\n            </Box>\n            <CreateSuccessDialog\n                open={successDialogOpen}\n                onClose={async () => {\n                    if (!contractAccount) return\n                    await Web3.addWallet?.(\n                        {\n                            name: 'Smart pay',\n                            address: contractAccount?.address,\n                        },\n                        {\n                            providerType: ProviderType.MaskWallet,\n                            account: '',\n                            chainId,\n                        },\n                    )\n                    toggle()\n                    navigate(RoutePaths.Main)\n                }}\n                address={contractAccount?.address ?? ''}\n                owner={`${manager?.type === 'Persona' ? 'Persona' : 'Mask Wallet'} ${manager?.name}`}\n            />\n        </>\n    )\n}\n","import { makeStyles } from '@masknet/theme'\nimport { DialogContent, Link, Typography } from '@mui/material'\nimport { SmartPayTrans, useSmartPayTrans } from '../../locales/index.js'\nimport { memo } from 'react'\nimport { SmartPayBanner } from './SmartPayBanner.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    dialogContent: {\n        padding: theme.spacing(2),\n        minHeight: 564,\n        boxSizing: 'border-box',\n        '::-webkit-scrollbar': {\n            backgroundColor: 'transparent',\n            width: 20,\n        },\n        '::-webkit-scrollbar-thumb': {\n            borderRadius: '20px',\n            width: 5,\n            border: '7px solid rgba(0, 0, 0, 0)',\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(250, 250, 250, 0.2)' : 'rgba(0, 0, 0, 0.2)',\n            backgroundClip: 'padding-box',\n        },\n    },\n    description: {\n        marginTop: theme.spacing(1.5),\n        color: theme.palette.maskColor.second,\n        fontSize: 14,\n        lineHeight: '18px',\n        '& > a': {\n            color: theme.palette.maskColor.highlight,\n        },\n    },\n}))\n\nexport const InEligibilityTips = memo(() => {\n    const { classes } = useStyles()\n    const t = useSmartPayTrans()\n    return (\n        <DialogContent className={classes.dialogContent}>\n            <SmartPayBanner>\n                <Typography>{t.ineligibility_tips()}</Typography>\n            </SmartPayBanner>\n            <Typography className={classes.description}>\n                <SmartPayTrans.eligibility_description\n                    components={{\n                        Link: (\n                            <Link\n                                href=\"https://twitter.com/realMaskNetwork\"\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            />\n                        ),\n                        Discord: (\n                            <Link href=\"https://discord.com/invite/4SVXvj7\" rel=\"noopener noreferrer\" target=\"_blank\" />\n                        ),\n                    }}\n                />\n            </Typography>\n            <Typography className={classes.description}>\n                <SmartPayTrans.eligibility_query\n                    components={{\n                        Link: (\n                            <Link\n                                href=\"https://forms.gle/HpzvPVj1MUQmw5Rp9\"\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            />\n                        ),\n                    }}\n                />\n            </Typography>\n        </DialogContent>\n    )\n})\n","import { CurrencyType } from '@masknet/web3-shared-base'\n\nexport function getTokenUSDValue(value?: {\n    [key in CurrencyType]?: string\n}) {\n    return value ? Number.parseFloat(value[CurrencyType.USD] ?? '') : 0\n}\n","import { memo, useCallback, useEffect } from 'react'\nimport { useAsyncRetry, useUpdateEffect } from 'react-use'\nimport { useNavigate } from 'react-router-dom'\nimport { Box, Button, Popover, Typography } from '@mui/material'\nimport { makeStyles, usePortalShadowRoot } from '@masknet/theme'\nimport { Icon, LeavePageConfirmModal, PersonaSelectPanelModal, useSharedTrans } from '@masknet/shared'\nimport { CrossIsolationMessages, DashboardRoutes, PluginID } from '@masknet/shared-base'\nimport { useRemoteControlledDialog } from '@masknet/shared-base-ui'\nimport { SmartPayFunder } from '@masknet/web3-providers'\nimport { useAllPersonas, useLastRecognizedIdentity } from '@masknet/plugin-infra/content-script'\nimport { RoutePaths } from '../../constants.js'\nimport { useQueryQualifications } from '../../hooks/useQueryQualifications.js'\nimport { SmartPayContext } from '../../hooks/useSmartPayContext.js'\nimport { PluginSmartPayMessages } from '../../message.js'\nimport { useSmartPayTrans } from '../../locales/i18n_generated.js'\nimport { openDashboard } from '@masknet/plugin-infra/dom/context'\n\nconst useStyles = makeStyles()((theme) => ({\n    paper: {\n        padding: theme.spacing(3),\n        background: theme.palette.maskColor.bottom,\n        maxWidth: 320,\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: 700,\n        lineHeight: '20px',\n        textAlign: 'center',\n    },\n    info: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: theme.spacing(1.5),\n        columnGap: theme.spacing(1.5),\n    },\n    name: {\n        fontSize: 14,\n        fontWeight: 700,\n        lineHeight: '18px',\n    },\n    identifier: {\n        fontSize: 14,\n        color: theme.palette.maskColor.second,\n        lineHeight: '18px',\n    },\n    tips: {\n        fontSize: 14,\n        color: theme.palette.maskColor.second,\n        lineHeight: '18px',\n        marginTop: theme.spacing(1.5),\n        marginBottom: theme.spacing(1.5),\n    },\n}))\n\ninterface AddSmartPayPopoverProps {\n    open: boolean\n    anchorEl: HTMLElement | null\n    onClose: () => void\n}\n\nexport const AddSmartPayPopover = memo<AddSmartPayPopoverProps>(({ open, anchorEl, onClose }) => {\n    const t = useSmartPayTrans()\n    const sharedI18N = useSharedTrans()\n    const navigate = useNavigate()\n    const { classes } = useStyles()\n    const { setSigner } = SmartPayContext.useContainer()\n    const personas = useAllPersonas()\n    const currentProfile = useLastRecognizedIdentity()\n    const { value = 0, retry } = useAsyncRetry(async () => {\n        if (!currentProfile?.identifier?.userId) return 0\n        return SmartPayFunder.getRemainFrequency(currentProfile.identifier.userId)\n    }, [currentProfile])\n\n    const { value: qualifications, loading } = useQueryQualifications()\n\n    const { closeDialog } = useRemoteControlledDialog(PluginSmartPayMessages.smartPayDialogEvent)\n\n    const handleCreate = useCallback(() => {\n        if (loading || !qualifications) return\n\n        // If there is no persona and no signer\n        if (!personas.length && !qualifications.signPersona && !qualifications.signWallet) {\n            LeavePageConfirmModal.open({\n                openDashboard,\n                info: {\n                    target: 'dashboard',\n                    url: DashboardRoutes.SignUpPersona,\n                    text: sharedI18N.create_persona_hint(),\n                    title: sharedI18N.create_persona_title(),\n                    actionHint: sharedI18N.create_persona_action(),\n                    position: 'center',\n                },\n            })\n            return\n        }\n\n        // if there is verified persona but current persona isn't verified\n        if (\n            (qualifications.hasVerifiedPersona || personas.length) &&\n            !qualifications.signPersona &&\n            !qualifications.signWallet\n        ) {\n            PersonaSelectPanelModal.open({\n                enableVerify: true,\n                finishTarget: PluginID.SmartPay,\n            })\n            return\n        }\n\n        setSigner({\n            signPersona: qualifications?.signPersona,\n            signWallet: qualifications?.signWallet,\n        })\n        navigate(RoutePaths.Deploy, {\n            state: {\n                canBack: true,\n            },\n        })\n    }, [loading, qualifications])\n\n    useEffect(() => {\n        return CrossIsolationMessages.events.applicationDialogEvent.on(({ selectedPersona, pluginID, open }) => {\n            if (!open) return closeDialog()\n            if (pluginID !== PluginID.SmartPay) return\n            setSigner({\n                signPersona: selectedPersona,\n            })\n            navigate(RoutePaths.Deploy, {\n                state: {\n                    canBack: true,\n                },\n            })\n        })\n    }, [closeDialog])\n\n    useUpdateEffect(() => {\n        if (!open) return\n        retry()\n    }, [open])\n\n    return usePortalShadowRoot((container) => (\n        <Popover\n            disableScrollLock\n            container={container}\n            open={open}\n            onClose={onClose}\n            anchorEl={anchorEl}\n            disableRestoreFocus\n            classes={{ paper: classes.paper }}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}>\n            <Typography className={classes.title}>{t.add_smart_pay_wallet()}</Typography>\n            <Box className={classes.info}>\n                <Icon logoURL={currentProfile?.avatar} name={currentProfile?.nickname} size={30} />\n                <Box>\n                    <Typography className={classes.name}>{currentProfile?.nickname}</Typography>\n                    <Typography className={classes.identifier}>@{currentProfile?.identifier?.userId}</Typography>\n                </Box>\n            </Box>\n            <Typography className={classes.tips}>{t.remain_times_tips({ count: value })}</Typography>\n            <Button fullWidth variant=\"roundedContained\" onClick={handleCreate}>\n                {t.create()}\n            </Button>\n        </Popover>\n    ))\n})\n","import { memo, useCallback, useMemo } from 'react'\nimport { Box, Button, Popover, Typography } from '@mui/material'\nimport { makeStyles, usePortalShadowRoot } from '@masknet/theme'\nimport { ProviderType, formatEthereumAddress } from '@masknet/web3-shared-evm'\nimport { isSameAddress } from '@masknet/web3-shared-base'\nimport { formatPersonaFingerprint, NetworkPluginID, PopupRoutes } from '@masknet/shared-base'\nimport { openPopupWindow } from '@masknet/plugin-infra/dom/context'\nimport { useManagers } from '../../hooks/useManagers.js'\nimport { useSmartPayTrans } from '../../locales/i18n_generated.js'\nimport { useAccount, useChainContext, useNetwork, useWeb3Connection, useWeb3State } from '@masknet/web3-hooks-base'\n\nconst useStyles = makeStyles()((theme) => ({\n    paper: {\n        padding: theme.spacing(3),\n        background: theme.palette.maskColor.bottom,\n        width: 320,\n        filter:\n            theme.palette.mode === 'light'\n                ? 'drop-shadow(0px 4px 30px rgba(0, 0, 0, 0.1))'\n                : 'drop-shadow(0px 4px 30px rgba(255, 255, 255, 0.15))',\n        boxShadow:\n            theme.palette.mode === 'light'\n                ? '0px 4px 30px 0px rgba(0, 0, 0, 0.1)'\n                : '0px 4px 30px 0px rgba(255, 255, 255, 0.15)',\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: 700,\n        lineHeight: '20px',\n        textAlign: 'center',\n    },\n    second: {\n        fontSIze: 14,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.second,\n    },\n    name: {\n        fontSIze: 14,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n    },\n    changeOwner: {\n        height: 32,\n        fontSize: 12,\n        lineHeight: '16px',\n        fontWeight: 700,\n        padding: '8px 12px',\n    },\n}))\n\ninterface AccountsManagePopoverProps {\n    open: boolean\n    anchorEl: HTMLElement | null\n    onClose: () => void\n    address?: string\n    owner?: string\n    name?: string\n}\n\nexport const AccountsManagerPopover = memo<AccountsManagePopoverProps>(\n    ({ open, anchorEl, onClose, address, owner, name }) => {\n        const t = useSmartPayTrans()\n        const { classes } = useStyles()\n        const { personaManagers, walletManagers } = useManagers()\n\n        const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n        const account = useAccount()\n        const network = useNetwork(NetworkPluginID.PLUGIN_EVM, chainId)\n        const { Network } = useWeb3State()\n        const connection = useWeb3Connection()\n        const ownerInfo = useMemo(() => {\n            const persona = personaManagers?.find((x) => isSameAddress(x.address, owner))\n\n            if (persona)\n                return {\n                    name: persona.nickname,\n                    publicKey: formatPersonaFingerprint(persona.identifier.rawPublicKey, 4),\n                }\n\n            const wallet = walletManagers?.find((x) => isSameAddress(x.address, owner))\n            if (!wallet) return\n            return {\n                name: wallet.name,\n                publicKey: formatEthereumAddress(wallet.address, 4),\n            }\n        }, [owner, personaManagers, walletManagers])\n\n        const handleChangeOwner = useCallback(async () => {\n            // switch account\n            if (!isSameAddress(address, account)) {\n                await connection.connect({\n                    account: address,\n                    chainId,\n                    providerType: ProviderType.MaskWallet,\n                    silent: true,\n                })\n\n                if (network) await Network?.switchNetwork(network.ID)\n            }\n            await openPopupWindow(PopupRoutes.ChangeOwner, { contractAccount: address })\n        }, [address, connection, account, chainId, network])\n\n        return usePortalShadowRoot((container) => (\n            <Popover\n                disableScrollLock\n                container={container}\n                open={open}\n                onClose={onClose}\n                anchorEl={anchorEl}\n                disableRestoreFocus\n                classes={{ paper: classes.paper }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}>\n                <Typography className={classes.title}>{t.managed_accounts()}</Typography>\n                <Box mt={1.5}>\n                    <Typography className={classes.name}>{name}</Typography>\n                    <Typography className={classes.second}>{formatEthereumAddress(address ?? '', 4)}</Typography>\n                </Box>\n                <Typography className={classes.second} my={1.5}>\n                    {t.current_manage_account()}\n                </Typography>\n                <Box component=\"div\" display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                    <Box>\n                        <Typography className={classes.name}>{ownerInfo?.name}</Typography>\n                        <Typography className={classes.second}>{ownerInfo?.publicKey}</Typography>\n                    </Box>\n                    <Button className={classes.changeOwner} variant=\"roundedContained\" onClick={handleChangeOwner}>\n                        {t.change_owner()}\n                    </Button>\n                </Box>\n            </Popover>\n        ))\n    },\n)\n","import { memo, useCallback, useMemo, useState } from 'react'\nimport { useAsyncFn, useAsyncRetry, useUpdateEffect } from 'react-use'\nimport { isNaN, sum } from 'lodash-es'\nimport { Icons } from '@masknet/icons'\nimport {\n    ImageIcon,\n    TokenIcon,\n    FormattedBalance,\n    useMenuConfig,\n    ApproveMaskDialog,\n    FormattedCurrency,\n    CopyButton,\n} from '@masknet/shared'\nimport { CrossIsolationMessages, ECKeyIdentifier, NetworkPluginID, PluginID, PopupRoutes } from '@masknet/shared-base'\nimport { useRemoteControlledDialog } from '@masknet/shared-base-ui'\nimport { ActionButton, makeStyles, ShadowRootTooltip } from '@masknet/theme'\nimport {\n    useChainContext,\n    useFungibleAssets,\n    useFungibleToken,\n    useNetworkDescriptor,\n    useWallets,\n} from '@masknet/web3-hooks-base'\nimport { formatEthereumAddress, ProviderType, useSmartPayConstants } from '@masknet/web3-shared-evm'\nimport {\n    Box,\n    Button,\n    DialogActions,\n    DialogContent,\n    Link,\n    List,\n    ListItem,\n    ListItemText,\n    Radio,\n    Typography,\n} from '@mui/material'\nimport {\n    formatBalance,\n    formatCurrency,\n    getTokenUSDValue,\n    isLessThan,\n    isSameAddress,\n    toFixed,\n} from '@masknet/web3-shared-base'\nimport { useLastRecognizedIdentity } from '@masknet/plugin-infra/content-script'\nimport { openPopupWindow } from '@masknet/plugin-infra/dom/context'\nimport { Others, SmartPayFunder, Web3 } from '@masknet/web3-providers'\nimport { useSmartPayTrans } from '../../locales/i18n_generated.js'\nimport { PluginSmartPayMessages } from '../../message.js'\nimport { useERC20TokenAllowance } from '@masknet/web3-hooks-evm'\nimport { AddSmartPayPopover } from './AddSmartPayPopover.js'\nimport { AccountsManagerPopover } from './AccountsManagePopover.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    dialogContent: {\n        padding: theme.spacing(2),\n        '::-webkit-scrollbar': {\n            backgroundColor: 'transparent',\n            width: 20,\n        },\n        '::-webkit-scrollbar-thumb': {\n            borderRadius: '20px',\n            width: 5,\n            border: '7px solid rgba(0, 0, 0, 0)',\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(250, 250, 250, 0.2)' : 'rgba(0, 0, 0, 0.2)',\n            backgroundClip: 'padding-box',\n        },\n    },\n    dialogActions: {\n        padding: '12px 12px 20px !important',\n        display: 'flex',\n        justifyContent: 'space-between',\n        background: theme.palette.maskColor.secondaryBottom,\n        backdropFilter: 'blur(16px)',\n        columnGap: 12,\n        '& > *': {\n            marginLeft: '0px !important',\n            fontSize: 12,\n        },\n    },\n    card: {\n        background: theme.palette.maskColor.modalTitleBg,\n        boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.05)',\n        backdropFilter: 'blur(8px)',\n        borderRadius: 12,\n        padding: theme.spacing(2),\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        color: theme.palette.maskColor.main,\n        position: 'relative',\n    },\n    badge: {\n        position: 'absolute',\n        right: -6,\n        bottom: -4,\n        border: `1px solid ${theme.palette.common.white}`,\n        borderRadius: '50%',\n    },\n    address: {\n        color: theme.palette.maskColor.second,\n        fontSize: 14,\n        lineHeight: '18px',\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 2,\n        marginTop: 4,\n    },\n    list: {\n        marginTop: theme.spacing(1.5),\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: theme.spacing(1),\n        paddingTop: 0,\n        height: 309,\n        overflow: 'scroll',\n        '::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n    listItem: {\n        backgroundColor: theme.palette.maskColor.bottom,\n        borderRadius: 8,\n        padding: theme.spacing(1, 1.5),\n        '&:hover': {\n            backgroundColor: theme.palette.maskColor.bg,\n        },\n    },\n    name: {\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: 14,\n        color: theme.palette.maskColor.second,\n        lineHeight: '18px',\n        columnGap: 4,\n    },\n    balance: {\n        textAlign: 'right',\n        '& > span': {\n            fontSize: 16,\n            lineHeight: '20px',\n            fontWeight: 700,\n        },\n    },\n    maskGasTip: {\n        color: theme.palette.maskColor.highlight,\n        fontSize: 16,\n        lineHeight: '20px',\n        fontWeight: 700,\n        display: 'inline-flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n    },\n    linkIcon: {\n        color: theme.palette.maskColor.second,\n        cursor: 'pointer',\n        height: 14,\n    },\n    menu: {\n        padding: theme.spacing(1.5),\n        maxHeight: 320,\n    },\n    menuPaper: {\n        background: theme.palette.maskColor.bottom,\n        '::-webkit-scrollbar': {\n            backgroundColor: 'transparent',\n            width: 20,\n        },\n        '::-webkit-scrollbar-thumb': {\n            borderRadius: '20px',\n            width: 5,\n            border: '7px solid rgba(0, 0, 0, 0)',\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(250, 250, 250, 0.2)' : 'rgba(0, 0, 0, 0.2)',\n            backgroundClip: 'padding-box',\n        },\n    },\n}))\n\nexport const SmartPayContent = memo(() => {\n    const t = useSmartPayTrans()\n    const { classes } = useStyles()\n\n    const [approveDialogOpen, setApproveDialogOpen] = useState(false)\n    const [addAnchorEl, setAddAnchorEl] = useState<HTMLElement | null>(null)\n    const [manageAnchorEl, setManageAnchorEl] = useState<HTMLElement | null>(null)\n\n    const wallets = useWallets()\n    const contractAccounts = useMemo(() => wallets.filter((x) => x.owner), [wallets])\n\n    // #region Remote Dialog Controller\n    const { setDialog: setReceiveDialog } = useRemoteControlledDialog(PluginSmartPayMessages.receiveDialogEvent)\n    const { openDialog: openSwapDialog } = useRemoteControlledDialog(CrossIsolationMessages.events.swapDialogEvent)\n    const { closeDialog, open: smartPayDialogOpen } = useRemoteControlledDialog(\n        PluginSmartPayMessages.smartPayDialogEvent,\n    )\n    // #endregion\n\n    // #region web3 state\n    const { account, chainId, setAccount } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    const wallet = useMemo(() => {\n        return contractAccounts.find((x) => isSameAddress(x.address, account))\n    }, [contractAccounts, account])\n\n    const maskAddress = Others.getMaskTokenAddress(chainId)\n    const polygonDescriptor = useNetworkDescriptor(NetworkPluginID.PLUGIN_EVM, chainId)\n\n    const { data: assets, refetch: refreshAssets } = useFungibleAssets(NetworkPluginID.PLUGIN_EVM, undefined, {\n        chainId,\n    })\n\n    const { data: maskToken } = useFungibleToken(NetworkPluginID.PLUGIN_EVM, maskAddress, undefined, { chainId })\n\n    const { PAYMASTER_MASK_CONTRACT_ADDRESS } = useSmartPayConstants(chainId)\n    const { data: allowance = '0' } = useERC20TokenAllowance(maskAddress, PAYMASTER_MASK_CONTRACT_ADDRESS, {\n        chainId,\n    })\n\n    const availableBalanceTooLow = isLessThan(formatBalance(allowance, maskToken?.decimals), 0.1)\n\n    const balance = useMemo(() => {\n        if (!assets?.length) return 0\n        const values = assets.map((x) => getTokenUSDValue(x.value))\n\n        return sum(values)\n    }, [assets])\n\n    // #endregion\n\n    const currentProfile = useLastRecognizedIdentity()\n    const { value = 0, retry: refreshRemainFrequency } = useAsyncRetry(async () => {\n        if (!currentProfile?.identifier?.userId) return 0\n        return SmartPayFunder.getRemainFrequency(currentProfile.identifier.userId)\n    }, [currentProfile])\n\n    const [menu, openMenu] = useMenuConfig(\n        contractAccounts?.map((contractAccount, index) => {\n            return (\n                <Box\n                    key={index}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    columnGap={1}\n                    onClick={() => setAccount(contractAccount.address)}\n                    sx={{ cursor: 'pointer' }}>\n                    <Box position=\"relative\" width={30} height={30}>\n                        <Icons.SmartPay size={30} />\n                        <ImageIcon className={classes.badge} size={12} icon={polygonDescriptor?.icon} />\n                    </Box>\n                    <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" minWidth={150}>\n                        <Typography fontSize={16} lineHeight=\"20px\" fontWeight={700}>\n                            {contractAccount.name}\n                        </Typography>\n                        <Typography className={classes.address}>\n                            {formatEthereumAddress(contractAccount?.address ?? '', 4)}\n                            <CopyButton size={14} text={contractAccount.address} />\n                            <Link\n                                href={\n                                    chainId\n                                        ? Others.explorerResolver.addressLink(chainId, contractAccount.address)\n                                        : undefined\n                                }\n                                target=\"_blank\"\n                                title=\"View on Explorer\"\n                                rel=\"noopener noreferrer\"\n                                className={classes.linkIcon}\n                                onClick={(e) => e.stopPropagation()}>\n                                <Icons.LinkOut size={14} />\n                            </Link>\n                        </Typography>\n                    </Box>\n                    <Radio checked={isSameAddress(account, contractAccount.address)} />\n                </Box>\n            )\n        }) ?? [],\n        {\n            anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'center',\n            },\n            transformOrigin: {\n                vertical: 'top',\n                horizontal: 'center',\n            },\n            MenuListProps: {\n                className: classes.menu,\n            },\n            classes: {\n                paper: classes.menuPaper,\n            },\n        },\n    )\n\n    // #region event handler\n    const connectToCurrent = useCallback(async () => {\n        await Web3.connect({\n            account,\n            chainId,\n            owner: wallet?.owner,\n            identifier: ECKeyIdentifier.from(wallet?.identifier).unwrapOr(undefined),\n            providerType: ProviderType.MaskWallet,\n            silent: true,\n        })\n    }, [account, wallet, chainId])\n    const [{ loading: openLuckDropLoading }, handleLuckDropClick] = useAsyncFn(async () => {\n        await connectToCurrent()\n        CrossIsolationMessages.events.redpacketDialogEvent.sendToLocal({ open: true, source: PluginID.SmartPay })\n\n        closeDialog()\n    }, [connectToCurrent])\n\n    const [{ loading: openSwapLoading }, handleSwapClick] = useAsyncFn(async () => {\n        await connectToCurrent()\n        openSwapDialog()\n    }, [connectToCurrent])\n\n    const [{ loading: openSendLoading }, handleSendClick] = useAsyncFn(async () => {\n        await connectToCurrent()\n        await openPopupWindow(PopupRoutes.Contacts, { selectedToken: maskToken?.address })\n    }, [connectToCurrent, maskToken])\n\n    const handleReceiveClick = useCallback(() => {\n        setReceiveDialog({\n            open: true,\n            address: account,\n            name: wallet?.name,\n        })\n    }, [account, wallet])\n\n    // #endregion\n\n    useUpdateEffect(() => {\n        if (!smartPayDialogOpen) return\n        refreshAssets()\n        refreshRemainFrequency()\n    }, [smartPayDialogOpen, refreshAssets, refreshRemainFrequency])\n\n    return (\n        <>\n            <DialogContent className={classes.dialogContent}>\n                <Box className={classes.card}>\n                    <Box display=\"flex\" alignItems=\"center\" columnGap={1.5}>\n                        <Box position=\"relative\" width={30} height={30}>\n                            <Icons.SmartPay size={30} />\n                            <ImageIcon className={classes.badge} size={12} icon={polygonDescriptor?.icon} />\n                        </Box>\n                        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\">\n                            <Box display=\"flex\" onClick={openMenu} sx={{ cursor: 'pointer' }}>\n                                <Typography fontSize={16} lineHeight=\"20px\" fontWeight={700}>\n                                    {wallet?.name}\n                                </Typography>\n                                <Icons.ArrowDrop size={20} />\n                            </Box>\n                            {menu}\n                            <Typography className={classes.address}>\n                                {formatEthereumAddress(account ?? '', 4)}\n                                <CopyButton size={14} text={account} />\n                                <Link\n                                    href={\n                                        account && chainId ? Others.explorerResolver.addressLink(chainId, account) : ''\n                                    }\n                                    target=\"_blank\"\n                                    title=\"View on Explorer\"\n                                    rel=\"noopener noreferrer\"\n                                    className={classes.linkIcon}>\n                                    <Icons.LinkOut size={14} />\n                                </Link>\n                            </Typography>\n                        </Box>\n                    </Box>\n\n                    <Typography mt=\"14px\" fontSize={36} fontWeight={700} lineHeight={1.2}>\n                        <FormattedCurrency value={toFixed(balance, 2)} formatter={formatCurrency} />\n                    </Typography>\n                    <Box display=\"flex\" columnGap={1} position=\"absolute\" top={16} right={16}>\n                        <Icons.KeySquare onClick={(event) => setManageAnchorEl(event.currentTarget)} size={24} />\n                        {value > 0 ? (\n                            <Icons.Add onClick={(event) => setAddAnchorEl(event.currentTarget)} size={24} />\n                        ) : null}\n                        <AddSmartPayPopover\n                            open={!!addAnchorEl}\n                            anchorEl={addAnchorEl}\n                            onClose={() => setAddAnchorEl(null)}\n                        />\n                        <AccountsManagerPopover\n                            open={!!manageAnchorEl}\n                            anchorEl={manageAnchorEl}\n                            address={account}\n                            owner={wallet?.owner}\n                            name={wallet?.name}\n                            onClose={() => setManageAnchorEl(null)}\n                        />\n                    </Box>\n                </Box>\n                <List dense className={classes.list}>\n                    {assets\n                        ?.filter((asset) => asset.chainId === chainId)\n                        ?.map((token, index) => (\n                            <ListItem className={classes.listItem} key={index}>\n                                <Box display=\"flex\" alignItems=\"center\" columnGap=\"10px\">\n                                    <Box position=\"relative\" width={40} height={36}>\n                                        <TokenIcon\n                                            size={36}\n                                            address={token.address}\n                                            name={token.name}\n                                            chainId={token.chainId}\n                                            logoURL={token.logoURL}\n                                        />\n                                        <ImageIcon\n                                            className={classes.badge}\n                                            style={{ right: 0 }}\n                                            size={12}\n                                            icon={polygonDescriptor?.icon}\n                                        />\n                                    </Box>\n                                    <Box>\n                                        <Typography fontSize={16} lineHeight=\"20px\" fontWeight={700}>\n                                            {token.symbol}\n                                            {isSameAddress(token.address, maskAddress) ? (\n                                                <ShadowRootTooltip\n                                                    title={\n                                                        availableBalanceTooLow\n                                                            ? t.allow_mask_as_gas_token_description()\n                                                            : t.remain_mask_tips()\n                                                    }\n                                                    placement=\"top\">\n                                                    <Typography\n                                                        ml={1}\n                                                        onClick={async () => {\n                                                            if (!availableBalanceTooLow) return\n                                                            await connectToCurrent()\n                                                            setApproveDialogOpen(true)\n                                                        }}\n                                                        component=\"span\"\n                                                        className={classes.maskGasTip}\n                                                        display=\"inline-flex\"\n                                                        alignItems=\"center\">\n                                                        {availableBalanceTooLow ? (\n                                                            <>\n                                                                (\n                                                                <Icons.GasStation size={18} sx={{ marginRight: 0.5 }} />\n                                                                {t.allow_mask_as_gas_token()})\n                                                            </>\n                                                        ) : (\n                                                            <Icons.GasStation size={18} />\n                                                        )}\n                                                    </Typography>\n                                                </ShadowRootTooltip>\n                                            ) : null}\n                                        </Typography>\n                                        <Typography className={classes.name}>\n                                            {token.name}\n                                            <Link\n                                                href={\n                                                    chainId\n                                                        ? Others.explorerResolver.addressLink(chainId, token.address)\n                                                        : undefined\n                                                }\n                                                target=\"_blank\"\n                                                title=\"View on Explorer\"\n                                                rel=\"noopener noreferrer\"\n                                                className={classes.linkIcon}>\n                                                <Icons.LinkOut size={14} />\n                                            </Link>\n                                        </Typography>\n                                    </Box>\n                                </Box>\n                                <ListItemText className={classes.balance}>\n                                    <FormattedBalance\n                                        value={isNaN(token.balance) ? 0 : token.balance}\n                                        decimals={isNaN(token.decimals) ? 0 : token.decimals}\n                                        significant={6}\n                                        formatter={formatBalance}\n                                    />\n                                </ListItemText>\n                            </ListItem>\n                        ))}\n                </List>\n                <ApproveMaskDialog open={approveDialogOpen} handleClose={() => setApproveDialogOpen(false)} />\n            </DialogContent>\n            <DialogActions className={classes.dialogActions}>\n                <ActionButton\n                    loading={openLuckDropLoading}\n                    variant=\"roundedContained\"\n                    startIcon={<Icons.RedPacket />}\n                    fullWidth\n                    size=\"small\"\n                    onClick={handleLuckDropClick}>\n                    {t.lucky_drop()}\n                </ActionButton>\n                <ActionButton\n                    loading={openSwapLoading}\n                    variant=\"roundedContained\"\n                    startIcon={<Icons.SwapColorful />}\n                    fullWidth\n                    size=\"small\"\n                    onClick={handleSwapClick}>\n                    {t.swap()}\n                </ActionButton>\n                <ActionButton\n                    loading={openSendLoading}\n                    variant=\"roundedContained\"\n                    startIcon={<Icons.SendColorful />}\n                    fullWidth\n                    size=\"small\"\n                    onClick={handleSendClick}>\n                    {t.send()}\n                </ActionButton>\n                <Button\n                    variant=\"roundedContained\"\n                    startIcon={<Icons.ReceiveColorful />}\n                    fullWidth\n                    size=\"small\"\n                    onClick={handleReceiveClick}>\n                    {t.receive()}\n                </Button>\n            </DialogActions>\n        </>\n    )\n})\n","import { compact } from 'lodash-es'\nimport { useCallback, useMemo } from 'react'\nimport { useAsync } from 'react-use'\nimport { Icons } from '@masknet/icons'\nimport { useAllPersonas, useLastRecognizedIdentity } from '@masknet/plugin-infra/content-script'\nimport { InjectedDialog } from '@masknet/shared'\nimport { CrossIsolationMessages } from '@masknet/shared-base'\nimport { useRemoteControlledDialog } from '@masknet/shared-base-ui'\nimport { LoadingBase, makeStyles } from '@masknet/theme'\nimport { useWallets } from '@masknet/web3-hooks-base'\nimport { SmartPayBundler, SmartPayFunder, SmartPayOwner } from '@masknet/web3-providers'\nimport { DialogContent, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { matchPath, Route, Routes, useLocation, useNavigate } from 'react-router-dom'\nimport { RoutePaths } from '../../constants.js'\nimport { SmartPayContext } from '../../hooks/useSmartPayContext.js'\nimport { useSmartPayTrans } from '../../locales/i18n_generated.js'\nimport { PluginSmartPayMessages } from '../../message.js'\nimport { Deploy } from './Deploy.js'\nimport { InEligibilityTips } from './InEligibilityTips.js'\nimport { SmartPayContent } from './SmartPayContent.js'\n\nconst useStyles = makeStyles<{ isDeployPage: boolean }>()((theme, { isDeployPage }) => ({\n    dialogContent: {\n        padding: 0,\n        overflow: isDeployPage ? 'hidden' : 'auto',\n        '::-webkit-scrollbar': {\n            backgroundColor: 'transparent',\n            width: 20,\n        },\n        '::-webkit-scrollbar-thumb': {\n            borderRadius: '20px',\n            width: 5,\n            border: '7px solid rgba(0, 0, 0, 0)',\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(250, 250, 250, 0.2)' : 'rgba(0, 0, 0, 0.2)',\n            backgroundClip: 'padding-box',\n        },\n    },\n}))\n\nexport function RouterDialog() {\n    const t = useSmartPayTrans()\n    const { pathname, state } = useLocation()\n    const { classes } = useStyles({ isDeployPage: Boolean(matchPath(RoutePaths.Deploy, pathname)) })\n    const navigate = useNavigate()\n    const personas = useAllPersonas()\n    const wallets = useWallets()\n\n    const { setSigner } = SmartPayContext.useContainer()\n\n    const { setDialog } = useRemoteControlledDialog(PluginSmartPayMessages.smartPayDescriptionDialogEvent)\n\n    const { open, closeDialog } = useRemoteControlledDialog(PluginSmartPayMessages.smartPayDialogEvent, (ev) => {\n        // reset state when dialog has been closed\n        if (!ev.open) {\n            setSigner(undefined)\n        }\n\n        setSigner({\n            signWallet: ev.signWallet,\n            signPersona: ev.signPersona,\n        })\n    })\n\n    const { open: openOfCross, closeDialog: closeOfCross } = useRemoteControlledDialog(\n        CrossIsolationMessages.events.smartPayDialogEvent,\n    )\n\n    const lastRecognizedIdentity = useLastRecognizedIdentity()\n\n    // #region query white list\n    const { loading: queryVerifyLoading } = useAsync(async () => {\n        if (!lastRecognizedIdentity?.identifier?.userId || !open) return\n        const chainId = await SmartPayBundler.getSupportedChainId()\n        const accounts = await SmartPayOwner.getAccountsByOwners(chainId, [\n            ...wallets.filter((x) => !x.owner).map((x) => x.address),\n            ...compact(personas.map((x) => x.address)),\n        ])\n        const verified = await SmartPayFunder.verify(lastRecognizedIdentity.identifier.userId)\n\n        if (accounts.filter((x) => x.deployed).length) return navigate(RoutePaths.Main)\n\n        if (verified || accounts.filter((x) => !x.deployed && x.funded).length) return navigate(RoutePaths.Deploy)\n\n        return navigate(RoutePaths.InEligibility)\n    }, [open, lastRecognizedIdentity, personas.length, wallets.length])\n    // #endregion\n\n    const title = useMemo(() => {\n        if (matchPath(RoutePaths.Deploy, pathname)) return t.smart_pay_wallet_deployment()\n        else if (matchPath(RoutePaths.InEligibility, pathname)) return t.smart_pay_wallet()\n        return t.__plugin_name()\n    }, [matchPath, pathname])\n\n    const handleClose = useCallback(() => {\n        if (state?.canBack) return navigate(-1)\n        closeDialog()\n        closeOfCross()\n    }, [state])\n\n    return (\n        <InjectedDialog\n            open={open || openOfCross}\n            onClose={handleClose}\n            title={title}\n            titleTail={<Icons.Questions onClick={() => setDialog({ open: true })} />}>\n            <DialogContent className={classes.dialogContent}>\n                {queryVerifyLoading ? (\n                    <Box\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        flexDirection=\"column\"\n                        rowGap={1.5}\n                        minHeight={564}>\n                        <LoadingBase size={36} />\n                        <Typography>{t.loading()}</Typography>\n                    </Box>\n                ) : (\n                    <Routes>\n                        <Route path={RoutePaths.Deploy} element={<Deploy open={open} />} />\n                        <Route path={RoutePaths.InEligibility} element={<InEligibilityTips />} />\n                        <Route path={RoutePaths.Main} element={<SmartPayContent />} />\n                    </Routes>\n                )}\n            </DialogContent>\n        </InjectedDialog>\n    )\n}\n","import { memo } from 'react'\nimport { MemoryRouter } from 'react-router-dom'\nimport { RoutePaths } from '../../constants.js'\nimport { SmartPayContext } from '../../hooks/useSmartPayContext.js'\nimport { RouterDialog } from './RouterDialog.js'\n\nexport const SmartPayDialog = memo(() => {\n    const entries = [RoutePaths.Deploy, RoutePaths.InEligibility, RoutePaths.Main]\n\n    return (\n        <MemoryRouter initialEntries={entries} initialIndex={1}>\n            <SmartPayContext.Provider>\n                <RouterDialog />\n            </SmartPayContext.Provider>\n        </MemoryRouter>\n    )\n})\n","import { memo, useState } from 'react'\nimport { QRCode } from '@masknet/shared'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useRemoteControlledDialog } from '@masknet/shared-base-ui'\nimport { makeStyles, usePortalShadowRoot } from '@masknet/theme'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { Others } from '@masknet/web3-providers'\nimport { Close } from '@mui/icons-material'\nimport { alpha, Dialog, DialogContent, DialogTitle, IconButton, Typography } from '@mui/material'\nimport { useSmartPayTrans } from '../../locales/i18n_generated.js'\nimport { PluginSmartPayMessages } from '../../message.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    paper: {\n        margin: 0,\n        maxWidth: 420,\n        backgroundColor: theme.palette.maskColor.bottom,\n        backgroundImage: 'unset',\n    },\n    title: {\n        textAlign: 'center',\n        fontSize: 16,\n        lineHeight: '20px',\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n    },\n    content: {\n        padding: theme.spacing(0, 6.25, 3),\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    tips: {\n        fontSize: 16,\n        lineHeight: '20px',\n        color: theme.palette.maskColor.second,\n        marginTop: 28,\n    },\n    warning: {\n        background: alpha(theme.palette.maskColor.danger, 0.1),\n        borderRadius: 99,\n        fontSize: 14,\n        lineHeight: '18px',\n        fontWeight: 700,\n        color: theme.palette.maskColor.danger,\n        padding: theme.spacing(0.5, 1.5),\n        marginTop: theme.spacing(2),\n    },\n}))\n\nexport function InjectReceiveDialog() {\n    const [address, setAddress] = useState('')\n    const [name, setName] = useState('')\n    const { open, closeDialog } = useRemoteControlledDialog(PluginSmartPayMessages.receiveDialogEvent, (ev) => {\n        if (!ev.open) return\n        if (ev.address) setAddress(ev.address)\n        if (ev.name) setName(ev.name)\n    })\n    return open ? <ReceiveDialog open onClose={closeDialog} address={address} name={name} /> : null\n}\n\ninterface Props {\n    address: string\n    name: string\n    open: boolean\n    onClose(): void\n}\nconst ReceiveDialog = memo(function ReceiveDialog({ address, name, open, onClose }: Props) {\n    const t = useSmartPayTrans()\n    const { classes } = useStyles()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    return usePortalShadowRoot((container) => (\n        <Dialog container={container} open={open} onClose={onClose} classes={{ paper: classes.paper }}>\n            <DialogTitle\n                sx={{\n                    py: 3,\n                    display: 'grid',\n                    alignItems: 'center',\n                    gridTemplateColumns: '50px auto 50px',\n                    whiteSpace: 'nowrap',\n                }}>\n                <IconButton size=\"large\" disableRipple onClick={onClose} sx={{ padding: 0 }}>\n                    <Close color=\"inherit\" style={{ width: 24, height: 24 }} />\n                </IconButton>\n                <Typography className={classes.title}>{name}</Typography>\n            </DialogTitle>\n            <DialogContent className={classes.content}>\n                <QRCode\n                    text={`${Others.chainResolver.chainPrefix(chainId)}:${address}`}\n                    options={{ width: 250 }}\n                    canvasProps={{ width: 250, height: 250 }}\n                />\n                <Typography className={classes.tips}>{t.scan_address_to_payment()}</Typography>\n                <Typography className={classes.warning}>{t.can_only_receive_polygon_assets()}</Typography>\n            </DialogContent>\n        </Dialog>\n    ))\n})\n","import { memo } from 'react'\nimport { Box, DialogContent, Typography } from '@mui/material'\nimport { InjectedDialog } from '@masknet/shared'\nimport { useRemoteControlledDialog } from '@masknet/shared-base-ui'\nimport { makeStyles } from '@masknet/theme'\nimport { SmartPayTrans, useSmartPayTrans } from '../../locales/i18n_generated.js'\nimport { PluginSmartPayMessages } from '../../message.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    dialogContent: {\n        padding: theme.spacing(2),\n        minHeight: 564,\n        boxSizing: 'border-box',\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: 700,\n        lineHeight: '20px',\n    },\n    content: {\n        fontSize: 14,\n        color: theme.palette.maskColor.second,\n    },\n    strong: {\n        color: theme.palette.maskColor.main,\n    },\n}))\n\nexport function InjectSmartPayDescriptionDialog() {\n    const { open, closeDialog } = useRemoteControlledDialog(PluginSmartPayMessages.smartPayDescriptionDialogEvent)\n    return open ? <SmartPayDescriptionDialog open onClose={closeDialog} /> : null\n}\n\ninterface Props {\n    open: boolean\n    onClose(): void\n}\nconst SmartPayDescriptionDialog = memo(function SmartPayDescriptionDialog({ open, onClose }: Props) {\n    const t = useSmartPayTrans()\n    const { classes } = useStyles()\n    return (\n        <InjectedDialog open={open} onClose={onClose} title={t.what_is_smart_pay()}>\n            <DialogContent className={classes.dialogContent}>\n                <Typography className={classes.title}>{t.what_is_smart_pay_title()}</Typography>\n                <Typography sx={{ my: 3 }} className={classes.content}>\n                    {t.smart_pay_description()}\n                </Typography>\n                <Typography className={classes.title}>{t.setup_smart_pay_title()}</Typography>\n                <Box component=\"ul\">\n                    <Typography component=\"li\" className={classes.content}>\n                        <SmartPayTrans.setup_smart_pay_one\n                            components={{ strong: <strong className={classes.strong} /> }}\n                        />\n                    </Typography>\n                    <Typography component=\"li\" className={classes.content}>\n                        {t.setup_smart_pay_two()}\n                    </Typography>\n                </Box>\n                <Typography className={classes.title}>{t.erc_4337_features_title()}</Typography>\n                <Box component=\"ul\">\n                    <Typography component=\"li\" className={classes.content}>\n                        {t.erc_4337_features_one()}\n                    </Typography>\n                    <Typography component=\"li\" className={classes.content}>\n                        {t.erc_4337_features_two()}\n                    </Typography>\n                    <Typography component=\"li\" className={classes.content}>\n                        {t.erc_4337_features_three()}\n                    </Typography>\n                    <Typography component=\"li\" className={classes.content}>\n                        {t.erc_4337_features_four()}\n                    </Typography>\n                </Box>\n            </DialogContent>\n        </InjectedDialog>\n    )\n})\n","import { first } from 'lodash-es'\nimport { useAsync } from 'react-use'\nimport { Trans } from 'react-i18next'\nimport { Icons } from '@masknet/icons'\nimport type { Plugin } from '@masknet/plugin-infra'\nimport { PluginID } from '@masknet/shared-base'\nimport { DefaultWeb3ContextProvider, useWallets } from '@masknet/web3-hooks-base'\nimport { SmartPayBundler } from '@masknet/web3-providers'\nimport { base } from '../base.js'\nimport { PLUGIN_ID } from '../constants.js'\nimport { SmartPayEntry } from './components/SmartPayEntry.js'\nimport { SmartPayDialog } from './components/SmartPayDialog.js'\nimport { InjectReceiveDialog } from './components/ReceiveDialog.js'\nimport { InjectSmartPayDescriptionDialog } from './components/SmartPayDescriptionDialog.js'\n\nconst site: Plugin.SiteAdaptor.Definition = {\n    ...base,\n    GlobalInjection: function SmartPayGlobalInjection() {\n        const wallets = useWallets()\n        const contractAccounts = wallets.filter((x) => x.owner)\n        const { value: chainId } = useAsync(async () => SmartPayBundler.getSupportedChainId(), [])\n\n        return (\n            <DefaultWeb3ContextProvider value={{ chainId, account: first(contractAccounts)?.address }}>\n                <SmartPayDialog />\n                <InjectSmartPayDescriptionDialog />\n                <InjectReceiveDialog />\n            </DefaultWeb3ContextProvider>\n        )\n    },\n    ApplicationEntries: [\n        {\n            RenderEntryComponent: (props) => {\n                return (\n                    <DefaultWeb3ContextProvider>\n                        <SmartPayEntry {...props} />\n                    </DefaultWeb3ContextProvider>\n                )\n            },\n            ApplicationEntryID: PLUGIN_ID,\n            appBoardSortingDefaultPriority: 2,\n            marketListSortingPriority: 2,\n            name: <Trans ns={PluginID.SmartPay} i18nKey=\"__plugin_name\" />,\n            icon: <Icons.SmartPay size={36} />,\n            category: 'other',\n        },\n    ],\n}\n\nexport default site\n","import type { PluginMessageEmitterItem } from '@masknet/shared-base'\nimport { useState, useEffect, useCallback, useRef } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nexport interface RemoteControlledDialogEvent {\n    open: boolean\n    hookId?: string\n}\n\ninterface Result<T> {\n    open: boolean\n    closeDialog: () => void\n    openDialog: () => void\n    setDialog: (ev: T) => void\n}\n\n/**\n * Use a dialog state controlled by remote\n */\nexport function useRemoteControlledDialog<T extends { open: boolean }>(\n    event: PluginMessageEmitterItem<T>,\n    onUpdateByRemote?: (ev: T) => void,\n    tabType: 'self' | 'activated' = 'self',\n): Result<T> {\n    const [HOOK_ID] = useState(uuid) // create an uuid for every hook\n    const [open, setOpen] = useState(false)\n\n    useEffect(\n        () =>\n            event.on((_ev: T) => {\n                const event = _ev as unknown as RemoteControlledDialogEvent\n\n                // ignore the event from the same hook\n                if (event.hookId === HOOK_ID) return\n\n                setOpen(event.open)\n                onUpdateByRemote?.(_ev)\n            }),\n        [onUpdateByRemote, event, HOOK_ID],\n    )\n\n    const timer = useRef<ReturnType<typeof setTimeout> | null>(null)\n    const onUpdateByLocal = useCallback(\n        (ev: T) => {\n            setOpen(ev.open)\n\n            const timer_ = timer.current\n            if (timer_ !== null) clearTimeout(timer_)\n            timer.current = setTimeout(() => {\n                const payload: T & RemoteControlledDialogEvent = {\n                    hookId: HOOK_ID,\n                    ...ev,\n                }\n                tabType === 'self' ? event.sendToLocal(payload) : event.sendToVisiblePages(payload)\n            }, 100)\n        },\n        [event, tabType, HOOK_ID],\n    )\n    const openDialog = useCallback(() => {\n        onUpdateByLocal({ open: true } as T)\n    }, [])\n    const closeDialog = useCallback(() => {\n        onUpdateByLocal({ open: false } as T)\n    }, [])\n\n    return {\n        open,\n        openDialog,\n        closeDialog,\n        setDialog: onUpdateByLocal,\n    }\n}\n","import { defer, delay, type DeferTuple } from '@masknet/kit'\nimport { Emitter } from '@servie/events'\n\nexport type SingletonModalRefCreator<OpenProps = void, CloseProps = void> = (\n    onOpen: (props: OpenProps) => void,\n    onClose: (props: CloseProps) => void,\n    onAbort: (error: Error) => void,\n) => {\n    peek: () => boolean\n    open: (props: OpenProps) => void\n    close: (props: CloseProps) => void\n    abort?: (error: Error) => void\n}\n\nexport interface SingletonModalProps {\n    children: React.ReactNode\n}\n\nexport class SingletonModal<\n    OpenProps = void,\n    CloseProps = void,\n    T extends SingletonModalRefCreator<OpenProps, CloseProps> = SingletonModalRefCreator<OpenProps, CloseProps>,\n> {\n    constructor() {\n        this.open = this.open.bind(this)\n        this.close = this.close.bind(this)\n        this.abort = this.abort.bind(this)\n        this.openAndWaitForClose = this.openAndWaitForClose.bind(this)\n    }\n    readonly emitter = new Emitter<{\n        open: [OpenProps]\n        close: [CloseProps]\n        abort: [Error]\n    }>()\n\n    protected onOpen: ReturnType<T>['open'] | undefined\n    protected onClose: ReturnType<T>['close'] | undefined\n    protected onAbort: ReturnType<T>['abort'] | undefined\n\n    private dispatchPeek: ReturnType<T>['peek'] | undefined\n    private dispatchOpen: ReturnType<T>['open'] | undefined\n    private dispatchClose: ReturnType<T>['close'] | undefined\n    private dispatchAbort: ReturnType<T>['abort'] | undefined\n\n    /**\n     * Register a React modal component that implemented a forwarded ref.\n     * The ref item should be fed with open and close methods.\n     */\n    register = (creator: T | null) => {\n        if (!creator) {\n            this.dispatchOpen = undefined\n            this.dispatchClose = undefined\n            this.dispatchAbort = undefined\n            return\n        }\n\n        const ref = creator(\n            (props) => {\n                this.onOpen?.(props)\n                this.emitter.emit('open', props)\n            },\n            (props) => {\n                this.onClose?.(props)\n                this.emitter.emit('close', props)\n            },\n            (error) => {\n                this.onAbort?.(error)\n                this.emitter.emit('abort', error)\n            },\n        )\n        this.dispatchPeek = ref.peek\n        this.dispatchOpen = ref.open\n        this.dispatchClose = ref.close\n        this.dispatchAbort = ref.abort\n    }\n\n    /**\n     * Peek the open state of the React modal component.\n     */\n    peek() {\n        return this.dispatchPeek?.() ?? false\n    }\n\n    /**\n     * Open the registered modal component with props\n     * @param props\n     */\n    open(props: OpenProps) {\n        if (typeof this.dispatchOpen === 'undefined') console.warn(\"[SingletonModal]: The modal hasn't registered yet.\")\n        this.dispatchOpen?.(props)\n    }\n\n    /**\n     * Close the registered modal component with props\n     * @param props\n     */\n    close(props: CloseProps) {\n        this.dispatchClose?.(props)\n    }\n\n    /**\n     * Abort the registered modal component with Error\n     */\n    abort(error: Error) {\n        this.dispatchAbort?.(error)\n    }\n\n    /**\n     * Open the registered modal component and wait for it closes\n     * @param props\n     */\n    openAndWaitForClose(props: OpenProps): Promise<CloseProps> {\n        return new Promise<CloseProps>((resolve, reject) => {\n            this.open(props)\n            this.onClose = (props) => resolve(props)\n            this.onAbort = (error) => reject(error)\n        })\n    }\n}\n\nexport class SingletonModalQueued<OpenProps = void, CloseProps = void> extends SingletonModal<OpenProps, CloseProps> {\n    private opened = false\n    private tasks: Array<{\n        props: OpenProps\n        defer?: DeferTuple<CloseProps, Error>\n    }> = []\n\n    constructor() {\n        super()\n\n        this.emitter.on('open', () => {\n            this.opened = true\n        })\n        this.emitter.on('close', () => {\n            this.opened = false\n            this.cleanup()\n        })\n        this.emitter.on('abort', () => {\n            this.opened = false\n            this.cleanup()\n        })\n    }\n\n    override open(props: OpenProps) {\n        if (!this.opened) {\n            super.open(props)\n            return\n        }\n\n        this.tasks.push({\n            props,\n        })\n    }\n\n    override close(props: CloseProps) {\n        if (!this.opened) return\n\n        super.close(props)\n    }\n\n    override openAndWaitForClose(props: OpenProps) {\n        if (!this.opened) return super.openAndWaitForClose(props)\n\n        const d = defer<CloseProps, Error>()\n        this.tasks.push({\n            props,\n            defer: d,\n        })\n        return d[0]\n    }\n\n    private async cleanup() {\n        if (this.opened || !this.tasks.length) return\n\n        await delay(300)\n\n        const { props, defer } = this.tasks.shift()!\n\n        this.open(props)\n        if (!defer) return\n        this.onClose = (props) => defer[1](props)\n        this.onAbort = (error) => defer[2](error)\n    }\n}\n","import {\n    type ProfileIdentifier,\n    type PersonaIdentifier,\n    type PersonaInformation,\n    type ProfileInformation,\n    Identifier,\n} from '../index.js'\n\nexport function formatPersonaFingerprint(fingerprint: string, size?: number) {\n    if (!size) {\n        if (fingerprint.length <= 26) return fingerprint\n        return `${fingerprint.slice(0, 12)}...${fingerprint.slice(-9)}`\n    }\n\n    if (size <= 0) return fingerprint\n    return `${fingerprint.slice(0, Math.max(0, 2 + size))}...${fingerprint.slice(-size)}`\n}\n\nexport const MAX_PERSONA_LIMIT = 10\n\nexport const MAX_PERSONA_NAME_LENGTH = 12\n\nexport const formatPersonaName = (nickname?: string) => {\n    if (!nickname) return ''\n    if (nickname.length < MAX_PERSONA_NAME_LENGTH) return nickname\n\n    return `${nickname.slice(0, 12)}...`\n}\n\nfunction isSameIdentity<T extends Identifier>(identities: Array<T | { identifier: T } | undefined>) {\n    return identities.reduce((previousValue, T2, key) => {\n        if (key === 0) return true\n        const T1 = identities[key - 1]\n        if (!T2 || !T1) return false\n\n        const i1IdentifierText = (T1 instanceof Identifier ? T1 : T1.identifier).toText()\n        const i2IdentifierText = (T2 instanceof Identifier ? T2 : T2.identifier).toText()\n\n        return previousValue && i1IdentifierText.toLowerCase() === i2IdentifierText.toLowerCase()\n    }, false)\n}\n\nexport function isSamePersona(...personas: Array<PersonaIdentifier | PersonaInformation | undefined>) {\n    return isSameIdentity(personas)\n}\n\nexport function isSameProfile(...profiles: Array<ProfileIdentifier | ProfileInformation | undefined>) {\n    return isSameIdentity(profiles)\n}\n","import type { PersonaIdentifier, ProfileIdentifier } from '@masknet/base'\nimport type { NextIDPersonaBindings, NextIDPlatform } from '../NextID/types.js'\n/**\n * This interface contains the minimal information for UI display\n */\nexport interface PersonaInformation {\n    avatar?: string\n    proof?: NextIDPersonaBindings\n    /** The nickname of the persona. Should use profile.nickname if it presents. */\n    nickname?: string\n    /** The evm address of persona */\n    address?: string\n    identifier: PersonaIdentifier\n    linkedProfiles: ProfileInformation[]\n}\n\nexport interface ProfileInformation {\n    /** The nickname of the profile. Should be used in prior. */\n    nickname?: string\n    avatar?: string\n    identifier: ProfileIdentifier\n    linkedPersona?: PersonaIdentifier\n    createAt?: Date\n}\n\nexport interface ProfileAccount extends ProfileInformation {\n    is_valid?: boolean\n    identity?: string\n    platform?: NextIDPlatform\n    last_checked_at?: string\n}\n\nexport interface ProfileInformationFromNextID extends ProfileInformation {\n    fromNextID: boolean\n    linkedTwitterNames?: string[]\n    walletAddress?: string\n    createdAt?: Date\n    updatedAt?: Date\n}\n\nexport enum RelationFavor {\n    COLLECTED = -1,\n    UNCOLLECTED = 1,\n    DEPRECATED = 0,\n}\nexport interface RelationProfile {\n    favorite?: boolean\n    avatar?: string\n    name: string\n    fingerprint?: string\n    identifier: ProfileIdentifier\n}\n\nexport interface Relation {\n    profile: ProfileIdentifier | PersonaIdentifier\n    linked: PersonaIdentifier\n    favor: RelationFavor\n    network?: string\n}\n\nexport enum ProofType {\n    Persona = 'persona',\n    EOA = 'eoa',\n}\n\nexport interface ProofPayload {\n    ownerAddress: string\n    nonce?: number\n}\n\nexport interface Proof {\n    publicKey: string\n    type: ProofType\n    payload: string // JSON.stringify(payload)\n    signature: string\n}\n","import type { IdentityResolved } from '@masknet/plugin-infra'\nimport type { PersonaInformation } from '@masknet/shared-base'\nimport { formatPersonaFingerprint } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Typography } from '@mui/material'\nimport { type PropsWithChildren } from 'react'\nimport { CopyButton } from '../CopyButton/index.js'\nimport { PlatformAvatar } from './PlatformAvatar.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    bottomFixed: {\n        width: '100%',\n        minHeight: 36,\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: 16,\n        boxShadow: theme.palette.shadow.popup,\n    },\n    linkIcon: {\n        marginRight: theme.spacing(1),\n        color: theme.palette.maskColor.second,\n        cursor: 'pointer',\n    },\n    personaKey: {\n        fontSize: '12px',\n        fontWeight: '400',\n        color: theme.palette.maskColor.third,\n    },\n}))\n\ninterface PersonaActionProps extends PropsWithChildren {\n    currentPersona?: PersonaInformation\n    currentVisitingProfile?: IdentityResolved\n    avatar?: string\n    classes?: {\n        bottomFixed: string\n    }\n}\n\nexport function PersonaAction(props: PersonaActionProps) {\n    const { classes } = useStyles(undefined, { props })\n    const { currentPersona, avatar, children } = props\n\n    return (\n        <div className={classes.bottomFixed}>\n            <Box display=\"flex\">\n                <PlatformAvatar networkIcon={avatar} size={36} />\n                <div style={{ marginLeft: '4px' }}>\n                    <Typography style={{ fontSize: '14px', fontWeight: '700', display: 'flex' }}>\n                        {currentPersona?.nickname}\n                    </Typography>\n                    <Box sx={{ display: 'flex' }}>\n                        <Typography className={classes.personaKey}>\n                            {currentPersona?.identifier\n                                ? formatPersonaFingerprint(currentPersona.identifier.rawPublicKey, 4)\n                                : '--'}\n                        </Typography>\n                        <CopyButton\n                            size={16}\n                            text={currentPersona?.identifier.rawPublicKey ?? ''}\n                            className={classes.linkIcon}\n                        />\n                    </Box>\n                </div>\n            </Box>\n            {children}\n        </div>\n    )\n}\n","import { makeStyles } from '@masknet/theme'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        icon: {\n            borderRadius: '50%',\n        },\n    }\n})\n\nexport interface PersonaImageIconProps extends withClasses<'icon'> {\n    size?: number\n    icon?: string\n    borderRadius?: string\n}\n\nexport function PersonaImageIcon(props: PersonaImageIconProps) {\n    const { size = 48, icon, borderRadius = '50%' } = props\n    const { classes } = useStyles(undefined, { props })\n    return <img height={size} width={size} src={icon?.toString()} className={classes.icon} style={{ borderRadius }} />\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Icons } from '@masknet/icons'\nimport { PersonaImageIcon } from './PersonaImageIcon.js'\nimport { memo } from 'react'\n\ninterface StyleProps {\n    size: number\n    isBorderColorNotDefault?: boolean\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, props) => ({\n    root: {\n        position: 'relative',\n        alignSelf: 'center',\n        display: 'flex',\n        height: props.size,\n        width: props.size,\n    },\n    mainIcon: {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n    },\n    badgeIcon: {\n        position: 'absolute',\n        right: -2,\n        bottom: -2,\n    },\n}))\n\ninterface PlatformAvatarProps extends withClasses<'networkIcon' | 'providerIcon'> {\n    size?: number\n    badgeSize?: number\n    inverse?: boolean\n    networkIcon?: string\n    providerIcon?: string\n    isBorderColorNotDefault?: boolean\n}\n\nexport const PlatformAvatar = memo(function PlatformAvatar(props: PlatformAvatarProps) {\n    const { size = 24, badgeSize = 14, inverse = false, networkIcon, providerIcon } = props\n    const { classes, cx } = useStyles(\n        {\n            size: badgeSize > size ? badgeSize : size,\n            isBorderColorNotDefault: props.isBorderColorNotDefault,\n        },\n        { props },\n    )\n\n    // #region icon names\n    const names = inverse\n        ? [cx(classes.badgeIcon, classes.providerIcon), cx(classes.mainIcon, classes.networkIcon)]\n        : [cx(classes.mainIcon, classes.networkIcon), cx(classes.badgeIcon, classes.providerIcon)]\n    // #endregion\n    return (\n        <div\n            className={classes.root}\n            style={{\n                height: size,\n                width: size,\n            }}>\n            {networkIcon ? (\n                <PersonaImageIcon\n                    classes={{\n                        icon: names[0],\n                    }}\n                    size={size}\n                    icon={networkIcon}\n                />\n            ) : (\n                <Icons.Masks\n                    size={size}\n                    sx={{\n                        display: 'inline-block',\n                        borderRadius: '50%',\n                    }}\n                />\n            )}\n            {providerIcon ? (\n                <PersonaImageIcon\n                    classes={{\n                        icon: names[1],\n                    }}\n                    size={badgeSize}\n                    icon={providerIcon}\n                />\n            ) : null}\n        </div>\n    )\n})\n","import { makeStyles } from '@masknet/theme'\nimport qr from 'qrcode'\nimport { useEffect, useRef, useState } from 'react'\nimport { Typography } from '@mui/material'\nimport { Trans } from 'react-i18next'\nimport { blue } from '@mui/material/colors'\n\ninterface QRProps {\n    text: string\n    options?: qr.QRCodeRenderersOptions\n    canvasProps?: React.DetailedHTMLProps<\n        React.CanvasHTMLAttributes<HTMLCanvasElement & HTMLImageElement>,\n        HTMLCanvasElement & HTMLImageElement\n    >\n}\n\nconst CACHE_SCOPE = 'qrcode'\nconst useStyles = makeStyles()((theme) => ({\n    text: {\n        paddingTop: 50,\n    },\n    info: {\n        color: theme.palette.mode === 'dark' ? blue[500] : blue[800],\n        extDecoration: 'underline',\n        cursor: 'pointer',\n    },\n}))\n\nexport function QRCode({ text, options = {}, canvasProps }: QRProps) {\n    const ref = useRef<HTMLCanvasElement | null>(null)\n    const [error, setError] = useState(false)\n    const image = cache.get(CACHE_SCOPE, text)\n    const { classes } = useStyles()\n    useEffect(() => {\n        if (!ref.current || error) return\n\n        qr.toCanvas(ref.current, text, options, (err) => {\n            if (err) {\n                setError(true)\n                cache.remove(CACHE_SCOPE, text)\n                throw err\n            }\n            const dataURL = ref.current?.toDataURL()\n            if (dataURL) {\n                cache.set(CACHE_SCOPE, text, dataURL)\n            }\n        })\n    }, [options, text, error])\n\n    return error ? (\n        <>\n            <Typography color=\"textPrimary\" variant=\"body1\" className={classes.text}>\n                <Trans\n                    i18nKey=\"backup_qrcode_error\"\n                    components={{\n                        again: (\n                            <span\n                                onClick={() => {\n                                    setError(false)\n                                }}\n                                className={classes.info}\n                            />\n                        ),\n                    }}\n                />\n            </Typography>\n        </>\n    ) : image ? (\n        <img src={image} {...canvasProps} />\n    ) : (\n        <canvas {...canvasProps} ref={ref} />\n    )\n}\n\nconst cache = {\n    get(scope: string, key: string) {\n        return sessionStorage.getItem(`${scope}:${key}`)\n    },\n    set(scope: string, key: string, value: string) {\n        return sessionStorage.setItem(`${scope}:${key}`, value)\n    },\n    remove(scope: string, key: string) {\n        return sessionStorage.removeItem(`${scope}:${key}`)\n    },\n}\n","import { makeStyles } from '@masknet/theme'\nimport { ImageIcon } from '../ImageIcon/index.js'\n\ninterface StyleProps {\n    size: number\n    badgeIconBorderColor?: string\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, props) => ({\n    root: {\n        position: 'relative',\n        display: 'flex',\n        height: props.size,\n        width: props.size,\n    },\n    mainIcon: {\n        display: 'block',\n    },\n    badgeIcon: {\n        position: 'absolute',\n        right: -6,\n        bottom: -4,\n        border: `1px solid ${props.badgeIconBorderColor ?? theme.palette.common.white}`,\n        borderRadius: '50%',\n    },\n}))\n\ninterface WalletIconProps extends withClasses<'root' | 'mainIcon'> {\n    size?: number\n    badgeSize?: number\n    mainIcon?: string\n    badgeIcon?: string\n    badgeIconBorderColor?: string\n    iconFilterColor?: string\n}\n\nexport function WalletIcon(props: WalletIconProps) {\n    const { size = 24, badgeSize = 14, mainIcon, badgeIcon, badgeIconBorderColor, iconFilterColor } = props\n    const { classes } = useStyles(\n        {\n            size: badgeSize > size ? badgeSize : size,\n            badgeIconBorderColor,\n        },\n        { props: { classes: props.classes } },\n    )\n\n    return (\n        <div\n            className={classes.root}\n            style={{\n                height: size,\n                width: size,\n            }}>\n            {mainIcon ? (\n                <ImageIcon className={classes.mainIcon} size={size} icon={mainIcon} iconFilterColor={iconFilterColor} />\n            ) : null}\n            {badgeIcon ? <ImageIcon className={classes.badgeIcon} size={badgeSize} icon={badgeIcon} /> : null}\n        </div>\n    )\n}\n","import { makeStyles, LoadingBase } from '@masknet/theme'\nimport { memo } from 'react'\nimport { alpha, Box, Link, Typography } from '@mui/material'\nimport { CopyButton, WalletIcon } from '@masknet/shared'\nimport { Icons } from '@masknet/icons'\nimport { useSharedTrans } from '../../../locales/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 4,\n        cursor: 'pointer',\n    },\n    description: {\n        marginLeft: 10,\n    },\n    walletName: {\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 4,\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        lineHeight: '18px',\n    },\n    address: {\n        color: theme.palette.maskColor.second,\n        lineHeight: '18px',\n        display: 'flex',\n        alignItems: 'center',\n        columnGap: 2,\n    },\n    pending: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 2,\n        borderRadius: 2,\n        padding: '2px 4px',\n        backgroundColor: alpha(theme.palette.maskColor.warn, 0.1),\n        color: theme.palette.maskColor.warn,\n        lineHeight: '18px',\n    },\n    progress: {\n        color: theme.palette.maskColor.warn,\n    },\n    linkIcon: {\n        color: theme.palette.maskColor.second,\n        cursor: 'pointer',\n        height: 14,\n    },\n}))\n\nexport interface WalletDescriptionProps {\n    onClick?: (ev: React.MouseEvent<HTMLDivElement>) => void\n    pending?: boolean\n    onPendingClick?: () => void\n    providerIcon?: string\n    networkIcon?: string\n    iconFilterColor?: string\n    name?: string\n    address?: string\n    formattedAddress?: string\n    addressLink?: string\n    verified?: boolean\n}\n\nexport const WalletDescription = memo<WalletDescriptionProps>(\n    ({\n        onClick,\n        providerIcon,\n        networkIcon,\n        iconFilterColor,\n        name,\n        address,\n        formattedAddress,\n        addressLink,\n        onPendingClick,\n        pending,\n        verified,\n    }) => {\n        const { classes } = useStyles()\n        const t = useSharedTrans()\n\n        return (\n            <Box onClick={onClick} className={classes.root}>\n                <WalletIcon\n                    size={30}\n                    badgeSize={12}\n                    mainIcon={providerIcon ?? networkIcon}\n                    badgeIcon={providerIcon ? networkIcon : undefined}\n                    iconFilterColor={iconFilterColor}\n                />\n                <Box className={classes.description}>\n                    <Typography className={classes.walletName}>\n                        <span>{name}</span>\n                        {verified ? <Icons.Verification size={18} /> : null}\n                        {onPendingClick ? <Icons.ArrowDrop /> : null}\n                    </Typography>\n                    <Typography className={classes.address}>\n                        <span>{formattedAddress}</span>\n                        {address ? <CopyButton size={14} className={classes.linkIcon} text={address} /> : null}\n                        <Link\n                            href={addressLink}\n                            target=\"_blank\"\n                            title=\"View on Explorer\"\n                            rel=\"noopener noreferrer\"\n                            onClick={(event) => {\n                                event.stopPropagation()\n                            }}\n                            className={classes.linkIcon}>\n                            <Icons.LinkOut size={14} className={classes.linkIcon} />\n                        </Link>\n                        {pending ? (\n                            <span\n                                className={classes.pending}\n                                onClick={(e) => {\n                                    e.stopPropagation()\n                                    onPendingClick?.()\n                                }}>\n                                {t.recent_transaction_pending()}\n                                <LoadingBase size={12} className={classes.progress} />\n                            </span>\n                        ) : null}\n                    </Typography>\n                </Box>\n            </Box>\n        )\n    },\n)\n","import { BigNumber } from 'bignumber.js'\nimport { noop } from 'lodash-es'\nimport { memo, useCallback, useMemo, useState } from 'react'\nimport { Icons } from '@masknet/icons'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { ActionButton, makeStyles, usePortalShadowRoot } from '@masknet/theme'\nimport { useChainContext, useFungibleToken, useNetworkContext, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { ApproveStateType, useERC20TokenApproveCallback } from '@masknet/web3-hooks-evm'\nimport { toFixed } from '@masknet/web3-shared-base'\nimport { useSmartPayConstants } from '@masknet/web3-shared-evm'\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, InputBase, Typography } from '@mui/material'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    paper: {\n        margin: 0,\n        maxWidth: 320,\n        background: theme.palette.maskColor.bottom,\n    },\n    title: {\n        textAlign: 'center',\n        fontSize: 16,\n        lineHeight: '20px',\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n    },\n    description: {\n        fontSize: 14,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.second,\n    },\n    actions: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(3),\n        rowGap: theme.spacing(2),\n    },\n}))\n\nexport interface ApproveMaskDialogProps {\n    open: boolean\n    handleClose: () => void\n}\nexport const ApproveMaskDialog = memo<ApproveMaskDialogProps>(({ open, handleClose }) => {\n    const sharedI18N = useSharedTrans()\n    const { classes } = useStyles()\n    const Others = useWeb3Others()\n    const [amount, setAmount] = useState('')\n    const { pluginID } = useNetworkContext()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    const maskAddress = Others.getMaskTokenAddress(chainId)\n    const { data: maskToken } = useFungibleToken(pluginID, maskAddress)\n    const { PAYMASTER_MASK_CONTRACT_ADDRESS } = useSmartPayConstants(chainId)\n\n    const [{ type: approveStateType }, transactionState, approveCallback] = useERC20TokenApproveCallback(\n        maskAddress ?? '',\n        maskToken ? toFixed(new BigNumber(amount).shiftedBy(maskToken.decimals ?? 0).integerValue()) : '',\n        PAYMASTER_MASK_CONTRACT_ADDRESS ?? '',\n        noop,\n        chainId,\n    )\n\n    const onApprove = useCallback(async () => {\n        if (approveStateType !== ApproveStateType.NOT_APPROVED) return\n        await approveCallback(true)\n    }, [approveStateType, transactionState, approveCallback])\n\n    const action = useMemo(() => {\n        if (approveStateType === ApproveStateType.UNKNOWN) {\n            return (\n                <ActionButton fullWidth variant=\"roundedContained\" disabled>\n                    {sharedI18N.wallet_transfer_error_amount_absence()}\n                </ActionButton>\n            )\n        }\n        if (approveStateType === ApproveStateType.FAILED) {\n            return (\n                <ActionButton fullWidth variant=\"roundedContained\" color=\"error\">\n                    {sharedI18N.wallet_load_retry({ symbol: 'MASK' })}\n                </ActionButton>\n            )\n        }\n        if (\n            approveStateType === ApproveStateType.NOT_APPROVED ||\n            transactionState.loading ||\n            approveStateType === ApproveStateType.UPDATING\n        ) {\n            return (\n                <ActionButton\n                    loading={transactionState.loading || approveStateType === ApproveStateType.UPDATING}\n                    fullWidth\n                    variant=\"roundedContained\"\n                    onClick={onApprove}>\n                    {sharedI18N.dialog_confirm()}\n                </ActionButton>\n            )\n        }\n        return (\n            <ActionButton fullWidth variant=\"roundedContained\" disabled>\n                {sharedI18N.dialog_confirm()}\n            </ActionButton>\n        )\n    }, [approveStateType, approveCallback, sharedI18N, transactionState, onApprove])\n\n    return usePortalShadowRoot((container) => (\n        <Dialog container={container} open={open} onClose={handleClose} classes={{ paper: classes.paper }}>\n            <DialogTitle sx={{ py: 3 }}>\n                <Typography className={classes.title}>{sharedI18N.approve_mask()}</Typography>\n            </DialogTitle>\n            <DialogContent>\n                <Typography className={classes.description}>{sharedI18N.approve_mask_description()}</Typography>\n                <Typography className={classes.description} marginTop={2}>\n                    {sharedI18N.approve_mask_question()}\n                </Typography>\n                <InputBase\n                    sx={{ mt: 3 }}\n                    fullWidth\n                    value={amount}\n                    onChange={(event) => setAmount(event.target.value)}\n                    endAdornment={\n                        <Typography display=\"flex\" alignItems=\"center\" columnGap={1} fontSize={15} lineHeight=\"20px\">\n                            <Icons.MaskBlue size={20} /> MASK\n                        </Typography>\n                    }\n                />\n            </DialogContent>\n            <DialogActions className={classes.actions}>\n                {action}\n                <Button fullWidth variant=\"roundedOutlined\" onClick={handleClose}>\n                    {sharedI18N.cancel()}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    ))\n})\n","import { SingletonModal } from '@masknet/shared-base'\nimport type { SelectProviderModalOpenProps, SelectProviderModalCloseProps } from './SelectProviderModal/index.js'\nimport type { WalletConnectQRCodeOpenProps } from './WalletConnectQRCodeModal/index.js'\nimport type { WalletRiskWarningModalOpenProps } from './WalletRiskWarningModal/index.js'\nimport type { ConnectWalletModalOpenProps, ConnectWalletModalCloseProps } from './ConnectWalletModal/index.js'\nimport type { LeavePageConfirmModalOpenProps } from './LeavePageConfirmModal/index.js'\nimport type {\n    ApplicationBoardModalOpenProps,\n    ApplicationBoardSettingsModalOpenProps,\n} from './ApplicationBoardModal/index.js'\nimport type { GasSettingModalOpenOrCloseProps } from './GasSettingModal/index.js'\nimport type { ConfirmModalCloseProps, ConfirmModalOpenProps } from './ConfirmModal/index.js'\nimport type { ConfirmDialogOpenProps } from './ConfirmDialog/index.js'\nimport type { TransactionConfirmModalOpenProps } from './TokenTransactionConfirmModal/index.js'\nimport type { SelectNonFungibleContractModalOpenProps } from './SelectNonFungibleContractModal/index.js'\nimport type {\n    SelectFungibleTokenModalOpenProps,\n    SelectFungibleTokenModalCloseProps,\n} from './SelectFungibleTokenModal/index.js'\nimport type {\n    SelectGasSettingsModalCloseProps,\n    SelectGasSettingsModalOpenProps,\n} from './SelectAdvancedSettingsDialog/index.js'\nimport type { AddCollectiblesModalCloseProps, AddCollectiblesModalOpenProps } from './AddCollectiblesModal/index.js'\nimport type { PersonaSelectPanelModalOpenProps } from './PersonaSelectPanelModal/index.js'\nimport type { ShareSelectNetworkModalOpenProps } from './ShareSelectNetwork/index.js'\n\nexport const WalletConnectQRCodeModal = new SingletonModal<WalletConnectQRCodeOpenProps>()\nexport const SelectProviderModal = new SingletonModal<SelectProviderModalOpenProps, SelectProviderModalCloseProps>()\nexport const WalletStatusModal = new SingletonModal()\nexport const WalletRiskWarningModal = new SingletonModal<WalletRiskWarningModalOpenProps>()\nexport const ConnectWalletModal = new SingletonModal<ConnectWalletModalOpenProps, ConnectWalletModalCloseProps>()\nexport const LeavePageConfirmModal = new SingletonModal<LeavePageConfirmModalOpenProps>()\nexport const ApplicationBoardModal = new SingletonModal<ApplicationBoardModalOpenProps>()\nexport const ApplicationBoardSettingsModal = new SingletonModal<ApplicationBoardSettingsModalOpenProps>()\nexport const GasSettingModal = new SingletonModal<GasSettingModalOpenOrCloseProps, GasSettingModalOpenOrCloseProps>()\nexport const TransactionConfirmModal = new SingletonModal<TransactionConfirmModalOpenProps>()\nexport const TransactionSnackbar = new SingletonModal()\nexport const ConfirmModal = new SingletonModal<ConfirmModalOpenProps, ConfirmModalCloseProps>()\nexport const ConfirmDialog = new SingletonModal<ConfirmDialogOpenProps, boolean>()\nexport const SelectNonFungibleContractModal = new SingletonModal<SelectNonFungibleContractModalOpenProps>()\nexport const SelectGasSettingsModal = new SingletonModal<\n    SelectGasSettingsModalOpenProps,\n    SelectGasSettingsModalCloseProps\n>()\nexport const AddCollectiblesModal = new SingletonModal<AddCollectiblesModalOpenProps, AddCollectiblesModalCloseProps>()\nexport const SelectFungibleTokenModal = new SingletonModal<\n    SelectFungibleTokenModalOpenProps,\n    SelectFungibleTokenModalCloseProps\n>()\n\nexport const PersonaSelectPanelModal = new SingletonModal<PersonaSelectPanelModalOpenProps>()\n\nexport const ShareSelectNetworkModal = new SingletonModal<ShareSelectNetworkModalOpenProps>()\n\nexport { ApplicationSettingTabs } from './ApplicationBoardModal/ApplicationBoardDialog.js'\n","import { Fragment } from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport { isZero, isLessThan } from '@masknet/web3-shared-base'\nimport { makeStyles } from '@masknet/theme'\n\nconst useStyles = makeStyles()((theme) => ({\n    balance: {\n        marginRight: theme.spacing(0.5),\n    },\n}))\n\nexport interface FormattedBalanceProps extends withClasses<'balance' | 'symbol'> {\n    value: BigNumber.Value | undefined\n    decimals?: number\n    significant?: number\n    symbol?: string\n    minimumBalance?: BigNumber.Value\n    formatter?: (value: BigNumber.Value, decimals?: number, significant?: number) => string\n}\n\nexport function FormattedBalance(props: FormattedBalanceProps) {\n    const { value, decimals, significant, symbol, minimumBalance, formatter = (value) => value } = props\n    const valueInt = new BigNumber(value ?? '0').toFixed(0)\n    let formatted = formatter(valueInt, decimals, significant)\n    if (minimumBalance && !isZero(formatted) && isLessThan(valueInt, minimumBalance)) {\n        // it's a BigNumber so it's ok\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\n        formatted = '<' + formatter(minimumBalance, decimals, significant).toString()\n    }\n    const { classes } = useStyles(undefined, { props })\n\n    if (symbol)\n        return (\n            <Fragment>\n                <span className={classes.balance}>{String(formatted)}</span>\n                <span className={classes?.symbol}>{symbol}</span>\n            </Fragment>\n        )\n    return <Fragment>{String(formatted)}</Fragment>\n}\n","import { Fragment } from 'react'\nimport type { BigNumber } from 'bignumber.js'\nimport { useCurrencyType, useFiatCurrencyRate } from '@masknet/web3-hooks-base'\nimport { CurrencyType, type FormatterCurrencyOptions } from '@masknet/web3-shared-base'\n\nexport interface FormattedCurrencyProps {\n    sign?: string\n    value?: BigNumber.Value\n    options?: FormatterCurrencyOptions\n    formatter?: (value: BigNumber.Value, sign?: string, options?: FormatterCurrencyOptions) => string\n}\n\nexport function FormattedCurrency({\n    value = 0,\n    sign,\n    options,\n    // it's a BigNumber so it's ok\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    formatter = (value, sign) => `${sign} ${value}`.trim(),\n}: FormattedCurrencyProps) {\n    const currentSign = useCurrencyType()\n    const { data: currentFiatCurrencyRate } = useFiatCurrencyRate()\n    const rate = options?.fiatCurrencyRate ?? (sign === CurrencyType.USD ? 1 : currentFiatCurrencyRate)\n\n    return (\n        <Fragment>\n            {formatter(value, rate === 1 ? CurrencyType.USD : sign ?? currentSign, {\n                ...options,\n                fiatCurrencyRate: rate,\n            })}\n        </Fragment>\n    )\n}\n","import {\n    type SyntheticEvent,\n    cloneElement,\n    isValidElement,\n    useCallback,\n    useState,\n    type MutableRefObject,\n    createElement,\n} from 'react'\nimport { useUpdate } from 'react-use'\nimport { Menu, type MenuProps } from '@mui/material'\nimport { makeStyles, ShadowRootMenu } from '@masknet/theme'\n\n/**\n * A util hooks for easier to use `<Menu>`s.\n *\n * If you need configuration, please use useMenuConfig\n */\n// ! Do not change signature of this. Change useMenuConfig instead.\nexport function useMenu(...elements: Array<JSX.Element | null>) {\n    return useMenuConfig(elements, {})\n}\n\nexport interface MenuConfigOptions extends Partial<MenuProps> {\n    anchorSibling?: boolean\n    useShadowRoot?: boolean\n}\n\nconst useStyles = makeStyles()((theme) => ({\n    menu: {\n        // TODO: replace hard code to theme\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 0px 20px rgba(255, 255, 255, 0.12)'\n                : '0px 4px 30px rgba(0, 0, 0, 0.1)',\n    },\n}))\n\nexport function useMenuConfig(\n    elements: Array<JSX.Element | null>,\n    config: MenuConfigOptions,\n    ref?: MutableRefObject<HTMLDivElement | null>,\n): [\n    menu: React.ReactNode,\n    openDialog: (anchorElOrEvent: HTMLElement | SyntheticEvent<HTMLElement>) => void,\n    closeDialog: () => void,\n    open: boolean,\n] {\n    const { classes } = useStyles()\n    const { anchorSibling = false, useShadowRoot = true, ...menuProps } = config\n    const [open, setOpen] = useState(false)\n    const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n    const close = () => {\n        setOpen(false)\n        setAnchorEl(null)\n    }\n    const update = useUpdate()\n    return [\n        createElement(\n            useShadowRoot ? ShadowRootMenu : Menu,\n            {\n                ...menuProps,\n                PaperProps: menuProps?.PaperProps,\n                classes: { paper: classes.menu, ...menuProps.classes },\n                MenuListProps: menuProps?.MenuListProps,\n                open,\n                anchorEl,\n                ref,\n                onClose: close,\n                onClick: close,\n                anchorOrigin: menuProps?.anchorOrigin,\n                transformOrigin: menuProps?.transformOrigin,\n                disableScrollLock: true,\n            },\n            elements?.map((element, key) =>\n                isValidElement<object>(element) ? cloneElement(element, { ...element.props, key }) : element,\n            ),\n        ),\n        useCallback((anchorElOrEvent: HTMLElement | SyntheticEvent<HTMLElement>) => {\n            let element: HTMLElement\n            if (anchorElOrEvent instanceof HTMLElement) {\n                element = anchorElOrEvent\n            } else {\n                element = anchorElOrEvent.currentTarget\n            }\n\n            // when the essential content of currentTarget would be closed over,\n            //  we can set the anchorEl with currentTarget's bottom sibling to avoid it.\n            const finalAnchor = anchorSibling ? (element.nextElementSibling as HTMLElement) ?? undefined : element\n            setAnchorEl(finalAnchor)\n            setOpen(true)\n            // HACK: it seems like anchor doesn't work correctly\n            // but a force repaint can solve the problem.\n            window.requestAnimationFrame(update)\n        }, []),\n        useCallback(() => {\n            setOpen(false)\n            setAnchorEl(null)\n        }, []),\n        open,\n    ]\n}\n","import { Menu } from '@mui/material'\nimport { createShadowRootForwardedComponent } from '../../ShadowRoot/index.js'\n\nexport const ShadowRootMenu = createShadowRootForwardedComponent(Menu)\nShadowRootMenu.displayName = 'ShadowRootTooltip'\n","import { useSubscription } from 'use-subscription'\nimport { UNDEFINED, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useCurrencyType<T extends NetworkPluginID>(pluginID?: T) {\n    const { Settings } = useWeb3State(pluginID)\n    return useSubscription(Settings?.currencyType ?? UNDEFINED)\n}\n","import { FiatCurrencyRate } from '@masknet/web3-providers'\nimport { CurrencyType } from '@masknet/web3-shared-base'\nimport { useQuery } from '@tanstack/react-query'\nimport { pick } from 'lodash-es'\nimport { useCurrencyType } from './useCurrencyType.js'\n\nexport function useFiatCurrencyRate() {\n    const fiatCurrencyType = useCurrencyType()\n    const currencyType = fiatCurrencyType?.toUpperCase() || CurrencyType.USD\n\n    return useQuery({\n        queryKey: ['@@fiat-currency-rates'],\n        queryFn: async () => {\n            const allRates = await FiatCurrencyRate.getRates()\n            // Pick what we need only to reduce memory cost.\n            return pick(allRates, Object.keys(CurrencyType))\n        },\n        select: (data) => data[currencyType],\n    })\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport { getRegisteredWeb3Networks } from '@masknet/web3-providers'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext, useNetworkContext } from './useContext.js'\n\n/**\n * Get built in declared network descriptor\n * @param expectedPluginID\n * @param expectedChainIdOrNetworkTypeOrID\n * @returns\n */\nexport function useNetworkDescriptor<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n    expectedChainIdOrNetworkTypeOrID?: string | number,\n): Web3Helper.NetworkDescriptorScope<S, T> | undefined {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    const { networkType } = useChainContext()\n\n    return getRegisteredWeb3Networks(pluginID).find((x) =>\n        [x.chainId, x.type, x.ID].includes(expectedChainIdOrNetworkTypeOrID ?? networkType ?? ''),\n    )\n}\n","import { Contract } from '@masknet/web3-providers'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from '@masknet/web3-hooks-base'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useERC20TokenAllowance(\n    address?: string,\n    spender?: string,\n    options?: ConnectionOptions<NetworkPluginID.PLUGIN_EVM>,\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>({\n        account: options?.account,\n        chainId: options?.chainId,\n    })\n\n    return useQuery({\n        queryKey: ['erc20-allowance', address, account, spender],\n        queryFn: async () => {\n            if (!account || !address || !spender) return '0'\n            return Contract.getERC20Contract(address, { chainId })?.methods.allowance(account, spender).call({\n                from: account,\n            })\n        },\n        refetchInterval: 30 * 1000,\n    })\n}\n","import { useCallback, useMemo } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { Web3 } from '@masknet/web3-providers'\nimport { isLessThan, toFixed, isZero } from '@masknet/web3-shared-base'\nimport type { ChainId } from '@masknet/web3-shared-evm'\nimport { useChainContext, useFungibleTokenBalance } from '@masknet/web3-hooks-base'\nimport { useERC20TokenAllowance } from './useERC20TokenAllowance.js'\n\nconst MaxUint256 = toFixed('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n\nexport enum ApproveStateType {\n    UNKNOWN = 0,\n    NOT_APPROVED = 1,\n    UPDATING = 2,\n    PENDING = 3,\n    APPROVED = 4,\n    FAILED = 5,\n}\n\nexport function useERC20TokenApproveCallback(\n    address: string,\n    amount: string,\n    spender: string,\n    callback?: () => void,\n    tokenChainId?: ChainId,\n) {\n    const { account, chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    // read the approved information from the chain\n    const {\n        data: balance = '0',\n        isLoading: loadingBalance,\n        error: errorBalance,\n        refetch: revalidateBalance,\n    } = useFungibleTokenBalance(NetworkPluginID.PLUGIN_EVM, address, { chainId: tokenChainId })\n    const {\n        data: allowance = '0',\n        isLoading: loadingAllowance,\n        error: errorAllowance,\n        refetch: revalidateAllowance,\n    } = useERC20TokenAllowance(address, spender, { chainId: tokenChainId })\n\n    // the computed approve state\n    const approveStateType = useMemo(() => {\n        if (!amount || !spender) return ApproveStateType.UNKNOWN\n        if (loadingBalance || loadingAllowance) return ApproveStateType.UPDATING\n        if (errorBalance || errorAllowance) return ApproveStateType.FAILED\n        return isLessThan(allowance, amount) || (allowance === amount && isZero(amount))\n            ? ApproveStateType.NOT_APPROVED\n            : ApproveStateType.APPROVED\n    }, [amount, spender, balance, allowance, errorBalance, errorAllowance, loadingAllowance, loadingBalance])\n\n    const [state, approveCallback] = useAsyncFn(\n        async (useExact = false, isRevoke = false) => {\n            if (approveStateType === ApproveStateType.UNKNOWN || !amount || !spender) {\n                return\n            }\n            // error: failed to approve token\n            if (approveStateType !== ApproveStateType.NOT_APPROVED && !isRevoke) {\n                return\n            }\n\n            if (tokenChainId !== chainId) {\n                await Web3.switchChain?.(tokenChainId ?? chainId)\n            }\n\n            const hash = await Web3.approveFungibleToken(address, spender, useExact ? amount : MaxUint256, {\n                chainId: tokenChainId,\n            })\n\n            const receipt = await Web3.confirmTransaction(hash, {\n                chainId: tokenChainId,\n                signal: AbortSignal.timeout(5 * 60 * 1000),\n            })\n\n            if (receipt) {\n                callback?.()\n                revalidateBalance()\n                revalidateAllowance()\n            }\n        },\n        [account, amount, spender, address, approveStateType, tokenChainId, chainId],\n    )\n\n    const resetCallback = useCallback(() => {\n        revalidateBalance()\n        revalidateAllowance()\n    }, [revalidateBalance])\n\n    return [\n        {\n            type: approveStateType,\n            allowance,\n            amount,\n            spender,\n            balance,\n        },\n        { ...state, loading: loadingAllowance || loadingBalance || state.loading, loadingApprove: state.loading },\n        approveCallback,\n        resetCallback,\n    ] as const\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\n\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","'use strict'\n\nmodule.exports = function encodeUtf8 (input) {\n  var result = []\n  var size = input.length\n\n  for (var index = 0; index < size; index++) {\n    var point = input.charCodeAt(index)\n\n    if (point >= 0xD800 && point <= 0xDBFF && size > index + 1) {\n      var second = input.charCodeAt(index + 1)\n\n      if (second >= 0xDC00 && second <= 0xDFFF) {\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        point = (point - 0xD800) * 0x400 + second - 0xDC00 + 0x10000\n        index += 1\n      }\n    }\n\n    // US-ASCII\n    if (point < 0x80) {\n      result.push(point)\n      continue\n    }\n\n    // 2-byte UTF-8\n    if (point < 0x800) {\n      result.push((point >> 6) | 192)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 3-byte UTF-8\n    if (point < 0xD800 || (point >= 0xE000 && point < 0x10000)) {\n      result.push((point >> 12) | 224)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 4-byte UTF-8\n    if (point >= 0x10000 && point <= 0x10FFFF) {\n      result.push((point >> 18) | 240)\n      result.push(((point >> 12) & 63) | 128)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // Invalid character\n    result.push(0xEF, 0xBF, 0xBD)\n  }\n\n  return new Uint8Array(result).buffer\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use client';\nimport * as React from 'react';\n\nconst IsRestoringContext = /*#__PURE__*/React.createContext(false);\nconst useIsRestoring = () => React.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\nexport { IsRestoringProvider, useIsRestoring };\n//# sourceMappingURL=isRestoring.mjs.map\n","import React from 'react';\n\nfunction createContainer(useHook) {\n  var Context = React.createContext(null);\n\n  function Provider(props) {\n    var value = useHook(props.initialState);\n    return React.createElement(Context.Provider, {\n      value: value\n    }, props.children);\n  }\n\n  function useContainer() {\n    var value = React.useContext(Context);\n\n    if (value === null) {\n      throw new Error(\"Component must be wrapped with <Container.Provider>\");\n    }\n\n    return value;\n  }\n\n  return {\n    Provider: Provider,\n    useContainer: useContainer\n  };\n}\nfunction useContainer(container) {\n  return container.useContainer();\n}\n\nexport { createContainer, useContainer };\n//# sourceMappingURL=unstated-next.mjs.map\n"],"names":["allPersonas","currentPersona","queryPersonaAvatar","querySocialIdentity","fetchJSON","queryPersonaByProfile","openDashboard","openPopupWindow","signWithPersona","hasPaymentPassword","createPersona","setCurrentPersonaIdentifier","attachProfile","setPluginMinimalModeEnabled","hasHostPermission","requestHostPermission","__setUIContext__","value","lastRecognizedProfile","currentVisitingProfile","currentNextIDPlatform","currentPersonaIdentifier","getPostURL","share","getUserIdentity","getPostIdFromNewPostToast","postMessage","getSearchedKeyword","connectPersona","__setSiteAdaptorContext__","useSubscription","useAllPersonas","UNDEFINED","useLastRecognizedIdentity","WebExtensionMessage","serializer","DOMAIN_RPC","Symbol","getPluginMessage","pluginID","type","domain","cache","has","get","messageCenter","events","serialization","set","__workaround__replaceImplementationOfCreatePluginMessage__","newImpl","Map","PLUGIN_ID","webpackHot","accept","PluginSmartPayMessages","useCurrentPersonaInformation","current","personas","find","x","identifier","rawPublicKey","intersectionWith","first","useAsync","NextIDPlatform","useWallets","NextIDProof","isSameAddress","isValidAddress","useQueryQualifications","currentIdentity","wallets","userId","length","isOwner","hasVerifiedPersona","isVerifiedPersona","queryIsBound","publicKeyAsHex","toLowerCase","Twitter","signPersona","response","queryAllExistedBindingsByPlatform","verifiedPersona","map","persona","a","b","verifiedWallets","identity","address","flatMap","proofs","filter","y","platform","Ethereum","signWallet","memo","useCallback","useEffect","Trans","ApplicationEntry","LeavePageConfirmModal","PersonaSelectPanelModal","useSharedTrans","CrossIsolationMessages","DashboardRoutes","PluginID","useRemoteControlledDialog","Icons","SmartPayEntry","props","t","setDialog","setSmartPayDialog","smartPayDialogEvent","loading","handleClick","owner","open","hasAccounts","info","target","url","SignUpPersona","text","create_persona_hint","title","create_persona_title","actionHint","create_persona_action","position","enableVerify","finishTarget","SmartPay","applicationDialogEvent","on","selectedPersona","icon","size","ns","i18nKey","onClick","useState","createContainer","useSmartPayContext","signer","setSigner","SmartPayContext","createElement","useMemo","useTranslation","createProxy","initValue","define","key","Object","defineProperty","container","configurable","__proto__","Proxy","_","undefined","getPrototypeOf","setPrototypeOf","v","getOwnPropertyDescriptor","useSmartPayTrans","bind","createComponent","shouldUnescape","SmartPayTrans","useRef","useAsyncFn","getUnixTime","Typography","PopupRoutes","ProofType","SignType","useChainContext","useWeb3State","ProviderType","useCustomSnackbar","Web3","useDeploy","signAccount","contractAccount","nonce","onSuccess","snackbarKeyRef","TransactionWatcher","Transaction","lastRecognizedIdentity","chainId","showSnackbar","closeSnackbar","showSingletonSnackbar","options","closeDialog","account","providerType","MaskWallet","signal","AbortSignal","timeout","hasPassword","SetPaymentPassword","funded","deployed","hash","deploy","result","confirmTransaction","status","transactionHash","payload","JSON","stringify","twitterHandle","ts","Date","ownerAddress","signature","create_smart_pay_wallet","message","waiting_for_user_signature","processing","variant","Message","signMessage","publicKey","fund","Persona","EOA","Error","deployHash","deployResult","removeTransaction","error","transaction_rejected","user_cancelled_the_transaction","network_error","useManagers","personaManagers","walletManagers","ManagerAccountType","Wallet","ActionButton","makeStyles","usePortalShadowRoot","formatEthereumAddress","Dialog","DialogActions","DialogContent","useStyles","theme","paper","margin","width","backgroundColor","palette","maskColor","bottom","content","padding","display","flexDirection","alignItems","color","success","marginTop","marginBottom","fontSize","fontWeight","lineHeight","textAlign","description","second","CreateSuccessDialog","onClose","classes","reason","className","FillSuccess","create_successfully","create_successfully_tips","sx","create_successfully_tips_owner","p","fullWidth","done","CopyButton","formatPersonaFingerprint","Box","Button","Popover","Radio","background","spacing","boxSizing","boxShadow","mode","borderRadius","maxHeight","border","backgroundClip","main","list","rowGap","item","justifyContent","columnGap","footer","desc","ManagePopover","anchorEl","onSelect","selectedAddress","disableScrollLock","PaperProps","style","minWidth","clientWidth","anchorOrigin","vertical","horizontal","disableRestoreFocus","index","name","nickname","MaskBlue","checked","py","create_a_new_persona_title","create_a_new_persona_desc","height","create","wallet","create_a_new_wallet_title","create_a_new_wallet_desc","WalletStartUp","card","URL","toString","backgroundSize","backgroundRepeat","tips","publicMain","wordBreak","SmartPayBanner","children","useBoolean","useUpdateEffect","useNavigate","alpha","ImageIcon","PersonaAction","WalletDescription","NetworkPluginID","LoadingBase","useNetworkDescriptor","useProviderDescriptor","ExplorerResolver","SmartPayOwner","RoutePaths","walletDescription","backdropFilter","badge","right","common","white","select","cursor","input","selectTitle","maskIcon","arrow","bg","overflowY","stateBar","shadowBottom","walletStatus","shadow","popup","minHeight","bottomFixed","Deploy","navigate","successDialogOpen","toggle","setAnchorEl","manager","setManager","useContainer","providerDescriptor","PLUGIN_EVM","polygonDescriptor","avatar","queryContractLoading","accounts","getAccountsByOwner","creator","deployLoading","handleDeploy","handleSelectManager","firstPersona","firstWallet","some","white_list_tips","personas_description","onMouseDown","event","stopPropagation","preventDefault","currentTarget","setup_smart_pay_managed_account","mt","ArrowDrop","deploy_tips_title","component","pl","deploy_tips_description_one","deploy_tips_description_two","deploy_tips_description_three","deploy_tips_description_four","disabled","pending","providerIcon","networkIcon","iconFilterColor","formattedAddress","addressLink","addWallet","Main","Link","dialogContent","highlight","InEligibilityTips","ineligibility_tips","eligibility_description","components","href","rel","Discord","eligibility_query","CurrencyType","getTokenUSDValue","Number","parseFloat","USD","useAsyncRetry","Icon","SmartPayFunder","maxWidth","AddSmartPayPopover","sharedI18N","currentProfile","retry","getRemainFrequency","qualifications","handleCreate","state","canBack","transformOrigin","add_smart_pay_wallet","logoURL","remain_times_tips","count","useAccount","useNetwork","useWeb3Connection","fontSIze","changeOwner","AccountsManagerPopover","network","Network","connection","ownerInfo","handleChangeOwner","connect","silent","switchNetwork","ID","ChangeOwner","managed_accounts","my","current_manage_account","change_owner","isNaN","sum","TokenIcon","FormattedBalance","useMenuConfig","ApproveMaskDialog","FormattedCurrency","ECKeyIdentifier","ShadowRootTooltip","useFungibleAssets","useFungibleToken","useSmartPayConstants","List","ListItem","ListItemText","formatBalance","formatCurrency","isLessThan","toFixed","Others","useERC20TokenAllowance","dialogActions","secondaryBottom","marginLeft","modalTitleBg","paddingTop","overflow","listItem","balance","maskGasTip","linkIcon","menu","menuPaper","SmartPayContent","approveDialogOpen","setApproveDialogOpen","addAnchorEl","setAddAnchorEl","manageAnchorEl","setManageAnchorEl","contractAccounts","setReceiveDialog","receiveDialogEvent","openDialog","openSwapDialog","swapDialogEvent","smartPayDialogOpen","setAccount","maskAddress","getMaskTokenAddress","data","assets","refetch","refreshAssets","maskToken","PAYMASTER_MASK_CONTRACT_ADDRESS","allowance","availableBalanceTooLow","decimals","values","refreshRemainFrequency","openMenu","explorerResolver","e","LinkOut","MenuListProps","connectToCurrent","from","unwrapOr","openLuckDropLoading","handleLuckDropClick","redpacketDialogEvent","sendToLocal","source","openSwapLoading","handleSwapClick","openSendLoading","handleSendClick","Contacts","selectedToken","handleReceiveClick","formatter","top","KeySquare","Add","dense","asset","token","symbol","allow_mask_as_gas_token_description","remain_mask_tips","placement","ml","GasStation","marginRight","allow_mask_as_gas_token","significant","handleClose","startIcon","RedPacket","lucky_drop","SwapColorful","swap","SendColorful","send","ReceiveColorful","receive","compact","InjectedDialog","SmartPayBundler","matchPath","Route","Routes","useLocation","isDeployPage","RouterDialog","pathname","Boolean","smartPayDescriptionDialogEvent","ev","openOfCross","closeOfCross","queryVerifyLoading","getSupportedChainId","getAccountsByOwners","verified","verify","InEligibility","smart_pay_wallet_deployment","smart_pay_wallet","__plugin_name","titleTail","Questions","path","element","MemoryRouter","SmartPayDialog","entries","initialEntries","initialIndex","Provider","QRCode","Close","DialogTitle","IconButton","backgroundImage","warning","danger","InjectReceiveDialog","setAddress","setName","ReceiveDialog","gridTemplateColumns","whiteSpace","disableRipple","chainResolver","chainPrefix","canvasProps","scan_address_to_payment","can_only_receive_polygon_assets","strong","InjectSmartPayDescriptionDialog","SmartPayDescriptionDialog","what_is_smart_pay","what_is_smart_pay_title","smart_pay_description","setup_smart_pay_title","setup_smart_pay_one","setup_smart_pay_two","erc_4337_features_title","erc_4337_features_one","erc_4337_features_two","erc_4337_features_three","erc_4337_features_four","DefaultWeb3ContextProvider","base","site","GlobalInjection","SmartPayGlobalInjection","ApplicationEntries","RenderEntryComponent","ApplicationEntryID","appBoardSortingDefaultPriority","marketListSortingPriority","category","v4","uuid","onUpdateByRemote","tabType","HOOK_ID","setOpen","_ev","hookId","timer","onUpdateByLocal","timer_","clearTimeout","setTimeout","sendToVisiblePages","defer","delay","Emitter","SingletonModal","constructor","close","abort","openAndWaitForClose","emitter","onOpen","onAbort","dispatchPeek","dispatchOpen","dispatchClose","dispatchAbort","register","ref","emit","peek","console","warn","Promise","resolve","reject","SingletonModalQueued","opened","tasks","cleanup","push","d","shift","Identifier","fingerprint","slice","Math","max","MAX_PERSONA_LIMIT","MAX_PERSONA_NAME_LENGTH","formatPersonaName","isSameIdentity","identities","reduce","previousValue","T2","T1","i1IdentifierText","toText","i2IdentifierText","isSamePersona","isSameProfile","profiles","RelationFavor","COLLECTED","UNCOLLECTED","DEPRECATED","PlatformAvatar","personaKey","third","div","PersonaImageIcon","img","src","root","alignSelf","mainIcon","badgeIcon","badgeSize","inverse","cx","isBorderColorNotDefault","names","Masks","qr","blue","CACHE_SCOPE","extDecoration","setError","image","toCanvas","err","remove","dataURL","toDataURL","again","span","canvas","scope","sessionStorage","getItem","setItem","removeItem","badgeIconBorderColor","WalletIcon","walletName","gap","progress","onPendingClick","Verification","recent_transaction_pending","BigNumber","noop","useNetworkContext","useWeb3Others","ApproveStateType","useERC20TokenApproveCallback","InputBase","actions","amount","setAmount","approveStateType","transactionState","approveCallback","shiftedBy","integerValue","onApprove","NOT_APPROVED","action","UNKNOWN","wallet_transfer_error_amount_absence","FAILED","wallet_load_retry","UPDATING","dialog_confirm","approve_mask","approve_mask_description","approve_mask_question","onChange","endAdornment","cancel","WalletConnectQRCodeModal","SelectProviderModal","WalletStatusModal","WalletRiskWarningModal","ConnectWalletModal","ApplicationBoardModal","ApplicationBoardSettingsModal","GasSettingModal","TransactionConfirmModal","TransactionSnackbar","ConfirmModal","ConfirmDialog","SelectNonFungibleContractModal","SelectGasSettingsModal","AddCollectiblesModal","SelectFungibleTokenModal","ShareSelectNetworkModal","ApplicationSettingTabs","Fragment","isZero","minimumBalance","valueInt","formatted","String","useCurrencyType","useFiatCurrencyRate","sign","trim","currentSign","currentFiatCurrencyRate","rate","fiatCurrencyRate","cloneElement","isValidElement","useUpdate","Menu","ShadowRootMenu","useMenu","elements","config","anchorSibling","useShadowRoot","menuProps","update","anchorElOrEvent","HTMLElement","finalAnchor","nextElementSibling","window","requestAnimationFrame","createShadowRootForwardedComponent","displayName","Settings","currencyType","FiatCurrencyRate","useQuery","pick","fiatCurrencyType","toUpperCase","queryKey","queryFn","allRates","getRates","keys","getRegisteredWeb3Networks","expectedPluginID","expectedChainIdOrNetworkTypeOrID","networkType","includes","Contract","spender","getERC20Contract","methods","call","refetchInterval","useFungibleTokenBalance","MaxUint256","PENDING","APPROVED","callback","tokenChainId","isLoading","loadingBalance","errorBalance","revalidateBalance","loadingAllowance","errorAllowance","revalidateAllowance","useExact","isRevoke","switchChain","approveFungibleToken","receipt","resetCallback","loadingApprove"],"sourceRoot":"","x_google_ignoreList":[49,50,51,52,53,54,55]}