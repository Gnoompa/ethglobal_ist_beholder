{"version":3,"file":"bundled/chunk.9983.js","mappings":"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","sources":["webpack://mask-network/./packages/plugin-infra/src/dom/context.ts","webpack://mask-network/./packages/plugin-infra/src/manager/extension-page.ts","webpack://mask-network/./packages/plugin-infra/src/manager/site-adaptor.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useCurrentVisitingIdentity.ts","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/useLastRecognizedIdentity.ts","webpack://mask-network/./packages/plugin-infra/src/utils/message.ts","webpack://mask-network/./packages/shared/src/UI/components/AssetPreviewer/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/FungibleTokenInput/UI.tsx","webpack://mask-network/./packages/shared/src/UI/components/FungibleTokenInput/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/Image/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/LoadingStatus/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/NetworkTab/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/SelectGasSettingsToolbar/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/Context.tsx","webpack://mask-network/./packages/shared/src/UI/components/SettingsBoard/types/index.ts","webpack://mask-network/./packages/shared/src/UI/components/TokenValue/index.tsx","webpack://mask-network/./packages/shared/src/UI/contexts/components/ApproveMaskDialog.tsx","webpack://mask-network/./packages/theme/src/Components/RadioIndicator/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useBeat.ts","webpack://mask-network/./packages/web3-hooks/base/src/useFungibleTokenPrice.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNativeToken.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNativeTokenAddress.ts","webpack://mask-network/./packages/web3-hooks/base/src/useNetwork.ts","webpack://mask-network/./packages/web3-shared/base/src/helpers/formatCurrency.ts","webpack://mask-network/./node_modules/.pnpm/unstated-next@1.1.0/node_modules/unstated-next/dist/unstated-next.mjs"],"sourcesContent":["// This file will be virtualized in the future.\n// Currently all plugins access the same value, but we can virtualize them in the future.\n\nimport type {\n    DashboardRoutes,\n    ECKeyIdentifier,\n    NextIDPlatform,\n    PersonaIdentifier,\n    PersonaInformation,\n    PopupRoutes,\n    PopupRoutesParamsMap,\n    ProfileIdentifier,\n    SignType,\n    SocialIdentity,\n} from '@masknet/shared-base'\nimport type { Subscription } from 'use-subscription'\nimport type { IdentityResolved } from '../types.js'\nimport type { LinkedProfileDetails } from '@masknet/public-api'\n\nexport interface __UIContext__ {\n    allPersonas: Subscription<readonly PersonaInformation[]>\n    currentPersona: Subscription<PersonaIdentifier | undefined>\n    queryPersonaAvatar(\n        identifiers: readonly PersonaIdentifier[],\n    ): Promise<Map<ProfileIdentifier | PersonaIdentifier, string | undefined>>\n    queryPersonaAvatar(identifiers: undefined | PersonaIdentifier): Promise<string | undefined>\n    querySocialIdentity: (\n        platform: NextIDPlatform,\n        identity: IdentityResolved | undefined,\n    ) => Promise<SocialIdentity | undefined>\n    // DO NOT add <T> to this function, you do not test if it is T right?\n    // (e.g. receive a function to check it validate: (x: unknown) => x is T)\n    // fetchJSON<T>(validate: (x: unknown) => x is T, input: RequestInfo | URL, init?: RequestInit): Promise<T>\n    fetchJSON(input: RequestInfo | URL, init?: RequestInit): Promise<unknown>\n    queryPersonaByProfile: (id: ProfileIdentifier) => Promise<PersonaInformation | undefined>\n    /** Open Dashboard with a new window */\n    openDashboard(route?: DashboardRoutes, search?: string): Promise<void>\n    /** Open popup window */\n    openPopupWindow<T extends PopupRoutes>(\n        route: T,\n        params: T extends keyof PopupRoutesParamsMap ? PopupRoutesParamsMap[T] : undefined,\n        evenWhenWalletLocked?: boolean,\n    ): Promise<void>\n    /** Sign a message with persona (w or w/o popups) */\n    signWithPersona(type: SignType, message: unknown, identifier?: ECKeyIdentifier, silent?: boolean): Promise<string>\n    hasPaymentPassword(): Promise<boolean>\n    createPersona: () => void\n    setCurrentPersonaIdentifier: ((x?: PersonaIdentifier) => Promise<void>) | undefined\n    attachProfile:\n        | ((\n              source: ProfileIdentifier,\n              target: ProfileIdentifier | PersonaIdentifier,\n              data: LinkedProfileDetails,\n          ) => Promise<void>)\n        | undefined\n    setPluginMinimalModeEnabled: ((id: string, enabled: boolean) => Promise<void>) | undefined\n    hasHostPermission: ((origins: readonly string[]) => Promise<boolean>) | undefined\n    requestHostPermission: ((origins: readonly string[]) => Promise<boolean>) | undefined\n}\nexport let allPersonas: __UIContext__['allPersonas']\nexport let currentPersona: __UIContext__['currentPersona']\nexport let queryPersonaAvatar: __UIContext__['queryPersonaAvatar']\nexport let querySocialIdentity: __UIContext__['querySocialIdentity']\nexport let fetchJSON: __UIContext__['fetchJSON']\nexport let queryPersonaByProfile: __UIContext__['queryPersonaByProfile']\nexport let openDashboard: __UIContext__['openDashboard']\nexport let openPopupWindow: __UIContext__['openPopupWindow']\nexport let signWithPersona: __UIContext__['signWithPersona']\nexport let hasPaymentPassword: __UIContext__['hasPaymentPassword']\nexport let createPersona: __UIContext__['createPersona']\nexport let setCurrentPersonaIdentifier: __UIContext__['setCurrentPersonaIdentifier']\nexport let attachProfile: __UIContext__['attachProfile']\nexport let setPluginMinimalModeEnabled: __UIContext__['setPluginMinimalModeEnabled']\nexport let hasHostPermission: __UIContext__['hasHostPermission']\nexport let requestHostPermission: __UIContext__['requestHostPermission']\n\nexport function __setUIContext__(value: __UIContext__) {\n    ;({\n        allPersonas,\n        currentPersona,\n        queryPersonaAvatar,\n        querySocialIdentity,\n        fetchJSON,\n        queryPersonaByProfile,\n        openDashboard,\n        openPopupWindow,\n        signWithPersona,\n        hasPaymentPassword,\n        createPersona,\n        setCurrentPersonaIdentifier,\n        attachProfile,\n        setPluginMinimalModeEnabled,\n        hasHostPermission,\n        requestHostPermission,\n    } = value)\n}\n","import { isEqual } from 'lodash-es'\nimport { ALL_EVENTS } from '@servie/events'\nimport { ValueRefWithReady } from '@masknet/shared-base'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { createManager } from './manage.js'\nimport type { Plugin } from '../types.js'\n\nconst { activated, startDaemon, events, minimalMode } = createManager(\n    (def) => def.ExtensionPage,\n    createManager.NoManagedContext,\n)\n\nconst activatedSub = new ValueRefWithReady<Plugin.ExtensionPage.Definition[]>([], isEqual)\nevents.on(ALL_EVENTS, () => (activatedSub.value = [...activated.plugins]))\n\nconst minimalModeSub = new ValueRefWithReady<string[]>([], isEqual)\nevents.on('minimalModeChanged', () => (minimalModeSub.value = [...minimalMode]))\n\nexport function useIsMinimalModeExtensionPage(pluginID: string) {\n    return useValueRef(minimalModeSub).includes(pluginID)\n}\n\nexport function useActivatedPluginsExtensionPage() {\n    return useValueRef(activatedSub)\n}\n\nexport function useActivatedPluginExtensionPage(pluginID: string) {\n    const plugins = useValueRef(activatedSub)\n    return plugins.find((x) => x.ID === pluginID)\n}\n\nexport function startPluginHostExtensionPage(\n    host: Plugin.__Host.Host<Plugin.ExtensionPage.Definition, Plugin.ExtensionPage.ExtensionPageContext>,\n) {\n    startDaemon(host)\n}\n","import { useMemo } from 'react'\nimport { isEqual } from 'lodash-es'\nimport { unreachable } from '@masknet/kit'\nimport { useValueRef } from '@masknet/shared-base-ui'\nimport { type EnhanceableSite, ValueRefWithReady } from '@masknet/shared-base'\nimport { createManager } from './manage.js'\nimport { getPluginDefine } from './store.js'\nimport type { Plugin } from '../types.js'\n\nconst { events, activated, startDaemon, minimalMode } = createManager(\n    (def) => def.SiteAdaptor,\n    createManager.NoManagedContext,\n)\nconst activatedSub = new ValueRefWithReady<Plugin.SiteAdaptor.Definition[]>([], isEqual)\nevents.on('activateChanged', () => (activatedSub.value = [...activated.plugins]))\n\nconst minimalModeSub = new ValueRefWithReady<string[]>([], isEqual)\nevents.on('minimalModeChanged', () => (minimalModeSub.value = [...minimalMode]))\n\nexport function useActivatedPluginsSiteAdaptor(minimalModeEqualsTo: 'any' | boolean) {\n    const minimalMode = useValueRef(minimalModeSub)\n    const result = useValueRef(activatedSub)\n    return useMemo(() => {\n        if (minimalModeEqualsTo === 'any') return result\n        else if (minimalModeEqualsTo === true) return result.filter((x) => minimalMode.includes(x.ID))\n        else if (minimalModeEqualsTo === false) return result.filter((x) => !minimalMode.includes(x.ID))\n        unreachable(minimalModeEqualsTo)\n    }, [result, minimalMode, minimalModeEqualsTo])\n}\nuseActivatedPluginsSiteAdaptor.visibility = {\n    useMinimalMode: useActivatedPluginsSiteAdaptor.bind(null, true),\n    useNotMinimalMode: useActivatedPluginsSiteAdaptor.bind(null, false),\n    useAnyMode: useActivatedPluginsSiteAdaptor.bind(null, 'any'),\n}\n\nexport function useIsMinimalMode(pluginID: string) {\n    return useValueRef(minimalModeSub).includes(pluginID)\n}\n\n/**\n *\n * @param pluginID Get the plugin ID\n * @param visibility Should invisible plugin included?\n * @returns\n */\nexport function useActivatedPluginSiteAdaptor(pluginID: string, minimalModeEqualsTo: 'any' | boolean) {\n    const plugins = useActivatedPluginsSiteAdaptor(minimalModeEqualsTo)\n    const minimalMode = useValueRef(minimalModeSub)\n\n    return useMemo(() => {\n        const result = plugins.find((x) => x.ID === pluginID)\n        if (!result) return result\n        if (minimalModeEqualsTo === 'any') return result\n        else if (minimalModeEqualsTo === true) {\n            if (minimalMode.includes(result.ID)) return result\n            return undefined\n        } else if (minimalModeEqualsTo === false) {\n            if (minimalMode.includes(result.ID)) return undefined\n            return result\n        }\n        unreachable(minimalModeEqualsTo)\n    }, [pluginID, plugins, minimalMode, minimalModeEqualsTo])\n}\n\nexport function startPluginSiteAdaptor(\n    currentNetwork: EnhanceableSite,\n    host: Plugin.__Host.Host<Plugin.SiteAdaptor.Definition, Plugin.SiteAdaptor.SiteAdaptorContext>,\n) {\n    startDaemon(host, (id) => {\n        const def = getPluginDefine(id)\n        if (!def) return false\n\n        const status = def.enableRequirement.supports.sites[currentNetwork]\n        if (def.enableRequirement.supports.type === 'opt-in' && status !== true) return false\n        if (def.enableRequirement.supports.type === 'opt-out' && status === true) return false\n        return true\n    })\n}\n","import { useSubscription } from 'use-subscription'\nimport { currentVisitingProfile } from './context.js'\n\nexport function useCurrentVisitingIdentity() {\n    return useSubscription(currentVisitingProfile)\n}\n","import { useSubscription } from 'use-subscription'\nimport { UNDEFINED } from '@masknet/shared-base'\nimport { lastRecognizedProfile } from './context.js'\n\nexport function useLastRecognizedIdentity() {\n    return useSubscription(lastRecognizedProfile ?? UNDEFINED)\n}\n","import { WebExtensionMessage } from '@dimensiondev/holoflows-kit'\nimport type { PluginMessageEmitterItem } from '@masknet/plugin-infra'\nimport { serializer } from '@masknet/shared-base'\n\n/** @internal */\nexport const DOMAIN_RPC = Symbol('create RPC instead of normal message')\n/**\n * Create a plugin message emitter\n * @param pluginID The plugin ID\n *\n * @example\n * export const MyPluginMessage = getPluginMessage(PLUGIN_ID)\n */\nexport let getPluginMessage = <T>(pluginID: string, type?: typeof DOMAIN_RPC): PluginMessageEmitter<T> => {\n    const domain = (type === DOMAIN_RPC ? '@plugin-rpc/' : '@plugin/') + pluginID\n    if (cache.has(domain)) return cache.get(domain) as any\n\n    const messageCenter = new WebExtensionMessage<T>({ domain })\n    const events = messageCenter.events\n    messageCenter.serialization = serializer\n    cache.set(domain, events)\n    return events\n}\n\nexport function __workaround__replaceImplementationOfCreatePluginMessage__(\n    newImpl: (pluginID: string) => PluginMessageEmitter<any>,\n) {\n    getPluginMessage = newImpl\n}\nexport type PluginMessageEmitter<T> = { readonly [key in keyof T]: PluginMessageEmitterItem<T[key]> }\nconst cache = new Map<string, PluginMessageEmitter<unknown>>()\n\n// TODO: this type should be defined here, not shared-base\nexport type { PluginMessageEmitterItem } from '@masknet/shared-base'\n","import { makeStyles } from '@masknet/theme'\nimport { Image } from '../Image/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        position: 'relative',\n    },\n    fallbackImage: {\n        height: 64,\n        width: 64,\n    },\n    icon: {\n        position: 'absolute',\n        top: theme.spacing(0.5),\n        left: theme.spacing(0.5),\n    },\n}))\n\nexport interface AssetPreviewerProps extends withClasses<'root' | 'fallbackImage' | 'container'> {\n    url?: string\n    fallbackImage?: JSX.Element | string\n    icon?: React.ReactNode\n}\n\nexport function AssetPreviewer(props: AssetPreviewerProps) {\n    const { fallbackImage, url, icon } = props\n\n    const { classes } = useStyles(undefined, { props })\n\n    return (\n        <div className={classes.root}>\n            <Image\n                classes={{\n                    fallbackImage: classes.fallbackImage,\n                    container: classes.container,\n                }}\n                width=\"100%\"\n                height=\"100%\"\n                style={{ objectFit: 'cover' }}\n                src={url}\n                fallback={fallbackImage}\n            />\n            {icon ? <div className={classes.icon}>{icon}</div> : null}\n        </div>\n    )\n}\n","import { memo } from 'react'\nimport {\n    Typography,\n    InputBase,\n    Box,\n    Chip,\n    lighten,\n    inputBaseClasses,\n    chipClasses,\n    type InputBaseProps,\n    alpha,\n} from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { formatBalance } from '@masknet/web3-shared-base'\nimport { Icons } from '@masknet/icons'\nimport { FormattedBalance, TokenIcon, useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    root: {\n        position: 'relative',\n        height: 66,\n        padding: theme.spacing(1.25, 1.5),\n        [`& > .${inputBaseClasses.input}`]: {\n            paddingTop: `${theme.spacing(2.75)}!important`,\n            paddingBottom: '0px !important',\n            flex: 2,\n            paddingLeft: '0px !important',\n            fontSize: 14,\n            fontWeight: 400,\n        },\n    },\n    title: {\n        position: 'absolute',\n        top: 10,\n        left: 12,\n    },\n    label: {\n        fontSize: 13,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.second,\n        whiteSpace: 'nowrap',\n    },\n    control: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-end',\n        rowGap: 4,\n        flex: 1,\n    },\n    chip: {\n        background: 'transparent',\n        cursor: 'pointer',\n        fontSize: 14,\n        lineHeight: '18px',\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n    },\n    tokenIcon: {\n        width: 20,\n        height: 20,\n        marginRight: '0px !important',\n    },\n    selectToken: {\n        backgroundColor: theme.palette.maskColor.primary,\n        color: theme.palette.maskColor.white,\n        fontSize: 12,\n        lineHeight: '16px',\n        fontWeight: 700,\n        padding: theme.spacing(0.5, 1),\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        borderRadius: 99,\n        cursor: 'pointer',\n        ['&:hover']: {\n            backgroundColor: lighten(theme.palette.maskColor.primary, 0.1),\n        },\n    },\n    maxChip: {\n        color: theme.palette.maskColor.white,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: 18,\n        padding: '0 3px',\n        borderRadius: 4,\n        fontSize: 10,\n        marginLeft: 4,\n        fontWeight: 700,\n        lineHeight: '18px',\n        cursor: 'pointer',\n        background: theme.palette.maskColor.primary,\n        '&:hover': {\n            background: alpha(theme.palette.maskColor.primary, 0.8),\n        },\n        [`& > .${chipClasses.label}`]: {\n            padding: 0,\n        },\n    },\n    balance: {\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        color: theme.palette.maskColor.main,\n        lineHeight: '18px',\n        fontWeight: 700,\n        marginLeft: 4,\n    },\n    arrowIcon: {\n        color: `${theme.palette.maskColor.second}!important`,\n    },\n    chipLabel: {\n        maxWidth: 150,\n    },\n}))\n\nexport interface FungibleTokenInputUIProps extends InputBaseProps {\n    label: string\n    disableMax?: boolean\n    isNative?: boolean\n    token?: Web3Helper.FungibleTokenAll | null\n    onSelectToken?: () => void\n    onMaxClick: () => void\n    balance: string\n    loadingBalance?: boolean\n    disableBalance?: boolean\n    disableToken?: boolean\n}\n\nexport const FungibleTokenInputUI = memo<FungibleTokenInputUIProps>(\n    ({\n        label,\n        isNative,\n        token,\n        onSelectToken,\n        onMaxClick,\n        balance,\n        loadingBalance,\n        disableMax = false,\n        disableToken = false,\n        disableBalance = false,\n        ...props\n    }) => {\n        const { classes, cx } = useStyles()\n        const t = useSharedTrans()\n        return (\n            <InputBase\n                fullWidth\n                startAdornment={<Typography className={cx(classes.label, classes.title)}>{label}</Typography>}\n                endAdornment={\n                    <Box className={classes.control} justifyContent={disableBalance ? 'flex-end' : undefined}>\n                        <Typography className={classes.label} display=\"flex\" alignItems=\"center\" component=\"div\">\n                            {!disableBalance ? (\n                                <>\n                                    {isNative ? t.available_balance() : t.balance()}:\n                                    <Typography className={classes.balance} component=\"span\">\n                                        {token && !loadingBalance ? (\n                                            <FormattedBalance\n                                                value={balance}\n                                                decimals={token?.decimals}\n                                                significant={token?.decimals}\n                                                formatter={formatBalance}\n                                            />\n                                        ) : (\n                                            '--'\n                                        )}\n                                    </Typography>\n                                </>\n                            ) : null}\n                            {!disableMax ? (\n                                <Chip className={classes.maxChip} label=\"MAX\" size=\"small\" onClick={onMaxClick} />\n                            ) : null}\n                        </Typography>\n                        {!disableToken ? (\n                            <Box display=\"flex\" alignItems=\"center\" columnGap=\"12px\">\n                                {token ? (\n                                    <>\n                                        <Chip\n                                            size=\"small\"\n                                            onClick={onSelectToken}\n                                            className={classes.chip}\n                                            classes={{ label: classes.chipLabel }}\n                                            icon={\n                                                <TokenIcon\n                                                    className={classes.tokenIcon}\n                                                    address={token.address}\n                                                    name={token.name}\n                                                    chainId={token.chainId}\n                                                    logoURL={token.logoURL}\n                                                />\n                                            }\n                                            deleteIcon={<Icons.ArrowDrop className={classes.arrowIcon} size={24} />}\n                                            onDelete={onSelectToken}\n                                            label={token.symbol}\n                                        />\n                                    </>\n                                ) : (\n                                    <Box className={classes.selectToken} onClick={onSelectToken}>\n                                        {t.select_a_token()}\n                                        <Icons.ArrowDrop size={16} />\n                                    </Box>\n                                )}\n                            </Box>\n                        ) : null}\n                    </Box>\n                }\n                {...props}\n                onChange={(ev) => {\n                    if (\n                        ev.currentTarget.value &&\n                        !new RegExp(props?.inputProps?.pattern).test(ev.currentTarget.value)\n                    ) {\n                        return\n                    }\n                    props.onChange?.(ev)\n                }}\n                className={cx(classes.root, props.className)}\n            />\n        )\n    },\n)\nFungibleTokenInputUI.displayName = 'FungibleTokenInputUI'\n","import { BigNumber } from 'bignumber.js'\nimport { type ChangeEvent, memo, useCallback, useMemo } from 'react'\nimport { useWeb3Others } from '@masknet/web3-hooks-base'\nimport { NUMERIC_INPUT_REGEXP_PATTERN } from '@masknet/shared-base'\nimport { formatBalance, isZero, leftShift } from '@masknet/web3-shared-base'\nimport { FungibleTokenInputUI, type FungibleTokenInputUIProps } from './UI.js'\n\nconst MIN_AMOUNT_LENGTH = 1\nconst MAX_AMOUNT_LENGTH = 79\n\nexport interface FungibleTokenInputProps extends Omit<FungibleTokenInputUIProps, 'onMaxClick'> {\n    amount: string\n    maxAmount?: string\n    maxAmountShares?: number\n    disabled?: boolean\n    placeholder?: string\n    onAmountChange: (amount: string) => void\n    isAvailableBalance?: boolean\n}\n\nexport const FungibleTokenInput = memo<FungibleTokenInputProps>(\n    ({\n        label,\n        token,\n        disabled,\n        disableMax,\n        disableBalance,\n        disableToken,\n        loadingBalance,\n        onSelectToken,\n        onAmountChange,\n        amount,\n        maxAmount,\n        balance,\n        isAvailableBalance,\n        placeholder = '0.0',\n        maxAmountShares = 1,\n        className,\n    }) => {\n        const Others = useWeb3Others()\n\n        const isNative = isAvailableBalance ?? Others.isNativeTokenAddress(token?.address)\n\n        // #region update amount by self\n        const { RE_MATCH_WHOLE_AMOUNT, RE_MATCH_FRACTION_AMOUNT } = useMemo(\n            () => ({\n                RE_MATCH_FRACTION_AMOUNT: new RegExp(`^\\\\.\\\\d{0,${token?.decimals}}$`),\n                RE_MATCH_WHOLE_AMOUNT: new RegExp(`^\\\\d*\\\\.?\\\\d{0,${token?.decimals}}$`), // d.ddd...d\n            }),\n            [token?.decimals],\n        )\n        const onChange = useCallback(\n            (ev: ChangeEvent<HTMLInputElement>) => {\n                const amount_ = ev.currentTarget.value.replaceAll(',', '.')\n                if (RE_MATCH_FRACTION_AMOUNT.test(amount_)) onAmountChange(`0${amount_}`)\n                else if (amount_ === '' || RE_MATCH_WHOLE_AMOUNT.test(amount_)) onAmountChange(amount_)\n            },\n            [onAmountChange, RE_MATCH_WHOLE_AMOUNT, RE_MATCH_FRACTION_AMOUNT],\n        )\n        // #endregion\n\n        return (\n            <FungibleTokenInputUI\n                label={label}\n                isNative={isNative}\n                token={token}\n                onSelectToken={onSelectToken}\n                value={amount}\n                onChange={onChange}\n                className={className}\n                inputProps={{\n                    autoComplete: 'off',\n                    autoCorrect: 'off',\n                    title: 'Token Amount',\n                    inputMode: 'decimal',\n                    min: 0,\n                    minLength: MIN_AMOUNT_LENGTH,\n                    maxLength: MAX_AMOUNT_LENGTH,\n                    pattern: NUMERIC_INPUT_REGEXP_PATTERN,\n                    spellCheck: false,\n                }}\n                placeholder={placeholder}\n                onKeyDown={(ev) => {\n                    if (ev.key === 'Enter') ev.preventDefault()\n                }}\n                onMaxClick={() => {\n                    if (!token) return\n                    const amount = new BigNumber(maxAmount ?? balance).dividedBy(maxAmountShares).decimalPlaces(0, 1)\n                    const formattedBalance = formatBalance(\n                        amount,\n                        token.decimals,\n                        token.decimals,\n                        true,\n                        false,\n                        4,\n                        false,\n                    )\n\n                    onAmountChange(\n                        (isZero(formattedBalance)\n                            ? new BigNumber(leftShift(amount, token.decimals).toPrecision(2)).toFormat()\n                            : formattedBalance) ?? '0',\n                    )\n                }}\n                balance={balance}\n                required\n                loadingBalance={loadingBalance}\n                disabled={disabled}\n                disableMax={disableMax}\n                disableBalance={disableBalance}\n                disableToken={disableToken}\n            />\n        )\n    },\n)\nFungibleTokenInput.displayName = 'FungibleTokenInput'\n","import { type HTMLProps, type ImgHTMLAttributes, useState } from 'react'\nimport { makeStyles } from '@masknet/theme'\nimport { useTheme } from '@mui/material'\n\nconst useStyles = makeStyles<Pick<ImageProps, 'size' | 'rounded'>, 'center'>()((theme, { size, rounded }, refs) => ({\n    optimistic: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    container: {\n        width: size ?? '100%',\n        height: size ?? '100%',\n        position: 'relative',\n        borderRadius: rounded ? '50%' : undefined,\n        overflow: rounded ? 'hidden' : undefined,\n    },\n    image: {\n        display: 'block',\n    },\n    failImage: {\n        width: 30,\n        height: 30,\n    },\n    center: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    failed: {\n        [`&.${refs.center}`]: {\n            background:\n                theme.palette.mode === 'light'\n                    ? 'linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.9) 100%), linear-gradient(90deg, rgba(98, 152, 234, 0.2) 1.03%, rgba(98, 152, 234, 0.2) 1.04%, rgba(98, 126, 234, 0.2) 100%)'\n                    : 'linear-gradient(180deg, #202020 0%, #181818 100%)',\n        },\n    },\n}))\n\nconst MASK_DARK_FALLBACK = new URL('./mask-dark.png', import.meta.url).href\nconst MASK_LIGHT_FALLBACK = new URL('./mask-light.png', import.meta.url).href\n\nexport interface ImageProps\n    extends ImgHTMLAttributes<HTMLImageElement>,\n        withClasses<'container' | 'fallbackImage' | 'imageLoading' | 'failed'> {\n    size?: number | string\n    rounded?: boolean\n    fallback?: string | JSX.Element | null\n    disableSpinner?: boolean\n    containerProps?: HTMLProps<HTMLDivElement>\n}\n\nexport function Image({\n    fallback,\n    size,\n    rounded,\n    disableSpinner,\n    classes: extraClasses,\n    onClick,\n    containerProps,\n    ...rest\n}: ImageProps) {\n    const { classes, cx } = useStyles({ size, rounded }, { props: { classes: extraClasses } })\n    const theme = useTheme()\n    const [failed, setFailed] = useState(false)\n\n    if (rest.src && !failed) {\n        return (\n            <div {...containerProps} className={cx(classes.container, classes.optimistic, containerProps?.className)}>\n                <img\n                    className={classes.image}\n                    width={size}\n                    height={size}\n                    {...rest}\n                    src={rest.src}\n                    onError={() => setFailed(true)}\n                />\n            </div>\n        )\n    }\n\n    if (fallback && !(fallback instanceof URL) && typeof fallback !== 'string') {\n        return (\n            <div\n                {...containerProps}\n                className={cx(classes.container, classes.failed, classes.center, containerProps?.className)}>\n                {fallback}\n            </div>\n        )\n    }\n\n    return (\n        <div\n            {...containerProps}\n            className={cx(classes.container, classes.failed, classes.center, containerProps?.className)}>\n            <img\n                loading=\"lazy\"\n                decoding=\"async\"\n                width={size}\n                height={size}\n                {...rest}\n                src={fallback?.toString() ?? (theme.palette.mode === 'dark' ? MASK_DARK_FALLBACK : MASK_LIGHT_FALLBACK)}\n                className={cx(classes.image, classes.failImage, classes.fallbackImage)}\n            />\n        </div>\n    )\n}\n","import { LoadingBase, makeStyles } from '@masknet/theme'\nimport { Box, Typography, type BoxProps } from '@mui/material'\nimport { memo } from 'react'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    statusBox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    text: {\n        color: theme.palette.maskColor.second,\n        fontSize: '14px',\n        fontWeight: 400,\n        marginTop: theme.spacing(1.5),\n    },\n}))\n\ninterface Props extends BoxProps {\n    omitText?: boolean\n    iconSize?: number\n}\n\nexport const LoadingStatus = memo(function LoadingStatus({\n    omitText,\n    className,\n    iconSize = 32,\n    children,\n    ...rest\n}: Props) {\n    const { classes, cx } = useStyles()\n    const t = useSharedTrans()\n    return (\n        <Box className={cx(classes.statusBox, className)} p={2} {...rest}>\n            <LoadingBase size={iconSize} />\n            {omitText ? null : <Typography className={classes.text}>{children ?? t.loading()}</Typography>}\n        </Box>\n    )\n})\n","import { memo, useMemo } from 'react'\nimport { useAsync, useUpdateEffect } from 'react-use'\nimport {\n    useNetworkDescriptors,\n    useChainContext,\n    useNetworkContext,\n    useWallet,\n    useWeb3Others,\n} from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { MaskTabList, useTabs, type MaskTabListProps } from '@masknet/theme'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { TabContext } from '@mui/lab'\nimport { Stack, Tab, Typography } from '@mui/material'\nimport { WalletIcon } from '../WalletIcon/index.js'\nimport { SmartPayBundler } from '@masknet/web3-providers'\nimport { ChainId } from '@masknet/web3-shared-evm'\n\ninterface NetworkTabProps extends Omit<MaskTabListProps, 'onChange'> {\n    chains: Web3Helper.ChainIdAll[]\n    pluginID: NetworkPluginID\n    onChange?(chainId: Web3Helper.ChainIdAll): void\n    requireChains?: boolean\n}\n\nexport const NetworkTab = memo(function NetworkTab({\n    chains,\n    pluginID,\n    onChange,\n    requireChains,\n    ...rest\n}: NetworkTabProps) {\n    const { pluginID: networkPluginID } = useNetworkContext(pluginID)\n    const { chainId, setChainId, setNetworkType } = useChainContext()\n    const networks = useNetworkDescriptors(networkPluginID)\n    const wallet = useWallet()\n    const Others = useWeb3Others()\n    const { value: smartPaySupportChainId } = useAsync(async () => SmartPayBundler.getSupportedChainId(), [])\n\n    const supportedChains = useMemo(() => {\n        if (!wallet?.owner || requireChains) return chains\n        return chains.filter((x) => x === smartPaySupportChainId)\n    }, [smartPaySupportChainId, wallet, chains, requireChains])\n\n    const usedNetworks = networks.filter((x) => supportedChains.find((c) => c === x.chainId))\n    const networkIds = usedNetworks.map((x) => x.chainId.toString())\n\n    const isValidChainId = useMemo(() => chains.includes(chainId), [chains, chainId])\n    const [tab, , , setTab] = useTabs(\n        !isValidChainId ? networkIds[0] : chainId?.toString() ?? networkIds[0],\n        ...networkIds,\n    )\n\n    useUpdateEffect(() => {\n        setTab((prev) => {\n            if (isValidChainId && chainId && prev !== chainId?.toString()) return chainId.toString()\n            return prev\n        })\n\n        if (!isValidChainId) setChainId(ChainId.Mainnet)\n    }, [chainId, isValidChainId])\n\n    return (\n        <TabContext value={tab}>\n            <MaskTabList\n                {...rest}\n                variant=\"flexible\"\n                onChange={(_, v) => {\n                    const chainId = Number.parseInt(v, 10)\n                    const networkType = Others.chainResolver.networkType(chainId)\n                    setChainId?.(chainId)\n                    if (networkType) setNetworkType?.(networkType)\n                    onChange?.(chainId)\n                    setTab(v)\n                }}\n                aria-label=\"Network Tabs\">\n                {usedNetworks.map((x) => {\n                    return (\n                        <Tab\n                            aria-label={x.name}\n                            key={x.chainId}\n                            value={x.chainId.toString()}\n                            label={\n                                <Stack display=\"inline-flex\" flexDirection=\"row\" alignItems=\"center\" gap={0.5}>\n                                    <WalletIcon mainIcon={x.icon} size={18} />\n                                    <Typography\n                                        variant=\"body2\"\n                                        fontSize={14}\n                                        fontWeight={tab === x.chainId.toString() ? 700 : 400}>\n                                        {x.shortName ?? x.name}\n                                    </Typography>\n                                </Stack>\n                            }\n                        />\n                    )\n                })}\n            </MaskTabList>\n        </TabContext>\n    )\n})\n","import { useEffect, useState, useMemo, useCallback, memo } from 'react'\nimport { useAsync } from 'react-use'\nimport { BigNumber } from 'bignumber.js'\nimport {\n    useMenuConfig,\n    FormattedBalance,\n    useSharedTrans,\n    ApproveMaskDialog,\n    SelectGasSettingsModal,\n} from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport {\n    GasOptionType,\n    isZero,\n    formatBalance,\n    formatCurrency,\n    isSameAddress,\n    ZERO,\n    toFixed,\n} from '@masknet/web3-shared-base'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport {\n    type ChainId,\n    formatWeiToEther,\n    type GasConfig,\n    GasEditor,\n    formatGas,\n    type Transaction,\n} from '@masknet/web3-shared-evm'\nimport { Typography, MenuItem, Box, Grid, type MenuProps } from '@mui/material'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport {\n    useChainContext,\n    useNetworkContext,\n    useFungibleToken,\n    useFungibleTokenPrice,\n    useWeb3Others,\n} from '@masknet/web3-hooks-base'\nimport { Icons } from '@masknet/icons'\nimport { DepositPaymaster, SmartPayBundler } from '@masknet/web3-providers'\nimport { SettingsContext } from '../SettingsBoard/Context.js'\nimport { useGasCurrencyMenu } from '../../../hooks/useGasCurrencyMenu.js'\n\nexport interface SelectGasSettingsToolbarProps<T extends NetworkPluginID = NetworkPluginID>\n    extends withClasses<'label'> {\n    pluginID?: T\n    chainId?: Web3Helper.ChainIdAll\n    nativeToken: Web3Helper.FungibleTokenAll\n    nativeTokenPrice: number\n    gasLimit: number\n    gasConfig?: GasConfig\n    supportMultiCurrency?: boolean\n    estimateGasFee?: string\n    editMode?: boolean\n    /** No effects on editMode */\n    className?: string\n    onChange?(gasConfig: GasConfig): void\n    /** Will open internal setting dialog instead if not provided */\n    onOpenCustomSetting?(): void\n    MenuProps?: Partial<MenuProps>\n}\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            border: `1px solid ${theme.palette.divider}`,\n            borderRadius: 99,\n            width: 93,\n            height: 26,\n            cursor: 'pointer',\n            justifyContent: 'center',\n            marginLeft: 6,\n        },\n        section: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            margin: '16px 0',\n            '& > p': {\n                fontSize: 14,\n                lineHeight: '18px',\n                fontWeight: 700,\n                display: 'flex',\n                alignItems: 'center',\n            },\n        },\n        gasSection: {\n            display: 'flex',\n            lineHeight: '18px',\n            fontWeight: 700,\n            alignItems: 'center',\n        },\n        text: {\n            lineHeight: '18px',\n            fontWeight: 700,\n            display: 'flex',\n            alignItems: 'center',\n            marginRight: 5,\n        },\n        menuItem: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            margin: '0px 12px',\n            padding: theme.spacing(1, 0),\n            width: 158,\n            '&:hover': {\n                background: 'none',\n            },\n        },\n        title: {\n            fontWeight: 700,\n        },\n        estimateGas: {\n            color: theme.palette.text.third,\n        },\n        menuItemBorder: {\n            borderBottom: `1px solid ${theme.palette.divider}`,\n        },\n        gasUSDPrice: {\n            fontWeight: 700,\n            margin: '0px 4px',\n        },\n        edit: {\n            lineHeight: '18px',\n            color: theme.palette.maskColor.primary,\n            marginRight: 4,\n            fontWeight: 700,\n            cursor: 'pointer',\n        },\n    }\n})\n\nexport const SelectGasSettingsToolbar = memo(function SelectGasSettingsToolbar(props: SelectGasSettingsToolbarProps) {\n    const { pluginID } = useNetworkContext(props.pluginID)\n    const { chainId } = useChainContext({ chainId: props.chainId })\n\n    return (\n        <SettingsContext.Provider initialState={{ pluginID, chainId }}>\n            <SelectGasSettingsToolbarUI {...props} />\n        </SettingsContext.Provider>\n    )\n})\n\nexport function SelectGasSettingsToolbarUI({\n    gasConfig: gasOption,\n    gasLimit,\n    nativeToken,\n    nativeTokenPrice,\n    estimateGasFee,\n    supportMultiCurrency,\n    editMode,\n    className,\n    classes: externalClasses,\n    onChange,\n    onOpenCustomSetting,\n    MenuProps = {},\n}: SelectGasSettingsToolbarProps) {\n    const t = useSharedTrans()\n    const { classes, cx, theme } = useStyles(undefined, { props: { classes: externalClasses } })\n    const { gasOptions, GAS_OPTION_NAMES } = SettingsContext.useContainer()\n\n    const [approveDialogOpen, setApproveDialogOpen] = useState(false)\n    const [isCustomGas, setIsCustomGas] = useState(false)\n    const [currentGasOptionType, setCurrentGasOptionType] = useState<GasOptionType>(\n        gasOption?.gasOptionType && gasOption.gasOptionType !== GasOptionType.CUSTOM\n            ? gasOption.gasOptionType\n            : GasOptionType.NORMAL,\n    )\n    const [currentGasCurrency, setCurrentGasCurrency] = useState(gasOption?.gasCurrency)\n    const { chainId } = useChainContext()\n    const Others = useWeb3Others()\n\n    const isSupportEIP1559 = Others.chainResolver.isFeatureSupported(chainId, 'EIP1559')\n    const setGasConfigCallback = useCallback(\n        (maxFeePerGas: string, maxPriorityFeePerGas: string, gasPrice: string) =>\n            onChange?.(\n                isSupportEIP1559\n                    ? {\n                          maxFeePerGas,\n                          maxPriorityFeePerGas,\n                          gasCurrency: currentGasCurrency,\n                          gas: new BigNumber(gasLimit).toString(),\n                          gasOptionType: isCustomGas ? GasOptionType.CUSTOM : currentGasOptionType,\n                      }\n                    : {\n                          gasPrice: new BigNumber(maxFeePerGas).gt(0) ? maxFeePerGas : gasPrice,\n                          gasCurrency: currentGasCurrency,\n                          gas: new BigNumber(gasLimit).toString(),\n                          gasOptionType: isCustomGas ? GasOptionType.CUSTOM : currentGasOptionType,\n                      },\n            ),\n        [isSupportEIP1559, chainId, onChange, currentGasCurrency, gasLimit, currentGasOptionType, isCustomGas],\n    )\n\n    const openCustomGasSettingsDialog = useCallback(async () => {\n        setIsCustomGas(true)\n        if (typeof onOpenCustomSetting === 'function') {\n            onOpenCustomSetting()\n            return\n        }\n\n        const { settings } = await SelectGasSettingsModal.openAndWaitForClose({\n            chainId,\n            disableGasLimit: true,\n            disableSlippageTolerance: true,\n            transaction: gasOption,\n        })\n        if (!settings?.transaction) return\n\n        setGasConfigCallback(\n            (settings?.transaction as Transaction).maxFeePerGas!,\n            (settings?.transaction as Transaction).maxPriorityFeePerGas!,\n            (settings?.transaction as Transaction).gasPrice!,\n        )\n    }, [chainId, gasOption, setGasConfigCallback, onOpenCustomSetting])\n\n    const currentGasOption = gasOptions?.[currentGasOptionType]\n    useEffect(() => {\n        if (!currentGasOption || isCustomGas) return\n\n        setGasConfigCallback(\n            currentGasOption.suggestedMaxFeePerGas,\n            currentGasOption.suggestedMaxPriorityFeePerGas,\n            currentGasOption.suggestedMaxPriorityFeePerGas,\n        )\n    }, [currentGasOption, isCustomGas, setGasConfigCallback])\n\n    const { value: currencyRatio } = useAsync(async () => {\n        const chainId = await SmartPayBundler.getSupportedChainId()\n        const depositPaymaster = new DepositPaymaster(chainId)\n        const ratio = await depositPaymaster.getRatio()\n\n        return ratio\n    }, [])\n\n    const [menu, openMenu] = useMenuConfig(\n        Object.entries(gasOptions ?? {})\n            .reverse()\n            .map(([type, { suggestedMaxFeePerGas, estimatedBaseFee }]) => {\n                const gas = formatGas(isZero(suggestedMaxFeePerGas) ? estimatedBaseFee : suggestedMaxFeePerGas)\n                return (\n                    <MenuItem\n                        key={type}\n                        className={cx(classes.menuItem, classes.menuItemBorder)}\n                        onClick={() => {\n                            setIsCustomGas(false)\n                            setCurrentGasOptionType(type as GasOptionType)\n                        }}>\n                        <Typography className={classes.title}>{GAS_OPTION_NAMES[type as GasOptionType]}</Typography>\n                        <Typography className={classes.estimateGas}>{gas}</Typography>\n                    </MenuItem>\n                )\n            })\n            .concat(\n                <MenuItem key=\"setting\" className={cx(classes.menuItem)} onClick={openCustomGasSettingsDialog}>\n                    <Typography className={classes.title}>{t.gas_settings_custom()}</Typography>\n                </MenuItem>,\n            ),\n        {\n            ...MenuProps,\n            anchorSibling: false,\n            anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'right',\n                ...MenuProps.anchorOrigin,\n            },\n            transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right',\n                ...MenuProps.transformOrigin,\n            },\n            PaperProps: {\n                ...MenuProps.PaperProps,\n                style: {\n                    background: theme.palette.maskColor.bottom,\n                    transform: 'translateY(8px)',\n                    ...MenuProps.PaperProps?.style,\n                },\n            },\n        },\n    )\n\n    const [currencyMenu, openCurrencyMenu] = useGasCurrencyMenu(\n        NetworkPluginID.PLUGIN_EVM,\n        (address) => setCurrentGasCurrency(address),\n        currentGasCurrency,\n        () => setApproveDialogOpen(true),\n    )\n\n    const { data: currencyToken = nativeToken } = useFungibleToken(undefined, currentGasCurrency, nativeToken, {\n        chainId,\n    })\n    const { data: currencyTokenPrice } = useFungibleTokenPrice(NetworkPluginID.PLUGIN_EVM, currentGasCurrency)\n\n    const gasFee = useMemo(() => {\n        if (!gasOption || !gasLimit) return ZERO\n        const result = GasEditor.fromConfig(chainId as ChainId, gasOption).getGasFee(gasLimit)\n        if (!currentGasCurrency || isSameAddress(nativeToken?.address, currentGasCurrency)) {\n            return result\n        }\n        if (!currencyRatio) return ZERO\n        return new BigNumber(toFixed(result.multipliedBy(currencyRatio), 0))\n    }, [gasLimit, gasOption, currencyRatio, currentGasCurrency, nativeToken])\n\n    const gasFeeUSD = useMemo(() => {\n        if (!gasFee || gasFee.isZero()) return '$0'\n        if (!currentGasCurrency || isSameAddress(nativeToken?.address, currentGasCurrency)) {\n            return formatCurrency(formatWeiToEther(gasFee).times(nativeTokenPrice), 'USD', {\n                onlyRemainTwoOrZeroDecimal: true,\n            })\n        }\n\n        if (!currencyToken || !currencyTokenPrice) return '$0'\n\n        return formatCurrency(\n            new BigNumber(formatBalance(gasFee, currencyToken?.decimals)).times(currencyTokenPrice),\n            'USD',\n            { onlyRemainTwoOrZeroDecimal: true },\n        )\n    }, [\n        gasFee,\n        nativeTokenPrice,\n        currencyTokenPrice,\n        nativeToken?.address,\n        currentGasCurrency,\n        currencyToken?.decimals,\n    ])\n\n    if (!gasOptions || isZero(gasFee)) return null\n\n    if (editMode)\n        return (\n            <>\n                <Grid item xs={6}>\n                    <Typography variant=\"body1\" color=\"textSecondary\">\n                        {t.gas_settings_label_transaction_cost()}\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography variant=\"body1\" color=\"textPrimary\" align=\"right\">\n                        <Typography component=\"span\" className={classes.edit} onClick={openCustomGasSettingsDialog}>\n                            {t.edit()}\n                        </Typography>\n                        <FormattedBalance\n                            value={gasFee ?? estimateGasFee}\n                            decimals={nativeToken?.decimals}\n                            symbol={nativeToken?.symbol}\n                            formatter={formatBalance}\n                            significant={3}\n                        />\n                        ({gasFeeUSD})\n                    </Typography>\n                </Grid>\n            </>\n        )\n\n    return (\n        <Box className={cx(classes.section, className)}>\n            <Typography className={cx(classes.label, classes.label)}>{t.gas_settings_label_gas_fee()}</Typography>\n            <Typography className={classes.gasSection} component=\"div\">\n                <FormattedBalance\n                    value={gasFee}\n                    decimals={currencyToken?.decimals ?? 0}\n                    significant={4}\n                    symbol={currencyToken?.symbol}\n                    formatter={formatBalance}\n                />\n                <Typography className={classes.gasUSDPrice}>{t.gas_usd_price({ usd: gasFeeUSD })}</Typography>\n                <div className={classes.root} onClick={gasOptions ? openMenu : undefined}>\n                    <Typography className={classes.text}>\n                        {isCustomGas ? t.gas_settings_custom() : GAS_OPTION_NAMES[currentGasOptionType]}\n                    </Typography>\n                    <Icons.Candle width={12} height={12} />\n                </div>\n                {supportMultiCurrency ? <Icons.ArrowDrop onClick={openCurrencyMenu} /> : null}\n                {menu}\n                {supportMultiCurrency ? currencyMenu : null}\n            </Typography>\n            <ApproveMaskDialog open={approveDialogOpen} handleClose={() => setApproveDialogOpen(false)} />\n        </Box>\n    )\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { createContainer } from 'unstated-next'\nimport { useSharedTrans } from '@masknet/shared'\nimport {\n    useGasOptions,\n    useNetworkContext,\n    useChainContext,\n    useSingleBlockBeatRetry,\n    useWeb3Others,\n} from '@masknet/web3-hooks-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { GasOptionType } from '@masknet/web3-shared-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { GasSettingsType } from './types/index.js'\n\nconst DEFAULT_SLIPPAGE_TOLERANCE = 0.5\nconst DEFAULT_SLIPPAGE_TOLERANCES = [0.5, 1, 2, 5]\n\nconst IN_MEMORY_CACHE: {\n    lastNetworkSignature?: string\n    lastTransactionSignature?: string\n    lastSelectedGasOptionType: GasOptionType\n    lastSelectedGasSettingsType: GasSettingsType\n} = {\n    lastSelectedGasOptionType: GasOptionType.NORMAL,\n    lastSelectedGasSettingsType: GasSettingsType.Basic,\n}\n\nfunction useSettingsContext(initial?: {\n    pluginID?: NetworkPluginID\n    chainId?: Web3Helper.ChainIdAll\n    slippageTolerance?: number\n    transaction?: Web3Helper.TransactionAll\n    disableGasPrice?: boolean\n    disableGasLimit?: boolean\n    disableSlippageTolerance?: boolean\n}) {\n    const t = useSharedTrans()\n    const { pluginID } = useNetworkContext(initial?.pluginID)\n    const { chainId } = useChainContext({\n        chainId: initial?.chainId,\n    })\n    const Others = useWeb3Others(pluginID)\n    const [transactionOptions, setTransactionOptions] = useState<\n        Web3Helper.Definition[typeof pluginID]['Transaction'] | undefined\n    >(initial?.transaction)\n    const [slippageTolerance, setSlippageTolerance] = useState(initial?.slippageTolerance ?? DEFAULT_SLIPPAGE_TOLERANCE)\n\n    const networkSignature = `${pluginID}_${chainId}`\n    const transactionSignature = Others.getTransactionSignature(chainId, transactionOptions) ?? ''\n    const needToResetByNetwork =\n        !!IN_MEMORY_CACHE?.lastNetworkSignature && IN_MEMORY_CACHE.lastNetworkSignature !== networkSignature\n    const needToResetByTransaction =\n        !!IN_MEMORY_CACHE?.lastTransactionSignature && IN_MEMORY_CACHE.lastTransactionSignature !== transactionSignature\n    const [gasSettingsType, setGasSettingsType] = useState<GasSettingsType>(\n        needToResetByNetwork || needToResetByTransaction\n            ? GasSettingsType.Basic\n            : IN_MEMORY_CACHE.lastSelectedGasSettingsType,\n    )\n    const [gasOptionType, setGasOptionType] = useState<GasOptionType>(\n        needToResetByNetwork || needToResetByTransaction\n            ? GasOptionType.NORMAL\n            : IN_MEMORY_CACHE.lastSelectedGasOptionType,\n    )\n\n    const {\n        data: gasOptions,\n        isLoading: gasOptionsLoading,\n        error: gasOptionsError,\n        refetch: gasOptionRetry,\n    } = useGasOptions(pluginID, {\n        chainId,\n    })\n\n    const onClearInMemoryCache = useCallback(() => {\n        delete IN_MEMORY_CACHE.lastNetworkSignature\n        delete IN_MEMORY_CACHE.lastTransactionSignature\n        IN_MEMORY_CACHE.lastSelectedGasOptionType = GasOptionType.NORMAL\n        IN_MEMORY_CACHE.lastSelectedGasSettingsType = GasSettingsType.Basic\n    }, [])\n\n    const onResetAll = useCallback(() => {\n        setSlippageTolerance(1)\n        setGasOptionType(GasOptionType.NORMAL)\n        setTransactionOptions(undefined)\n        gasOptionRetry()\n        onClearInMemoryCache()\n    }, [gasOptionRetry, onClearInMemoryCache])\n\n    useSingleBlockBeatRetry(pluginID, async () => {\n        if (initial?.disableGasPrice) return\n        gasOptionRetry()\n    })\n\n    // sync in-memory cache\n    useEffect(() => {\n        IN_MEMORY_CACHE.lastNetworkSignature = networkSignature\n        IN_MEMORY_CACHE.lastTransactionSignature = transactionSignature\n        IN_MEMORY_CACHE.lastSelectedGasOptionType = gasOptionType\n        IN_MEMORY_CACHE.lastSelectedGasSettingsType = gasSettingsType\n    }, [gasOptionType, gasSettingsType, networkSignature, transactionSignature])\n\n    return {\n        DEFAULT_SLIPPAGE_TOLERANCE,\n        DEFAULT_SLIPPAGE_TOLERANCES,\n        GAS_OPTION_NAMES: {\n            [GasOptionType.FAST]: t.gas_settings_gas_option_type_fast(),\n            [GasOptionType.NORMAL]: t.gas_settings_gas_option_type_normal(),\n            [GasOptionType.SLOW]: t.gas_settings_gas_option_type_slow(),\n            [GasOptionType.CUSTOM]: '',\n        },\n\n        pluginID,\n        chainId,\n        transaction: initial?.transaction,\n\n        transactionOptions,\n        setTransactionOptions,\n\n        slippageTolerance,\n        setSlippageTolerance,\n\n        gasOptionType,\n        setGasOptionType,\n\n        gasSettingsType,\n        setGasSettingsType,\n\n        gasOptions,\n        gasOptionsLoading,\n        gasOptionsError,\n        gasOptionRetry,\n\n        resetAll: onResetAll,\n    }\n}\n\nexport const SettingsContext = createContainer(useSettingsContext)\n","export enum GasSettingsType {\n    Basic = 'Basic',\n    Advanced = 'Advanced',\n}\n","import { type HTMLProps, useMemo } from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport { useChainContext, useFungibleTokenPrice, useNetworkContext } from '@masknet/web3-hooks-base'\nimport { TokenIcon } from '@masknet/shared'\nimport { makeStyles } from '@masknet/theme'\nimport { NetworkPluginID } from '@masknet/shared-base'\nimport { formatCurrency } from '@masknet/web3-shared-base'\nimport { Typography } from '@mui/material'\nimport type { Web3Helper } from '@masknet/web3-helpers'\n\nconst useStyles = makeStyles<void, 'tokenIcon'>()((theme, _, ref) => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    token: {\n        display: 'flex',\n        alignItems: 'center',\n        [`& .${ref.tokenIcon}`]: {\n            marginLeft: theme.spacing(0.5),\n        },\n    },\n    tokenIcon: {},\n    amount: {\n        color: theme.palette.maskColor.main,\n        fontSize: '24px',\n        fontWeight: 700,\n    },\n    price: {\n        color: theme.palette.maskColor.third,\n        fontSize: '14px',\n        fontWeight: 400,\n        lineHeight: '18px',\n    },\n}))\n\ninterface Props extends HTMLProps<HTMLDivElement> {\n    amount?: string\n    token?: Web3Helper.FungibleTokenAll | null\n}\n\nexport function TokenValue({ className, token, amount, ...rest }: Props) {\n    const { classes, cx } = useStyles()\n    const { pluginID } = useNetworkContext()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n    const { data: tokenPrice = 0 } = useFungibleTokenPrice(NetworkPluginID.PLUGIN_EVM, token?.address, { chainId })\n\n    const priceUSD = useMemo(() => {\n        if (!tokenPrice || !amount) return\n        return formatCurrency(new BigNumber(amount).times(tokenPrice), 'USD', { onlyRemainTwoOrZeroDecimal: true })\n    }, [amount, tokenPrice])\n\n    return amount && token ? (\n        <div className={cx(classes.container, className)} {...rest}>\n            <div className={classes.token}>\n                <Typography className={classes.amount} component=\"strong\" fontWeight=\"700\" fontSize=\"24px\">\n                    {amount}\n                </Typography>\n                <TokenIcon\n                    size={24}\n                    className={classes.tokenIcon}\n                    pluginID={pluginID}\n                    chainId={chainId}\n                    name={token.name}\n                    address={token.address}\n                    logoURL={token.logoURL}\n                />\n            </div>\n            {priceUSD ? <Typography className={classes.price}>{`\\u2248 ${priceUSD ?? '0'}`}</Typography> : null}\n        </div>\n    ) : null\n}\n","import { BigNumber } from 'bignumber.js'\nimport { noop } from 'lodash-es'\nimport { memo, useCallback, useMemo, useState } from 'react'\nimport { Icons } from '@masknet/icons'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { ActionButton, makeStyles, usePortalShadowRoot } from '@masknet/theme'\nimport { useChainContext, useFungibleToken, useNetworkContext, useWeb3Others } from '@masknet/web3-hooks-base'\nimport { ApproveStateType, useERC20TokenApproveCallback } from '@masknet/web3-hooks-evm'\nimport { toFixed } from '@masknet/web3-shared-base'\nimport { useSmartPayConstants } from '@masknet/web3-shared-evm'\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, InputBase, Typography } from '@mui/material'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    paper: {\n        margin: 0,\n        maxWidth: 320,\n        background: theme.palette.maskColor.bottom,\n    },\n    title: {\n        textAlign: 'center',\n        fontSize: 16,\n        lineHeight: '20px',\n        fontWeight: 700,\n        color: theme.palette.maskColor.main,\n    },\n    description: {\n        fontSize: 14,\n        lineHeight: '18px',\n        color: theme.palette.maskColor.second,\n    },\n    actions: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(3),\n        rowGap: theme.spacing(2),\n    },\n}))\n\nexport interface ApproveMaskDialogProps {\n    open: boolean\n    handleClose: () => void\n}\nexport const ApproveMaskDialog = memo<ApproveMaskDialogProps>(({ open, handleClose }) => {\n    const sharedI18N = useSharedTrans()\n    const { classes } = useStyles()\n    const Others = useWeb3Others()\n    const [amount, setAmount] = useState('')\n    const { pluginID } = useNetworkContext()\n    const { chainId } = useChainContext<NetworkPluginID.PLUGIN_EVM>()\n\n    const maskAddress = Others.getMaskTokenAddress(chainId)\n    const { data: maskToken } = useFungibleToken(pluginID, maskAddress)\n    const { PAYMASTER_MASK_CONTRACT_ADDRESS } = useSmartPayConstants(chainId)\n\n    const [{ type: approveStateType }, transactionState, approveCallback] = useERC20TokenApproveCallback(\n        maskAddress ?? '',\n        maskToken ? toFixed(new BigNumber(amount).shiftedBy(maskToken.decimals ?? 0).integerValue()) : '',\n        PAYMASTER_MASK_CONTRACT_ADDRESS ?? '',\n        noop,\n        chainId,\n    )\n\n    const onApprove = useCallback(async () => {\n        if (approveStateType !== ApproveStateType.NOT_APPROVED) return\n        await approveCallback(true)\n    }, [approveStateType, transactionState, approveCallback])\n\n    const action = useMemo(() => {\n        if (approveStateType === ApproveStateType.UNKNOWN) {\n            return (\n                <ActionButton fullWidth variant=\"roundedContained\" disabled>\n                    {sharedI18N.wallet_transfer_error_amount_absence()}\n                </ActionButton>\n            )\n        }\n        if (approveStateType === ApproveStateType.FAILED) {\n            return (\n                <ActionButton fullWidth variant=\"roundedContained\" color=\"error\">\n                    {sharedI18N.wallet_load_retry({ symbol: 'MASK' })}\n                </ActionButton>\n            )\n        }\n        if (\n            approveStateType === ApproveStateType.NOT_APPROVED ||\n            transactionState.loading ||\n            approveStateType === ApproveStateType.UPDATING\n        ) {\n            return (\n                <ActionButton\n                    loading={transactionState.loading || approveStateType === ApproveStateType.UPDATING}\n                    fullWidth\n                    variant=\"roundedContained\"\n                    onClick={onApprove}>\n                    {sharedI18N.dialog_confirm()}\n                </ActionButton>\n            )\n        }\n        return (\n            <ActionButton fullWidth variant=\"roundedContained\" disabled>\n                {sharedI18N.dialog_confirm()}\n            </ActionButton>\n        )\n    }, [approveStateType, approveCallback, sharedI18N, transactionState, onApprove])\n\n    return usePortalShadowRoot((container) => (\n        <Dialog container={container} open={open} onClose={handleClose} classes={{ paper: classes.paper }}>\n            <DialogTitle sx={{ py: 3 }}>\n                <Typography className={classes.title}>{sharedI18N.approve_mask()}</Typography>\n            </DialogTitle>\n            <DialogContent>\n                <Typography className={classes.description}>{sharedI18N.approve_mask_description()}</Typography>\n                <Typography className={classes.description} marginTop={2}>\n                    {sharedI18N.approve_mask_question()}\n                </Typography>\n                <InputBase\n                    sx={{ mt: 3 }}\n                    fullWidth\n                    value={amount}\n                    onChange={(event) => setAmount(event.target.value)}\n                    endAdornment={\n                        <Typography display=\"flex\" alignItems=\"center\" columnGap={1} fontSize={15} lineHeight=\"20px\">\n                            <Icons.MaskBlue size={20} /> MASK\n                        </Typography>\n                    }\n                />\n            </DialogContent>\n            <DialogActions className={classes.actions}>\n                {action}\n                <Button fullWidth variant=\"roundedOutlined\" onClick={handleClose}>\n                    {sharedI18N.cancel()}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    ))\n})\n","import { memo } from 'react'\nimport { Icons, type GeneratedIconProps } from '@masknet/icons'\n\ninterface Props extends GeneratedIconProps {\n    checked?: boolean\n    unCheckedButtonColor?: string\n    checkedButtonColor?: string\n}\n\nexport const RadioIndicator = memo<Props>(function RadioIndicator({\n    checked,\n    unCheckedButtonColor,\n    checkedButtonColor,\n    ...rest\n}) {\n    return checked ? (\n        <Icons.RadioButtonChecked {...rest} color={checkedButtonColor} />\n    ) : (\n        <Icons.RadioButtonUnChecked {...rest} color={unCheckedButtonColor} />\n    )\n})\n","import { type DependencyList, useState } from 'react'\nimport { useAsyncRetry, useTimeoutFn } from 'react-use'\nimport type { AsyncStateRetry } from 'react-use/lib/useAsyncRetry.js'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Others } from './useWeb3Others.js'\n\nconst DEFAULT_SINGLE_BLOCK_DELAY = 10 * 1000 // 10 seconds\nconst DEFAULT_DOUBLE_BLOCK_DELAY = DEFAULT_SINGLE_BLOCK_DELAY * 2\n\nexport function useBeat(delay = 1000) {\n    const [beat, setBeat] = useState(0)\n    const [, , reset] = useTimeoutFn(() => {\n        setBeat((x) => (x + 1) % Number.MAX_SAFE_INTEGER)\n        reset()\n    }, delay)\n    return beat\n}\n\n/**\n * @deprecated Use react-query with refetchInterval\n */\nexport function useBeatRetry<T>(fn: () => Promise<T>, delay = 1000, deps: DependencyList = []): AsyncStateRetry<T> {\n    const beat = useBeat(delay)\n    return useAsyncRetry(fn, deps.concat(beat))\n}\n\nexport function useSingleBlockBeatRetry<T extends NetworkPluginID, R>(\n    pluginID: T,\n    fn: () => Promise<R>,\n    deps: DependencyList = [],\n): AsyncStateRetry<R> {\n    const { chainId } = useChainContext()\n    const Others = useWeb3Others(pluginID)\n    return useBeatRetry(fn, Others.getAverageBlockDelay?.(chainId) ?? DEFAULT_SINGLE_BLOCK_DELAY, deps)\n}\n\nexport function useDoubleBlockBeatRetry<T extends NetworkPluginID, R>(\n    pluginID: T,\n    fn: () => Promise<R>,\n    deps: DependencyList = [],\n): AsyncStateRetry<R> {\n    const { chainId } = useChainContext()\n    const Others = useWeb3Others(pluginID)\n    return useBeatRetry(fn, Others.getAverageBlockDelay?.(chainId, 2) ?? DEFAULT_DOUBLE_BLOCK_DELAY, deps)\n}\n\nexport function useCustomBlockBeatRetry<T extends NetworkPluginID, R>(\n    pluginID: T,\n    fn: () => Promise<R>,\n    deps: DependencyList = [],\n    scale = 1,\n): AsyncStateRetry<R> {\n    const { chainId } = useChainContext()\n    const Others = useWeb3Others(pluginID)\n    return useBeatRetry(fn, Others.getAverageBlockDelay?.(chainId, scale) ?? DEFAULT_DOUBLE_BLOCK_DELAY, deps)\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { HubOptions } from '@masknet/web3-providers/types'\nimport { useChainContext } from './useContext.js'\nimport { useWeb3Hub } from './useWeb3Hub.js'\nimport { useQuery } from '@tanstack/react-query'\n\nexport function useFungibleTokenPrice<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID: T,\n    address?: string,\n    options?: HubOptions<T>,\n) {\n    const { chainId } = useChainContext({ chainId: options?.chainId })\n    const Hub = useWeb3Hub(pluginID, {\n        chainId,\n        ...options,\n    })\n\n    return useQuery({\n        enabled: !!chainId && !!address,\n        queryKey: ['fungible', 'token-price', pluginID, chainId, address, options],\n        queryFn: async () => {\n            return Hub.getFungibleTokenPrice(chainId, address!.toLowerCase())\n        },\n    })\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useFungibleToken } from './useFungibleToken.js'\nimport { useNativeTokenAddress } from './useNativeTokenAddress.js'\n\nexport function useNativeToken<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n) {\n    const nativeTokenAddress = useNativeTokenAddress(pluginID, options)\n    return useFungibleToken<S, T>(pluginID, nativeTokenAddress, undefined, options)\n}\n","import type { NetworkPluginID } from '@masknet/shared-base'\nimport type { ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useWeb3Others } from './useWeb3Others.js'\nimport { useNetwork } from './useNetwork.js'\n\nexport function useNativeTokenAddress<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    options?: ConnectionOptions<T>,\n) {\n    const network = useNetwork(pluginID)\n    const Others = useWeb3Others(pluginID)\n    if (network?.isCustomized) {\n        return network.nativeCurrency.address\n    }\n    return Others.getNativeTokenAddress(options?.chainId)\n}\n","import { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { EMPTY_STRING, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\nimport { useNetworks } from './useNetworks.js'\n\nexport function useNetwork<T extends NetworkPluginID = NetworkPluginID>(\n    pluginID?: T,\n    chainId?: Web3Helper.Definition[T]['ChainId'],\n) {\n    const { Network } = useWeb3State(pluginID)\n    const networks = useNetworks(pluginID)\n    const networkID = useSubscription(Network?.networkID ?? EMPTY_STRING)\n\n    return useMemo(() => {\n        if (chainId) return networks.find((x) => x.chainId === chainId)\n        return networks.find((x) => x.ID === networkID)\n    }, [chainId, networkID, networks])\n}\n","import { BigNumber } from 'bignumber.js'\nimport { scale10 } from './number.js'\nimport { CurrencyType } from '../index.js'\n\nexport interface FormatterCurrencyOptions {\n    onlyRemainTwoOrZeroDecimal?: boolean\n    fiatCurrencyRate?: number\n    customDecimalConfig?: {\n        boundary: BigNumber\n        decimalExp: number\n    }\n}\n\nconst BOUNDARIES = {\n    zeroDecimalBoundary: scale10(1, 0),\n    twoDecimalBoundary: scale10(1, -2),\n    sixDecimalBoundary: scale10(1, -6),\n    eightDecimalBoundary: scale10(1, -8),\n    twelveDecimalBoundary: scale10(1, -12),\n    zeroDecimalExp: 0,\n    twoDecimalExp: 2,\n    sixDecimalExp: 6,\n    eightDecimalExp: 8,\n    twelveDecimalExp: 12,\n}\n\nconst DIGITAL_CURRENCY_SYMBOLS = {\n    BTC: '\\u20BF',\n    ETH: '\\u039E',\n    SOL: '\\u25CE',\n    BNB: 'BNB',\n    POLYGON: 'MATIC',\n    WETH: 'WETH',\n    AVAX: 'AVAX',\n    GLMR: 'GLMR',\n    MATIC: 'MATIC',\n}\n\ntype UpperCaseKeys = keyof typeof DIGITAL_CURRENCY_SYMBOLS\ntype Keys = UpperCaseKeys | Lowercase<UpperCaseKeys>\n\nconst digitalCurrencyModifier = (parts: Intl.NumberFormatPart[], symbol: string, isDigitalCurrency: boolean) => {\n    if (!isDigitalCurrency) return parts\n    const [currencyPart, ...rest] = parts\n    if (symbol) return [...rest, { ...currencyPart, value: symbol }]\n    return parts\n}\n\nconst formatCurrencySymbol = (symbol: string, isLead: boolean) => {\n    return isLead || symbol.length === 0 ? symbol : ` ${symbol}`\n}\n\nconst fiatCurrencyResultModifier = (\n    result: string,\n    currency: LiteralUnion<Keys | 'USD'> = CurrencyType.USD,\n    onlyRemainTwoOrZeroDecimal: boolean,\n) => {\n    if (currency === CurrencyType.HKD) return result.replaceAll('$', 'HK$')\n\n    if (currency === CurrencyType.JPY && onlyRemainTwoOrZeroDecimal)\n        return result.startsWith('¥') ? '¥' + Number(result.replaceAll(/¥|,/g, '')).toFixed() : result\n\n    return result\n}\n\n// https://mask.atlassian.net/wiki/spaces/MASK/pages/122916438/Token\nexport function formatCurrency(\n    inputValue: BigNumber.Value,\n    currency: LiteralUnion<Keys | 'USD'> = CurrencyType.USD,\n    options?: FormatterCurrencyOptions,\n): string {\n    const { onlyRemainTwoOrZeroDecimal = false, fiatCurrencyRate = 1, customDecimalConfig } = options ?? {}\n    const bn = new BigNumber(inputValue).multipliedBy(fiatCurrencyRate)\n    const integerValue = bn.integerValue(1)\n    const decimalValue = bn.plus(integerValue.negated())\n    const isMoreThanOrEqualToOne = bn.isGreaterThanOrEqualTo(1)\n\n    const {\n        sixDecimalBoundary,\n        zeroDecimalBoundary,\n        twoDecimalBoundary,\n        twelveDecimalBoundary,\n        eightDecimalBoundary,\n        zeroDecimalExp,\n        sixDecimalExp,\n        twoDecimalExp,\n        twelveDecimalExp,\n    } = BOUNDARIES\n\n    const assetValueBoundary = currency === CurrencyType.JPY ? zeroDecimalBoundary : twoDecimalBoundary\n    const assetValueDecimalExp = currency === CurrencyType.JPY ? zeroDecimalExp : twoDecimalExp\n    const zeroValue = currency === CurrencyType.JPY ? '0' : '0.00'\n    const minimumValue = currency === CurrencyType.JPY ? '1' : '0.01'\n    const symbol = currency ? DIGITAL_CURRENCY_SYMBOLS[currency.toUpperCase() as UpperCaseKeys] : ''\n\n    let formatter: Intl.NumberFormat\n    let isIntlCurrencyValid = !DIGITAL_CURRENCY_SYMBOLS[currency.toUpperCase() as UpperCaseKeys]\n\n    try {\n        formatter = new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: isIntlCurrencyValid ? (currency === CurrencyType.JPY ? CurrencyType.CNY : currency) : 'USD',\n            currencyDisplay: 'narrowSymbol',\n        })\n    } catch {\n        isIntlCurrencyValid = false\n        formatter = new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            currencyDisplay: 'narrowSymbol',\n        })\n    }\n\n    const isDigitalCurrency = !!(!isIntlCurrencyValid && symbol)\n    const digitalCurrencyModifierValues = digitalCurrencyModifier(\n        formatter.formatToParts(\n            bn.isZero() ? 0 : bn.lt(sixDecimalBoundary) ? sixDecimalBoundary.toNumber() : bn.toNumber(),\n        ),\n        symbol,\n        isDigitalCurrency,\n    )\n\n    let result: string = ''\n\n    if (\n        bn.lt(customDecimalConfig?.boundary ?? onlyRemainTwoOrZeroDecimal ? assetValueBoundary : sixDecimalBoundary) ||\n        bn.isZero()\n    ) {\n        const isLessThanAssetValueDecimalBoundary = bn.lt(assetValueBoundary)\n        const isLessThanTwelveDecimalBoundary = bn.lt(twelveDecimalBoundary)\n        const isLessThanCustomDecimalBoundary = customDecimalConfig?.boundary\n            ? bn.lt(customDecimalConfig?.boundary)\n            : false\n        const isGreatThanEightDecimalBoundary = bn.gte(eightDecimalBoundary)\n\n        const value = digitalCurrencyModifierValues\n            .map(({ type, value }, i) => {\n                switch (type) {\n                    case 'currency':\n                        return formatCurrencySymbol(symbol ?? value, i === 0)\n                    case 'fraction':\n                        if (customDecimalConfig) {\n                            return bn.isZero()\n                                ? zeroValue\n                                : isLessThanCustomDecimalBoundary\n                                ? customDecimalConfig.boundary.toFixed()\n                                : bn.toFixed(customDecimalConfig.decimalExp).replace(/0+$/, '')\n                        }\n                        return bn.isZero()\n                            ? zeroValue\n                            : onlyRemainTwoOrZeroDecimal\n                            ? minimumValue\n                            : isLessThanTwelveDecimalBoundary\n                            ? sixDecimalBoundary.toFixed()\n                            : isGreatThanEightDecimalBoundary\n                            ? bn.decimalPlaces(10).toFixed(twelveDecimalExp).replace(/0+$/, '')\n                            : bn.toFixed(twelveDecimalExp).replace(/0+$/, '')\n                    default:\n                        return ''\n                }\n            })\n            .join('')\n\n        result = `${\n            (isLessThanTwelveDecimalBoundary || (onlyRemainTwoOrZeroDecimal && isLessThanAssetValueDecimalBoundary)) &&\n            !bn.isZero()\n                ? '< '\n                : ''\n        }${value}`\n    } else if (isMoreThanOrEqualToOne) {\n        result = digitalCurrencyModifierValues\n            .map(({ type, value }, i) => {\n                switch (type) {\n                    case 'currency':\n                        return formatCurrencySymbol(symbol ?? value, i === 0)\n                    case 'literal':\n                        return ''\n                    default:\n                        return value\n                }\n            })\n            .join('')\n    } else {\n        result = digitalCurrencyModifierValues\n            .map(({ type, value }, i) => {\n                switch (type) {\n                    case 'currency':\n                        return formatCurrencySymbol(symbol ?? value, i === 0)\n                    case 'fraction':\n                        const dec = decimalValue\n                            .toFormat(\n                                customDecimalConfig?.decimalExp ??\n                                    (onlyRemainTwoOrZeroDecimal ? assetValueDecimalExp : sixDecimalExp),\n                            )\n                            .replace(/\\d\\./, '')\n                        return onlyRemainTwoOrZeroDecimal ? dec.replace(/(\\d\\d)(0+)$/, '$1') : dec.replace(/(0+)$/, '')\n                    case 'integer':\n                        // When there is a carry\n                        if (bn.gt('0.99') && onlyRemainTwoOrZeroDecimal) return '1'\n                        return '0'\n                    case 'literal':\n                        return ''\n                    default:\n                        return value\n                }\n            })\n            .join('')\n    }\n\n    return fiatCurrencyResultModifier(result, currency, onlyRemainTwoOrZeroDecimal)\n}\n","import React from 'react';\n\nfunction createContainer(useHook) {\n  var Context = React.createContext(null);\n\n  function Provider(props) {\n    var value = useHook(props.initialState);\n    return React.createElement(Context.Provider, {\n      value: value\n    }, props.children);\n  }\n\n  function useContainer() {\n    var value = React.useContext(Context);\n\n    if (value === null) {\n      throw new Error(\"Component must be wrapped with <Container.Provider>\");\n    }\n\n    return value;\n  }\n\n  return {\n    Provider: Provider,\n    useContainer: useContainer\n  };\n}\nfunction useContainer(container) {\n  return container.useContainer();\n}\n\nexport { createContainer, useContainer };\n//# sourceMappingURL=unstated-next.mjs.map\n"],"names":["allPersonas","currentPersona","queryPersonaAvatar","querySocialIdentity","fetchJSON","queryPersonaByProfile","openDashboard","openPopupWindow","signWithPersona","hasPaymentPassword","createPersona","setCurrentPersonaIdentifier","attachProfile","setPluginMinimalModeEnabled","hasHostPermission","requestHostPermission","__setUIContext__","value","isEqual","ALL_EVENTS","ValueRefWithReady","useValueRef","createManager","activated","startDaemon","events","minimalMode","def","ExtensionPage","NoManagedContext","activatedSub","on","plugins","minimalModeSub","useIsMinimalModeExtensionPage","pluginID","includes","useActivatedPluginsExtensionPage","useActivatedPluginExtensionPage","find","x","ID","startPluginHostExtensionPage","host","useMemo","unreachable","getPluginDefine","SiteAdaptor","useActivatedPluginsSiteAdaptor","minimalModeEqualsTo","result","filter","visibility","useMinimalMode","bind","useNotMinimalMode","useAnyMode","useIsMinimalMode","useActivatedPluginSiteAdaptor","undefined","startPluginSiteAdaptor","currentNetwork","id","status","enableRequirement","supports","sites","type","useSubscription","currentVisitingProfile","useCurrentVisitingIdentity","UNDEFINED","lastRecognizedProfile","useLastRecognizedIdentity","WebExtensionMessage","serializer","DOMAIN_RPC","Symbol","getPluginMessage","domain","cache","has","get","messageCenter","serialization","set","__workaround__replaceImplementationOfCreatePluginMessage__","newImpl","Map","makeStyles","Image","useStyles","theme","root","width","height","position","fallbackImage","icon","top","spacing","left","AssetPreviewer","props","url","classes","div","className","container","style","objectFit","src","fallback","memo","Typography","InputBase","Box","Chip","lighten","inputBaseClasses","chipClasses","alpha","formatBalance","Icons","FormattedBalance","TokenIcon","useSharedTrans","padding","input","paddingTop","paddingBottom","flex","paddingLeft","fontSize","fontWeight","title","label","lineHeight","color","palette","maskColor","second","whiteSpace","control","display","flexDirection","alignItems","rowGap","chip","background","cursor","main","tokenIcon","marginRight","selectToken","backgroundColor","primary","white","justifyContent","borderRadius","maxChip","marginLeft","balance","textOverflow","overflow","arrowIcon","chipLabel","maxWidth","FungibleTokenInputUI","isNative","token","onSelectToken","onMaxClick","loadingBalance","disableMax","disableToken","disableBalance","cx","t","fullWidth","startAdornment","endAdornment","component","available_balance","decimals","significant","formatter","size","onClick","columnGap","address","name","chainId","logoURL","deleteIcon","ArrowDrop","onDelete","symbol","select_a_token","onChange","ev","currentTarget","RegExp","inputProps","pattern","test","displayName","BigNumber","useCallback","useWeb3Others","NUMERIC_INPUT_REGEXP_PATTERN","isZero","leftShift","MIN_AMOUNT_LENGTH","MAX_AMOUNT_LENGTH","FungibleTokenInput","disabled","onAmountChange","amount","maxAmount","isAvailableBalance","placeholder","maxAmountShares","Others","isNativeTokenAddress","RE_MATCH_WHOLE_AMOUNT","RE_MATCH_FRACTION_AMOUNT","amount_","replaceAll","autoComplete","autoCorrect","inputMode","min","minLength","maxLength","spellCheck","onKeyDown","key","preventDefault","dividedBy","decimalPlaces","formattedBalance","toPrecision","toFormat","required","useState","useTheme","rounded","refs","optimistic","image","failImage","center","failed","mode","MASK_DARK_FALLBACK","URL","href","MASK_LIGHT_FALLBACK","disableSpinner","extraClasses","containerProps","rest","setFailed","img","onError","loading","decoding","toString","LoadingBase","statusBox","text","marginTop","LoadingStatus","omitText","iconSize","children","p","useAsync","useUpdateEffect","useNetworkDescriptors","useChainContext","useNetworkContext","useWallet","MaskTabList","useTabs","TabContext","Stack","Tab","WalletIcon","SmartPayBundler","ChainId","NetworkTab","chains","requireChains","networkPluginID","setChainId","setNetworkType","networks","wallet","smartPaySupportChainId","getSupportedChainId","supportedChains","owner","usedNetworks","c","networkIds","map","isValidChainId","tab","setTab","prev","Mainnet","variant","_","v","Number","parseInt","networkType","chainResolver","aria-label","gap","mainIcon","shortName","useEffect","useMenuConfig","ApproveMaskDialog","SelectGasSettingsModal","GasOptionType","formatCurrency","isSameAddress","ZERO","toFixed","NetworkPluginID","formatWeiToEther","GasEditor","formatGas","MenuItem","Grid","useFungibleToken","useFungibleTokenPrice","DepositPaymaster","SettingsContext","useGasCurrencyMenu","border","divider","section","margin","gasSection","menuItem","estimateGas","third","menuItemBorder","borderBottom","gasUSDPrice","edit","SelectGasSettingsToolbar","Provider","initialState","SelectGasSettingsToolbarUI","gasConfig","gasOption","gasLimit","nativeToken","nativeTokenPrice","estimateGasFee","supportMultiCurrency","editMode","externalClasses","onOpenCustomSetting","MenuProps","gasOptions","GAS_OPTION_NAMES","useContainer","approveDialogOpen","setApproveDialogOpen","isCustomGas","setIsCustomGas","currentGasOptionType","setCurrentGasOptionType","gasOptionType","CUSTOM","NORMAL","currentGasCurrency","setCurrentGasCurrency","gasCurrency","isSupportEIP1559","isFeatureSupported","setGasConfigCallback","maxFeePerGas","maxPriorityFeePerGas","gasPrice","gas","gt","openCustomGasSettingsDialog","settings","openAndWaitForClose","disableGasLimit","disableSlippageTolerance","transaction","currentGasOption","suggestedMaxFeePerGas","suggestedMaxPriorityFeePerGas","currencyRatio","depositPaymaster","ratio","getRatio","menu","openMenu","Object","entries","reverse","estimatedBaseFee","concat","gas_settings_custom","anchorSibling","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","bottom","transform","currencyMenu","openCurrencyMenu","PLUGIN_EVM","data","currencyToken","currencyTokenPrice","gasFee","fromConfig","getGasFee","multipliedBy","gasFeeUSD","times","onlyRemainTwoOrZeroDecimal","item","xs","gas_settings_label_transaction_cost","align","gas_settings_label_gas_fee","gas_usd_price","usd","Candle","open","handleClose","createContainer","useGasOptions","useSingleBlockBeatRetry","GasSettingsType","DEFAULT_SLIPPAGE_TOLERANCE","DEFAULT_SLIPPAGE_TOLERANCES","IN_MEMORY_CACHE","lastSelectedGasOptionType","lastSelectedGasSettingsType","Basic","useSettingsContext","initial","transactionOptions","setTransactionOptions","slippageTolerance","setSlippageTolerance","networkSignature","transactionSignature","getTransactionSignature","needToResetByNetwork","lastNetworkSignature","needToResetByTransaction","lastTransactionSignature","gasSettingsType","setGasSettingsType","setGasOptionType","isLoading","gasOptionsLoading","error","gasOptionsError","refetch","gasOptionRetry","onClearInMemoryCache","onResetAll","disableGasPrice","FAST","gas_settings_gas_option_type_fast","gas_settings_gas_option_type_normal","SLOW","gas_settings_gas_option_type_slow","resetAll","Advanced","ref","price","TokenValue","tokenPrice","priceUSD","noop","ActionButton","usePortalShadowRoot","ApproveStateType","useERC20TokenApproveCallback","useSmartPayConstants","Button","Dialog","DialogActions","DialogContent","DialogTitle","paper","textAlign","description","actions","sharedI18N","setAmount","maskAddress","getMaskTokenAddress","maskToken","PAYMASTER_MASK_CONTRACT_ADDRESS","approveStateType","transactionState","approveCallback","shiftedBy","integerValue","onApprove","NOT_APPROVED","action","UNKNOWN","wallet_transfer_error_amount_absence","FAILED","wallet_load_retry","UPDATING","dialog_confirm","onClose","sx","py","approve_mask","approve_mask_description","approve_mask_question","mt","event","target","MaskBlue","cancel","RadioIndicator","checked","unCheckedButtonColor","checkedButtonColor","RadioButtonChecked","RadioButtonUnChecked","useAsyncRetry","useTimeoutFn","DEFAULT_SINGLE_BLOCK_DELAY","DEFAULT_DOUBLE_BLOCK_DELAY","useBeat","delay","beat","setBeat","reset","MAX_SAFE_INTEGER","useBeatRetry","fn","deps","getAverageBlockDelay","useDoubleBlockBeatRetry","useCustomBlockBeatRetry","scale","useWeb3Hub","useQuery","options","Hub","enabled","queryKey","queryFn","getFungibleTokenPrice","toLowerCase","useNativeTokenAddress","useNativeToken","nativeTokenAddress","useNetwork","network","isCustomized","nativeCurrency","getNativeTokenAddress","EMPTY_STRING","useWeb3State","useNetworks","Network","networkID","scale10","CurrencyType","BOUNDARIES","zeroDecimalBoundary","twoDecimalBoundary","sixDecimalBoundary","eightDecimalBoundary","twelveDecimalBoundary","zeroDecimalExp","twoDecimalExp","sixDecimalExp","eightDecimalExp","twelveDecimalExp","DIGITAL_CURRENCY_SYMBOLS","BTC","ETH","SOL","BNB","POLYGON","WETH","AVAX","GLMR","MATIC","digitalCurrencyModifier","parts","isDigitalCurrency","currencyPart","formatCurrencySymbol","isLead","length","fiatCurrencyResultModifier","currency","USD","HKD","JPY","startsWith","inputValue","fiatCurrencyRate","customDecimalConfig","bn","decimalValue","plus","negated","isMoreThanOrEqualToOne","isGreaterThanOrEqualTo","assetValueBoundary","assetValueDecimalExp","zeroValue","minimumValue","toUpperCase","isIntlCurrencyValid","Intl","NumberFormat","CNY","currencyDisplay","digitalCurrencyModifierValues","formatToParts","lt","toNumber","boundary","isLessThanAssetValueDecimalBoundary","isLessThanTwelveDecimalBoundary","isLessThanCustomDecimalBoundary","isGreatThanEightDecimalBoundary","gte","i","decimalExp","replace","join","dec"],"sourceRoot":"","x_google_ignoreList":[24]}