{"version":3,"file":"bundled/chunk.3385.js","mappings":"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","sources":["webpack://mask-network/./packages/plugin-infra/src/dom/context.ts","webpack://mask-network/./packages/plugin-infra/src/dom/useTrans.tsx","webpack://mask-network/./packages/plugin-infra/src/site-adaptor/context.ts","webpack://mask-network/./packages/shared-base/src/helpers/personas.ts","webpack://mask-network/./packages/shared/src/UI/components/Alert/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useAllowTestnet.ts","webpack://mask-network/./packages/shared/src/UI/components/ChainBoundary/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/CopyButton/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/Icon/name2Image.ts","webpack://mask-network/./packages/shared/src/UI/components/Icon/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/ImageIcon/index.tsx","webpack://mask-network/./packages/shared/src/UI/components/PersonaAction/PersonaAction.tsx","webpack://mask-network/./packages/shared/src/UI/components/PersonaAction/PersonaImageIcon.tsx","webpack://mask-network/./packages/shared/src/UI/components/PersonaAction/PlatformAvatar.tsx","webpack://mask-network/./packages/shared/src/UI/modals/modals.ts","webpack://mask-network/./packages/shared/src/constants.tsx","webpack://mask-network/./packages/theme/src/CSSVariables/constants.ts","webpack://mask-network/./packages/theme/src/CSSVariables/vars.ts","webpack://mask-network/./packages/theme/src/Components/ActionButton/index.tsx","webpack://mask-network/./packages/theme/src/Components/LoadingBase/index.tsx","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Info.js","webpack://mask-network/./node_modules/.pnpm/@mui+icons-material@5.10.6_@mui+material@5.10.8_@types+react@18.2.21_react@0.0.0-experimental-0a360642d-20230711/node_modules/@mui/icons-material/esm/Warning.js","webpack://mask-network/./packages/theme/src/Components/Snackbar/index.tsx","webpack://mask-network/./packages/web3-hooks/base/src/useNetworks.ts","webpack://mask-network/./packages/web3-hooks/base/src/useProviderDescriptor.ts","webpack://mask-network/./packages/web3-hooks/base/src/useReverseAddress.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWallets.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWeb3Connection.ts","webpack://mask-network/./packages/web3-hooks/base/src/useWeb3Hub.ts","webpack://mask-network/./node_modules/.pnpm/copy-to-clipboard@3.3.1/node_modules/copy-to-clipboard/index.js","webpack://mask-network/./node_modules/.pnpm/toggle-selection@1.0.6/node_modules/toggle-selection/index.js","webpack://mask-network/./node_modules/.pnpm/@tanstack+react-query@4.29.25_react-dom@0.0.0-experimental-0a360642d-20230711_react@0.0.0-exp_ph45ttbltampqv75cnp6zhp25e/node_modules/@tanstack/react-query/build/lib/isRestoring.mjs"],"sourcesContent":["// This file will be virtualized in the future.\n// Currently all plugins access the same value, but we can virtualize them in the future.\n\nimport type {\n    DashboardRoutes,\n    ECKeyIdentifier,\n    NextIDPlatform,\n    PersonaIdentifier,\n    PersonaInformation,\n    PopupRoutes,\n    PopupRoutesParamsMap,\n    ProfileIdentifier,\n    SignType,\n    SocialIdentity,\n} from '@masknet/shared-base'\nimport type { Subscription } from 'use-subscription'\nimport type { IdentityResolved } from '../types.js'\nimport type { LinkedProfileDetails } from '@masknet/public-api'\n\nexport interface __UIContext__ {\n    allPersonas: Subscription<readonly PersonaInformation[]>\n    currentPersona: Subscription<PersonaIdentifier | undefined>\n    queryPersonaAvatar(\n        identifiers: readonly PersonaIdentifier[],\n    ): Promise<Map<ProfileIdentifier | PersonaIdentifier, string | undefined>>\n    queryPersonaAvatar(identifiers: undefined | PersonaIdentifier): Promise<string | undefined>\n    querySocialIdentity: (\n        platform: NextIDPlatform,\n        identity: IdentityResolved | undefined,\n    ) => Promise<SocialIdentity | undefined>\n    // DO NOT add <T> to this function, you do not test if it is T right?\n    // (e.g. receive a function to check it validate: (x: unknown) => x is T)\n    // fetchJSON<T>(validate: (x: unknown) => x is T, input: RequestInfo | URL, init?: RequestInit): Promise<T>\n    fetchJSON(input: RequestInfo | URL, init?: RequestInit): Promise<unknown>\n    queryPersonaByProfile: (id: ProfileIdentifier) => Promise<PersonaInformation | undefined>\n    /** Open Dashboard with a new window */\n    openDashboard(route?: DashboardRoutes, search?: string): Promise<void>\n    /** Open popup window */\n    openPopupWindow<T extends PopupRoutes>(\n        route: T,\n        params: T extends keyof PopupRoutesParamsMap ? PopupRoutesParamsMap[T] : undefined,\n        evenWhenWalletLocked?: boolean,\n    ): Promise<void>\n    /** Sign a message with persona (w or w/o popups) */\n    signWithPersona(type: SignType, message: unknown, identifier?: ECKeyIdentifier, silent?: boolean): Promise<string>\n    hasPaymentPassword(): Promise<boolean>\n    createPersona: () => void\n    setCurrentPersonaIdentifier: ((x?: PersonaIdentifier) => Promise<void>) | undefined\n    attachProfile:\n        | ((\n              source: ProfileIdentifier,\n              target: ProfileIdentifier | PersonaIdentifier,\n              data: LinkedProfileDetails,\n          ) => Promise<void>)\n        | undefined\n    setPluginMinimalModeEnabled: ((id: string, enabled: boolean) => Promise<void>) | undefined\n    hasHostPermission: ((origins: readonly string[]) => Promise<boolean>) | undefined\n    requestHostPermission: ((origins: readonly string[]) => Promise<boolean>) | undefined\n}\nexport let allPersonas: __UIContext__['allPersonas']\nexport let currentPersona: __UIContext__['currentPersona']\nexport let queryPersonaAvatar: __UIContext__['queryPersonaAvatar']\nexport let querySocialIdentity: __UIContext__['querySocialIdentity']\nexport let fetchJSON: __UIContext__['fetchJSON']\nexport let queryPersonaByProfile: __UIContext__['queryPersonaByProfile']\nexport let openDashboard: __UIContext__['openDashboard']\nexport let openPopupWindow: __UIContext__['openPopupWindow']\nexport let signWithPersona: __UIContext__['signWithPersona']\nexport let hasPaymentPassword: __UIContext__['hasPaymentPassword']\nexport let createPersona: __UIContext__['createPersona']\nexport let setCurrentPersonaIdentifier: __UIContext__['setCurrentPersonaIdentifier']\nexport let attachProfile: __UIContext__['attachProfile']\nexport let setPluginMinimalModeEnabled: __UIContext__['setPluginMinimalModeEnabled']\nexport let hasHostPermission: __UIContext__['hasHostPermission']\nexport let requestHostPermission: __UIContext__['requestHostPermission']\n\nexport function __setUIContext__(value: __UIContext__) {\n    ;({\n        allPersonas,\n        currentPersona,\n        queryPersonaAvatar,\n        querySocialIdentity,\n        fetchJSON,\n        queryPersonaByProfile,\n        openDashboard,\n        openPopupWindow,\n        signWithPersona,\n        hasPaymentPassword,\n        createPersona,\n        setCurrentPersonaIdentifier,\n        attachProfile,\n        setPluginMinimalModeEnabled,\n        hasHostPermission,\n        requestHostPermission,\n    } = value)\n}\n","import { useTranslation } from 'react-i18next'\nimport type { I18NFieldOrReactNode, I18NStringField } from '../types.js'\n\nexport interface PluginTransFieldRenderProps {\n    field: I18NFieldOrReactNode\n    pluginID: string\n}\nexport function PluginTransFieldRender({ pluginID, field }: PluginTransFieldRenderProps) {\n    const [t] = useTranslation()\n    if (!field) return null\n    if (typeof field === 'object' && 'fallback' in field) {\n        if (field.i18nKey) {\n            const translate = t(field.i18nKey, { ns: pluginID, nsSeparator: '%%%', defaultValue: field.fallback })\n            return <>{translate}</>\n        }\n        return <>{field.fallback}</>\n    }\n    return <>{field}</>\n}\nexport function usePluginTransField() {\n    const [t] = useTranslation()\n    return function (pluginID: string, field: I18NStringField) {\n        if (!field.i18nKey) return field.fallback\n        if (!field.i18nKey.startsWith('__')) {\n            /**\n             * This field is used in the definition of a plugin in form of\n             * { fallback: \"Text\", i18nKey: \"name\" }\n             *\n             * Which is highly not likely to be analyzed by the type system.\n             * Enforce those key to starts with __, we can exclude those keys\n             * from the unused key result to keep the functionality of the analyzer.\n             */\n            console.warn(\n                `[@masknet/plugin-infra] Plugin ${pluginID} uses i18n key ${field.i18nKey}. Please change it to __${field.i18nKey}.`,\n            )\n            return field.fallback\n        }\n        return t(field.i18nKey, { ns: pluginID, nsSeparator: '%%%', defaultValue: field.fallback })\n    }\n}\n","// This file will be virtualized in the future.\n// Currently all plugins access the same value, but we can virtualize them in the future.\n\nimport type { Subscription } from 'use-subscription'\nimport type { IdentityResolved } from '../types.js'\nimport type { NextIDPlatform, PersonaIdentifier, PostIdentifier } from '@masknet/shared-base'\n\nexport interface __SiteAdaptorContext__ {\n    lastRecognizedProfile: Subscription<IdentityResolved | undefined>\n    currentVisitingProfile: Subscription<IdentityResolved | undefined>\n    currentNextIDPlatform: NextIDPlatform | undefined\n    currentPersonaIdentifier: Subscription<PersonaIdentifier | undefined>\n    getPostURL: (identifier: PostIdentifier) => URL | null\n    share: undefined | ((text: string) => void)\n    getUserIdentity: ((useId: string) => Promise<IdentityResolved | undefined>) | undefined\n    getPostIdFromNewPostToast: (() => string) | undefined\n    postMessage: ((text: string, options?: any) => Promise<void>) | undefined\n    getSearchedKeyword: (() => string) | undefined\n    connectPersona: () => Promise<void>\n}\nexport let lastRecognizedProfile: __SiteAdaptorContext__['lastRecognizedProfile']\nexport let currentVisitingProfile: __SiteAdaptorContext__['currentVisitingProfile']\nexport let currentNextIDPlatform: NextIDPlatform | undefined\nexport let currentPersonaIdentifier: __SiteAdaptorContext__['currentPersonaIdentifier']\nexport let getPostURL: __SiteAdaptorContext__['getPostURL']\nexport let share: __SiteAdaptorContext__['share']\nexport let getUserIdentity: __SiteAdaptorContext__['getUserIdentity']\nexport let getPostIdFromNewPostToast: __SiteAdaptorContext__['getPostIdFromNewPostToast']\nexport let postMessage: __SiteAdaptorContext__['postMessage']\nexport let getSearchedKeyword: __SiteAdaptorContext__['getSearchedKeyword']\nexport let connectPersona: __SiteAdaptorContext__['connectPersona']\nexport function __setSiteAdaptorContext__(value: __SiteAdaptorContext__) {\n    ;({\n        lastRecognizedProfile,\n        currentVisitingProfile,\n        currentNextIDPlatform,\n        currentPersonaIdentifier,\n        getPostURL,\n        share,\n        getUserIdentity,\n        getPostIdFromNewPostToast,\n        postMessage,\n        getSearchedKeyword,\n        connectPersona,\n    } = value)\n}\n","import {\n    type ProfileIdentifier,\n    type PersonaIdentifier,\n    type PersonaInformation,\n    type ProfileInformation,\n    Identifier,\n} from '../index.js'\n\nexport function formatPersonaFingerprint(fingerprint: string, size?: number) {\n    if (!size) {\n        if (fingerprint.length <= 26) return fingerprint\n        return `${fingerprint.slice(0, 12)}...${fingerprint.slice(-9)}`\n    }\n\n    if (size <= 0) return fingerprint\n    return `${fingerprint.slice(0, Math.max(0, 2 + size))}...${fingerprint.slice(-size)}`\n}\n\nexport const MAX_PERSONA_LIMIT = 10\n\nexport const MAX_PERSONA_NAME_LENGTH = 12\n\nexport const formatPersonaName = (nickname?: string) => {\n    if (!nickname) return ''\n    if (nickname.length < MAX_PERSONA_NAME_LENGTH) return nickname\n\n    return `${nickname.slice(0, 12)}...`\n}\n\nfunction isSameIdentity<T extends Identifier>(identities: Array<T | { identifier: T } | undefined>) {\n    return identities.reduce((previousValue, T2, key) => {\n        if (key === 0) return true\n        const T1 = identities[key - 1]\n        if (!T2 || !T1) return false\n\n        const i1IdentifierText = (T1 instanceof Identifier ? T1 : T1.identifier).toText()\n        const i2IdentifierText = (T2 instanceof Identifier ? T2 : T2.identifier).toText()\n\n        return previousValue && i1IdentifierText.toLowerCase() === i2IdentifierText.toLowerCase()\n    }, false)\n}\n\nexport function isSamePersona(...personas: Array<PersonaIdentifier | PersonaInformation | undefined>) {\n    return isSameIdentity(personas)\n}\n\nexport function isSameProfile(...profiles: Array<ProfileIdentifier | ProfileInformation | undefined>) {\n    return isSameIdentity(profiles)\n}\n","import { Icons } from '@masknet/icons'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Typography } from '@mui/material'\nimport type { BoxProps } from '@mui/system'\nimport { memo } from 'react'\n\nconst useStyles = makeStyles()((theme) => ({\n    alert: {\n        display: 'flex',\n        borderRadius: 4,\n        padding: 12,\n        backgroundColor: theme.palette.maskColor.bg,\n        fontSize: 14,\n        alignItems: 'center',\n        color: theme.palette.maskColor.main,\n        backdropFilter: 'blur(5px)',\n        gap: 10,\n    },\n}))\ninterface Props extends BoxProps {\n    open?: boolean\n    onClose?: () => void\n}\n\nexport const Alert = memo(function Alert({ className, children, open, onClose, ...rest }: Props) {\n    const { classes, cx } = useStyles()\n\n    if (!open) return null\n\n    return (\n        <Box className={cx(classes.alert, className)} {...rest}>\n            <Icons.Info size={20} />\n            <Typography fontSize={14}>{children}</Typography>\n            <Icons.Close size={20} onClick={onClose} />\n        </Box>\n    )\n})\n","import { useSubscription } from 'use-subscription'\nimport { FALSE, TRUE, type NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useAllowTestnet<T extends NetworkPluginID>(pluginID?: T) {\n    const { Settings } = useWeb3State(pluginID)\n    return useSubscription(Settings?.allowTestnet ?? (process.env.NODE_ENV === 'development' ? TRUE : FALSE))\n}\n","import React, { memo } from 'react'\nimport { useAsyncFn } from 'react-use'\nimport { delay } from '@masknet/kit'\nimport { Box } from '@mui/material'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles, ShadowRootTooltip, ActionButton, useCustomSnackbar } from '@masknet/theme'\nimport {\n    useNetworkContext,\n    useChainContext,\n    useNetworkDescriptor,\n    useAllowTestnet,\n    useChainIdValid,\n    RevokeChainContextProvider,\n    useWeb3Others,\n    useWeb3Connection,\n} from '@masknet/web3-hooks-base'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { WalletIcon } from '../WalletIcon/index.js'\nimport { type ActionButtonPromiseProps } from '../ActionButton/index.js'\nimport { useSharedTrans } from '../../../locales/index.js'\nimport { SelectProviderModal } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    tooltip: {\n        background: theme.palette.common.black,\n        color: theme.palette.common.white,\n        borderRadius: 4,\n        padding: 10,\n        maxWidth: 260,\n    },\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    connectWallet: {\n        '& > .MuiButton-startIcon': {\n            lineHeight: 1,\n        },\n    },\n}))\n\nexport interface ChainBoundaryProps<T extends NetworkPluginID> extends withClasses<'switchButton'> {\n    /** The expected network plugin ID */\n    expectedPluginID: T\n    /** The expected sub-network under the network plugin */\n    expectedChainId: Web3Helper.Definition[T]['ChainId']\n    /** Judge the network is available for children components */\n    predicate?: (actualPluginID: NetworkPluginID, actualChainId: Web3Helper.Definition[T]['ChainId']) => boolean\n    expectedAccount?: string\n    className?: string\n    hiddenConnectButton?: boolean\n    switchChainWithoutPopup?: boolean\n    forceShowingWrongNetworkButton?: boolean\n    children?: React.ReactNode\n    ActionButtonPromiseProps?: Partial<ActionButtonPromiseProps>\n    actualNetworkPluginID?: T\n    switchText?: string\n    disableConnectWallet?: boolean\n}\n\nexport function ChainBoundaryWithoutContext<T extends NetworkPluginID>(props: ChainBoundaryProps<T>) {\n    const {\n        expectedPluginID,\n        expectedChainId,\n        expectedAccount,\n        actualNetworkPluginID,\n        switchText,\n        forceShowingWrongNetworkButton = false,\n        disableConnectWallet = false,\n        predicate = (actualPluginID, actualChainId) =>\n            actualPluginID === expectedPluginID && actualChainId === expectedChainId,\n    } = props\n\n    const t = useSharedTrans()\n    const { classes } = useStyles(undefined, { props })\n\n    const { pluginID: actualPluginID } = useNetworkContext(actualNetworkPluginID)\n\n    const Web3 = useWeb3Connection(actualPluginID)\n\n    const { showSnackbar } = useCustomSnackbar()\n    const {\n        account,\n        chainId: actualChainId,\n        providerType: actualProviderType,\n    } = useChainContext({ account: expectedAccount })\n\n    const expectedOthers = useWeb3Others(expectedPluginID)\n    const expectedAllowTestnet = useAllowTestnet(expectedPluginID)\n\n    const chainIdValid = useChainIdValid(actualPluginID)\n\n    const expectedChainName = expectedOthers.chainResolver.chainName(expectedChainId)\n    const expectedNetworkDescriptor = useNetworkDescriptor(expectedPluginID, expectedChainId)\n    const expectedChainAllowed = expectedOthers.chainResolver.isValidChainId(expectedChainId, expectedAllowTestnet)\n\n    const isPluginIDMatched = actualPluginID === expectedPluginID\n    const isMatched = predicate(actualPluginID, actualChainId)\n\n    const [{ loading }, onSwitchChain] = useAsyncFn(async () => {\n        try {\n            if (actualProviderType !== ProviderType.WalletConnect || isMatched || !expectedChainAllowed) return\n            await Web3.switchChain?.(expectedChainId)\n            await delay(1500)\n\n            return 'complete'\n        } catch (error) {\n            if (error instanceof Error) {\n                if (error.message === 'Chain currently not supported' || error.message === 'Invalid Request') {\n                    showSnackbar(t.plugin_wallet_switch_network_title(), {\n                        processing: false,\n                        variant: 'error',\n                        message: t.plugin_wallet_unsupported_chain({ network: expectedChainName ?? '' }),\n                        autoHideDuration: 5000,\n                    })\n                } else {\n                    showSnackbar(t.plugin_wallet_switch_network_title(), {\n                        processing: false,\n                        variant: 'error',\n                        message: t.plugin_wallet_switch_chain_failed(),\n                        autoHideDuration: 5000,\n                    })\n                }\n            }\n            return 'failed'\n        }\n    }, [expectedChainAllowed, isMatched, expectedChainId, actualProviderType, Web3, expectedChainName])\n\n    const renderBox = (children?: React.ReactNode, tips?: string) => {\n        return (\n            <ShadowRootTooltip\n                title={tips ?? ''}\n                classes={{ tooltip: classes.tooltip, arrow: classes.arrow }}\n                arrow\n                placement=\"top\">\n                <Box className={props.className} display=\"flex\" flexDirection=\"column\" width=\"100%\">\n                    {children}\n                </Box>\n            </ShadowRootTooltip>\n        )\n    }\n\n    if (!chainIdValid && !expectedChainAllowed && forceShowingWrongNetworkButton)\n        return renderBox(\n            !props.hiddenConnectButton ? (\n                <ActionButton\n                    fullWidth\n                    startIcon={<Icons.Wallet size={18} />}\n                    onClick={() => SelectProviderModal.open()}\n                    {...props.ActionButtonPromiseProps}>\n                    {t.plugin_wallet_wrong_network()}\n                </ActionButton>\n            ) : null,\n        )\n\n    // No wallet connected\n    if (!account && !disableConnectWallet)\n        return renderBox(\n            !props.hiddenConnectButton ? (\n                <ActionButton\n                    className={classes.connectWallet}\n                    fullWidth\n                    startIcon={<Icons.Wallet size={18} />}\n                    onClick={() => SelectProviderModal.open()}\n                    {...props.ActionButtonPromiseProps}>\n                    {t.plugin_wallet_connect_a_wallet()}\n                </ActionButton>\n            ) : null,\n        )\n\n    // Network mismatch\n    if (!isPluginIDMatched) {\n        return renderBox(\n            <ActionButton\n                fullWidth\n                className={classes.switchButton}\n                disabled={actualProviderType === ProviderType.WalletConnect}\n                startIcon={<WalletIcon mainIcon={expectedNetworkDescriptor?.icon} size={18} />}\n                sx={props.ActionButtonPromiseProps?.sx}\n                onClick={() => SelectProviderModal.open()}\n                {...props.ActionButtonPromiseProps}>\n                {t.plugin_wallet_change_wallet()}\n            </ActionButton>,\n            actualProviderType === ProviderType.WalletConnect\n                ? t.plugin_wallet_connect_tips()\n                : t.plugin_wallet_not_support_network(),\n        )\n    }\n\n    // Provider is Wallet Connect\n    if (actualProviderType === ProviderType.WalletConnect && !isMatched) {\n        return renderBox(\n            <ActionButton\n                startIcon={<WalletIcon mainIcon={expectedNetworkDescriptor?.icon} size={18} />}\n                onClick={onSwitchChain}\n                loading={loading}\n                className={classes.switchButton}\n                sx={props.ActionButtonPromiseProps?.sx}\n                {...props.ActionButtonPromiseProps}>\n                {switchText ?? t.plugin_wallet_switch_network({ network: expectedChainName ?? '' })}\n            </ActionButton>,\n            t.plugin_wallet_connect_tips(),\n        )\n    }\n\n    return props.children\n}\n\nexport const ChainBoundary = memo(function <T extends NetworkPluginID>(props: ChainBoundaryProps<T>) {\n    return (\n        <RevokeChainContextProvider>\n            <ChainBoundaryWithoutContext {...props} />\n        </RevokeChainContextProvider>\n    )\n})\n\nChainBoundary.displayName = 'ChainBoundary'\n","import { Icons, type GeneratedIconProps } from '@masknet/icons'\nimport { ShadowRootTooltip, makeStyles } from '@masknet/theme'\nimport { Link, type LinkProps } from '@mui/material'\nimport { memo, useCallback, useRef, useState, type MouseEvent } from 'react'\nimport { useCopyToClipboard } from 'react-use'\nimport { useSharedTrans } from '../../../index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    copy: {\n        '&:hover': {\n            color: theme.palette.maskColor.main,\n        },\n    },\n}))\n\nexport interface CopyButtonProps\n    extends Omit<LinkProps<'button'>, 'color'>,\n        Pick<GeneratedIconProps, 'size' | 'color'> {\n    title?: string\n    text: string\n    /** defaults to 'Copied' */\n    successText?: string\n    /** stop event propagation and prevent default */\n    scoped?: boolean\n}\n\nexport const CopyButton = memo<CopyButtonProps>(function CopyButton({\n    text,\n    title,\n    successText,\n    size,\n    color,\n    scoped = true,\n    className,\n    ...props\n}) {\n    const t = useSharedTrans()\n    const { classes, cx, theme } = useStyles(undefined, { props })\n\n    const [, copyToClipboard] = useCopyToClipboard()\n    const [copied, setCopied] = useState(false)\n    const [active, setActive] = useState(false)\n    const timerRef = useRef<ReturnType<typeof setTimeout>>()\n\n    const handleCopy = useCallback(\n        async (ev: MouseEvent<HTMLAnchorElement>) => {\n            if (scoped) {\n                ev.stopPropagation()\n                ev.preventDefault()\n            }\n            copyToClipboard(text)\n            setCopied(true)\n            setActive(true)\n            clearTimeout(timerRef.current)\n            timerRef.current = setTimeout(setActive, 1500, false)\n        },\n        [text, scoped],\n    )\n\n    const tooltipTitle = copied ? successText ?? t.copied() : title ?? t.copy()\n    const iconProps = { size, color }\n\n    return (\n        <ShadowRootTooltip open={active} title={tooltipTitle} placement=\"top\" disableInteractive arrow>\n            <Link\n                underline=\"none\"\n                component=\"button\"\n                onClick={handleCopy}\n                color=\"inherit\"\n                {...props}\n                fontSize={0}\n                className={cx(classes.root, className)}>\n                {active ? (\n                    <Icons.Check {...iconProps} color={theme.palette.maskColor.success} />\n                ) : (\n                    <Icons.Copy {...iconProps} className={classes.copy} />\n                )}\n            </Link>\n        </ShadowRootTooltip>\n    )\n})\n","const DEFAULT_IMAGES = [\n    new URL('./Aura1.svg', import.meta.url).toString(),\n    new URL('./Aura2.svg', import.meta.url).toString(),\n    new URL('./Aura3.svg', import.meta.url).toString(),\n    new URL('./Aura4.svg', import.meta.url).toString(),\n    new URL('./Aura5.svg', import.meta.url).toString(),\n    new URL('./Aura6.svg', import.meta.url).toString(),\n    new URL('./Aura7.svg', import.meta.url).toString(),\n    new URL('./Aura8.svg', import.meta.url).toString(),\n    new URL('./Aura9.svg', import.meta.url).toString(),\n    new URL('./Aura10.svg', import.meta.url).toString(),\n    new URL('./Aura11.svg', import.meta.url).toString(),\n    new URL('./Aura12.svg', import.meta.url).toString(),\n]\n\nexport const name2Image = (name?: string): string => {\n    if (!name) return DEFAULT_IMAGES[0]\n    let sum = 0\n    for (let i = 0; i < name.length; i += 1) {\n        sum += name.charCodeAt(i)\n    }\n\n    return DEFAULT_IMAGES[sum % DEFAULT_IMAGES.length]\n}\n","import { memo, useState } from 'react'\nimport { Avatar, type AvatarProps, useTheme } from '@mui/material'\nimport { makeStyles } from '@masknet/theme'\nimport { name2Image } from './name2Image.js'\n\nconst useStyles = makeStyles<Pick<IconProps, 'size'>>()((theme, { size }) => ({\n    icon: {\n        margin: 0,\n        borderRadius: '50%',\n        color: `${theme.palette.maskColor.dark} !important`,\n        backgroundSize: 'cover',\n        height: size,\n        width: size,\n    },\n}))\n\nexport interface IconProps extends AvatarProps {\n    color?: string\n    size?: number | string\n    name?: string\n    label?: string\n    logoURL?: string\n}\n\nexport const Icon = memo<IconProps>(function Icon(props) {\n    const { logoURL, size, color, name, label, className, ...rest } = props\n    const [failed, setFailed] = useState(false)\n\n    const defaultBackgroundImage = name2Image(name)\n    const { classes, cx } = useStyles({ size })\n    const theme = useTheme()\n\n    const showImage = logoURL && !failed\n\n    return (\n        <Avatar\n            className={cx(classes.icon, className)}\n            src={logoURL}\n            {...rest}\n            imgProps={{\n                onError: (event) => {\n                    setFailed(true)\n                    rest.imgProps?.onError?.(event)\n                },\n                ...rest.imgProps,\n            }}\n            sx={{\n                ...rest.sx,\n                backgroundImage: showImage ? undefined : `url(\"${defaultBackgroundImage}\")`,\n                backgroundColor: showImage ? color ?? theme.palette.common.white : undefined,\n            }}>\n            {label ?? name?.slice(0, 1).toUpperCase() ?? '?'}\n        </Avatar>\n    )\n})\n\nIcon.displayName = 'Icon'\n","import { memo, type HTMLProps, type CSSProperties } from 'react'\n\nexport interface ImageIconProps extends HTMLProps<HTMLImageElement> {\n    size?: number\n    icon?: string\n    iconFilterColor?: string\n}\n\nexport const ImageIcon = memo(function ImageIcon({ size = 48, icon, iconFilterColor, ...rest }: ImageIconProps) {\n    const style: CSSProperties | undefined = iconFilterColor\n        ? {\n              filter: `drop-shadow(0px 6px 12px ${iconFilterColor})`,\n              backdropFilter: 'blur(16px)',\n              ...rest.style,\n          }\n        : rest.style\n\n    return <img height={size} width={size} src={icon?.toString()} {...rest} style={style} />\n})\n","import type { IdentityResolved } from '@masknet/plugin-infra'\nimport type { PersonaInformation } from '@masknet/shared-base'\nimport { formatPersonaFingerprint } from '@masknet/shared-base'\nimport { makeStyles } from '@masknet/theme'\nimport { Box, Typography } from '@mui/material'\nimport { type PropsWithChildren } from 'react'\nimport { CopyButton } from '../CopyButton/index.js'\nimport { PlatformAvatar } from './PlatformAvatar.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    bottomFixed: {\n        width: '100%',\n        minHeight: 36,\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: 16,\n        boxShadow: theme.palette.shadow.popup,\n    },\n    linkIcon: {\n        marginRight: theme.spacing(1),\n        color: theme.palette.maskColor.second,\n        cursor: 'pointer',\n    },\n    personaKey: {\n        fontSize: '12px',\n        fontWeight: '400',\n        color: theme.palette.maskColor.third,\n    },\n}))\n\ninterface PersonaActionProps extends PropsWithChildren {\n    currentPersona?: PersonaInformation\n    currentVisitingProfile?: IdentityResolved\n    avatar?: string\n    classes?: {\n        bottomFixed: string\n    }\n}\n\nexport function PersonaAction(props: PersonaActionProps) {\n    const { classes } = useStyles(undefined, { props })\n    const { currentPersona, avatar, children } = props\n\n    return (\n        <div className={classes.bottomFixed}>\n            <Box display=\"flex\">\n                <PlatformAvatar networkIcon={avatar} size={36} />\n                <div style={{ marginLeft: '4px' }}>\n                    <Typography style={{ fontSize: '14px', fontWeight: '700', display: 'flex' }}>\n                        {currentPersona?.nickname}\n                    </Typography>\n                    <Box sx={{ display: 'flex' }}>\n                        <Typography className={classes.personaKey}>\n                            {currentPersona?.identifier\n                                ? formatPersonaFingerprint(currentPersona.identifier.rawPublicKey, 4)\n                                : '--'}\n                        </Typography>\n                        <CopyButton\n                            size={16}\n                            text={currentPersona?.identifier.rawPublicKey ?? ''}\n                            className={classes.linkIcon}\n                        />\n                    </Box>\n                </div>\n            </Box>\n            {children}\n        </div>\n    )\n}\n","import { makeStyles } from '@masknet/theme'\n\nconst useStyles = makeStyles()((theme) => {\n    return {\n        icon: {\n            borderRadius: '50%',\n        },\n    }\n})\n\nexport interface PersonaImageIconProps extends withClasses<'icon'> {\n    size?: number\n    icon?: string\n    borderRadius?: string\n}\n\nexport function PersonaImageIcon(props: PersonaImageIconProps) {\n    const { size = 48, icon, borderRadius = '50%' } = props\n    const { classes } = useStyles(undefined, { props })\n    return <img height={size} width={size} src={icon?.toString()} className={classes.icon} style={{ borderRadius }} />\n}\n","import { makeStyles } from '@masknet/theme'\nimport { Icons } from '@masknet/icons'\nimport { PersonaImageIcon } from './PersonaImageIcon.js'\nimport { memo } from 'react'\n\ninterface StyleProps {\n    size: number\n    isBorderColorNotDefault?: boolean\n}\n\nconst useStyles = makeStyles<StyleProps>()((theme, props) => ({\n    root: {\n        position: 'relative',\n        alignSelf: 'center',\n        display: 'flex',\n        height: props.size,\n        width: props.size,\n    },\n    mainIcon: {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n    },\n    badgeIcon: {\n        position: 'absolute',\n        right: -2,\n        bottom: -2,\n    },\n}))\n\ninterface PlatformAvatarProps extends withClasses<'networkIcon' | 'providerIcon'> {\n    size?: number\n    badgeSize?: number\n    inverse?: boolean\n    networkIcon?: string\n    providerIcon?: string\n    isBorderColorNotDefault?: boolean\n}\n\nexport const PlatformAvatar = memo(function PlatformAvatar(props: PlatformAvatarProps) {\n    const { size = 24, badgeSize = 14, inverse = false, networkIcon, providerIcon } = props\n    const { classes, cx } = useStyles(\n        {\n            size: badgeSize > size ? badgeSize : size,\n            isBorderColorNotDefault: props.isBorderColorNotDefault,\n        },\n        { props },\n    )\n\n    // #region icon names\n    const names = inverse\n        ? [cx(classes.badgeIcon, classes.providerIcon), cx(classes.mainIcon, classes.networkIcon)]\n        : [cx(classes.mainIcon, classes.networkIcon), cx(classes.badgeIcon, classes.providerIcon)]\n    // #endregion\n    return (\n        <div\n            className={classes.root}\n            style={{\n                height: size,\n                width: size,\n            }}>\n            {networkIcon ? (\n                <PersonaImageIcon\n                    classes={{\n                        icon: names[0],\n                    }}\n                    size={size}\n                    icon={networkIcon}\n                />\n            ) : (\n                <Icons.Masks\n                    size={size}\n                    sx={{\n                        display: 'inline-block',\n                        borderRadius: '50%',\n                    }}\n                />\n            )}\n            {providerIcon ? (\n                <PersonaImageIcon\n                    classes={{\n                        icon: names[1],\n                    }}\n                    size={badgeSize}\n                    icon={providerIcon}\n                />\n            ) : null}\n        </div>\n    )\n})\n","import { SingletonModal } from '@masknet/shared-base'\nimport type { SelectProviderModalOpenProps, SelectProviderModalCloseProps } from './SelectProviderModal/index.js'\nimport type { WalletConnectQRCodeOpenProps } from './WalletConnectQRCodeModal/index.js'\nimport type { WalletRiskWarningModalOpenProps } from './WalletRiskWarningModal/index.js'\nimport type { ConnectWalletModalOpenProps, ConnectWalletModalCloseProps } from './ConnectWalletModal/index.js'\nimport type { LeavePageConfirmModalOpenProps } from './LeavePageConfirmModal/index.js'\nimport type {\n    ApplicationBoardModalOpenProps,\n    ApplicationBoardSettingsModalOpenProps,\n} from './ApplicationBoardModal/index.js'\nimport type { GasSettingModalOpenOrCloseProps } from './GasSettingModal/index.js'\nimport type { ConfirmModalCloseProps, ConfirmModalOpenProps } from './ConfirmModal/index.js'\nimport type { ConfirmDialogOpenProps } from './ConfirmDialog/index.js'\nimport type { TransactionConfirmModalOpenProps } from './TokenTransactionConfirmModal/index.js'\nimport type { SelectNonFungibleContractModalOpenProps } from './SelectNonFungibleContractModal/index.js'\nimport type {\n    SelectFungibleTokenModalOpenProps,\n    SelectFungibleTokenModalCloseProps,\n} from './SelectFungibleTokenModal/index.js'\nimport type {\n    SelectGasSettingsModalCloseProps,\n    SelectGasSettingsModalOpenProps,\n} from './SelectAdvancedSettingsDialog/index.js'\nimport type { AddCollectiblesModalCloseProps, AddCollectiblesModalOpenProps } from './AddCollectiblesModal/index.js'\nimport type { PersonaSelectPanelModalOpenProps } from './PersonaSelectPanelModal/index.js'\nimport type { ShareSelectNetworkModalOpenProps } from './ShareSelectNetwork/index.js'\n\nexport const WalletConnectQRCodeModal = new SingletonModal<WalletConnectQRCodeOpenProps>()\nexport const SelectProviderModal = new SingletonModal<SelectProviderModalOpenProps, SelectProviderModalCloseProps>()\nexport const WalletStatusModal = new SingletonModal()\nexport const WalletRiskWarningModal = new SingletonModal<WalletRiskWarningModalOpenProps>()\nexport const ConnectWalletModal = new SingletonModal<ConnectWalletModalOpenProps, ConnectWalletModalCloseProps>()\nexport const LeavePageConfirmModal = new SingletonModal<LeavePageConfirmModalOpenProps>()\nexport const ApplicationBoardModal = new SingletonModal<ApplicationBoardModalOpenProps>()\nexport const ApplicationBoardSettingsModal = new SingletonModal<ApplicationBoardSettingsModalOpenProps>()\nexport const GasSettingModal = new SingletonModal<GasSettingModalOpenOrCloseProps, GasSettingModalOpenOrCloseProps>()\nexport const TransactionConfirmModal = new SingletonModal<TransactionConfirmModalOpenProps>()\nexport const TransactionSnackbar = new SingletonModal()\nexport const ConfirmModal = new SingletonModal<ConfirmModalOpenProps, ConfirmModalCloseProps>()\nexport const ConfirmDialog = new SingletonModal<ConfirmDialogOpenProps, boolean>()\nexport const SelectNonFungibleContractModal = new SingletonModal<SelectNonFungibleContractModalOpenProps>()\nexport const SelectGasSettingsModal = new SingletonModal<\n    SelectGasSettingsModalOpenProps,\n    SelectGasSettingsModalCloseProps\n>()\nexport const AddCollectiblesModal = new SingletonModal<AddCollectiblesModalOpenProps, AddCollectiblesModalCloseProps>()\nexport const SelectFungibleTokenModal = new SingletonModal<\n    SelectFungibleTokenModalOpenProps,\n    SelectFungibleTokenModalCloseProps\n>()\n\nexport const PersonaSelectPanelModal = new SingletonModal<PersonaSelectPanelModalOpenProps>()\n\nexport const ShareSelectNetworkModal = new SingletonModal<ShareSelectNetworkModalOpenProps>()\n\nexport { ApplicationSettingTabs } from './ApplicationBoardModal/ApplicationBoardDialog.js'\n","import type { ReactNode } from 'react'\nimport { Icons, type GeneratedIcon } from '@masknet/icons'\nimport { EnhanceableSite } from '@masknet/shared-base'\n\nexport const SOCIAL_MEDIA_ICON_MAPPING: Record<EnhanceableSite | string, ReactNode> = {\n    [EnhanceableSite.Twitter]: <Icons.TwitterX />,\n    [EnhanceableSite.Facebook]: <Icons.FacebookColored />,\n    [EnhanceableSite.Minds]: <Icons.Minds />,\n    [EnhanceableSite.Instagram]: <Icons.InstagramColored />,\n    [EnhanceableSite.OpenSea]: <Icons.OpenSeaColored />,\n    [EnhanceableSite.Mirror]: <Icons.Mirror />,\n    [EnhanceableSite.Localhost]: null,\n}\n\nexport const SOCIAL_MEDIA_ROUND_ICON_MAPPING: Record<EnhanceableSite | string, GeneratedIcon | null> = {\n    [EnhanceableSite.Twitter]: Icons.TwitterXRound,\n    [EnhanceableSite.Facebook]: Icons.FacebookRound,\n    [EnhanceableSite.Minds]: Icons.MindsRound,\n    [EnhanceableSite.Instagram]: Icons.InstagramRoundColored,\n    [EnhanceableSite.OpenSea]: Icons.OpenSeaColored,\n    [EnhanceableSite.Mirror]: Icons.Mirror,\n    [EnhanceableSite.Localhost]: null,\n}\n\nexport enum RSS3_NFT_SITE_KEY {\n    TWITTER = '_nfts',\n    FACEBOOK = '_facebook_nfts',\n    INSTAGRAM = '_instagram_nfts',\n}\n\nexport const EnhanceableSite_RSS3_NFT_SITE_KEY_map: Partial<Record<EnhanceableSite, RSS3_NFT_SITE_KEY>> = {\n    [EnhanceableSite.Facebook]: RSS3_NFT_SITE_KEY.FACEBOOK,\n    [EnhanceableSite.Twitter]: RSS3_NFT_SITE_KEY.TWITTER,\n    [EnhanceableSite.Instagram]: RSS3_NFT_SITE_KEY.INSTAGRAM,\n}\n\nexport const PERSONA_AVATAR_DB_NAMESPACE = 'com.maskbook.persona.avatar.storage'\n\nexport enum PopupHomeTabType {\n    SocialAccounts = 'Social Accounts',\n    ConnectedWallets = 'Connected Wallets',\n}\n","export const LightColor = {\n    bg: '##F9F9F9',\n    primary: '#1c68f3',\n    primaryContrastText: '#ffffff',\n    background: '#FFFFFF',\n    secondary: '#e8f0fe',\n    secondaryContrastText: '#1c68f3',\n    input: '#F6F6F8',\n    primaryBackground: '#ffffff',\n    primaryBackground2: '#FBFBFC',\n    secondaryBackground: '#f9fafa',\n    lightBackground: '#F9FAFA',\n    mainBackground: '#ffffff',\n    suspensionBackground: 'rgba(249, 250, 250, 0.8)',\n    normalBackground: '#F3F3F4',\n    twitterBackground: '#F7F9FA',\n    twitterBackgroundHover: '#EFF1F2',\n    twitterInputBackground: '#F6F8F8',\n    twitterButton: '#111418',\n    twitterButtonText: '#ffffff',\n    twitterBlue: '#1C68F3',\n    twitterBorderLine: '#EDF1F2',\n    twitterSecond: '#7B8192',\n    twitterMain: '#0F1419',\n    twitterBottom: '#ffffff',\n    twitterInfoBackground: '#AFC3E1',\n    twitterInfo: '#8CA3C7',\n    twitterBg: '#F6F8F8',\n    twitterTooltipBg: 'rgba(0,0,0,.6)',\n    twitterInput: '#EDF1F2',\n    twitterLine: '#EBEEF0',\n    redMain: '#ff5f5f',\n    redLight: '#ffafaf',\n    redContrastText: '#ffffff',\n\n    greenMain: '#3DC233',\n    greenLight: '#e6f6f0',\n\n    orangeMain: '#ffb915',\n    orangeLight: '#faf0d8',\n\n    iconLight: '#a6a9b6',\n\n    divider: '#eff3f4',\n\n    border: '#F3F3F4',\n    borderSecondary: '#536471',\n\n    textPrimary: '#111432',\n    textSecondary: '#7b8192',\n\n    secondaryInfoText: '#AFC3E1',\n    normalText: '#7B8192',\n    normalTextLight: 'rgba(255, 255, 255, 0.8)',\n    infoBackground: 'rgba(175, 195, 225, 0.15)',\n    success: '#60DFAB',\n    warning: '#FFB915',\n    blue: '#1C68F3',\n    textLink: '#1C68F3',\n    lineLight: '#E4E8F1',\n    lineLighter: '#E9E9EA',\n    textLight: '#A6A9B6',\n    lightestBackground: '#FFFFFF',\n    linkText: '#1C68F3',\n    twitter: '#2CA4EF',\n    facebook: '#4267B2',\n    white: '#ffffff',\n    bottom: '#F9FAFA',\n    main: '#1C68F3',\n    errorBackground: 'rgba(255, 95, 95, 0.15)',\n    tooltipBackground: '#ffffff',\n    warningBackground: 'rgba(255, 185, 21, 0.1)',\n    cyberconnectPrimary: '#000000',\n    errorPlugin: '#FF3545',\n    buttonPluginBackground: '#07101B',\n    textPluginColor: '#07101B',\n    buttonPluginColor: '#FFFFFF',\n}\nexport const DarkColor: typeof LightColor = {\n    bg: '#1C1C1C',\n    primary: '#1c68f3',\n    primaryContrastText: '#ffffff',\n    background: '#15171A',\n    secondary: '#242e57',\n    secondaryContrastText: '#ffffff',\n    input: '#282B49',\n    primaryBackground: '#212442',\n    primaryBackground2: '#212442',\n    secondaryBackground: '#252846',\n    lightBackground: '#2E314F',\n    mainBackground: '#111432',\n    suspensionBackground: 'rgba(27, 30, 60, 0.8)',\n    normalBackground: '#262947',\n    twitterInputBackground: '#17191D',\n    twitterBackground: '#17191D',\n    twitterBackgroundHover: '#17191D',\n    twitterButton: '#EFF3F4',\n    twitterButtonText: '#0F1419',\n    twitterBlue: '#4989FF',\n    twitterBorderLine: '#2F3336',\n    twitterInput: '#1D2023',\n    twitterSecond: '#636B72',\n    twitterMain: '#D9D9D9',\n    twitterBottom: '#000000',\n    twitterInfoBackground: '#AFC3E1',\n    twitterInfo: '#8CA3C7',\n    twitterLine: '#2F3336',\n    twitterBg: '#15171A',\n    twitterTooltipBg: 'rgba(91,112,131,.6)',\n    redMain: '#ff5f5f',\n    redLight: '#46304a',\n    redContrastText: '#ffffff',\n\n    greenMain: '#3DC233',\n    greenLight: '#314457',\n\n    orangeMain: '#ffb915',\n    orangeLight: '#463e3f',\n\n    iconLight: '#a6a9b6',\n\n    divider: '#3e455e',\n\n    border: '#3E455E',\n    borderSecondary: '#6e767d',\n\n    // TODO: ?\n    textPrimary: '#ffffff',\n    // TODO: ?\n    textSecondary: 'ghostwhite',\n\n    secondaryInfoText: '#AFC3E1',\n    normalText: 'rgba(255, 255, 255, 0.8)',\n    normalTextLight: 'rgba(255, 255, 255, 0.8)',\n\n    infoBackground: 'rgba(175, 195, 225, 0.15)',\n    success: '#60DFAB',\n    warning: '#FFB915',\n    blue: '#1C68F3',\n    textLink: '#ffffff',\n    lineLight: '#32365B',\n    lineLighter: '#32365B',\n    textLight: '#A6A9B6',\n    lightestBackground: '#212422',\n    linkText: '#ffffff',\n    twitter: '#2CA4EF',\n    facebook: '#4267B2',\n    white: '#ffffff',\n    bottom: '#000000',\n    main: '#D4D4D4',\n    errorBackground: 'rgba(255, 95, 95, 0.1)',\n    tooltipBackground: '#1A1D20',\n    warningBackground: 'rgba(255, 185, 21, 0.1)',\n    cyberconnectPrimary: '#ffffff',\n    errorPlugin: '#FF3545',\n    buttonPluginBackground: '#07101B',\n    textPluginColor: '#07101B',\n    buttonPluginColor: '#FFFFFF',\n}\nexport type Color = typeof LightColor\n","import type { Theme } from '@mui/material'\nimport { kebabCase } from 'lodash-es'\nimport { LightColor, DarkColor } from './constants.js'\n\nexport function getMaskColor(theme: Theme) {\n    if (theme.palette.mode === 'dark') return DarkColor\n    return LightColor\n}\nexport type MaskCSSVariableColor = string & {\n    /** Append alpha channel to the original color */\n    alpha(alpha: number): string\n} & ((defaultValue?: string) => string)\n\nfunction set(key: string | symbol) {\n    if (typeof key === 'symbol') return undefined\n    const cssVar = kebabCase(key)\n    function value(defaultValue?: string) {\n        // it might be an object when used in styled components.\n        if (typeof defaultValue !== 'string') defaultValue = undefined\n        const x = `var(--mask-${cssVar}${defaultValue ? ', ' + defaultValue : ''})`\n        return x\n    }\n    Object.assign(value, {\n        [Symbol.toPrimitive]: () => `var(--mask-${cssVar})`,\n        alpha: (alpha: number) => `rgba(var(--mask-${cssVar}-fragment), ${alpha})`,\n    })\n    Object.defineProperty(MaskColorVar, key, { configurable: true, enumerable: true, value })\n    return value\n}\n/**\n * @deprecated Use theme.palette.maskColor\n */\nexport const MaskColorVar: Record<keyof typeof LightColor, MaskCSSVariableColor> = {\n    __proto__: new Proxy(\n        {},\n        {\n            get: (_, p) => set(p),\n            getOwnPropertyDescriptor: (_, p) => {\n                set(p)\n                return Object.getOwnPropertyDescriptor(MaskColorVar, p)\n            },\n        },\n    ),\n} as any\n","import { Box, Button } from '@mui/material'\nimport type { ButtonProps } from '@mui/material/Button'\nimport { LoadingBase } from '../LoadingBase/index.js'\nimport { makeStyles } from '../../UIHelper/index.js'\n\nexport interface ActionButtonProps extends ButtonProps {\n    width?: number | string\n    loading?: boolean\n}\n\nconst useStyles = makeStyles()({\n    loading: {\n        ['& > *']: {\n            opacity: 0.3,\n        },\n    },\n})\n\nexport function ActionButton<T extends React.ComponentType<any> = React.ComponentType>(\n    props: ActionButtonProps & PropsOf<T>,\n) {\n    const { width, loading, children, className, style, ...rest } = props\n    const { classes, cx } = useStyles()\n    return (\n        <Button\n            className={cx('actionButton', className, loading ? classes.loading : undefined)}\n            style={{ width, ...style, pointerEvents: loading ? 'none' : undefined }}\n            {...rest}\n            disableElevation\n            disabled={!!(rest.disabled || loading)}>\n            {loading ? (\n                <Box\n                    position=\"absolute\"\n                    width=\"100%\"\n                    height=\"100%\"\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    style={{ opacity: 1 }}>\n                    <LoadingBase />\n                </Box>\n            ) : null}\n            {children}\n        </Button>\n    )\n}\n","import { type GeneratedIconProps, Icons } from '@masknet/icons'\nimport { makeStyles } from '../../UIHelper/index.js'\n\nconst useStyles = makeStyles()((theme) => ({\n    animated: {\n        '@keyframes loadingAnimation': {\n            '0%': {\n                transform: 'rotate(0deg)',\n            },\n            '100%': {\n                transform: 'rotate(360deg)',\n            },\n        },\n        animation: 'loadingAnimation 1s linear infinite',\n    },\n}))\n\nexport function LoadingBase(props: GeneratedIconProps) {\n    const { classes, cx } = useStyles()\n    return <Icons.CircleLoading {...props} className={cx(classes.animated, props.className)} />\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');","import { forwardRef, useRef, memo, useCallback } from 'react'\nimport { keyframes } from 'tss-react'\nimport {\n    SnackbarProvider,\n    type SnackbarProviderProps,\n    type SnackbarKey,\n    useSnackbar,\n    type VariantType,\n    type SnackbarMessage,\n    SnackbarContent,\n    type SnackbarAction,\n    type OptionsObject,\n} from 'notistack'\nimport { Typography, IconButton, alpha } from '@mui/material'\nimport { Close as CloseIcon, Warning as WarningIcon, Info as InfoIcon } from '@mui/icons-material'\nimport { Icons } from '@masknet/icons'\nimport { makeStyles } from '../../UIHelper/index.js'\nimport { MaskColorVar } from '../../CSSVariables/index.js'\nimport { usePortalShadowRoot } from '../../ShadowRoot/index.js'\n\nexport { PopupSnackbarProvider, usePopupCustomSnackbar } from './PopupSnackbar.js'\nexport { SnackbarProvider, useSnackbar } from 'notistack'\nexport type { VariantType, OptionsObject, SnackbarKey, SnackbarMessage } from 'notistack'\n\nexport interface StyleProps {\n    offsetY?: number\n}\n\nconst useStyles = makeStyles<StyleProps, 'title' | 'message'>()((theme, { offsetY }, classNames) => {\n    const spinningAnimationKeyFrames = keyframes`\n        to {\n          transform: rotate(360deg)\n        }\n    `\n    const title = {\n        color: theme.palette.maskColor.main,\n        fontWeight: 700,\n        fontSize: 14,\n        lineHeight: '18px',\n    } as const\n    const message = {\n        color: theme.palette.maskColor.main,\n        fontWeight: 400,\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: 14,\n        lineHeight: '18px',\n        wordBreak: 'break-word',\n        '& > a': {\n            display: 'flex',\n            alignItems: 'center',\n        },\n        '& :focus:not(:focus-visible)': {\n            outline: 0,\n        },\n    } as const\n    const defaultVariant = {\n        background: theme.palette.maskColor.bottom,\n        color: theme.palette.maskColor.main,\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 4px 30px rgba(255, 255, 255, 0.15)'\n                : '0px 4px 30px rgba(0, 0, 0, 0.1)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n\n        [`& .${classNames.message}`]: {\n            color: 'inherit',\n        },\n    }\n    const success = {\n        backgroundColor: theme.palette.maskColor.success,\n        color: theme.palette.maskColor.white,\n        boxShadow: `0px 6px 20px ${alpha(theme.palette.maskColor.success, 0.15)}`,\n        backdropFilter: 'blur(16px)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n        [`& .${classNames.message}`]: {\n            color: alpha(theme.palette.maskColor.white, 0.8),\n            '& svg': {\n                color: theme.palette.maskColor.white,\n            },\n        },\n    } as const\n\n    const error = {\n        background: theme.palette.maskColor.danger,\n        color: theme.palette.maskColor.white,\n        boxShadow: `0px 6px 20px ${alpha(theme.palette.maskColor.danger, 0.15)}`,\n        backdropFilter: 'blur(16px)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n        [`& .${classNames.message}`]: {\n            color: alpha(theme.palette.maskColor.white, 0.8),\n            '& svg': {\n                color: theme.palette.maskColor.white,\n            },\n        },\n    } as const\n\n    const info = {\n        background: theme.palette.maskColor.primary,\n        color: theme.palette.maskColor.white,\n        boxShadow:\n            theme.palette.mode === 'dark'\n                ? '0px 4px 30px rgba(255, 255, 255, 0.15)'\n                : '0px 4px 30px rgba(0, 0, 0, 0.1)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n        [`& .${classNames.message}`]: {\n            color: alpha(theme.palette.maskColor.white, 0.8),\n            '& svg': {\n                color: theme.palette.maskColor.white,\n            },\n        },\n    }\n\n    const warning = {\n        backgroundColor: theme.palette.maskColor.warn,\n        color: theme.palette.maskColor.white,\n        boxShadow: `0px 6px 20px ${alpha(theme.palette.maskColor.warn, 0.15)}`,\n        backdropFilter: 'blur(16px)',\n        [`& .${classNames.title}`]: {\n            color: 'inherit',\n        },\n        [`& .${classNames.message}`]: {\n            color: alpha(theme.palette.maskColor.white, 0.8),\n            '& svg': {\n                color: theme.palette.maskColor.white,\n            },\n        },\n    } as const\n\n    return {\n        root: {\n            zIndex: 9999,\n            transform: typeof offsetY !== 'undefined' ? `translateY(${offsetY}px)` : 'none',\n            color: MaskColorVar.textLight,\n            pointerEvents: 'inherit',\n        },\n        content: {\n            alignItems: 'center',\n            padding: theme.spacing(2),\n            borderRadius: 12,\n            width: 380,\n            flexWrap: 'nowrap !important' as 'nowrap',\n        },\n        // eslint-disable-next-line tss-unused-classes/unused-classes\n        default: defaultVariant,\n        success,\n        error,\n        info,\n        warning,\n        icon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            '& > svg': {\n                width: 24,\n                height: 24,\n            },\n        },\n        spinning: {\n            display: 'flex',\n            animation: `${spinningAnimationKeyFrames} 2s infinite linear`,\n        },\n        action: {\n            marginLeft: 'auto',\n        },\n        closeButton: {\n            color: 'inherit',\n            transform: 'translateY(-10px)',\n        },\n        texts: {\n            marginLeft: theme.spacing(1.5),\n            '& :focus:not(:focus-visible)': {\n                outline: 0,\n            },\n        },\n        title,\n        message,\n    }\n})\n\nexport interface CustomSnackbarContentProps {\n    id: SnackbarKey\n    title: SnackbarMessage\n    message?: string | React.ReactNode\n    icon?: React.ReactNode\n    processing?: boolean\n    variant?: VariantType\n    action?: SnackbarAction\n    offsetY?: number\n    classes?: Partial<ReturnType<typeof useStyles>['classes']>\n}\nconst IconMap: Record<VariantType, React.ReactNode> = {\n    default: <InfoIcon color=\"inherit\" />,\n    success: <Icons.SuccessForSnackBar />,\n    error: <Icons.TransactionFailed />,\n    warning: <WarningIcon color=\"inherit\" />,\n    info: <InfoIcon color=\"inherit\" />,\n}\n\nexport const CustomSnackbarContent = forwardRef<HTMLDivElement, CustomSnackbarContentProps>((props, ref) => {\n    const { classes, cx } = useStyles({ offsetY: props.offsetY }, { props })\n    const snackbar = useSnackbar()\n    const loadingIcon = <Icons.CircleLoading className={classes.spinning} />\n    const variantIcon = props.processing ? loadingIcon : props.variant ? IconMap[props.variant] : null\n    let renderedAction: React.ReactNode = (\n        <IconButton className={classes.closeButton} onClick={() => snackbar.closeSnackbar(props.id)}>\n            <CloseIcon />\n        </IconButton>\n    )\n    if (props.action) {\n        renderedAction = typeof props.action === 'function' ? props.action(props.id) : props.action\n    }\n    return (\n        <SnackbarContent ref={ref} className={cx(classes.content, classes[props.variant!])}>\n            {variantIcon ? <div className={classes.icon}>{variantIcon}</div> : null}\n            <div className={classes.texts}>\n                <Typography className={classes.title} variant=\"h2\">\n                    {props.title}\n                </Typography>\n                {props.message ? (\n                    <Typography className={classes.message} variant=\"body1\">\n                        {props.message}\n                    </Typography>\n                ) : null}\n            </div>\n            <div className={classes.action}>{renderedAction}</div>\n        </SnackbarContent>\n    )\n})\n\nexport const CustomSnackbarProvider = memo<\n    SnackbarProviderProps & {\n        offsetY?: number\n    }\n>(function CustomSnackbarProvider({ offsetY, ...rest }) {\n    const ref = useRef<SnackbarProvider>(null)\n    const { classes } = useStyles({ offsetY })\n    const onDismiss = (key: string | number) => () => {\n        ref.current?.closeSnackbar(key)\n    }\n\n    return usePortalShadowRoot((container) => (\n        <SnackbarProvider\n            ref={ref}\n            maxSnack={30}\n            disableWindowBlurListener\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            hideIconVariant\n            // this is a false positive, SnackbarProvider won't use it like it is a component.\n            // eslint-disable-next-line react/no-unstable-nested-components\n            content={(key, title) => (\n                <CustomSnackbarContent id={key} variant={rest.variant ?? 'default'} title={title} offsetY={offsetY} />\n            )}\n            // eslint-disable-next-line react/no-unstable-nested-components\n            action={(key) => (\n                <IconButton size=\"large\" onClick={onDismiss(key)} sx={{ color: 'inherit' }}>\n                    <CloseIcon color=\"inherit\" />\n                </IconButton>\n            )}\n            classes={{\n                containerRoot: classes.root,\n                variantSuccess: classes.success,\n                variantError: classes.error,\n                variantInfo: classes.info,\n                variantWarning: classes.warning,\n            }}\n            domRoot={container}\n            {...rest}\n        />\n    ))\n})\n\nexport interface ShowSnackbarOptions\n    extends OptionsObject,\n        Pick<CustomSnackbarContentProps, 'message' | 'processing' | 'icon' | 'classes'> {}\n\nexport function useCustomSnackbar() {\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n    const showSnackbar = useCallback(\n        (\n            text: SnackbarMessage,\n            options: ShowSnackbarOptions = {\n                variant: 'default',\n            },\n        ) => {\n            const { processing, message, variant, ...rest } = options\n            return enqueueSnackbar(text, {\n                variant: options.variant,\n                content: (key, title) => {\n                    return (\n                        <CustomSnackbarContent\n                            variant={variant ?? 'default'}\n                            id={key}\n                            title={title}\n                            message={message}\n                            processing={processing}\n                            action={rest.action}\n                            classes={rest.classes}\n                        />\n                    )\n                },\n                ...rest,\n            })\n        },\n        [enqueueSnackbar],\n    )\n\n    return { showSnackbar, closeSnackbar }\n}\n","import { EMPTY_ARRAY, type NetworkPluginID } from '@masknet/shared-base'\nimport { uniqBy } from 'lodash-es'\nimport { useMemo } from 'react'\nimport { useSubscription } from 'use-subscription'\nimport { useWeb3State } from './useWeb3State.js'\n\n/**\n * Bulletin networks and custom networks.\n * There could be duplicate chian id among them, because that's allow to custom networks.\n */\nexport function useNetworks<T extends NetworkPluginID = NetworkPluginID>(pluginID?: T, uniqChainId?: boolean) {\n    const { Network } = useWeb3State(pluginID)\n    const networks = useSubscription(Network?.networks ?? EMPTY_ARRAY)\n    return useMemo(() => {\n        const list = networks.filter((x) => x.network === 'mainnet' || x.isCustomized)\n        return uniqChainId ? uniqBy(list, (x) => x.chainId) : list\n    }, [networks, uniqChainId])\n}\n","import { getRegisteredWeb3Providers } from '@masknet/web3-providers'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport type { Web3Helper } from '@masknet/web3-helpers'\nimport { useChainContext, useNetworkContext } from './useContext.js'\n\n/**\n * Get built in declared provider descriptor\n * @param expectedPluginID\n * @param expectedProviderTypeOrID\n * @returns\n */\nexport function useProviderDescriptor<S extends 'all' | void = void, T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n    expectedProviderTypeOrID?: string,\n): Web3Helper.ProviderDescriptorScope<S, T> | undefined {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    const { providerType } = useChainContext()\n\n    return getRegisteredWeb3Providers(pluginID).find((x) =>\n        [x.type, x.ID].includes(expectedProviderTypeOrID ?? providerType ?? ''),\n    )\n}\n","import { useQuery } from '@tanstack/react-query'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { useWeb3State } from './useWeb3State.js'\n\nexport function useReverseAddress<T extends NetworkPluginID>(pluginID?: T, address?: string, domainOnly?: boolean) {\n    const { NameService } = useWeb3State(pluginID)\n\n    return useQuery({\n        queryKey: ['reverse', address, domainOnly],\n        enabled: !!NameService?.reverse,\n        queryFn: async () => {\n            if (!address) return null\n            return (await NameService?.reverse?.(address, domainOnly)) || null\n        },\n    })\n}\n","import { EMPTY_LIST, type Wallet } from '@masknet/shared-base'\nimport { Providers } from '@masknet/web3-providers'\nimport { ProviderType } from '@masknet/web3-shared-evm'\nimport { useMemo } from 'react'\nimport { usePersistSubscription } from '@masknet/shared-base-ui'\n\nexport function useWallets() {\n    // We got stored Mask wallets only.\n    const wallets = usePersistSubscription(\n        '@@mask-wallets',\n        Providers[ProviderType.MaskWallet].subscription.wallets ?? EMPTY_LIST,\n    )\n\n    return useMemo(() => {\n        return [...wallets]\n            .map((w) => {\n                // Could be serialized by react query persist client\n                if (w.createdAt instanceof Date && w.updatedAt instanceof Date) return w\n                return {\n                    ...w,\n                    createdAt: new Date(w.createdAt),\n                    updatedAt: new Date(w.updatedAt),\n                } as Wallet\n            })\n            .sort((a, b) => {\n                if (a.owner && !b.owner) return 1\n                const timestampA = a.createdAt.getTime()\n                const timestampB = b.createdAt.getTime()\n                if (timestampA - timestampB > 10000) {\n                    return 1\n                } else if (timestampB - timestampA > 10000) {\n                    return -1\n                }\n                const numA = a.name.split('Wallet ')[1]\n                const numB = b.name.split('Wallet ')[1]\n                try {\n                    if (!numA && numB && !Number.isNaN(numB)) return 1\n                    if (!Number.isNaN(numA) && !Number.isNaN(numB)) {\n                        return Number(numA) > Number(numB) ? 1 : -1\n                    } else {\n                        return numB.length - numA.length\n                    }\n                } catch {\n                    return 0\n                }\n            })\n    }, [wallets])\n}\n","import { useMemo } from 'react'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { Web3All } from '@masknet/web3-providers'\nimport type { Connection, ConnectionOptions } from '@masknet/web3-providers/types'\nimport { useNetworkContext } from './useContext.js'\n\nexport function useWeb3Connection<T extends NetworkPluginID = NetworkPluginID>(\n    expectedPluginID?: T,\n    options?: ConnectionOptions<T>,\n) {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    return useMemo(() => Web3All.use(pluginID, options) as Connection<T>, [pluginID, JSON.stringify(options)])\n}\n","import { useMemo } from 'react'\nimport type { NetworkPluginID } from '@masknet/shared-base'\nimport { HubAll } from '@masknet/web3-providers'\nimport type { Hub, HubOptions } from '@masknet/web3-providers/types'\nimport { useNetworkContext } from './useContext.js'\n\nexport function useWeb3Hub<T extends NetworkPluginID = NetworkPluginID>(expectedPluginID?: T, options?: HubOptions<T>) {\n    const { pluginID } = useNetworkContext(expectedPluginID)\n    return useMemo(() => HubAll.use(pluginID, options) as Hub<T>, [pluginID, JSON.stringify(options)])\n}\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","'use client';\nimport * as React from 'react';\n\nconst IsRestoringContext = /*#__PURE__*/React.createContext(false);\nconst useIsRestoring = () => React.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\nexport { IsRestoringProvider, useIsRestoring };\n//# sourceMappingURL=isRestoring.mjs.map\n"],"names":["allPersonas","currentPersona","queryPersonaAvatar","querySocialIdentity","fetchJSON","queryPersonaByProfile","openDashboard","openPopupWindow","signWithPersona","hasPaymentPassword","createPersona","setCurrentPersonaIdentifier","attachProfile","setPluginMinimalModeEnabled","hasHostPermission","requestHostPermission","__setUIContext__","value","useTranslation","PluginTransFieldRender","pluginID","field","t","i18nKey","translate","ns","nsSeparator","defaultValue","fallback","usePluginTransField","startsWith","console","warn","lastRecognizedProfile","currentVisitingProfile","currentNextIDPlatform","currentPersonaIdentifier","getPostURL","share","getUserIdentity","getPostIdFromNewPostToast","postMessage","getSearchedKeyword","connectPersona","__setSiteAdaptorContext__","Identifier","formatPersonaFingerprint","fingerprint","size","length","slice","Math","max","MAX_PERSONA_LIMIT","MAX_PERSONA_NAME_LENGTH","formatPersonaName","nickname","isSameIdentity","identities","reduce","previousValue","T2","key","T1","i1IdentifierText","identifier","toText","i2IdentifierText","toLowerCase","isSamePersona","personas","isSameProfile","profiles","Icons","makeStyles","Box","Typography","memo","useStyles","theme","alert","display","borderRadius","padding","backgroundColor","palette","maskColor","bg","fontSize","alignItems","color","main","backdropFilter","gap","Alert","className","children","open","onClose","rest","classes","cx","Info","Close","onClick","useSubscription","FALSE","TRUE","useWeb3State","useAllowTestnet","Settings","allowTestnet","process","env","NODE_ENV","React","useAsyncFn","delay","ShadowRootTooltip","ActionButton","useCustomSnackbar","useNetworkContext","useChainContext","useNetworkDescriptor","useChainIdValid","RevokeChainContextProvider","useWeb3Others","useWeb3Connection","ProviderType","WalletIcon","useSharedTrans","SelectProviderModal","tooltip","background","common","black","white","maxWidth","arrow","connectWallet","lineHeight","ChainBoundaryWithoutContext","props","expectedPluginID","expectedChainId","expectedAccount","actualNetworkPluginID","switchText","forceShowingWrongNetworkButton","disableConnectWallet","predicate","actualPluginID","actualChainId","undefined","Web3","showSnackbar","account","chainId","providerType","actualProviderType","expectedOthers","expectedAllowTestnet","chainIdValid","expectedChainName","chainResolver","chainName","expectedNetworkDescriptor","expectedChainAllowed","isValidChainId","isPluginIDMatched","isMatched","loading","onSwitchChain","WalletConnect","switchChain","error","Error","message","plugin_wallet_switch_network_title","processing","variant","plugin_wallet_unsupported_chain","network","autoHideDuration","plugin_wallet_switch_chain_failed","renderBox","tips","title","placement","flexDirection","width","hiddenConnectButton","fullWidth","startIcon","Wallet","ActionButtonPromiseProps","plugin_wallet_wrong_network","plugin_wallet_connect_a_wallet","switchButton","disabled","mainIcon","icon","sx","plugin_wallet_change_wallet","plugin_wallet_connect_tips","plugin_wallet_not_support_network","plugin_wallet_switch_network","ChainBoundary","displayName","Link","useCallback","useRef","useState","useCopyToClipboard","copy","CopyButton","text","successText","scoped","copyToClipboard","copied","setCopied","active","setActive","timerRef","handleCopy","ev","stopPropagation","preventDefault","clearTimeout","current","setTimeout","tooltipTitle","iconProps","disableInteractive","underline","component","root","Check","success","Copy","DEFAULT_IMAGES","URL","url","toString","name2Image","name","sum","i","charCodeAt","Avatar","useTheme","margin","dark","backgroundSize","height","Icon","logoURL","label","failed","setFailed","defaultBackgroundImage","showImage","src","imgProps","onError","event","backgroundImage","toUpperCase","ImageIcon","iconFilterColor","style","filter","img","PlatformAvatar","bottomFixed","minHeight","justifyContent","boxShadow","shadow","popup","linkIcon","marginRight","spacing","second","cursor","personaKey","fontWeight","third","PersonaAction","avatar","div","networkIcon","marginLeft","rawPublicKey","PersonaImageIcon","position","alignSelf","badgeIcon","right","bottom","badgeSize","inverse","providerIcon","isBorderColorNotDefault","names","Masks","SingletonModal","WalletConnectQRCodeModal","WalletStatusModal","WalletRiskWarningModal","ConnectWalletModal","LeavePageConfirmModal","ApplicationBoardModal","ApplicationBoardSettingsModal","GasSettingModal","TransactionConfirmModal","TransactionSnackbar","ConfirmModal","ConfirmDialog","SelectNonFungibleContractModal","SelectGasSettingsModal","AddCollectiblesModal","SelectFungibleTokenModal","PersonaSelectPanelModal","ShareSelectNetworkModal","ApplicationSettingTabs","EnhanceableSite","SOCIAL_MEDIA_ICON_MAPPING","Twitter","TwitterX","Facebook","FacebookColored","Minds","Instagram","InstagramColored","OpenSea","OpenSeaColored","Mirror","Localhost","SOCIAL_MEDIA_ROUND_ICON_MAPPING","TwitterXRound","FacebookRound","MindsRound","InstagramRoundColored","RSS3_NFT_SITE_KEY","TWITTER","FACEBOOK","INSTAGRAM","EnhanceableSite_RSS3_NFT_SITE_KEY_map","PERSONA_AVATAR_DB_NAMESPACE","PopupHomeTabType","SocialAccounts","ConnectedWallets","LightColor","primary","primaryContrastText","secondary","secondaryContrastText","input","primaryBackground","primaryBackground2","secondaryBackground","lightBackground","mainBackground","suspensionBackground","normalBackground","twitterBackground","twitterBackgroundHover","twitterInputBackground","twitterButton","twitterButtonText","twitterBlue","twitterBorderLine","twitterSecond","twitterMain","twitterBottom","twitterInfoBackground","twitterInfo","twitterBg","twitterTooltipBg","twitterInput","twitterLine","redMain","redLight","redContrastText","greenMain","greenLight","orangeMain","orangeLight","iconLight","divider","border","borderSecondary","textPrimary","textSecondary","secondaryInfoText","normalText","normalTextLight","infoBackground","warning","blue","textLink","lineLight","lineLighter","textLight","lightestBackground","linkText","twitter","facebook","errorBackground","tooltipBackground","warningBackground","cyberconnectPrimary","errorPlugin","buttonPluginBackground","textPluginColor","buttonPluginColor","DarkColor","kebabCase","getMaskColor","mode","set","cssVar","x","Object","assign","Symbol","toPrimitive","alpha","defineProperty","MaskColorVar","configurable","enumerable","__proto__","Proxy","get","_","p","getOwnPropertyDescriptor","Button","LoadingBase","opacity","pointerEvents","disableElevation","animated","transform","animation","CircleLoading","forwardRef","keyframes","SnackbarProvider","useSnackbar","SnackbarContent","IconButton","CloseIcon","Warning","WarningIcon","InfoIcon","usePortalShadowRoot","PopupSnackbarProvider","usePopupCustomSnackbar","offsetY","classNames","spinningAnimationKeyFrames","wordBreak","outline","defaultVariant","danger","info","zIndex","content","flexWrap","default","spinning","action","closeButton","texts","IconMap","SuccessForSnackBar","TransactionFailed","CustomSnackbarContent","ref","snackbar","loadingIcon","variantIcon","renderedAction","closeSnackbar","id","CustomSnackbarProvider","onDismiss","container","maxSnack","disableWindowBlurListener","anchorOrigin","vertical","horizontal","hideIconVariant","containerRoot","variantSuccess","variantError","variantInfo","variantWarning","domRoot","enqueueSnackbar","options","EMPTY_ARRAY","uniqBy","useMemo","useNetworks","uniqChainId","Network","networks","list","isCustomized","getRegisteredWeb3Providers","useProviderDescriptor","expectedProviderTypeOrID","find","type","ID","includes","useQuery","useReverseAddress","address","domainOnly","NameService","queryKey","enabled","reverse","queryFn","EMPTY_LIST","Providers","usePersistSubscription","useWallets","wallets","MaskWallet","subscription","map","w","createdAt","Date","updatedAt","sort","a","b","owner","timestampA","getTime","timestampB","numA","split","numB","Number","isNaN","Web3All","use","JSON","stringify","HubAll","useWeb3Hub"],"sourceRoot":"","x_google_ignoreList":[20,21,29,30,31]}